var {:scalar} alloc: int;

var {:scalar} sdv_inside_init_entrypoint: int;

var {:scalar} LockDepth: int;

var {:scalar} yogi_error: int;

var {:scalar} t: int;

var {:scalar} Mem_T.CurrentStackLocation_unnamed_tag_6: [int]int;

var {:scalar} Mem_T.DeviceExtension__DEVICE_OBJECT: [int]int;

var {:scalar} Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION: [int]int;

var {:scalar} Mem_T.LogStart__DEBUG_LOG: [int]int;

var {:scalar} Mem_T.MinorFunction__IO_STACK_LOCATION: [int]int;

var {:scalar} Mem_T.PVOID: [int]int;

var {:scalar} Mem_T.PWPP_PROJECT_CONTROL_BLOCK: [int]int;

var {:scalar} Mem_T.P_DEVICE_OBJECT: [int]int;

var {:scalar} Mem_T.P_IRBIRP: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WPP_GLOBAL_Control: int;

const EventTraceConfigGuid: int;

const BUS1394_CLASS_GUID: int;

const WmiScsiAddressGuid: int;

const GUID_DEVINTERFACE_STORAGEPORT: int;

const GUID_DEVINTERFACE_FLOPPY: int;

const GUID_DEVICEDUMP_STORAGE_DEVICE: int;

const GUID_DEVINTERFACE_WRITEONCEDISK: int;

const WPP_TRACE_CONTROL_NULL_GUID: int;

const GUID_DEVINTERFACE_TAPE: int;

const GUID_DEVINTERFACE_VOLUME: int;

const GUID_DEVINTERFACE_CDCHANGER: int;

const GUID_DEVINTERFACE_MEDIUMCHANGER: int;

const ScsiRawInterfaceGuid: int;

const GUID_DEVINTERFACE_VMLUN: int;

const DefaultTraceSecurityGuid: int;

const GUID_DEVICEDUMP_DRIVER_STORAGE_PORT: int;

const GUID_DEVINTERFACE_PARTITION: int;

const GUID_DEVINTERFACE_CDROM: int;

const GUID_DEVINTERFACE_HIDDEN_VOLUME: int;

const GUID_DEVINTERFACE_DISK: int;

const SystemTraceControlGuid: int;

const EventTraceGuid: int;

const GUID_DEVINTERFACE_SES: int;

const WPP_ThisDir_CTLGUID_wppCtlGuid: int;

const DATAID_SBP_LUN_INFORMATION: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const p_sdv_fx_dev_object: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_start_irp_already_issued: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_harnessStackLocation: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_fx_dev_object: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const sdv_cancelFptr: int;

const KeTickCount: int;

const Sbp2LogLevel: int;

procedure {:origName "WPP_SF_qDDD"} WPP_SF_qDDD(actual_Logger: int, actual_id: int, actual_TraceGuid: int, actual_s_p_e_c_i_a_l_1: int, actual_s_p_e_c_i_a_l_2: int, actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDDD"} WPP_SF_qDDD(actual_Logger: int, actual_id: int, actual_TraceGuid: int, actual_s_p_e_c_i_a_l_1: int, actual_s_p_e_c_i_a_l_2: int, actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int)
{
  var {:pointer} TraceGuid: int;
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(4);
    TraceGuid := actual_TraceGuid;
    return;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var {:scalar} Tmp_4: int;
  var vslice_dummy_var_1: int;

  anon0:
    call {:si_unique_call 1} Tmp_4 := __HAVOC_malloc(4);
    call {:si_unique_call 2} vslice_dummy_var_1 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_4 != 0;
    assume Tmp_4 > 0;
    return;
}



procedure {:origName "WPP_SF_qqDD"} WPP_SF_qqDD(actual_Logger_1: int, actual_id_1: int, actual_TraceGuid_1: int, actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int, actual_s_p_e_c_i_a_l_7: int, actual_s_p_e_c_i_a_l_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qqDD"} WPP_SF_qqDD(actual_Logger_1: int, actual_id_1: int, actual_TraceGuid_1: int, actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int, actual_s_p_e_c_i_a_l_7: int, actual_s_p_e_c_i_a_l_8: int)
{
  var {:pointer} TraceGuid_1: int;
  var vslice_dummy_var_2: int;

  anon0:
    call {:si_unique_call 3} vslice_dummy_var_2 := __HAVOC_malloc(4);
    TraceGuid_1 := actual_TraceGuid_1;
    return;
}



procedure {:origName "WPP_SF_qdD"} WPP_SF_qdD(actual_Logger_2: int, actual_id_2: int, actual_TraceGuid_2: int, actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int, actual_s_p_e_c_i_a_l_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qdD"} WPP_SF_qdD(actual_Logger_2: int, actual_id_2: int, actual_TraceGuid_2: int, actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int, actual_s_p_e_c_i_a_l_11: int)
{
  var {:pointer} TraceGuid_2: int;
  var vslice_dummy_var_3: int;

  anon0:
    call {:si_unique_call 4} vslice_dummy_var_3 := __HAVOC_malloc(4);
    TraceGuid_2 := actual_TraceGuid_2;
    return;
}



procedure {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_13: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_13 == -1073741670 || Tmp_13 == 0 || Tmp_13 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_13: int)
{
  var {:scalar} i: int;
  var {:pointer} Tmp_14: int;
  var {:pointer} Tmp_15: int;
  var {:pointer} Tmp_16: int;
  var {:scalar} Tmp_17: int;
  var {:pointer} Tmp_18: int;
  var {:scalar} u: int;
  var {:scalar} Tmp_19: int;
  var {:pointer} Tmp_20: int;
  var {:scalar} sdv_4: int;
  var {:pointer} Tmp_21: int;
  var {:pointer} pData: int;
  var {:pointer} Tmp_22: int;
  var {:scalar} ulUnicode: int;
  var {:scalar} Tmp_23: int;
  var {:scalar} Tmp_24: int;
  var {:scalar} sdv_6: int;
  var {:scalar} Tmp_26: int;
  var {:pointer} sdv_7: int;
  var {:scalar} Tmp_27: int;
  var {:scalar} dataLength: int;
  var {:pointer} Tmp_28: int;
  var {:pointer} sdv_9: int;
  var {:pointer} Tmp_29: int;
  var {:scalar} Tmp_31: int;
  var {:pointer} Tmp_33: int;
  var {:scalar} Tmp_36: int;
  var {:scalar} Tmp_37: int;
  var {:pointer} Tmp_38: int;
  var {:scalar} status: int;
  var {:pointer} Tmp_39: int;
  var {:scalar} uChar: int;
  var {:scalar} Tmp_40: int;
  var {:scalar} Tmp_41: int;
  var {:pointer} TextLeaf: int;
  var {:pointer} uniString: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_4127: int;
  var vslice_dummy_var_4128: int;

  anon0:
    call {:si_unique_call 5} u := __HAVOC_malloc(20);
    call {:si_unique_call 6} vslice_dummy_var_4 := __HAVOC_malloc(12);
    TextLeaf := actual_TextLeaf;
    uniString := actual_uniString;
    call {:si_unique_call 7} Tmp_20 := __HAVOC_malloc(4);
    call {:si_unique_call 8} Tmp_22 := __HAVOC_malloc(4);
    call {:si_unique_call 9} Tmp_28 := __HAVOC_malloc(4);
    call {:si_unique_call 10} Tmp_29 := __HAVOC_malloc(4);
    call {:si_unique_call 11} Tmp_38 := __HAVOC_malloc(4);
    status := 0;
    pData := 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L20;

  L20:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_29;
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_33;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_17;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc vslice_dummy_var_4127;
    call {:si_unique_call 12} WPP_SF_S(Tmp_17, 122, Tmp_33, vslice_dummy_var_4127);
    goto L21;

  L21:
    Tmp_13 := status;
    goto L1;

  L1:
    return;

  anon59_Then:
    goto L21;

  anon76_Then:
    goto L21;

  anon58_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L21;

  anon75_Then:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    dataLength := 0;
    goto L37;

  L37:
    ulUnicode := sdv_6;
    Tmp_37 := dataLength * 4 + 2;
    call {:si_unique_call 13} sdv_7 := ExAllocatePoolWithTag(512, Tmp_37, 846226003);
    pData := sdv_7;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} pData == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_28;
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_39;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_36;
    call {:si_unique_call 14} WPP_SF_(Tmp_36, 123, Tmp_39);
    goto L138;

  L138:
    status := -1073741670;
    goto L108;

  L108:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} pData != 0;
    call {:si_unique_call 15} sdv_ExFreePool(0);
    goto L116;

  L116:
    Tmp_13 := status;
    goto L1;

  anon69_Then:
    assume {:partition} pData == 0;
    goto L116;

  anon74_Then:
    goto L138;

  anon84_Then:
    goto L138;

  anon73_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L138;

  anon78_Then:
    assume {:partition} pData != 0;
    Tmp_31 := dataLength * 4 + 2;
    call {:si_unique_call 16} sdv_RtlZeroMemory(0, Tmp_31);
    Tmp_40 := dataLength * 4;
    call {:si_unique_call 17} sdv_RtlCopyMemory(0, 0, Tmp_40);
    i := 0;
    goto L60;

  L60:
    call {:si_unique_call 18} i, Tmp_14, Tmp_16, Tmp_20, Tmp_21, Tmp_26, Tmp_27, uChar := Sbp2_ProcessTextualDescriptor_loop_L60(i, Tmp_14, Tmp_16, Tmp_20, Tmp_21, pData, ulUnicode, Tmp_26, Tmp_27, dataLength, uChar);
    goto L60_last;

  L60_last:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} dataLength * 4 > i;
    Tmp_16 := pData;
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    havoc uChar;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} uChar != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} uChar == 44;
    goto L70;

  L70:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_20;
    assume {:nonnull} Tmp_20 != 0;
    assume Tmp_20 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    Tmp_27 := uChar;
    havoc Tmp_21;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_26;
    call {:si_unique_call 19} WPP_SF_D(Tmp_26, 124, Tmp_21, Tmp_27);
    goto L71;

  L71:
    Tmp_14 := pData;
    assume {:nonnull} Tmp_14 != 0;
    assume Tmp_14 > 0;
    goto L80;

  L80:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    i := i + 1;
    goto L81;

  L81:
    i := i + 1;
    goto L81_dummy;

  L81_dummy:
    assume false;
    return;

  anon65_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    goto L81;

  anon64_Then:
    goto L71;

  anon80_Then:
    goto L71;

  anon63_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L71;

  anon61_Then:
    assume {:partition} uChar != 44;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} 32 <= uChar;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} uChar <= 127;
    goto L80;

  anon66_Then:
    assume {:partition} 127 < uChar;
    goto L70;

  anon62_Then:
    assume {:partition} uChar < 32;
    goto L70;

  anon79_Then:
    assume {:partition} uChar == 0;
    goto L61;

  L61:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_24;
    call {:si_unique_call 20} sdv_9 := ExAllocatePoolWithTag(512, Tmp_24, 846226003);
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_38;
    assume {:nonnull} Tmp_38 != 0;
    assume Tmp_38 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc Tmp_15;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_19;
    call {:si_unique_call 21} WPP_SF_(Tmp_19, 125, Tmp_15);
    goto L128;

  L128:
    status := -1073741670;
    goto L108;

  anon72_Then:
    goto L128;

  anon83_Then:
    goto L128;

  anon71_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L128;

  anon81_Then:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_23;
    call {:si_unique_call 22} sdv_RtlZeroMemory(0, Tmp_23);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    call {:si_unique_call 23} vslice_dummy_var_5 := corral_nondet();
    goto L107;

  L107:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_22;
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_18;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_41;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc vslice_dummy_var_4128;
    call {:si_unique_call 24} WPP_SF_S(Tmp_41, 126, Tmp_18, vslice_dummy_var_4128);
    goto L108;

  anon70_Then:
    goto L108;

  anon82_Then:
    goto L108;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L108;

  anon67_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    call {:si_unique_call 25} RtlInitAnsiString(0, 0);
    call {:si_unique_call 26} status := RtlAnsiStringToUnicodeString(0, 0, 0);
    goto L107;

  anon60_Then:
    assume {:partition} i >= dataLength * 4;
    goto L61;

  anon77_Then:
    assume {:nonnull} u != 0;
    assume u > 0;
    havoc dataLength;
    goto L37;

  anon57_Then:
    goto L20;
}



procedure {:origName "WPP_SF_qDddD"} WPP_SF_qDddD(actual_Logger_3: int, actual_id_3: int, actual_TraceGuid_3: int, actual_s_p_e_c_i_a_l_12: int, actual_s_p_e_c_i_a_l_13: int, actual_s_p_e_c_i_a_l_14: int, actual_s_p_e_c_i_a_l_15: int, actual_s_p_e_c_i_a_l_16: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDddD"} WPP_SF_qDddD(actual_Logger_3: int, actual_id_3: int, actual_TraceGuid_3: int, actual_s_p_e_c_i_a_l_12: int, actual_s_p_e_c_i_a_l_13: int, actual_s_p_e_c_i_a_l_14: int, actual_s_p_e_c_i_a_l_15: int, actual_s_p_e_c_i_a_l_16: int)
{
  var {:pointer} TraceGuid_3: int;
  var vslice_dummy_var_6: int;

  anon0:
    call {:si_unique_call 27} vslice_dummy_var_6 := __HAVOC_malloc(4);
    TraceGuid_3 := actual_TraceGuid_3;
    return;
}



procedure {:origName "Sbp2GetConfigPacket"} Sbp2GetConfigPacket(actual_FdoExtension: int, actual_Packet: int, actual_Generation: int) returns (Tmp_61: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GetConfigPacket"} Sbp2GetConfigPacket(actual_FdoExtension: int, actual_Packet: int, actual_Generation: int) returns (Tmp_61: int)
{
  var {:pointer} Tmp_62: int;
  var {:pointer} Tmp_63: int;
  var {:pointer} unitDependentDirectory: int;
  var {:pointer} Tmp_64: int;
  var {:pointer} Tmp_65: int;
  var {:pointer} Tmp_66: int;
  var {:scalar} Tmp_67: int;
  var {:pointer} Tmp_68: int;
  var {:pointer} Tmp_69: int;
  var {:pointer} pdoExtension_1: int;
  var {:pointer} Tmp_70: int;
  var {:pointer} Tmp_71: int;
  var {:pointer} Tmp_72: int;
  var {:pointer} Tmp_73: int;
  var {:pointer} Tmp_74: int;
  var {:pointer} Tmp_75: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:pointer} Tmp_78: int;
  var {:pointer} Tmp_79: int;
  var {:pointer} Tmp_80: int;
  var {:pointer} Tmp_81: int;
  var {:pointer} Tmp_82: int;
  var {:pointer} Tmp_84: int;
  var {:pointer} Tmp_85: int;
  var {:pointer} Tmp_86: int;
  var {:pointer} Tmp_87: int;
  var {:pointer} Tmp_88: int;
  var {:pointer} Tmp_89: int;
  var {:scalar} Tmp_90: int;
  var {:scalar} Tmp_91: int;
  var {:pointer} Tmp_92: int;
  var {:pointer} Tmp_93: int;
  var {:pointer} Tmp_94: int;
  var {:pointer} Tmp_95: int;
  var {:pointer} Tmp_96: int;
  var {:scalar} Tmp_97: int;
  var {:pointer} Tmp_98: int;
  var {:pointer} Tmp_99: int;
  var {:pointer} Tmp_100: int;
  var {:scalar} Tmp_101: int;
  var {:pointer} vendorLeaf: int;
  var {:scalar} Tmp_102: int;
  var {:pointer} Tmp_103: int;
  var {:pointer} unitDirectory: int;
  var {:scalar} Tmp_104: int;
  var {:pointer} Tmp_105: int;
  var {:scalar} Tmp_106: int;
  var {:scalar} status_2: int;
  var {:pointer} Tmp_107: int;
  var {:pointer} Tmp_108: int;
  var {:pointer} Tmp_109: int;
  var {:pointer} Tmp_110: int;
  var {:pointer} Tmp_111: int;
  var {:pointer} Tmp_112: int;
  var {:pointer} modelLeaf: int;
  var {:pointer} Tmp_113: int;
  var {:pointer} Tmp_114: int;
  var {:pointer} FdoExtension: int;
  var {:pointer} Packet: int;
  var {:pointer} Generation: int;
  var vslice_dummy_var_4129: int;
  var vslice_dummy_var_4130: int;
  var vslice_dummy_var_4131: int;
  var vslice_dummy_var_4132: int;
  var vslice_dummy_var_4133: int;
  var vslice_dummy_var_4134: int;
  var vslice_dummy_var_4135: int;
  var vslice_dummy_var_4136: int;

  anon0:
    FdoExtension := actual_FdoExtension;
    Packet := actual_Packet;
    Generation := actual_Generation;
    call {:si_unique_call 28} Tmp_62 := __HAVOC_malloc(4);
    call {:si_unique_call 29} Tmp_66 := __HAVOC_malloc(4);
    call {:si_unique_call 30} Tmp_77 := __HAVOC_malloc(4);
    call {:si_unique_call 31} Tmp_79 := __HAVOC_malloc(4);
    call {:si_unique_call 32} Tmp_103 := __HAVOC_malloc(4);
    call {:si_unique_call 33} Tmp_107 := __HAVOC_malloc(4);
    call {:si_unique_call 34} Tmp_108 := __HAVOC_malloc(4);
    call {:si_unique_call 35} Tmp_112 := __HAVOC_malloc(4);
    pdoExtension_1 := FdoExtension;
    unitDirectory := 0;
    unitDependentDirectory := 0;
    vendorLeaf := 0;
    modelLeaf := 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_94;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_98;
    assume {:nonnull} Tmp_98 != 0;
    assume Tmp_98 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_82;
    assume {:nonnull} Tmp_82 != 0;
    assume Tmp_82 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_110;
    assume {:nonnull} Tmp_110 != 0;
    assume Tmp_110 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_100;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_111;
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    call {:si_unique_call 36} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} status_2 < 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_77;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    havoc Tmp_88;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_106;
    call {:si_unique_call 37} WPP_SF_D(Tmp_106, 50, Tmp_88, status_2);
    goto L66;

  L66:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} unitDirectory != 0;
    call {:si_unique_call 38} sdv_ExFreePool(0);
    goto L67;

  L67:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} unitDependentDirectory != 0;
    call {:si_unique_call 39} sdv_ExFreePool(0);
    goto L71;

  L71:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} vendorLeaf != 0;
    call {:si_unique_call 40} sdv_ExFreePool(0);
    goto L75;

  L75:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} modelLeaf != 0;
    call {:si_unique_call 41} sdv_ExFreePool(0);
    goto L79;

  L79:
    Tmp_61 := status_2;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon93_Then:
    assume {:partition} modelLeaf == 0;
    goto L79;

  anon92_Then:
    assume {:partition} vendorLeaf == 0;
    goto L75;

  anon91_Then:
    assume {:partition} unitDependentDirectory == 0;
    goto L71;

  anon90_Then:
    assume {:partition} unitDirectory == 0;
    goto L67;

  anon111_Then:
    goto L66;

  anon126_Then:
    goto L66;

  anon110_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L66;

  anon85_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_73;
    assume {:nonnull} Tmp_73 != 0;
    assume Tmp_73 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_66;
    assume {:nonnull} Tmp_66 != 0;
    assume Tmp_66 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    havoc Tmp_76;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_91;
    call {:si_unique_call 42} WPP_SF_q(Tmp_91, 52, Tmp_76, FdoExtension);
    goto L182;

  L182:
    status_2 := -1073741621;
    goto L66;

  anon109_Then:
    goto L182;

  anon125_Then:
    goto L182;

  anon108_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L182;

  anon113_Then:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_75;
    assume {:nonnull} Tmp_75 != 0;
    assume Tmp_75 > 0;
    havoc vslice_dummy_var_4129;
    call {:si_unique_call 43} unitDirectory := ExAllocatePoolWithTag(512, vslice_dummy_var_4129, -464166317);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} unitDirectory == 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_112;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    havoc Tmp_81;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_67;
    call {:si_unique_call 44} WPP_SF_(Tmp_67, 51, Tmp_81);
    goto L172;

  L172:
    status_2 := -1073741670;
    goto L66;

  anon107_Then:
    goto L172;

  anon124_Then:
    goto L172;

  anon106_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L172;

  anon86_Then:
    assume {:partition} unitDirectory != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_69;
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    havoc vslice_dummy_var_4130;
    call {:si_unique_call 45} sdv_RtlZeroMemory(0, vslice_dummy_var_4130);
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_99;
    assume {:nonnull} Tmp_99 != 0;
    assume Tmp_99 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_114;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    havoc vslice_dummy_var_4131;
    call {:si_unique_call 46} unitDependentDirectory := ExAllocatePoolWithTag(512, vslice_dummy_var_4131, -464166317);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} unitDependentDirectory == 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_108;
    assume {:nonnull} Tmp_108 != 0;
    assume Tmp_108 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc Tmp_74;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_90;
    call {:si_unique_call 47} WPP_SF_(Tmp_90, 53, Tmp_74);
    goto L57;

  L57:
    status_2 := -1073741670;
    goto L66;

  anon89_Then:
    goto L57;

  anon123_Then:
    goto L57;

  anon88_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L57;

  anon87_Then:
    assume {:partition} unitDependentDirectory != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_78;
    assume {:nonnull} Tmp_78 != 0;
    assume Tmp_78 > 0;
    havoc vslice_dummy_var_4132;
    call {:si_unique_call 48} sdv_RtlZeroMemory(0, vslice_dummy_var_4132);
    goto L44;

  L44:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_64;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_86;
    assume {:nonnull} Tmp_86 != 0;
    assume Tmp_86 > 0;
    havoc vslice_dummy_var_4133;
    call {:si_unique_call 49} vendorLeaf := ExAllocatePoolWithTag(512, vslice_dummy_var_4133, -329948589);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} vendorLeaf == 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_103;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc Tmp_72;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_102;
    call {:si_unique_call 50} WPP_SF_(Tmp_102, 54, Tmp_72);
    goto L96;

  L96:
    status_2 := -1073741670;
    goto L66;

  anon96_Then:
    goto L96;

  anon122_Then:
    goto L96;

  anon95_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L96;

  anon94_Then:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_89;
    assume {:nonnull} Tmp_89 != 0;
    assume Tmp_89 > 0;
    havoc vslice_dummy_var_4134;
    call {:si_unique_call 51} sdv_RtlZeroMemory(0, vslice_dummy_var_4134);
    goto L83;

  L83:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_96;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_87;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    havoc vslice_dummy_var_4135;
    call {:si_unique_call 52} modelLeaf := ExAllocatePoolWithTag(512, vslice_dummy_var_4135, -329948589);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} modelLeaf == 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_107;
    assume {:nonnull} Tmp_107 != 0;
    assume Tmp_107 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_113;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_104;
    call {:si_unique_call 53} WPP_SF_(Tmp_104, 55, Tmp_113);
    goto L118;

  L118:
    status_2 := -1073741670;
    goto L66;

  anon99_Then:
    goto L118;

  anon121_Then:
    goto L118;

  anon98_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L118;

  anon97_Then:
    assume {:partition} modelLeaf != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_95;
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    havoc vslice_dummy_var_4136;
    call {:si_unique_call 54} sdv_RtlZeroMemory(0, vslice_dummy_var_4136);
    goto L105;

  L105:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_84;
    assume {:nonnull} Tmp_84 != 0;
    assume Tmp_84 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_80;
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    call {:si_unique_call 55} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} status_2 < 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_79;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    havoc Tmp_85;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_101;
    call {:si_unique_call 56} WPP_SF_qD(Tmp_101, 56, Tmp_85, FdoExtension, status_2);
    goto L66;

  anon105_Then:
    goto L66;

  anon120_Then:
    goto L66;

  anon104_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L66;

  anon100_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_109;
    assume {:nonnull} Generation != 0;
    assume Generation > 0;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_65;
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_63;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_93;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_71;
    assume {:nonnull} Tmp_71 != 0;
    assume Tmp_71 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_68;
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_70;
    assume {:nonnull} Tmp_70 != 0;
    assume Tmp_70 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_105;
    assume {:nonnull} Tmp_105 != 0;
    assume Tmp_105 > 0;
    call {:si_unique_call 57} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} yogi_error != 1;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} status_2 < 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_62;
    assume {:nonnull} Tmp_62 != 0;
    assume Tmp_62 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    havoc Tmp_92;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_97;
    call {:si_unique_call 58} WPP_SF_qD(Tmp_97, 57, Tmp_92, FdoExtension, status_2);
    goto L66;

  anon103_Then:
    goto L66;

  anon119_Then:
    goto L66;

  anon102_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L66;

  anon101_Then:
    assume {:partition} 0 <= status_2;
    Tmp_61 := status_2;
    goto L1;

  anon118_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L105;

  anon115_Then:
    goto L83;

  anon114_Then:
    goto L44;

  anon112_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "WPP_SF_qDDDDDd"} WPP_SF_qDDDDDd(actual_Logger_4: int, actual_id_4: int, actual_TraceGuid_4: int, actual_s_p_e_c_i_a_l_17: int, actual_s_p_e_c_i_a_l_18: int, actual_s_p_e_c_i_a_l_19: int, actual_s_p_e_c_i_a_l_20: int, actual_s_p_e_c_i_a_l_21: int, actual_s_p_e_c_i_a_l_22: int, actual_s_p_e_c_i_a_l_23: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDDDDDd"} WPP_SF_qDDDDDd(actual_Logger_4: int, actual_id_4: int, actual_TraceGuid_4: int, actual_s_p_e_c_i_a_l_17: int, actual_s_p_e_c_i_a_l_18: int, actual_s_p_e_c_i_a_l_19: int, actual_s_p_e_c_i_a_l_20: int, actual_s_p_e_c_i_a_l_21: int, actual_s_p_e_c_i_a_l_22: int, actual_s_p_e_c_i_a_l_23: int)
{
  var {:pointer} TraceGuid_4: int;
  var vslice_dummy_var_7: int;

  anon0:
    call {:si_unique_call 59} vslice_dummy_var_7 := __HAVOC_malloc(4);
    TraceGuid_4 := actual_TraceGuid_4;
    return;
}



procedure {:origName "WPP_SF_Dq"} WPP_SF_Dq(actual_Logger_5: int, actual_id_5: int, actual_TraceGuid_5: int, actual_s_p_e_c_i_a_l_24: int, actual_s_p_e_c_i_a_l_25: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_Dq"} WPP_SF_Dq(actual_Logger_5: int, actual_id_5: int, actual_TraceGuid_5: int, actual_s_p_e_c_i_a_l_24: int, actual_s_p_e_c_i_a_l_25: int)
{
  var {:pointer} TraceGuid_5: int;
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 60} vslice_dummy_var_8 := __HAVOC_malloc(4);
    TraceGuid_5 := actual_TraceGuid_5;
    return;
}



procedure {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_FdoExtension_2: int, actual_Sbp2Req: int) returns (Tmp_236: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_FdoExtension_2: int, actual_Sbp2Req: int) returns (Tmp_236: int)
{
  var {:pointer} Tmp_237: int;
  var {:pointer} Tmp_238: int;
  var {:pointer} Tmp_239: int;
  var {:scalar} Tmp_240: int;
  var {:scalar} Tmp_241: int;
  var {:pointer} Tmp_242: int;
  var {:scalar} Tmp_243: int;
  var {:pointer} Tmp_244: int;
  var {:scalar} Tmp_245: int;
  var {:pointer} Tmp_246: int;
  var {:pointer} Tmp_247: int;
  var {:pointer} Tmp_248: int;
  var {:scalar} sdv_49: int;
  var {:pointer} Tmp_249: int;
  var {:pointer} Tmp_250: int;
  var {:pointer} Tmp_251: int;
  var {:pointer} Tmp_252: int;
  var {:scalar} dependentLength: int;
  var {:pointer} sdv_51: int;
  var {:scalar} Tmp_253: int;
  var {:pointer} Tmp_254: int;
  var {:scalar} Tmp_256: int;
  var {:pointer} Tmp_257: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Tmp_259: int;
  var {:pointer} Tmp_260: int;
  var {:scalar} sdv_53: int;
  var {:pointer} Tmp_261: int;
  var {:pointer} Tmp_262: int;
  var {:pointer} Tmp_263: int;
  var {:scalar} Tmp_264: int;
  var {:scalar} Tmp_265: int;
  var {:pointer} Tmp_266: int;
  var {:scalar} Tmp_267: int;
  var {:scalar} sdv_55: int;
  var {:pointer} Tmp_268: int;
  var {:scalar} Tmp_269: int;
  var {:scalar} Tmp_270: int;
  var {:scalar} Tmp_271: int;
  var {:scalar} tmp: int;
  var {:pointer} Tmp_272: int;
  var {:pointer} Tmp_273: int;
  var {:pointer} Tmp_274: int;
  var {:scalar} sdv_56: int;
  var {:scalar} i_1: int;
  var {:pointer} Tmp_275: int;
  var {:pointer} genPacket: int;
  var {:pointer} Tmp_276: int;
  var {:scalar} Tmp_278: int;
  var {:pointer} getConfigInfo: int;
  var {:scalar} Tmp_279: int;
  var {:scalar} Tmp_280: int;
  var {:pointer} Tmp_281: int;
  var {:pointer} Tmp_282: int;
  var {:scalar} j: int;
  var {:scalar} Tmp_284: int;
  var {:scalar} sdv_57: int;
  var {:pointer} Tmp_285: int;
  var {:pointer} Tmp_286: int;
  var {:scalar} Tmp_287: int;
  var {:scalar} sdv_58: int;
  var {:scalar} unitDirEntries: int;
  var {:pointer} Tmp_289: int;
  var {:pointer} Tmp_290: int;
  var {:pointer} Tmp_292: int;
  var {:dopa} {:scalar} currentGeneration: int;
  var {:scalar} Tmp_293: int;
  var {:pointer} sdv_59: int;
  var {:pointer} Tmp_294: int;
  var {:pointer} Tmp_295: int;
  var {:pointer} vendorLeaf_1: int;
  var {:pointer} Tmp_296: int;
  var {:pointer} Tmp_298: int;
  var {:scalar} sdv_60: int;
  var {:scalar} status_6: int;
  var {:scalar} sdv_61: int;
  var {:pointer} Tmp_301: int;
  var {:scalar} offset: int;
  var {:pointer} modelLeaf_1: int;
  var {:pointer} Tmp_302: int;
  var {:scalar} Tmp_303: int;
  var {:pointer} unitDependentDirectory_1: int;
  var {:scalar} sdv_64: int;
  var {:scalar} sdv_65: int;
  var {:pointer} Tmp_304: int;
  var {:scalar} Tmp_305: int;
  var {:scalar} sdv_67: int;
  var {:pointer} Tmp_306: int;
  var {:scalar} sdv_68: int;
  var {:scalar} Tmp_307: int;
  var {:scalar} cromOffset: int;
  var {:pointer} Tmp_308: int;
  var {:pointer} Tmp_309: int;
  var {:scalar} Tmp_310: int;
  var {:pointer} Tmp_312: int;
  var {:pointer} Tmp_313: int;
  var {:scalar} directoryLength: int;
  var {:pointer} sdv_69: int;
  var {:pointer} Tmp_314: int;
  var {:pointer} Tmp_315: int;
  var {:pointer} Tmp_316: int;
  var {:scalar} modelIdCount: int;
  var {:scalar} Tmp_317: int;
  var {:scalar} dirInfoQuad: int;
  var {:pointer} Tmp_318: int;
  var {:scalar} oldIrql: int;
  var {:scalar} devListSize: int;
  var {:scalar} firstOne: int;
  var {:pointer} Tmp_319: int;
  var {:scalar} sdv_71: int;
  var {:pointer} Tmp_320: int;
  var {:pointer} Tmp_321: int;
  var {:pointer} Tmp_322: int;
  var {:scalar} sdv_72: int;
  var {:pointer} Tmp_323: int;
  var {:scalar} directoryLocation: int;
  var {:pointer} Tmp_324: int;
  var {:scalar} sbp2Device: int;
  var {:pointer} Tmp_325: int;
  var {:pointer} firstDevInfo: int;
  var {:scalar} Tmp_326: int;
  var {:pointer} Tmp_327: int;
  var {:pointer} Tmp_329: int;
  var {:scalar} sdv_76: int;
  var {:pointer} ModelLeaf: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} ModelLeaf_1: int;
  var {:scalar} sdv_77: int;
  var {:scalar} Tmp_332: int;
  var {:pointer} Tmp_333: int;
  var {:pointer} Tmp_334: int;
  var {:pointer} Tmp_335: int;
  var {:scalar} Tmp_336: int;
  var {:scalar} Tmp_337: int;
  var {:scalar} Tmp_338: int;
  var {:scalar} Tmp_339: int;
  var {:pointer} Tmp_340: int;
  var {:pointer} Tmp_341: int;
  var {:scalar} Tmp_342: int;
  var {:pointer} Tmp_343: int;
  var {:pointer} devInfo: int;
  var {:pointer} Tmp_344: int;
  var {:scalar} sdv_80: int;
  var {:scalar} sdv_81: int;
  var {:scalar} Tmp_345: int;
  var {:pointer} buffer: int;
  var {:scalar} Tmp_346: int;
  var {:scalar} retries: int;
  var {:scalar} dependentLocation: int;
  var {:scalar} Tmp_347: int;
  var {:scalar} Tmp_348: int;
  var {:pointer} Tmp_349: int;
  var {:pointer} unitDirectory_1: int;
  var {:pointer} ModelLeaf_2: int;
  var {:pointer} packet_1: int;
  var {:pointer} Tmp_350: int;
  var {:pointer} Tmp_351: int;
  var {:pointer} info: int;
  var {:scalar} Tmp_352: int;
  var {:pointer} Tmp_353: int;
  var {:scalar} Tmp_354: int;
  var {:pointer} FdoExtension_2: int;
  var {:pointer} Sbp2Req: int;
  var boogieTmp: int;
  var vslice_dummy_var_4137: int;
  var vslice_dummy_var_4138: int;
  var vslice_dummy_var_4139: int;
  var vslice_dummy_var_4140: int;
  var vslice_dummy_var_4141: int;
  var vslice_dummy_var_4142: int;
  var vslice_dummy_var_4143: int;

  anon0:
    call {:si_unique_call 61} genPacket := __HAVOC_malloc(4);
    call {:si_unique_call 62} currentGeneration := __HAVOC_malloc(4);
    call {:si_unique_call 63} cromOffset := __HAVOC_malloc(16);
    call {:si_unique_call 64} directoryLocation := __HAVOC_malloc(16);
    call {:si_unique_call 65} ModelLeaf := __HAVOC_malloc(4);
    call {:si_unique_call 66} ModelLeaf_1 := __HAVOC_malloc(4);
    call {:si_unique_call 67} dependentLocation := __HAVOC_malloc(16);
    call {:si_unique_call 68} ModelLeaf_2 := __HAVOC_malloc(4);
    call {:si_unique_call 69} packet_1 := __HAVOC_malloc(4);
    FdoExtension_2 := actual_FdoExtension_2;
    Sbp2Req := actual_Sbp2Req;
    call {:si_unique_call 70} Tmp_242 := __HAVOC_malloc(4);
    call {:si_unique_call 71} Tmp_246 := __HAVOC_malloc(4);
    call {:si_unique_call 72} Tmp_249 := __HAVOC_malloc(4);
    call {:si_unique_call 73} Tmp_252 := __HAVOC_malloc(4);
    call {:si_unique_call 74} Tmp_259 := __HAVOC_malloc(2680);
    call {:si_unique_call 75} Tmp_266 := __HAVOC_malloc(4);
    call {:si_unique_call 76} Tmp_276 := __HAVOC_malloc(4);
    call {:si_unique_call 77} Tmp_290 := __HAVOC_malloc(4);
    call {:si_unique_call 78} Tmp_296 := __HAVOC_malloc(4);
    call {:si_unique_call 79} Tmp_298 := __HAVOC_malloc(2680);
    call {:si_unique_call 80} Tmp_304 := __HAVOC_malloc(4);
    call {:si_unique_call 81} Tmp_309 := __HAVOC_malloc(4);
    call {:si_unique_call 82} Tmp_312 := __HAVOC_malloc(4);
    call {:si_unique_call 83} Tmp_313 := __HAVOC_malloc(4);
    call {:si_unique_call 84} Tmp_315 := __HAVOC_malloc(4);
    call {:si_unique_call 85} Tmp_316 := __HAVOC_malloc(2680);
    call {:si_unique_call 86} Tmp_321 := __HAVOC_malloc(4);
    call {:si_unique_call 87} Tmp_333 := __HAVOC_malloc(4);
    call {:si_unique_call 88} Tmp_334 := __HAVOC_malloc(4);
    call {:si_unique_call 89} Tmp_335 := __HAVOC_malloc(4);
    call {:si_unique_call 90} Tmp_340 := __HAVOC_malloc(2680);
    call {:si_unique_call 91} Tmp_341 := __HAVOC_malloc(4);
    call {:si_unique_call 92} Tmp_349 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc devListSize;
    modelIdCount := 0;
    unitDirEntries := 0;
    sbp2Device := 0;
    firstOne := 0;
    unitDirectory_1 := 0;
    unitDependentDirectory_1 := 0;
    modelLeaf_1 := 0;
    vendorLeaf_1 := 0;
    buffer := 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    Mem_T.P_IRBIRP[packet_1] := 0;
    call {:si_unique_call 93} AllocateIrpAndIrb(FdoExtension_2, packet_1);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_1] != 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 94} status_6 := Sbp2GetConfigPacket(FdoExtension_2, Mem_T.P_IRBIRP[packet_1], currentGeneration);
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:partition} yogi_error != 1;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume {:partition} status_6 < 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_335;
    assume {:nonnull} Tmp_335 != 0;
    assume Tmp_335 > 0;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    havoc Tmp_351;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_338;
    call {:si_unique_call 95} WPP_SF_Dq(Tmp_338, 31, Tmp_351, status_6, FdoExtension_2);
    goto L136;

  L136:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_1] != 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 96} DeAllocateIrpAndIrb(FdoExtension_2, Mem_T.P_IRBIRP[packet_1]);
    goto L137;

  L137:
    goto anon313_Then, anon313_Else;

  anon313_Else:
    assume {:partition} unitDirectory_1 != 0;
    call {:si_unique_call 97} sdv_ExFreePool(0);
    goto L141;

  L141:
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume {:partition} unitDependentDirectory_1 != 0;
    call {:si_unique_call 98} sdv_ExFreePool(0);
    goto L145;

  L145:
    goto anon315_Then, anon315_Else;

  anon315_Else:
    assume {:partition} vendorLeaf_1 != 0;
    call {:si_unique_call 99} sdv_ExFreePool(0);
    goto L149;

  L149:
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume {:partition} modelLeaf_1 != 0;
    call {:si_unique_call 100} sdv_ExFreePool(0);
    goto L153;

  L153:
    goto anon317_Then, anon317_Else;

  anon317_Else:
    assume {:partition} Sbp2Req != 0;
    goto L158;

  L158:
    Tmp_236 := status_6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon317_Then:
    assume {:partition} Sbp2Req == 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    goto L158;

  anon316_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L153;

  anon315_Then:
    assume {:partition} vendorLeaf_1 == 0;
    goto L149;

  anon314_Then:
    assume {:partition} unitDependentDirectory_1 == 0;
    goto L145;

  anon313_Then:
    assume {:partition} unitDirectory_1 == 0;
    goto L141;

  anon312_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_1] == 0;
    goto L137;

  anon377_Then:
    goto L136;

  anon444_Then:
    goto L136;

  anon376_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L136;

  anon298_Then:
    assume {:partition} 0 <= status_6;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_248;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    getConfigInfo := GetConfigurationInformation_unnamed_tag_72(u__IRB(Tmp_248));
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc vendorLeaf_1;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc modelLeaf_1;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc unitDirectory_1;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    call {:si_unique_call 101} directoryLength := corral_nondet();
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc unitDependentDirectory_1;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    call {:si_unique_call 102} dependentLength := corral_nondet();
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:partition} Sbp2Req != 0;
    goto L67;

  L67:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_340;
    firstDevInfo := Tmp_340;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    i_1 := 1;
    goto L71;

  L71:
    call {:si_unique_call 103} Tmp_241, i_1, Tmp_347 := Sbp2Get1394ConfigInfo_loop_L71(Tmp_241, i_1, directoryLength, Tmp_347, unitDirectory_1, Sbp2Req);
    goto L71_last;

  L71_last:
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume {:partition} Sbp2Req != 0;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume {:partition} directoryLength > i_1;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_347;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:partition} Tmp_347 == 129;
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_241;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  L95:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_333;
    assume {:nonnull} Tmp_333 != 0;
    assume Tmp_333 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_336;
    havoc Tmp_325;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_348;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc vslice_dummy_var_4137;
    call {:si_unique_call 104} WPP_SF_qqDD(Tmp_348, 33, Tmp_325, FdoExtension_2, unitDirectory_1, vslice_dummy_var_4137, Tmp_336);
    goto L101;

  L101:
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 105} Sbp2ParseTextLeaf(FdoExtension_2, unitDirectory_1, cromOffset, Buffer_unnamed_tag_74(RetrieveTextLeaf_unnamed_tag_73(u__SBP2_REQUEST(Sbp2Req))));
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume {:partition} Mem_T.PVOID[Buffer_unnamed_tag_74(RetrieveTextLeaf_unnamed_tag_73(u__SBP2_REQUEST(Sbp2Req)))] == 0;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_341;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    havoc Tmp_292;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_303;
    call {:si_unique_call 106} WPP_SF_q(Tmp_303, 34, Tmp_292, FdoExtension_2);
    goto L124;

  L124:
    status_6 := -1073741823;
    goto L72;

  L72:
    i_1 := 1;
    goto L132;

  L132:
    call {:si_unique_call 107} Tmp_237, Tmp_238, Tmp_239, Tmp_243, Tmp_244, Tmp_246, Tmp_247, Tmp_250, Tmp_251, Tmp_252, dependentLength, sdv_51, Tmp_253, Tmp_256, Tmp_258, Tmp_259, Tmp_260, Tmp_262, Tmp_263, Tmp_267, Tmp_268, Tmp_269, Tmp_271, tmp, Tmp_273, Tmp_274, i_1, Tmp_275, Tmp_276, Tmp_278, Tmp_279, Tmp_280, Tmp_281, j, Tmp_284, Tmp_285, Tmp_286, Tmp_287, unitDirEntries, Tmp_289, Tmp_290, Tmp_293, sdv_59, Tmp_294, Tmp_295, Tmp_296, status_6, Tmp_301, offset, Tmp_302, unitDependentDirectory_1, Tmp_304, Tmp_305, Tmp_306, Tmp_307, Tmp_308, Tmp_309, Tmp_313, sdv_69, Tmp_314, Tmp_315, Tmp_316, modelIdCount, Tmp_317, dirInfoQuad, Tmp_318, devListSize, firstOne, Tmp_319, Tmp_320, Tmp_321, Tmp_322, Tmp_323, sbp2Device, Tmp_326, Tmp_327, Tmp_329, Tmp_330, Tmp_332, Tmp_337, Tmp_339, Tmp_342, Tmp_343, devInfo, Tmp_345, Tmp_346, retries, Tmp_349, Tmp_350, info, Tmp_352, Tmp_353, Tmp_354 := Sbp2Get1394ConfigInfo_loop_L132(Tmp_237, Tmp_238, Tmp_239, Tmp_243, Tmp_244, Tmp_246, Tmp_247, sdv_49, Tmp_250, Tmp_251, Tmp_252, dependentLength, sdv_51, Tmp_253, Tmp_256, Tmp_258, Tmp_259, Tmp_260, sdv_53, Tmp_262, Tmp_263, Tmp_267, sdv_55, Tmp_268, Tmp_269, Tmp_271, tmp, Tmp_273, Tmp_274, sdv_56, i_1, Tmp_275, genPacket, Tmp_276, Tmp_278, Tmp_279, Tmp_280, Tmp_281, j, Tmp_284, sdv_57, Tmp_285, Tmp_286, Tmp_287, unitDirEntries, Tmp_289, Tmp_290, currentGeneration, Tmp_293, sdv_59, Tmp_294, Tmp_295, vendorLeaf_1, Tmp_296, sdv_60, status_6, sdv_61, Tmp_301, offset, modelLeaf_1, Tmp_302, unitDependentDirectory_1, sdv_64, sdv_65, Tmp_304, Tmp_305, sdv_67, Tmp_306, sdv_68, Tmp_307, cromOffset, Tmp_308, Tmp_309, Tmp_313, directoryLength, sdv_69, Tmp_314, Tmp_315, Tmp_316, modelIdCount, Tmp_317, dirInfoQuad, Tmp_318, devListSize, firstOne, Tmp_319, sdv_71, Tmp_320, Tmp_321, Tmp_322, sdv_72, Tmp_323, directoryLocation, sbp2Device, firstDevInfo, Tmp_326, Tmp_327, Tmp_329, sdv_76, ModelLeaf, Tmp_330, ModelLeaf_1, sdv_77, Tmp_332, Tmp_337, Tmp_339, Tmp_342, Tmp_343, devInfo, sdv_80, sdv_81, Tmp_345, Tmp_346, retries, dependentLocation, Tmp_349, unitDirectory_1, ModelLeaf_2, packet_1, Tmp_350, info, Tmp_352, Tmp_353, Tmp_354, FdoExtension_2, Sbp2Req);
    goto L132_last;

  L132_last:
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume {:partition} Sbp2Req != 0;
    goto L134;

  L134:
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume {:partition} Sbp2Req != 0;
    goto L136;

  anon310_Then:
    assume {:partition} Sbp2Req == 0;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume {:partition} sbp2Device == 0;
    goto L163;

  L163:
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_242;
    assume {:nonnull} Tmp_242 != 0;
    assume Tmp_242 > 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    havoc Tmp_344;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_310;
    call {:si_unique_call 108} WPP_SF_q(Tmp_310, 49, Tmp_344, FdoExtension_2);
    goto L164;

  L164:
    status_6 := -1073741621;
    goto L136;

  anon320_Then:
    goto L164;

  anon398_Then:
    goto L164;

  anon319_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L164;

  anon311_Then:
    assume {:partition} sbp2Device != 0;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume {:partition} 2 > unitDirEntries;
    goto L163;

  anon318_Then:
    assume {:partition} unitDirEntries >= 2;
    goto L136;

  anon308_Then:
    assume {:partition} Sbp2Req == 0;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume {:partition} directoryLength > i_1;
    Tmp_346 := devListSize;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_259;
    devInfo := Tmp_259 + Tmp_346 * 268;
    Tmp_319 := unitDirectory_1;
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    goto L371;

  L371:
    i_1 := i_1 + 1;
    goto L371_dummy;

  L371_dummy:
    assume false;
    return;

  anon378_Then:
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} firstOne != 0;
    retries := 3;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    Mem_T.P_IRBIRP[genPacket] := 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    call {:si_unique_call 109} sdv_59 := IoAllocateMdl(0, dependentLength, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_286;
    assume {:nonnull} Tmp_286 != 0;
    assume Tmp_286 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_353;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_334;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    havoc Tmp_282;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_264;
    call {:si_unique_call 110} WPP_SF_q(Tmp_264, 42, Tmp_282, FdoExtension_2);
    goto L136;

  anon347_Then:
    goto L136;

  anon433_Then:
    goto L136;

  anon346_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L136;

  anon412_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_247;
    assume {:nonnull} Tmp_247 != 0;
    assume Tmp_247 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_250;
    assume {:nonnull} Tmp_250 != 0;
    assume Tmp_250 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_318;
    assume {:nonnull} Tmp_318 != 0;
    assume Tmp_318 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_273;
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_238;
    assume {:nonnull} Tmp_238 != 0;
    assume Tmp_238 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_320;
    assume {:nonnull} Tmp_320 != 0;
    assume Tmp_320 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_322;
    assume {:nonnull} Tmp_322 != 0;
    assume Tmp_322 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_237;
    assume {:nonnull} Tmp_237 != 0;
    assume Tmp_237 > 0;
    goto L214;

  L214:
    call {:si_unique_call 111} Tmp_246, Tmp_252, Tmp_258, Tmp_268, Tmp_274, Tmp_289, status_6, Tmp_306, Tmp_323, Tmp_326, Tmp_342, retries := Sbp2Get1394ConfigInfo_loop_L214(Tmp_246, Tmp_252, Tmp_258, Tmp_268, Tmp_274, genPacket, Tmp_289, currentGeneration, status_6, Tmp_306, Tmp_323, Tmp_326, Tmp_342, retries, packet_1, FdoExtension_2);
    goto L214_last;

  L214_last:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_274;
    assume {:nonnull} Tmp_274 != 0;
    assume Tmp_274 > 0;
    assume {:nonnull} currentGeneration != 0;
    assume currentGeneration > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 162} status_6 := Sbp2SendRequest#1(FdoExtension_2, Mem_T.P_IRBIRP[packet_1], 2);
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:partition} yogi_error != 1;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume {:partition} status_6 >= 0;
    goto L222;

  L222:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] != 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    call {:si_unique_call 112} DeAllocateIrpAndIrb(FdoExtension_2, Mem_T.P_IRBIRP[genPacket]);
    goto L223;

  L223:
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:partition} status_6 >= 0;
    call {:si_unique_call 113} dirInfoQuad := corral_nondet();
    dependentLength := dirInfoQuad * 4;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 114} IoFreeMdl(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_301;
    assume {:nonnull} Tmp_301 != 0;
    assume Tmp_301 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:partition} dependentLength > 256;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_266;
    assume {:nonnull} Tmp_266 != 0;
    assume Tmp_266 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    havoc Tmp_272;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_245;
    call {:si_unique_call 115} WPP_SF_qD(Tmp_245, 45, Tmp_272, FdoExtension_2, dependentLength);
    goto L136;

  anon327_Then:
    goto L136;

  anon415_Then:
    goto L136;

  anon326_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L136;

  anon414_Then:
    assume {:partition} 256 >= dependentLength;
    call {:si_unique_call 116} sdv_ExFreePool(0);
    Tmp_337 := dependentLength + 4;
    call {:si_unique_call 117} sdv_51 := ExAllocatePoolWithTag(512, Tmp_337, -464166317);
    unitDependentDirectory_1 := sdv_51;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:partition} unitDependentDirectory_1 != 0;
    Tmp_256 := dependentLength + 4;
    call {:si_unique_call 118} sdv_69 := IoAllocateMdl(0, Tmp_256, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_275;
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_251;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    j := 1;
    goto L273;

  L273:
    call {:si_unique_call 119} Tmp_253, Tmp_262, Tmp_263, Tmp_280, Tmp_281, j, Tmp_284, Tmp_285, unitDirEntries, Tmp_295, status_6, Tmp_308, Tmp_309, Tmp_313, Tmp_314, modelIdCount, Tmp_317, devListSize, Tmp_329 := Sbp2Get1394ConfigInfo_loop_L273(dependentLength, Tmp_253, Tmp_262, Tmp_263, sdv_55, Tmp_280, Tmp_281, j, Tmp_284, Tmp_285, unitDirEntries, Tmp_295, vendorLeaf_1, status_6, sdv_61, offset, unitDependentDirectory_1, sdv_67, cromOffset, Tmp_308, Tmp_309, Tmp_313, Tmp_314, modelIdCount, Tmp_317, devListSize, firstDevInfo, Tmp_329, devInfo, sdv_80, ModelLeaf_2, packet_1, FdoExtension_2);
    goto L273_last;

  L273_last:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_262;
    assume {:nonnull} Tmp_262 != 0;
    assume Tmp_262 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_263;
    assume {:nonnull} Tmp_263 != 0;
    assume Tmp_263 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_281;
    assume {:nonnull} Tmp_281 != 0;
    assume Tmp_281 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_329;
    assume {:nonnull} Tmp_329 != 0;
    assume Tmp_329 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_314;
    assume {:nonnull} Tmp_314 != 0;
    assume Tmp_314 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 161} status_6 := Sbp2SendRequest#1(FdoExtension_2, Mem_T.P_IRBIRP[packet_1], 2);
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:partition} yogi_error != 1;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:partition} status_6 < 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_249;
    assume {:nonnull} Tmp_249 != 0;
    assume Tmp_249 > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    havoc Tmp_257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_240;
    call {:si_unique_call 120} WPP_SF_qD(Tmp_240, 46, Tmp_257, FdoExtension_2, status_6);
    goto L385;

  L385:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 121} IoFreeMdl(0);
    goto L136;

  anon338_Then:
    goto L385;

  anon428_Then:
    goto L385;

  anon337_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L385;

  anon328_Then:
    assume {:partition} 0 <= status_6;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_253;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} Tmp_253 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_313;
    assume {:nonnull} Tmp_313 != 0;
    assume Tmp_313 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc Tmp_295;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_284;
    call {:si_unique_call 122} WPP_SF_q(Tmp_284, 47, Tmp_295, FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 123} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L311;

  L311:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    goto L316;

  L316:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto L318;

  L318:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L320;

  L320:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L322;

  L322:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L286;

  L286:
    Tmp_308 := unitDependentDirectory_1;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    goto L364;

  L364:
    j := j + 1;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} INTDIV(dependentLength, 4) < j;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 124} IoFreeMdl(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_244;
    assume {:nonnull} Tmp_244 != 0;
    assume Tmp_244 > 0;
    goto L371;

  anon424_Then:
    assume {:partition} j <= INTDIV(dependentLength, 4);
    goto anon424_Then_dummy;

  anon424_Then_dummy:
    assume false;
    return;

  anon386_Then:
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_280;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} Tmp_280 != 23;
    goto L364;

  anon425_Then:
    assume {:partition} Tmp_280 == 23;
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 125} Sbp2ParseTextLeaf(FdoExtension_2, unitDependentDirectory_1, cromOffset, ModelLeaf_2);
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_309;
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc Tmp_285;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_317;
    call {:si_unique_call 126} WPP_SF_q(Tmp_317, 48, Tmp_285, FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_4138;
    call {:si_unique_call 127} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_4138, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 128} sdv_ExFreePool(0);
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    goto L344;

  L344:
    modelIdCount := modelIdCount + 1;
    goto L364;

  anon336_Then:
    goto L349;

  anon427_Then:
    goto L349;

  anon335_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L349;

  anon334_Then:
    goto L344;

  anon426_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon387_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L364;

  anon423_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L364;

  anon333_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L322;

  anon332_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L320;

  anon331_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L318;

  anon422_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L316;

  anon330_Then:
    goto L300;

  anon421_Then:
    goto L300;

  anon329_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon420_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L311;

  anon419_Then:
    assume {:partition} Tmp_253 != 20;
    goto L286;

  anon418_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon417_Then:
    goto L136;

  anon416_Then:
    assume {:partition} unitDependentDirectory_1 == 0;
    goto L136;

  anon325_Then:
    assume {:partition} 0 > status_6;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_1] != 0;
    assume Mem_T.P_IRBIRP[packet_1] > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 129} IoFreeMdl(0);
    goto L136;

  anon324_Then:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] == 0;
    goto L223;

  anon322_Then:
    assume {:partition} 0 > status_6;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} retries > 1;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_252;
    assume {:nonnull} Tmp_252 != 0;
    assume Tmp_252 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc Tmp_289;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_326;
    call {:si_unique_call 130} WPP_SF_qD(Tmp_326, 43, Tmp_289, FdoExtension_2, status_6);
    goto L401;

  L401:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] != 0;
    goto L412;

  L412:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[genPacket] != 0;
    assume Mem_T.P_IRBIRP[genPacket] > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_323;
    assume {:nonnull} Tmp_323 != 0;
    assume Tmp_323 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[genPacket] != 0;
    assume Mem_T.P_IRBIRP[genPacket] > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_268;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    call {:si_unique_call 131} status_6 := Sbp2SendRequest#1(FdoExtension_2, Mem_T.P_IRBIRP[genPacket], 2);
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:partition} yogi_error != 1;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} status_6 < 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_246;
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc Tmp_258;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_342;
    call {:si_unique_call 132} WPP_SF_qD(Tmp_342, 44, Tmp_258, FdoExtension_2, status_6);
    goto L424;

  L424:
    assume {:nonnull} Mem_T.P_IRBIRP[genPacket] != 0;
    assume Mem_T.P_IRBIRP[genPacket] > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_306;
    assume {:nonnull} Tmp_306 != 0;
    assume Tmp_306 > 0;
    assume {:nonnull} currentGeneration != 0;
    assume currentGeneration > 0;
    goto L413;

  L413:
    retries := retries - 1;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} retries == 0;
    goto L222;

  anon431_Then:
    assume {:partition} retries != 0;
    goto anon431_Then_dummy;

  anon431_Then_dummy:
    assume false;
    return;

  anon345_Then:
    goto L424;

  anon432_Then:
    goto L424;

  anon344_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L424;

  anon343_Then:
    assume {:partition} 0 <= status_6;
    goto L424;

  anon430_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon342_Then:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] == 0;
    goto L413;

  anon340_Then:
    assume {:partition} Mem_T.P_IRBIRP[genPacket] == 0;
    call {:si_unique_call 133} AllocateIrpAndIrb(FdoExtension_2, genPacket);
    goto L412;

  anon341_Then:
    goto L401;

  anon429_Then:
    goto L401;

  anon339_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L401;

  anon323_Then:
    assume {:partition} 1 >= retries;
    goto L222;

  anon413_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon321_Then:
    assume {:partition} firstOne == 0;
    firstOne := 1;
    j := 0;
    goto L445;

  L445:
    call {:si_unique_call 134} Tmp_239, Tmp_271, Tmp_278, Tmp_279, j, unitDirEntries, Tmp_290, Tmp_294, status_6, Tmp_302, Tmp_304, Tmp_305, modelIdCount, devListSize, Tmp_321, Tmp_330, Tmp_332 := Sbp2Get1394ConfigInfo_loop_L445(Tmp_239, sdv_49, dependentLength, Tmp_271, sdv_56, Tmp_278, Tmp_279, j, unitDirEntries, Tmp_290, Tmp_294, vendorLeaf_1, status_6, modelLeaf_1, Tmp_302, unitDependentDirectory_1, Tmp_304, Tmp_305, sdv_68, cromOffset, modelIdCount, devListSize, Tmp_321, firstDevInfo, Tmp_330, ModelLeaf_1, sdv_77, Tmp_332, devInfo, dependentLocation, FdoExtension_2);
    goto L445_last;

  L445_last:
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:partition} dependentLength > j;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_278;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} Tmp_278 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} devListSize > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L459;

  L459:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_321;
    assume {:nonnull} Tmp_321 != 0;
    assume Tmp_321 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc Tmp_302;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_279;
    call {:si_unique_call 135} WPP_SF_q(Tmp_279, 40, Tmp_302, FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 136} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L476;

  L476:
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    goto L480;

  L480:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    goto L482;

  L482:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L484;

  L484:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L486;

  L486:
    unitDirEntries := unitDirEntries + 1;
    goto L448;

  L448:
    Tmp_294 := unitDependentDirectory_1;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    goto L542;

  L542:
    j := j + 1;
    goto L542_dummy;

  L542_dummy:
    assume false;
    return;

  anon388_Then:
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_271;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} Tmp_271 != 23;
    goto L542;

  anon439_Then:
    assume {:partition} Tmp_271 == 23;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 137} Sbp2ParseTextLeaf(FdoExtension_2, unitDependentDirectory_1, cromOffset, ModelLeaf_1);
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_4139;
    call {:si_unique_call 138} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_4139, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 139} sdv_ExFreePool(0);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_290;
    assume {:nonnull} Tmp_290 != 0;
    assume Tmp_290 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc Tmp_330;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_305;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_4140;
    call {:si_unique_call 140} WPP_SF_S(Tmp_305, 41, Tmp_330, vslice_dummy_var_4140);
    goto L512;

  L512:
    modelIdCount := modelIdCount + 1;
    goto L542;

  anon361_Then:
    goto L512;

  anon441_Then:
    goto L512;

  anon360_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L512;

  anon359_Then:
    goto L512;

  anon440_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon358_Then:
    goto L512;

  anon389_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L542;

  anon438_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L542;

  anon355_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L486;

  anon354_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L484;

  anon353_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L482;

  anon437_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L480;

  anon352_Then:
    goto L465;

  anon436_Then:
    goto L465;

  anon351_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L465;

  anon350_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L476;

  anon435_Then:
    assume {:partition} 0 >= devListSize;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_304;
    assume {:nonnull} Tmp_304 != 0;
    assume Tmp_304 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc Tmp_239;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_332;
    call {:si_unique_call 141} WPP_SF_q(Tmp_332, 39, Tmp_239, FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 142} status_6 := Sbp2_ProcessTextualDescriptor(modelLeaf_1, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L459;

  anon357_Then:
    goto L493;

  anon442_Then:
    goto L493;

  anon356_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L493;

  anon349_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L459;

  anon434_Then:
    assume {:partition} Tmp_278 != 20;
    goto L448;

  anon348_Then:
    assume {:partition} j >= dependentLength;
    goto L371;

  anon379_Then:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_293;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:partition} Tmp_293 == 23;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:partition} devListSize >= modelIdCount;
    Tmp_267 := modelIdCount;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_316;
    info := Tmp_316 + Tmp_267 * 268;
    assume {:nonnull} info != 0;
    assume info > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 143} Sbp2ParseTextLeaf(FdoExtension_2, unitDirectory_1, cromOffset, ModelLeaf);
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} info != 0;
    assume info > 0;
    havoc vslice_dummy_var_4141;
    call {:si_unique_call 144} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_4141, uniModelId__DEVICE_INFORMATION(info));
    call {:si_unique_call 145} sdv_ExFreePool(0);
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_296;
    assume {:nonnull} Tmp_296 != 0;
    assume Tmp_296 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    havoc Tmp_260;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_269;
    assume {:nonnull} info != 0;
    assume info > 0;
    havoc vslice_dummy_var_4142;
    call {:si_unique_call 146} WPP_SF_S(Tmp_269, 38, Tmp_260, vslice_dummy_var_4142);
    goto L562;

  L562:
    modelIdCount := modelIdCount + 1;
    goto L371;

  anon365_Then:
    goto L562;

  anon411_Then:
    goto L562;

  anon364_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L562;

  anon363_Then:
    goto L562;

  anon410_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon409_Then:
    goto L562;

  anon362_Then:
    assume {:partition} modelIdCount > devListSize;
    goto L371;

  anon408_Then:
    assume {:partition} Tmp_293 != 23;
    goto L371;

  anon380_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    sbp2Device := 1;
    goto L371;

  anon381_Then:
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} sdv_64 != 0;
    Tmp_345 := 1;
    goto L605;

  L605:
    tmp := Tmp_345;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:partition} tmp != 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L371;

  anon407_Then:
    assume {:partition} tmp == 0;
    goto L371;

  anon366_Then:
    assume {:partition} sdv_64 == 0;
    Tmp_345 := 0;
    goto L605;

  anon382_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_315;
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    havoc Tmp_343;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_243;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc vslice_dummy_var_4143;
    call {:si_unique_call 147} WPP_SF_qD(Tmp_243, 35, Tmp_343, FdoExtension_2, vslice_dummy_var_4143);
    goto L371;

  anon367_Then:
    goto L371;

  anon406_Then:
    goto L371;

  anon405_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L371;

  anon383_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc Tmp_354;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:partition} 8 > Tmp_354;
    Tmp_287 := 8;
    goto L633;

  L633:
    tmp := Tmp_287;
    tmp := tmp * 4;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} 16 > tmp - 20;
    Tmp_352 := tmp - 20;
    goto L638;

  L638:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    call {:si_unique_call 148} tmp := corral_nondet();
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon404_Then:
    assume {:partition} tmp - 20 >= 16;
    Tmp_352 := 16;
    goto L638;

  anon403_Then:
    assume {:partition} Tmp_354 >= 8;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc Tmp_287;
    goto L633;

  anon384_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon385_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon399_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:partition} devListSize != 0;
    goto L661;

  L661:
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_349;
    assume {:nonnull} Tmp_349 != 0;
    assume Tmp_349 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    havoc Tmp_327;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_307;
    call {:si_unique_call 149} WPP_SF_q(Tmp_307, 37, Tmp_327, FdoExtension_2);
    goto L667;

  L667:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 150} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L678;

  L678:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon371_Then:
    goto L667;

  anon401_Then:
    goto L667;

  anon370_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L667;

  anon369_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L678;

  anon400_Then:
    assume {:partition} devListSize == 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} modelLeaf_1 != 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_276;
    assume {:nonnull} Tmp_276 != 0;
    assume Tmp_276 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    havoc Tmp_350;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_339;
    call {:si_unique_call 151} WPP_SF_q(Tmp_339, 36, Tmp_350, FdoExtension_2);
    goto L693;

  L693:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 152} status_6 := Sbp2_ProcessTextualDescriptor(modelLeaf_1, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L661;

  anon373_Then:
    goto L693;

  anon402_Then:
    goto L693;

  anon372_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L693;

  anon368_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L661;

  anon309_Then:
    assume {:partition} i_1 >= directoryLength;
    goto L134;

  anon307_Then:
    goto L124;

  anon443_Then:
    goto L124;

  anon306_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L124;

  anon305_Then:
    assume {:partition} Mem_T.PVOID[Buffer_unnamed_tag_74(RetrieveTextLeaf_unnamed_tag_73(u__SBP2_REQUEST(Sbp2Req)))] != 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 153} boogieTmp := corral_nondet();
    status_6 := 0;
    goto L72;

  anon397_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon304_Then:
    goto L101;

  anon396_Then:
    goto L101;

  anon395_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L101;

  anon302_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_312;
    assume {:nonnull} Tmp_312 != 0;
    assume Tmp_312 > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    goto L95;

  anon394_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    goto L95;

  anon303_Then:
    havoc Tmp_261;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_265;
    call {:si_unique_call 154} WPP_SF_qq(Tmp_265, 32, Tmp_261, FdoExtension_2, Sbp2Req);
    goto L95;

  anon393_Then:
    goto L75;

  L75:
    i_1 := i_1 + 1;
    goto L75_dummy;

  L75_dummy:
    assume false;
    return;

  anon392_Then:
    assume {:partition} Tmp_347 != 129;
    goto L75;

  anon301_Then:
    goto L75;

  anon300_Then:
    assume {:partition} i_1 >= directoryLength;
    goto L72;

  anon299_Then:
    assume {:partition} Sbp2Req == 0;
    goto L72;

  anon391_Then:
    assume {:partition} Sbp2Req == 0;
    call {:si_unique_call 155} Tmp_254 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    call {:si_unique_call 156} sdv_KeAcquireSpinLock(0, Tmp_254);
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    havoc oldIrql;
    i_1 := 0;
    goto L705;

  L705:
    call {:si_unique_call 157} Tmp_270, i_1, Tmp_298, Tmp_324, devInfo, buffer := Sbp2Get1394ConfigInfo_loop_L705(Tmp_270, i_1, Tmp_298, Tmp_324, devInfo, buffer, FdoExtension_2);
    goto L705_last;

  L705_last:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    Tmp_270 := i_1;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_298;
    devInfo := Tmp_298 + Tmp_270 * 268;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    Tmp_324 := uniModelId__DEVICE_INFORMATION(devInfo);
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    call {:si_unique_call 158} buffer := _InlineInterlockedExchangePointer(Buffer__STRING(Tmp_324), 0);
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:partition} buffer != 0;
    call {:si_unique_call 159} sdv_ExFreePool(0);
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L715;

  L715:
    i_1 := i_1 + 1;
    goto L715_dummy;

  L715_dummy:
    assume false;
    return;

  anon375_Then:
    assume {:partition} buffer == 0;
    goto L715;

  anon374_Then:
    call {:si_unique_call 160} sdv_KeReleaseSpinLock(0, oldIrql);
    devListSize := 0;
    goto L67;

  anon390_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon297_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_1] == 0;
    Tmp_236 := -1073741670;
    goto L1;
}



procedure {:origName "WPP_SF_qDDd"} WPP_SF_qDDd(actual_Logger_6: int, actual_id_6: int, actual_TraceGuid_6: int, actual_s_p_e_c_i_a_l_26: int, actual_s_p_e_c_i_a_l_27: int, actual_s_p_e_c_i_a_l_28: int, actual_s_p_e_c_i_a_l_29: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDDd"} WPP_SF_qDDd(actual_Logger_6: int, actual_id_6: int, actual_TraceGuid_6: int, actual_s_p_e_c_i_a_l_26: int, actual_s_p_e_c_i_a_l_27: int, actual_s_p_e_c_i_a_l_28: int, actual_s_p_e_c_i_a_l_29: int)
{
  var {:pointer} TraceGuid_6: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 163} vslice_dummy_var_9 := __HAVOC_malloc(4);
    TraceGuid_6 := actual_TraceGuid_6;
    return;
}



procedure {:origName "WPP_SF_qDDDD"} WPP_SF_qDDDD(actual_Logger_7: int, actual_id_7: int, actual_TraceGuid_7: int, actual_s_p_e_c_i_a_l_30: int, actual_s_p_e_c_i_a_l_31: int, actual_s_p_e_c_i_a_l_32: int, actual_s_p_e_c_i_a_l_33: int, actual_s_p_e_c_i_a_l_34: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDDDD"} WPP_SF_qDDDD(actual_Logger_7: int, actual_id_7: int, actual_TraceGuid_7: int, actual_s_p_e_c_i_a_l_30: int, actual_s_p_e_c_i_a_l_31: int, actual_s_p_e_c_i_a_l_32: int, actual_s_p_e_c_i_a_l_33: int, actual_s_p_e_c_i_a_l_34: int)
{
  var {:pointer} TraceGuid_7: int;
  var vslice_dummy_var_10: int;

  anon0:
    call {:si_unique_call 164} vslice_dummy_var_10 := __HAVOC_malloc(4);
    TraceGuid_7 := actual_TraceGuid_7;
    return;
}



procedure {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_FdoExtension_3: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_FdoExtension_3: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int)
{
  var {:scalar} i_2: int;
  var {:pointer} Tmp_509: int;
  var {:pointer} Tmp_510: int;
  var {:pointer} Tmp_511: int;
  var {:pointer} Tmp_512: int;
  var {:pointer} Tmp_514: int;
  var {:scalar} waitValue_1: int;
  var {:pointer} pdoExtension_4: int;
  var {:pointer} Tmp_515: int;
  var {:scalar} Tmp_517: int;
  var {:pointer} Tmp_519: int;
  var {:pointer} leaf: int;
  var {:pointer} Tmp_521: int;
  var {:pointer} Tmp_522: int;
  var {:pointer} tModelLeaf: int;
  var {:pointer} Tmp_523: int;
  var {:pointer} Tmp_524: int;
  var {:pointer} Tmp_525: int;
  var {:scalar} Tmp_528: int;
  var {:pointer} Tmp_530: int;
  var {:pointer} sdv_148: int;
  var {:pointer} Tmp_531: int;
  var {:pointer} Tmp_532: int;
  var {:scalar} currentGeneration_1: int;
  var {:scalar} Tmp_533: int;
  var {:scalar} retries_1: int;
  var {:pointer} Tmp_534: int;
  var {:scalar} temp_1: int;
  var {:pointer} Tmp_535: int;
  var {:pointer} Tmp_536: int;
  var {:pointer} tModelLeafMdl: int;
  var {:pointer} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Tmp_539: int;
  var {:scalar} leafLength: int;
  var {:pointer} Tmp_540: int;
  var {:scalar} Tmp_541: int;
  var {:pointer} Tmp_542: int;
  var {:pointer} Tmp_543: int;
  var {:pointer} Tmp_544: int;
  var {:pointer} Tmp_545: int;
  var {:scalar} status_11: int;
  var {:pointer} packet_2: int;
  var {:pointer} Tmp_546: int;
  var {:scalar} Tmp_547: int;
  var {:scalar} event: int;
  var {:pointer} Tmp_550: int;
  var {:pointer} FdoExtension_3: int;
  var {:pointer} ModelLeafLocation: int;
  var {:pointer} ModelLeaf_3: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 165} waitValue_1 := __HAVOC_malloc(20);
    call {:si_unique_call 166} vslice_dummy_var_11 := __HAVOC_malloc(4);
    call {:si_unique_call 167} packet_2 := __HAVOC_malloc(4);
    call {:si_unique_call 168} event := __HAVOC_malloc(156);
    FdoExtension_3 := actual_FdoExtension_3;
    ModelLeafLocation := actual_ModelLeafLocation;
    ModelLeaf_3 := actual_ModelLeaf_3;
    call {:si_unique_call 169} Tmp_535 := __HAVOC_malloc(4);
    call {:si_unique_call 170} Tmp_538 := __HAVOC_malloc(4);
    call {:si_unique_call 171} Tmp_544 := __HAVOC_malloc(4);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    Mem_T.P_IRBIRP[packet_2] := 0;
    leaf := 0;
    tModelLeaf := 0;
    tModelLeafMdl := 0;
    pdoExtension_4 := FdoExtension_3;
    call {:si_unique_call 172} AllocateIrpAndIrb(pdoExtension_4, packet_2);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_2] != 0;
    call {:si_unique_call 173} tModelLeaf := ExAllocatePoolWithTag(512, 32, 846226003);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} tModelLeaf != 0;
    call {:si_unique_call 174} tModelLeafMdl := IoAllocateMdl(0, 32, 0, 0, 0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} tModelLeafMdl != 0;
    retries_1 := 3;
    goto L44;

  L44:
    call {:si_unique_call 175} Tmp_510, Tmp_515, Tmp_519, Tmp_524, Tmp_525, Tmp_528, Tmp_531, Tmp_532, currentGeneration_1, retries_1, Tmp_534, Tmp_536, Tmp_537, Tmp_538, Tmp_539, Tmp_545, status_11, Tmp_546, Tmp_550, vslice_dummy_var_12 := Sbp2ParseTextLeaf_loop_L44(Tmp_510, waitValue_1, pdoExtension_4, Tmp_515, Tmp_519, Tmp_524, Tmp_525, Tmp_528, Tmp_531, Tmp_532, currentGeneration_1, retries_1, Tmp_534, Tmp_536, tModelLeafMdl, Tmp_537, Tmp_538, Tmp_539, Tmp_545, status_11, packet_2, Tmp_546, event, Tmp_550, ModelLeafLocation, vslice_dummy_var_12);
    goto L44_last;

  L44_last:
    assume {:CounterLoop 3} {:Counter "retries_1"} true;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} retries_1 != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_536;
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_537;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 176} status_11 := Sbp2SendRequest#1(pdoExtension_4, Mem_T.P_IRBIRP[packet_2], 2);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} status_11 < 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_538;
    assume {:nonnull} Tmp_538 != 0;
    assume Tmp_538 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_519;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_528;
    call {:si_unique_call 177} WPP_SF_qD(Tmp_528, 58, Tmp_519, pdoExtension_4, status_11);
    goto L56;

  L56:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_534;
    assume {:nonnull} Tmp_534 != 0;
    assume Tmp_534 > 0;
    havoc currentGeneration_1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_515;
    assume {:nonnull} Tmp_515 != 0;
    assume Tmp_515 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_532;
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_539;
    assume {:nonnull} Tmp_539 != 0;
    assume Tmp_539 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_531;
    assume {:nonnull} Tmp_531 != 0;
    assume Tmp_531 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_550;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_550 != 0;
    assume Tmp_550 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_545;
    assume {:nonnull} Tmp_545 != 0;
    assume Tmp_545 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_510;
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_525;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_524;
    assume {:nonnull} Tmp_524 != 0;
    assume Tmp_524 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_546;
    assume {:nonnull} Tmp_546 != 0;
    assume Tmp_546 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 178} status_11 := Sbp2SendRequest#1(pdoExtension_4, Mem_T.P_IRBIRP[packet_2], 2);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_11 < 0;
    call {:si_unique_call 179} KeInitializeEvent(event, 0, 0);
    assume {:nonnull} waitValue_1 != 0;
    assume waitValue_1 > 0;
    call {:si_unique_call 180} vslice_dummy_var_12 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_1);
    retries_1 := retries_1 - 1;
    goto anon55_Else_dummy;

  anon55_Else_dummy:
    assume false;
    return;

  anon55_Then:
    assume {:partition} 0 <= status_11;
    goto L45;

  L45:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} status_11 < 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_535;
    assume {:nonnull} Tmp_535 != 0;
    assume Tmp_535 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_523;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_533;
    call {:si_unique_call 181} WPP_SF_qD(Tmp_533, 59, Tmp_523, pdoExtension_4, status_11);
    goto L177;

  L177:
    call {:si_unique_call 182} IoFreeMdl(0);
    call {:si_unique_call 183} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 184} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon63_Then:
    goto L177;

  anon71_Then:
    goto L177;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L177;

  anon53_Then:
    assume {:partition} 0 <= status_11;
    call {:si_unique_call 185} leafLength := corral_nondet();
    Tmp_512 := tModelLeaf;
    assume {:nonnull} Tmp_512 != 0;
    assume Tmp_512 > 0;
    havoc temp_1;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} leafLength + 4 > 32;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 186} IoFreeMdl(0);
    call {:si_unique_call 187} sdv_ExFreePool(0);
    Tmp_541 := leafLength + 4;
    call {:si_unique_call 188} tModelLeaf := ExAllocatePoolWithTag(512, Tmp_541, 846226003);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} tModelLeaf != 0;
    Tmp_517 := leafLength + 4;
    call {:si_unique_call 189} sdv_148 := IoAllocateMdl(0, Tmp_517, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_530;
    assume {:nonnull} Tmp_530 != 0;
    assume Tmp_530 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_521;
    assume {:nonnull} Tmp_521 != 0;
    assume Tmp_521 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto L102;

  L102:
    i_2 := 1;
    Tmp_543 := tModelLeaf;
    assume {:nonnull} Tmp_543 != 0;
    assume Tmp_543 > 0;
    goto L136;

  L136:
    call {:si_unique_call 190} i_2, Tmp_509, Tmp_511, Tmp_514, Tmp_540, Tmp_542, status_11 := Sbp2ParseTextLeaf_loop_L136(i_2, Tmp_509, Tmp_511, Tmp_514, pdoExtension_4, leafLength, Tmp_540, Tmp_542, status_11, packet_2, ModelLeafLocation);
    goto L136_last;

  L136_last:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_511;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_511 != 0;
    assume Tmp_511 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_509;
    assume {:nonnull} Tmp_509 != 0;
    assume Tmp_509 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_540;
    assume {:nonnull} Tmp_540 != 0;
    assume Tmp_540 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_514;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_542;
    assume {:nonnull} Tmp_542 != 0;
    assume Tmp_542 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 203} status_11 := Sbp2SendRequest#1(pdoExtension_4, Mem_T.P_IRBIRP[packet_2], 2);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_11 < 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_544;
    assume {:nonnull} Tmp_544 != 0;
    assume Tmp_544 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    havoc Tmp_522;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_547;
    call {:si_unique_call 191} WPP_SF_qD(Tmp_547, 60, Tmp_522, pdoExtension_4, status_11);
    goto L159;

  L159:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 192} IoFreeMdl(0);
    call {:si_unique_call 193} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 194} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon61_Then:
    goto L159;

  anon70_Then:
    goto L159;

  anon60_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L159;

  anon59_Then:
    assume {:partition} 0 <= status_11;
    i_2 := i_2 + 1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} INTDIV(leafLength, 4) < i_2;
    leaf := tModelLeaf;
    assume {:nonnull} leaf != 0;
    assume leaf > 0;
    assume {:nonnull} ModelLeaf_3 != 0;
    assume ModelLeaf_3 > 0;
    Mem_T.PVOID[ModelLeaf_3] := tModelLeaf;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_2] != 0;
    assume Mem_T.P_IRBIRP[packet_2] > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 195} IoFreeMdl(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 196} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon69_Then:
    assume {:partition} i_2 <= INTDIV(leafLength, 4);
    goto anon69_Then_dummy;

  anon69_Then_dummy:
    assume false;
    return;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    call {:si_unique_call 197} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 198} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon58_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 199} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon66_Then:
    assume {:partition} 32 >= leafLength + 4;
    goto L102;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L56;

  anon72_Then:
    goto L56;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon54_Then:
    assume {:partition} 0 <= status_11;
    goto L56;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon52_Then:
    assume {:partition} retries_1 == 0;
    goto L45;

  anon51_Then:
    assume {:partition} tModelLeafMdl == 0;
    call {:si_unique_call 200} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 201} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon50_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 202} DeAllocateIrpAndIrb(pdoExtension_4, Mem_T.P_IRBIRP[packet_2]);
    goto L1;

  anon49_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_2] == 0;
    goto L1;
}



procedure {:origName "Sbp2DeferPendingRequest"} Sbp2DeferPendingRequest(actual_PdoExtension_6: int, actual_Irp: int);
  modifies alloc, Mem_T.PVOID, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2DeferPendingRequest"} Sbp2DeferPendingRequest(actual_PdoExtension_6: int, actual_Irp: int)
{
  var {:pointer} Tmp_571: int;
  var {:scalar} Tmp_572: int;
  var {:scalar} Tmp_573: int;
  var {:pointer} Tmp_574: int;
  var {:scalar} sdv_160: int;
  var {:scalar} orbLock_1: int;
  var {:pointer} Tmp_575: int;
  var {:scalar} Tmp_576: int;
  var {:pointer} Tmp_577: int;
  var {:pointer} sdv_162: int;
  var {:pointer} Tmp_578: int;
  var {:pointer} Tmp_580: int;
  var {:pointer} Tmp_581: int;
  var {:scalar} Tmp_582: int;
  var {:pointer} sdv_163: int;
  var {:scalar} Tmp_583: int;
  var {:pointer} sdv_164: int;
  var {:pointer} sdv_165: int;
  var {:pointer} oldIrp: int;
  var {:pointer} Tmp_584: int;
  var {:pointer} Tmp_585: int;
  var {:pointer} Tmp_587: int;
  var {:pointer} tail: int;
  var {:pointer} Tmp_588: int;
  var {:pointer} Tmp_589: int;
  var {:pointer} Tmp_590: int;
  var {:pointer} PdoExtension_6: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_4144: int;
  var vslice_dummy_var_4145: int;
  var vslice_dummy_var_4146: int;

  anon0:
    call {:si_unique_call 204} orbLock_1 := __HAVOC_malloc(12);
    call {:si_unique_call 205} vslice_dummy_var_13 := __HAVOC_malloc(4);
    PdoExtension_6 := actual_PdoExtension_6;
    Irp := actual_Irp;
    call {:si_unique_call 206} Tmp_575 := __HAVOC_malloc(4);
    call {:si_unique_call 207} Tmp_577 := __HAVOC_malloc(4);
    call {:si_unique_call 208} Tmp_585 := __HAVOC_malloc(64);
    call {:si_unique_call 209} Tmp_589 := __HAVOC_malloc(4);
    call {:si_unique_call 210} Tmp_590 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 211} AcquireOrbListLock(PdoExtension_6, orbLock_1, 0);
    call {:si_unique_call 212} sdv_160 := sdv_IsListEmpty(0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_160 == 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc vslice_dummy_var_4144;
    call {:si_unique_call 213} sdv_163 := sdv_containing_record(vslice_dummy_var_4144, 0);
    tail := sdv_163;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_581;
    assume {:nonnull} Tmp_581 != 0;
    assume Tmp_581 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_580;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    havoc vslice_dummy_var_4145;
    call {:si_unique_call 214} sdv_164 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), vslice_dummy_var_4145);
    oldIrp := sdv_164;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_575;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_574;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    havoc Tmp_585;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    havoc Tmp_572;
    havoc Tmp_588;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_573;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_584;
    assume {:nonnull} Tmp_584 != 0;
    assume Tmp_584 > 0;
    havoc vslice_dummy_var_4146;
    call {:si_unique_call 215} WPP_SF_qqqD(Tmp_573, 27, Tmp_588, PdoExtension_6, vslice_dummy_var_4146, oldIrp, Tmp_572);
    goto L52;

  L52:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    call {:si_unique_call 216} vslice_dummy_var_15 := KeCancelTimer(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_577;
    assume {:nonnull} Tmp_577 != 0;
    assume Tmp_577 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_571;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_576;
    call {:si_unique_call 217} WPP_SF_qq(Tmp_576, 28, Tmp_571, PdoExtension_6, tail);
    goto L69;

  L69:
    call {:si_unique_call 218} vslice_dummy_var_14 := FreeAsyncRequestContext(PdoExtension_6, tail);
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 219} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(PdoExtension_6));
    goto L18;

  L18:
    call {:si_unique_call 220} ReleaseOrbListLock(PdoExtension_6, orbLock_1, 0);
    goto L1;

  L1:
    return;

  anon38_Then:
    goto L69;

  anon46_Then:
    goto L69;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L69;

  anon36_Then:
    goto L52;

  anon45_Then:
    goto L52;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L52;

  anon43_Then:
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 221} sdv_165 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), 0);
    oldIrp := sdv_165;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_589;
    assume {:nonnull} Tmp_589 != 0;
    assume Tmp_589 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_587;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_582;
    call {:si_unique_call 222} WPP_SF_qq(Tmp_582, 29, Tmp_587, PdoExtension_6, oldIrp);
    goto L18;

  anon39_Then:
    goto L18;

  anon48_Then:
    goto L18;

  anon47_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon33_Then:
    assume {:partition} sdv_160 != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Irp != 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 223} sdv_162 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), Irp);
    oldIrp := sdv_162;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_590;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_578;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_583;
    call {:si_unique_call 224} WPP_SF_qqq(Tmp_583, 30, Tmp_578, PdoExtension_6, Irp, oldIrp);
    goto L18;

  anon35_Then:
    goto L18;

  anon42_Then:
    goto L18;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon34_Then:
    assume {:partition} Irp == 0;
    goto L18;

  anon40_Then:
    goto L1;
}



procedure {:origName "WPP_SF_qdSDd"} WPP_SF_qdSDd(actual_Logger_8: int, actual_id_8: int, actual_TraceGuid_8: int, actual_s_p_e_c_i_a_l_35: int, actual_s_p_e_c_i_a_l_36: int, actual_s_p_e_c_i_a_l_37: int, actual_s_p_e_c_i_a_l_38: int, actual_s_p_e_c_i_a_l_39: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qdSDd"} WPP_SF_qdSDd(actual_Logger_8: int, actual_id_8: int, actual_TraceGuid_8: int, actual_s_p_e_c_i_a_l_35: int, actual_s_p_e_c_i_a_l_36: int, actual_s_p_e_c_i_a_l_37: int, actual_s_p_e_c_i_a_l_38: int, actual_s_p_e_c_i_a_l_39: int)
{
  var {:scalar} sdv_197: int;
  var {:pointer} Tmp_633: int;
  var {:scalar} Tmp_634: int;
  var {:pointer} TraceGuid_8: int;
  var {:pointer} s_p_e_c_i_a_l_37: int;
  var vslice_dummy_var_16: int;

  anon0:
    call {:si_unique_call 225} vslice_dummy_var_16 := __HAVOC_malloc(4);
    TraceGuid_8 := actual_TraceGuid_8;
    s_p_e_c_i_a_l_37 := actual_s_p_e_c_i_a_l_37;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_37 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_37 != 0;
    assume s_p_e_c_i_a_l_37 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_634 := (sdv_197 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_37 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_37 != 0;
    assume s_p_e_c_i_a_l_37 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_633 := s_p_e_c_i_a_l_37;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_633 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_37 == 0;
    goto L18;

  anon10_Then:
    Tmp_634 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_37 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qqqD"} WPP_SF_qqqD(actual_Logger_9: int, actual_id_9: int, actual_TraceGuid_9: int, actual_s_p_e_c_i_a_l_40: int, actual_s_p_e_c_i_a_l_41: int, actual_s_p_e_c_i_a_l_42: int, actual_s_p_e_c_i_a_l_43: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qqqD"} WPP_SF_qqqD(actual_Logger_9: int, actual_id_9: int, actual_TraceGuid_9: int, actual_s_p_e_c_i_a_l_40: int, actual_s_p_e_c_i_a_l_41: int, actual_s_p_e_c_i_a_l_42: int, actual_s_p_e_c_i_a_l_43: int)
{
  var {:pointer} TraceGuid_9: int;
  var vslice_dummy_var_17: int;

  anon0:
    call {:si_unique_call 226} vslice_dummy_var_17 := __HAVOC_malloc(4);
    TraceGuid_9 := actual_TraceGuid_9;
    return;
}



procedure {:origName "WPP_SF_qdDD"} WPP_SF_qdDD(actual_Logger_10: int, actual_id_10: int, actual_TraceGuid_10: int, actual_s_p_e_c_i_a_l_44: int, actual_s_p_e_c_i_a_l_45: int, actual_s_p_e_c_i_a_l_46: int, actual_s_p_e_c_i_a_l_47: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qdDD"} WPP_SF_qdDD(actual_Logger_10: int, actual_id_10: int, actual_TraceGuid_10: int, actual_s_p_e_c_i_a_l_44: int, actual_s_p_e_c_i_a_l_45: int, actual_s_p_e_c_i_a_l_46: int, actual_s_p_e_c_i_a_l_47: int)
{
  var {:pointer} TraceGuid_10: int;
  var vslice_dummy_var_18: int;

  anon0:
    call {:si_unique_call 227} vslice_dummy_var_18 := __HAVOC_malloc(4);
    TraceGuid_10 := actual_TraceGuid_10;
    return;
}



procedure {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_758: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_758 == -1073741670 || Tmp_758 == -1073741823 || Tmp_758 == 259 || Tmp_758 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_758: int)
{
  var {:pointer} blockDescriptor: int;
  var {:pointer} Tmp_760: int;
  var {:scalar} Tmp_762: int;
  var {:pointer} Tmp_763: int;
  var {:pointer} systemAddress: int;
  var {:pointer} Tmp_764: int;
  var {:pointer} Tmp_765: int;
  var {:scalar} pageCode: int;
  var {:pointer} cdb: int;
  var {:pointer} Tmp_766: int;
  var {:pointer} Tmp_767: int;
  var {:pointer} Tmp_768: int;
  var {:pointer} Tmp_769: int;
  var {:scalar} Tmp_771: int;
  var {:scalar} availLength: int;
  var {:pointer} Tmp_774: int;
  var {:pointer} Tmp_775: int;
  var {:pointer} Tmp_777: int;
  var {:pointer} Tmp_778: int;
  var {:pointer} Tmp_779: int;
  var {:pointer} Tmp_780: int;
  var {:pointer} Tmp_781: int;
  var {:pointer} Tmp_782: int;
  var {:pointer} sdv_232: int;
  var {:pointer} Tmp_783: int;
  var {:pointer} Tmp_785: int;
  var {:pointer} cdbRbc: int;
  var {:pointer} Tmp_788: int;
  var {:scalar} Tmp_789: int;
  var {:pointer} Tmp_790: int;
  var {:pointer} Tmp_792: int;
  var {:pointer} Tmp_793: int;
  var {:pointer} Tmp_794: int;
  var {:pointer} rbcParam: int;
  var {:pointer} Tmp_795: int;
  var {:pointer} Tmp_796: int;
  var {:pointer} sdv_233: int;
  var {:pointer} Tmp_797: int;
  var {:pointer} Tmp_798: int;
  var {:pointer} Tmp_799: int;
  var {:scalar} modeHeaderLength: int;
  var {:pointer} Tmp_801: int;
  var {:pointer} Tmp_803: int;
  var {:pointer} Tmp_804: int;
  var {:pointer} Tmp_805: int;
  var {:pointer} Tmp_806: int;
  var {:pointer} sdv_236: int;
  var {:pointer} Tmp_807: int;
  var {:pointer} Tmp_808: int;
  var {:pointer} Tmp_809: int;
  var {:pointer} Tmp_810: int;
  var {:pointer} Tmp_811: int;
  var {:pointer} modeHeader: int;
  var {:pointer} Tmp_812: int;
  var {:pointer} Tmp_813: int;
  var {:pointer} Tmp_814: int;
  var {:pointer} Tmp_816: int;
  var {:pointer} Tmp_817: int;
  var {:pointer} Tmp_818: int;
  var {:pointer} Tmp_819: int;
  var {:pointer} cachePage: int;
  var {:scalar} status_21: int;
  var {:pointer} Tmp_821: int;
  var {:scalar} wcd: int;
  var {:pointer} Tmp_822: int;
  var {:pointer} Tmp_823: int;
  var {:scalar} Tmp_824: int;
  var {:pointer} Srb: int;
  var {:pointer} OriginalSrb: int;
  var {:pointer} RbcHeaderAndPage: int;
  var {:scalar} OutgoingRequest: int;
  var {:scalar} RemovableMedia: int;
  var {:scalar} SetCacheHack: int;
  var boogieTmp: int;

  anon0:
    Srb := actual_Srb;
    OriginalSrb := actual_OriginalSrb;
    RbcHeaderAndPage := actual_RbcHeaderAndPage;
    OutgoingRequest := actual_OutgoingRequest;
    RemovableMedia := actual_RemovableMedia;
    SetCacheHack := actual_SetCacheHack;
    call {:si_unique_call 228} Tmp_763 := __HAVOC_malloc(8);
    call {:si_unique_call 229} Tmp_764 := __HAVOC_malloc(64);
    call {:si_unique_call 230} Tmp_765 := __HAVOC_malloc(12);
    call {:si_unique_call 231} Tmp_777 := __HAVOC_malloc(20);
    call {:si_unique_call 232} Tmp_780 := __HAVOC_malloc(12);
    call {:si_unique_call 233} Tmp_781 := __HAVOC_malloc(12);
    call {:si_unique_call 234} Tmp_796 := __HAVOC_malloc(12);
    call {:si_unique_call 235} Tmp_799 := __HAVOC_malloc(64);
    call {:si_unique_call 236} Tmp_803 := __HAVOC_malloc(8);
    call {:si_unique_call 237} Tmp_805 := __HAVOC_malloc(8);
    call {:si_unique_call 238} Tmp_806 := __HAVOC_malloc(12);
    call {:si_unique_call 239} Tmp_810 := __HAVOC_malloc(12);
    call {:si_unique_call 240} Tmp_811 := __HAVOC_malloc(12);
    call {:si_unique_call 241} Tmp_813 := __HAVOC_malloc(64);
    call {:si_unique_call 242} Tmp_814 := __HAVOC_malloc(8);
    call {:si_unique_call 243} Tmp_818 := __HAVOC_malloc(64);
    call {:si_unique_call 244} Tmp_821 := __HAVOC_malloc(20);
    call {:si_unique_call 245} Tmp_823 := __HAVOC_malloc(12);
    modeHeader := 0;
    blockDescriptor := 0;
    status_21 := 259;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} OutgoingRequest != 0;
    modeHeaderLength := 12;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdbRbc := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdb := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L28;

  L28:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L22;

  L22:
    Tmp_758 := status_21;
    goto L1;

  L1:
    return;

  anon86_Then:
    goto L22;

  anon85_Then:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L28;

  anon104_Then:
    goto L22;

  anon105_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} RemovableMedia != 0;
    goto L34;

  L34:
    call {:si_unique_call 246} sdv_232 := ExAllocatePoolWithTag(512, 64, 846226035);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_785;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_774;
    assume {:nonnull} Tmp_774 != 0;
    assume Tmp_774 > 0;
    assume {:nonnull} Tmp_785 != 0;
    assume Tmp_785 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    call {:si_unique_call 247} sdv_233 := IoAllocateMdl(0, 17, 0, 0, 0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_769;
    assume {:nonnull} Tmp_769 != 0;
    assume Tmp_769 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_816;
    assume {:nonnull} Tmp_816 != 0;
    assume Tmp_816 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_783;
    assume {:nonnull} Tmp_783 != 0;
    assume Tmp_783 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_812;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto L42;

  L42:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_824;
    goto L62;

  L62:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_798;
    assume {:nonnull} Tmp_798 != 0;
    assume Tmp_798 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_767;
    assume {:nonnull} Tmp_767 != 0;
    assume Tmp_767 > 0;
    havoc Tmp_789;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    call {:si_unique_call 248} sdv_RtlCopyMemory(0, 0, Tmp_789);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L22;

  anon89_Then:
    Tmp_824 := 16;
    goto L62;

  anon115_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_801;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_775;
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    assume {:nonnull} Tmp_801 != 0;
    assume Tmp_801 > 0;
    call {:si_unique_call 249} sdv_ExFreePool(0);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    Tmp_758 := -1073741670;
    goto L1;

  anon114_Then:
    goto L42;

  anon113_Then:
    Tmp_758 := -1073741670;
    goto L1;

  anon87_Then:
    assume {:partition} RemovableMedia == 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 250} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 251} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_823;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_763;
    assume {:nonnull} Tmp_763 != 0;
    assume Tmp_763 > 0;
    assume {:nonnull} Tmp_823 != 0;
    assume Tmp_823 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_765;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_805;
    assume {:nonnull} Tmp_765 != 0;
    assume Tmp_765 > 0;
    assume {:nonnull} Tmp_805 != 0;
    assume Tmp_805 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_780;
    assume {:nonnull} Tmp_780 != 0;
    assume Tmp_780 > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_777;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_796;
    call {:si_unique_call 252} sdv_RtlCopyMemory(0, 0, 3);
    status_21 := 0;
    goto L22;

  anon88_Then:
    goto L34;

  anon84_Then:
    goto L22;

  anon108_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc cachePage;
    cachePage := cachePage + modeHeaderLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    havoc pageCode;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} pageCode == 8;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    wcd := 0;
    goto L262;

  L262:
    goto L96;

  L96:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    call {:si_unique_call 253} sdv_RtlCopyMemory(0, 0, 17);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} SetCacheHack != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    havoc Tmp_771;
    goto L108;

  L108:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L109;

  L109:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} pageCode == 8;
    Tmp_817 := modeHeader;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    goto L22;

  anon112_Then:
    assume {:partition} pageCode != 8;
    goto L22;

  anon91_Then:
    Tmp_771 := 17;
    goto L108;

  anon111_Then:
    assume {:partition} SetCacheHack == 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L109;

  anon90_Then:
    wcd := 1;
    goto L262;

  anon110_Then:
    assume {:partition} pageCode != 8;
    goto L96;

  anon109_Then:
    goto L22;

  anon107_Then:
    assume {:partition} OutgoingRequest == 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_778;
    assume {:nonnull} Tmp_778 != 0;
    assume Tmp_778 > 0;
    havoc Tmp_764;
    cdb := Tmp_764;
    goto L116;

  L116:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_768;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_804;
    assume {:nonnull} Tmp_768 != 0;
    assume Tmp_768 > 0;
    assume {:nonnull} Tmp_804 != 0;
    assume Tmp_804 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_809;
    assume {:nonnull} Tmp_809 != 0;
    assume Tmp_809 > 0;
    call {:si_unique_call 254} IoFreeMdl(0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_760;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_794;
    assume {:nonnull} Tmp_760 != 0;
    assume Tmp_760 > 0;
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_797;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_797 != 0;
    assume Tmp_797 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L121;

  L121:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_793;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_793 != 0;
    assume Tmp_793 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_790;
    assume {:nonnull} Tmp_790 != 0;
    assume Tmp_790 > 0;
    havoc Tmp_762;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_788;
    assume {:nonnull} Tmp_788 != 0;
    assume Tmp_788 > 0;
    havoc Tmp_818;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_813;
    call {:si_unique_call 255} sdv_RtlCopyMemory(0, 0, Tmp_762);
    goto L119;

  L119:
    Tmp_758 := -1073741823;
    goto L1;

  anon116_Then:
    goto L121;

  anon94_Then:
    goto L121;

  anon93_Then:
    goto L119;

  anon92_Then:
    modeHeaderLength := 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    systemAddress := 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_782;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_766;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    assume {:nonnull} Tmp_782 != 0;
    assume Tmp_782 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_779;
    assume {:nonnull} Tmp_779 != 0;
    assume Tmp_779 > 0;
    call {:si_unique_call 256} IoFreeMdl(0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_807;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_819;
    assume {:nonnull} Tmp_807 != 0;
    assume Tmp_807 > 0;
    assume {:nonnull} Tmp_819 != 0;
    assume Tmp_819 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_792;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_792 != 0;
    assume Tmp_792 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_795;
    assume {:nonnull} Tmp_795 != 0;
    assume Tmp_795 > 0;
    call {:si_unique_call 257} systemAddress := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    goto L157;

  L157:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    havoc availLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L161;

  L161:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} availLength >= 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L164;

  L164:
    availLength := availLength - 12;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} modeHeader != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    cachePage := blockDescriptor;
    cachePage := cachePage + 8;
    goto L170;

  L170:
    call {:si_unique_call 258} sdv_RtlZeroMemory(0, 12);
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L380;

  L380:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L22;

  anon123_Then:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L380;

  anon122_Then:
    assume {:partition} modeHeader == 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} systemAddress != 0;
    cachePage := systemAddress;
    goto L170;

  anon101_Then:
    assume {:partition} systemAddress == 0;
    Tmp_758 := -1073741670;
    goto L1;

  anon99_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L164;

  anon100_Then:
    goto L22;

  anon98_Then:
    assume {:partition} 12 > availLength;
    goto L22;

  anon121_Then:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} availLength >= modeHeaderLength;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} systemAddress != 0;
    modeHeader := systemAddress;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 259} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 260} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_810;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_814;
    assume {:nonnull} Tmp_810 != 0;
    assume Tmp_810 > 0;
    assume {:nonnull} Tmp_814 != 0;
    assume Tmp_814 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_781;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_803;
    assume {:nonnull} Tmp_781 != 0;
    assume Tmp_781 > 0;
    assume {:nonnull} Tmp_803 != 0;
    assume Tmp_803 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_811;
    assume {:nonnull} Tmp_811 != 0;
    assume Tmp_811 > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_821;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_806;
    call {:si_unique_call 261} sdv_RtlCopyMemory(0, 0, 3);
    availLength := availLength - modeHeaderLength;
    goto L161;

  anon102_Then:
    assume {:partition} systemAddress == 0;
    Tmp_758 := -1073741670;
    goto L1;

  anon97_Then:
    assume {:partition} modeHeaderLength > availLength;
    goto L161;

  anon120_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_808;
    assume {:nonnull} Tmp_808 != 0;
    assume Tmp_808 > 0;
    call {:si_unique_call 262} systemAddress := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} systemAddress != 0;
    call {:si_unique_call 263} sdv_RtlCopyMemory(0, 0, 17);
    goto L157;

  anon103_Then:
    assume {:partition} systemAddress == 0;
    goto L157;

  anon119_Then:
    Tmp_758 := -1073741823;
    goto L1;

  anon96_Then:
    goto L22;

  anon106_Then:
    goto L22;

  anon117_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_822;
    assume {:nonnull} Tmp_822 != 0;
    assume Tmp_822 > 0;
    call {:si_unique_call 264} sdv_236 := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    rbcParam := sdv_236;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} rbcParam != 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    assume {:nonnull} rbcParam != 0;
    assume rbcParam > 0;
    goto L22;

  anon118_Then:
    assume {:partition} rbcParam == 0;
    goto L22;

  anon95_Then:
    goto L22;

  anon83_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_799;
    cdb := Tmp_799;
    goto L116;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_19: int;

  anon0:
    call {:si_unique_call 265} vslice_dummy_var_19 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_20: int;

  anon0:
    call {:si_unique_call 266} vslice_dummy_var_20 := __HAVOC_malloc(4);
    assume DATAID_SBP_LUN_INFORMATION == 6855;
    return;
}



procedure {:origName "Sbp2SqmInsertLunInformation"} Sbp2SqmInsertLunInformation(actual_DeviceInfo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2SqmInsertLunInformation"} Sbp2SqmInsertLunInformation(actual_DeviceInfo: int)
{
  var {:pointer} sqmStreamEntry: int;
  var {:pointer} DeviceInfo: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;

  anon0:
    call {:si_unique_call 267} vslice_dummy_var_21 := __HAVOC_malloc(4);
    DeviceInfo := actual_DeviceInfo;
    call {:si_unique_call 268} sqmStreamEntry := __HAVOC_malloc(108);
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    call {:si_unique_call 269} vslice_dummy_var_22 := corral_nondet();
    return;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_23: int;

  anon0:
    call {:si_unique_call 270} vslice_dummy_var_23 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeWorkItem"} {:osmodel} IoFreeWorkItem(actual_IoWorkItem: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoFreeWorkItem"} {:osmodel} IoFreeWorkItem(actual_IoWorkItem: int)
{
  var vslice_dummy_var_24: int;

  anon0:
    call {:si_unique_call 271} vslice_dummy_var_24 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int)
{
  var vslice_dummy_var_25: int;

  anon0:
    call {:si_unique_call 272} vslice_dummy_var_25 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_26: int;

  anon0:
    call {:si_unique_call 273} vslice_dummy_var_26 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_856: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_856: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    call {:si_unique_call 274} SLIC_sdv_containing_record_entry(strConst__li2bpl2);
    record := Address;
    Tmp_856 := record;
    return;
}



procedure {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int)
{
  var vslice_dummy_var_27: int;

  anon0:
    call {:si_unique_call 275} vslice_dummy_var_27 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_28: int;

  anon0:
    call {:si_unique_call 276} vslice_dummy_var_28 := __HAVOC_malloc(4);
    p := actual_p;
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_862: int);
  modifies alloc, sdv_inside_init_entrypoint, Mem_T.P_DEVICE_OBJECT, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION;
  free ensures {:va_keep} Tmp_862 == 0 || Tmp_862 == -1073741808 || Tmp_862 == -1073741824 || Tmp_862 == -1073741771 || Tmp_862 == -1073741670 || Tmp_862 == -1073741823 || Tmp_862 == 5 || Tmp_862 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_862: int)
{
  var {:scalar} status_22: int;
  var {:pointer} p1: int;
  var {:pointer} p2: int;

  anon0:
    p1 := actual_p1;
    p2 := actual_p2;
    status_22 := 0;
    call {:si_unique_call 277} sdv_stub_add_begin();
    call {:si_unique_call 278} status_22 := Sbp2AddDevice(p1, p2);
    call {:si_unique_call 279} sdv_stub_add_end();
    Tmp_862 := status_22;
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_864: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_864 == 1 || Tmp_864 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_864: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 280} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_864 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_864 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_866: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_866: int)
{
  var {:scalar} x: int;
  var {:pointer} sdv_239: int;

  anon0:
    call {:si_unique_call 281} sdv_239 := __HAVOC_malloc(1);
    x := sdv_239;
    Tmp_866 := x;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int)
{
  var vslice_dummy_var_29: int;

  anon0:
    call {:si_unique_call 282} vslice_dummy_var_29 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_870: int);
  free ensures {:va_keep} Tmp_870 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_870: int)
{

  anon0:
    Tmp_870 := 0;
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_872: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_872: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_872 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_872 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_872 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_874: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_874: int)
{
  var {:pointer} sdv_241: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_874 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 283} sdv_241 := __HAVOC_malloc(1);
    Tmp_874 := sdv_241;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_1: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_30: int;

  anon0:
    call {:si_unique_call 284} vslice_dummy_var_30 := __HAVOC_malloc(4);
    Dpc_1 := actual_Dpc_1;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_1 != 0;
    assume Dpc_1 > 0;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag: int)
{
  var vslice_dummy_var_31: int;

  anon0:
    call {:si_unique_call 285} vslice_dummy_var_31 := __HAVOC_malloc(4);
    call {:si_unique_call 286} SLIC_sdv_IoReleaseRemoveLockAndWait_entry(strConst__li2bpl2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_2: int) returns (Tmp_880: int);
  modifies Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} Tmp_880 == -1073741824 || Tmp_880 == -1073741771 || Tmp_880 == -1073741670 || Tmp_880 == -1073741823 || Tmp_880 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_2: int) returns (Tmp_880: int)
{
  var {:pointer} DeviceObject_2: int;

  anon0:
    DeviceObject_2 := actual_DeviceObject_2;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject_2] := 0;
    Tmp_880 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject_2] := 0;
    Tmp_880 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject_2] := 0;
    Tmp_880 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject_2] := 0;
    Tmp_880 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_inside_init_entrypoint != 0;
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject_2] := sdv_p_devobj_fdo;
    goto L21;

  L21:
    Tmp_880 := 0;
    goto L1;

  anon11_Then:
    assume {:partition} sdv_inside_init_entrypoint == 0;
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject_2] := sdv_p_devobj_child_pdo;
    goto L21;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_32: int;

  anon0:
    call {:si_unique_call 287} vslice_dummy_var_32 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int)
{
  var vslice_dummy_var_33: int;

  anon0:
    call {:si_unique_call 288} vslice_dummy_var_33 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag_1: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag_1: int, actual_Depth: int)
{
  var vslice_dummy_var_34: int;

  anon0:
    call {:si_unique_call 289} vslice_dummy_var_34 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int)
{
  var {:pointer} r: int;
  var {:pointer} pirp_2: int;
  var vslice_dummy_var_35: int;

  anon0:
    call {:si_unique_call 290} vslice_dummy_var_35 := __HAVOC_malloc(4);
    pirp_2 := actual_pirp_2;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    r := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(pirp_2)))];
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 1;
    goto L1;

  anon13_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 3;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r)] := 2;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int)
{
  var vslice_dummy_var_36: int;

  anon0:
    call {:si_unique_call 291} vslice_dummy_var_36 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_898: int);
  free ensures {:va_keep} Tmp_898 == 0 || Tmp_898 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_898: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_898 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_898 := -1073741823;
    goto L1;
}



procedure {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int)
{
  var vslice_dummy_var_37: int;

  anon0:
    call {:si_unique_call 292} vslice_dummy_var_37 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int)
{
  var {:pointer} pirp_4: int;
  var vslice_dummy_var_38: int;

  anon0:
    call {:si_unique_call 293} vslice_dummy_var_38 := __HAVOC_malloc(4);
    pirp_4 := actual_pirp_4;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_904: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_904: int)
{
  var {:pointer} sdv_248: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_904 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 294} sdv_248 := __HAVOC_malloc(1);
    Tmp_904 := sdv_248;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, sdv_inside_init_entrypoint, Mem_T.P_DEVICE_OBJECT, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, t, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.LogStart__DEBUG_LOG;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} t == 1 || t == old(t);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} Tmp_906: int;
  var {:scalar} status_23: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;

  anon0:
    call {:si_unique_call 295} vslice_dummy_var_39 := __HAVOC_malloc(4);
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    call {:si_unique_call 296} status_23 := sdv_RunAddDevice(sdv_driver_object, sdv_p_devobj_pdo);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_23 < 0;
    Tmp_906 := 0;
    goto L44;

  L44:
    assume Tmp_906 != 0;
    call {:si_unique_call 297} sdv_stub_driver_init();
    call {:si_unique_call 298} vslice_dummy_var_40 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} 0 <= status_23;
    Tmp_906 := 1;
    goto L44;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_909: int);
  free ensures {:va_keep} Tmp_909 == 0 || Tmp_909 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_909: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_909 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_909 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_911: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_911: int)
{
  var {:pointer} sdv_254: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 299} sdv_254 := __HAVOC_malloc(1);
    Tmp_911 := sdv_254;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_911 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_913: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_913: int)
{
  var {:pointer} sdv_256: int;
  var {:pointer} p_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 300} sdv_256 := __HAVOC_malloc(1);
    p_1 := sdv_256;
    Tmp_913 := p_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_913 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_915: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_915: int)
{
  var {:pointer} x_2: int;
  var {:pointer} sdv_257: int;

  anon0:
    call {:si_unique_call 301} sdv_257 := __HAVOC_malloc(1);
    x_2 := sdv_257;
    Tmp_915 := x_2;
    return;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_4: int, actual_Type_1: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_4: int, actual_Type_1: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_1: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 302} State := __HAVOC_malloc(8);
    call {:si_unique_call 303} r_1 := __HAVOC_malloc(8);
    call {:si_unique_call 304} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_2: int)
{
  var {:scalar} new: int;
  var {:pointer} p_2: int;
  var vslice_dummy_var_41: int;

  anon0:
    call {:si_unique_call 305} vslice_dummy_var_41 := __HAVOC_malloc(4);
    new := actual_new;
    p_2 := actual_p_2;
    assume {:nonnull} p_2 != 0;
    assume p_2 > 0;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_922: int);
  free ensures {:va_keep} Tmp_922 == 1 || Tmp_922 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_922: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_922 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_922 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_42: int;

  anon0:
    call {:si_unique_call 306} vslice_dummy_var_42 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_5: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_2: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_43: int;

  anon0:
    call {:si_unique_call 307} vslice_dummy_var_43 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    CompletionRoutine := actual_CompletionRoutine;
    Context_2 := actual_Context_2;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 308} irpSp := sdv_IoGetNextIrpStackLocation(pirp_5);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    return;
}



procedure {:origName "_sdv_init9"} {:osmodel} _sdv_init9();
  modifies alloc, sdv_inside_init_entrypoint;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init9"} {:osmodel} _sdv_init9()
{
  var vslice_dummy_var_44: int;

  anon0:
    call {:si_unique_call 309} vslice_dummy_var_44 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    sdv_inside_init_entrypoint := 0;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume p_sdv_fx_dev_object == sdv_fx_dev_object;
    assume sdv_start_irp_already_issued == 0;
    assume sdv_isr_routine == li2bplFunctionConstant799;
    assume sdv_ke_dpc == li2bplFunctionConstant801;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant804;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_45: int;

  anon0:
    call {:si_unique_call 310} vslice_dummy_var_45 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin();
  modifies alloc, sdv_inside_init_entrypoint;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin()
{
  var vslice_dummy_var_46: int;

  anon0:
    call {:si_unique_call 311} vslice_dummy_var_46 := __HAVOC_malloc(4);
    sdv_inside_init_entrypoint := 1;
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_934: int);
  free ensures {:va_keep} Tmp_934 == 1 || Tmp_934 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_934: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_934 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_934 := 0;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int)
{
  var vslice_dummy_var_47: int;

  anon0:
    call {:si_unique_call 312} vslice_dummy_var_47 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_938: int);
  free ensures {:va_keep} Tmp_938 == 258 || Tmp_938 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_938: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_938 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_938 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_938 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_5: int)
{
  var vslice_dummy_var_48: int;

  anon0:
    call {:si_unique_call 313} vslice_dummy_var_48 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_942: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_942: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_942 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_946: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_946: int)
{
  var {:pointer} pirp_6: int;

  anon0:
    pirp_6 := actual_pirp_6;
    assume {:nonnull} pirp_6 != 0;
    assume pirp_6 > 0;
    Tmp_946 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(pirp_6)))];
    return;
}



procedure {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_3: int, actual_n: int, actual_a: int, actual_r_2: int, actual_s_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_3: int, actual_n: int, actual_a: int, actual_r_2: int, actual_s_1: int)
{
  var vslice_dummy_var_49: int;

  anon0:
    call {:si_unique_call 314} vslice_dummy_var_49 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin()
{
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 315} vslice_dummy_var_50 := __HAVOC_malloc(4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_952: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_952: int)
{

  anon0:
    havoc Tmp_952;
    return;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_956: int, dup_assertVar: bool);
  modifies alloc, sdv_inside_init_entrypoint, Mem_T.PWPP_PROJECT_CONTROL_BLOCK, Mem_T.DeviceExtension__DEVICE_OBJECT, Mem_T.CurrentStackLocation_unnamed_tag_6, LockDepth, t, yogi_error, Mem_T.P_DEVICE_OBJECT, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.PVOID, Mem_T.P_IRBIRP, Mem_T.LogStart__DEBUG_LOG;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} t == 1 || t == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_956: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_957: int;
  var {:scalar} Tmp_958: int;
  var boogieTmp: int;
  var WPP_GLOBAL_Control__Loc: int;
  var EventTraceConfigGuid__Loc: int;
  var BUS1394_CLASS_GUID__Loc: int;
  var WmiScsiAddressGuid__Loc: int;
  var GUID_DEVINTERFACE_STORAGEPORT__Loc: int;
  var GUID_DEVINTERFACE_FLOPPY__Loc: int;
  var GUID_DEVICEDUMP_STORAGE_DEVICE__Loc: int;
  var GUID_DEVINTERFACE_WRITEONCEDISK__Loc: int;
  var WPP_TRACE_CONTROL_NULL_GUID__Loc: int;
  var GUID_DEVINTERFACE_TAPE__Loc: int;
  var GUID_DEVINTERFACE_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_CDCHANGER__Loc: int;
  var GUID_DEVINTERFACE_MEDIUMCHANGER__Loc: int;
  var ScsiRawInterfaceGuid__Loc: int;
  var GUID_DEVINTERFACE_VMLUN__Loc: int;
  var DefaultTraceSecurityGuid__Loc: int;
  var GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc: int;
  var GUID_DEVINTERFACE_PARTITION__Loc: int;
  var GUID_DEVINTERFACE_CDROM__Loc: int;
  var GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_DISK__Loc: int;
  var SystemTraceControlGuid__Loc: int;
  var EventTraceGuid__Loc: int;
  var GUID_DEVINTERFACE_SES__Loc: int;
  var WPP_ThisDir_CTLGUID_wppCtlGuid__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_fx_dev_object__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var KeTickCount__Loc: int;
  var vslice_dummy_var_599: int;
  var vslice_dummy_var_4147: int;
  var vslice_dummy_var_4148: int;
  var vslice_dummy_var_4149: int;
  var vslice_dummy_var_4150: int;
  var vslice_dummy_var_4151: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 316} WPP_GLOBAL_Control__Loc := __HAVOC_malloc_or_null(4);
    assume WPP_GLOBAL_Control__Loc == WPP_GLOBAL_Control;
    assume WPP_GLOBAL_Control != 0;
    call {:si_unique_call 317} EventTraceConfigGuid__Loc := __HAVOC_malloc_or_null(16);
    assume EventTraceConfigGuid__Loc == EventTraceConfigGuid;
    assume EventTraceConfigGuid != 0;
    call {:si_unique_call 318} BUS1394_CLASS_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume BUS1394_CLASS_GUID__Loc == BUS1394_CLASS_GUID;
    assume BUS1394_CLASS_GUID != 0;
    call {:si_unique_call 319} WmiScsiAddressGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WmiScsiAddressGuid__Loc == WmiScsiAddressGuid;
    assume WmiScsiAddressGuid != 0;
    call {:si_unique_call 320} GUID_DEVINTERFACE_STORAGEPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_STORAGEPORT__Loc == GUID_DEVINTERFACE_STORAGEPORT;
    assume GUID_DEVINTERFACE_STORAGEPORT != 0;
    call {:si_unique_call 321} GUID_DEVINTERFACE_FLOPPY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_FLOPPY__Loc == GUID_DEVINTERFACE_FLOPPY;
    assume GUID_DEVINTERFACE_FLOPPY != 0;
    call {:si_unique_call 322} GUID_DEVICEDUMP_STORAGE_DEVICE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICEDUMP_STORAGE_DEVICE__Loc == GUID_DEVICEDUMP_STORAGE_DEVICE;
    assume GUID_DEVICEDUMP_STORAGE_DEVICE != 0;
    call {:si_unique_call 323} GUID_DEVINTERFACE_WRITEONCEDISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_WRITEONCEDISK__Loc == GUID_DEVINTERFACE_WRITEONCEDISK;
    assume GUID_DEVINTERFACE_WRITEONCEDISK != 0;
    call {:si_unique_call 324} WPP_TRACE_CONTROL_NULL_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WPP_TRACE_CONTROL_NULL_GUID__Loc == WPP_TRACE_CONTROL_NULL_GUID;
    assume WPP_TRACE_CONTROL_NULL_GUID != 0;
    call {:si_unique_call 325} GUID_DEVINTERFACE_TAPE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_TAPE__Loc == GUID_DEVINTERFACE_TAPE;
    assume GUID_DEVINTERFACE_TAPE != 0;
    call {:si_unique_call 326} GUID_DEVINTERFACE_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_VOLUME__Loc == GUID_DEVINTERFACE_VOLUME;
    assume GUID_DEVINTERFACE_VOLUME != 0;
    call {:si_unique_call 327} GUID_DEVINTERFACE_CDCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDCHANGER__Loc == GUID_DEVINTERFACE_CDCHANGER;
    assume GUID_DEVINTERFACE_CDCHANGER != 0;
    call {:si_unique_call 328} GUID_DEVINTERFACE_MEDIUMCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_MEDIUMCHANGER__Loc == GUID_DEVINTERFACE_MEDIUMCHANGER;
    assume GUID_DEVINTERFACE_MEDIUMCHANGER != 0;
    call {:si_unique_call 329} ScsiRawInterfaceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume ScsiRawInterfaceGuid__Loc == ScsiRawInterfaceGuid;
    assume ScsiRawInterfaceGuid != 0;
    call {:si_unique_call 330} GUID_DEVINTERFACE_VMLUN__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_VMLUN__Loc == GUID_DEVINTERFACE_VMLUN;
    assume GUID_DEVINTERFACE_VMLUN != 0;
    call {:si_unique_call 331} DefaultTraceSecurityGuid__Loc := __HAVOC_malloc_or_null(16);
    assume DefaultTraceSecurityGuid__Loc == DefaultTraceSecurityGuid;
    assume DefaultTraceSecurityGuid != 0;
    call {:si_unique_call 332} GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc == GUID_DEVICEDUMP_DRIVER_STORAGE_PORT;
    assume GUID_DEVICEDUMP_DRIVER_STORAGE_PORT != 0;
    call {:si_unique_call 333} GUID_DEVINTERFACE_PARTITION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_PARTITION__Loc == GUID_DEVINTERFACE_PARTITION;
    assume GUID_DEVINTERFACE_PARTITION != 0;
    call {:si_unique_call 334} GUID_DEVINTERFACE_CDROM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDROM__Loc == GUID_DEVINTERFACE_CDROM;
    assume GUID_DEVINTERFACE_CDROM != 0;
    call {:si_unique_call 335} GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc == GUID_DEVINTERFACE_HIDDEN_VOLUME;
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME != 0;
    call {:si_unique_call 336} GUID_DEVINTERFACE_DISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_DISK__Loc == GUID_DEVINTERFACE_DISK;
    assume GUID_DEVINTERFACE_DISK != 0;
    call {:si_unique_call 337} SystemTraceControlGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SystemTraceControlGuid__Loc == SystemTraceControlGuid;
    assume SystemTraceControlGuid != 0;
    call {:si_unique_call 338} EventTraceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume EventTraceGuid__Loc == EventTraceGuid;
    assume EventTraceGuid != 0;
    call {:si_unique_call 339} GUID_DEVINTERFACE_SES__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_SES__Loc == GUID_DEVINTERFACE_SES;
    assume GUID_DEVINTERFACE_SES != 0;
    call {:si_unique_call 340} WPP_ThisDir_CTLGUID_wppCtlGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WPP_ThisDir_CTLGUID_wppCtlGuid__Loc == WPP_ThisDir_CTLGUID_wppCtlGuid;
    assume WPP_ThisDir_CTLGUID_wppCtlGuid != 0;
    call {:si_unique_call 341} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 342} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 343} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 344} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 345} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 346} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 347} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 348} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 349} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 350} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 351} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 352} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 353} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 354} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 355} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 356} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 357} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 358} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 359} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(44);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 360} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 361} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 362} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 363} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 364} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 365} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 366} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 367} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 368} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 369} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 370} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 371} sdv_fx_dev_object__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_fx_dev_object__Loc == sdv_fx_dev_object;
    assume sdv_fx_dev_object != 0;
    call {:si_unique_call 372} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 373} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 374} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 375} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 376} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 377} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 378} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 379} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 380} KeTickCount__Loc := __HAVOC_malloc_or_null(12);
    assume KeTickCount__Loc == KeTickCount;
    assume KeTickCount != 0;
    call {:si_unique_call 381} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 382} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 383} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 384} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 385} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 386} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 387} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 388} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 389} boogieTmp := __HAVOC_malloc_or_null(240);
    assume sicrni == boogieTmp;
    call {:si_unique_call 390} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 391} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 392} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 393} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 394} boogieTmp := __HAVOC_malloc_or_null(48);
    call {:si_unique_call 395} vslice_dummy_var_4147 := __HAVOC_malloc(44);
    call {:si_unique_call 396} vslice_dummy_var_4148 := __HAVOC_malloc(44);
    call {:si_unique_call 397} vslice_dummy_var_4149 := __HAVOC_malloc(44);
    call {:si_unique_call 398} vslice_dummy_var_4150 := __HAVOC_malloc(44);
    call {:si_unique_call 399} vslice_dummy_var_4151 := __HAVOC_malloc(44);
    call {:si_unique_call 400} vslice_dummy_var_599 := __HAVOC_malloc(236);
    assume {:mainInitDone} true;
    call {:si_unique_call 401} corralExtraInit();
    call {:si_unique_call 402} corralExplainErrorInit();
    call {:si_unique_call 403} _sdv_init11();
    call {:si_unique_call 404} _sdv_init1();
    call {:si_unique_call 405} _sdv_init4();
    call {:si_unique_call 406} _sdv_init5();
    call {:si_unique_call 407} _sdv_init3();
    call {:si_unique_call 408} _sdv_init6();
    call {:si_unique_call 409} _sdv_init9();
    call {:si_unique_call 410} _sdv_init7();
    call {:si_unique_call 411} _sdv_init8();
    call {:si_unique_call 412} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_958 := 0;
    goto L34;

  L34:
    assume Tmp_958 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_957 := 0;
    goto L38;

  L38:
    assume Tmp_957 != 0;
    Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(sdv_devobj_pdo)] := sdv_harnessDeviceExtension;
    Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(sdv_devobj_fdo)] := sdv_harnessDeviceExtension_two;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(sdv_irp)))] := sdv_harnessStackLocation;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(sdv_other_irp)))] := sdv_other_harnessStackLocation;
    call {:si_unique_call 413} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L32;

  L32:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_957 := 1;
    goto L38;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_958 := 1;
    goto L34;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_7: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_7: int)
{
  var {:pointer} pirp_7: int;
  var vslice_dummy_var_51: int;

  anon0:
    call {:si_unique_call 414} vslice_dummy_var_51 := __HAVOC_malloc(4);
    pirp_7 := actual_pirp_7;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_7 == sdv_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_7 == sdv_other_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_7 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_7 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_962: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_962: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_962;
    return;
}



procedure {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end();
  modifies alloc, sdv_inside_init_entrypoint;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end()
{
  var vslice_dummy_var_52: int;

  anon0:
    call {:si_unique_call 415} vslice_dummy_var_52 := __HAVOC_malloc(4);
    sdv_inside_init_entrypoint := 0;
    return;
}



procedure {:origName "sdv_KeGetCurrentThread"} {:osmodel} sdv_KeGetCurrentThread() returns (Tmp_968: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeGetCurrentThread"} {:osmodel} sdv_KeGetCurrentThread() returns (Tmp_968: int)
{
  var {:pointer} sdv_270: int;

  anon0:
    call {:si_unique_call 416} sdv_270 := __HAVOC_malloc(4);
    Tmp_968 := sdv_270;
    return;
}



procedure {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_4: int) returns (Tmp_970: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_4: int) returns (Tmp_970: int)
{
  var {:pointer} sdv_272: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 417} sdv_272 := __HAVOC_malloc(1);
    Tmp_970 := sdv_272;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_970 := 0;
    goto L1;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int)
{
  var {:pointer} DestinationString_1: int;
  var {:pointer} SourceString_1: int;
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 418} vslice_dummy_var_53 := __HAVOC_malloc(4);
    DestinationString_1 := actual_DestinationString_1;
    SourceString_1 := actual_SourceString_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString_1 != 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString_1 == 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString_1 != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString_1 == 0;
    goto L4;
}



procedure {:origName "RtlCompareMemory"} {:osmodel} RtlCompareMemory(actual_Source1: int, actual_Source2: int, actual_Length_1: int) returns (Tmp_974: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlCompareMemory"} {:osmodel} RtlCompareMemory(actual_Source1: int, actual_Source2: int, actual_Length_1: int) returns (Tmp_974: int)
{
  var {:scalar} r_3: int;
  var {:scalar} sdv_273: int;

  anon0:
    r_3 := sdv_273;
    Tmp_974 := r_3;
    return;
}



procedure {:origName "KeAcquireInStackQueuedSpinLockAtDpcLevel"} {:osmodel} KeAcquireInStackQueuedSpinLockAtDpcLevel(actual_SpinLock_3: int, actual_LockHandle: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeAcquireInStackQueuedSpinLockAtDpcLevel"} {:osmodel} KeAcquireInStackQueuedSpinLockAtDpcLevel(actual_SpinLock_3: int, actual_LockHandle: int)
{
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 419} vslice_dummy_var_54 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseInStackQueuedSpinLockFromDpcLevel"} {:osmodel} KeReleaseInStackQueuedSpinLockFromDpcLevel(actual_LockHandle_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeReleaseInStackQueuedSpinLockFromDpcLevel"} {:osmodel} KeReleaseInStackQueuedSpinLockFromDpcLevel(actual_LockHandle_1: int)
{
  var vslice_dummy_var_55: int;

  anon0:
    call {:si_unique_call 420} vslice_dummy_var_55 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_980: int);
  free ensures {:va_keep} Tmp_980 == 0 || Tmp_980 == actual_TargetDevice_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_980: int)
{
  var {:pointer} TargetDevice_1: int;

  anon0:
    TargetDevice_1 := actual_TargetDevice_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} TargetDevice_1 == sdv_p_devobj_pdo;
    Tmp_980 := TargetDevice_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} TargetDevice_1 != sdv_p_devobj_pdo;
    Tmp_980 := 0;
    goto L1;
}



procedure {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_56: int;

  anon0:
    call {:si_unique_call 421} vslice_dummy_var_56 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeInitializeMutex"} {:osmodel} KeInitializeMutex(actual_Mutex_1: int, actual_Level: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeMutex"} {:osmodel} KeInitializeMutex(actual_Mutex_1: int, actual_Level: int)
{
  var vslice_dummy_var_57: int;

  anon0:
    call {:si_unique_call 422} vslice_dummy_var_57 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_3: int)
{
  var vslice_dummy_var_58: int;

  anon0:
    call {:si_unique_call 423} vslice_dummy_var_58 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int)
{
  var vslice_dummy_var_59: int;

  anon0:
    call {:si_unique_call 424} vslice_dummy_var_59 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_990: int);
  free ensures {:va_keep} Tmp_990 == 0 || Tmp_990 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_990: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_990 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_990 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 425} vslice_dummy_var_60 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int)
{
  var vslice_dummy_var_61: int;

  anon0:
    call {:si_unique_call 426} vslice_dummy_var_61 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int)
{
  var {:scalar} NewIrql: int;
  var vslice_dummy_var_62: int;

  anon0:
    call {:si_unique_call 427} vslice_dummy_var_62 := __HAVOC_malloc(4);
    NewIrql := actual_NewIrql;
    return;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_8: int)
{
  var vslice_dummy_var_63: int;

  anon0:
    call {:si_unique_call 428} vslice_dummy_var_63 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po: int, actual_pirp_9: int) returns (Tmp_1000: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, t, LockDepth, Mem_T.P_DEVICE_OBJECT, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.LogStart__DEBUG_LOG;
  free ensures {:va_keep} old(t) == 1 ==> t != 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} t == 1 || t == old(t);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po: int, actual_pirp_9: int) returns (Tmp_1000: int)
{
  var {:pointer} ps: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_1001: int;
  var {:scalar} sdv_283: int;
  var {:scalar} status_26: int;
  var {:scalar} Tmp_1003: int;
  var {:pointer} po: int;
  var {:pointer} pirp_9: int;

  anon0:
    po := actual_po;
    pirp_9 := actual_pirp_9;
    status_26 := 0;
    minor := sdv_283;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    ps := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(pirp_9)))];
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    call {:si_unique_call 429} sdv_SetStatus(pirp_9);
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] := minor;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 430} sdv_stub_dispatch_begin();
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] != 0;
    goto L60;

  L60:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] == 3;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_1001 := 0;
    goto L217;

  L217:
    assume Tmp_1001 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] == 2;
    call {:si_unique_call 431} SdvExit#1();
    goto L66;

  L66:
    call {:si_unique_call 432} status_26 := Sbp2PnpDeviceControl(po, pirp_9);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  L75:
    call {:si_unique_call 433} sdv_stub_dispatch_end(status_26, 0);
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    Tmp_1000 := status_26;
    goto LM2;

  LM2:
    return;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] != 2;
    goto L66;

  anon61_Then:
    Tmp_1001 := 1;
    goto L217;

  anon59_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] != 3;
    goto L61;

  anon83_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] == 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_start_irp_already_issued != 0;
    Tmp_1003 := 0;
    goto L223;

  L223:
    assume Tmp_1003 != 0;
    goto L60;

  anon58_Then:
    assume {:partition} sdv_start_irp_already_issued == 0;
    Tmp_1003 := 1;
    goto L223;

  anon62_Then:
    call {:si_unique_call 434} status_26 := sdv_DoNothing();
    goto L75;

  anon63_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 435} status_26 := Sbp2SystemControl(po, pirp_9);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 436} sdv_SetPowerIrpMinorFunction(pirp_9);
    call {:si_unique_call 437} status_26 := Sbp2PowerControl(po, pirp_9);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 438} status_26 := sdv_DoNothing();
    goto L75;

  anon66_Then:
    call {:si_unique_call 439} status_26 := sdv_DoNothing();
    goto L75;

  anon67_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 440} status_26 := sdv_DoNothing();
    goto L75;

  anon68_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 441} status_26 := Sbp2ScsiRequests(po, pirp_9);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 442} status_26 := Sbp2DeviceControl(po, pirp_9);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 443} status_26 := sdv_DoNothing();
    goto L75;

  anon71_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 444} status_26 := sdv_DoNothing();
    goto L75;

  anon72_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 445} status_26 := sdv_DoNothing();
    goto L75;

  anon73_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 446} status_26 := sdv_DoNothing();
    goto L75;

  anon74_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 447} status_26 := sdv_DoNothing();
    goto L75;

  anon75_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 448} status_26 := sdv_DoNothing();
    goto L75;

  anon76_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 449} status_26 := Sbp2CreateClose(po, pirp_9);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 450} status_26 := Sbp2CreateClose(po, pirp_9);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    goto L75;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_1: int) returns (Tmp_1004: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_1: int) returns (Tmp_1004: int)
{
  var {:scalar} OldState_1: int;
  var {:pointer} Event_1: int;

  anon0:
    Event_1 := actual_Event_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    havoc OldState_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    Tmp_1004 := OldState_1;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_4: int, actual_new_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_4: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_64: int;

  anon0:
    call {:si_unique_call 451} vslice_dummy_var_64 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_10: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_10: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_65: int;

  anon0:
    call {:si_unique_call 452} vslice_dummy_var_65 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_1010: int);
  free ensures {:va_keep} Tmp_1010 == 0 || Tmp_1010 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_1010: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1010 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1010 := -1073741823;
    goto L1;
}



procedure {:origName "ZwCreateDirectoryObject"} {:osmodel} ZwCreateDirectoryObject(actual_DirectoryHandle: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_1012: int);
  free ensures {:va_keep} Tmp_1012 == -1073741819 || Tmp_1012 == 2 || Tmp_1012 == -1073741790 || Tmp_1012 == -1073741823 || Tmp_1012 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ZwCreateDirectoryObject"} {:osmodel} ZwCreateDirectoryObject(actual_DirectoryHandle: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_1012: int)
{

  anon0:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_1012 := -1073741819;
    goto L1;

  L1:
    return;

  anon10_Then:
    Tmp_1012 := 2;
    goto L1;

  anon11_Then:
    Tmp_1012 := -1073741790;
    goto L1;

  anon12_Then:
    Tmp_1012 := -1073741823;
    goto L1;

  anon9_Then:
    Tmp_1012 := 0;
    goto L1;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_4: int)
{
  var vslice_dummy_var_66: int;

  anon0:
    call {:si_unique_call 453} vslice_dummy_var_66 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseInStackQueuedSpinLock"} {:osmodel} KeReleaseInStackQueuedSpinLock(actual_LockHandle_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeReleaseInStackQueuedSpinLock"} {:osmodel} KeReleaseInStackQueuedSpinLock(actual_LockHandle_2: int)
{
  var vslice_dummy_var_67: int;

  anon0:
    call {:si_unique_call 454} vslice_dummy_var_67 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_5: int, actual_ResultLength: int) returns (Tmp_1018: int);
  free ensures {:va_keep} Tmp_1018 == -1073741811 || Tmp_1018 == -1073741823 || Tmp_1018 == 0 || Tmp_1018 == 5 || Tmp_1018 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_5: int, actual_ResultLength: int) returns (Tmp_1018: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_296: int;
  var {:scalar} Length_5: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_5 := actual_Length_5;
    ResultLength := actual_ResultLength;
    L := sdv_296;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_1018 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_1018 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_5;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_5 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_1018 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_5 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_5;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_1018 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_5 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_1018 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_5;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_68: int;

  anon0:
    call {:si_unique_call 455} vslice_dummy_var_68 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExFreePoolWithTag"} {:osmodel} ExFreePoolWithTag(actual_P_1: int, actual_Tag_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExFreePoolWithTag"} {:osmodel} ExFreePoolWithTag(actual_P_1: int, actual_Tag_2: int)
{
  var vslice_dummy_var_69: int;

  anon0:
    call {:si_unique_call 456} vslice_dummy_var_69 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_8: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State_1: int) returns (Tmp_1024: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_8: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State_1: int) returns (Tmp_1024: int)
{
  var {:pointer} r_4: int;
  var {:pointer} sdv_297: int;

  anon0:
    call {:si_unique_call 457} sdv_297 := __HAVOC_malloc(1);
    r_4 := sdv_297;
    Tmp_1024 := r_4;
    return;
}



procedure {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_3: int) returns (Tmp_1028: int);
  modifies LockDepth;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} Tmp_1028 == -1073741823 || Tmp_1028 == -1073741738 || Tmp_1028 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_3: int) returns (Tmp_1028: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_1028 := -1073741823;
    goto L1;

  L1:
    call {:si_unique_call 458} SLIC_sdv_IoAcquireRemoveLock_exit(0, Tmp_1028);
    return;

  anon5_Then:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1028 := -1073741738;
    goto L1;

  anon6_Then:
    Tmp_1028 := 0;
    goto L1;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1030: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1030: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_1030;
    return;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_70: int;

  anon0:
    call {:si_unique_call 459} vslice_dummy_var_70 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int)
{
  var vslice_dummy_var_71: int;

  anon0:
    call {:si_unique_call 460} vslice_dummy_var_71 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1036: int);
  free ensures {:va_keep} Tmp_1036 == 1 || Tmp_1036 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1036: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1036 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1036 := 0;
    goto L1;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_1038: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_1038: int)
{
  var {:pointer} irpSp_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 461} irpSp_1 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    Tmp_1038 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1038 := 0;
    goto L1;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_1042: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_1042: int)
{
  var {:scalar} p_5: int;

  anon0:
    Tmp_1042 := p_5;
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type_2: int, actual_State_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type_2: int, actual_State_2: int)
{
  var {:pointer} Event_2: int;
  var {:scalar} Type_2: int;
  var {:scalar} State_2: int;
  var vslice_dummy_var_72: int;

  anon0:
    call {:si_unique_call 462} vslice_dummy_var_72 := __HAVOC_malloc(4);
    Event_2 := actual_Event_2;
    Type_2 := actual_Type_2;
    State_2 := actual_State_2;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_73: int;

  anon0:
    call {:si_unique_call 463} vslice_dummy_var_73 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_11: int)
{
  var vslice_dummy_var_74: int;

  anon0:
    call {:si_unique_call 464} vslice_dummy_var_74 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_5: int)
{
  var {:pointer} SpinLock_5: int;
  var vslice_dummy_var_75: int;

  anon0:
    call {:si_unique_call 465} vslice_dummy_var_75 := __HAVOC_malloc(4);
    SpinLock_5 := actual_SpinLock_5;
    assume {:nonnull} SpinLock_5 != 0;
    assume SpinLock_5 > 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_4: int) returns (Tmp_1056: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_4: int) returns (Tmp_1056: int)
{
  var {:pointer} sdv_316: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 466} sdv_316 := __HAVOC_malloc(NumberOfBytes);
    Tmp_1056 := sdv_316;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1056 := 0;
    goto L1;
}



procedure {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_12: int) returns (Tmp_1058: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_12: int) returns (Tmp_1058: int)
{
  var {:pointer} ioWorkItem: int;
  var {:pointer} sdv_318: int;
  var {:scalar} Tmp_1060: int;

  anon0:
    call {:si_unique_call 467} sdv_318 := __HAVOC_malloc(1);
    ioWorkItem := sdv_318;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ioWorkItem == 0;
    Tmp_1060 := 0;
    goto L27;

  L27:
    assume Tmp_1060 != 0;
    assume {:nonnull} ioWorkItem != 0;
    assume ioWorkItem > 0;
    Tmp_1058 := ioWorkItem;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} ioWorkItem != 0;
    Tmp_1060 := 1;
    goto L27;

  anon6_Then:
    Tmp_1058 := 0;
    goto L1;
}



procedure {:origName "KeAcquireInStackQueuedSpinLock"} {:osmodel} KeAcquireInStackQueuedSpinLock(actual_SpinLock_6: int, actual_LockHandle_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "KeAcquireInStackQueuedSpinLock"} {:osmodel} KeAcquireInStackQueuedSpinLock(actual_SpinLock_6: int, actual_LockHandle_3: int)
{
  var vslice_dummy_var_76: int;

  anon0:
    call {:si_unique_call 468} vslice_dummy_var_76 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_77: int;

  anon0:
    call {:si_unique_call 469} vslice_dummy_var_77 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_78: int;

  anon0:
    call {:si_unique_call 470} vslice_dummy_var_78 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_13: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_1067: int);
  free ensures {:va_keep} Tmp_1067 == -1073741811 || Tmp_1067 == -1073741808 || Tmp_1067 == -1073741823 || Tmp_1067 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_13: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_1067: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1067 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_1067 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_1067 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_1067 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_1069: int);
  free ensures {:va_keep} Tmp_1069 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_1069: int)
{

  anon0:
    Tmp_1069 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1071: int);
  free ensures {:va_keep} Tmp_1071 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1071: int)
{

  anon0:
    Tmp_1071 := -1073741823;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_1073: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_1073: int)
{
  var {:pointer} sdv_321: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 471} sdv_321 := __HAVOC_malloc(1);
    Tmp_1073 := sdv_321;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1073 := 0;
    goto L1;
}



procedure {:origName "SLIC_Sbp2PnpDeviceControl_entry"} {:osmodel} SLIC_Sbp2PnpDeviceControl_entry(actual_caller: int, actual_Sbp2PnpDeviceControl_1: int);
  modifies t;
  free ensures {:va_keep} old(t) == 1 ==> t != 0;
  free ensures {:va_keep} old(t) == 0 ==> t != 0;
  free ensures {:va_keep} t == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_Sbp2PnpDeviceControl_entry"} {:osmodel} SLIC_Sbp2PnpDeviceControl_entry(actual_caller: int, actual_Sbp2PnpDeviceControl_1: int)
{
  var {:pointer} Tmp_1075: int;
  var {:pointer} Sbp2PnpDeviceControl_1: int;

  anon0:
    Sbp2PnpDeviceControl_1 := actual_Sbp2PnpDeviceControl_1;
    assume {:nonnull} Sbp2PnpDeviceControl_1 != 0;
    assume Sbp2PnpDeviceControl_1 > 0;
    Tmp_1075 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2PnpDeviceControl_1)))];
    assume {:nonnull} Tmp_1075 != 0;
    assume Tmp_1075 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 472} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    return;

  anon3_Then:
    t := 1;
    goto L2;
}



procedure {:origName "SLIC_ABORT_9_0"} SLIC_ABORT_9_0(actual_caller_1: int, actual_Sbp2PnpDeviceControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_ABORT_9_0"} SLIC_ABORT_9_0(actual_caller_1: int, actual_Sbp2PnpDeviceControl_2: int)
{
  var {:pointer} caller_1: int;
  var {:pointer} Sbp2PnpDeviceControl_2: int;

  anon0:
    caller_1 := actual_caller_1;
    Sbp2PnpDeviceControl_2 := actual_Sbp2PnpDeviceControl_2;
    call {:si_unique_call 473} SLIC_ERROR_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_sdv_IoReleaseRemoveLockAndWait_entry"} {:osmodel} SLIC_sdv_IoReleaseRemoveLockAndWait_entry(actual_caller_2: int);
  modifies LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_IoReleaseRemoveLockAndWait_entry"} {:osmodel} SLIC_sdv_IoReleaseRemoveLockAndWait_entry(actual_caller_2: int)
{
  var {:pointer} caller_2: int;

  anon0:
    caller_2 := actual_caller_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} LockDepth == 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} t != 1;
    goto L5;

  L5:
    LockDepth := LockDepth - 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} t == 1;
    call {:si_unique_call 474} SLIC_ABORT_5_0(caller_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} LockDepth != 0;
    goto L5;
}



procedure {:origName "SLIC_sdv_IoAcquireRemoveLock_exit"} {:osmodel} SLIC_sdv_IoAcquireRemoveLock_exit(actual_caller_3: int, actual_sdv_322: int);
  modifies LockDepth;
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_IoAcquireRemoveLock_exit"} {:osmodel} SLIC_sdv_IoAcquireRemoveLock_exit(actual_caller_3: int, actual_sdv_322: int)
{
  var {:scalar} sdv_322: int;

  anon0:
    sdv_322 := actual_sdv_322;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} 0 < LockDepth;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_322 == 0;
    goto L7;

  L7:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_322 == 0;
    LockDepth := LockDepth + 1;
    goto L2;

  L2:
    return;

  anon7_Then:
    assume {:partition} sdv_322 != 0;
    goto L2;

  anon9_Then:
    assume {:partition} sdv_322 != 0;
    call {:si_unique_call 475} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  anon8_Then:
    assume {:partition} LockDepth <= 0;
    goto L7;
}



procedure {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_4: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_4: int)
{

  anon0:
    call {:si_unique_call 476} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    return;
}



procedure {:origName "_sdv_init11"} {:osmodel} _sdv_init11();
  modifies LockDepth, t, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> LockDepth == 0;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 1 ==> t != 1;
  free ensures {:va_keep} old(t) == 0 ==> t != 1;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} t == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init11"} {:osmodel} _sdv_init11()
{

  anon0:
    LockDepth := 0;
    t := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_ABORT_7_0"} SLIC_ABORT_7_0(actual_caller_5: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_ABORT_7_0"} SLIC_ABORT_7_0(actual_caller_5: int)
{
  var {:pointer} caller_5: int;

  anon0:
    caller_5 := actual_caller_5;
    call {:si_unique_call 477} SLIC_ERROR_ROUTINE(strConst__li2bpl5);
    return;
}



procedure {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_6: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_6: int)
{

  anon0:
    call {:si_unique_call 478} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    return;
}



procedure {:origName "SLIC_ABORT_5_0"} SLIC_ABORT_5_0(actual_caller_7: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_ABORT_5_0"} SLIC_ABORT_5_0(actual_caller_7: int)
{
  var {:pointer} caller_7: int;

  anon0:
    caller_7 := actual_caller_7;
    call {:si_unique_call 479} SLIC_ERROR_ROUTINE(strConst__li2bpl6);
    return;
}



procedure {:origName "SLIC_sdv_IoReleaseRemoveLock_entry"} {:osmodel} SLIC_sdv_IoReleaseRemoveLock_entry(actual_caller_8: int);
  modifies LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_sdv_IoReleaseRemoveLock_entry"} {:osmodel} SLIC_sdv_IoReleaseRemoveLock_entry(actual_caller_8: int)
{
  var {:pointer} caller_8: int;

  anon0:
    caller_8 := actual_caller_8;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} LockDepth == 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} t != 1;
    goto L5;

  L5:
    LockDepth := LockDepth - 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} t == 1;
    call {:si_unique_call 480} SLIC_ABORT_7_0(caller_8);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} LockDepth != 0;
    goto L5;
}



procedure {:origName "SLIC_Sbp2PnpDeviceControl_exit"} {:osmodel} SLIC_Sbp2PnpDeviceControl_exit(actual_caller_9: int, actual_Sbp2PnpDeviceControl_3: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_Sbp2PnpDeviceControl_exit"} {:osmodel} SLIC_Sbp2PnpDeviceControl_exit(actual_caller_9: int, actual_Sbp2PnpDeviceControl_3: int)
{
  var {:pointer} Tmp_1076: int;
  var {:pointer} caller_9: int;
  var {:pointer} Sbp2PnpDeviceControl_3: int;

  anon0:
    caller_9 := actual_caller_9;
    Sbp2PnpDeviceControl_3 := actual_Sbp2PnpDeviceControl_3;
    assume {:nonnull} Sbp2PnpDeviceControl_3 != 0;
    assume Sbp2PnpDeviceControl_3 > 0;
    Tmp_1076 := Mem_T.CurrentStackLocation_unnamed_tag_6[CurrentStackLocation_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Sbp2PnpDeviceControl_3)))];
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} 0 < LockDepth;
    assume {:nonnull} Tmp_1076 != 0;
    assume Tmp_1076 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} t != 1;
    goto L6;

  L6:
    call {:si_unique_call 481} SLIC_EXIT_ROUTINE(strConst__li2bpl3);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} t == 1;
    call {:si_unique_call 482} SLIC_ABORT_9_0(caller_9, Sbp2PnpDeviceControl_3);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    goto L6;

  anon11_Then:
    assume {:partition} LockDepth <= 0;
    goto L6;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_329: int, actual_sdv_330: int) returns (Tmp_1081: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_329: int, actual_sdv_330: int) returns (Tmp_1081: int)
{
  var {:scalar} sdv_331: int;

  anon0:
    call {:si_unique_call 483} Tmp_1081 := __HAVOC_malloc(4);
    call {:si_unique_call 484} sdv_331 := __HAVOC_malloc(4);
    call {:si_unique_call 485} SLIC_sdv_IoReleaseRemoveLock_entry(strConst__li2bpl2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Tmp_1081 != 0;
    assume Tmp_1081 > 0;
    assume {:nonnull} sdv_331 != 0;
    assume sdv_331 > 0;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_365: int, actual_sdv_366: int) returns (Tmp_1097: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_365: int, actual_sdv_366: int) returns (Tmp_1097: int)
{
  var {:scalar} sdv_367: int;

  anon0:
    call {:si_unique_call 486} Tmp_1097 := __HAVOC_malloc(4);
    call {:si_unique_call 487} sdv_367 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1097 != 0;
    assume Tmp_1097 > 0;
    assume {:nonnull} sdv_367 != 0;
    assume sdv_367 > 0;
    return;
}



procedure {:origName "Sbp2PowerControl"} Sbp2PowerControl(actual_DeviceObject_14: int, actual_Irp_8: int) returns (Tmp_1105: int);
  modifies alloc, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.PVOID, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PowerControl"} Sbp2PowerControl(actual_DeviceObject_14: int, actual_Irp_8: int) returns (Tmp_1105: int)
{
  var {:scalar} Tmp_1106: int;
  var {:pointer} irpStack: int;
  var {:pointer} pdoExtension_7: int;
  var {:pointer} Tmp_1107: int;
  var {:pointer} Tmp_1108: int;
  var {:scalar} Tmp_1109: int;
  var {:scalar} Tmp_1110: int;
  var {:pointer} Tmp_1111: int;
  var {:scalar} status_28: int;
  var {:pointer} Tmp_1113: int;
  var {:scalar} Tmp_1114: int;
  var {:pointer} Tmp_1115: int;
  var {:scalar} minorFunction: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Irp_8: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_4152: int;

  anon0:
    DeviceObject_14 := actual_DeviceObject_14;
    Irp_8 := actual_Irp_8;
    call {:si_unique_call 488} Tmp_1113 := __HAVOC_malloc(4);
    call {:si_unique_call 489} Tmp_1115 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    pdoExtension_7 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_14)];
    call {:si_unique_call 490} irpStack := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    minorFunction := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack)];
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1113;
    assume {:nonnull} Tmp_1113 != 0;
    assume Tmp_1113 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    Tmp_1114 := minorFunction;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    Tmp_1108 := strConst__li2bpl8;
    goto L25;

  L25:
    havoc Tmp_1107;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1106;
    call {:si_unique_call 491} WPP_SF_qsqD(Tmp_1106, 34, Tmp_1107, pdoExtension_7, Tmp_1108, Irp_8, Tmp_1114);
    goto L18;

  L18:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    Tmp_1109 := minorFunction;
    call {:si_unique_call 492} Sbp2AddLog(pdoExtension_7, 2, -800893890, Tmp_1109, Irp_8);
    call {:si_unique_call 493} status_28 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_28 < 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1115;
    assume {:nonnull} Tmp_1115 != 0;
    assume Tmp_1115 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc Tmp_1111;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1110;
    call {:si_unique_call 494} WPP_SF_q(Tmp_1110, 35, Tmp_1111, pdoExtension_7);
    goto L69;

  L69:
    call {:si_unique_call 495} Sbp2AddLog(pdoExtension_7, 2, -800893903, status_28, 0);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 496} PoStartNextPowerIrp(0);
    call {:si_unique_call 497} sdv_IoCompleteRequest(0, 0);
    Tmp_1105 := status_28;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon44_Then:
    goto L69;

  anon57_Then:
    goto L69;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L69;

  anon41_Then:
    assume {:partition} 0 <= status_28;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} minorFunction != 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} minorFunction != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} minorFunction != 2;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} minorFunction == 3;
    goto L46;

  L46:
    status_28 := 0;
    goto L56;

  L56:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 498} PoStartNextPowerIrp(0);
    call {:si_unique_call 499} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    call {:si_unique_call 500} vslice_dummy_var_79 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_7), Irp_8);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1105 := status_28;
    goto L1;

  anon55_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    assume {:partition} minorFunction != 3;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc status_28;
    goto L56;

  anon47_Then:
    assume {:partition} minorFunction == 2;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc vslice_dummy_var_4152;
    call {:si_unique_call 501} Sbp2AddLog(pdoExtension_7, 2, -800893902, vslice_dummy_var_4152, Irp_8);
    call {:si_unique_call 502} status_28 := Sbp2PdoSetPower(DeviceObject_14, Irp_8);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1105 := status_28;
    goto L1;

  anon56_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon48_Then:
    assume {:partition} minorFunction == 1;
    goto L46;

  anon42_Then:
    assume {:partition} minorFunction == 0;
    goto L46;

  anon45_Then:
    status_28 := -1073741810;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 503} PoStartNextPowerIrp(0);
    call {:si_unique_call 504} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    Tmp_1105 := status_28;
    goto L1;

  anon39_Then:
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} minorFunction == 2;
    call {:si_unique_call 505} status_28 := Sbp2FdoSetPower(DeviceObject_14, Irp_8);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon53_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon52_Then:
    assume {:partition} minorFunction != 2;
    call {:si_unique_call 506} PoStartNextPowerIrp(0);
    call {:si_unique_call 507} sdv_IoSkipCurrentIrpStackLocation(Irp_8);
    call {:si_unique_call 508} status_28 := PoCallDriver#1(0, Irp_8);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon51_Then:
    Tmp_1108 := strConst__li2bpl7;
    goto L25;

  anon40_Then:
    goto L18;

  anon50_Then:
    goto L18;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2PdoCompleteSystemPowerIrp"} Sbp2PdoCompleteSystemPowerIrp(actual_DeviceObject_16: int, actual_Irp_9: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PdoCompleteSystemPowerIrp"} Sbp2PdoCompleteSystemPowerIrp(actual_DeviceObject_16: int, actual_Irp_9: int)
{
  var {:pointer} Tmp_1124: int;
  var {:pointer} irpStack_1: int;
  var {:pointer} Tmp_1125: int;
  var {:pointer} pdoExtension_8: int;
  var {:scalar} newPowerState: int;
  var {:scalar} Tmp_1126: int;
  var {:scalar} newSystemState: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_9: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_4153: int;

  anon0:
    call {:si_unique_call 509} newPowerState := __HAVOC_malloc(8);
    call {:si_unique_call 510} vslice_dummy_var_80 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_9 := actual_Irp_9;
    call {:si_unique_call 511} Tmp_1124 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    pdoExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_16)];
    call {:si_unique_call 512} irpStack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} irpStack_1 != 0;
    assume irpStack_1 > 0;
    havoc newSystemState;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1124;
    assume {:nonnull} Tmp_1124 != 0;
    assume Tmp_1124 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    havoc Tmp_1125;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1126;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    havoc vslice_dummy_var_4153;
    call {:si_unique_call 513} WPP_SF_qqD(Tmp_1126, 11, Tmp_1125, pdoExtension_8, Irp_9, vslice_dummy_var_4153);
    goto L17;

  L17:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    assume {:nonnull} newPowerState != 0;
    assume newPowerState > 0;
    call {:si_unique_call 514} Sbp2SetPowerState(DeviceObject_16, 0, newPowerState);
    goto L25;

  L25:
    call {:si_unique_call 515} PoStartNextPowerIrp(0);
    call {:si_unique_call 516} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    call {:si_unique_call 517} vslice_dummy_var_81 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_8), Irp_9);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    goto L25;

  anon12_Then:
    goto L17;

  anon14_Then:
    goto L17;

  anon13_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L17;
}



procedure {:origName "Sbp2PdoSetPower"} Sbp2PdoSetPower(actual_DeviceObject_17: int, actual_Irp_10: int) returns (Tmp_1129: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PdoSetPower"} Sbp2PdoSetPower(actual_DeviceObject_17: int, actual_Irp_10: int) returns (Tmp_1129: int)
{
  var {:pointer} irpStack_2: int;
  var {:pointer} Tmp_1130: int;
  var {:scalar} Tmp_1131: int;
  var {:pointer} Tmp_1132: int;
  var {:pointer} Tmp_1133: int;
  var {:pointer} Tmp_1134: int;
  var {:pointer} pdoExtension_9: int;
  var {:pointer} Tmp_1135: int;
  var {:scalar} Tmp_1136: int;
  var {:scalar} newPowerState_1: int;
  var {:pointer} Tmp_1137: int;
  var {:scalar} Tmp_1138: int;
  var {:pointer} Tmp_1139: int;
  var {:scalar} orbLock_3: int;
  var {:pointer} Tmp_1140: int;
  var {:pointer} Tmp_1141: int;
  var {:scalar} Tmp_1142: int;
  var {:scalar} powerState: int;
  var {:scalar} Tmp_1143: int;
  var {:scalar} Tmp_1144: int;
  var {:pointer} Tmp_1145: int;
  var {:scalar} sdv_384: int;
  var {:pointer} Tmp_1146: int;
  var {:pointer} Tmp_1147: int;
  var {:scalar} newDeviceState: int;
  var {:scalar} Tmp_1148: int;
  var {:scalar} Tmp_1149: int;
  var {:pointer} Tmp_1150: int;
  var {:scalar} Tmp_1151: int;
  var {:pointer} fdoExtension_4: int;
  var {:scalar} Tmp_1152: int;
  var {:scalar} newPowerState_2: int;
  var {:scalar} Tmp_1153: int;
  var {:pointer} Tmp_1154: int;
  var {:pointer} Tmp_1155: int;
  var {:pointer} Tmp_1156: int;
  var {:pointer} Tmp_1157: int;
  var {:scalar} cIrql_2: int;
  var {:scalar} Tmp_1158: int;
  var {:scalar} status_29: int;
  var {:pointer} Tmp_1159: int;
  var {:pointer} Tmp_1160: int;
  var {:scalar} bAsyncPowerUp: int;
  var {:scalar} newSystemState_1: int;
  var {:pointer} Tmp_1161: int;
  var {:scalar} powerType: int;
  var {:pointer} Tmp_1162: int;
  var {:pointer} DeviceObject_17: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_4154: int;
  var vslice_dummy_var_4155: int;
  var vslice_dummy_var_4156: int;

  anon0:
    call {:si_unique_call 518} newPowerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 519} orbLock_3 := __HAVOC_malloc(12);
    call {:si_unique_call 520} powerState := __HAVOC_malloc(8);
    call {:si_unique_call 521} newPowerState_2 := __HAVOC_malloc(8);
    DeviceObject_17 := actual_DeviceObject_17;
    Irp_10 := actual_Irp_10;
    call {:si_unique_call 522} Tmp_1133 := __HAVOC_malloc(4);
    call {:si_unique_call 523} Tmp_1135 := __HAVOC_malloc(4);
    call {:si_unique_call 524} Tmp_1146 := __HAVOC_malloc(4);
    call {:si_unique_call 525} Tmp_1147 := __HAVOC_malloc(4);
    call {:si_unique_call 526} Tmp_1154 := __HAVOC_malloc(4);
    call {:si_unique_call 527} Tmp_1157 := __HAVOC_malloc(4);
    call {:si_unique_call 528} Tmp_1159 := __HAVOC_malloc(4);
    call {:si_unique_call 529} Tmp_1161 := __HAVOC_malloc(4);
    call {:si_unique_call 530} irpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    pdoExtension_9 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_17)];
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc powerType;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1154;
    assume {:nonnull} Tmp_1154 != 0;
    assume Tmp_1154 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} powerType != 0;
    Tmp_1162 := strConst__li2bpl10;
    goto L26;

  L26:
    havoc Tmp_1160;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1138;
    call {:si_unique_call 531} WPP_SF_qsq(Tmp_1138, 13, Tmp_1160, pdoExtension_9, Tmp_1162, Irp_10);
    goto L18;

  L18:
    call {:si_unique_call 532} sdv_IoMarkIrpPending(0);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} powerType == 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc newSystemState_1;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1146;
    assume {:nonnull} Tmp_1146 != 0;
    assume Tmp_1146 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    Tmp_1143 := newSystemState_1 - 1;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc Tmp_1158;
    havoc Tmp_1155;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1153;
    call {:si_unique_call 533} WPP_SF_qDDq(Tmp_1153, 14, Tmp_1155, pdoExtension_9, Tmp_1158, Tmp_1143, Irp_10);
    goto L158;

  L158:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc vslice_dummy_var_4154;
    call {:si_unique_call 534} Sbp2AddLog(pdoExtension_9, 2, -800893837, vslice_dummy_var_4154, newSystemState_1);
    status_29 := 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} newSystemState_1 != 1;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    assume {:nonnull} newPowerState_2 != 0;
    assume newPowerState_2 > 0;
    call {:si_unique_call 535} Sbp2SetPowerState(DeviceObject_17, 0, newPowerState_2);
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 536} status_29 := PoRequestPowerIrp#1(DeviceObject_17, 2, powerState, li2bplFunctionConstant694, Irp_10, 0);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} yogi_error != 1;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} status_29 < 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1159;
    assume {:nonnull} Tmp_1159 != 0;
    assume Tmp_1159 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    havoc Tmp_1134;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1149;
    call {:si_unique_call 537} WPP_SF_qD(Tmp_1149, 17, Tmp_1134, pdoExtension_9, status_29);
    goto L111;

  L111:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} status_29 == 259;
    goto L119;

  L119:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1135;
    assume {:nonnull} Tmp_1135 != 0;
    assume Tmp_1135 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    havoc Tmp_1141;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1131;
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    call {:si_unique_call 538} WPP_SF_qqD(Tmp_1131, 20, Tmp_1141, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_17)], Irp_10, status_29);
    goto L120;

  L120:
    Tmp_1129 := 259;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon111_Then:
    goto L120;

  anon131_Then:
    goto L120;

  anon110_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L120;

  anon109_Then:
    assume {:partition} status_29 != 259;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    call {:si_unique_call 539} Sbp2PdoCompletePowerIrp(DeviceObject_17, Irp_10);
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} yogi_error != 1;
    goto L119;

  anon130_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon123_Then:
    goto L111;

  anon147_Then:
    goto L111;

  anon122_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L111;

  anon121_Then:
    assume {:partition} 0 <= status_29;
    status_29 := 259;
    goto L111;

  anon146_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon115_Then:
    assume {:partition} newSystemState_1 == 1;
    bAsyncPowerUp := 0;
    call {:si_unique_call 540} Tmp_1150 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1150 != 0;
    assume Tmp_1150 > 0;
    call {:si_unique_call 541} sdv_KeAcquireSpinLock(0, Tmp_1150);
    assume {:nonnull} Tmp_1150 != 0;
    assume Tmp_1150 > 0;
    havoc cIrql_2;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc Tmp_1145;
    assume {:nonnull} Tmp_1145 != 0;
    assume Tmp_1145 > 0;
    fdoExtension_4 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1145)];
    assume {:nonnull} fdoExtension_4 != 0;
    assume fdoExtension_4 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_4)], 8388608) != 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1133;
    assume {:nonnull} Tmp_1133 != 0;
    assume Tmp_1133 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    havoc Tmp_1130;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1151;
    call {:si_unique_call 542} WPP_SF_q(Tmp_1151, 15, Tmp_1130, pdoExtension_9);
    goto L188;

  L188:
    status_29 := -1073741810;
    call {:si_unique_call 543} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L111;

  anon116_Then:
    goto L188;

  anon142_Then:
    goto L188;

  anon141_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon140_Then:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_4)], 8388608) == 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc Tmp_1139;
    assume {:nonnull} Tmp_1139 != 0;
    assume Tmp_1139 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    bAsyncPowerUp := 1;
    goto L199;

  L199:
    call {:si_unique_call 544} sdv_KeReleaseSpinLock(0, cIrql_2);
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 545} vslice_dummy_var_84 := PoRequestPowerIrp#1(DeviceObject_17, 2, powerState, 0, 0, 0);
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} yogi_error != 1;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} status_29 < 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1161;
    assume {:nonnull} Tmp_1161 != 0;
    assume Tmp_1161 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    havoc Tmp_1132;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1148;
    call {:si_unique_call 546} WPP_SF_qD(Tmp_1148, 16, Tmp_1132, pdoExtension_9, status_29);
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto L111;

  anon120_Then:
    goto L216;

  anon145_Then:
    goto L216;

  anon119_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L216;

  anon117_Then:
    assume {:partition} 0 <= status_29;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} bAsyncPowerUp != 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto L213;

  L213:
    status_29 := 0;
    goto L111;

  anon118_Then:
    assume {:partition} bAsyncPowerUp == 0;
    goto L213;

  anon144_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon143_Then:
    goto L199;

  anon139_Then:
    goto L111;

  anon114_Then:
    goto L158;

  anon138_Then:
    goto L158;

  anon137_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L158;

  anon101_Then:
    assume {:partition} powerType != 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} powerType == 1;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc newDeviceState;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1157;
    assume {:nonnull} Tmp_1157 != 0;
    assume Tmp_1157 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    Tmp_1152 := newDeviceState - 1;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc Tmp_1144;
    havoc Tmp_1140;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1136;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc vslice_dummy_var_4155;
    call {:si_unique_call 547} WPP_SF_qDDqD(Tmp_1136, 18, Tmp_1140, pdoExtension_9, Tmp_1144, Tmp_1152, Irp_10, vslice_dummy_var_4155);
    goto L41;

  L41:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc vslice_dummy_var_4156;
    call {:si_unique_call 548} Sbp2AddLog(pdoExtension_9, 2, -800893852, vslice_dummy_var_4156, newDeviceState);
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    assume {:nonnull} newPowerState_1 != 0;
    assume newPowerState_1 > 0;
    call {:si_unique_call 549} Sbp2SetPowerState(DeviceObject_17, 1, newPowerState_1);
    call {:si_unique_call 550} AcquireOrbListLock(pdoExtension_9, orbLock_3, 0);
    call {:si_unique_call 551} sdv_384 := sdv_IsListEmpty(0);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} sdv_384 != 0;
    call {:si_unique_call 552} ReleaseOrbListLock(pdoExtension_9, orbLock_3, 0);
    call {:si_unique_call 553} Tmp_1150 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1150 != 0;
    assume Tmp_1150 > 0;
    call {:si_unique_call 554} sdv_KeAcquireSpinLock(0, Tmp_1150);
    assume {:nonnull} Tmp_1150 != 0;
    assume Tmp_1150 > 0;
    havoc cIrql_2;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    havoc Tmp_1156;
    assume {:nonnull} Tmp_1156 != 0;
    assume Tmp_1156 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    call {:si_unique_call 555} sdv_KeReleaseSpinLock(0, cIrql_2);
    call {:si_unique_call 556} status_29 := Sbp2ManagementTransaction#1(pdoExtension_9, 7, -1);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} yogi_error != 1;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1147;
    assume {:nonnull} Tmp_1147 != 0;
    assume Tmp_1147 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    havoc Tmp_1137;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1142;
    call {:si_unique_call 557} WPP_SF_qD(Tmp_1142, 19, Tmp_1137, pdoExtension_9, status_29);
    goto L103;

  L103:
    status_29 := 0;
    goto L111;

  anon108_Then:
    goto L103;

  anon133_Then:
    goto L103;

  anon107_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon132_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon129_Then:
    goto L87;

  L87:
    call {:si_unique_call 558} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L103;

  anon128_Then:
    goto L87;

  anon106_Then:
    assume {:partition} sdv_384 == 0;
    call {:si_unique_call 559} sdv_IoMarkIrpPending(0);
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    call {:si_unique_call 560} vslice_dummy_var_82 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_9), Irp_10);
    call {:si_unique_call 561} ReleaseOrbListLock(pdoExtension_9, orbLock_3, 0);
    Tmp_1129 := 259;
    goto L1;

  anon105_Then:
    call {:si_unique_call 562} Tmp_1150 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1150 != 0;
    assume Tmp_1150 > 0;
    call {:si_unique_call 563} sdv_KeAcquireSpinLock(0, Tmp_1150);
    assume {:nonnull} Tmp_1150 != 0;
    assume Tmp_1150 > 0;
    havoc cIrql_2;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    status_29 := 0;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    goto L139;

  L139:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto L143;

  L143:
    call {:si_unique_call 564} sdv_KeReleaseSpinLock(0, cIrql_2);
    call {:si_unique_call 565} Sbp2StartQueue#1(pdoExtension_9);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} yogi_error != 1;
    goto L111;

  anon135_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon113_Then:
    call {:si_unique_call 566} vslice_dummy_var_83 := Sbp2QueueManagementWorkItem#1(pdoExtension_9, 4, -1);
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 567} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L111;

  anon136_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon134_Then:
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    goto L143;

  anon112_Then:
    goto L139;

  anon104_Then:
    status_29 := 0;
    goto L111;

  anon103_Then:
    goto L41;

  anon127_Then:
    goto L41;

  anon126_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L41;

  anon102_Then:
    assume {:partition} powerType != 1;
    status_29 := -1073741822;
    goto L111;

  anon100_Then:
    assume {:partition} powerType == 0;
    Tmp_1162 := strConst__li2bpl9;
    goto L26;

  anon99_Then:
    goto L18;

  anon125_Then:
    goto L18;

  anon124_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2FdoDevicePowerCompletion"} Sbp2FdoDevicePowerCompletion(actual_DeviceObject_18: int, actual_Irp_11: int, actual_Context_7: int) returns (Tmp_1163: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2FdoDevicePowerCompletion"} Sbp2FdoDevicePowerCompletion(actual_DeviceObject_18: int, actual_Irp_11: int, actual_Context_7: int) returns (Tmp_1163: int)
{
  var {:pointer} irpStack_3: int;
  var {:scalar} Tmp_1164: int;
  var {:scalar} newPowerState_3: int;
  var {:scalar} newDeviceState_1: int;
  var {:pointer} fdoExtension_5: int;
  var {:pointer} Tmp_1166: int;
  var {:scalar} status_30: int;
  var {:pointer} Tmp_1167: int;
  var {:pointer} DeviceObject_18: int;
  var {:pointer} Irp_11: int;
  var vslice_dummy_var_4157: int;

  anon0:
    call {:si_unique_call 568} newPowerState_3 := __HAVOC_malloc(8);
    DeviceObject_18 := actual_DeviceObject_18;
    Irp_11 := actual_Irp_11;
    call {:si_unique_call 569} Tmp_1166 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    fdoExtension_5 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_18)];
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1166;
    assume {:nonnull} Tmp_1166 != 0;
    assume Tmp_1166 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    havoc Tmp_1167;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1164;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    havoc vslice_dummy_var_4157;
    call {:si_unique_call 570} WPP_SF_qqD(Tmp_1164, 27, Tmp_1167, fdoExtension_5, Irp_11, vslice_dummy_var_4157);
    goto L10;

  L10:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 571} irpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc newDeviceState_1;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} newPowerState_3 != 0;
    assume newPowerState_3 > 0;
    call {:si_unique_call 572} Sbp2SetPowerState(DeviceObject_18, 1, newPowerState_3);
    goto L29;

  L29:
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    call {:si_unique_call 573} PoStartNextPowerIrp(0);
    call {:si_unique_call 574} sdv_IoCompleteRequest(0, 0);
    status_30 := -1073741802;
    goto L42;

  L42:
    Tmp_1163 := status_30;
    return;

  anon15_Then:
    goto L29;

  anon11_Then:
    call {:si_unique_call 575} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    havoc status_30;
    goto L42;

  anon12_Then:
    goto L10;

  anon14_Then:
    goto L10;

  anon13_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L10;
}



procedure {:origName "Sbp2FdoSetPower"} Sbp2FdoSetPower(actual_DeviceObject_19: int, actual_Irp_13: int) returns (Tmp_1178: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, yogi_error, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2FdoSetPower"} Sbp2FdoSetPower(actual_DeviceObject_19: int, actual_Irp_13: int) returns (Tmp_1178: int)
{
  var {:pointer} Tmp_1179: int;
  var {:pointer} Tmp_1180: int;
  var {:pointer} irpStack_5: int;
  var {:pointer} Tmp_1181: int;
  var {:scalar} Tmp_1182: int;
  var {:scalar} Tmp_1183: int;
  var {:scalar} Tmp_1184: int;
  var {:scalar} Tmp_1185: int;
  var {:pointer} Tmp_1186: int;
  var {:scalar} Tmp_1187: int;
  var {:scalar} Tmp_1188: int;
  var {:pointer} Tmp_1189: int;
  var {:scalar} powerState_1: int;
  var {:pointer} Tmp_1190: int;
  var {:scalar} newDeviceState_2: int;
  var {:pointer} fdoExtension_6: int;
  var {:pointer} Tmp_1192: int;
  var {:pointer} Tmp_1193: int;
  var {:scalar} Tmp_1194: int;
  var {:pointer} Tmp_1195: int;
  var {:pointer} Tmp_1196: int;
  var {:scalar} Tmp_1197: int;
  var {:pointer} Tmp_1198: int;
  var {:pointer} Tmp_1199: int;
  var {:scalar} status_32: int;
  var {:scalar} Tmp_1200: int;
  var {:scalar} newSystemState_2: int;
  var {:pointer} Tmp_1201: int;
  var {:pointer} Tmp_1202: int;
  var {:scalar} Tmp_1203: int;
  var {:scalar} powerType_1: int;
  var {:pointer} DeviceObject_19: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;

  anon0:
    call {:si_unique_call 576} powerState_1 := __HAVOC_malloc(8);
    DeviceObject_19 := actual_DeviceObject_19;
    Irp_13 := actual_Irp_13;
    call {:si_unique_call 577} Tmp_1186 := __HAVOC_malloc(4);
    call {:si_unique_call 578} Tmp_1189 := __HAVOC_malloc(4);
    call {:si_unique_call 579} Tmp_1190 := __HAVOC_malloc(4);
    call {:si_unique_call 580} Tmp_1193 := __HAVOC_malloc(4);
    call {:si_unique_call 581} Tmp_1198 := __HAVOC_malloc(4);
    call {:si_unique_call 582} Tmp_1202 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    fdoExtension_6 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_19)];
    call {:si_unique_call 583} irpStack_5 := sdv_IoGetCurrentIrpStackLocation(Irp_13);
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    havoc powerType_1;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1202;
    assume {:nonnull} Tmp_1202 != 0;
    assume Tmp_1202 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} powerType_1 != 0;
    Tmp_1199 := strConst__li2bpl10;
    goto L23;

  L23:
    havoc Tmp_1180;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1185;
    call {:si_unique_call 584} WPP_SF_qsq(Tmp_1185, 28, Tmp_1180, fdoExtension_6, Tmp_1199, Irp_13);
    goto L17;

  L17:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} powerType_1 == 0;
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    havoc newSystemState_2;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1193;
    assume {:nonnull} Tmp_1193 != 0;
    assume Tmp_1193 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    Tmp_1188 := newSystemState_2 - 1;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1203;
    havoc Tmp_1201;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1187;
    call {:si_unique_call 585} WPP_SF_qDDq(Tmp_1187, 29, Tmp_1201, fdoExtension_6, Tmp_1203, Tmp_1188, Irp_13);
    goto L94;

  L94:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    call {:si_unique_call 586} sdv_IoMarkIrpPending(0);
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1190;
    assume {:nonnull} Tmp_1190 != 0;
    assume Tmp_1190 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    havoc Tmp_1192;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1184;
    call {:si_unique_call 587} WPP_SF_qq(Tmp_1184, 30, Tmp_1192, fdoExtension_6, Irp_13);
    goto L120;

  L120:
    call {:si_unique_call 588} status_32 := PoRequestPowerIrp#1(DeviceObject_19, 2, powerState_1, li2bplFunctionConstant697, Irp_13, 0);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} status_32 < 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1198;
    assume {:nonnull} Tmp_1198 != 0;
    assume Tmp_1198 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    havoc Tmp_1196;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1197;
    call {:si_unique_call 589} WPP_SF_qD(Tmp_1197, 31, Tmp_1196, fdoExtension_6, status_32);
    goto L137;

  L137:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 590} PoStartNextPowerIrp(0);
    call {:si_unique_call 591} sdv_IoCompleteRequest(0, 0);
    goto L135;

  L135:
    status_32 := 259;
    goto L66;

  L66:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1189;
    assume {:nonnull} Tmp_1189 != 0;
    assume Tmp_1189 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} powerType_1 != 0;
    Tmp_1195 := strConst__li2bpl10;
    goto L73;

  L73:
    havoc Tmp_1179;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1194;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    call {:si_unique_call 592} WPP_SF_qsqD(Tmp_1194, 33, Tmp_1179, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_19)], Tmp_1195, Irp_13, status_32);
    goto L67;

  L67:
    Tmp_1178 := status_32;
    goto LM2;

  LM2:
    return;

  anon69_Then:
    assume {:partition} powerType_1 == 0;
    Tmp_1195 := strConst__li2bpl9;
    goto L73;

  anon68_Then:
    goto L67;

  anon82_Then:
    goto L67;

  anon67_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon76_Then:
    goto L137;

  anon88_Then:
    goto L137;

  anon75_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L137;

  anon74_Then:
    assume {:partition} 0 <= status_32;
    goto L135;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    goto L120;

  anon86_Then:
    goto L120;

  anon85_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L120;

  anon72_Then:
    call {:si_unique_call 593} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_13);
    call {:si_unique_call 594} sdv_IoSetCompletionRoutine(Irp_13, li2bplFunctionConstant698, 0, 1, 1, 1);
    call {:si_unique_call 595} vslice_dummy_var_86 := PoCallDriver#1(0, Irp_13);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    status_32 := 259;
    goto L66;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 596} PoStartNextPowerIrp(0);
    call {:si_unique_call 597} sdv_IoSkipCurrentIrpStackLocation(Irp_13);
    call {:si_unique_call 598} status_32 := PoCallDriver#1(0, Irp_13);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto L66;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon71_Then:
    goto L94;

  anon84_Then:
    goto L94;

  anon83_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L94;

  anon61_Then:
    assume {:partition} powerType_1 != 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} powerType_1 == 1;
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    havoc newDeviceState_2;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1186;
    assume {:nonnull} Tmp_1186 != 0;
    assume Tmp_1186 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    Tmp_1183 := newDeviceState_2 - 1;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc Tmp_1200;
    havoc Tmp_1181;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1182;
    call {:si_unique_call 599} WPP_SF_qDDq(Tmp_1182, 32, Tmp_1181, fdoExtension_6, Tmp_1200, Tmp_1183, Irp_13);
    goto L37;

  L37:
    call {:si_unique_call 600} sdv_IoMarkIrpPending(0);
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 601} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_13);
    call {:si_unique_call 602} sdv_IoSetCompletionRoutine(Irp_13, li2bplFunctionConstant700, 0, 1, 1, 1);
    goto L59;

  L59:
    call {:si_unique_call 603} vslice_dummy_var_85 := PoCallDriver#1(0, Irp_13);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    status_32 := 259;
    goto L66;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    call {:si_unique_call 604} PoStartNextPowerIrp(0);
    call {:si_unique_call 605} sdv_IoSkipCurrentIrpStackLocation(Irp_13);
    goto L59;

  anon65_Then:
    goto L37;

  anon80_Then:
    goto L37;

  anon79_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L37;

  anon64_Then:
    assume {:partition} powerType_1 != 1;
    status_32 := -1073741822;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 606} PoStartNextPowerIrp(0);
    call {:si_unique_call 607} sdv_IoCompleteRequest(0, 0);
    goto L66;

  anon63_Then:
    assume {:partition} powerType_1 == 0;
    Tmp_1199 := strConst__li2bpl9;
    goto L23;

  anon62_Then:
    goto L17;

  anon78_Then:
    goto L17;

  anon77_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L17;
}



procedure {:origName "Sbp2PdoCompletePowerIrp"} Sbp2PdoCompletePowerIrp(actual_DeviceObject_20: int, actual_Irp_14: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PdoCompletePowerIrp"} Sbp2PdoCompletePowerIrp(actual_DeviceObject_20: int, actual_Irp_14: int)
{
  var {:pointer} irpStack_6: int;
  var {:scalar} powerType_2: int;
  var {:pointer} DeviceObject_20: int;
  var {:pointer} Irp_14: int;
  var vslice_dummy_var_87: int;

  anon0:
    call {:si_unique_call 608} vslice_dummy_var_87 := __HAVOC_malloc(4);
    DeviceObject_20 := actual_DeviceObject_20;
    Irp_14 := actual_Irp_14;
    call {:si_unique_call 609} irpStack_6 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} irpStack_6 != 0;
    assume irpStack_6 > 0;
    havoc powerType_2;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} powerType_2 != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} powerType_2 == 1;
    call {:si_unique_call 610} Sbp2PdoCompleteDevicePowerIrp(DeviceObject_20, Irp_14);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} powerType_2 != 1;
    call {:si_unique_call 611} PoStartNextPowerIrp(0);
    call {:si_unique_call 612} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon10_Then:
    assume {:partition} powerType_2 == 0;
    call {:si_unique_call 613} Sbp2PdoCompleteSystemPowerIrp(DeviceObject_20, Irp_14);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "WPP_SF_qsq"} WPP_SF_qsq(actual_Logger_11: int, actual_id_11: int, actual_TraceGuid_11: int, actual_s_p_e_c_i_a_l_48: int, actual_s_p_e_c_i_a_l_49: int, actual_s_p_e_c_i_a_l_50: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qsq"} WPP_SF_qsq(actual_Logger_11: int, actual_id_11: int, actual_TraceGuid_11: int, actual_s_p_e_c_i_a_l_48: int, actual_s_p_e_c_i_a_l_49: int, actual_s_p_e_c_i_a_l_50: int)
{
  var {:scalar} sdv_400: int;
  var {:pointer} TraceGuid_11: int;
  var {:pointer} s_p_e_c_i_a_l_49: int;
  var vslice_dummy_var_88: int;

  anon0:
    call {:si_unique_call 614} vslice_dummy_var_88 := __HAVOC_malloc(4);
    TraceGuid_11 := actual_TraceGuid_11;
    s_p_e_c_i_a_l_49 := actual_s_p_e_c_i_a_l_49;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_49 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_49 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_49 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_49 == 0;
    goto L9;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var {:scalar} Tmp_1211: int;
  var vslice_dummy_var_89: int;

  anon0:
    call {:si_unique_call 615} Tmp_1211 := __HAVOC_malloc(4);
    call {:si_unique_call 616} vslice_dummy_var_89 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1211 != 0;
    assume Tmp_1211 > 0;
    return;
}



procedure {:origName "Sbp2FdoSystemPowerUpCompletion"} Sbp2FdoSystemPowerUpCompletion(actual_DeviceObject_21: int, actual_MinorFunction_3: int, actual_SD1: int, actual_Context_8: int, actual_IoStatus_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2FdoSystemPowerUpCompletion"} Sbp2FdoSystemPowerUpCompletion(actual_DeviceObject_21: int, actual_MinorFunction_3: int, actual_SD1: int, actual_Context_8: int, actual_IoStatus_2: int)
{
  var {:scalar} PowerState_1: int;
  var {:pointer} irpStack_7: int;
  var {:scalar} newPowerState_4: int;
  var {:pointer} Tmp_1214: int;
  var {:pointer} fdoExtension_7: int;
  var {:pointer} irp_1: int;
  var {:scalar} Tmp_1217: int;
  var {:pointer} Tmp_1218: int;
  var {:scalar} newSystemState_3: int;
  var {:pointer} DeviceObject_21: int;
  var {:pointer} SD1: int;
  var {:pointer} Context_8: int;
  var {:pointer} IoStatus_2: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_4158: int;

  anon0:
    call {:si_unique_call 617} PowerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 618} newPowerState_4 := __HAVOC_malloc(8);
    call {:si_unique_call 619} vslice_dummy_var_90 := __HAVOC_malloc(4);
    DeviceObject_21 := actual_DeviceObject_21;
    SD1 := actual_SD1;
    Context_8 := actual_Context_8;
    IoStatus_2 := actual_IoStatus_2;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    call {:si_unique_call 620} Tmp_1214 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    fdoExtension_7 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_21)];
    irp_1 := Context_8;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1214;
    assume {:nonnull} Tmp_1214 != 0;
    assume Tmp_1214 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_1218;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1217;
    assume {:nonnull} IoStatus_2 != 0;
    assume IoStatus_2 > 0;
    havoc vslice_dummy_var_4158;
    call {:si_unique_call 621} WPP_SF_qqD(Tmp_1217, 26, Tmp_1218, fdoExtension_7, irp_1, vslice_dummy_var_4158);
    goto L14;

  L14:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} irp_1 != 0;
    call {:si_unique_call 622} irpStack_7 := sdv_IoGetCurrentIrpStackLocation(irp_1);
    assume {:nonnull} irpStack_7 != 0;
    assume irpStack_7 > 0;
    havoc newSystemState_3;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} newPowerState_4 != 0;
    assume newPowerState_4 > 0;
    call {:si_unique_call 623} Sbp2SetPowerState(DeviceObject_21, 0, newPowerState_4);
    assume {:nonnull} IoStatus_2 != 0;
    assume IoStatus_2 > 0;
    assume {:nonnull} irp_1 != 0;
    assume irp_1 > 0;
    call {:si_unique_call 624} PoStartNextPowerIrp(0);
    call {:si_unique_call 625} sdv_IoCompleteRequest(0, 0);
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} irp_1 == 0;
    goto L1;

  anon10_Then:
    goto L14;

  anon12_Then:
    goto L14;

  anon11_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L14;
}



procedure {:origName "WPP_SF_qDDqD"} WPP_SF_qDDqD(actual_Logger_12: int, actual_id_12: int, actual_TraceGuid_12: int, actual_s_p_e_c_i_a_l_51: int, actual_s_p_e_c_i_a_l_52: int, actual_s_p_e_c_i_a_l_53: int, actual_s_p_e_c_i_a_l_54: int, actual_s_p_e_c_i_a_l_55: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDDqD"} WPP_SF_qDDqD(actual_Logger_12: int, actual_id_12: int, actual_TraceGuid_12: int, actual_s_p_e_c_i_a_l_51: int, actual_s_p_e_c_i_a_l_52: int, actual_s_p_e_c_i_a_l_53: int, actual_s_p_e_c_i_a_l_54: int, actual_s_p_e_c_i_a_l_55: int)
{
  var {:pointer} TraceGuid_12: int;
  var vslice_dummy_var_91: int;

  anon0:
    call {:si_unique_call 626} vslice_dummy_var_91 := __HAVOC_malloc(4);
    TraceGuid_12 := actual_TraceGuid_12;
    return;
}



procedure {:origName "Sbp2PdoSystemPowerCompletion"} Sbp2PdoSystemPowerCompletion(actual_DeviceObject_22: int, actual_MinorFunction_4: int, actual_structPtr888PowerState: int, actual_Context_9: int, actual_IoStatus_3: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PdoSystemPowerCompletion"} Sbp2PdoSystemPowerCompletion(actual_DeviceObject_22: int, actual_MinorFunction_4: int, actual_structPtr888PowerState: int, actual_Context_9: int, actual_IoStatus_3: int)
{
  var {:scalar} PowerState: int;
  var {:pointer} irp_2: int;
  var {:pointer} DeviceObject_22: int;
  var {:pointer} structPtr888PowerState: int;
  var {:pointer} Context_9: int;
  var {:pointer} IoStatus_3: int;
  var vslice_dummy_var_92: int;

  anon0:
    call {:si_unique_call 627} PowerState := __HAVOC_malloc(8);
    call {:si_unique_call 628} vslice_dummy_var_92 := __HAVOC_malloc(4);
    DeviceObject_22 := actual_DeviceObject_22;
    structPtr888PowerState := actual_structPtr888PowerState;
    Context_9 := actual_Context_9;
    IoStatus_3 := actual_IoStatus_3;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    irp_2 := Context_9;
    assume {:nonnull} IoStatus_3 != 0;
    assume IoStatus_3 > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    call {:si_unique_call 629} Sbp2PdoCompleteSystemPowerIrp(DeviceObject_22, irp_2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "WPP_SF_qsqD"} WPP_SF_qsqD(actual_Logger_13: int, actual_id_13: int, actual_TraceGuid_13: int, actual_s_p_e_c_i_a_l_56: int, actual_s_p_e_c_i_a_l_57: int, actual_s_p_e_c_i_a_l_58: int, actual_s_p_e_c_i_a_l_59: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qsqD"} WPP_SF_qsqD(actual_Logger_13: int, actual_id_13: int, actual_TraceGuid_13: int, actual_s_p_e_c_i_a_l_56: int, actual_s_p_e_c_i_a_l_57: int, actual_s_p_e_c_i_a_l_58: int, actual_s_p_e_c_i_a_l_59: int)
{
  var {:scalar} sdv_404: int;
  var {:pointer} TraceGuid_13: int;
  var {:pointer} s_p_e_c_i_a_l_57: int;
  var vslice_dummy_var_93: int;

  anon0:
    call {:si_unique_call 630} vslice_dummy_var_93 := __HAVOC_malloc(4);
    TraceGuid_13 := actual_TraceGuid_13;
    s_p_e_c_i_a_l_57 := actual_s_p_e_c_i_a_l_57;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_57 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_57 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_57 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_57 == 0;
    goto L9;
}



procedure {:origName "WPP_SF_qssd"} WPP_SF_qssd(actual_Logger_14: int, actual_id_14: int, actual_TraceGuid_14: int, actual_s_p_e_c_i_a_l_60: int, actual_s_p_e_c_i_a_l_61: int, actual_s_p_e_c_i_a_l_62: int, actual_s_p_e_c_i_a_l_63: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qssd"} WPP_SF_qssd(actual_Logger_14: int, actual_id_14: int, actual_TraceGuid_14: int, actual_s_p_e_c_i_a_l_60: int, actual_s_p_e_c_i_a_l_61: int, actual_s_p_e_c_i_a_l_62: int, actual_s_p_e_c_i_a_l_63: int)
{
  var {:scalar} sdv_406: int;
  var {:scalar} sdv_407: int;
  var {:pointer} TraceGuid_14: int;
  var {:pointer} s_p_e_c_i_a_l_61: int;
  var {:pointer} s_p_e_c_i_a_l_62: int;
  var vslice_dummy_var_94: int;

  anon0:
    call {:si_unique_call 631} vslice_dummy_var_94 := __HAVOC_malloc(4);
    TraceGuid_14 := actual_TraceGuid_14;
    s_p_e_c_i_a_l_61 := actual_s_p_e_c_i_a_l_61;
    s_p_e_c_i_a_l_62 := actual_s_p_e_c_i_a_l_62;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_62 != 0;
    goto L9;

  L9:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} s_p_e_c_i_a_l_62 != 0;
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_61 != 0;
    goto L18;

  L18:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} s_p_e_c_i_a_l_61 != 0;
    goto L21;

  L21:
    return;

  anon12_Then:
    assume {:partition} s_p_e_c_i_a_l_61 == 0;
    goto L21;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_61 == 0;
    goto L18;

  anon10_Then:
    assume {:partition} s_p_e_c_i_a_l_62 == 0;
    goto L12;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_62 == 0;
    goto L9;
}



procedure {:origName "Sbp2SetPowerState"} Sbp2SetPowerState(actual_DeviceObject_23: int, actual_Type_3: int, actual_structPtr888NewState: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2SetPowerState"} Sbp2SetPowerState(actual_DeviceObject_23: int, actual_Type_3: int, actual_structPtr888NewState: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:scalar} NewState: int;
  var {:pointer} Tmp_1236: int;
  var {:pointer} Tmp_1237: int;
  var {:pointer} devExt: int;
  var {:scalar} sdv: int;
  var {:scalar} Tmp_1238: int;
  var {:pointer} Tmp_1240: int;
  var {:scalar} Tmp_1241: int;
  var {:pointer} Tmp_1243: int;
  var {:pointer} DeviceObject_23: int;
  var {:scalar} Type_3: int;
  var {:pointer} structPtr888NewState: int;
  var vslice_dummy_var_95: int;

  anon0:
    call {:si_unique_call 632} NewState := __HAVOC_malloc(8);
    call {:si_unique_call 633} sdv := __HAVOC_malloc(8);
    call {:si_unique_call 634} vslice_dummy_var_95 := __HAVOC_malloc(4);
    DeviceObject_23 := actual_DeviceObject_23;
    Type_3 := actual_Type_3;
    structPtr888NewState := actual_structPtr888NewState;
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    assume {:nonnull} structPtr888NewState != 0;
    assume structPtr888NewState > 0;
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    assume {:nonnull} structPtr888NewState != 0;
    assume structPtr888NewState > 0;
    call {:si_unique_call 635} Tmp_1240 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_23 != 0;
    assume DeviceObject_23 > 0;
    devExt := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_23)];
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1240;
    assume {:nonnull} Tmp_1240 != 0;
    assume Tmp_1240 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    havoc Tmp_1241;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Type_3 != 0;
    Tmp_1237 := strConst__li2bpl10;
    goto L18;

  L18:
    assume {:nonnull} devExt != 0;
    assume devExt > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1243 := strConst__li2bpl12;
    goto L21;

  L21:
    havoc Tmp_1236;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1238;
    call {:si_unique_call 636} WPP_SF_qssd(Tmp_1238, 10, Tmp_1236, devExt, Tmp_1243, Tmp_1237, Tmp_1241);
    goto L9;

  L9:
    call {:si_unique_call 637} structPtr888sdv := PoSetPowerState(0, Type_3, NewState);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    return;

  anon12_Then:
    Tmp_1243 := strConst__li2bpl11;
    goto L21;

  anon15_Then:
    assume {:partition} Type_3 == 0;
    Tmp_1237 := strConst__li2bpl9;
    goto L18;

  anon11_Then:
    goto L9;

  anon14_Then:
    goto L9;

  anon13_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L9;
}



procedure {:origName "Sbp2PdoCompleteDevicePowerIrp"} Sbp2PdoCompleteDevicePowerIrp(actual_DeviceObject_24: int, actual_Irp_15: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PdoCompleteDevicePowerIrp"} Sbp2PdoCompleteDevicePowerIrp(actual_DeviceObject_24: int, actual_Irp_15: int)
{
  var {:pointer} irpStack_8: int;
  var {:scalar} Tmp_1244: int;
  var {:pointer} Tmp_1245: int;
  var {:pointer} pdoExtension_10: int;
  var {:pointer} Tmp_1246: int;
  var {:pointer} Tmp_1247: int;
  var {:scalar} newPowerState_5: int;
  var {:scalar} newDeviceState_3: int;
  var {:pointer} Tmp_1249: int;
  var {:scalar} cIrql_4: int;
  var {:scalar} status_33: int;
  var {:pointer} DeviceObject_24: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_4159: int;

  anon0:
    call {:si_unique_call 638} newPowerState_5 := __HAVOC_malloc(8);
    call {:si_unique_call 639} vslice_dummy_var_96 := __HAVOC_malloc(4);
    DeviceObject_24 := actual_DeviceObject_24;
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 640} Tmp_1249 := __HAVOC_malloc(4);
    call {:si_unique_call 641} irpStack_8 := sdv_IoGetCurrentIrpStackLocation(Irp_15);
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    pdoExtension_10 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_24)];
    assume {:nonnull} irpStack_8 != 0;
    assume irpStack_8 > 0;
    havoc newDeviceState_3;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    havoc status_33;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1249;
    assume {:nonnull} Tmp_1249 != 0;
    assume Tmp_1249 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1246;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1244;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    havoc vslice_dummy_var_4159;
    call {:si_unique_call 642} WPP_SF_qqDD(Tmp_1244, 12, Tmp_1246, pdoExtension_10, Irp_15, status_33, vslice_dummy_var_4159);
    goto L20;

  L20:
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_33 != -1073741810;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} newPowerState_5 != 0;
    assume newPowerState_5 > 0;
    call {:si_unique_call 643} Sbp2SetPowerState(DeviceObject_24, 1, newPowerState_5);
    goto L28;

  L28:
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} newDeviceState_3 == 1;
    call {:si_unique_call 644} Tmp_1245 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    call {:si_unique_call 645} sdv_KeAcquireSpinLock(0, Tmp_1245);
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    havoc cIrql_4;
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    havoc Tmp_1247;
    assume {:nonnull} Tmp_1247 != 0;
    assume Tmp_1247 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto L44;

  L44:
    call {:si_unique_call 646} sdv_KeReleaseSpinLock(0, cIrql_4);
    goto L37;

  L37:
    call {:si_unique_call 647} PoStartNextPowerIrp(0);
    call {:si_unique_call 648} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    call {:si_unique_call 649} vslice_dummy_var_97 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_10), Irp_15);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    goto L44;

  anon25_Then:
    assume {:partition} newDeviceState_3 != 1;
    goto L37;

  anon22_Then:
    goto L28;

  anon21_Then:
    assume {:partition} status_33 == -1073741810;
    goto L28;

  anon19_Then:
    goto L28;

  anon20_Then:
    goto L20;

  anon24_Then:
    goto L20;

  anon23_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L20;
}



procedure {:origName "WPP_SF_qDDq"} WPP_SF_qDDq(actual_Logger_15: int, actual_id_15: int, actual_TraceGuid_15: int, actual_s_p_e_c_i_a_l_64: int, actual_s_p_e_c_i_a_l_65: int, actual_s_p_e_c_i_a_l_66: int, actual_s_p_e_c_i_a_l_67: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDDq"} WPP_SF_qDDq(actual_Logger_15: int, actual_id_15: int, actual_TraceGuid_15: int, actual_s_p_e_c_i_a_l_64: int, actual_s_p_e_c_i_a_l_65: int, actual_s_p_e_c_i_a_l_66: int, actual_s_p_e_c_i_a_l_67: int)
{
  var {:pointer} TraceGuid_15: int;
  var vslice_dummy_var_98: int;

  anon0:
    call {:si_unique_call 650} vslice_dummy_var_98 := __HAVOC_malloc(4);
    TraceGuid_15 := actual_TraceGuid_15;
    return;
}



procedure {:origName "Sbp2SetDeferLoginTimer"} Sbp2SetDeferLoginTimer(actual_PdoExtension_14: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2SetDeferLoginTimer"} Sbp2SetDeferLoginTimer(actual_PdoExtension_14: int)
{
  var {:scalar} Tmp_1266: int;
  var {:scalar} dueTime_1: int;
  var {:pointer} Tmp_1268: int;
  var {:pointer} Tmp_1269: int;
  var {:pointer} PdoExtension_14: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_4160: int;

  anon0:
    call {:si_unique_call 651} vslice_dummy_var_99 := __HAVOC_malloc(4);
    PdoExtension_14 := actual_PdoExtension_14;
    call {:si_unique_call 652} Tmp_1269 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    dueTime_1 := 1;
    goto L9;

  L9:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1269;
    assume {:nonnull} Tmp_1269 != 0;
    assume Tmp_1269 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    havoc Tmp_1268;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1266;
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    havoc vslice_dummy_var_4160;
    call {:si_unique_call 653} WPP_SF_qD(Tmp_1266, 27, Tmp_1268, PdoExtension_14, vslice_dummy_var_4160);
    goto L14;

  L14:
    call {:si_unique_call 654} Sbp2AddLog(PdoExtension_14, 64, -999919028, 0, 0);
    call {:si_unique_call 655} Sbp2SetManagementTimer(PdoExtension_14, dueTime_1);
    goto L1;

  L1:
    return;

  anon13_Then:
    goto L14;

  anon15_Then:
    goto L14;

  anon14_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L14;

  anon12_Then:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    call {:si_unique_call 656} dueTime_1 := corral_nondet();
    goto L9;

  anon11_Then:
    goto L1;
}



procedure {:origName "CheckStatusResponseValue"} CheckStatusResponseValue(actual_StatusBlock: int) returns (Tmp_1272: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1272 == -1073741275 || Tmp_1272 == -1073741649 || Tmp_1272 == -1073741823 || Tmp_1272 == -1073741503 || Tmp_1272 == -1073741811 || Tmp_1272 == 17 || Tmp_1272 == -1073741434 || Tmp_1272 == -1073741248 || Tmp_1272 == -1073741292 || Tmp_1272 == -1073741670 || Tmp_1272 == -1073741790 || Tmp_1272 == -1073741637 || Tmp_1272 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "CheckStatusResponseValue"} CheckStatusResponseValue(actual_StatusBlock: int) returns (Tmp_1272: int)
{
  var {:scalar} Tmp_1273: int;
  var {:pointer} Tmp_1274: int;
  var {:scalar} resp: int;
  var {:scalar} Tmp_1275: int;
  var {:scalar} Tmp_1276: int;
  var {:scalar} status_35: int;
  var {:scalar} Tmp_1279: int;
  var {:pointer} Tmp_1280: int;
  var {:scalar} statusFlags: int;
  var {:pointer} StatusBlock: int;

  anon0:
    StatusBlock := actual_StatusBlock;
    call {:si_unique_call 657} Tmp_1280 := __HAVOC_malloc(4);
    assume {:nonnull} StatusBlock != 0;
    assume StatusBlock > 0;
    havoc statusFlags;
    Tmp_1276 := BAND(statusFlags, BOR(16384, 32768));
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} 32768 == Tmp_1276;
    Tmp_1272 := -1073741275;
    goto L1;

  L1:
    return;

  anon78_Then:
    assume {:partition} 32768 != Tmp_1276;
    call {:si_unique_call 658} resp := corral_nondet();
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} resp != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} resp != 1;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} resp == 2;
    status_35 := -1073741649;
    goto L18;

  L18:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} status_35 != 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1280;
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_1279 := statusFlags;
    Tmp_1275 := resp;
    havoc Tmp_1274;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1273;
    call {:si_unique_call 659} WPP_SF_DD(Tmp_1273, 23, Tmp_1274, Tmp_1275, Tmp_1279);
    goto L19;

  L19:
    Tmp_1272 := status_35;
    goto L1;

  anon58_Then:
    goto L19;

  anon80_Then:
    goto L19;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L19;

  anon56_Then:
    assume {:partition} status_35 == 0;
    goto L19;

  anon59_Then:
    assume {:partition} resp != 2;
    status_35 := -1073741823;
    goto L18;

  anon60_Then:
    assume {:partition} resp == 1;
    resp := BAND(statusFlags, BOR(BOR(BOR(1, 2), 4), 8));
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} resp != 2;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} resp != 4;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} resp != 5;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} resp != 6;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} resp != 12;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} resp != 13;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} resp != 14;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} resp == 15;
    status_35 := -1073741503;
    goto L18;

  anon71_Then:
    assume {:partition} resp != 15;
    status_35 := -1073741823;
    goto L18;

  anon72_Then:
    assume {:partition} resp == 14;
    status_35 := -1073741811;
    goto L18;

  anon73_Then:
    assume {:partition} resp == 13;
    goto L35;

  L35:
    status_35 := -1073741434;
    goto L18;

  anon74_Then:
    assume {:partition} resp == 12;
    goto L35;

  anon75_Then:
    assume {:partition} resp == 6;
    goto L36;

  L36:
    status_35 := 17;
    goto L18;

  anon76_Then:
    assume {:partition} resp == 5;
    goto L36;

  anon77_Then:
    assume {:partition} resp == 4;
    goto L36;

  anon81_Then:
    assume {:partition} resp == 2;
    goto L35;

  anon79_Then:
    assume {:partition} resp == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(statusFlags, 255) != 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(statusFlags, 255) != 1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(statusFlags, 255) != 2;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BAND(statusFlags, 255) != 3;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(statusFlags, 255) != 4;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} BAND(statusFlags, 255) != 5;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(statusFlags, 255) != 8;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} BAND(statusFlags, 255) != 9;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(statusFlags, 255) != 10;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(statusFlags, 255) != 11;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} BAND(statusFlags, 255) == 12;
    status_35 := -1073741248;
    goto L18;

  anon61_Then:
    assume {:partition} BAND(statusFlags, 255) != 12;
    status_35 := -1073741823;
    goto L18;

  anon62_Then:
    assume {:partition} BAND(statusFlags, 255) == 11;
    goto L46;

  L46:
    status_35 := 0;
    goto L18;

  anon63_Then:
    assume {:partition} BAND(statusFlags, 255) == 10;
    status_35 := -1073741292;
    goto L18;

  anon64_Then:
    assume {:partition} BAND(statusFlags, 255) == 9;
    status_35 := -1073741649;
    goto L18;

  anon65_Then:
    assume {:partition} BAND(statusFlags, 255) == 8;
    status_35 := -1073741670;
    goto L18;

  anon66_Then:
    assume {:partition} BAND(statusFlags, 255) == 5;
    goto L48;

  L48:
    status_35 := -1073741790;
    goto L18;

  anon67_Then:
    assume {:partition} BAND(statusFlags, 255) == 4;
    goto L48;

  anon68_Then:
    assume {:partition} BAND(statusFlags, 255) == 3;
    goto L47;

  L47:
    status_35 := -1073741637;
    goto L18;

  anon69_Then:
    assume {:partition} BAND(statusFlags, 255) == 2;
    goto L47;

  anon70_Then:
    assume {:partition} BAND(statusFlags, 255) == 1;
    goto L47;

  anon55_Then:
    assume {:partition} BAND(statusFlags, 255) == 0;
    goto L46;
}



procedure {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension: int, actual_Context_11: int);
  modifies alloc, Mem_T.PVOID, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension: int, actual_Context_11: int)
{
  var {:pointer} Tmp_1281: int;
  var {:pointer} Tmp_1282: int;
  var {:pointer} Tmp_1283: int;
  var {:pointer} Tmp_1284: int;
  var {:pointer} Tmp_1285: int;
  var {:pointer} Tmp_1286: int;
  var {:scalar} Tmp_1287: int;
  var {:scalar} routine: int;
  var {:scalar} cIrql_5: int;
  var {:pointer} Tmp_1288: int;
  var {:pointer} packet_8: int;
  var {:scalar} status_36: int;
  var {:pointer} Tmp_1289: int;
  var {:pointer} Tmp_1291: int;
  var {:pointer} DeviceExtension: int;
  var {:pointer} Context_11: int;
  var vslice_dummy_var_100: int;

  anon0:
    call {:si_unique_call 660} packet_8 := __HAVOC_malloc(4);
    call {:si_unique_call 661} vslice_dummy_var_100 := __HAVOC_malloc(4);
    DeviceExtension := actual_DeviceExtension;
    Context_11 := actual_Context_11;
    call {:si_unique_call 662} Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(Context_11)] != 0;
    call {:si_unique_call 663} AllocateIrpAndIrb(DeviceExtension, packet_8);
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_8] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1291;
    assume {:nonnull} Tmp_1291 != 0;
    assume Tmp_1291 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1285;
    assume {:nonnull} Tmp_1285 != 0;
    assume Tmp_1285 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1288;
    assume {:nonnull} Tmp_1288 != 0;
    assume Tmp_1288 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1283;
    assume {:nonnull} Tmp_1283 != 0;
    assume Tmp_1283 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1284;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    assume {:nonnull} Tmp_1284 != 0;
    assume Tmp_1284 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_8] != 0;
    assume Mem_T.P_IRBIRP[packet_8] > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1286;
    assume {:nonnull} Tmp_1286 != 0;
    assume Tmp_1286 > 0;
    call {:si_unique_call 664} Tmp_1282 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1282 != 0;
    assume Tmp_1282 > 0;
    call {:si_unique_call 665} sdv_KeRaiseIrql(2, Tmp_1282);
    assume {:nonnull} Tmp_1282 != 0;
    assume Tmp_1282 > 0;
    havoc cIrql_5;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc routine;
    assume routine == 0;
    call {:si_unique_call 666} sdv_KeLowerIrql(cIrql_5);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_36 < 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1289;
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1281;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1287;
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    call {:si_unique_call 667} WPP_SF_qD(Tmp_1287, 15, Tmp_1281, Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(Context_11)], status_36);
    goto L35;

  L35:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 668} IoFreeMdl(0);
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    goto L36;

  L36:
    assume {:nonnull} Context_11 != 0;
    assume Context_11 > 0;
    Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(Context_11)] := 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    call {:si_unique_call 669} DeAllocateIrpAndIrb(DeviceExtension, Mem_T.P_IRBIRP[packet_8]);
    goto L1;

  L1:
    return;

  anon18_Then:
    goto L36;

  anon20_Then:
    goto L35;

  anon21_Then:
    goto L35;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L35;

  anon17_Then:
    assume {:partition} 0 <= status_36;
    goto L35;

  anon16_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_8] == 0;
    goto L1;

  anon15_Then:
    assume {:partition} Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(Context_11)] == 0;
    goto L1;
}



procedure {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_1292: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1292 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_1292: int)
{
  var {:pointer} nextEntry: int;
  var {:pointer} queueEntry: int;
  var {:scalar} sdv_418: int;
  var {:pointer} sdv_419: int;
  var {:pointer} sdv_421: int;
  var {:pointer} DeviceQueue: int;
  var {:scalar} SortKey: int;
  var vslice_dummy_var_101: int;

  anon0:
    DeviceQueue := actual_DeviceQueue;
    SortKey := actual_SortKey;
    queueEntry := 0;
    call {:si_unique_call 670} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 671} sdv_418 := sdv_IsListEmpty(0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_418 != 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    queueEntry := 0;
    goto L18;

  L18:
    call {:si_unique_call 672} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_1292 := queueEntry;
    return;

  anon12_Then:
    assume {:partition} sdv_418 == 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    havoc nextEntry;
    goto L22;

  L22:
    call {:si_unique_call 673} nextEntry, queueEntry, sdv_419 := Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(nextEntry, queueEntry, sdv_419, SortKey);
    goto L22_last;

  L22_last:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 674} sdv_419 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_419;
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} nextEntry != 0;
    assume nextEntry > 0;
    havoc nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    goto L23;

  L23:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 675} vslice_dummy_var_101 := sdv_RemoveEntryList(0);
    goto L37;

  L37:
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto L18;

  anon14_Then:
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    call {:si_unique_call 676} nextEntry := RemoveHeadList(DeviceListHead__KDEVICE_QUEUE(DeviceQueue));
    call {:si_unique_call 677} sdv_421 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_421;
    goto L37;

  anon13_Then:
    goto L23;

  anon11_Then:
    queueEntry := 0;
    goto L18;
}



procedure {:origName "ReleaseOrbListLock"} ReleaseOrbListLock(actual_DeviceExtension_1: int, actual_orbLock_4: int, actual_fFromDpcLevel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ReleaseOrbListLock"} ReleaseOrbListLock(actual_DeviceExtension_1: int, actual_orbLock_4: int, actual_fFromDpcLevel: int)
{
  var {:pointer} currThread: int;
  var {:pointer} DeviceExtension_1: int;
  var {:scalar} fFromDpcLevel: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_4161: int;
  var vslice_dummy_var_4162: int;
  var vslice_dummy_var_4163: int;

  anon0:
    call {:si_unique_call 678} vslice_dummy_var_102 := __HAVOC_malloc(4);
    DeviceExtension_1 := actual_DeviceExtension_1;
    fFromDpcLevel := actual_fFromDpcLevel;
    call {:si_unique_call 679} currThread := sdv_KeGetCurrentThread();
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_4161;
    call {:si_unique_call 680} Sbp2AddLog(DeviceExtension_1, 256, -982751918, currThread, vslice_dummy_var_4161);
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_4162;
    call {:si_unique_call 681} Sbp2AddLog(DeviceExtension_1, 256, 543974738, currThread, vslice_dummy_var_4162);
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} fFromDpcLevel != 0;
    call {:si_unique_call 682} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L12;

  L12:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_4163;
    call {:si_unique_call 683} Sbp2AddLog(DeviceExtension_1, 256, -663984814, currThread, vslice_dummy_var_4163);
    return;

  anon9_Then:
    assume {:partition} fFromDpcLevel == 0;
    call {:si_unique_call 684} KeReleaseInStackQueuedSpinLock(0);
    goto L12;

  anon8_Then:
    goto L12;

  anon7_Then:
    goto L12;
}



procedure {:origName "Sbp2SetManagementTimer"} Sbp2SetManagementTimer(actual_PdoExtension_15: int, actual_DueTime_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2SetManagementTimer"} Sbp2SetManagementTimer(actual_PdoExtension_15: int, actual_DueTime_1: int)
{
  var {:scalar} Tmp_1307: int;
  var {:pointer} Tmp_1308: int;
  var {:pointer} Tmp_1310: int;
  var {:pointer} Tmp_1311: int;
  var {:scalar} Tmp_1313: int;
  var {:scalar} dueTime_2: int;
  var {:pointer} Tmp_1314: int;
  var {:pointer} PdoExtension_15: int;
  var {:scalar} DueTime_1: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_4164: int;

  anon0:
    call {:si_unique_call 685} vslice_dummy_var_103 := __HAVOC_malloc(4);
    call {:si_unique_call 686} dueTime_2 := __HAVOC_malloc(20);
    PdoExtension_15 := actual_PdoExtension_15;
    DueTime_1 := actual_DueTime_1;
    call {:si_unique_call 687} Tmp_1314 := __HAVOC_malloc(4);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} DueTime_1 != 0;
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;

  L10:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1314;
    assume {:nonnull} Tmp_1314 != 0;
    assume Tmp_1314 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    havoc Tmp_1313;
    havoc Tmp_1310;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1307;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc vslice_dummy_var_4164;
    call {:si_unique_call 688} WPP_SF_qDd(Tmp_1307, 26, Tmp_1310, PdoExtension_15, vslice_dummy_var_4164, Tmp_1313);
    goto L11;

  L11:
    call {:si_unique_call 689} Sbp2AddLog(PdoExtension_15, 64, -848007822, DueTime_1, 0);
    call {:si_unique_call 690} vslice_dummy_var_104 := KeSetTimer(0, dueTime_2, 0);
    return;

  anon13_Then:
    goto L11;

  anon14_Then:
    goto L11;

  anon12_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L11;

  anon11_Then:
    assume {:partition} DueTime_1 == 0;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_1311;
    assume {:nonnull} Tmp_1311 != 0;
    assume Tmp_1311 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_1308;
    assume {:nonnull} Tmp_1308 != 0;
    assume Tmp_1308 > 0;
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;

  anon15_Then:
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;
}



procedure {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_2: int, actual_Context_13: int) returns (Tmp_1315: int);
  modifies alloc, Mem_T.PVOID, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_2: int, actual_Context_13: int) returns (Tmp_1315: int)
{
  var {:pointer} Tmp_1316: int;
  var {:scalar} sdv_428: int;
  var {:pointer} Tmp_1317: int;
  var {:pointer} Tmp_1318: int;
  var {:scalar} Tmp_1319: int;
  var {:pointer} Tmp_1320: int;
  var {:scalar} Tmp_1321: int;
  var {:pointer} Tmp_1322: int;
  var {:pointer} DeviceExtension_2: int;
  var {:pointer} Context_13: int;
  var vslice_dummy_var_105: int;

  anon0:
    DeviceExtension_2 := actual_DeviceExtension_2;
    Context_13 := actual_Context_13;
    call {:si_unique_call 691} Tmp_1317 := __HAVOC_malloc(4);
    call {:si_unique_call 692} Tmp_1318 := __HAVOC_malloc(4);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Context_13 == 0;
    goto L37;

  L37:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1317;
    assume {:nonnull} Tmp_1317 != 0;
    assume Tmp_1317 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1322;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1319;
    call {:si_unique_call 693} WPP_SF_q(Tmp_1319, 16, Tmp_1322, Context_13);
    goto L38;

  L38:
    Tmp_1315 := 0;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto L38;

  anon28_Then:
    goto L38;

  anon26_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L38;

  anon21_Then:
    assume {:partition} Context_13 != 0;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L37;

  anon22_Then:
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(Context_13)] != 0;
    call {:si_unique_call 694} Free1394DataMapping(DeviceExtension_2, Context_13);
    goto L9;

  L9:
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L22;

  L22:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1318;
    assume {:nonnull} Tmp_1318 != 0;
    assume Tmp_1318 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_1316;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1321;
    call {:si_unique_call 695} WPP_SF_q(Tmp_1321, 17, Tmp_1316, Context_13);
    goto L23;

  L23:
    call {:si_unique_call 696} vslice_dummy_var_105 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    call {:si_unique_call 697} Tmp_1320 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_2 != 0;
    assume DeviceExtension_2 > 0;
    assume {:nonnull} Tmp_1320 != 0;
    assume Tmp_1320 > 0;
    call {:si_unique_call 698} sdv_428 := sdv_InterlockedDecrement(Tmp_1320);
    assume {:nonnull} DeviceExtension_2 != 0;
    assume DeviceExtension_2 > 0;
    assume {:nonnull} Tmp_1320 != 0;
    assume Tmp_1320 > 0;
    Tmp_1315 := sdv_428;
    goto L1;

  anon25_Then:
    goto L23;

  anon30_Then:
    goto L23;

  anon24_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L23;

  anon29_Then:
    call {:si_unique_call 699} sdv_ExFreePool(0);
    assume {:nonnull} Context_13 != 0;
    assume Context_13 > 0;
    goto L22;

  anon23_Then:
    assume {:partition} Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(Context_13)] == 0;
    goto L9;
}



procedure {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject_1: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_1323: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1323 == -1073741811 || Tmp_1323 == -1073741823 || Tmp_1323 == 0 || Tmp_1323 == 5 || Tmp_1323 == -1073741789 || Tmp_1323 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject_1: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_1323: int)
{
  var {:pointer} Tmp_1324: int;
  var {:scalar} Tmp_1325: int;
  var {:pointer} RootHandle: int;
  var {:pointer} Tmp_1326: int;
  var {:scalar} ResultLength_1: int;
  var {:pointer} Tmp_1327: int;
  var {:scalar} Tmp_1328: int;
  var {:scalar} Tmp_1329: int;
  var {:pointer} Tmp_1330: int;
  var {:pointer} Tmp_1331: int;
  var {:pointer} Tmp_1332: int;
  var {:pointer} sdv_431: int;
  var {:pointer} sdv_432: int;
  var {:scalar} Tmp_1333: int;
  var {:scalar} KeyLength: int;
  var {:scalar} status_37: int;
  var {:scalar} uniTempName: int;
  var {:pointer} KeyInfo: int;
  var {:pointer} PhysicalDeviceObject_1: int;
  var {:pointer} DwData: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_4165: int;

  anon0:
    call {:si_unique_call 700} uniTempName := __HAVOC_malloc(12);
    PhysicalDeviceObject_1 := actual_PhysicalDeviceObject_1;
    DwData := actual_DwData;
    call {:si_unique_call 701} Tmp_1326 := __HAVOC_malloc(4);
    call {:si_unique_call 702} Tmp_1332 := __HAVOC_malloc(4);
    status_37 := 0;
    RootHandle := 0;
    call {:si_unique_call 703} sdv_do_paged_code_check();
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 704} status_37 := IoOpenDeviceRegistryKey(0, 1, 131097, 0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_37 >= 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_1329;
    call {:si_unique_call 705} sdv_431 := ExAllocatePoolWithTag(512, Tmp_1329, 846226003);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    KeyLength := 20;
    call {:si_unique_call 706} sdv_432 := ExAllocatePoolWithTag(512, KeyLength, 846226003);
    KeyInfo := sdv_432;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} KeyInfo != 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_1328;
    call {:si_unique_call 707} sdv_RtlZeroMemory(0, Tmp_1328);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 708} vslice_dummy_var_107 := corral_nondet();
    call {:si_unique_call 709} Tmp_1330 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1330 != 0;
    assume Tmp_1330 > 0;
    call {:si_unique_call 710} status_37 := ZwQueryValueKey(0, 0, 2, 0, KeyLength, Tmp_1330);
    assume {:nonnull} Tmp_1330 != 0;
    assume Tmp_1330 > 0;
    havoc ResultLength_1;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_37 < 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1332;
    assume {:nonnull} Tmp_1332 != 0;
    assume Tmp_1332 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_1327;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1325;
    assume {:nonnull} PhysicalDeviceObject_1 != 0;
    assume PhysicalDeviceObject_1 > 0;
    call {:si_unique_call 711} WPP_SF_qD(Tmp_1325, 25, Tmp_1327, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(PhysicalDeviceObject_1)], status_37);
    goto L58;

  L58:
    call {:si_unique_call 712} sdv_ExFreePool(0);
    goto L68;

  L68:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} RootHandle != 0;
    call {:si_unique_call 713} vslice_dummy_var_106 := ZwClose(0);
    goto L69;

  L69:
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 714} sdv_ExFreePool(0);
    goto L73;

  L73:
    Tmp_1323 := status_37;
    return;

  anon29_Then:
    goto L73;

  anon28_Then:
    assume {:partition} RootHandle == 0;
    goto L69;

  anon31_Then:
    goto L58;

  anon36_Then:
    goto L58;

  anon30_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L58;

  anon26_Then:
    assume {:partition} 0 <= status_37;
    assume {:nonnull} KeyInfo != 0;
    assume KeyInfo > 0;
    Tmp_1331 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo);
    assume {:nonnull} DwData != 0;
    assume DwData > 0;
    assume {:nonnull} Tmp_1331 != 0;
    assume Tmp_1331 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1326;
    assume {:nonnull} Tmp_1326 != 0;
    assume Tmp_1326 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1324;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1333;
    assume {:nonnull} DwData != 0;
    assume DwData > 0;
    assume {:nonnull} PhysicalDeviceObject_1 != 0;
    assume PhysicalDeviceObject_1 > 0;
    havoc vslice_dummy_var_4165;
    call {:si_unique_call 715} WPP_SF_qD(Tmp_1333, 24, Tmp_1324, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(PhysicalDeviceObject_1)], vslice_dummy_var_4165);
    goto L58;

  anon27_Then:
    goto L58;

  anon35_Then:
    goto L58;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L58;

  anon33_Then:
    assume {:partition} KeyInfo == 0;
    status_37 := -1073741670;
    goto L68;

  anon32_Then:
    status_37 := -1073741670;
    goto L68;

  anon25_Then:
    assume {:partition} 0 > status_37;
    status_37 := -1073741670;
    goto L68;
}



procedure {:origName "AcquireOrbListLock"} AcquireOrbListLock(actual_DeviceExtension_3: int, actual_orbLock_5: int, actual_fFromDpcLevel_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AcquireOrbListLock"} AcquireOrbListLock(actual_DeviceExtension_3: int, actual_orbLock_5: int, actual_fFromDpcLevel_1: int)
{
  var {:pointer} currThread_1: int;
  var {:pointer} prevOwner: int;
  var {:pointer} sdv_436: int;
  var {:pointer} sdv_437: int;
  var {:pointer} DeviceExtension_3: int;
  var {:scalar} fFromDpcLevel_1: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_4166: int;
  var vslice_dummy_var_4167: int;
  var vslice_dummy_var_4168: int;

  anon0:
    call {:si_unique_call 716} vslice_dummy_var_108 := __HAVOC_malloc(4);
    DeviceExtension_3 := actual_DeviceExtension_3;
    fFromDpcLevel_1 := actual_fFromDpcLevel_1;
    call {:si_unique_call 717} currThread_1 := sdv_KeGetCurrentThread();
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_4166;
    call {:si_unique_call 718} Sbp2AddLog(DeviceExtension_3, 256, -982424767, currThread_1, vslice_dummy_var_4166);
    goto L12;

  L12:
    call {:si_unique_call 719} prevOwner, sdv_436, sdv_437 := AcquireOrbListLock_loop_L12(currThread_1, prevOwner, sdv_436, sdv_437, DeviceExtension_3, fFromDpcLevel_1);
    goto L12_last;

  L12_last:
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 727} sdv_436 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(DeviceExtension_3), currThread_1, 0);
    prevOwner := sdv_436;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} prevOwner == currThread_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_4167;
    call {:si_unique_call 720} Sbp2AddLog(DeviceExtension_3, 256, 544301889, currThread_1, vslice_dummy_var_4167);
    goto L22;

  L22:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} prevOwner == currThread_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_4168;
    call {:si_unique_call 721} Sbp2AddLog(DeviceExtension_3, 256, -663657663, currThread_1, vslice_dummy_var_4168);
    return;

  anon14_Then:
    assume {:partition} prevOwner != currThread_1;
    goto anon14_Then_dummy;

  anon14_Then_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} prevOwner != currThread_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} fFromDpcLevel_1 != 0;
    call {:si_unique_call 722} KeAcquireInStackQueuedSpinLockAtDpcLevel(0, 0);
    goto L32;

  L32:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} prevOwner != 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 723} sdv_437 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(DeviceExtension_3), currThread_1, 0);
    prevOwner := sdv_437;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} prevOwner != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} fFromDpcLevel_1 != 0;
    call {:si_unique_call 724} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L22;

  anon16_Then:
    assume {:partition} fFromDpcLevel_1 == 0;
    call {:si_unique_call 725} KeReleaseInStackQueuedSpinLock(0);
    goto L22;

  anon18_Then:
    assume {:partition} prevOwner == 0;
    goto L22;

  anon15_Then:
    assume {:partition} prevOwner == 0;
    goto L22;

  anon13_Then:
    assume {:partition} fFromDpcLevel_1 == 0;
    call {:si_unique_call 726} KeAcquireInStackQueuedSpinLock(0, 0);
    goto L32;
}



procedure {:origName "WPP_SF_qqDq"} WPP_SF_qqDq(actual_Logger_16: int, actual_id_16: int, actual_TraceGuid_16: int, actual_s_p_e_c_i_a_l_68: int, actual_s_p_e_c_i_a_l_69: int, actual_s_p_e_c_i_a_l_70: int, actual_s_p_e_c_i_a_l_71: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qqDq"} WPP_SF_qqDq(actual_Logger_16: int, actual_id_16: int, actual_TraceGuid_16: int, actual_s_p_e_c_i_a_l_68: int, actual_s_p_e_c_i_a_l_69: int, actual_s_p_e_c_i_a_l_70: int, actual_s_p_e_c_i_a_l_71: int)
{
  var {:pointer} TraceGuid_16: int;
  var vslice_dummy_var_109: int;

  anon0:
    call {:si_unique_call 728} vslice_dummy_var_109 := __HAVOC_malloc(4);
    TraceGuid_16 := actual_TraceGuid_16;
    return;
}



procedure {:origName "Sbp2AddLog"} Sbp2AddLog(actual_PdoExt: int, actual_Mask: int, actual_Sig: int, actual_Data1: int, actual_Data2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AddLog"} Sbp2AddLog(actual_PdoExt: int, actual_Mask: int, actual_Sig: int, actual_Data1: int, actual_Data2: int)
{
  var {:scalar} sdv_453: int;
  var {:pointer} logEntry: int;
  var {:scalar} sigRev: int;
  var {:scalar} index: int;
  var {:scalar} sig: int;
  var {:pointer} Tmp_1357: int;
  var {:pointer} log: int;
  var {:pointer} PdoExt: int;
  var {:scalar} Mask: int;
  var {:scalar} Sig: int;
  var {:scalar} Data1: int;
  var {:scalar} Data2: int;
  var vslice_dummy_var_110: int;

  anon0:
    call {:si_unique_call 729} sigRev := __HAVOC_malloc(20);
    call {:si_unique_call 730} sig := __HAVOC_malloc(20);
    call {:si_unique_call 731} vslice_dummy_var_110 := __HAVOC_malloc(4);
    PdoExt := actual_PdoExt;
    Mask := actual_Mask;
    Sig := actual_Sig;
    Data1 := actual_Data1;
    Data2 := actual_Data2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} BAND(Sbp2LogLevel, Mask) != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} PdoExt != 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.LogStart__DEBUG_LOG[LogStart__DEBUG_LOG(DbgLog__DEVICE_EXTENSION(PdoExt))] != 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    log := DbgLog__DEVICE_EXTENSION(PdoExt);
    call {:si_unique_call 732} Tmp_1357 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1357 != 0;
    assume Tmp_1357 > 0;
    assume {:nonnull} log != 0;
    assume log > 0;
    call {:si_unique_call 733} sdv_453 := sdv_InterlockedDecrement(Tmp_1357);
    assume {:nonnull} Tmp_1357 != 0;
    assume Tmp_1357 > 0;
    assume {:nonnull} log != 0;
    assume log > 0;
    index := sdv_453;
    assume {:nonnull} log != 0;
    assume log > 0;
    havoc index;
    assume {:nonnull} log != 0;
    assume log > 0;
    logEntry := Mem_T.LogStart__DEBUG_LOG[LogStart__DEBUG_LOG(log)];
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} Mem_T.LogStart__DEBUG_LOG[LogStart__DEBUG_LOG(DbgLog__DEVICE_EXTENSION(PdoExt))] == 0;
    goto L1;

  anon8_Then:
    assume {:partition} PdoExt == 0;
    goto L1;

  anon7_Then:
    assume {:partition} BAND(Sbp2LogLevel, Mask) == 0;
    goto L1;
}



procedure {:origName "WPP_SF_DD"} WPP_SF_DD(actual_Logger_17: int, actual_id_17: int, actual_TraceGuid_17: int, actual_s_p_e_c_i_a_l_72: int, actual_s_p_e_c_i_a_l_73: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_DD"} WPP_SF_DD(actual_Logger_17: int, actual_id_17: int, actual_TraceGuid_17: int, actual_s_p_e_c_i_a_l_72: int, actual_s_p_e_c_i_a_l_73: int)
{
  var {:pointer} TraceGuid_17: int;
  var vslice_dummy_var_111: int;

  anon0:
    call {:si_unique_call 734} vslice_dummy_var_111 := __HAVOC_malloc(4);
    TraceGuid_17 := actual_TraceGuid_17;
    return;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var {:scalar} Tmp_1407: int;
  var vslice_dummy_var_112: int;

  anon0:
    call {:si_unique_call 735} vslice_dummy_var_112 := __HAVOC_malloc(4);
    call {:si_unique_call 736} Tmp_1407 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1407 != 0;
    assume Tmp_1407 > 0;
    return;
}



procedure {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_6: int, actual_Packet_1: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_6: int, actual_Packet_1: int)
{
  var {:pointer} pkt: int;
  var {:pointer} Tmp_1408: int;
  var {:scalar} Tmp_1409: int;
  var {:pointer} Tmp_1410: int;
  var {:pointer} sdv_466: int;
  var {:pointer} sdv_467: int;
  var {:pointer} sdv_468: int;
  var {:pointer} Tmp_1413: int;
  var {:pointer} Tmp_1414: int;
  var {:pointer} DeviceExtension_6: int;
  var {:pointer} Packet_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_4169: int;
  var vslice_dummy_var_4170: int;
  var vslice_dummy_var_4171: int;

  anon0:
    call {:si_unique_call 737} vslice_dummy_var_113 := __HAVOC_malloc(4);
    DeviceExtension_6 := actual_DeviceExtension_6;
    Packet_1 := actual_Packet_1;
    call {:si_unique_call 738} Tmp_1410 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 739} sdv_466 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    Mem_T.P_IRBIRP[Packet_1] := sdv_466;
    goto L10;

  L10:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.P_IRBIRP[Packet_1] == 0;
    call {:si_unique_call 740} sdv_467 := ExAllocatePoolWithTag(512, 24, -347053485);
    pkt := sdv_467;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} pkt != 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    call {:si_unique_call 741} sdv_468 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    havoc Tmp_1414;
    assume {:nonnull} Tmp_1414 != 0;
    assume Tmp_1414 > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    havoc vslice_dummy_var_4169;
    call {:si_unique_call 742} boogieTmp := IoAllocateIrp(vslice_dummy_var_4169, 0);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1410;
    assume {:nonnull} Tmp_1410 != 0;
    assume Tmp_1410 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_1408 := strConst__li2bpl14;
    goto L46;

  L46:
    havoc Tmp_1413;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1409;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    havoc vslice_dummy_var_4170;
    havoc vslice_dummy_var_4171;
    call {:si_unique_call 743} WPP_SF_sqq(Tmp_1409, 10, Tmp_1413, Tmp_1408, vslice_dummy_var_4170, vslice_dummy_var_4171);
    goto L40;

  L40:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    Mem_T.P_IRBIRP[Packet_1] := pkt;
    goto L1;

  L1:
    return;

  anon24_Then:
    Tmp_1408 := strConst__li2bpl13;
    goto L46;

  anon23_Then:
    goto L40;

  anon27_Then:
    goto L40;

  anon22_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L40;

  anon21_Then:
    call {:si_unique_call 744} sdv_ExFreePool(0);
    call {:si_unique_call 745} sdv_ExFreePool(0);
    goto L1;

  anon26_Then:
    call {:si_unique_call 746} sdv_ExFreePool(0);
    goto L1;

  anon25_Then:
    assume {:partition} pkt == 0;
    goto L1;

  anon20_Then:
    assume {:partition} Mem_T.P_IRBIRP[Packet_1] != 0;
    goto L1;

  anon19_Then:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    Mem_T.P_IRBIRP[Packet_1] := 0;
    goto L10;
}



procedure {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_1423: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_1423: int)
{
  var {:pointer} irpStack_10: int;
  var {:pointer} nextEntry_1: int;
  var {:scalar} inserted: int;
  var {:pointer} queueEntry_1: int;
  var {:pointer} sdv_474: int;
  var {:pointer} queueEntry2: int;
  var {:pointer} sdv_476: int;
  var {:pointer} irp_4: int;
  var {:pointer} queue: int;
  var {:pointer} DeviceQueue_1: int;
  var {:pointer} DeviceQueueEntry: int;
  var {:scalar} SortKey_1: int;

  anon0:
    DeviceQueue_1 := actual_DeviceQueue_1;
    DeviceQueueEntry := actual_DeviceQueueEntry;
    SortKey_1 := actual_SortKey_1;
    queue := DeviceQueue_1;
    queueEntry_1 := DeviceQueueEntry;
    call {:si_unique_call 747} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    call {:si_unique_call 748} sdv_474 := sdv_containing_record(DeviceQueueEntry, 64);
    irp_4 := sdv_474;
    call {:si_unique_call 749} irpStack_10 := sdv_IoGetCurrentIrpStackLocation(irp_4);
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    inserted := 1;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    havoc nextEntry_1;
    goto L31;

  L31:
    call {:si_unique_call 750} nextEntry_1, queueEntry2, sdv_476 := Sbp2InsertByKeyDeviceQueue_loop_L31(nextEntry_1, queueEntry2, sdv_476, SortKey_1);
    goto L31_last;

  L31_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 751} sdv_476 := sdv_containing_record(nextEntry_1, 0);
    queueEntry2 := sdv_476;
    assume {:nonnull} queueEntry2 != 0;
    assume queueEntry2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    call {:si_unique_call 752} InsertHeadList(nextEntry_1, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_1));
    goto L43;

  L43:
    call {:si_unique_call 753} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_1423 := inserted;
    return;

  anon7_Then:
    goto L32;

  anon8_Then:
    assume {:nonnull} queue != 0;
    assume queue > 0;
    inserted := 0;
    goto L43;
}



procedure {:origName "WPP_SF_sqq"} WPP_SF_sqq(actual_Logger_18: int, actual_id_18: int, actual_TraceGuid_18: int, actual_s_p_e_c_i_a_l_76: int, actual_s_p_e_c_i_a_l_77: int, actual_s_p_e_c_i_a_l_78: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_sqq"} WPP_SF_sqq(actual_Logger_18: int, actual_id_18: int, actual_TraceGuid_18: int, actual_s_p_e_c_i_a_l_76: int, actual_s_p_e_c_i_a_l_77: int, actual_s_p_e_c_i_a_l_78: int)
{
  var {:scalar} sdv_477: int;
  var {:pointer} TraceGuid_18: int;
  var {:pointer} s_p_e_c_i_a_l_76: int;
  var vslice_dummy_var_114: int;

  anon0:
    call {:si_unique_call 754} vslice_dummy_var_114 := __HAVOC_malloc(4);
    TraceGuid_18 := actual_TraceGuid_18;
    s_p_e_c_i_a_l_76 := actual_s_p_e_c_i_a_l_76;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_76 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_76 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_76 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_76 == 0;
    goto L9;
}



procedure {:origName "Sbp2AllocateLog"} Sbp2AllocateLog(actual_PdoExtension_19: int);
  modifies alloc, Mem_T.LogStart__DEBUG_LOG;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AllocateLog"} Sbp2AllocateLog(actual_PdoExtension_19: int)
{
  var {:scalar} logSize: int;
  var {:pointer} Tmp_1449: int;
  var {:pointer} PdoExtension_19: int;
  var vslice_dummy_var_115: int;

  anon0:
    call {:si_unique_call 755} vslice_dummy_var_115 := __HAVOC_malloc(4);
    PdoExtension_19 := actual_PdoExtension_19;
    call {:si_unique_call 756} Tmp_1449 := __HAVOC_malloc(4);
    logSize := 4096;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1449;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    Mem_T.LogStart__DEBUG_LOG[LogStart__DEBUG_LOG(DbgLog__DEVICE_EXTENSION(PdoExtension_19))] := Tmp_1449;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    return;
}



procedure {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_8: int, actual_Packet_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_8: int, actual_Packet_2: int)
{
  var {:pointer} DeviceExtension_8: int;
  var {:pointer} Packet_2: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;

  anon0:
    call {:si_unique_call 757} vslice_dummy_var_116 := __HAVOC_malloc(4);
    DeviceExtension_8 := actual_DeviceExtension_8;
    Packet_2 := actual_Packet_2;
    assume {:nonnull} Packet_2 != 0;
    assume Packet_2 > 0;
    assume {:nonnull} Packet_2 != 0;
    assume Packet_2 > 0;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 758} vslice_dummy_var_117 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 759} IoFreeIrp(0);
    call {:si_unique_call 760} sdv_ExFreePool(0);
    call {:si_unique_call 761} sdv_ExFreePool(0);
    goto L1;
}



procedure {:origName "WPP_SF_DDD"} WPP_SF_DDD(actual_Logger_19: int, actual_id_19: int, actual_TraceGuid_19: int, actual_s_p_e_c_i_a_l_79: int, actual_s_p_e_c_i_a_l_80: int, actual_s_p_e_c_i_a_l_81: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_DDD"} WPP_SF_DDD(actual_Logger_19: int, actual_id_19: int, actual_TraceGuid_19: int, actual_s_p_e_c_i_a_l_79: int, actual_s_p_e_c_i_a_l_80: int, actual_s_p_e_c_i_a_l_81: int)
{
  var {:pointer} TraceGuid_19: int;
  var vslice_dummy_var_118: int;

  anon0:
    call {:si_unique_call 762} vslice_dummy_var_118 := __HAVOC_malloc(4);
    TraceGuid_19 := actual_TraceGuid_19;
    return;
}



procedure {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_30: int, actual_DeviceInfo_1: int) returns (Tmp_1483: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1483 == -1073741811 || Tmp_1483 == -1073741823 || Tmp_1483 == 0 || Tmp_1483 == 5 || Tmp_1483 == -1073741789 || Tmp_1483 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_30: int, actual_DeviceInfo_1: int) returns (Tmp_1483: int)
{
  var {:pointer} Tmp_1484: int;
  var {:pointer} Tmp_1485: int;
  var {:scalar} sdv_488: int;
  var {:pointer} Tmp_1486: int;
  var {:pointer} Tmp_1487: int;
  var {:pointer} Tmp_1488: int;
  var {:scalar} sdv_489: int;
  var {:pointer} Tmp_1489: int;
  var {:scalar} devType: int;
  var {:pointer} Tmp_1490: int;
  var {:scalar} fw: int;
  var {:scalar} sdv_491: int;
  var {:pointer} Tmp_1491: int;
  var {:scalar} sdv_492: int;
  var {:scalar} sdv_493: int;
  var {:scalar} sdv_494: int;
  var {:scalar} sdv_495: int;
  var {:scalar} sdv_496: int;
  var {:pointer} Tmp_1492: int;
  var {:scalar} sdv_497: int;
  var {:scalar} sdv_498: int;
  var {:pointer} Tmp_1494: int;
  var {:scalar} uniTemp: int;
  var {:scalar} sdv_499: int;
  var {:scalar} status_44: int;
  var {:pointer} Tmp_1495: int;
  var {:pointer} Tmp_1496: int;
  var {:pointer} Tmp_1497: int;
  var {:scalar} sdv_500: int;
  var {:pointer} DeviceObject_30: int;
  var {:pointer} DeviceInfo_1: int;

  anon0:
    call {:si_unique_call 763} uniTemp := __HAVOC_malloc(12);
    DeviceObject_30 := actual_DeviceObject_30;
    DeviceInfo_1 := actual_DeviceInfo_1;
    call {:si_unique_call 764} Tmp_1484 := __HAVOC_malloc(144);
    call {:si_unique_call 765} Tmp_1485 := __HAVOC_malloc(20);
    call {:si_unique_call 766} Tmp_1486 := __HAVOC_malloc(76);
    call {:si_unique_call 767} Tmp_1487 := __HAVOC_malloc(40);
    call {:si_unique_call 768} Tmp_1488 := __HAVOC_malloc(68);
    call {:si_unique_call 769} Tmp_1489 := __HAVOC_malloc(32);
    call {:si_unique_call 770} Tmp_1490 := __HAVOC_malloc(36);
    call {:si_unique_call 771} Tmp_1491 := __HAVOC_malloc(68);
    call {:si_unique_call 772} Tmp_1492 := __HAVOC_malloc(32);
    call {:si_unique_call 773} Tmp_1494 := __HAVOC_malloc(48);
    call {:si_unique_call 774} Tmp_1495 := __HAVOC_malloc(64);
    call {:si_unique_call 775} Tmp_1496 := __HAVOC_malloc(40);
    call {:si_unique_call 776} Tmp_1497 := __HAVOC_malloc(40);
    status_44 := 0;
    call {:si_unique_call 777} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Tmp_1494 := strConst__li2bpl24;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    call {:si_unique_call 778} status_44 := Sbp2GetRegistryValue(DeviceObject_30, Tmp_1494, LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1));
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    havoc devType;
    call {:si_unique_call 779} fw := corral_nondet();
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} devType == 5;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Tmp_1497 := strConst__li2bpl25;
    call {:si_unique_call 780} RtlInitUnicodeString(uniTemp, Tmp_1497);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L45;

  L45:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L46;

  L46:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L48;

  L48:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L50;

  L50:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L52;

  L52:
    Tmp_1483 := status_44;
    return;

  anon80_Then:
    goto L52;

  anon79_Then:
    goto L50;

  anon78_Then:
    goto L48;

  anon77_Then:
    goto L46;

  anon73_Then:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} sdv_494 != 0;
    goto L45;

  anon74_Then:
    assume {:partition} sdv_494 == 0;
    Tmp_1484 := strConst__li2bpl16;
    call {:si_unique_call 781} RtlInitUnicodeString(uniTemp, Tmp_1484);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L45;

  anon75_Then:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} sdv_496 != 0;
    goto L45;

  anon76_Then:
    assume {:partition} sdv_496 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon108_Then:
    assume {:partition} devType != 5;
    Tmp_1490 := strConst__li2bpl15;
    call {:si_unique_call 782} RtlInitUnicodeString(uniTemp, Tmp_1490);
    call {:si_unique_call 783} sdv_497 := corral_nondet();
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} sdv_497 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L58;

  L58:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} devType != 14;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} devType == 0;
    goto L60;

  L60:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Tmp_1488 := strConst__li2bpl26;
    call {:si_unique_call 784} RtlInitUnicodeString(uniTemp, Tmp_1488);
    call {:si_unique_call 785} sdv_498 := corral_nondet();
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} sdv_498 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L70;

  L70:
    Tmp_1495 := strConst__li2bpl17;
    call {:si_unique_call 786} RtlInitUnicodeString(uniTemp, Tmp_1495);
    call {:si_unique_call 787} sdv_491 := corral_nondet();
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} sdv_491 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L78;

  L78:
    Tmp_1487 := strConst__li2bpl18;
    call {:si_unique_call 788} RtlInitUnicodeString(uniTemp, Tmp_1487);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} sdv_499 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L83;

  L83:
    Tmp_1492 := strConst__li2bpl19;
    call {:si_unique_call 789} RtlInitUnicodeString(uniTemp, Tmp_1492);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} sdv_493 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L93;

  L93:
    Tmp_1489 := strConst__li2bpl20;
    call {:si_unique_call 790} RtlInitUnicodeString(uniTemp, Tmp_1489);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} sdv_492 == 0;
    Tmp_1486 := strConst__li2bpl21;
    call {:si_unique_call 791} RtlInitUnicodeString(uniTemp, Tmp_1486);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} sdv_500 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L103;

  L103:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} fw != 0;
    goto L120;

  L120:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_44 >= 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto L121;

  L121:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} fw != 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} fw != 40;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} fw != 41;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} fw != 4097;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} fw != 41144;
    goto L128;

  L128:
    Tmp_1485 := strConst__li2bpl22;
    call {:si_unique_call 792} RtlInitUnicodeString(uniTemp, Tmp_1485);
    call {:si_unique_call 793} sdv_495 := corral_nondet();
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} sdv_495 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon100_Then:
    assume {:partition} sdv_495 == 0;
    Tmp_1491 := strConst__li2bpl23;
    call {:si_unique_call 794} RtlInitUnicodeString(uniTemp, Tmp_1491);
    call {:si_unique_call 795} sdv_488 := corral_nondet();
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} sdv_488 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon101_Then:
    assume {:partition} sdv_488 == 0;
    Tmp_1496 := strConst__li2bpl18;
    call {:si_unique_call 796} RtlInitUnicodeString(uniTemp, Tmp_1496);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_489 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon103_Then:
    assume {:partition} sdv_489 != 0;
    goto L45;

  anon102_Then:
    goto L45;

  anon104_Then:
    assume {:partition} fw == 41144;
    goto L126;

  L126:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L128;

  anon105_Then:
    assume {:partition} fw == 4097;
    goto L126;

  anon106_Then:
    assume {:partition} fw == 41;
    goto L126;

  anon107_Then:
    assume {:partition} fw == 40;
    goto L126;

  anon97_Then:
    assume {:partition} fw == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L128;

  anon99_Then:
    goto L126;

  anon98_Then:
    goto L45;

  anon96_Then:
    assume {:partition} 0 > status_44;
    goto L121;

  anon91_Then:
    assume {:partition} fw == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L120;

  anon95_Then:
    goto L120;

  anon94_Then:
    assume {:partition} sdv_500 != 0;
    goto L103;

  anon93_Then:
    goto L103;

  anon92_Then:
    assume {:partition} sdv_492 != 0;
    goto L103;

  anon90_Then:
    goto L103;

  anon89_Then:
    assume {:partition} sdv_493 != 0;
    goto L93;

  anon88_Then:
    goto L93;

  anon87_Then:
    assume {:partition} sdv_499 != 0;
    goto L83;

  anon86_Then:
    goto L83;

  anon85_Then:
    assume {:partition} sdv_491 == 0;
    goto L78;

  anon84_Then:
    assume {:partition} sdv_498 == 0;
    goto L70;

  anon83_Then:
    assume {:partition} devType != 0;
    goto L45;

  anon82_Then:
    assume {:partition} devType == 14;
    goto L60;

  anon81_Then:
    assume {:partition} sdv_497 == 0;
    goto L58;
}



procedure {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_32: int, actual_Context_17: int, actual_ErrorId: int, actual_Status_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_32: int, actual_Context_17: int, actual_ErrorId: int, actual_Status_1: int)
{
  var {:scalar} Tmp_1500: int;
  var {:pointer} sdv_503: int;
  var {:pointer} errorLogEntry: int;
  var {:scalar} Tmp_1503: int;
  var {:pointer} Tmp_1504: int;
  var {:pointer} Tmp_1505: int;
  var {:pointer} Tmp_1507: int;
  var {:pointer} Tmp_1508: int;
  var {:pointer} Tmp_1509: int;
  var {:pointer} DeviceObject_32: int;
  var {:pointer} Context_17: int;
  var {:scalar} ErrorId: int;
  var {:scalar} Status_1: int;
  var vslice_dummy_var_119: int;

  anon0:
    call {:si_unique_call 797} vslice_dummy_var_119 := __HAVOC_malloc(4);
    DeviceObject_32 := actual_DeviceObject_32;
    Context_17 := actual_Context_17;
    ErrorId := actual_ErrorId;
    Status_1 := actual_Status_1;
    call {:si_unique_call 798} Tmp_1505 := __HAVOC_malloc(4);
    call {:si_unique_call 799} Tmp_1507 := __HAVOC_malloc(4);
    call {:si_unique_call 800} Tmp_1508 := __HAVOC_malloc(4);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Status_1 != -1073741810;
    call {:si_unique_call 801} sdv_503 := IoAllocateErrorLogEntry(0, 88);
    errorLogEntry := sdv_503;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} errorLogEntry == 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1505;
    assume {:nonnull} Tmp_1505 != 0;
    assume Tmp_1505 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_1504;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1500;
    assume {:nonnull} DeviceObject_32 != 0;
    assume DeviceObject_32 > 0;
    call {:si_unique_call 802} WPP_SF_q(Tmp_1500, 22, Tmp_1504, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_32)]);
    goto L1;

  L1:
    return;

  anon38_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon45_Then:
    assume {:partition} errorLogEntry != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Status_1 != -1073741811;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Status_1 != -1073741808;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Status_1 != -1073741670;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Status_1 != -1073741666;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Status_1 != -1073741434;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Status_1 != -1073741248;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Status_1 == 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  L23:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Context_17 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_1507;
    call {:si_unique_call 803} sdv_RtlCopyMemory(0, 0, 40);
    goto L35;

  L35:
    call {:si_unique_call 804} IoWriteErrorLogEntry(0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1508;
    assume {:nonnull} Tmp_1508 != 0;
    assume Tmp_1508 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    havoc Tmp_1509;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1503;
    assume {:nonnull} DeviceObject_32 != 0;
    assume DeviceObject_32 > 0;
    call {:si_unique_call 805} WPP_SF_qqDq(Tmp_1503, 21, Tmp_1509, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_32)], DeviceObject_32, Status_1, Context_17);
    goto L1;

  anon36_Then:
    goto L1;

  anon47_Then:
    goto L1;

  anon35_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon46_Then:
    assume {:partition} Context_17 == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L35;

  anon39_Then:
    assume {:partition} Status_1 != 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon40_Then:
    assume {:partition} Status_1 == -1073741248;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon41_Then:
    assume {:partition} Status_1 == -1073741434;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon42_Then:
    assume {:partition} Status_1 == -1073741666;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon43_Then:
    assume {:partition} Status_1 == -1073741670;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon44_Then:
    assume {:partition} Status_1 == -1073741808;
    goto L16;

  L16:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon34_Then:
    assume {:partition} Status_1 == -1073741811;
    goto L16;

  anon33_Then:
    assume {:partition} Status_1 == -1073741810;
    goto L1;
}



procedure {:origName "WPP_SF_qqqDD"} WPP_SF_qqqDD(actual_Logger_20: int, actual_id_20: int, actual_TraceGuid_20: int, actual_s_p_e_c_i_a_l_82: int, actual_s_p_e_c_i_a_l_83: int, actual_s_p_e_c_i_a_l_84: int, actual_s_p_e_c_i_a_l_85: int, actual_s_p_e_c_i_a_l_86: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qqqDD"} WPP_SF_qqqDD(actual_Logger_20: int, actual_id_20: int, actual_TraceGuid_20: int, actual_s_p_e_c_i_a_l_82: int, actual_s_p_e_c_i_a_l_83: int, actual_s_p_e_c_i_a_l_84: int, actual_s_p_e_c_i_a_l_85: int, actual_s_p_e_c_i_a_l_86: int)
{
  var {:pointer} TraceGuid_20: int;
  var vslice_dummy_var_120: int;

  anon0:
    call {:si_unique_call 806} vslice_dummy_var_120 := __HAVOC_malloc(4);
    TraceGuid_20 := actual_TraceGuid_20;
    return;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var {:scalar} Tmp_1547: int;
  var vslice_dummy_var_121: int;

  anon0:
    call {:si_unique_call 807} Tmp_1547 := __HAVOC_malloc(4);
    call {:si_unique_call 808} vslice_dummy_var_121 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1547 != 0;
    assume Tmp_1547 > 0;
    return;
}



procedure {:origName "WPP_SF_qDqDD"} WPP_SF_qDqDD(actual_Logger_21: int, actual_id_21: int, actual_TraceGuid_21: int, actual_s_p_e_c_i_a_l_87: int, actual_s_p_e_c_i_a_l_88: int, actual_s_p_e_c_i_a_l_89: int, actual_s_p_e_c_i_a_l_90: int, actual_s_p_e_c_i_a_l_91: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDqDD"} WPP_SF_qDqDD(actual_Logger_21: int, actual_id_21: int, actual_TraceGuid_21: int, actual_s_p_e_c_i_a_l_87: int, actual_s_p_e_c_i_a_l_88: int, actual_s_p_e_c_i_a_l_89: int, actual_s_p_e_c_i_a_l_90: int, actual_s_p_e_c_i_a_l_91: int)
{
  var {:pointer} TraceGuid_21: int;
  var vslice_dummy_var_122: int;

  anon0:
    call {:si_unique_call 809} vslice_dummy_var_122 := __HAVOC_malloc(4);
    TraceGuid_21 := actual_TraceGuid_21;
    return;
}



procedure {:origName "Sbp2ScsiPassThrough"} Sbp2ScsiPassThrough(actual_DeviceObject_33: int, actual_Irp_19: int, actual_Direct: int) returns (Tmp_1553: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1553 == -1073741808 || Tmp_1553 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ScsiPassThrough"} Sbp2ScsiPassThrough(actual_DeviceObject_33: int, actual_Irp_19: int, actual_Direct: int) returns (Tmp_1553: int)
{
  var {:pointer} irpStack_12: int;
  var {:pointer} Tmp_1555: int;
  var {:pointer} pdoExtension_13: int;
  var {:pointer} Tmp_1556: int;
  var {:scalar} Tmp_1557: int;
  var {:pointer} Tmp_1558: int;
  var {:scalar} maxPhysicalPages: int;
  var {:scalar} Tmp_1559: int;
  var {:pointer} Tmp_1560: int;
  var {:pointer} Tmp_1561: int;
  var {:scalar} maxTransferLength: int;
  var {:scalar} status_46: int;
  var {:pointer} DeviceObject_33: int;
  var {:pointer} Irp_19: int;
  var vslice_dummy_var_123: int;

  anon0:
    DeviceObject_33 := actual_DeviceObject_33;
    Irp_19 := actual_Irp_19;
    call {:si_unique_call 810} Tmp_1555 := __HAVOC_malloc(4);
    call {:si_unique_call 811} Tmp_1556 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    pdoExtension_13 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_33)];
    call {:si_unique_call 812} sdv_do_paged_code_check();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1556;
    assume {:nonnull} Tmp_1556 != 0;
    assume Tmp_1556 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1560;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1559;
    call {:si_unique_call 813} WPP_SF_qq(Tmp_1559, 61, Tmp_1560, pdoExtension_13, DeviceObject_33);
    goto L14;

  L14:
    call {:si_unique_call 814} irpStack_12 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_12)] != 0;
    goto L29;

  L29:
    assume {:nonnull} pdoExtension_13 != 0;
    assume pdoExtension_13 > 0;
    havoc Tmp_1561;
    assume {:nonnull} Tmp_1561 != 0;
    assume Tmp_1561 > 0;
    havoc maxTransferLength;
    maxPhysicalPages := INTDIV(maxTransferLength, 4096);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 511 > maxPhysicalPages;
    maxPhysicalPages := maxPhysicalPages + 1;
    goto L32;

  L32:
    call {:si_unique_call 815} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 816} vslice_dummy_var_123 := corral_nondet();
    status_46 := 259;
    goto L40;

  L40:
    Tmp_1553 := status_46;
    return;

  anon26_Then:
    assume {:partition} maxPhysicalPages >= 511;
    goto L32;

  anon21_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_12)] == 0;
    assume {:nonnull} pdoExtension_13 != 0;
    assume pdoExtension_13 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1555;
    assume {:nonnull} Tmp_1555 != 0;
    assume Tmp_1555 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_1558;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1557;
    call {:si_unique_call 817} WPP_SF_(Tmp_1557, 62, Tmp_1558);
    goto L45;

  L45:
    status_46 := -1073741808;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    call {:si_unique_call 818} sdv_IoCompleteRequest(0, 0);
    goto L40;

  anon24_Then:
    goto L45;

  anon27_Then:
    goto L45;

  anon23_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon22_Then:
    goto L29;

  anon20_Then:
    goto L14;

  anon25_Then:
    goto L14;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L14;
}



procedure {:origName "WPP_SF_dq"} WPP_SF_dq(actual_Logger_22: int, actual_id_22: int, actual_TraceGuid_22: int, actual_s_p_e_c_i_a_l_92: int, actual_s_p_e_c_i_a_l_93: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_dq"} WPP_SF_dq(actual_Logger_22: int, actual_id_22: int, actual_TraceGuid_22: int, actual_s_p_e_c_i_a_l_92: int, actual_s_p_e_c_i_a_l_93: int)
{
  var {:pointer} TraceGuid_22: int;
  var vslice_dummy_var_124: int;

  anon0:
    call {:si_unique_call 819} vslice_dummy_var_124 := __HAVOC_malloc(4);
    TraceGuid_22 := actual_TraceGuid_22;
    return;
}



procedure {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_18: int) returns (Tmp_1565: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1565 == -1073741670 || Tmp_1565 == -1073741823 || Tmp_1565 == 259 || Tmp_1565 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_18: int) returns (Tmp_1565: int)
{
  var {:pointer} Tmp_1566: int;
  var {:pointer} Tmp_1567: int;
  var {:pointer} Tmp_1568: int;
  var {:pointer} Tmp_1569: int;
  var {:pointer} cdb_1: int;
  var {:scalar} Tmp_1570: int;
  var {:scalar} Tmp_1571: int;
  var {:pointer} Tmp_1572: int;
  var {:pointer} pdoExtension_14: int;
  var {:pointer} Tmp_1573: int;
  var {:pointer} Tmp_1574: int;
  var {:pointer} Tmp_1575: int;
  var {:pointer} Tmp_1576: int;
  var {:pointer} Tmp_1577: int;
  var {:pointer} Tmp_1578: int;
  var {:pointer} Tmp_1579: int;
  var {:pointer} Tmp_1581: int;
  var {:pointer} Tmp_1582: int;
  var {:pointer} Tmp_1583: int;
  var {:pointer} Tmp_1584: int;
  var {:pointer} Tmp_1585: int;
  var {:pointer} Tmp_1586: int;
  var {:scalar} Tmp_1587: int;
  var {:pointer} Tmp_1588: int;
  var {:scalar} Tmp_1589: int;
  var {:scalar} Tmp_1590: int;
  var {:pointer} Tmp_1591: int;
  var {:pointer} Tmp_1592: int;
  var {:pointer} Tmp_1593: int;
  var {:pointer} Tmp_1594: int;
  var {:scalar} Tmp_1595: int;
  var {:scalar} Tmp_1596: int;
  var {:pointer} Tmp_1597: int;
  var {:scalar} Tmp_1598: int;
  var {:pointer} Tmp_1599: int;
  var {:pointer} Tmp_1600: int;
  var {:pointer} Tmp_1601: int;
  var {:scalar} bSetCacheHack: int;
  var {:pointer} Tmp_1602: int;
  var {:scalar} Tmp_1603: int;
  var {:pointer} Tmp_1604: int;
  var {:pointer} Tmp_1605: int;
  var {:pointer} Tmp_1606: int;
  var {:pointer} Tmp_1607: int;
  var {:pointer} Tmp_1608: int;
  var {:pointer} Tmp_1609: int;
  var {:pointer} Tmp_1610: int;
  var {:pointer} Tmp_1611: int;
  var {:pointer} Tmp_1612: int;
  var {:pointer} Tmp_1613: int;
  var {:pointer} Context_18: int;
  var vslice_dummy_var_4172: int;
  var vslice_dummy_var_4173: int;
  var vslice_dummy_var_4174: int;
  var vslice_dummy_var_4175: int;

  anon0:
    call {:si_unique_call 820} Tmp_1566 := __HAVOC_malloc(4);
    call {:si_unique_call 821} Tmp_1575 := __HAVOC_malloc(4);
    Context_18 := actual_Context_18;
    call {:si_unique_call 822} Tmp_1567 := __HAVOC_malloc(64);
    call {:si_unique_call 823} Tmp_1572 := __HAVOC_malloc(4);
    call {:si_unique_call 824} Tmp_1579 := __HAVOC_malloc(64);
    call {:si_unique_call 825} Tmp_1584 := __HAVOC_malloc(64);
    call {:si_unique_call 826} Tmp_1592 := __HAVOC_malloc(64);
    call {:si_unique_call 827} Tmp_1599 := __HAVOC_malloc(64);
    call {:si_unique_call 828} Tmp_1600 := __HAVOC_malloc(64);
    call {:si_unique_call 829} Tmp_1601 := __HAVOC_malloc(64);
    call {:si_unique_call 830} Tmp_1604 := __HAVOC_malloc(64);
    call {:si_unique_call 831} Tmp_1609 := __HAVOC_malloc(64);
    call {:si_unique_call 832} Tmp_1613 := __HAVOC_malloc(64);
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1588;
    assume {:nonnull} Tmp_1588 != 0;
    assume Tmp_1588 > 0;
    pdoExtension_14 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1588)];
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1583;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    havoc Tmp_1601;
    Tmp_1590 := Tmp_1601;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1602;
    assume {:nonnull} Tmp_1602 != 0;
    assume Tmp_1602 > 0;
    havoc Tmp_1595;
    call {:si_unique_call 833} Sbp2AddLog(pdoExtension_14, 128, -1016831415, Tmp_1595, Tmp_1590);
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} Tmp_1575 != 0;
    assume Tmp_1575 > 0;
    Tmp_1585 := Tmp_1575;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc vslice_dummy_var_4172;
    havoc vslice_dummy_var_4173;
    call {:si_unique_call 834} Tmp_1565 := Rbc_Scsi_Conversion(vslice_dummy_var_4172, Tmp_1585, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension_14), 0, vslice_dummy_var_4173, 0);
    goto L1;

  L1:
    return;

  anon41_Then:
    goto L14;

  L14:
    Tmp_1565 := 259;
    goto L1;

  anon48_Then:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc Tmp_1568;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1612;
    assume {:nonnull} Tmp_1568 != 0;
    assume Tmp_1568 > 0;
    assume {:nonnull} Tmp_1612 != 0;
    assume Tmp_1612 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1572;
    assume {:nonnull} Tmp_1572 != 0;
    assume Tmp_1572 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1608;
    assume {:nonnull} Tmp_1608 != 0;
    assume Tmp_1608 > 0;
    havoc Tmp_1599;
    assume {:nonnull} Tmp_1599 != 0;
    assume Tmp_1599 > 0;
    havoc Tmp_1596;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1578;
    assume {:nonnull} Tmp_1578 != 0;
    assume Tmp_1578 > 0;
    havoc Tmp_1587;
    havoc Tmp_1581;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1570;
    call {:si_unique_call 835} WPP_SF_DD(Tmp_1570, 41, Tmp_1581, Tmp_1587, Tmp_1596);
    goto L25;

  L25:
    Tmp_1565 := -1073741823;
    goto L1;

  anon43_Then:
    goto L25;

  anon50_Then:
    goto L25;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon49_Then:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1594;
    assume {:nonnull} Tmp_1594 != 0;
    assume Tmp_1594 > 0;
    havoc Tmp_1604;
    Tmp_1571 := Tmp_1604;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1586;
    assume {:nonnull} Tmp_1586 != 0;
    assume Tmp_1586 > 0;
    havoc Tmp_1603;
    call {:si_unique_call 836} Sbp2AddLog(pdoExtension_14, 128, -1016831409, Tmp_1603, Tmp_1571);
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1607;
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    havoc Tmp_1613;
    assume {:nonnull} Tmp_1613 != 0;
    assume Tmp_1613 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Tmp_1613 != 0;
    assume Tmp_1613 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Tmp_1613 != 0;
    assume Tmp_1613 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1593;
    assume {:nonnull} Tmp_1593 != 0;
    assume Tmp_1593 > 0;
    havoc Tmp_1584;
    assume {:nonnull} Tmp_1584 != 0;
    assume Tmp_1584 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1610;
    assume {:nonnull} Tmp_1610 != 0;
    assume Tmp_1610 > 0;
    havoc Tmp_1600;
    assume {:nonnull} Tmp_1600 != 0;
    assume Tmp_1600 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1591;
    assume {:nonnull} Tmp_1591 != 0;
    assume Tmp_1591 > 0;
    havoc Tmp_1579;
    assume {:nonnull} Tmp_1579 != 0;
    assume Tmp_1579 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1597;
    assume {:nonnull} Tmp_1597 != 0;
    assume Tmp_1597 > 0;
    havoc Tmp_1609;
    assume {:nonnull} Tmp_1609 != 0;
    assume Tmp_1609 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc Tmp_1569;
    assume {:nonnull} Tmp_1569 != 0;
    assume Tmp_1569 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    Tmp_1565 := -1073741823;
    goto L1;

  anon60_Then:
    goto L40;

  L40:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc Tmp_1576;
    assume {:nonnull} Tmp_1576 != 0;
    assume Tmp_1576 > 0;
    havoc Tmp_1598;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Tmp_1598 == 0;
    bSetCacheHack := 0;
    goto L121;

  L121:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} Tmp_1566 != 0;
    assume Tmp_1566 > 0;
    Tmp_1582 := Tmp_1566;
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc vslice_dummy_var_4174;
    havoc vslice_dummy_var_4175;
    call {:si_unique_call 837} Tmp_1565 := Rbc_Scsi_Conversion(vslice_dummy_var_4174, Tmp_1582, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension_14), 1, vslice_dummy_var_4175, bSetCacheHack);
    goto L1;

  anon53_Then:
    assume {:partition} Tmp_1598 != 0;
    bSetCacheHack := 1;
    goto L121;

  anon44_Then:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1611;
    assume {:nonnull} Tmp_1611 != 0;
    assume Tmp_1611 > 0;
    havoc Tmp_1567;
    assume {:nonnull} Tmp_1567 != 0;
    assume Tmp_1567 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1606;
    assume {:nonnull} Tmp_1606 != 0;
    assume Tmp_1606 > 0;
    havoc Tmp_1592;
    cdb_1 := Tmp_1592;
    assume {:nonnull} cdb_1 != 0;
    assume cdb_1 > 0;
    goto L14;

  anon54_Then:
    goto L14;

  anon45_Then:
    goto L14;

  anon59_Then:
    goto L40;

  anon58_Then:
    goto L40;

  anon57_Then:
    goto L40;

  anon56_Then:
    goto L40;

  anon46_Then:
    goto L40;

  anon47_Then:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1605;
    assume {:nonnull} Tmp_1605 != 0;
    assume Tmp_1605 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_1589 := 3;
    goto L52;

  L52:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1573;
    assume {:nonnull} Tmp_1573 != 0;
    assume Tmp_1573 > 0;
    goto L40;

  anon55_Then:
    assume {:nonnull} Context_18 != 0;
    assume Context_18 > 0;
    havoc Tmp_1574;
    assume {:nonnull} Tmp_1574 != 0;
    assume Tmp_1574 > 0;
    havoc Tmp_1589;
    goto L52;

  anon51_Then:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc Tmp_1577;
    assume {:nonnull} Tmp_1577 != 0;
    assume Tmp_1577 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    Tmp_1565 := -1073741823;
    goto L1;

  anon52_Then:
    goto L40;
}



procedure {:origName "Sbp2ScsiRequests"} Sbp2ScsiRequests(actual_DeviceObject_35: int, actual_Irp_21: int) returns (Tmp_1684: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ScsiRequests"} Sbp2ScsiRequests(actual_DeviceObject_35: int, actual_Irp_21: int) returns (Tmp_1684: int)
{
  var {:pointer} Tmp_1685: int;
  var {:pointer} irpStack_14: int;
  var {:pointer} Tmp_1686: int;
  var {:pointer} Tmp_1687: int;
  var {:pointer} Tmp_1688: int;
  var {:scalar} Tmp_1689: int;
  var {:pointer} pdoExtension_15: int;
  var {:pointer} Tmp_1690: int;
  var {:pointer} Tmp_1691: int;
  var {:pointer} Tmp_1692: int;
  var {:scalar} Tmp_1693: int;
  var {:scalar} Tmp_1694: int;
  var {:pointer} Tmp_1695: int;
  var {:pointer} Tmp_1696: int;
  var {:scalar} Tmp_1697: int;
  var {:scalar} orbLock_8: int;
  var {:scalar} Tmp_1698: int;
  var {:pointer} Tmp_1699: int;
  var {:pointer} Tmp_1700: int;
  var {:pointer} Tmp_1701: int;
  var {:pointer} Tmp_1702: int;
  var {:pointer} Tmp_1703: int;
  var {:scalar} Tmp_1704: int;
  var {:pointer} Tmp_1705: int;
  var {:scalar} Tmp_1706: int;
  var {:scalar} Tmp_1707: int;
  var {:pointer} sdv_541: int;
  var {:pointer} Tmp_1708: int;
  var {:pointer} Tmp_1709: int;
  var {:pointer} Tmp_1710: int;
  var {:pointer} Tmp_1711: int;
  var {:scalar} cIrql_9: int;
  var {:scalar} Tmp_1712: int;
  var {:scalar} Tmp_1713: int;
  var {:pointer} srb_5: int;
  var {:scalar} status_49: int;
  var {:pointer} tIrp: int;
  var {:pointer} Tmp_1714: int;
  var {:scalar} Tmp_1715: int;
  var {:pointer} Tmp_1716: int;
  var {:pointer} DeviceObject_35: int;
  var {:pointer} Irp_21: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_4176: int;
  var vslice_dummy_var_4177: int;
  var vslice_dummy_var_4178: int;
  var vslice_dummy_var_4179: int;

  anon0:
    call {:si_unique_call 838} orbLock_8 := __HAVOC_malloc(12);
    DeviceObject_35 := actual_DeviceObject_35;
    Irp_21 := actual_Irp_21;
    call {:si_unique_call 839} Tmp_1685 := __HAVOC_malloc(64);
    call {:si_unique_call 840} Tmp_1686 := __HAVOC_malloc(4);
    call {:si_unique_call 841} Tmp_1687 := __HAVOC_malloc(4);
    call {:si_unique_call 842} Tmp_1688 := __HAVOC_malloc(4);
    call {:si_unique_call 843} Tmp_1690 := __HAVOC_malloc(4);
    call {:si_unique_call 844} Tmp_1699 := __HAVOC_malloc(4);
    call {:si_unique_call 845} Tmp_1701 := __HAVOC_malloc(4);
    call {:si_unique_call 846} Tmp_1702 := __HAVOC_malloc(4);
    call {:si_unique_call 847} Tmp_1705 := __HAVOC_malloc(4);
    call {:si_unique_call 848} Tmp_1710 := __HAVOC_malloc(4);
    call {:si_unique_call 849} irpStack_14 := sdv_IoGetCurrentIrpStackLocation(Irp_21);
    assume {:nonnull} DeviceObject_35 != 0;
    assume DeviceObject_35 > 0;
    pdoExtension_15 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_35)];
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    call {:si_unique_call 850} status_49 := sdv_IoAcquireRemoveLock(0, 0);
    assume {:nonnull} irpStack_14 != 0;
    assume irpStack_14 > 0;
    havoc srb_5;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} status_49 >= 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1698;
    call {:si_unique_call 851} Sbp2AddLog(pdoExtension_15, 64, -748457111, Irp_21, Tmp_1698);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1702;
    assume {:nonnull} Tmp_1702 != 0;
    assume Tmp_1702 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    havoc Tmp_1700;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1704;
    call {:si_unique_call 852} WPP_SF_q(Tmp_1704, 16, Tmp_1700, pdoExtension_15);
    goto L52;

  L52:
    call {:si_unique_call 853} Tmp_1695 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    call {:si_unique_call 854} sdv_KeAcquireSpinLock(0, Tmp_1695);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    havoc cIrql_9;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 855} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 856} sdv_541 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_15), 0);
    tIrp := sdv_541;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} tIrp != 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1690;
    assume {:nonnull} Tmp_1690 != 0;
    assume Tmp_1690 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    havoc Tmp_1696;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1706;
    call {:si_unique_call 857} WPP_SF_qq(Tmp_1706, 17, Tmp_1696, pdoExtension_15, tIrp);
    goto L77;

  L77:
    call {:si_unique_call 858} Sbp2StartPacket#1(DeviceObject_35, tIrp, 0);
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    call {:si_unique_call 859} Tmp_1695 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    call {:si_unique_call 860} sdv_KeRaiseIrql(2, Tmp_1695);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    havoc cIrql_9;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    havoc vslice_dummy_var_4176;
    call {:si_unique_call 861} Sbp2StartNextPacketByKey#1(DeviceObject_35, vslice_dummy_var_4176);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 862} sdv_KeLowerIrql(cIrql_9);
    goto L87;

  L87:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    status_49 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  L103:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 863} vslice_dummy_var_129 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_15), Irp_21);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 864} sdv_IoCompleteRequest(0, 0);
    Tmp_1684 := status_49;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon194_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon147_Then:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    call {:si_unique_call 865} AcquireOrbListLock(pdoExtension_15, orbLock_8, 0);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    havoc vslice_dummy_var_4177;
    call {:si_unique_call 866} vslice_dummy_var_125 := FreeAsyncRequestContext(pdoExtension_15, vslice_dummy_var_4177);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto L116;

  L116:
    call {:si_unique_call 867} ReleaseOrbListLock(pdoExtension_15, orbLock_8, 0);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    call {:si_unique_call 868} Tmp_1695 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    call {:si_unique_call 869} sdv_KeAcquireSpinLock(0, Tmp_1695);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    havoc cIrql_9;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 870} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto L125;

  L125:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    call {:si_unique_call 871} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    call {:si_unique_call 872} Tmp_1695 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    call {:si_unique_call 873} sdv_KeRaiseIrql(2, Tmp_1695);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    havoc cIrql_9;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    havoc vslice_dummy_var_4178;
    call {:si_unique_call 874} Sbp2StartNextPacketByKey#1(DeviceObject_35, vslice_dummy_var_4178);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 875} sdv_KeLowerIrql(cIrql_9);
    goto L138;

  L138:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 876} vslice_dummy_var_126 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_15), Irp_21);
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1684 := 0;
    goto L1;

  anon208_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon207_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon151_Then:
    goto L138;

  anon150_Then:
    goto L125;

  anon149_Then:
    goto L116;

  anon148_Then:
    status_49 := 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon206_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon144_Then:
    goto L87;

  anon205_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon146_Then:
    goto L77;

  anon204_Then:
    goto L77;

  anon145_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L77;

  anon203_Then:
    assume {:partition} tIrp == 0;
    goto L72;

  anon143_Then:
    goto L52;

  anon202_Then:
    goto L52;

  anon142_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L52;

  anon177_Then:
    status_49 := -1073741637;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1701;
    assume {:nonnull} Tmp_1701 != 0;
    assume Tmp_1701 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1713;
    havoc Tmp_1716;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1712;
    call {:si_unique_call 877} WPP_SF_qD(Tmp_1712, 19, Tmp_1716, pdoExtension_15, Tmp_1713);
    goto L103;

  anon176_Then:
    goto L103;

  anon210_Then:
    goto L103;

  anon209_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon178_Then:
    call {:si_unique_call 878} Tmp_1695 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    call {:si_unique_call 879} sdv_KeAcquireSpinLock(0, Tmp_1695);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    havoc cIrql_9;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    call {:si_unique_call 880} sdv_KeReleaseSpinLock(0, cIrql_9);
    status_49 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon152_Then:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 881} sdv_KeReleaseSpinLock(0, cIrql_9);
    status_49 := 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1688;
    assume {:nonnull} Tmp_1688 != 0;
    assume Tmp_1688 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    havoc Tmp_1709;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1694;
    call {:si_unique_call 882} WPP_SF_q(Tmp_1694, 15, Tmp_1709, pdoExtension_15);
    goto L103;

  anon153_Then:
    goto L103;

  anon201_Then:
    goto L103;

  anon200_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon179_Then:
    goto L195;

  L195:
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1710;
    assume {:nonnull} Tmp_1710 != 0;
    assume Tmp_1710 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    havoc Tmp_1703;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1689;
    call {:si_unique_call 883} WPP_SF_q(Tmp_1689, 12, Tmp_1703, pdoExtension_15);
    goto L196;

  L196:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1686;
    assume {:nonnull} Tmp_1686 != 0;
    assume Tmp_1686 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    havoc Tmp_1714;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1693;
    call {:si_unique_call 884} WPP_SF_q(Tmp_1693, 13, Tmp_1714, pdoExtension_15);
    goto L214;

  L214:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_49 := 0;
    goto L103;

  anon161_Then:
    goto L214;

  anon197_Then:
    goto L214;

  anon160_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L214;

  anon158_Then:
    call {:si_unique_call 885} CleanupOrbList#1(pdoExtension_15, -1073741248);
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_49 := 0;
    goto L103;

  anon196_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon159_Then:
    goto L196;

  anon195_Then:
    goto L196;

  anon157_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon180_Then:
    call {:si_unique_call 886} status_49 := Sbp2Issue1394BusReset#1(pdoExtension_15);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} yogi_error != 1;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1705;
    assume {:nonnull} Tmp_1705 != 0;
    assume Tmp_1705 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    havoc Tmp_1692;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1707;
    call {:si_unique_call 887} WPP_SF_q(Tmp_1707, 14, Tmp_1692, pdoExtension_15);
    goto L183;

  L183:
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} status_49 >= 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon155_Then:
    assume {:partition} 0 > status_49;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon156_Then:
    goto L183;

  anon199_Then:
    goto L183;

  anon154_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L183;

  anon198_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon181_Then:
    goto L195;

  anon182_Then:
    call {:si_unique_call 888} Tmp_1695 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    call {:si_unique_call 889} sdv_KeAcquireSpinLock(0, Tmp_1695);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    havoc cIrql_9;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 890} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_49 := 0;
    goto L103;

  anon183_Then:
    call {:si_unique_call 891} Tmp_1695 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    call {:si_unique_call 892} sdv_KeAcquireSpinLock(0, Tmp_1695);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    havoc cIrql_9;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    status_49 := 17;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L235;

  L235:
    call {:si_unique_call 893} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto L103;

  anon162_Then:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_49 := 0;
    goto L235;

  anon141_Then:
    call {:si_unique_call 894} Tmp_1695 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    call {:si_unique_call 895} sdv_KeAcquireSpinLock(0, Tmp_1695);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    havoc cIrql_9;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    call {:si_unique_call 896} sdv_KeReleaseSpinLock(0, cIrql_9);
    status_49 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1687;
    assume {:nonnull} Tmp_1687 != 0;
    assume Tmp_1687 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    havoc Tmp_1708;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1715;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    havoc vslice_dummy_var_4179;
    call {:si_unique_call 897} WPP_SF_qDD(Tmp_1715, 10, Tmp_1708, pdoExtension_15, vslice_dummy_var_4179, status_49);
    goto L254;

  L254:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 898} vslice_dummy_var_127 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_15), Irp_21);
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 899} sdv_IoCompleteRequest(0, 0);
    Tmp_1684 := status_49;
    goto L1;

  anon187_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon164_Then:
    goto L254;

  anon186_Then:
    goto L254;

  anon185_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L254;

  anon163_Then:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    havoc Tmp_1711;
    assume {:nonnull} Tmp_1711 != 0;
    assume Tmp_1711 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1685;
    assume {:nonnull} Tmp_1685 != 0;
    assume Tmp_1685 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    goto L273;

  L273:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L269;

  L269:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    call {:si_unique_call 900} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1699;
    assume {:nonnull} Tmp_1699 != 0;
    assume Tmp_1699 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    havoc Tmp_1691;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1697;
    call {:si_unique_call 901} WPP_SF_qq(Tmp_1697, 11, Tmp_1691, pdoExtension_15, Irp_21);
    goto L285;

  L285:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    call {:si_unique_call 902} vslice_dummy_var_128 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_15), Irp_21);
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 903} sdv_IoCompleteRequest(0, 0);
    Tmp_1684 := -1073741823;
    goto L1;

  anon191_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon170_Then:
    goto L285;

  anon190_Then:
    goto L285;

  anon169_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L285;

  anon168_Then:
    goto L274;

  L274:
    call {:si_unique_call 904} sdv_IoMarkIrpPending(0);
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto L308;

  L308:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 905} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 906} Tmp_1695 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    call {:si_unique_call 907} sdv_KeRaiseIrql(2, Tmp_1695);
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    havoc cIrql_9;
    call {:si_unique_call 908} Sbp2StartIo#1(DeviceObject_35, Irp_21);
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 909} sdv_KeLowerIrql(cIrql_9);
    goto L324;

  L324:
    Tmp_1684 := 259;
    goto L1;

  anon192_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon175_Then:
    call {:si_unique_call 910} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 911} Sbp2DeferPendingRequest(pdoExtension_15, Irp_21);
    call {:si_unique_call 912} Sbp2SetDeferLoginTimer(pdoExtension_15);
    goto L324;

  anon173_Then:
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 913} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 914} Sbp2DeferPendingRequest(pdoExtension_15, Irp_21);
    goto L324;

  anon174_Then:
    goto L308;

  anon172_Then:
    goto L302;

  L302:
    call {:si_unique_call 915} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    call {:si_unique_call 916} Sbp2StartPacket#1(DeviceObject_35, Irp_21, QueueSortKey__SCSI_REQUEST_BLOCK(srb_5));
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} yogi_error != 1;
    goto L324;

  anon193_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon171_Then:
    goto L302;

  anon165_Then:
    goto L274;

  anon166_Then:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    goto L273;

  anon167_Then:
    goto L269;

  anon189_Then:
    goto L269;

  anon188_Then:
    goto L269;

  anon184_Then:
    assume {:partition} 0 > status_49;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    call {:si_unique_call 917} sdv_IoCompleteRequest(0, 0);
    Tmp_1684 := status_49;
    goto L1;
}



procedure {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_9: int, actual_CallbackContext_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_9: int, actual_CallbackContext_1: int)
{
  var {:scalar} i_4: int;
  var {:pointer} Tmp_1717: int;
  var {:scalar} size: int;
  var {:pointer} Tmp_1721: int;
  var {:pointer} Tmp_1722: int;
  var {:pointer} Tmp_1723: int;
  var {:pointer} Tmp_1724: int;
  var {:pointer} Tmp_1725: int;
  var {:pointer} Tmp_1726: int;
  var {:pointer} Tmp_1727: int;
  var {:pointer} Tmp_1728: int;
  var {:pointer} Tmp_1729: int;
  var {:pointer} Tmp_1730: int;
  var {:scalar} sdv_542: int;
  var {:scalar} Tmp_1731: int;
  var {:pointer} Tmp_1732: int;
  var {:pointer} Tmp_1733: int;
  var {:pointer} Tmp_1734: int;
  var {:pointer} Tmp_1735: int;
  var {:pointer} Tmp_1736: int;
  var {:scalar} sdv_543: int;
  var {:pointer} Tmp_1738: int;
  var {:pointer} Tmp_1740: int;
  var {:scalar} sdv_544: int;
  var {:scalar} Tmp_1742: int;
  var {:pointer} Tmp_1743: int;
  var {:pointer} Tmp_1744: int;
  var {:pointer} Tmp_1745: int;
  var {:scalar} sdv_545: int;
  var {:scalar} sdv_546: int;
  var {:scalar} sdv_547: int;
  var {:pointer} Tmp_1748: int;
  var {:pointer} Tmp_1749: int;
  var {:pointer} Tmp_1750: int;
  var {:pointer} Tmp_1751: int;
  var {:pointer} Tmp_1752: int;
  var {:scalar} Tmp_1754: int;
  var {:pointer} Tmp_1755: int;
  var {:pointer} Tmp_1757: int;
  var {:scalar} sdv_548: int;
  var {:pointer} Tmp_1758: int;
  var {:pointer} Tmp_1759: int;
  var {:pointer} Tmp_1760: int;
  var {:pointer} Tmp_1761: int;
  var {:pointer} Tmp_1762: int;
  var {:pointer} Tmp_1763: int;
  var {:pointer} Tmp_1764: int;
  var {:pointer} Tmp_1765: int;
  var {:pointer} Tmp_1766: int;
  var {:pointer} DeviceExtension_9: int;
  var {:pointer} CallbackContext_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_130: int;

  anon0:
    call {:si_unique_call 918} vslice_dummy_var_130 := __HAVOC_malloc(4);
    DeviceExtension_9 := actual_DeviceExtension_9;
    CallbackContext_1 := actual_CallbackContext_1;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1717;
    assume {:nonnull} Tmp_1717 != 0;
    assume Tmp_1717 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(CallbackContext_1)] != 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1751;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1751 != 0;
    assume Tmp_1751 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1751 != 0;
    assume Tmp_1751 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1751 != 0;
    assume Tmp_1751 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1751 != 0;
    assume Tmp_1751 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1758;
    assume {:nonnull} Tmp_1758 != 0;
    assume Tmp_1758 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1726;
    assume {:nonnull} Tmp_1726 != 0;
    assume Tmp_1726 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L22;

  L22:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1748;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1732;
    assume {:nonnull} Tmp_1732 != 0;
    assume Tmp_1732 > 0;
    assume {:nonnull} Tmp_1748 != 0;
    assume Tmp_1748 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1764;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1764 != 0;
    assume Tmp_1764 > 0;
    goto L24;

  L24:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1736;
    assume {:nonnull} Tmp_1736 != 0;
    assume Tmp_1736 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1760;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1760 != 0;
    assume Tmp_1760 > 0;
    call {:si_unique_call 919} boogieTmp := corral_nondet();
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1740;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1766;
    assume {:nonnull} Tmp_1740 != 0;
    assume Tmp_1740 > 0;
    assume {:nonnull} Tmp_1766 != 0;
    assume Tmp_1766 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1765;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1757;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1721;
    assume {:nonnull} Tmp_1721 != 0;
    assume Tmp_1721 > 0;
    assume {:nonnull} Tmp_1757 != 0;
    assume Tmp_1757 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1730;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1738;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1730 != 0;
    assume Tmp_1730 > 0;
    assume {:nonnull} Tmp_1738 != 0;
    assume Tmp_1738 > 0;
    goto L31;

  L31:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1733;
    assume {:nonnull} Tmp_1733 != 0;
    assume Tmp_1733 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_1754 := 16;
    goto L34;

  L34:
    size := Tmp_1754;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 920} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 921} sdv_RtlCopyMemory(0, 0, size);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1728;
    assume {:nonnull} Tmp_1728 != 0;
    assume Tmp_1728 > 0;
    return;

  anon26_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1729;
    assume {:nonnull} Tmp_1729 != 0;
    assume Tmp_1729 > 0;
    havoc Tmp_1754;
    goto L34;

  anon25_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1755;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1727;
    assume {:nonnull} Tmp_1727 != 0;
    assume Tmp_1727 > 0;
    assume {:nonnull} Tmp_1755 != 0;
    assume Tmp_1755 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1743;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1745;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1743 != 0;
    assume Tmp_1743 > 0;
    assume {:nonnull} Tmp_1745 != 0;
    assume Tmp_1745 > 0;
    goto L31;

  anon20_Then:
    goto L20;

  L20:
    i_4 := 0;
    goto L46;

  L46:
    call {:si_unique_call 922} i_4, Tmp_1731, Tmp_1742, Tmp_1744, Tmp_1763 := Sbp2InitializeOrb_loop_L46(i_4, Tmp_1731, Tmp_1742, Tmp_1744, sdv_546, sdv_547, Tmp_1763, CallbackContext_1);
    goto L46_last;

  L46_last:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_1731 := i_4;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1763;
    assume {:nonnull} Tmp_1763 != 0;
    assume Tmp_1763 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_1742 := i_4;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1744;
    assume {:nonnull} Tmp_1744 != 0;
    assume Tmp_1744 > 0;
    i_4 := i_4 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    goto L22;

  anon24_Then:
    goto L20;

  anon19_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1752;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1724;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} Tmp_1724 != 0;
    assume Tmp_1724 > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1723;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    Tmp_1749 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_9);
    assume {:nonnull} Tmp_1723 != 0;
    assume Tmp_1723 > 0;
    assume {:nonnull} Tmp_1749 != 0;
    assume Tmp_1749 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1725;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    Tmp_1734 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_9);
    assume {:nonnull} Tmp_1725 != 0;
    assume Tmp_1725 > 0;
    assume {:nonnull} Tmp_1734 != 0;
    assume Tmp_1734 > 0;
    goto L63;

  L63:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1759;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1762;
    assume {:nonnull} Tmp_1759 != 0;
    assume Tmp_1759 > 0;
    assume {:nonnull} Tmp_1762 != 0;
    assume Tmp_1762 > 0;
    goto L24;

  anon22_Then:
    goto L59;

  L59:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1750;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1750 != 0;
    assume Tmp_1750 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1750 != 0;
    assume Tmp_1750 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1761;
    assume {:nonnull} Tmp_1761 != 0;
    assume Tmp_1761 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1722;
    assume {:nonnull} Tmp_1722 != 0;
    assume Tmp_1722 > 0;
    goto L63;

  anon27_Then:
    goto L59;

  anon23_Then:
    assume {:partition} Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(CallbackContext_1)] == 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1735;
    assume {:nonnull} Tmp_1735 != 0;
    assume Tmp_1735 > 0;
    goto L24;
}



procedure {:origName "Sbp2ScsiGetCapabilities"} Sbp2ScsiGetCapabilities(actual_DeviceObject_36: int, actual_Irp_22: int) returns (Tmp_1767: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1767 == -1073741789 || Tmp_1767 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ScsiGetCapabilities"} Sbp2ScsiGetCapabilities(actual_DeviceObject_36: int, actual_Irp_22: int) returns (Tmp_1767: int)
{
  var {:pointer} irpStack_15: int;
  var {:pointer} pdoExtension_16: int;
  var {:pointer} Tmp_1768: int;
  var {:pointer} ioCapabilities: int;
  var {:scalar} status_50: int;
  var {:pointer} DeviceObject_36: int;
  var {:pointer} Irp_22: int;

  anon0:
    DeviceObject_36 := actual_DeviceObject_36;
    Irp_22 := actual_Irp_22;
    call {:si_unique_call 923} irpStack_15 := sdv_IoGetCurrentIrpStackLocation(Irp_22);
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    havoc ioCapabilities;
    assume {:nonnull} DeviceObject_36 != 0;
    assume DeviceObject_36 > 0;
    pdoExtension_16 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_36)];
    call {:si_unique_call 924} sdv_do_paged_code_check();
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    status_50 := -1073741789;
    goto L21;

  L21:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    call {:si_unique_call 925} sdv_IoCompleteRequest(0, 0);
    Tmp_1767 := status_50;
    return;

  anon5_Then:
    call {:si_unique_call 926} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1768;
    assume {:nonnull} Tmp_1768 != 0;
    assume Tmp_1768 > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    goto L30;

  L30:
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} DeviceObject_36 != 0;
    assume DeviceObject_36 > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    status_50 := 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto L21;

  anon6_Then:
    goto L30;
}



procedure {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_10: int, actual_Scsiop: int) returns (Tmp_1770: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_10: int, actual_Scsiop: int) returns (Tmp_1770: int)
{
  var {:scalar} Tmp_1771: int;
  var {:scalar} waitValue_3: int;
  var {:pointer} cdb_2: int;
  var {:pointer} Tmp_1772: int;
  var {:pointer} modeMdl: int;
  var {:pointer} Tmp_1773: int;
  var {:pointer} Tmp_1774: int;
  var {:pointer} Tmp_1775: int;
  var {:pointer} Tmp_1776: int;
  var {:scalar} Tmp_1777: int;
  var {:pointer} Tmp_1778: int;
  var {:pointer} Tmp_1779: int;
  var {:scalar} Tmp_1780: int;
  var {:scalar} Tmp_1781: int;
  var {:scalar} Tmp_1782: int;
  var {:pointer} Tmp_1783: int;
  var {:pointer} Tmp_1784: int;
  var {:pointer} Tmp_1785: int;
  var {:pointer} sdv_553: int;
  var {:scalar} Tmp_1786: int;
  var {:pointer} irp_7: int;
  var {:pointer} senseInfoBuffer: int;
  var {:pointer} Tmp_1787: int;
  var {:pointer} Tmp_1788: int;
  var {:pointer} Tmp_1789: int;
  var {:pointer} Tmp_1790: int;
  var {:pointer} srb_6: int;
  var {:scalar} Tmp_1791: int;
  var {:pointer} Tmp_1792: int;
  var {:pointer} Tmp_1793: int;
  var {:scalar} event_1: int;
  var {:scalar} Tmp_1794: int;
  var {:scalar} Tmp_1795: int;
  var {:scalar} Tmp_1796: int;
  var {:scalar} Tmp_1797: int;
  var {:scalar} i_5: int;
  var {:pointer} Tmp_1798: int;
  var {:pointer} Tmp_1799: int;
  var {:pointer} irpStack_16: int;
  var {:pointer} Tmp_1800: int;
  var {:pointer} Tmp_1801: int;
  var {:pointer} inquiryMdl: int;
  var {:pointer} sdv_556: int;
  var {:pointer} context_1: int;
  var {:scalar} Tmp_1802: int;
  var {:pointer} sdv_557: int;
  var {:pointer} Tmp_1803: int;
  var {:scalar} Tmp_1804: int;
  var {:scalar} Tmp_1805: int;
  var {:scalar} Tmp_1806: int;
  var {:scalar} cIrql_10: int;
  var {:pointer} Tmp_1807: int;
  var {:scalar} Tmp_1808: int;
  var {:scalar} status_51: int;
  var {:scalar} Tmp_1809: int;
  var {:scalar} retryCount: int;
  var {:scalar} Tmp_1810: int;
  var {:pointer} Tmp_1811: int;
  var {:pointer} DeviceExtension_10: int;
  var {:scalar} Scsiop: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_4180: int;
  var vslice_dummy_var_4181: int;

  anon0:
    call {:si_unique_call 927} waitValue_3 := __HAVOC_malloc(20);
    call {:si_unique_call 928} event_1 := __HAVOC_malloc(156);
    DeviceExtension_10 := actual_DeviceExtension_10;
    Scsiop := actual_Scsiop;
    call {:si_unique_call 929} Tmp_1773 := __HAVOC_malloc(4);
    call {:si_unique_call 930} Tmp_1779 := __HAVOC_malloc(4);
    call {:si_unique_call 931} Tmp_1783 := __HAVOC_malloc(4);
    call {:si_unique_call 932} Tmp_1787 := __HAVOC_malloc(4);
    call {:si_unique_call 933} Tmp_1789 := __HAVOC_malloc(4);
    call {:si_unique_call 934} Tmp_1790 := __HAVOC_malloc(4);
    call {:si_unique_call 935} Tmp_1792 := __HAVOC_malloc(4);
    call {:si_unique_call 936} Tmp_1801 := __HAVOC_malloc(4);
    call {:si_unique_call 937} Tmp_1803 := __HAVOC_malloc(4);
    call {:si_unique_call 938} Tmp_1811 := __HAVOC_malloc(4);
    status_51 := -1073741670;
    retryCount := 0;
    context_1 := 0;
    inquiryMdl := 0;
    modeMdl := 0;
    call {:si_unique_call 939} Tmp_1807 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1807 != 0;
    assume Tmp_1807 > 0;
    call {:si_unique_call 940} sdv_KeAcquireSpinLock(0, Tmp_1807);
    assume {:nonnull} Tmp_1807 != 0;
    assume Tmp_1807 > 0;
    havoc cIrql_10;
    call {:si_unique_call 941} sdv_556 := sdv_ExAllocateFromNPagedLookasideList(0);
    context_1 := sdv_556;
    call {:si_unique_call 942} sdv_KeReleaseSpinLock(0, cIrql_10);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} context_1 == 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1773;
    assume {:nonnull} Tmp_1773 != 0;
    assume Tmp_1773 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    havoc Tmp_1778;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1777;
    call {:si_unique_call 943} WPP_SF_q(Tmp_1777, 51, Tmp_1778, DeviceExtension_10);
    goto L320;

  L320:
    Tmp_1770 := status_51;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon150_Then:
    goto L320;

  anon174_Then:
    goto L320;

  anon149_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L320;

  anon117_Then:
    assume {:partition} context_1 != 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    call {:si_unique_call 944} sdv_557 := ExAllocatePoolWithTag(516, 18, 846226035);
    senseInfoBuffer := sdv_557;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} senseInfoBuffer == 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1783;
    assume {:nonnull} Tmp_1783 != 0;
    assume Tmp_1783 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    havoc Tmp_1788;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1808;
    call {:si_unique_call 945} WPP_SF_q(Tmp_1808, 52, Tmp_1788, DeviceExtension_10);
    goto L311;

  L311:
    Tmp_1770 := status_51;
    goto L1;

  anon148_Then:
    goto L311;

  anon173_Then:
    goto L311;

  anon147_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L311;

  anon152_Then:
    assume {:partition} senseInfoBuffer != 0;
    call {:si_unique_call 946} sdv_553 := ExAllocatePoolWithTag(516, 64, 846226035);
    srb_6 := sdv_553;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} srb_6 != 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc Tmp_1775;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    havoc vslice_dummy_var_4180;
    call {:si_unique_call 947} irp_7 := IoAllocateIrp(vslice_dummy_var_4180, 0);
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} irp_7 != 0;
    goto L63;

  L63:
    call {:si_unique_call 948} Tmp_1771, cdb_2, modeMdl, Tmp_1774, Tmp_1776, Tmp_1779, Tmp_1780, Tmp_1781, Tmp_1782, Tmp_1784, Tmp_1785, Tmp_1786, Tmp_1787, Tmp_1789, Tmp_1791, Tmp_1794, Tmp_1795, i_5, Tmp_1798, Tmp_1799, irpStack_16, Tmp_1801, inquiryMdl, Tmp_1803, Tmp_1805, status_51, Tmp_1809, retryCount, Tmp_1810, vslice_dummy_var_131, vslice_dummy_var_132 := Sbp2IssueInternalCommand_loop_L63(Tmp_1771, waitValue_3, cdb_2, modeMdl, Tmp_1774, Tmp_1776, Tmp_1779, Tmp_1780, Tmp_1781, Tmp_1782, Tmp_1784, Tmp_1785, Tmp_1786, irp_7, senseInfoBuffer, Tmp_1787, Tmp_1789, srb_6, Tmp_1791, event_1, Tmp_1794, Tmp_1795, i_5, Tmp_1798, Tmp_1799, irpStack_16, Tmp_1801, inquiryMdl, context_1, Tmp_1803, Tmp_1805, status_51, Tmp_1809, retryCount, Tmp_1810, DeviceExtension_10, Scsiop, vslice_dummy_var_131, vslice_dummy_var_132);
    goto L63_last;

  L63_last:
    call {:si_unique_call 985} irpStack_16 := sdv_IoGetNextIrpStackLocation(irp_7);
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    call {:si_unique_call 986} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    cdb_2 := Cdb__SCSI_REQUEST_BLOCK(srb_6);
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} Scsiop != 18;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} Scsiop == 26;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} retryCount != 0;
    goto L96;

  L96:
    assume {:nonnull} irp_7 != 0;
    assume irp_7 > 0;
    goto L84;

  L84:
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    call {:si_unique_call 949} KeInitializeEvent(Event__REQUEST_CONTEXT(context_1), 0, 0);
    call {:si_unique_call 950} sdv_IoSetCompletionRoutine(irp_7, li2bplFunctionConstant523, context_1, 1, 1, 1);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1779;
    assume {:nonnull} Tmp_1779 != 0;
    assume Tmp_1779 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    Tmp_1810 := Scsiop;
    havoc Tmp_1798;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1771;
    call {:si_unique_call 951} WPP_SF_qDq(Tmp_1771, 55, Tmp_1798, DeviceExtension_10, Tmp_1810, irp_7);
    goto L157;

  L157:
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc vslice_dummy_var_4181;
    call {:si_unique_call 952} status_51 := sdv_IoCallDriver#1(vslice_dummy_var_4181, irp_7);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} irp_7 != 0;
    assume irp_7 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    goto L171;

  L171:
    call {:si_unique_call 953} vslice_dummy_var_131 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1809;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} Tmp_1809 != 1;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1801;
    assume {:nonnull} Tmp_1801 != 0;
    assume Tmp_1801 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1781;
    Tmp_1782 := Scsiop;
    havoc Tmp_1799;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1795;
    call {:si_unique_call 954} WPP_SF_qDD(Tmp_1795, 57, Tmp_1799, DeviceExtension_10, Tmp_1782, Tmp_1781);
    goto L181;

  L181:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1805;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} Tmp_1805 == 18;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1803;
    assume {:nonnull} Tmp_1803 != 0;
    assume Tmp_1803 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    havoc Tmp_1785;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1794;
    call {:si_unique_call 955} WPP_SF_q(Tmp_1794, 58, Tmp_1785, DeviceExtension_10);
    goto L197;

  L197:
    status_51 := 0;
    goto L205;

  L205:
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} status_51 != 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} 5 > retryCount;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1789;
    assume {:nonnull} Tmp_1789 != 0;
    assume Tmp_1789 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    havoc Tmp_1774;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1791;
    call {:si_unique_call 956} WPP_SF_q(Tmp_1791, 60, Tmp_1774, DeviceExtension_10);
    goto L213;

  L213:
    i_5 := 0;
    goto L221;

  L221:
    call {:si_unique_call 957} i_5, vslice_dummy_var_132 := Sbp2IssueInternalCommand_loop_L221(waitValue_3, event_1, i_5, DeviceExtension_10, vslice_dummy_var_132);
    goto L221_last;

  L221_last:
    assume {:CounterLoop 6} {:Counter "i_5"} true;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} 6 > i_5;
    call {:si_unique_call 958} KeInitializeEvent(event_1, 0, 0);
    assume {:nonnull} waitValue_3 != 0;
    assume waitValue_3 > 0;
    call {:si_unique_call 959} vslice_dummy_var_132 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_3);
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    i_5 := i_5 + 1;
    goto anon138_Else_dummy;

  anon138_Else_dummy:
    assume false;
    return;

  anon138_Then:
    goto L206;

  L206:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} 3 > retryCount;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} status_51 == 0;
    goto L104;

  L104:
    call {:si_unique_call 960} sdv_ExFreePool(0);
    call {:si_unique_call 961} sdv_ExFreePool(0);
    assume {:nonnull} irp_7 != 0;
    assume irp_7 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    call {:si_unique_call 962} IoFreeMdl(0);
    goto L111;

  L111:
    call {:si_unique_call 963} IoFreeIrp(0);
    call {:si_unique_call 964} Tmp_1807 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1807 != 0;
    assume Tmp_1807 > 0;
    call {:si_unique_call 965} sdv_KeAcquireSpinLock(0, Tmp_1807);
    assume {:nonnull} Tmp_1807 != 0;
    assume Tmp_1807 > 0;
    havoc cIrql_10;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 966} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 967} sdv_KeReleaseSpinLock(0, cIrql_10);
    Tmp_1770 := status_51;
    goto L1;

  anon163_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon120_Then:
    goto L111;

  anon139_Then:
    assume {:partition} status_51 != 0;
    goto anon139_Then_dummy;

  anon139_Then_dummy:
    assume false;
    return;

  anon132_Then:
    assume {:partition} retryCount >= 3;
    goto L104;

  anon137_Then:
    assume {:partition} i_5 >= 6;
    goto L206;

  anon136_Then:
    goto L213;

  anon162_Then:
    goto L213;

  anon135_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L213;

  anon134_Then:
    assume {:partition} retryCount >= 5;
    goto L206;

  anon133_Then:
    goto L206;

  anon131_Then:
    assume {:partition} status_51 == 0;
    goto L206;

  anon130_Then:
    goto L197;

  anon161_Then:
    goto L197;

  anon129_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L197;

  anon160_Then:
    assume {:partition} Tmp_1805 != 18;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} senseInfoBuffer != 0;
    assume senseInfoBuffer > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    status_51 := -1073741808;
    retryCount := retryCount + 1;
    goto L205;

  anon140_Then:
    goto L233;

  L233:
    retryCount := retryCount + 1;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1787;
    assume {:nonnull} Tmp_1787 != 0;
    assume Tmp_1787 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    Tmp_1786 := Scsiop;
    havoc Tmp_1784;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1780;
    call {:si_unique_call 968} WPP_SF_qDd(Tmp_1780, 59, Tmp_1784, DeviceExtension_10, Tmp_1786, retryCount);
    goto L241;

  L241:
    status_51 := -1073741823;
    goto L205;

  anon141_Then:
    goto L241;

  anon165_Then:
    goto L241;

  anon164_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L241;

  anon128_Then:
    goto L233;

  anon127_Then:
    goto L181;

  anon159_Then:
    goto L181;

  anon126_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L181;

  anon158_Then:
    assume {:partition} Tmp_1809 == 1;
    status_51 := 0;
    goto L206;

  anon124_Then:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} status_51 != 259;
    assume {:nonnull} irp_7 != 0;
    assume irp_7 > 0;
    havoc status_51;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1790;
    assume {:nonnull} Tmp_1790 != 0;
    assume Tmp_1790 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1797;
    Tmp_1806 := Scsiop;
    havoc Tmp_1800;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1802;
    call {:si_unique_call 969} WPP_SF_qDqDD(Tmp_1802, 56, Tmp_1800, DeviceExtension_10, Tmp_1806, irp_7, status_51, Tmp_1797);
    goto L104;

  anon142_Then:
    goto L104;

  anon167_Then:
    goto L104;

  anon166_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L104;

  anon125_Then:
    assume {:partition} status_51 == 259;
    goto L171;

  anon157_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon123_Then:
    goto L157;

  anon156_Then:
    goto L157;

  anon122_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L157;

  anon168_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 970} modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} modeMdl == 0;
    goto L104;

  anon119_Then:
    assume {:partition} modeMdl != 0;
    goto L96;

  anon151_Then:
    assume {:partition} Scsiop != 26;
    goto L84;

  anon154_Then:
    assume {:partition} Scsiop == 18;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc Tmp_1776;
    assume {:nonnull} Tmp_1776 != 0;
    assume Tmp_1776 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} retryCount != 0;
    goto L138;

  L138:
    assume {:nonnull} irp_7 != 0;
    assume irp_7 > 0;
    goto L84;

  anon155_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 971} inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} inquiryMdl != 0;
    goto L138;

  anon121_Then:
    assume {:partition} inquiryMdl == 0;
    goto L104;

  anon118_Then:
    assume {:partition} irp_7 == 0;
    call {:si_unique_call 972} sdv_ExFreePool(0);
    call {:si_unique_call 973} sdv_ExFreePool(0);
    call {:si_unique_call 974} Tmp_1807 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1807 != 0;
    assume Tmp_1807 > 0;
    call {:si_unique_call 975} sdv_KeAcquireSpinLock(0, Tmp_1807);
    assume {:nonnull} Tmp_1807 != 0;
    assume Tmp_1807 > 0;
    havoc cIrql_10;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 976} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 977} sdv_KeReleaseSpinLock(0, cIrql_10);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1792;
    assume {:nonnull} Tmp_1792 != 0;
    assume Tmp_1792 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    havoc Tmp_1772;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1804;
    call {:si_unique_call 978} WPP_SF_q(Tmp_1804, 54, Tmp_1772, DeviceExtension_10);
    goto L281;

  L281:
    Tmp_1770 := status_51;
    goto L1;

  anon144_Then:
    goto L281;

  anon170_Then:
    goto L281;

  anon143_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L281;

  anon169_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon153_Then:
    assume {:partition} srb_6 == 0;
    call {:si_unique_call 979} sdv_ExFreePool(0);
    call {:si_unique_call 980} Tmp_1807 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1807 != 0;
    assume Tmp_1807 > 0;
    call {:si_unique_call 981} sdv_KeAcquireSpinLock(0, Tmp_1807);
    assume {:nonnull} Tmp_1807 != 0;
    assume Tmp_1807 > 0;
    havoc cIrql_10;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 982} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 983} sdv_KeReleaseSpinLock(0, cIrql_10);
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1811;
    assume {:nonnull} Tmp_1811 != 0;
    assume Tmp_1811 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    havoc Tmp_1793;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1796;
    call {:si_unique_call 984} WPP_SF_q(Tmp_1796, 53, Tmp_1793, DeviceExtension_10);
    goto L302;

  L302:
    Tmp_1770 := status_51;
    goto L1;

  anon146_Then:
    goto L302;

  anon172_Then:
    goto L302;

  anon145_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L302;

  anon171_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConvertSbp2SenseDataToScsi"} ConvertSbp2SenseDataToScsi(actual_StatusBlock_1: int, actual_SenseBuffer: int, actual_SenseBufferLength: int) returns (Tmp_1812: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1812 == 1 || Tmp_1812 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ConvertSbp2SenseDataToScsi"} ConvertSbp2SenseDataToScsi(actual_StatusBlock_1: int, actual_SenseBuffer: int, actual_SenseBufferLength: int) returns (Tmp_1812: int)
{
  var {:pointer} Tmp_1813: int;
  var {:pointer} Tmp_1814: int;
  var {:pointer} Tmp_1815: int;
  var {:pointer} Tmp_1816: int;
  var {:pointer} Tmp_1817: int;
  var {:pointer} Tmp_1820: int;
  var {:pointer} Tmp_1821: int;
  var {:pointer} Tmp_1822: int;
  var {:scalar} Tmp_1823: int;
  var {:pointer} Tmp_1824: int;
  var {:scalar} validSense: int;
  var {:pointer} Tmp_1825: int;
  var {:pointer} Tmp_1826: int;
  var {:pointer} Tmp_1827: int;
  var {:pointer} Tmp_1828: int;
  var {:pointer} Tmp_1829: int;
  var {:pointer} Tmp_1830: int;
  var {:pointer} Tmp_1831: int;
  var {:pointer} Tmp_1832: int;
  var {:pointer} Tmp_1833: int;
  var {:pointer} Tmp_1834: int;
  var {:pointer} StatusBlock_1: int;
  var {:pointer} SenseBuffer: int;
  var {:scalar} SenseBufferLength: int;
  var boogieTmp: int;

  anon0:
    StatusBlock_1 := actual_StatusBlock_1;
    SenseBuffer := actual_SenseBuffer;
    SenseBufferLength := actual_SenseBufferLength;
    call {:si_unique_call 987} Tmp_1813 := __HAVOC_malloc(228);
    call {:si_unique_call 988} Tmp_1814 := __HAVOC_malloc(228);
    call {:si_unique_call 989} Tmp_1815 := __HAVOC_malloc(228);
    call {:si_unique_call 990} Tmp_1816 := __HAVOC_malloc(228);
    call {:si_unique_call 991} Tmp_1817 := __HAVOC_malloc(228);
    call {:si_unique_call 992} Tmp_1820 := __HAVOC_malloc(228);
    call {:si_unique_call 993} Tmp_1821 := __HAVOC_malloc(228);
    call {:si_unique_call 994} Tmp_1822 := __HAVOC_malloc(228);
    call {:si_unique_call 995} Tmp_1824 := __HAVOC_malloc(228);
    call {:si_unique_call 996} Tmp_1825 := __HAVOC_malloc(228);
    call {:si_unique_call 997} Tmp_1826 := __HAVOC_malloc(228);
    call {:si_unique_call 998} Tmp_1827 := __HAVOC_malloc(228);
    call {:si_unique_call 999} Tmp_1828 := __HAVOC_malloc(228);
    call {:si_unique_call 1000} Tmp_1829 := __HAVOC_malloc(228);
    call {:si_unique_call 1001} Tmp_1830 := __HAVOC_malloc(228);
    call {:si_unique_call 1002} Tmp_1831 := __HAVOC_malloc(228);
    call {:si_unique_call 1003} Tmp_1832 := __HAVOC_malloc(228);
    call {:si_unique_call 1004} Tmp_1833 := __HAVOC_malloc(228);
    call {:si_unique_call 1005} Tmp_1834 := __HAVOC_malloc(228);
    validSense := 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} SenseBuffer != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} 14 <= SenseBufferLength;
    call {:si_unique_call 1006} sdv_RtlZeroMemory(0, SenseBufferLength);
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1821;
    assume {:nonnull} Tmp_1821 != 0;
    assume Tmp_1821 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1814;
    assume {:nonnull} Tmp_1814 != 0;
    assume Tmp_1814 > 0;
    havoc Tmp_1823;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Tmp_1823 == 1;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    validSense := 1;
    goto L15;

  L15:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} validSense != 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1820;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1820 != 0;
    assume Tmp_1820 > 0;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1829;
    assume {:nonnull} Tmp_1829 != 0;
    assume Tmp_1829 > 0;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    call {:si_unique_call 1007} boogieTmp := corral_nondet();
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1815;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1815 != 0;
    assume Tmp_1815 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1833;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1833 != 0;
    assume Tmp_1833 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1831;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1831 != 0;
    assume Tmp_1831 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1826;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1826 != 0;
    assume Tmp_1826 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1832;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1832 != 0;
    assume Tmp_1832 > 0;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1834;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1834 != 0;
    assume Tmp_1834 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1817;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1817 != 0;
    assume Tmp_1817 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1827;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1827 != 0;
    assume Tmp_1827 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1824;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1824 != 0;
    assume Tmp_1824 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1825;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1825 != 0;
    assume Tmp_1825 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1813;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1813 != 0;
    assume Tmp_1813 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} SenseBufferLength >= 18;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1816;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1816 != 0;
    assume Tmp_1816 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1828;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1828 != 0;
    assume Tmp_1828 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1830;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1830 != 0;
    assume Tmp_1830 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1822;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1822 != 0;
    assume Tmp_1822 > 0;
    goto L18;

  L18:
    Tmp_1812 := validSense;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} 18 > SenseBufferLength;
    goto L18;

  anon14_Then:
    assume {:partition} validSense == 0;
    goto L18;

  anon17_Then:
    assume {:partition} Tmp_1823 != 1;
    goto L15;

  anon16_Then:
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    validSense := 1;
    goto L15;

  anon13_Then:
    assume {:partition} SenseBufferLength < 14;
    goto L6;

  L6:
    Tmp_1812 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} SenseBuffer == 0;
    goto L6;
}



procedure {:origName "WPP_SF_qDq"} WPP_SF_qDq(actual_Logger_23: int, actual_id_23: int, actual_TraceGuid_23: int, actual_s_p_e_c_i_a_l_94: int, actual_s_p_e_c_i_a_l_95: int, actual_s_p_e_c_i_a_l_96: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDq"} WPP_SF_qDq(actual_Logger_23: int, actual_id_23: int, actual_TraceGuid_23: int, actual_s_p_e_c_i_a_l_94: int, actual_s_p_e_c_i_a_l_95: int, actual_s_p_e_c_i_a_l_96: int)
{
  var {:pointer} TraceGuid_23: int;
  var vslice_dummy_var_133: int;

  anon0:
    call {:si_unique_call 1008} vslice_dummy_var_133 := __HAVOC_malloc(4);
    TraceGuid_23 := actual_TraceGuid_23;
    return;
}



procedure {:origName "Sbp2BuildMiniportDescriptor"} Sbp2BuildMiniportDescriptor(actual_DeviceObject_37: int, actual_Descriptor: int, actual_DescriptorLength: int) returns (Tmp_1874: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1874 == -1073741808 || Tmp_1874 == -1073741789 || Tmp_1874 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BuildMiniportDescriptor"} Sbp2BuildMiniportDescriptor(actual_DeviceObject_37: int, actual_Descriptor: int, actual_DescriptorLength: int) returns (Tmp_1874: int)
{
  var {:pointer} Descriptor: int;
  var {:pointer} DescriptorLength: int;

  anon0:
    Descriptor := actual_Descriptor;
    DescriptorLength := actual_DescriptorLength;
    call {:si_unique_call 1009} sdv_do_paged_code_check();
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1874 := -1073741808;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1874 := -1073741789;
    goto L1;

  anon10_Then:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1874 := 0;
    goto L1;

  anon12_Then:
    goto L13;

  L13:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1874 := 0;
    goto L1;

  anon11_Then:
    goto L13;
}



procedure {:origName "Sbp2QueryProperty"} Sbp2QueryProperty(actual_DeviceObject_38: int, actual_QueryIrp: int) returns (Tmp_1876: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2QueryProperty"} Sbp2QueryProperty(actual_DeviceObject_38: int, actual_QueryIrp: int) returns (Tmp_1876: int)
{
  var {:pointer} irpStack_17: int;
  var {:pointer} Tmp_1877: int;
  var {:pointer} query: int;
  var {:pointer} Tmp_1878: int;
  var {:dopa} {:scalar} queryLength: int;
  var {:scalar} status_53: int;
  var {:pointer} Tmp_1879: int;
  var {:pointer} deviceExtension_6: int;
  var {:pointer} DeviceObject_38: int;
  var {:pointer} QueryIrp: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_4182: int;
  var vslice_dummy_var_4183: int;
  var vslice_dummy_var_4184: int;

  anon0:
    call {:si_unique_call 1010} queryLength := __HAVOC_malloc(4);
    DeviceObject_38 := actual_DeviceObject_38;
    QueryIrp := actual_QueryIrp;
    call {:si_unique_call 1011} irpStack_17 := sdv_IoGetCurrentIrpStackLocation(QueryIrp);
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    deviceExtension_6 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_38)];
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    havoc query;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    call {:si_unique_call 1012} sdv_do_paged_code_check();
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    status_53 := -1073741585;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 1013} sdv_IoCompleteRequest(0, 0);
    Tmp_1876 := status_53;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon19_Then:
    call {:si_unique_call 1014} status_53 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} status_53 >= 0;
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    status_53 := 0;
    goto L42;

  L42:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    call {:si_unique_call 1015} vslice_dummy_var_134 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_6), 0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1016} sdv_IoCompleteRequest(0, 1);
    Tmp_1876 := status_53;
    goto L1;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1878 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1878 != 0;
    assume Tmp_1878 > 0;
    havoc vslice_dummy_var_4182;
    call {:si_unique_call 1017} status_53 := Sbp2BuildMiniportDescriptor(DeviceObject_38, vslice_dummy_var_4182, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon25_Then:
    status_53 := -1073741585;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    goto L42;

  anon26_Then:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    status_53 := 0;
    goto L42;

  anon23_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1879 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1879 != 0;
    assume Tmp_1879 > 0;
    havoc vslice_dummy_var_4183;
    call {:si_unique_call 1018} status_53 := Sbp2BuildAdapterDescriptor(DeviceObject_38, vslice_dummy_var_4183, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon21_Then:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    status_53 := 0;
    goto L42;

  anon22_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1877 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1877 != 0;
    assume Tmp_1877 > 0;
    havoc vslice_dummy_var_4184;
    call {:si_unique_call 1019} status_53 := Sbp2BuildDeviceDescriptor(DeviceObject_38, vslice_dummy_var_4184, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon20_Then:
    assume {:partition} 0 > status_53;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    call {:si_unique_call 1020} sdv_IoCompleteRequest(0, 0);
    Tmp_1876 := status_53;
    goto L1;
}



procedure {:origName "Sbp2BuildAdapterDescriptor"} Sbp2BuildAdapterDescriptor(actual_DeviceObject_39: int, actual_Descriptor_1: int, actual_DescriptorLength_1: int) returns (Tmp_1881: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1881 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BuildAdapterDescriptor"} Sbp2BuildAdapterDescriptor(actual_DeviceObject_39: int, actual_Descriptor_1: int, actual_DescriptorLength_1: int) returns (Tmp_1881: int)
{
  var {:scalar} realLength: int;
  var {:scalar} tmp_1: int;
  var {:pointer} Tmp_1883: int;
  var {:pointer} deviceExtension_7: int;
  var {:pointer} DeviceObject_39: int;
  var {:pointer} DescriptorLength_1: int;
  var vslice_dummy_var_4185: int;

  anon0:
    call {:si_unique_call 1021} tmp_1 := __HAVOC_malloc(56);
    DeviceObject_39 := actual_DeviceObject_39;
    DescriptorLength_1 := actual_DescriptorLength_1;
    assume {:nonnull} DeviceObject_39 != 0;
    assume DeviceObject_39 > 0;
    deviceExtension_7 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_39)];
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    call {:si_unique_call 1022} sdv_do_paged_code_check();
    realLength := 32;
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L30;

  L30:
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    havoc vslice_dummy_var_4185;
    call {:si_unique_call 1023} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_4185);
    Tmp_1881 := 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_1883;
    assume {:nonnull} Tmp_1883 != 0;
    assume Tmp_1883 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L38;

  L38:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1024} sdv_RtlCopyMemory(0, 0, 30);
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto L55;

  L55:
    Tmp_1881 := 0;
    goto L1;

  anon15_Then:
    call {:si_unique_call 1025} sdv_RtlCopyMemory(0, 0, 32);
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto L55;

  anon14_Then:
    goto L38;

  anon11_Then:
    goto L26;

  L26:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L30;

  anon13_Then:
    goto L26;
}



procedure {:origName "Sbp2BuildDeviceDescriptor"} Sbp2BuildDeviceDescriptor(actual_DeviceObject_40: int, actual_Descriptor_2: int, actual_DescriptorLength_2: int) returns (Tmp_1884: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1884 == 0 || Tmp_1884 == 17;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BuildDeviceDescriptor"} Sbp2BuildDeviceDescriptor(actual_DeviceObject_40: int, actual_Descriptor_2: int, actual_DescriptorLength_2: int) returns (Tmp_1884: int)
{
  var {:scalar} Tmp_1885: int;
  var {:scalar} bytesRemaining: int;
  var {:scalar} infoLength: int;
  var {:scalar} maxLength: int;
  var {:pointer} Tmp_1886: int;
  var {:pointer} Tmp_1887: int;
  var {:pointer} Tmp_1888: int;
  var {:pointer} Tmp_1889: int;
  var {:scalar} Tmp_1890: int;
  var {:pointer} inquiryData: int;
  var {:scalar} Tmp_1891: int;
  var {:pointer} Tmp_1892: int;
  var {:pointer} Tmp_1893: int;
  var {:pointer} Tmp_1894: int;
  var {:pointer} currentOffset: int;
  var {:pointer} Tmp_1896: int;
  var {:pointer} Tmp_1897: int;
  var {:pointer} Tmp_1898: int;
  var {:scalar} realLength_1: int;
  var {:scalar} tmp_2: int;
  var {:scalar} status_54: int;
  var {:pointer} deviceExtension_8: int;
  var {:pointer} Tmp_1899: int;
  var {:pointer} DeviceObject_40: int;
  var {:pointer} Descriptor_2: int;
  var {:pointer} DescriptorLength_2: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_4186: int;
  var vslice_dummy_var_4187: int;
  var vslice_dummy_var_4188: int;

  anon0:
    call {:si_unique_call 1026} tmp_2 := __HAVOC_malloc(52);
    DeviceObject_40 := actual_DeviceObject_40;
    Descriptor_2 := actual_Descriptor_2;
    DescriptorLength_2 := actual_DescriptorLength_2;
    call {:si_unique_call 1027} Tmp_1887 := __HAVOC_malloc(28);
    call {:si_unique_call 1028} Tmp_1888 := __HAVOC_malloc(8);
    call {:si_unique_call 1029} Tmp_1889 := __HAVOC_malloc(36);
    call {:si_unique_call 1030} Tmp_1892 := __HAVOC_malloc(8);
    call {:si_unique_call 1031} Tmp_1896 := __HAVOC_malloc(16);
    call {:si_unique_call 1032} Tmp_1897 := __HAVOC_malloc(20);
    call {:si_unique_call 1033} Tmp_1898 := __HAVOC_malloc(32);
    status_54 := 0;
    assume {:nonnull} DescriptorLength_2 != 0;
    assume DescriptorLength_2 > 0;
    havoc maxLength;
    bytesRemaining := maxLength;
    realLength_1 := 40;
    currentOffset := Descriptor_2;
    assume {:nonnull} DeviceObject_40 != 0;
    assume DeviceObject_40 > 0;
    deviceExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_40)];
    call {:si_unique_call 1034} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    inquiryData := InquiryData__DEVICE_EXTENSION(deviceExtension_8);
    infoLength := 48;
    realLength_1 := realLength_1 + infoLength;
    call {:si_unique_call 1035} sdv_RtlZeroMemory(0, maxLength);
    call {:si_unique_call 1036} sdv_RtlZeroMemory(0, 40);
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L36;

  L36:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} DeviceObject_40 != 0;
    assume DeviceObject_40 > 0;
    goto L38;

  L38:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} bytesRemaining > 40;
    Tmp_1891 := 40;
    goto L43;

  L43:
    call {:si_unique_call 1037} sdv_RtlCopyMemory(0, 0, Tmp_1891);
    bytesRemaining := bytesRemaining - 40;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 0 >= bytesRemaining;
    Tmp_1884 := status_54;
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} bytesRemaining > 0;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc Tmp_1898;
    assume {:nonnull} Tmp_1898 != 0;
    assume Tmp_1898 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L54;

  L54:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} 8 >= bytesRemaining;
    Tmp_1884 := 0;
    goto L1;

  anon22_Then:
    assume {:partition} bytesRemaining > 8;
    call {:si_unique_call 1038} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 9;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} 16 >= bytesRemaining;
    Tmp_1884 := status_54;
    goto L1;

  anon28_Then:
    assume {:partition} bytesRemaining > 16;
    call {:si_unique_call 1039} sdv_RtlCopyMemory(0, 0, 16);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 17;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} 4 >= bytesRemaining;
    Tmp_1884 := status_54;
    goto L1;

  anon29_Then:
    assume {:partition} bytesRemaining > 4;
    call {:si_unique_call 1040} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 5;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 16 >= bytesRemaining;
    Tmp_1884 := status_54;
    goto L1;

  anon30_Then:
    assume {:partition} bytesRemaining > 16;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc Tmp_1899;
    assume {:nonnull} Tmp_1899 != 0;
    assume Tmp_1899 > 0;
    havoc Tmp_1886;
    assume {:nonnull} Tmp_1886 != 0;
    assume Tmp_1886 > 0;
    havoc Tmp_1888;
    assume {:nonnull} Tmp_1888 != 0;
    assume Tmp_1888 > 0;
    havoc Tmp_1890;
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc Tmp_1893;
    assume {:nonnull} Tmp_1893 != 0;
    assume Tmp_1893 > 0;
    havoc Tmp_1894;
    assume {:nonnull} Tmp_1894 != 0;
    assume Tmp_1894 > 0;
    havoc Tmp_1892;
    assume {:nonnull} Tmp_1892 != 0;
    assume Tmp_1892 > 0;
    havoc Tmp_1885;
    Tmp_1889 := strConst__li2bpl30;
    call {:si_unique_call 1041} vslice_dummy_var_135 := RtlStringCbPrintfA(currentOffset, bytesRemaining, Tmp_1889);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    assume {:nonnull} DescriptorLength_2 != 0;
    assume DescriptorLength_2 > 0;
    Tmp_1884 := status_54;
    goto L1;

  anon27_Then:
    Tmp_1887 := strConst__li2bpl27;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_4186;
    call {:si_unique_call 1042} vslice_dummy_var_136 := RtlStringCbPrintfA(vslice_dummy_var_4186, 8, Tmp_1887);
    Tmp_1897 := strConst__li2bpl28;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_4187;
    call {:si_unique_call 1043} vslice_dummy_var_137 := RtlStringCbPrintfA(vslice_dummy_var_4187, 16, Tmp_1897);
    Tmp_1896 := strConst__li2bpl29;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_4188;
    call {:si_unique_call 1044} vslice_dummy_var_138 := RtlStringCbPrintfA(vslice_dummy_var_4188, 4, Tmp_1896);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    status_54 := 17;
    goto L54;

  anon23_Then:
    goto L54;

  anon25_Then:
    assume {:partition} 40 >= bytesRemaining;
    Tmp_1891 := bytesRemaining;
    goto L43;

  anon24_Then:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto L38;

  anon21_Then:
    goto L36;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_139: int;

  anon0:
    call {:si_unique_call 1045} vslice_dummy_var_139 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "WPP_SF_qS"} WPP_SF_qS(actual_Logger_24: int, actual_id_24: int, actual_TraceGuid_24: int, actual_s_p_e_c_i_a_l_97: int, actual_s_p_e_c_i_a_l_98: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qS"} WPP_SF_qS(actual_Logger_24: int, actual_id_24: int, actual_TraceGuid_24: int, actual_s_p_e_c_i_a_l_97: int, actual_s_p_e_c_i_a_l_98: int)
{
  var {:pointer} Tmp_1902: int;
  var {:scalar} sdv_581: int;
  var {:scalar} Tmp_1904: int;
  var {:pointer} TraceGuid_24: int;
  var {:pointer} s_p_e_c_i_a_l_98: int;
  var vslice_dummy_var_140: int;

  anon0:
    call {:si_unique_call 1046} vslice_dummy_var_140 := __HAVOC_malloc(4);
    TraceGuid_24 := actual_TraceGuid_24;
    s_p_e_c_i_a_l_98 := actual_s_p_e_c_i_a_l_98;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_98 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_98 != 0;
    assume s_p_e_c_i_a_l_98 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_1904 := (sdv_581 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_98 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_98 != 0;
    assume s_p_e_c_i_a_l_98 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1902 := s_p_e_c_i_a_l_98;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_1902 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_98 == 0;
    goto L18;

  anon10_Then:
    Tmp_1904 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_98 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qqq"} WPP_SF_qqq(actual_Logger_25: int, actual_id_25: int, actual_TraceGuid_25: int, actual_s_p_e_c_i_a_l_99: int, actual_s_p_e_c_i_a_l_100: int, actual_s_p_e_c_i_a_l_101: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qqq"} WPP_SF_qqq(actual_Logger_25: int, actual_id_25: int, actual_TraceGuid_25: int, actual_s_p_e_c_i_a_l_99: int, actual_s_p_e_c_i_a_l_100: int, actual_s_p_e_c_i_a_l_101: int)
{
  var {:pointer} TraceGuid_25: int;
  var vslice_dummy_var_141: int;

  anon0:
    call {:si_unique_call 1047} vslice_dummy_var_141 := __HAVOC_malloc(4);
    TraceGuid_25 := actual_TraceGuid_25;
    return;
}



procedure {:origName "IsRetryLogin"} IsRetryLogin(actual_PdoExtension_23: int, actual_NtStatus_2: int) returns (Tmp_1918: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1918 == 1 || Tmp_1918 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IsRetryLogin"} IsRetryLogin(actual_PdoExtension_23: int, actual_NtStatus_2: int) returns (Tmp_1918: int)
{
  var {:pointer} Tmp_1919: int;
  var {:scalar} sdv_586: int;
  var {:pointer} PdoExtension_23: int;
  var {:scalar} NtStatus_2: int;

  anon0:
    PdoExtension_23 := actual_PdoExtension_23;
    NtStatus_2 := actual_NtStatus_2;
    call {:si_unique_call 1048} Sbp2AddLog(PdoExtension_23, 1, -766742681, NtStatus_2, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} NtStatus_2 == -1072562032;
    Tmp_1918 := 1;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} NtStatus_2 != -1072562032;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} NtStatus_2 != -1073741810;
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1049} Tmp_1919 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    assume {:nonnull} Tmp_1919 != 0;
    assume Tmp_1919 > 0;
    call {:si_unique_call 1050} sdv_586 := sdv_InterlockedDecrement(Tmp_1919);
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    assume {:nonnull} Tmp_1919 != 0;
    assume Tmp_1919 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_586 > 0;
    Tmp_1918 := 1;
    goto L1;

  anon12_Then:
    assume {:partition} 0 >= sdv_586;
    goto L9;

  L9:
    Tmp_1918 := 0;
    goto L1;

  anon11_Then:
    goto L9;

  anon10_Then:
    assume {:partition} NtStatus_2 == -1073741810;
    goto L9;
}



procedure {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_1920: int);
  free ensures {:va_keep} Tmp_1920 == 0 || Tmp_1920 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_1920: int)
{
  var {:scalar} cchNewDestLength: int;
  var {:scalar} iRet: int;
  var {:scalar} cchMax: int;
  var {:scalar} status_55: int;
  var {:pointer} pszDest: int;
  var {:scalar} cchDest: int;
  var {:pointer} pcchNewDestLength: int;

  anon0:
    pszDest := actual_pszDest;
    cchDest := actual_cchDest;
    pcchNewDestLength := actual_pcchNewDestLength;
    status_55 := 0;
    cchNewDestLength := 0;
    cchMax := cchDest - 1;
    call {:si_unique_call 1051} iRet := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet;
    goto L16;

  L16:
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    cchNewDestLength := cchMax;
    status_55 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength != 0;
    assume {:nonnull} pcchNewDestLength != 0;
    assume pcchNewDestLength > 0;
    goto L21;

  L21:
    Tmp_1920 := status_55;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet <= cchMax;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet == cchMax;
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    cchNewDestLength := cchMax;
    goto L20;

  anon12_Then:
    assume {:partition} iRet != cchMax;
    cchNewDestLength := iRet;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax < iRet;
    goto L16;
}



procedure {:origName "Sbp2FdoRequestCompletionRoutine"} Sbp2FdoRequestCompletionRoutine(actual_DeviceObject_41: int, actual_Irp_23: int, actual_EventIn: int) returns (Tmp_1922: int);
  free ensures {:va_keep} Tmp_1922 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2FdoRequestCompletionRoutine"} Sbp2FdoRequestCompletionRoutine(actual_DeviceObject_41: int, actual_Irp_23: int, actual_EventIn: int) returns (Tmp_1922: int)
{
  var {:pointer} Event_3: int;
  var {:pointer} EventIn: int;
  var vslice_dummy_var_142: int;

  anon0:
    EventIn := actual_EventIn;
    Event_3 := EventIn;
    call {:si_unique_call 1052} vslice_dummy_var_142 := KeSetEvent(Event_3, 0, 0);
    Tmp_1922 := -1073741802;
    return;
}



procedure {:origName "WPP_SF_qDdd"} WPP_SF_qDdd(actual_Logger_26: int, actual_id_26: int, actual_TraceGuid_26: int, actual_s_p_e_c_i_a_l_102: int, actual_s_p_e_c_i_a_l_103: int, actual_s_p_e_c_i_a_l_104: int, actual_s_p_e_c_i_a_l_105: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDdd"} WPP_SF_qDdd(actual_Logger_26: int, actual_id_26: int, actual_TraceGuid_26: int, actual_s_p_e_c_i_a_l_102: int, actual_s_p_e_c_i_a_l_103: int, actual_s_p_e_c_i_a_l_104: int, actual_s_p_e_c_i_a_l_105: int)
{
  var {:pointer} TraceGuid_26: int;
  var vslice_dummy_var_143: int;

  anon0:
    call {:si_unique_call 1053} vslice_dummy_var_143 := __HAVOC_malloc(4);
    TraceGuid_26 := actual_TraceGuid_26;
    return;
}



procedure {:origName "Sbp2ReInitializePdo"} Sbp2ReInitializePdo(actual_FdoExtension_4: int, actual_DeviceInfo_2: int, actual_InstanceNumber: int) returns (Tmp_1927: int);
  modifies alloc, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ReInitializePdo"} Sbp2ReInitializePdo(actual_FdoExtension_4: int, actual_DeviceInfo_2: int, actual_InstanceNumber: int) returns (Tmp_1927: int)
{
  var {:pointer} Tmp_1928: int;
  var {:scalar} size_1: int;
  var {:pointer} Tmp_1929: int;
  var {:scalar} Tmp_1930: int;
  var {:pointer} symlinkBuffer: int;
  var {:pointer} pdoExtension_17: int;
  var {:scalar} uniDeviceName: int;
  var {:pointer} Tmp_1931: int;
  var {:pointer} Tmp_1932: int;
  var {:pointer} Tmp_1933: int;
  var {:pointer} Tmp_1934: int;
  var {:scalar} Tmp_1935: int;
  var {:pointer} Tmp_1936: int;
  var {:pointer} Tmp_1937: int;
  var {:pointer} Tmp_1938: int;
  var {:pointer} Tmp_1939: int;
  var {:pointer} Tmp_1941: int;
  var {:pointer} Tmp_1942: int;
  var {:scalar} Tmp_1943: int;
  var {:pointer} sdv_592: int;
  var {:pointer} Tmp_1944: int;
  var {:pointer} Tmp_1945: int;
  var {:pointer} Tmp_1946: int;
  var {:scalar} Tmp_1947: int;
  var {:scalar} sdv_593: int;
  var {:scalar} sdv_594: int;
  var {:scalar} prevRemoveLock: int;
  var {:pointer} Tmp_1949: int;
  var {:pointer} Tmp_1950: int;
  var {:scalar} status_56: int;
  var {:pointer} Tmp_1951: int;
  var {:scalar} prevDeviceFlags: int;
  var {:pointer} FdoExtension_4: int;
  var {:pointer} DeviceInfo_2: int;
  var {:scalar} InstanceNumber: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_4189: int;

  anon0:
    call {:si_unique_call 1054} uniDeviceName := __HAVOC_malloc(12);
    call {:si_unique_call 1055} prevRemoveLock := __HAVOC_malloc(168);
    FdoExtension_4 := actual_FdoExtension_4;
    DeviceInfo_2 := actual_DeviceInfo_2;
    InstanceNumber := actual_InstanceNumber;
    call {:si_unique_call 1056} Tmp_1928 := __HAVOC_malloc(4);
    call {:si_unique_call 1057} Tmp_1936 := __HAVOC_malloc(4);
    call {:si_unique_call 1058} Tmp_1939 := __HAVOC_malloc(180);
    call {:si_unique_call 1059} vslice_dummy_var_144 := __HAVOC_malloc(8);
    call {:si_unique_call 1060} Tmp_1945 := __HAVOC_malloc(4);
    call {:si_unique_call 1061} Tmp_1946 := __HAVOC_malloc(4);
    call {:si_unique_call 1062} vslice_dummy_var_145 := __HAVOC_malloc(8);
    call {:si_unique_call 1063} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    Tmp_1942 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_2)];
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    Tmp_1937 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_2)];
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    goto L15;

  L15:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    Tmp_1931 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_2)];
    assume {:nonnull} Tmp_1931 != 0;
    assume Tmp_1931 > 0;
    pdoExtension_17 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1931)];
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc prevDeviceFlags;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    call {:si_unique_call 1064} sdv_RtlZeroMemory(0, 1160);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_1932;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} Tmp_1932 != 0;
    assume Tmp_1932 > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 1065} KeInitializeEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_17), 0, 0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 1066} KeInitializeEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_17), 0, 0);
    call {:si_unique_call 1067} Tmp_1950 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1950 != 0;
    assume Tmp_1950 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 1068} sdv_KeInitializeSpinLock(Tmp_1950);
    assume {:nonnull} Tmp_1950 != 0;
    assume Tmp_1950 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1936;
    assume {:nonnull} Tmp_1936 != 0;
    assume Tmp_1936 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    havoc Tmp_1951;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1930;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc vslice_dummy_var_4189;
    call {:si_unique_call 1069} WPP_SF_S(Tmp_1930, 109, Tmp_1951, vslice_dummy_var_4189);
    goto L42;

  L42:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    Tmp_1934 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_2)];
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    Tmp_1941 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_2)];
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    assume {:nonnull} Tmp_1941 != 0;
    assume Tmp_1941 > 0;
    call {:si_unique_call 1070} status_56 := Sbp2PreAllocateLists(pdoExtension_17);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_56 >= 0;
    size_1 := 1536;
    call {:si_unique_call 1071} sdv_592 := ExAllocatePoolWithTag(1, size_1, -330079661);
    symlinkBuffer := sdv_592;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} symlinkBuffer == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1946;
    assume {:nonnull} Tmp_1946 != 0;
    assume Tmp_1946 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc Tmp_1933;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1935;
    call {:si_unique_call 1072} WPP_SF_(Tmp_1935, 112, Tmp_1933);
    goto L95;

  L95:
    status_56 := 0;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    Tmp_1944 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_2)];
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    Tmp_1929 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_2)];
    assume {:nonnull} Tmp_1929 != 0;
    assume Tmp_1929 > 0;
    assume {:nonnull} Tmp_1944 != 0;
    assume Tmp_1944 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L105;

  L105:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 1073} InitializeListHead(BusResetEntry__DEVICE_EXTENSION(pdoExtension_17));
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    Tmp_1927 := status_56;
    goto LM2;

  LM2:
    return;

  anon44_Then:
    goto L95;

  anon51_Then:
    goto L95;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon48_Then:
    assume {:partition} symlinkBuffer != 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    Tmp_1939 := strConst__li2bpl31;
    call {:si_unique_call 1074} vslice_dummy_var_146 := RtlStringCbPrintfW(symlinkBuffer, size_1, Tmp_1939);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 1075} RtlInitUnicodeString(UniSymLinkName__DEVICE_EXTENSION(pdoExtension_17), symlinkBuffer);
    call {:si_unique_call 1076} RtlInitUnicodeString(uniDeviceName, symlinkBuffer);
    call {:si_unique_call 1077} status_56 := IoCreateUnprotectedSymbolicLink(0, 0);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_56 < 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1928;
    assume {:nonnull} Tmp_1928 != 0;
    assume Tmp_1928 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_1949;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1943;
    call {:si_unique_call 1078} WPP_SF_D(Tmp_1943, 111, Tmp_1949, status_56);
    goto L95;

  anon42_Then:
    goto L95;

  anon50_Then:
    goto L95;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon38_Then:
    assume {:partition} 0 <= status_56;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1945;
    assume {:nonnull} Tmp_1945 != 0;
    assume Tmp_1945 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    havoc Tmp_1938;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1947;
    call {:si_unique_call 1079} WPP_SF_S(Tmp_1947, 110, Tmp_1938, symlinkBuffer);
    goto L95;

  anon40_Then:
    goto L95;

  anon49_Then:
    goto L95;

  anon39_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon37_Then:
    assume {:partition} 0 > status_56;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_2)] := 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L105;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    goto L42;

  anon46_Then:
    goto L42;

  anon35_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L42;

  anon45_Then:
    goto L15;
}



procedure {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_1952: int);
  free ensures {:va_keep} Tmp_1952 == 0 || Tmp_1952 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_1952: int)
{
  var {:scalar} status_57: int;
  var {:scalar} cchDest_1: int;
  var {:scalar} cchMax_1: int;

  anon0:
    cchDest_1 := actual_cchDest_1;
    cchMax_1 := actual_cchMax_1;
    status_57 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_1 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_1 <= cchMax_1;
    goto L8;

  L8:
    Tmp_1952 := status_57;
    return;

  anon5_Then:
    assume {:partition} cchMax_1 < cchDest_1;
    goto L6;

  L6:
    status_57 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_1 == 0;
    goto L6;
}



procedure {:origName "Sbp2SystemControl"} Sbp2SystemControl(actual_DeviceObject_42: int, actual_Irp_24: int) returns (Tmp_1954: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2SystemControl"} Sbp2SystemControl(actual_DeviceObject_42: int, actual_Irp_24: int) returns (Tmp_1954: int)
{
  var {:pointer} Tmp_1955: int;
  var {:scalar} Tmp_1956: int;
  var {:pointer} Tmp_1957: int;
  var {:scalar} status_58: int;
  var {:pointer} deviceExtension_9: int;
  var {:pointer} DeviceObject_42: int;
  var {:pointer} Irp_24: int;
  var vslice_dummy_var_4190: int;

  anon0:
    DeviceObject_42 := actual_DeviceObject_42;
    Irp_24 := actual_Irp_24;
    call {:si_unique_call 1080} Tmp_1957 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_42 != 0;
    assume DeviceObject_42 > 0;
    deviceExtension_9 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_42)];
    call {:si_unique_call 1081} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1957;
    assume {:nonnull} Tmp_1957 != 0;
    assume Tmp_1957 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    havoc Tmp_1955;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1956;
    call {:si_unique_call 1082} WPP_SF_qq(Tmp_1956, 101, Tmp_1955, deviceExtension_9, Irp_24);
    goto L15;

  L15:
    call {:si_unique_call 1083} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_24);
    assume {:nonnull} deviceExtension_9 != 0;
    assume deviceExtension_9 > 0;
    havoc vslice_dummy_var_4190;
    call {:si_unique_call 1084} Tmp_1954 := sdv_IoCallDriver#1(vslice_dummy_var_4190, Irp_24);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    goto L15;

  anon14_Then:
    goto L15;

  anon12_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L15;

  anon11_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    havoc status_58;
    call {:si_unique_call 1085} sdv_IoCompleteRequest(0, 0);
    Tmp_1954 := status_58;
    goto L1;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var {:scalar} Tmp_1961: int;
  var vslice_dummy_var_147: int;

  anon0:
    call {:si_unique_call 1086} vslice_dummy_var_147 := __HAVOC_malloc(4);
    call {:si_unique_call 1087} Tmp_1961 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1961 != 0;
    assume Tmp_1961 > 0;
    assume Sbp2LogLevel == 15;
    return;
}



procedure {:origName "WPP_SF_qqD"} WPP_SF_qqD(actual_Logger_27: int, actual_id_27: int, actual_TraceGuid_27: int, actual_s_p_e_c_i_a_l_106: int, actual_s_p_e_c_i_a_l_107: int, actual_s_p_e_c_i_a_l_108: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qqD"} WPP_SF_qqD(actual_Logger_27: int, actual_id_27: int, actual_TraceGuid_27: int, actual_s_p_e_c_i_a_l_106: int, actual_s_p_e_c_i_a_l_107: int, actual_s_p_e_c_i_a_l_108: int)
{
  var {:pointer} TraceGuid_27: int;
  var vslice_dummy_var_148: int;

  anon0:
    call {:si_unique_call 1088} vslice_dummy_var_148 := __HAVOC_malloc(4);
    TraceGuid_27 := actual_TraceGuid_27;
    return;
}



procedure {:origName "Sbp2PortForwardIrpSynchronousCompletionRoutine"} Sbp2PortForwardIrpSynchronousCompletionRoutine(actual_DeviceObject_43: int, actual_Irp_25: int, actual_Context_20: int) returns (Tmp_1965: int);
  free ensures {:va_keep} Tmp_1965 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PortForwardIrpSynchronousCompletionRoutine"} Sbp2PortForwardIrpSynchronousCompletionRoutine(actual_DeviceObject_43: int, actual_Irp_25: int, actual_Context_20: int) returns (Tmp_1965: int)
{
  var {:pointer} event_2: int;
  var {:pointer} Context_20: int;
  var vslice_dummy_var_149: int;

  anon0:
    Context_20 := actual_Context_20;
    event_2 := Context_20;
    call {:si_unique_call 1089} vslice_dummy_var_149 := KeSetEvent(event_2, 1, 0);
    Tmp_1965 := -1073741802;
    return;
}



procedure {:origName "RtlStringValidateDestA_sdv_static_function_1"} RtlStringValidateDestA_sdv_static_function_1(actual_pszDest_2: int, actual_cchDest_2: int, actual_cchMax_2: int) returns (Tmp_1967: int);
  free ensures {:va_keep} Tmp_1967 == 0 || Tmp_1967 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlStringValidateDestA_sdv_static_function_1"} RtlStringValidateDestA_sdv_static_function_1(actual_pszDest_2: int, actual_cchDest_2: int, actual_cchMax_2: int) returns (Tmp_1967: int)
{
  var {:scalar} status_59: int;
  var {:scalar} cchDest_2: int;
  var {:scalar} cchMax_2: int;

  anon0:
    cchDest_2 := actual_cchDest_2;
    cchMax_2 := actual_cchMax_2;
    status_59 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_2 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_2 <= cchMax_2;
    goto L8;

  L8:
    Tmp_1967 := status_59;
    return;

  anon5_Then:
    assume {:partition} cchMax_2 < cchDest_2;
    goto L6;

  L6:
    status_59 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_2 == 0;
    goto L6;
}



procedure {:origName "Sbp2DeviceControl"} Sbp2DeviceControl(actual_DeviceObject_44: int, actual_Irp_26: int) returns (Tmp_1969: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2DeviceControl"} Sbp2DeviceControl(actual_DeviceObject_44: int, actual_Irp_26: int) returns (Tmp_1969: int)
{
  var {:pointer} irpStack_18: int;
  var {:pointer} pdoExtension_18: int;
  var {:scalar} Tmp_1970: int;
  var {:pointer} Tmp_1972: int;
  var {:pointer} Tmp_1973: int;
  var {:scalar} status_60: int;
  var {:pointer} DeviceObject_44: int;
  var {:pointer} Irp_26: int;
  var vslice_dummy_var_4191: int;

  anon0:
    DeviceObject_44 := actual_DeviceObject_44;
    Irp_26 := actual_Irp_26;
    call {:si_unique_call 1090} Tmp_1973 := __HAVOC_malloc(4);
    call {:si_unique_call 1091} irpStack_18 := sdv_IoGetCurrentIrpStackLocation(Irp_26);
    assume {:nonnull} DeviceObject_44 != 0;
    assume DeviceObject_44 > 0;
    pdoExtension_18 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_44)];
    call {:si_unique_call 1092} sdv_do_paged_code_check();
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1973;
    assume {:nonnull} Tmp_1973 != 0;
    assume Tmp_1973 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    havoc Tmp_1972;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1970;
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    havoc vslice_dummy_var_4191;
    call {:si_unique_call 1093} WPP_SF_qqD(Tmp_1970, 66, Tmp_1972, pdoExtension_18, Irp_26, vslice_dummy_var_4191);
    goto L56;

  L56:
    status_60 := -1073741637;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    call {:si_unique_call 1094} sdv_IoCompleteRequest(0, 0);
    goto L44;

  L44:
    Tmp_1969 := status_60;
    goto LM2;

  LM2:
    return;

  anon29_Then:
    goto L56;

  anon36_Then:
    goto L56;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon30_Then:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    status_60 := -1073741811;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    call {:si_unique_call 1095} sdv_IoCompleteRequest(0, 0);
    goto L44;

  anon27_Then:
    call {:si_unique_call 1096} status_60 := Sbp2QueryProperty(DeviceObject_44, Irp_26);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    call {:si_unique_call 1097} status_60 := Sbp2HandleApiRequest(pdoExtension_18, Irp_26);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    call {:si_unique_call 1098} status_60 := Sbp2ScsiPassThrough(DeviceObject_44, Irp_26, 1);
    goto L44;

  anon33_Then:
    call {:si_unique_call 1099} status_60 := Sbp2ScsiPassThrough(DeviceObject_44, Irp_26, 0);
    goto L44;

  anon26_Then:
    call {:si_unique_call 1100} status_60 := Sbp2ScsiGetCapabilities(DeviceObject_44, Irp_26);
    goto L44;

  anon25_Then:
    status_60 := -1073741637;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    call {:si_unique_call 1101} sdv_IoCompleteRequest(0, 0);
    goto L44;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int)
{
  var {:pointer} NextEntry: int;
  var {:pointer} ListHead_3: int;
  var {:pointer} Entry_1: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_4192: int;

  anon0:
    call {:si_unique_call 1102} vslice_dummy_var_150 := __HAVOC_malloc(4);
    ListHead_3 := actual_ListHead_3;
    Entry_1 := actual_Entry_1;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    havoc NextEntry;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    havoc vslice_dummy_var_4192;
    call {:si_unique_call 1103} FatalListEntryError(ListHead_3, NextEntry, vslice_dummy_var_4192);
    goto L8;

  L8:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    return;

  anon3_Then:
    goto L8;
}



procedure {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_3: int, actual_uniCompatIds: int) returns (Tmp_1976: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1976 == -1073741670 || Tmp_1976 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_3: int, actual_uniCompatIds: int) returns (Tmp_1976: int)
{
  var {:pointer} Tmp_1977: int;
  var {:scalar} Tmp_1978: int;
  var {:scalar} Tmp_1979: int;
  var {:pointer} Tmp_1980: int;
  var {:pointer} sdv_605: int;
  var {:scalar} Tmp_1981: int;
  var {:scalar} Tmp_1982: int;
  var {:pointer} Tmp_1983: int;
  var {:scalar} Tmp_1985: int;
  var {:scalar} status_61: int;
  var {:pointer} DeviceInfo_3: int;
  var {:pointer} uniCompatIds: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_4193: int;

  anon0:
    DeviceInfo_3 := actual_DeviceInfo_3;
    uniCompatIds := actual_uniCompatIds;
    call {:si_unique_call 1104} Tmp_1977 := __HAVOC_malloc(4);
    call {:si_unique_call 1105} Tmp_1980 := __HAVOC_malloc(56);
    status_61 := 0;
    call {:si_unique_call 1106} sdv_do_paged_code_check();
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1979;
    call {:si_unique_call 1107} sdv_605 := ExAllocatePoolWithTag(1, Tmp_1979, 846226003);
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1977;
    assume {:nonnull} Tmp_1977 != 0;
    assume Tmp_1977 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_1983;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1985;
    call {:si_unique_call 1108} WPP_SF_(Tmp_1985, 106, Tmp_1983);
    goto L30;

  L30:
    status_61 := -1073741670;
    goto L28;

  L28:
    Tmp_1976 := status_61;
    return;

  anon10_Then:
    goto L30;

  anon12_Then:
    goto L30;

  anon9_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L30;

  anon11_Then:
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1981;
    call {:si_unique_call 1109} sdv_RtlZeroMemory(0, Tmp_1981);
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    havoc Tmp_1982;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1978;
    Tmp_1980 := strConst__li2bpl32;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc vslice_dummy_var_4193;
    call {:si_unique_call 1110} vslice_dummy_var_151 := RtlStringCbPrintfW(vslice_dummy_var_4193, Tmp_1978, Tmp_1980);
    goto L28;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int)
{
  var {:pointer} ListHead_4: int;
  var vslice_dummy_var_152: int;

  anon0:
    call {:si_unique_call 1111} vslice_dummy_var_152 := __HAVOC_malloc(4);
    ListHead_4 := actual_ListHead_4;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    return;
}



procedure {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_45: int, actual_Irp_27: int) returns (Tmp_1988: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_45: int, actual_Irp_27: int) returns (Tmp_1988: int)
{
  var {:pointer} newIrpSp: int;
  var {:pointer} newIrp: int;
  var {:scalar} status_62: int;
  var {:scalar} event_3: int;
  var {:pointer} DeviceObject_45: int;
  var {:pointer} Irp_27: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_4194: int;

  anon0:
    call {:si_unique_call 1112} event_3 := __HAVOC_malloc(156);
    DeviceObject_45 := actual_DeviceObject_45;
    Irp_27 := actual_Irp_27;
    status_62 := 0;
    call {:si_unique_call 1113} sdv_do_paged_code_check();
    assume {:nonnull} DeviceObject_45 != 0;
    assume DeviceObject_45 > 0;
    havoc vslice_dummy_var_4194;
    call {:si_unique_call 1114} newIrp := IoAllocateIrp(vslice_dummy_var_4194, 0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} newIrp != 0;
    call {:si_unique_call 1115} vslice_dummy_var_153 := sdv_IoGetCurrentIrpStackLocation(Irp_27);
    call {:si_unique_call 1116} newIrpSp := sdv_IoGetNextIrpStackLocation(newIrp);
    call {:si_unique_call 1117} sdv_RtlCopyMemory(0, 0, 28);
    assume {:nonnull} newIrpSp != 0;
    assume newIrpSp > 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    call {:si_unique_call 1118} KeInitializeEvent(event_3, 0, 0);
    call {:si_unique_call 1119} sdv_IoSetCompletionRoutine(newIrp, li2bplFunctionConstant399, event_3, 1, 1, 1);
    call {:si_unique_call 1120} status_62 := sdv_IoCallDriver#1(DeviceObject_45, newIrp);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} status_62 == 259;
    call {:si_unique_call 1121} vslice_dummy_var_154 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L42;

  L42:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    havoc status_62;
    call {:si_unique_call 1122} IoFreeIrp(0);
    goto L49;

  L49:
    Tmp_1988 := status_62;
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} status_62 != 259;
    goto L42;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} newIrp == 0;
    status_62 := -1073741670;
    goto L49;
}



procedure {:origName "WPP_SF_qDd"} WPP_SF_qDd(actual_Logger_28: int, actual_id_28: int, actual_TraceGuid_28: int, actual_s_p_e_c_i_a_l_109: int, actual_s_p_e_c_i_a_l_110: int, actual_s_p_e_c_i_a_l_111: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDd"} WPP_SF_qDd(actual_Logger_28: int, actual_id_28: int, actual_TraceGuid_28: int, actual_s_p_e_c_i_a_l_109: int, actual_s_p_e_c_i_a_l_110: int, actual_s_p_e_c_i_a_l_111: int)
{
  var {:pointer} TraceGuid_28: int;
  var vslice_dummy_var_155: int;

  anon0:
    call {:si_unique_call 1123} vslice_dummy_var_155 := __HAVOC_malloc(4);
    TraceGuid_28 := actual_TraceGuid_28;
    return;
}



procedure {:origName "WPP_SF_"} WPP_SF_(actual_Logger_29: int, actual_id_29: int, actual_TraceGuid_29: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_"} WPP_SF_(actual_Logger_29: int, actual_id_29: int, actual_TraceGuid_29: int)
{
  var {:pointer} TraceGuid_29: int;
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 1124} vslice_dummy_var_156 := __HAVOC_malloc(4);
    TraceGuid_29 := actual_TraceGuid_29;
    return;
}



procedure {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_4: int, actual_uniDeviceText: int) returns (Tmp_1996: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1996 == -1073741670 || Tmp_1996 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_4: int, actual_uniDeviceText: int) returns (Tmp_1996: int)
{
  var {:scalar} Tmp_1997: int;
  var {:pointer} Tmp_1999: int;
  var {:pointer} Tmp_2000: int;
  var {:scalar} Tmp_2001: int;
  var {:scalar} Tmp_2002: int;
  var {:pointer} sdv_614: int;
  var {:scalar} Tmp_2003: int;
  var {:scalar} Tmp_2004: int;
  var {:pointer} Tmp_2005: int;
  var {:pointer} Tmp_2006: int;
  var {:pointer} Tmp_2007: int;
  var {:scalar} status_63: int;
  var {:pointer} Tmp_2008: int;
  var {:scalar} Tmp_2009: int;
  var {:scalar} TextType: int;
  var {:pointer} DeviceInfo_4: int;
  var {:pointer} uniDeviceText: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_4195: int;
  var vslice_dummy_var_4196: int;
  var vslice_dummy_var_4197: int;

  anon0:
    TextType := actual_TextType;
    DeviceInfo_4 := actual_DeviceInfo_4;
    uniDeviceText := actual_uniDeviceText;
    call {:si_unique_call 1125} Tmp_2000 := __HAVOC_malloc(188);
    call {:si_unique_call 1126} Tmp_2005 := __HAVOC_malloc(120);
    call {:si_unique_call 1127} Tmp_2007 := __HAVOC_malloc(4);
    call {:si_unique_call 1128} Tmp_2008 := __HAVOC_malloc(28);
    status_63 := 0;
    call {:si_unique_call 1129} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1997;
    call {:si_unique_call 1130} sdv_614 := ExAllocatePoolWithTag(1, Tmp_1997, 846226003);
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2007;
    assume {:nonnull} Tmp_2007 != 0;
    assume Tmp_2007 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    havoc Tmp_1999;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2004;
    call {:si_unique_call 1131} WPP_SF_(Tmp_2004, 108, Tmp_1999);
    goto L43;

  L43:
    status_63 := -1073741670;
    goto L26;

  L26:
    Tmp_1996 := status_63;
    return;

  anon22_Then:
    goto L43;

  anon24_Then:
    goto L43;

  anon21_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L43;

  anon23_Then:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_2001;
    call {:si_unique_call 1132} sdv_RtlZeroMemory(0, Tmp_2001);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} TextType != 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} TextType == 1;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_2009;
    Tmp_2008 := strConst__li2bpl34;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_4195;
    call {:si_unique_call 1133} vslice_dummy_var_157 := RtlStringCbPrintfW(vslice_dummy_var_4195, Tmp_2009, Tmp_2008);
    goto L26;

  anon19_Then:
    assume {:partition} TextType != 1;
    goto L26;

  anon17_Then:
    assume {:partition} TextType == 0;
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    havoc Tmp_2006;
    goto L35;

  L35:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_2002;
    Tmp_2005 := strConst__li2bpl35;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_4196;
    call {:si_unique_call 1134} vslice_dummy_var_158 := RtlStringCbPrintfW(vslice_dummy_var_4196, Tmp_2002, Tmp_2005);
    goto L26;

  anon20_Then:
    Tmp_2006 := strConst__li2bpl33;
    goto L35;

  anon18_Then:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_2003;
    Tmp_2000 := strConst__li2bpl36;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_4197;
    call {:si_unique_call 1135} vslice_dummy_var_159 := RtlStringCbPrintfW(vslice_dummy_var_4197, Tmp_2003, Tmp_2000);
    goto L26;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_2010: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_2010: int)
{
  var {:pointer} NextEntry_1: int;
  var {:pointer} Entry_2: int;
  var {:pointer} ListHead_5: int;

  anon0:
    ListHead_5 := actual_ListHead_5;
    call {:si_unique_call 1136} SLIC_RemoveHeadList_entry(strConst__li2bpl2);
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    havoc Entry_2;
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc NextEntry_1;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L9;

  L9:
    call {:si_unique_call 1137} FatalListEntryError(ListHead_5, Entry_2, NextEntry_1);
    goto L12;

  L12:
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    assume {:nonnull} NextEntry_1 != 0;
    assume NextEntry_1 > 0;
    Tmp_2010 := Entry_2;
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L12;

  anon5_Then:
    goto L9;
}



procedure {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_47: int, actual_Irp_28: int) returns (Tmp_2041: int);
  modifies alloc, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_IRBIRP, Mem_T.P_DEVICE_OBJECT, Mem_T.LogStart__DEBUG_LOG, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_47: int, actual_Irp_28: int) returns (Tmp_2041: int)
{
  var {:pointer} deviceRelations: int;
  var {:pointer} irpStack_19: int;
  var {:pointer} Tmp_2042: int;
  var {:scalar} Tmp_2043: int;
  var {:pointer} Tmp_2044: int;
  var {:scalar} Tmp_2045: int;
  var {:pointer} Tmp_2046: int;
  var {:pointer} deviceCapabilities: int;
  var {:pointer} fdoExtension_11: int;
  var {:pointer} sdv_639: int;
  var {:pointer} Tmp_2047: int;
  var {:scalar} status_65: int;
  var {:scalar} event_4: int;
  var {:pointer} DeviceObject_47: int;
  var {:pointer} Irp_28: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_4198: int;
  var vslice_dummy_var_4199: int;
  var vslice_dummy_var_4200: int;
  var vslice_dummy_var_4201: int;

  anon0:
    call {:si_unique_call 1138} event_4 := __HAVOC_malloc(156);
    DeviceObject_47 := actual_DeviceObject_47;
    Irp_28 := actual_Irp_28;
    call {:si_unique_call 1139} Tmp_2046 := __HAVOC_malloc(4);
    call {:si_unique_call 1140} Tmp_2047 := __HAVOC_malloc(4);
    call {:si_unique_call 1141} irpStack_19 := sdv_IoGetCurrentIrpStackLocation(Irp_28);
    assume {:nonnull} DeviceObject_47 != 0;
    assume DeviceObject_47 > 0;
    fdoExtension_11 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_47)];
    call {:si_unique_call 1142} status_65 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_65 >= 0;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_19)] != 0;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_19)] != 2;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_19)] != 7;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_19)] != 9;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_19)] != 20;
    goto L34;

  L34:
    assume {:nonnull} fdoExtension_11 != 0;
    assume fdoExtension_11 > 0;
    call {:si_unique_call 1143} vslice_dummy_var_160 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_11), 0);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1144} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_28);
    assume {:nonnull} fdoExtension_11 != 0;
    assume fdoExtension_11 > 0;
    havoc vslice_dummy_var_4198;
    call {:si_unique_call 1145} status_65 := sdv_IoCallDriver#1(vslice_dummy_var_4198, Irp_28);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    Tmp_2041 := status_65;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_19)] == 20;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto L34;

  anon67_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_19)] == 9;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    havoc deviceCapabilities;
    assume {:nonnull} deviceCapabilities != 0;
    assume deviceCapabilities > 0;
    goto L34;

  anon68_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_19)] == 7;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2047;
    assume {:nonnull} Tmp_2047 != 0;
    assume Tmp_2047 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    havoc Tmp_2042;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2045;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    havoc vslice_dummy_var_4199;
    call {:si_unique_call 1146} WPP_SF_qD(Tmp_2045, 97, Tmp_2042, fdoExtension_11, vslice_dummy_var_4199);
    goto L48;

  L48:
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 1147} sdv_639 := ExAllocatePoolWithTag(1, 48, -230399405);
    deviceRelations := sdv_639;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} deviceRelations == 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2046;
    assume {:nonnull} Tmp_2046 != 0;
    assume Tmp_2046 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_2044;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2043;
    call {:si_unique_call 1148} WPP_SF_q(Tmp_2043, 98, Tmp_2044, fdoExtension_11);
    goto L86;

  L86:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} fdoExtension_11 != 0;
    assume fdoExtension_11 > 0;
    call {:si_unique_call 1149} vslice_dummy_var_165 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_11), 0);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1150} sdv_IoCompleteRequest(0, 0);
    Tmp_2041 := -1073741670;
    goto L1;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto L86;

  anon83_Then:
    goto L86;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L86;

  anon79_Then:
    assume {:partition} deviceRelations != 0;
    call {:si_unique_call 1151} status_65 := Sbp2CreateDeviceRelations(fdoExtension_11, deviceRelations);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_65 >= 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto L34;

  anon81_Then:
    assume {:partition} 0 > status_65;
    call {:si_unique_call 1152} ExFreePoolWithTag(0, -230399405);
    deviceRelations := 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} fdoExtension_11 != 0;
    assume fdoExtension_11 > 0;
    call {:si_unique_call 1153} vslice_dummy_var_164 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_11), 0);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1154} sdv_IoCompleteRequest(0, 0);
    Tmp_2041 := status_65;
    goto L1;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L34;

  anon61_Then:
    goto L48;

  anon76_Then:
    goto L48;

  anon59_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L48;

  anon69_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_19)] == 2;
    call {:si_unique_call 1155} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1156} vslice_dummy_var_161 := Sbp2CleanDeviceExtension#1(DeviceObject_47, 1, 1);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1157} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_28);
    assume {:nonnull} fdoExtension_11 != 0;
    assume fdoExtension_11 > 0;
    havoc vslice_dummy_var_4200;
    call {:si_unique_call 1158} status_65 := sdv_IoCallDriver#1(vslice_dummy_var_4200, Irp_28);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1159} IoDetachDevice(0);
    call {:si_unique_call 1160} IoDeleteDevice(0);
    Tmp_2041 := status_65;
    goto L1;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_19)] == 0;
    call {:si_unique_call 1161} KeInitializeEvent(event_4, 1, 0);
    call {:si_unique_call 1162} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_28);
    call {:si_unique_call 1163} sdv_IoSetCompletionRoutine(Irp_28, li2bplFunctionConstant385, event_4, 1, 1, 1);
    assume {:nonnull} fdoExtension_11 != 0;
    assume fdoExtension_11 > 0;
    havoc vslice_dummy_var_4201;
    call {:si_unique_call 1164} status_65 := sdv_IoCallDriver#1(vslice_dummy_var_4201, Irp_28);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L131;

  L131:
    call {:si_unique_call 1165} vslice_dummy_var_162 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 1166} status_65 := Sbp2StartDevice(DeviceObject_47);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto L138;

  L138:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    assume {:nonnull} fdoExtension_11 != 0;
    assume fdoExtension_11 > 0;
    call {:si_unique_call 1167} vslice_dummy_var_163 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_11), 0);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1168} sdv_IoCompleteRequest(0, 0);
    Tmp_2041 := status_65;
    goto L1;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_65 != 259;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    havoc status_65;
    goto L138;

  anon65_Then:
    assume {:partition} status_65 == 259;
    goto L131;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:partition} 0 > status_65;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    call {:si_unique_call 1169} sdv_IoCompleteRequest(0, 0);
    Tmp_2041 := status_65;
    goto L1;
}



procedure {:origName "WPP_SF_q"} WPP_SF_q(actual_Logger_30: int, actual_id_30: int, actual_TraceGuid_30: int, actual_s_p_e_c_i_a_l_112: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_q"} WPP_SF_q(actual_Logger_30: int, actual_id_30: int, actual_TraceGuid_30: int, actual_s_p_e_c_i_a_l_112: int)
{
  var {:pointer} TraceGuid_30: int;
  var vslice_dummy_var_166: int;

  anon0:
    call {:si_unique_call 1170} vslice_dummy_var_166 := __HAVOC_malloc(4);
    TraceGuid_30 := actual_TraceGuid_30;
    return;
}



procedure {:origName "Sbp2CreateDevObject"} Sbp2CreateDevObject(actual_DriverObject_1: int, actual_Pdo: int) returns (Tmp_2052: int);
  modifies alloc, Mem_T.P_DEVICE_OBJECT, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION;
  free ensures {:va_keep} Tmp_2052 == 0 || Tmp_2052 == -1073741808 || Tmp_2052 == -1073741824 || Tmp_2052 == -1073741771 || Tmp_2052 == -1073741670 || Tmp_2052 == -1073741823 || Tmp_2052 == 5 || Tmp_2052 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CreateDevObject"} Sbp2CreateDevObject(actual_DriverObject_1: int, actual_Pdo: int) returns (Tmp_2052: int)
{
  var {:scalar} Tmp_2053: int;
  var {:scalar} NextId: int;
  var {:pointer} deviceObject_3: int;
  var {:pointer} Tmp_2054: int;
  var {:scalar} uniDeviceName_1: int;
  var {:pointer} Tmp_2055: int;
  var {:pointer} Tmp_2056: int;
  var {:scalar} unicodeDirectoryName: int;
  var {:pointer} buffer_1: int;
  var {:pointer} fdoExtension_12: int;
  var {:pointer} Tmp_2057: int;
  var {:pointer} Tmp_2058: int;
  var {:scalar} status_66: int;
  var {:pointer} Pdo: int;
  var boogieTmp: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;

  anon0:
    call {:si_unique_call 1171} deviceObject_3 := __HAVOC_malloc(4);
    call {:si_unique_call 1172} uniDeviceName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1173} vslice_dummy_var_167 := __HAVOC_malloc(24);
    call {:si_unique_call 1174} unicodeDirectoryName := __HAVOC_malloc(12);
    Pdo := actual_Pdo;
    call {:si_unique_call 1175} Tmp_2055 := __HAVOC_malloc(4);
    call {:si_unique_call 1176} buffer_1 := __HAVOC_malloc(256);
    call {:si_unique_call 1177} Tmp_2057 := __HAVOC_malloc(76);
    call {:si_unique_call 1178} Tmp_2058 := __HAVOC_malloc(52);
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    Mem_T.P_DEVICE_OBJECT[deviceObject_3] := 0;
    NextId := 0;
    call {:si_unique_call 1179} sdv_do_paged_code_check();
    goto L17;

  L17:
    call {:si_unique_call 1180} NextId, Tmp_2057, status_66 := Sbp2CreateDevObject_loop_L17(NextId, deviceObject_3, uniDeviceName_1, buffer_1, Tmp_2057, status_66);
    goto L17_last;

  L17_last:
    Tmp_2057 := strConst__li2bpl37;
    call {:si_unique_call 1197} status_66 := RtlStringCbPrintfW(buffer_1, 128, Tmp_2057);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_66 >= 0;
    call {:si_unique_call 1181} RtlInitUnicodeString(uniDeviceName_1, buffer_1);
    call {:si_unique_call 1182} status_66 := IoCreateDevice(0, 5144, 0, 42, 256, 0, deviceObject_3);
    NextId := NextId + 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_66 != -1073741771;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} status_66 >= 0;
    assume {:nonnull} Mem_T.P_DEVICE_OBJECT[deviceObject_3] != 0;
    assume Mem_T.P_DEVICE_OBJECT[deviceObject_3] > 0;
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    fdoExtension_12 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Mem_T.P_DEVICE_OBJECT[deviceObject_3])];
    call {:si_unique_call 1183} sdv_RtlZeroMemory(0, 1048);
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    call {:si_unique_call 1184} boogieTmp := IoAttachDeviceToDeviceStack(0, Pdo);
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_12)] := 0;
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    call {:si_unique_call 1185} Tmp_2054 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2054 != 0;
    assume Tmp_2054 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    call {:si_unique_call 1186} sdv_KeInitializeSpinLock(Tmp_2054);
    assume {:nonnull} Tmp_2054 != 0;
    assume Tmp_2054 > 0;
    assume {:nonnull} fdoExtension_12 != 0;
    assume fdoExtension_12 > 0;
    call {:si_unique_call 1187} KeInitializeMutex(0, 0);
    Tmp_2058 := strConst__li2bpl38;
    call {:si_unique_call 1188} vslice_dummy_var_169 := RtlStringCbPrintfW(buffer_1, 128, Tmp_2058);
    call {:si_unique_call 1189} RtlInitUnicodeString(unicodeDirectoryName, buffer_1);
    call {:si_unique_call 1190} sdv_InitializeObjectAttributes(0, 0, 592, 0, 0);
    call {:si_unique_call 1191} status_66 := ZwCreateDirectoryObject(0, 983055, 0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} status_66 < 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2055;
    assume {:nonnull} Tmp_2055 != 0;
    assume Tmp_2055 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    havoc Tmp_2056;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2053;
    call {:si_unique_call 1192} WPP_SF_qD(Tmp_2053, 12, Tmp_2056, fdoExtension_12, status_66);
    goto L87;

  L87:
    status_66 := 0;
    goto L77;

  L77:
    call {:si_unique_call 1193} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 1194} sdv_IoInitializeRemoveLock(0, 846226003, 2, 8192);
    assume {:nonnull} Mem_T.P_DEVICE_OBJECT[deviceObject_3] != 0;
    assume Mem_T.P_DEVICE_OBJECT[deviceObject_3] > 0;
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    assume {:nonnull} Mem_T.P_DEVICE_OBJECT[deviceObject_3] != 0;
    assume Mem_T.P_DEVICE_OBJECT[deviceObject_3] > 0;
    assume {:nonnull} deviceObject_3 != 0;
    assume deviceObject_3 > 0;
    Tmp_2052 := 0;
    goto L1;

  L1:
    return;

  anon22_Then:
    goto L87;

  anon24_Then:
    goto L87;

  anon21_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L87;

  anon20_Then:
    assume {:partition} 0 <= status_66;
    call {:si_unique_call 1195} vslice_dummy_var_168 := ZwClose(0);
    goto L77;

  anon19_Then:
    status_66 := -1073741808;
    call {:si_unique_call 1196} IoDeleteDevice(0);
    Tmp_2052 := status_66;
    goto L1;

  anon18_Then:
    assume {:partition} 0 > status_66;
    Tmp_2052 := status_66;
    goto L1;

  anon23_Then:
    assume {:partition} status_66 == -1073741771;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} 0 > status_66;
    Tmp_2052 := status_66;
    goto L1;
}



procedure {:origName "RtlStringCbPrintfA"} RtlStringCbPrintfA(actual_pszDest_3: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_2059: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2059 == 0 || Tmp_2059 == 5 || Tmp_2059 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlStringCbPrintfA"} RtlStringCbPrintfA(actual_pszDest_3: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_2059: int)
{
  var {:scalar} cchDest_3: int;
  var {:pointer} argList_1: int;
  var {:scalar} status_67: int;
  var {:pointer} pszDest_3: int;
  var {:scalar} cbDest: int;
  var {:pointer} pszFormat_1: int;
  var vslice_dummy_var_4202: int;

  anon0:
    pszDest_3 := actual_pszDest_3;
    cbDest := actual_cbDest;
    call {:si_unique_call 1198} pszFormat_1 := __HAVOC_malloc(4);
    cchDest_3 := INTDIV(cbDest, 1);
    call {:si_unique_call 1199} status_67 := RtlStringValidateDestA_sdv_static_function_1(pszDest_3, cchDest_3, -1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_67 >= 0;
    argList_1 := pszFormat_1;
    assume {:nonnull} pszFormat_1 != 0;
    assume pszFormat_1 > 0;
    havoc vslice_dummy_var_4202;
    call {:si_unique_call 1200} status_67 := RtlStringVPrintfWorkerA_sdv_static_function_1(pszDest_3, cchDest_3, 0, vslice_dummy_var_4202, argList_1);
    argList_1 := 0;
    goto L19;

  L19:
    Tmp_2059 := status_67;
    return;

  anon5_Then:
    assume {:partition} 0 > status_67;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_3 > 0;
    assume {:nonnull} pszDest_3 != 0;
    assume pszDest_3 > 0;
    goto L19;

  anon6_Then:
    assume {:partition} 0 >= cchDest_3;
    goto L19;
}



procedure {:origName "_InlineInterlockedCompareExchangePointer"} _InlineInterlockedCompareExchangePointer(actual_Destination_2: int, actual_ExChange: int, actual_Comperand: int) returns (Tmp_2061: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_InlineInterlockedCompareExchangePointer"} _InlineInterlockedCompareExchangePointer(actual_Destination_2: int, actual_ExChange: int, actual_Comperand: int) returns (Tmp_2061: int)
{
  var {:scalar} sdv_651: int;

  anon0:
    Tmp_2061 := sdv_651;
    return;
}



procedure {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_5: int, actual_uniHardwareIds: int) returns (Tmp_2063: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2063 == -1073741670 || Tmp_2063 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_5: int, actual_uniHardwareIds: int) returns (Tmp_2063: int)
{
  var {:pointer} Tmp_2074: int;
  var {:scalar} uniCmdSetId: int;
  var {:pointer} Tmp_2078: int;
  var {:pointer} sdv_668: int;
  var {:scalar} Tmp_2080: int;
  var {:scalar} Tmp_2081: int;
  var {:pointer} Tmp_2082: int;
  var {:scalar} Tmp_2083: int;
  var {:pointer} Tmp_2085: int;
  var {:scalar} Tmp_2089: int;
  var {:scalar} Tmp_2090: int;
  var {:scalar} uniModelId: int;
  var {:scalar} uniLunNumber: int;
  var {:scalar} Tmp_2091: int;
  var {:pointer} Tmp_2093: int;
  var {:scalar} uniRevision: int;
  var {:pointer} sdv_680: int;
  var {:pointer} sdv_682: int;
  var {:pointer} Tmp_2094: int;
  var {:pointer} Tmp_2095: int;
  var {:scalar} Tmp_2096: int;
  var {:scalar} Tmp_2098: int;
  var {:scalar} Tmp_2099: int;
  var {:pointer} sdv_689: int;
  var {:scalar} status_68: int;
  var {:scalar} Tmp_2101: int;
  var {:scalar} Tmp_2104: int;
  var {:scalar} Tmp_2106: int;
  var {:scalar} Tmp_2107: int;
  var {:pointer} DeviceInfo_5: int;
  var {:pointer} uniHardwareIds: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_4203: int;

  anon0:
    call {:si_unique_call 1201} uniCmdSetId := __HAVOC_malloc(12);
    call {:si_unique_call 1202} uniModelId := __HAVOC_malloc(12);
    call {:si_unique_call 1203} uniLunNumber := __HAVOC_malloc(12);
    call {:si_unique_call 1204} uniRevision := __HAVOC_malloc(12);
    DeviceInfo_5 := actual_DeviceInfo_5;
    uniHardwareIds := actual_uniHardwareIds;
    call {:si_unique_call 1205} vslice_dummy_var_186 := __HAVOC_malloc(116);
    call {:si_unique_call 1206} vslice_dummy_var_187 := __HAVOC_malloc(16);
    call {:si_unique_call 1207} vslice_dummy_var_188 := __HAVOC_malloc(8);
    call {:si_unique_call 1208} vslice_dummy_var_189 := __HAVOC_malloc(116);
    call {:si_unique_call 1209} vslice_dummy_var_190 := __HAVOC_malloc(116);
    call {:si_unique_call 1210} vslice_dummy_var_191 := __HAVOC_malloc(24);
    call {:si_unique_call 1211} vslice_dummy_var_192 := __HAVOC_malloc(20);
    call {:si_unique_call 1212} vslice_dummy_var_193 := __HAVOC_malloc(36);
    call {:si_unique_call 1213} vslice_dummy_var_194 := __HAVOC_malloc(8);
    call {:si_unique_call 1214} Tmp_2074 := __HAVOC_malloc(4);
    call {:si_unique_call 1215} vslice_dummy_var_195 := __HAVOC_malloc(16);
    call {:si_unique_call 1216} vslice_dummy_var_196 := __HAVOC_malloc(36);
    call {:si_unique_call 1217} vslice_dummy_var_197 := __HAVOC_malloc(24);
    call {:si_unique_call 1218} Tmp_2078 := __HAVOC_malloc(56);
    call {:si_unique_call 1219} vslice_dummy_var_198 := __HAVOC_malloc(8);
    call {:si_unique_call 1220} Tmp_2082 := __HAVOC_malloc(4);
    call {:si_unique_call 1221} vslice_dummy_var_199 := __HAVOC_malloc(24);
    call {:si_unique_call 1222} vslice_dummy_var_200 := __HAVOC_malloc(8);
    call {:si_unique_call 1223} vslice_dummy_var_201 := __HAVOC_malloc(8);
    call {:si_unique_call 1224} vslice_dummy_var_202 := __HAVOC_malloc(24);
    call {:si_unique_call 1225} vslice_dummy_var_203 := __HAVOC_malloc(8);
    call {:si_unique_call 1226} Tmp_2094 := __HAVOC_malloc(4);
    call {:si_unique_call 1227} vslice_dummy_var_204 := __HAVOC_malloc(8);
    call {:si_unique_call 1228} vslice_dummy_var_205 := __HAVOC_malloc(8);
    call {:si_unique_call 1229} vslice_dummy_var_206 := __HAVOC_malloc(8);
    call {:si_unique_call 1230} vslice_dummy_var_207 := __HAVOC_malloc(24);
    call {:si_unique_call 1231} vslice_dummy_var_208 := __HAVOC_malloc(116);
    status_68 := 0;
    call {:si_unique_call 1232} sdv_do_paged_code_check();
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_2091;
    call {:si_unique_call 1233} sdv_668 := ExAllocatePoolWithTag(1, Tmp_2091, 846226003);
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2082;
    assume {:nonnull} Tmp_2082 != 0;
    assume Tmp_2082 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    havoc Tmp_2085;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2104;
    call {:si_unique_call 1234} WPP_SF_(Tmp_2104, 103, Tmp_2085);
    goto L252;

  L252:
    status_68 := -1073741670;
    goto L218;

  L218:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    call {:si_unique_call 1235} sdv_ExFreePool(0);
    goto L219;

  L219:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1236} sdv_ExFreePool(0);
    goto L223;

  L223:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 1237} sdv_ExFreePool(0);
    goto L227;

  L227:
    Tmp_2063 := status_68;
    return;

  anon55_Then:
    goto L227;

  anon54_Then:
    goto L223;

  anon53_Then:
    goto L219;

  anon61_Then:
    goto L252;

  anon69_Then:
    goto L252;

  anon60_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L252;

  anon62_Then:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_2106;
    call {:si_unique_call 1238} sdv_RtlZeroMemory(0, Tmp_2106);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc Tmp_2096;
    call {:si_unique_call 1239} vslice_dummy_var_209 := RtlIntegerToUnicodeString(Tmp_2096, 16, 0);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    havoc Tmp_2090;
    call {:si_unique_call 1240} sdv_680 := ExAllocatePoolWithTag(1, Tmp_2090, 846226003);
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    havoc Tmp_2107;
    call {:si_unique_call 1241} sdv_RtlZeroMemory(0, Tmp_2107);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc Tmp_2101;
    call {:si_unique_call 1242} vslice_dummy_var_210 := RtlIntegerToUnicodeString(Tmp_2101, 16, 0);
    goto L35;

  L35:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_2081;
    call {:si_unique_call 1243} sdv_682 := ExAllocatePoolWithTag(1, Tmp_2081, 846226003);
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2094;
    assume {:nonnull} Tmp_2094 != 0;
    assume Tmp_2094 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_2095;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2098;
    call {:si_unique_call 1244} WPP_SF_(Tmp_2098, 104, Tmp_2095);
    goto L242;

  L242:
    status_68 := -1073741670;
    goto L218;

  anon59_Then:
    goto L242;

  anon68_Then:
    goto L242;

  anon58_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L242;

  anon64_Then:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_2080;
    call {:si_unique_call 1245} sdv_RtlZeroMemory(0, Tmp_2080);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc vslice_dummy_var_4203;
    call {:si_unique_call 1246} vslice_dummy_var_170 := RtlIntegerToUnicodeString(vslice_dummy_var_4203, 16, 0);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    goto L76;

  L76:
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_2089;
    call {:si_unique_call 1247} sdv_689 := ExAllocatePoolWithTag(1, Tmp_2089, 846226003);
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2074;
    assume {:nonnull} Tmp_2074 != 0;
    assume Tmp_2074 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_2093;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2083;
    call {:si_unique_call 1248} WPP_SF_(Tmp_2083, 105, Tmp_2093);
    goto L232;

  L232:
    status_68 := -1073741670;
    goto L218;

  anon57_Then:
    goto L232;

  anon67_Then:
    goto L232;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L232;

  anon65_Then:
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_2099;
    call {:si_unique_call 1249} sdv_RtlZeroMemory(0, Tmp_2099);
    call {:si_unique_call 1250} vslice_dummy_var_211 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 1251} vslice_dummy_var_171 := corral_nondet();
    call {:si_unique_call 1252} vslice_dummy_var_212 := corral_nondet();
    call {:si_unique_call 1253} vslice_dummy_var_172 := corral_nondet();
    goto L107;

  L107:
    call {:si_unique_call 1254} vslice_dummy_var_213 := corral_nondet();
    call {:si_unique_call 1255} vslice_dummy_var_214 := corral_nondet();
    call {:si_unique_call 1256} vslice_dummy_var_173 := corral_nondet();
    call {:si_unique_call 1257} vslice_dummy_var_215 := corral_nondet();
    call {:si_unique_call 1258} vslice_dummy_var_174 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1259} vslice_dummy_var_216 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1260} vslice_dummy_var_175 := corral_nondet();
    call {:si_unique_call 1261} vslice_dummy_var_217 := corral_nondet();
    call {:si_unique_call 1262} vslice_dummy_var_176 := corral_nondet();
    goto L139;

  L139:
    call {:si_unique_call 1263} vslice_dummy_var_218 := corral_nondet();
    call {:si_unique_call 1264} vslice_dummy_var_219 := corral_nondet();
    call {:si_unique_call 1265} vslice_dummy_var_177 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 1266} vslice_dummy_var_220 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 1267} vslice_dummy_var_178 := corral_nondet();
    call {:si_unique_call 1268} vslice_dummy_var_221 := corral_nondet();
    call {:si_unique_call 1269} vslice_dummy_var_179 := corral_nondet();
    goto L169;

  L169:
    call {:si_unique_call 1270} vslice_dummy_var_222 := corral_nondet();
    call {:si_unique_call 1271} vslice_dummy_var_223 := corral_nondet();
    call {:si_unique_call 1272} vslice_dummy_var_180 := corral_nondet();
    call {:si_unique_call 1273} vslice_dummy_var_224 := corral_nondet();
    call {:si_unique_call 1274} vslice_dummy_var_181 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    goto L150;

  L150:
    call {:si_unique_call 1275} vslice_dummy_var_225 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 1276} vslice_dummy_var_182 := corral_nondet();
    call {:si_unique_call 1277} vslice_dummy_var_226 := corral_nondet();
    call {:si_unique_call 1278} vslice_dummy_var_183 := corral_nondet();
    goto L198;

  L198:
    call {:si_unique_call 1279} vslice_dummy_var_227 := corral_nondet();
    call {:si_unique_call 1280} vslice_dummy_var_228 := corral_nondet();
    call {:si_unique_call 1281} vslice_dummy_var_184 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1282} vslice_dummy_var_229 := corral_nondet();
    call {:si_unique_call 1283} vslice_dummy_var_185 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1284} vslice_dummy_var_230 := corral_nondet();
    goto L218;

  anon52_Then:
    call {:si_unique_call 1285} vslice_dummy_var_231 := corral_nondet();
    goto L198;

  anon51_Then:
    call {:si_unique_call 1286} vslice_dummy_var_232 := corral_nondet();
    goto L169;

  anon66_Then:
    goto L150;

  anon50_Then:
    call {:si_unique_call 1287} vslice_dummy_var_233 := corral_nondet();
    goto L139;

  anon49_Then:
    call {:si_unique_call 1288} vslice_dummy_var_234 := corral_nondet();
    goto L107;

  anon48_Then:
    Tmp_2078 := strConst__li2bpl33;
    call {:si_unique_call 1289} RtlInitUnicodeString(uniModelId, Tmp_2078);
    goto L76;

  anon63_Then:
    goto L35;

  anon47_Then:
    goto L35;
}



procedure {:origName "Sbp2AddDevice"} Sbp2AddDevice(actual_DriverObject_2: int, actual_Pdo_1: int) returns (Tmp_2108: int);
  modifies alloc, Mem_T.P_DEVICE_OBJECT, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION;
  free ensures {:va_keep} Tmp_2108 == 0 || Tmp_2108 == -1073741808 || Tmp_2108 == -1073741824 || Tmp_2108 == -1073741771 || Tmp_2108 == -1073741670 || Tmp_2108 == -1073741823 || Tmp_2108 == 5 || Tmp_2108 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AddDevice"} Sbp2AddDevice(actual_DriverObject_2: int, actual_Pdo_1: int) returns (Tmp_2108: int)
{
  var {:pointer} Tmp_2109: int;
  var {:scalar} Tmp_2110: int;
  var {:pointer} Tmp_2111: int;
  var {:pointer} Tmp_2113: int;
  var {:scalar} Tmp_2114: int;
  var {:scalar} status_69: int;
  var {:pointer} Tmp_2115: int;
  var {:pointer} DriverObject_2: int;
  var {:pointer} Pdo_1: int;

  anon0:
    DriverObject_2 := actual_DriverObject_2;
    Pdo_1 := actual_Pdo_1;
    call {:si_unique_call 1290} Tmp_2111 := __HAVOC_malloc(4);
    call {:si_unique_call 1291} Tmp_2113 := __HAVOC_malloc(4);
    call {:si_unique_call 1292} sdv_do_paged_code_check();
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2113;
    assume {:nonnull} Tmp_2113 != 0;
    assume Tmp_2113 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    havoc Tmp_2115;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2114;
    call {:si_unique_call 1293} WPP_SF_qq(Tmp_2114, 10, Tmp_2115, DriverObject_2, Pdo_1);
    goto L11;

  L11:
    call {:si_unique_call 1294} status_69 := Sbp2CreateDevObject(DriverObject_2, Pdo_1);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_69 < 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2111;
    assume {:nonnull} Tmp_2111 != 0;
    assume Tmp_2111 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_2109;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2110;
    call {:si_unique_call 1295} WPP_SF_qD(Tmp_2110, 11, Tmp_2109, Pdo_1, status_69);
    goto L26;

  L26:
    Tmp_2108 := status_69;
    return;

  anon19_Then:
    goto L26;

  anon21_Then:
    goto L26;

  anon18_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L26;

  anon17_Then:
    assume {:partition} 0 <= status_69;
    goto L26;

  anon16_Then:
    goto L11;

  anon20_Then:
    goto L11;

  anon15_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L11;
}



procedure {:origName "FatalListEntryError"} FatalListEntryError(actual_p1_1: int, actual_p2_1: int, actual_p3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "FatalListEntryError"} FatalListEntryError(actual_p1_1: int, actual_p2_1: int, actual_p3: int)
{
  var vslice_dummy_var_235: int;

  anon0:
    call {:si_unique_call 1296} vslice_dummy_var_235 := __HAVOC_malloc(4);
    call {:si_unique_call 1297} RtlFailFast(3);
    return;
}



procedure {:origName "Sbp2CreateNiveusId"} Sbp2CreateNiveusId(actual_devInfo_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CreateNiveusId"} Sbp2CreateNiveusId(actual_devInfo_1: int)
{
  var {:pointer} Tmp_2243: int;
  var {:scalar} Tmp_2244: int;
  var {:scalar} sdv_715: int;
  var {:scalar} sdv_716: int;
  var {:scalar} uniTemp_1: int;
  var {:pointer} devInfo_1: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;

  anon0:
    call {:si_unique_call 1298} uniTemp_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1299} vslice_dummy_var_236 := __HAVOC_malloc(4);
    devInfo_1 := actual_devInfo_1;
    call {:si_unique_call 1300} Tmp_2243 := __HAVOC_malloc(28);
    call {:si_unique_call 1301} vslice_dummy_var_237 := __HAVOC_malloc(36);
    call {:si_unique_call 1302} vslice_dummy_var_238 := __HAVOC_malloc(20);
    Tmp_2243 := strConst__li2bpl45;
    call {:si_unique_call 1303} RtlInitUnicodeString(uniTemp_1, Tmp_2243);
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1304} sdv_715 := corral_nondet();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_715 != 0;
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    call {:si_unique_call 1305} sdv_716 := RtlCompareMemory(0, 0, 8);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_716 == 8;
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    havoc Tmp_2244;
    call {:si_unique_call 1306} sdv_RtlCopyMemory(0, 0, Tmp_2244);
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L1;

  anon14_Then:
    goto L1;

  anon13_Then:
    assume {:partition} sdv_716 != 8;
    goto L1;

  anon12_Then:
    assume {:partition} sdv_715 == 0;
    goto L1;

  anon11_Then:
    goto L1;
}



procedure {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_49: int, actual_Irp_29: int) returns (Tmp_2250: int);
  modifies alloc, t, LockDepth, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.LogStart__DEBUG_LOG;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 1 ==> t != 0;
  free ensures {:va_keep} old(t) == 0 ==> t != 0;
  free ensures {:va_keep} old(t) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} t == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_49: int, actual_Irp_29: int) returns (Tmp_2250: int)
{
  var {:scalar} uniRetString: int;
  var {:pointer} Tmp_2251: int;
  var {:pointer} Tmp_2252: int;
  var {:pointer} Tmp_2253: int;
  var {:scalar} Tmp_2254: int;
  var {:pointer} Tmp_2255: int;
  var {:scalar} Tmp_2256: int;
  var {:pointer} DevInfo: int;
  var {:scalar} Tmp_2257: int;
  var {:scalar} Tmp_2258: int;
  var {:pointer} Tmp_2259: int;
  var {:scalar} Tmp_2260: int;
  var {:pointer} sdv_719: int;
  var {:pointer} Tmp_2261: int;
  var {:pointer} Tmp_2262: int;
  var {:pointer} Tmp_2263: int;
  var {:scalar} Tmp_2264: int;
  var {:pointer} Tmp_2265: int;
  var {:pointer} Tmp_2266: int;
  var {:pointer} Tmp_2267: int;
  var {:pointer} Tmp_2268: int;
  var {:pointer} Tmp_2269: int;
  var {:scalar} Tmp_2270: int;
  var {:pointer} Tmp_2271: int;
  var {:pointer} Tmp_2272: int;
  var {:scalar} Tmp_2273: int;
  var {:pointer} Tmp_2275: int;
  var {:scalar} Tmp_2276: int;
  var {:scalar} Tmp_2277: int;
  var {:pointer} Tmp_2278: int;
  var {:scalar} Tmp_2279: int;
  var {:scalar} i_7: int;
  var {:pointer} Tmp_2280: int;
  var {:pointer} DeviceInfo_6: int;
  var {:pointer} irpStack_20: int;
  var {:pointer} Tmp_2281: int;
  var {:pointer} Tmp_2282: int;
  var {:scalar} Tmp_2283: int;
  var {:pointer} Tmp_2284: int;
  var {:scalar} Tmp_2285: int;
  var {:pointer} Tmp_2286: int;
  var {:scalar} Tmp_2287: int;
  var {:pointer} Tmp_2288: int;
  var {:pointer} Tmp_2289: int;
  var {:scalar} reportedMissing: int;
  var {:pointer} Tmp_2290: int;
  var {:scalar} sdv_725: int;
  var {:pointer} Tmp_2291: int;
  var {:pointer} Tmp_2292: int;
  var {:scalar} Tmp_2293: int;
  var {:pointer} Tmp_2294: int;
  var {:pointer} Tmp_2295: int;
  var {:pointer} Tmp_2296: int;
  var {:pointer} fdoExtension_14: int;
  var {:pointer} Tmp_2297: int;
  var {:pointer} Tmp_2298: int;
  var {:scalar} Tmp_2299: int;
  var {:pointer} Tmp_2300: int;
  var {:pointer} Tmp_2301: int;
  var {:scalar} status_72: int;
  var {:pointer} sdv_729: int;
  var {:pointer} Tmp_2302: int;
  var {:pointer} Tmp_2303: int;
  var {:pointer} Tmp_2305: int;
  var {:pointer} Tmp_2307: int;
  var {:pointer} Tmp_2308: int;
  var {:pointer} Tmp_2309: int;
  var {:pointer} Tmp_2310: int;
  var {:scalar} Tmp_2311: int;
  var {:pointer} Tmp_2312: int;
  var {:pointer} count: int;
  var {:pointer} Tmp_2313: int;
  var {:pointer} Tmp_2314: int;
  var {:pointer} Tmp_2315: int;
  var {:pointer} pdoExtension_21: int;
  var {:pointer} Tmp_2316: int;
  var {:scalar} Tmp_2317: int;
  var {:scalar} Tmp_2318: int;
  var {:pointer} Tmp_2319: int;
  var {:pointer} Tmp_2320: int;
  var {:pointer} Tmp_2321: int;
  var {:pointer} Tmp_2322: int;
  var {:pointer} Tmp_2323: int;
  var {:pointer} Tmp_2324: int;
  var {:pointer} Tmp_2325: int;
  var {:pointer} Tmp_2326: int;
  var {:scalar} Tmp_2327: int;
  var {:pointer} Tmp_2328: int;
  var {:pointer} irp_10: int;
  var {:scalar} Tmp_2330: int;
  var {:pointer} Tmp_2331: int;
  var {:scalar} Tmp_2332: int;
  var {:pointer} Tmp_2333: int;
  var {:scalar} Tmp_2334: int;
  var {:pointer} Tmp_2336: int;
  var {:pointer} Tmp_2337: int;
  var {:pointer} Tmp_2338: int;
  var {:pointer} Tmp_2340: int;
  var {:pointer} deviceRelations_1: int;
  var {:pointer} Tmp_2341: int;
  var {:pointer} Tmp_2342: int;
  var {:pointer} Tmp_2343: int;
  var {:scalar} Tmp_2344: int;
  var {:scalar} Tmp_2345: int;
  var {:scalar} Tmp_2346: int;
  var {:pointer} Tmp_2347: int;
  var {:pointer} Tmp_2348: int;
  var {:scalar} Tmp_2349: int;
  var {:pointer} Tmp_2350: int;
  var {:pointer} Tmp_2351: int;
  var {:pointer} Tmp_2352: int;
  var {:pointer} Tmp_2353: int;
  var {:pointer} Tmp_2354: int;
  var {:scalar} Tmp_2355: int;
  var {:pointer} deviceCapabilities_1: int;
  var {:pointer} Tmp_2356: int;
  var {:pointer} Tmp_2357: int;
  var {:pointer} Tmp_2358: int;
  var {:pointer} Tmp_2359: int;
  var {:scalar} Tmp_2360: int;
  var {:scalar} cIrql_12: int;
  var {:pointer} Tmp_2361: int;
  var {:pointer} Tmp_2362: int;
  var {:pointer} Tmp_2363: int;
  var {:scalar} reported: int;
  var {:pointer} Tmp_2364: int;
  var {:pointer} Tmp_2365: int;
  var {:pointer} Tmp_2366: int;
  var {:pointer} DeviceObject_49: int;
  var {:pointer} Irp_29: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_4204: int;
  var vslice_dummy_var_4205: int;
  var vslice_dummy_var_4206: int;
  var vslice_dummy_var_4207: int;
  var vslice_dummy_var_4208: int;
  var vslice_dummy_var_4209: int;
  var vslice_dummy_var_4210: int;
  var vslice_dummy_var_4211: int;
  var vslice_dummy_var_4212: int;
  var vslice_dummy_var_4213: int;
  var vslice_dummy_var_4214: int;
  var vslice_dummy_var_4215: int;
  var vslice_dummy_var_4216: int;
  var vslice_dummy_var_4217: int;

  anon0:
    call {:si_unique_call 1307} uniRetString := __HAVOC_malloc(12);
    DeviceObject_49 := actual_DeviceObject_49;
    Irp_29 := actual_Irp_29;
    call {:si_unique_call 1308} Tmp_2251 := __HAVOC_malloc(2680);
    call {:si_unique_call 1309} Tmp_2255 := __HAVOC_malloc(4);
    call {:si_unique_call 1310} Tmp_2261 := __HAVOC_malloc(4);
    call {:si_unique_call 1311} Tmp_2262 := __HAVOC_malloc(28);
    call {:si_unique_call 1312} Tmp_2263 := __HAVOC_malloc(4);
    call {:si_unique_call 1313} Tmp_2266 := __HAVOC_malloc(4);
    call {:si_unique_call 1314} Tmp_2268 := __HAVOC_malloc(4);
    call {:si_unique_call 1315} Tmp_2272 := __HAVOC_malloc(4);
    call {:si_unique_call 1316} Tmp_2280 := __HAVOC_malloc(2680);
    call {:si_unique_call 1317} Tmp_2281 := __HAVOC_malloc(4);
    call {:si_unique_call 1318} Tmp_2289 := __HAVOC_malloc(4);
    call {:si_unique_call 1319} Tmp_2290 := __HAVOC_malloc(4);
    call {:si_unique_call 1320} Tmp_2294 := __HAVOC_malloc(2680);
    call {:si_unique_call 1321} Tmp_2300 := __HAVOC_malloc(4);
    call {:si_unique_call 1322} Tmp_2303 := __HAVOC_malloc(4);
    call {:si_unique_call 1323} Tmp_2308 := __HAVOC_malloc(4);
    call {:si_unique_call 1324} Tmp_2310 := __HAVOC_malloc(4);
    call {:si_unique_call 1325} Tmp_2312 := __HAVOC_malloc(4);
    call {:si_unique_call 1326} Tmp_2314 := __HAVOC_malloc(28);
    call {:si_unique_call 1327} Tmp_2316 := __HAVOC_malloc(4);
    call {:si_unique_call 1328} Tmp_2319 := __HAVOC_malloc(2680);
    call {:si_unique_call 1329} Tmp_2320 := __HAVOC_malloc(4);
    call {:si_unique_call 1330} Tmp_2321 := __HAVOC_malloc(4);
    call {:si_unique_call 1331} Tmp_2328 := __HAVOC_malloc(4);
    call {:si_unique_call 1332} Tmp_2331 := __HAVOC_malloc(4);
    call {:si_unique_call 1333} Tmp_2333 := __HAVOC_malloc(4);
    call {:si_unique_call 1334} Tmp_2336 := __HAVOC_malloc(4);
    call {:si_unique_call 1335} Tmp_2340 := __HAVOC_malloc(4);
    call {:si_unique_call 1336} Tmp_2342 := __HAVOC_malloc(4);
    call {:si_unique_call 1337} Tmp_2348 := __HAVOC_malloc(4);
    call {:si_unique_call 1338} Tmp_2350 := __HAVOC_malloc(28);
    call {:si_unique_call 1339} Tmp_2357 := __HAVOC_malloc(28);
    call {:si_unique_call 1340} Tmp_2362 := __HAVOC_malloc(28);
    call {:si_unique_call 1341} SLIC_Sbp2PnpDeviceControl_entry(0, Irp_29);
    assume {:nonnull} DeviceObject_49 != 0;
    assume DeviceObject_49 > 0;
    pdoExtension_21 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_49)];
    call {:si_unique_call 1342} irpStack_20 := sdv_IoGetCurrentIrpStackLocation(Irp_29);
    DevInfo := 0;
    assume {:nonnull} DeviceObject_49 != 0;
    assume DeviceObject_49 > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1343} sdv_IoCompleteRequest(0, 0);
    Tmp_2250 := -1073741810;
    goto L1;

  L1:
    call {:si_unique_call 1344} SLIC_Sbp2PnpDeviceControl_exit(strConst__li2bpl2, Irp_29);
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon413_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon412_Then:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    call {:si_unique_call 1345} status_72 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume {:partition} status_72 >= 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc DeviceInfo_6;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    Tmp_2277 := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)];
    call {:si_unique_call 1346} Sbp2AddLog(pdoExtension_21, 1, -798076866, Tmp_2277, 0);
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 0;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 1;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 2;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 3;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 4;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 5;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 6;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 7;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 9;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 11;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 12;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 19;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 20;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 22;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 23;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 135;
    status_72 := 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  L74:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1347} vslice_dummy_var_239 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_21), 0);
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1348} sdv_IoCompleteRequest(0, 0);
    Tmp_2250 := status_72;
    goto L1;

  anon416_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon391_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] != 135;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    goto L74;

  anon392_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 23;
    reportedMissing := 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2282;
    assume {:nonnull} Tmp_2282 != 0;
    assume Tmp_2282 > 0;
    fdoExtension_14 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2282)];
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc vslice_dummy_var_4204;
    call {:si_unique_call 1349} Sbp2AddLog(pdoExtension_21, 1, -747278254, fdoExtension_14, vslice_dummy_var_4204);
    call {:si_unique_call 1350} Tmp_2323 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    call {:si_unique_call 1351} sdv_KeAcquireSpinLock(0, Tmp_2323);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    havoc cIrql_12;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    reportedMissing := 0;
    goto L94;

  L94:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1352} vslice_dummy_var_254 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_21), 0, 0);
    call {:si_unique_call 1353} sdv_KeReleaseSpinLock(0, cIrql_12);
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:partition} reportedMissing != 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2305;
    assume {:nonnull} Tmp_2305 != 0;
    assume Tmp_2305 > 0;
    call {:si_unique_call 1354} vslice_dummy_var_255 := Sbp2EnableBusResetNotification#1(Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2305)], 0);
    goto anon469_Then, anon469_Else;

  anon469_Else:
    assume {:partition} yogi_error != 1;
    goto L103;

  L103:
    call {:si_unique_call 1355} Tmp_2323 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    call {:si_unique_call 1356} sdv_KeRaiseIrql(2, Tmp_2323);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    havoc cIrql_12;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1357} sdv_719 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_21), 0);
    irp_10 := sdv_719;
    goto anon470_Then, anon470_Else;

  anon470_Else:
    assume {:partition} irp_10 != 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc vslice_dummy_var_4205;
    call {:si_unique_call 1358} Sbp2StartIo#1(vslice_dummy_var_4205, irp_10);
    goto anon471_Then, anon471_Else;

  anon471_Else:
    assume {:partition} yogi_error != 1;
    goto L114;

  L114:
    call {:si_unique_call 1359} Sbp2StartNextPacketByKey#1(DeviceObject_49, 0);
    goto anon472_Then, anon472_Else;

  anon472_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1360} sdv_KeLowerIrql(cIrql_12);
    call {:si_unique_call 1361} vslice_dummy_var_240 := Sbp2CleanDeviceExtension#1(DeviceObject_49, 1, 0);
    goto anon473_Then, anon473_Else;

  anon473_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon473_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon472_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon471_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon470_Then:
    assume {:partition} irp_10 == 0;
    goto L114;

  anon469_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon325_Then:
    assume {:partition} reportedMissing == 0;
    goto L103;

  anon324_Then:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon474_Then, anon474_Else;

  anon474_Else:
    reportedMissing := 1;
    goto L94;

  anon474_Then:
    goto L94;

  anon393_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 22;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    count := HibernateCount__DEVICE_EXTENSION(pdoExtension_21);
    goto L134;

  L134:
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:partition} count != 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc vslice_dummy_var_4206;
    call {:si_unique_call 1362} status_72 := Sbp2ForwardIrpSynchronous(vslice_dummy_var_4206, Irp_29);
    goto anon468_Then, anon468_Else;

  anon468_Else:
    assume {:partition} yogi_error != 1;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    assume {:partition} status_72 >= 0;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc vslice_dummy_var_4207;
    call {:si_unique_call 1363} sdv_IoAdjustPagingPathCount(0, vslice_dummy_var_4207);
    goto L141;

  L141:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon327_Then:
    assume {:partition} 0 > status_72;
    goto L141;

  anon468_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon326_Then:
    assume {:partition} count == 0;
    status_72 := -1073741637;
    goto L141;

  anon411_Then:
    count := 0;
    goto L134;

  anon323_Then:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    count := PagingPathCount__DEVICE_EXTENSION(pdoExtension_21);
    goto L134;

  anon394_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 20;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2340;
    assume {:nonnull} Tmp_2340 != 0;
    assume Tmp_2340 > 0;
    goto anon465_Then, anon465_Else;

  anon465_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc Tmp_2298;
    havoc Tmp_2267;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2276;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc vslice_dummy_var_4208;
    call {:si_unique_call 1364} WPP_SF_qqD(Tmp_2276, 90, Tmp_2267, pdoExtension_21, Tmp_2298, vslice_dummy_var_4208);
    goto L153;

  L153:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    goto L74;

  anon330_Then:
    goto L153;

  anon465_Then:
    goto L153;

  anon329_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L153;

  anon322_Then:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    call {:si_unique_call 1365} Tmp_2323 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    call {:si_unique_call 1366} sdv_KeAcquireSpinLock(0, Tmp_2323);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    havoc cIrql_12;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1367} sdv_KeReleaseSpinLock(0, cIrql_12);
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto anon466_Then, anon466_Else;

  anon466_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2308;
    assume {:nonnull} Tmp_2308 != 0;
    assume Tmp_2308 > 0;
    goto anon467_Then, anon467_Else;

  anon467_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc Tmp_2292;
    havoc Tmp_2284;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2285;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc vslice_dummy_var_4209;
    call {:si_unique_call 1368} WPP_SF_qqD(Tmp_2285, 91, Tmp_2284, pdoExtension_21, Tmp_2292, vslice_dummy_var_4209);
    goto L153;

  anon332_Then:
    goto L153;

  anon467_Then:
    goto L153;

  anon466_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L153;

  anon331_Then:
    goto L153;

  anon328_Then:
    goto L153;

  anon395_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 19;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2333;
    assume {:nonnull} Tmp_2333 != 0;
    assume Tmp_2333 > 0;
    goto anon446_Then, anon446_Else;

  anon446_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    havoc Tmp_2265;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2256;
    call {:si_unique_call 1369} WPP_SF_(Tmp_2256, 76, Tmp_2265);
    goto L186;

  L186:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon447_Then, anon447_Else;

  anon447_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2268;
    assume {:nonnull} Tmp_2268 != 0;
    assume Tmp_2268 > 0;
    goto anon464_Then, anon464_Else;

  anon464_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    havoc Tmp_2324;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2334;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc vslice_dummy_var_4210;
    call {:si_unique_call 1370} WPP_SF_qD(Tmp_2334, 89, Tmp_2324, pdoExtension_21, vslice_dummy_var_4210);
    goto L361;

  L361:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    goto L239;

  L239:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon360_Then:
    goto L361;

  anon464_Then:
    goto L361;

  anon359_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L361;

  anon408_Then:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2261;
    assume {:nonnull} Tmp_2261 != 0;
    assume Tmp_2261 > 0;
    goto anon460_Then, anon460_Else;

  anon460_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc Tmp_2253;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2330;
    call {:si_unique_call 1371} WPP_SF_(Tmp_2330, 86, Tmp_2253);
    goto L211;

  L211:
    call {:si_unique_call 1372} status_72 := Sbp2_BuildInstanceId(DeviceInfo_6, uniRetString);
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:partition} status_72 < 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2281;
    assume {:nonnull} Tmp_2281 != 0;
    assume Tmp_2281 > 0;
    goto anon463_Then, anon463_Else;

  anon463_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    havoc Tmp_2295;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2344;
    call {:si_unique_call 1373} WPP_SF_D(Tmp_2344, 87, Tmp_2295, status_72);
    goto L239;

  anon340_Then:
    goto L239;

  anon463_Then:
    goto L239;

  anon339_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon337_Then:
    assume {:partition} 0 <= status_72;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon461_Then, anon461_Else;

  anon461_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon461_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2316;
    assume {:nonnull} Tmp_2316 != 0;
    assume Tmp_2316 > 0;
    goto anon462_Then, anon462_Else;

  anon462_Else:
    goto L239;

  anon462_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    goto L239;

  anon338_Then:
    havoc Tmp_2296;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2346;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_4211;
    call {:si_unique_call 1374} WPP_SF_S(Tmp_2346, 88, Tmp_2296, vslice_dummy_var_4211);
    goto L239;

  anon336_Then:
    goto L211;

  anon460_Then:
    goto L211;

  anon335_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L211;

  anon409_Then:
    goto anon341_Then, anon341_Else;

  anon341_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2303;
    assume {:nonnull} Tmp_2303 != 0;
    assume Tmp_2303 > 0;
    goto anon456_Then, anon456_Else;

  anon456_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    havoc Tmp_2354;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2270;
    call {:si_unique_call 1375} WPP_SF_(Tmp_2270, 83, Tmp_2354);
    goto L250;

  L250:
    call {:si_unique_call 1376} status_72 := Sbp2_BuildCompatIds(DeviceInfo_6, uniRetString);
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} status_72 < 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2310;
    assume {:nonnull} Tmp_2310 != 0;
    assume Tmp_2310 > 0;
    goto anon459_Then, anon459_Else;

  anon459_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon346_Then, anon346_Else;

  anon346_Else:
    havoc Tmp_2351;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2273;
    call {:si_unique_call 1377} WPP_SF_D(Tmp_2273, 84, Tmp_2351, status_72);
    goto L239;

  anon346_Then:
    goto L239;

  anon459_Then:
    goto L239;

  anon345_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon343_Then:
    assume {:partition} 0 <= status_72;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon457_Then, anon457_Else;

  anon457_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2342;
    assume {:nonnull} Tmp_2342 != 0;
    assume Tmp_2342 > 0;
    goto anon458_Then, anon458_Else;

  anon458_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    havoc Tmp_2365;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2318;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_4212;
    call {:si_unique_call 1378} WPP_SF_S(Tmp_2318, 85, Tmp_2365, vslice_dummy_var_4212);
    goto L239;

  anon344_Then:
    goto L239;

  anon458_Then:
    goto L239;

  anon457_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon342_Then:
    goto L250;

  anon456_Then:
    goto L250;

  anon341_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L250;

  anon410_Then:
    goto anon347_Then, anon347_Else;

  anon347_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2312;
    assume {:nonnull} Tmp_2312 != 0;
    assume Tmp_2312 > 0;
    goto anon452_Then, anon452_Else;

  anon452_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    havoc Tmp_2363;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2257;
    call {:si_unique_call 1379} WPP_SF_(Tmp_2257, 80, Tmp_2363);
    goto L287;

  L287:
    call {:si_unique_call 1380} status_72 := Sbp2_BuildHardwareIds(DeviceInfo_6, uniRetString);
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} status_72 < 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2255;
    assume {:nonnull} Tmp_2255 != 0;
    assume Tmp_2255 > 0;
    goto anon455_Then, anon455_Else;

  anon455_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc Tmp_2341;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2293;
    call {:si_unique_call 1381} WPP_SF_D(Tmp_2293, 81, Tmp_2341, status_72);
    goto L239;

  anon352_Then:
    goto L239;

  anon455_Then:
    goto L239;

  anon351_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon349_Then:
    assume {:partition} 0 <= status_72;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon453_Then, anon453_Else;

  anon453_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2348;
    assume {:nonnull} Tmp_2348 != 0;
    assume Tmp_2348 > 0;
    goto anon454_Then, anon454_Else;

  anon454_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    havoc Tmp_2358;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2299;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_4213;
    call {:si_unique_call 1382} WPP_SF_S(Tmp_2299, 82, Tmp_2358, vslice_dummy_var_4213);
    goto L239;

  anon350_Then:
    goto L239;

  anon454_Then:
    goto L239;

  anon453_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon348_Then:
    goto L287;

  anon452_Then:
    goto L287;

  anon347_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L287;

  anon447_Then:
    goto anon353_Then, anon353_Else;

  anon353_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2272;
    assume {:nonnull} Tmp_2272 != 0;
    assume Tmp_2272 > 0;
    goto anon448_Then, anon448_Else;

  anon448_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    havoc Tmp_2359;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2332;
    call {:si_unique_call 1383} WPP_SF_(Tmp_2332, 77, Tmp_2359);
    goto L324;

  L324:
    call {:si_unique_call 1384} status_72 := Sbp2_BuildDeviceId(DeviceInfo_6, uniRetString);
    goto anon355_Then, anon355_Else;

  anon355_Else:
    assume {:partition} status_72 < 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2300;
    assume {:nonnull} Tmp_2300 != 0;
    assume Tmp_2300 > 0;
    goto anon451_Then, anon451_Else;

  anon451_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    havoc Tmp_2315;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2254;
    call {:si_unique_call 1385} WPP_SF_D(Tmp_2254, 78, Tmp_2315, status_72);
    goto L239;

  anon358_Then:
    goto L239;

  anon451_Then:
    goto L239;

  anon357_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon355_Then:
    assume {:partition} 0 <= status_72;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon449_Then, anon449_Else;

  anon449_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2328;
    assume {:nonnull} Tmp_2328 != 0;
    assume Tmp_2328 > 0;
    goto anon450_Then, anon450_Else;

  anon450_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    havoc Tmp_2325;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2260;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_4214;
    call {:si_unique_call 1386} WPP_SF_S(Tmp_2260, 79, Tmp_2325, vslice_dummy_var_4214);
    goto L239;

  anon356_Then:
    goto L239;

  anon450_Then:
    goto L239;

  anon449_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon354_Then:
    goto L324;

  anon448_Then:
    goto L324;

  anon353_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L324;

  anon334_Then:
    goto L186;

  anon446_Then:
    goto L186;

  anon333_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L186;

  anon396_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 12;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    status_72 := -1073741637;
    goto L375;

  L375:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon361_Then:
    goto L370;

  L370:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc vslice_dummy_var_4215;
    call {:si_unique_call 1387} status_72 := Sbp2_BuildDeviceText(vslice_dummy_var_4215, DeviceInfo_6, uniRetString);
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2289;
    assume {:nonnull} Tmp_2289 != 0;
    assume Tmp_2289 > 0;
    goto anon445_Then, anon445_Else;

  anon445_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    havoc Tmp_2353;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2317;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_4216;
    call {:si_unique_call 1388} WPP_SF_qS(Tmp_2317, 75, Tmp_2353, pdoExtension_21, vslice_dummy_var_4216);
    goto L375;

  anon362_Then:
    goto L375;

  anon445_Then:
    goto L375;

  anon444_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L375;

  anon321_Then:
    goto L370;

  anon397_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 11;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2302;
    assume {:nonnull} Tmp_2302 != 0;
    assume Tmp_2302 > 0;
    fdoExtension_14 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2302)];
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc Tmp_2275;
    assume {:nonnull} DeviceObject_49 != 0;
    assume DeviceObject_49 > 0;
    assume {:nonnull} Tmp_2275 != 0;
    assume Tmp_2275 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    goto L74;

  anon398_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 9;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc deviceCapabilities_1;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2352;
    assume {:nonnull} Tmp_2352 != 0;
    assume Tmp_2352 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} Tmp_2352 != 0;
    assume Tmp_2352 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    goto L404;

  L404:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2362;
    assume {:nonnull} Tmp_2362 != 0;
    assume Tmp_2362 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2262;
    assume {:nonnull} Tmp_2262 != 0;
    assume Tmp_2262 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2350;
    assume {:nonnull} Tmp_2350 != 0;
    assume Tmp_2350 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2357;
    assume {:nonnull} Tmp_2357 != 0;
    assume Tmp_2357 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2314;
    assume {:nonnull} Tmp_2314 != 0;
    assume Tmp_2314 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon406_Then:
    goto L398;

  L398:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2307;
    assume {:nonnull} Tmp_2307 != 0;
    assume Tmp_2307 > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:nonnull} Tmp_2307 != 0;
    assume Tmp_2307 > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    goto L400;

  L400:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L404;

  anon407_Then:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L404;

  anon443_Then:
    goto L400;

  anon442_Then:
    goto L398;

  anon399_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 7;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2320;
    assume {:nonnull} Tmp_2320 != 0;
    assume Tmp_2320 > 0;
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    havoc Tmp_2259;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2264;
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    havoc vslice_dummy_var_4217;
    call {:si_unique_call 1389} WPP_SF_qD(Tmp_2264, 74, Tmp_2259, pdoExtension_21, vslice_dummy_var_4217);
    goto L420;

  L420:
    assume {:nonnull} irpStack_20 != 0;
    assume irpStack_20 > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    goto L74;

  anon364_Then:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc deviceRelations_1;
    goto L435;

  L435:
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_2258;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_2266;
    assume {:nonnull} Tmp_2266 != 0;
    assume Tmp_2266 > 0;
    Mem_T.P_DEVICE_OBJECT[Tmp_2266 + Tmp_2258 * 4] := DeviceObject_49;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    call {:si_unique_call 1390} vslice_dummy_var_253 := sdv_ObReferenceObject(0);
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon366_Then:
    call {:si_unique_call 1391} sdv_729 := ExAllocatePoolWithTag(1, 8, 846226003);
    deviceRelations_1 := sdv_729;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:partition} deviceRelations_1 != 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    goto L435;

  anon441_Then:
    assume {:partition} deviceRelations_1 == 0;
    status_72 := -1073741670;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon365_Then:
    goto L420;

  anon440_Then:
    goto L420;

  anon363_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L420;

  anon400_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 6;
    goto L58;

  L58:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    goto L74;

  anon401_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 5;
    goto L58;

  anon402_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 4;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2347;
    assume {:nonnull} Tmp_2347 != 0;
    assume Tmp_2347 > 0;
    call {:si_unique_call 1392} vslice_dummy_var_252 := Sbp2EnableBusResetNotification#1(Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2347)], 0);
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1393} vslice_dummy_var_241 := PoRegisterDeviceForIdleDetection(0, 0, 0, 4);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1394} Tmp_2323 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    call {:si_unique_call 1395} sdv_KeAcquireSpinLock(0, Tmp_2323);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    havoc cIrql_12;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1396} sdv_KeReleaseSpinLock(0, cIrql_12);
    call {:si_unique_call 1397} vslice_dummy_var_242 := KeCancelTimer(0);
    goto L469;

  L469:
    status_72 := 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon367_Then:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1398} sdv_KeReleaseSpinLock(0, cIrql_12);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2269;
    assume {:nonnull} Tmp_2269 != 0;
    assume Tmp_2269 > 0;
    fdoExtension_14 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2269)];
    call {:si_unique_call 1399} ExAcquireFastMutex(0);
    call {:si_unique_call 1400} vslice_dummy_var_243 := Sbp2ManagementTransaction#1(pdoExtension_21, 7, -1);
    goto anon437_Then, anon437_Else;

  anon437_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1401} ExReleaseFastMutex(0);
    call {:si_unique_call 1402} vslice_dummy_var_244 := Sbp2CleanDeviceExtension#1(DeviceObject_49, 0, 0);
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1403} vslice_dummy_var_245 := Sbp2InitializeDeviceExtension#1(pdoExtension_21);
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} yogi_error != 1;
    goto L469;

  anon439_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon438_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon437_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon436_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon403_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 3;
    call {:si_unique_call 1404} Tmp_2323 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    call {:si_unique_call 1405} sdv_KeAcquireSpinLock(0, Tmp_2323);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    havoc cIrql_12;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1406} sdv_KeReleaseSpinLock(0, cIrql_12);
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    goto L74;

  anon404_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 2;
    status_72 := 0;
    call {:si_unique_call 1407} Tmp_2323 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    call {:si_unique_call 1408} sdv_KeAcquireSpinLock(0, Tmp_2323);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    havoc cIrql_12;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    call {:si_unique_call 1409} vslice_dummy_var_246 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1410} vslice_dummy_var_249 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_21), 0, 0);
    goto L504;

  L504:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    reported := 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2297;
    assume {:nonnull} Tmp_2297 != 0;
    assume Tmp_2297 > 0;
    fdoExtension_14 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2297)];
    i_7 := 0;
    goto L517;

  L517:
    call {:si_unique_call 1411} Tmp_2251, i_7, Tmp_2287 := Sbp2PnpDeviceControl_loop_L517(Tmp_2251, i_7, Tmp_2287, fdoExtension_14, DeviceObject_49);
    goto L517_last;

  L517_last:
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    Tmp_2287 := i_7;
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc Tmp_2251;
    assume {:nonnull} Tmp_2251 != 0;
    assume Tmp_2251 > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2251 + Tmp_2287 * 268)] == DeviceObject_49;
    reported := 1;
    goto L518;

  L518:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1412} vslice_dummy_var_250 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_21), 0, 0);
    call {:si_unique_call 1413} sdv_KeReleaseSpinLock(0, cIrql_12);
    call {:si_unique_call 1414} Tmp_2323 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    call {:si_unique_call 1415} sdv_KeRaiseIrql(2, Tmp_2323);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    havoc cIrql_12;
    call {:si_unique_call 1416} Sbp2StartNextPacketByKey#1(DeviceObject_49, 0);
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1417} sdv_KeLowerIrql(cIrql_12);
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2331;
    assume {:nonnull} Tmp_2331 != 0;
    assume Tmp_2331 > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    havoc Tmp_2343;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2355;
    call {:si_unique_call 1418} WPP_SF_qq(Tmp_2355, 92, Tmp_2343, pdoExtension_21, DeviceObject_49);
    goto L542;

  L542:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1419} vslice_dummy_var_251 := KeCancelTimer(0);
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:partition} reported != 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1420} sdv_IoCompleteRequest(0, 0);
    Tmp_2250 := 0;
    goto L1;

  anon373_Then:
    assume {:partition} reported == 0;
    call {:si_unique_call 1421} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2356;
    assume {:nonnull} Tmp_2356 != 0;
    assume Tmp_2356 > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2309;
    assume {:nonnull} Tmp_2309 != 0;
    assume Tmp_2309 > 0;
    call {:si_unique_call 1422} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2291;
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2364;
    assume {:nonnull} Tmp_2364 != 0;
    assume Tmp_2364 > 0;
    goto L563;

  L563:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2252;
    assume {:nonnull} Tmp_2252 != 0;
    assume Tmp_2252 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2326;
    assume {:nonnull} Tmp_2326 != 0;
    assume Tmp_2326 > 0;
    call {:si_unique_call 1423} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2366;
    assume {:nonnull} Tmp_2366 != 0;
    assume Tmp_2366 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2286;
    assume {:nonnull} Tmp_2286 != 0;
    assume Tmp_2286 > 0;
    goto L569;

  L569:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2301;
    assume {:nonnull} Tmp_2301 != 0;
    assume Tmp_2301 > 0;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2337;
    assume {:nonnull} Tmp_2337 != 0;
    assume Tmp_2337 > 0;
    call {:si_unique_call 1424} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2288;
    assume {:nonnull} Tmp_2288 != 0;
    assume Tmp_2288 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2278;
    assume {:nonnull} Tmp_2278 != 0;
    assume Tmp_2278 > 0;
    goto L575;

  L575:
    call {:si_unique_call 1425} Tmp_2323 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    call {:si_unique_call 1426} sdv_KeAcquireSpinLock(0, Tmp_2323);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    havoc cIrql_12;
    i_7 := 0;
    goto L584;

  L584:
    call {:si_unique_call 1427} i_7, Tmp_2280, Tmp_2319, Tmp_2345, Tmp_2360 := Sbp2PnpDeviceControl_loop_L584(i_7, Tmp_2280, fdoExtension_14, Tmp_2319, Tmp_2345, Tmp_2360, DeviceObject_49);
    goto L584_last;

  L584_last:
    Tmp_2360 := i_7;
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc Tmp_2280;
    assume {:nonnull} Tmp_2280 != 0;
    assume Tmp_2280 > 0;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2280 + Tmp_2360 * 268)] != 0;
    Tmp_2345 := i_7;
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc Tmp_2319;
    assume {:nonnull} Tmp_2319 != 0;
    assume Tmp_2319 > 0;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2319 + Tmp_2345 * 268)] == DeviceObject_49;
    Tmp_2311 := i_7;
    assume {:nonnull} fdoExtension_14 != 0;
    assume fdoExtension_14 > 0;
    havoc Tmp_2294;
    DevInfo := Tmp_2294 + Tmp_2311 * 268;
    goto L585;

  L585:
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:partition} DevInfo != 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DevInfo)] := 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1428} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L595;

  L595:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1429} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L601;

  L601:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1430} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L590;

  L590:
    call {:si_unique_call 1431} sdv_KeReleaseSpinLock(0, cIrql_12);
    call {:si_unique_call 1432} IoDeleteDevice(0);
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2263;
    assume {:nonnull} Tmp_2263 != 0;
    assume Tmp_2263 > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    havoc Tmp_2313;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2327;
    call {:si_unique_call 1433} WPP_SF_qq(Tmp_2327, 93, Tmp_2313, pdoExtension_21, DeviceObject_49);
    goto L619;

  L619:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1434} sdv_IoCompleteRequest(0, 0);
    Tmp_2250 := status_72;
    goto L1;

  anon378_Then:
    goto L619;

  anon428_Then:
    goto L619;

  anon377_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L619;

  anon376_Then:
    goto L590;

  anon375_Then:
    goto L601;

  anon427_Then:
    goto L595;

  anon374_Then:
    assume {:partition} DevInfo == 0;
    goto L590;

  anon426_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2319 + Tmp_2345 * 268)] != DeviceObject_49;
    i_7 := i_7 + 1;
    goto anon426_Then_dummy;

  anon426_Then_dummy:
    assume false;
    return;

  anon425_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2280 + Tmp_2360 * 268)] == 0;
    goto L585;

  anon424_Then:
    goto L575;

  anon423_Then:
    goto L569;

  anon422_Then:
    goto L563;

  anon421_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon372_Then:
    goto L542;

  anon420_Then:
    goto L542;

  anon371_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L542;

  anon419_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon418_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2251 + Tmp_2287 * 268)] != DeviceObject_49;
    i_7 := i_7 + 1;
    goto anon418_Then_dummy;

  anon418_Then_dummy:
    assume false;
    return;

  anon370_Then:
    goto L518;

  anon368_Then:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2336;
    assume {:nonnull} Tmp_2336 != 0;
    assume Tmp_2336 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    havoc Tmp_2338;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2349;
    call {:si_unique_call 1435} WPP_SF_q(Tmp_2349, 94, Tmp_2338, pdoExtension_21);
    goto L638;

  L638:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    havoc Tmp_2361;
    assume {:nonnull} Tmp_2361 != 0;
    assume Tmp_2361 > 0;
    fdoExtension_14 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2361)];
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    call {:si_unique_call 1436} vslice_dummy_var_247 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto L647;

  L647:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1437} sdv_KeReleaseSpinLock(0, cIrql_12);
    call {:si_unique_call 1438} ExAcquireFastMutex(0);
    call {:si_unique_call 1439} vslice_dummy_var_248 := Sbp2ManagementTransaction#1(pdoExtension_21, 7, -1);
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1440} ExReleaseFastMutex(0);
    call {:si_unique_call 1441} Tmp_2323 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    call {:si_unique_call 1442} sdv_KeAcquireSpinLock(0, Tmp_2323);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    havoc cIrql_12;
    goto L633;

  L633:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto L669;

  L669:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1443} sdv_KeReleaseSpinLock(0, cIrql_12);
    call {:si_unique_call 1444} sdv_725 := Sbp2CleanDeviceExtension#1(DeviceObject_49, 1, 0);
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:partition} yogi_error != 1;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:partition} sdv_725 == 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2321;
    assume {:nonnull} Tmp_2321 != 0;
    assume Tmp_2321 > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    havoc Tmp_2271;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2283;
    call {:si_unique_call 1445} WPP_SF_q(Tmp_2283, 96, Tmp_2271, pdoExtension_21);
    goto L680;

  L680:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon386_Then:
    goto L680;

  anon433_Then:
    goto L680;

  anon385_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L680;

  anon384_Then:
    assume {:partition} sdv_725 != 0;
    goto L680;

  anon432_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon431_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon383_Then:
    goto L633;

  anon430_Then:
    goto L647;

  anon382_Then:
    goto L638;

  anon429_Then:
    goto L638;

  anon381_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L638;

  anon380_Then:
    goto L633;

  anon369_Then:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2290;
    assume {:nonnull} Tmp_2290 != 0;
    assume Tmp_2290 > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    havoc Tmp_2322;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2279;
    call {:si_unique_call 1446} WPP_SF_q(Tmp_2279, 95, Tmp_2322, pdoExtension_21);
    goto L669;

  anon387_Then:
    goto L669;

  anon435_Then:
    goto L669;

  anon434_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L669;

  anon379_Then:
    goto L669;

  anon417_Then:
    goto L504;

  anon405_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 1;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    goto L704;

  L704:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    goto L74;

  anon320_Then:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    call {:si_unique_call 1447} Tmp_2323 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    call {:si_unique_call 1448} sdv_KeAcquireSpinLock(0, Tmp_2323);
    assume {:nonnull} Tmp_2323 != 0;
    assume Tmp_2323 > 0;
    havoc cIrql_12;
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    call {:si_unique_call 1449} sdv_KeReleaseSpinLock(0, cIrql_12);
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    havoc status_72;
    goto L74;

  anon389_Then:
    goto L704;

  anon388_Then:
    goto L704;

  anon319_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(irpStack_20)] == 0;
    call {:si_unique_call 1450} status_72 := Sbp2StartDevice(DeviceObject_49);
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    goto L74;

  anon415_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon318_Then:
    assume {:partition} 0 > status_72;
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1451} sdv_IoCompleteRequest(0, 0);
    Tmp_2250 := status_72;
    goto L1;

  anon390_Then:
    assume {:nonnull} Irp_29 != 0;
    assume Irp_29 > 0;
    call {:si_unique_call 1452} sdv_IoCompleteRequest(0, 0);
    Tmp_2250 := -1073741810;
    goto L1;

  anon317_Then:
    call {:si_unique_call 1453} Tmp_2250 := Sbp2FDOPnpDeviceControl(DeviceObject_49, Irp_29);
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon414_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_7: int, actual_uniDeviceId: int) returns (Tmp_2367: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2367 == -1073741670 || Tmp_2367 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_7: int, actual_uniDeviceId: int) returns (Tmp_2367: int)
{
  var {:scalar} Tmp_2368: int;
  var {:pointer} Tmp_2369: int;
  var {:pointer} sdv_746: int;
  var {:scalar} Tmp_2370: int;
  var {:scalar} Tmp_2371: int;
  var {:pointer} Tmp_2372: int;
  var {:pointer} Tmp_2373: int;
  var {:scalar} Tmp_2374: int;
  var {:pointer} Tmp_2375: int;
  var {:scalar} Tmp_2376: int;
  var {:pointer} Tmp_2377: int;
  var {:scalar} Tmp_2378: int;
  var {:pointer} Tmp_2379: int;
  var {:scalar} Tmp_2380: int;
  var {:scalar} status_73: int;
  var {:pointer} Tmp_2381: int;
  var {:pointer} DeviceInfo_7: int;
  var {:pointer} uniDeviceId: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_4218: int;
  var vslice_dummy_var_4219: int;
  var vslice_dummy_var_4220: int;

  anon0:
    DeviceInfo_7 := actual_DeviceInfo_7;
    uniDeviceId := actual_uniDeviceId;
    call {:si_unique_call 1454} Tmp_2372 := __HAVOC_malloc(4);
    call {:si_unique_call 1455} Tmp_2373 := __HAVOC_malloc(100);
    call {:si_unique_call 1456} Tmp_2379 := __HAVOC_malloc(76);
    call {:si_unique_call 1457} Tmp_2381 := __HAVOC_malloc(160);
    status_73 := 0;
    call {:si_unique_call 1458} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2374;
    call {:si_unique_call 1459} sdv_746 := ExAllocatePoolWithTag(1, Tmp_2374, -498638253);
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2372;
    assume {:nonnull} Tmp_2372 != 0;
    assume Tmp_2372 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_2369;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2378;
    call {:si_unique_call 1460} WPP_SF_(Tmp_2378, 102, Tmp_2369);
    goto L49;

  L49:
    status_73 := -1073741670;
    goto L38;

  L38:
    Tmp_2367 := status_73;
    return;

  anon21_Then:
    goto L49;

  anon24_Then:
    goto L49;

  anon20_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon22_Then:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2370;
    call {:si_unique_call 1461} sdv_RtlZeroMemory(0, Tmp_2370);
    call {:si_unique_call 1462} Sbp2CreateNiveusId(DeviceInfo_7);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2380;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2375;
    goto L34;

  L34:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2368;
    Tmp_2373 := strConst__li2bpl48;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_4218;
    call {:si_unique_call 1463} vslice_dummy_var_256 := RtlStringCbPrintfW(vslice_dummy_var_4218, Tmp_2368, Tmp_2373);
    goto L38;

  anon23_Then:
    Tmp_2375 := strConst__li2bpl33;
    goto L34;

  anon18_Then:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2377;
    goto L41;

  L41:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2371;
    Tmp_2379 := strConst__li2bpl49;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_4219;
    call {:si_unique_call 1464} vslice_dummy_var_257 := RtlStringCbPrintfW(vslice_dummy_var_4219, Tmp_2371, Tmp_2379);
    goto L38;

  anon19_Then:
    Tmp_2377 := strConst__li2bpl33;
    goto L41;

  anon17_Then:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2376;
    Tmp_2381 := strConst__li2bpl50;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_4220;
    call {:si_unique_call 1465} vslice_dummy_var_258 := RtlStringCbPrintfW(vslice_dummy_var_4220, Tmp_2376, Tmp_2381);
    goto L38;
}



procedure {:origName "WPP_SF_qSD"} WPP_SF_qSD(actual_Logger_31: int, actual_id_31: int, actual_TraceGuid_31: int, actual_s_p_e_c_i_a_l_113: int, actual_s_p_e_c_i_a_l_114: int, actual_s_p_e_c_i_a_l_115: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qSD"} WPP_SF_qSD(actual_Logger_31: int, actual_id_31: int, actual_TraceGuid_31: int, actual_s_p_e_c_i_a_l_113: int, actual_s_p_e_c_i_a_l_114: int, actual_s_p_e_c_i_a_l_115: int)
{
  var {:scalar} Tmp_2389: int;
  var {:scalar} sdv_751: int;
  var {:pointer} Tmp_2390: int;
  var {:pointer} TraceGuid_31: int;
  var {:pointer} s_p_e_c_i_a_l_114: int;
  var vslice_dummy_var_259: int;

  anon0:
    call {:si_unique_call 1466} vslice_dummy_var_259 := __HAVOC_malloc(4);
    TraceGuid_31 := actual_TraceGuid_31;
    s_p_e_c_i_a_l_114 := actual_s_p_e_c_i_a_l_114;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_114 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_114 != 0;
    assume s_p_e_c_i_a_l_114 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2389 := (sdv_751 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_114 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_114 != 0;
    assume s_p_e_c_i_a_l_114 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2390 := s_p_e_c_i_a_l_114;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2390 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_114 == 0;
    goto L18;

  anon10_Then:
    Tmp_2389 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_114 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_D"} WPP_SF_D(actual_Logger_32: int, actual_id_32: int, actual_TraceGuid_32: int, actual_s_p_e_c_i_a_l_116: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_D"} WPP_SF_D(actual_Logger_32: int, actual_id_32: int, actual_TraceGuid_32: int, actual_s_p_e_c_i_a_l_116: int)
{
  var {:pointer} TraceGuid_32: int;
  var vslice_dummy_var_260: int;

  anon0:
    call {:si_unique_call 1467} vslice_dummy_var_260 := __HAVOC_malloc(4);
    TraceGuid_32 := actual_TraceGuid_32;
    return;
}



procedure {:origName "Sbp2CreateClose"} Sbp2CreateClose(actual_DeviceObject_50: int, actual_Irp_30: int) returns (Tmp_2399: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CreateClose"} Sbp2CreateClose(actual_DeviceObject_50: int, actual_Irp_30: int) returns (Tmp_2399: int)
{
  var {:pointer} Tmp_2400: int;
  var {:pointer} irpStack_21: int;
  var {:scalar} waitValue_4: int;
  var {:scalar} Tmp_2401: int;
  var {:pointer} pdoExtension_22: int;
  var {:scalar} Tmp_2402: int;
  var {:pointer} Tmp_2403: int;
  var {:pointer} Tmp_2404: int;
  var {:pointer} Tmp_2405: int;
  var {:pointer} Tmp_2406: int;
  var {:pointer} Tmp_2407: int;
  var {:scalar} Tmp_2408: int;
  var {:scalar} Tmp_2409: int;
  var {:pointer} Tmp_2410: int;
  var {:pointer} Tmp_2411: int;
  var {:scalar} cIrql_13: int;
  var {:scalar} status_74: int;
  var {:pointer} Tmp_2412: int;
  var {:pointer} DeviceObject_50: int;
  var {:pointer} Irp_30: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_4221: int;
  var vslice_dummy_var_4222: int;
  var vslice_dummy_var_4223: int;

  anon0:
    call {:si_unique_call 1468} waitValue_4 := __HAVOC_malloc(20);
    DeviceObject_50 := actual_DeviceObject_50;
    Irp_30 := actual_Irp_30;
    call {:si_unique_call 1469} Tmp_2403 := __HAVOC_malloc(4);
    call {:si_unique_call 1470} Tmp_2405 := __HAVOC_malloc(4);
    call {:si_unique_call 1471} Tmp_2406 := __HAVOC_malloc(4);
    call {:si_unique_call 1472} Tmp_2412 := __HAVOC_malloc(4);
    status_74 := 0;
    call {:si_unique_call 1473} irpStack_21 := sdv_IoGetCurrentIrpStackLocation(Irp_30);
    assume {:nonnull} DeviceObject_50 != 0;
    assume DeviceObject_50 > 0;
    pdoExtension_22 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_50)];
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L17;

  L17:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L21;

  L21:
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    assume {:nonnull} Irp_30 != 0;
    assume Irp_30 > 0;
    call {:si_unique_call 1474} sdv_IoCompleteRequest(0, 0);
    Tmp_2399 := status_74;
    goto LM2;

  LM2:
    return;

  anon68_Then:
    call {:si_unique_call 1475} status_74 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} status_74 >= 0;
    assume {:nonnull} irpStack_21 != 0;
    assume irpStack_21 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} irpStack_21 != 0;
    assume irpStack_21 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto L44;

  L44:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2412;
    assume {:nonnull} Tmp_2412 != 0;
    assume Tmp_2412 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_2410;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2402;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_4221;
    call {:si_unique_call 1476} WPP_SF_qd(Tmp_2402, 71, Tmp_2410, pdoExtension_22, vslice_dummy_var_4221);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2406;
    assume {:nonnull} Tmp_2406 != 0;
    assume Tmp_2406 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_2407;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2408;
    call {:si_unique_call 1477} WPP_SF_q(Tmp_2408, 72, Tmp_2407, pdoExtension_22);
    goto L59;

  L59:
    call {:si_unique_call 1478} Tmp_2404 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    call {:si_unique_call 1479} sdv_KeAcquireSpinLock(0, Tmp_2404);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    havoc cIrql_13;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1480} sdv_KeReleaseSpinLock(0, cIrql_13);
    call {:si_unique_call 1481} vslice_dummy_var_262 := Sbp2ManagementTransaction#1(pdoExtension_22, 7, -1);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1482} CleanupOrbList#1(pdoExtension_22, -1073741248);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} yogi_error != 1;
    goto L31;

  L31:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1483} vslice_dummy_var_261 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_22), 0);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} yogi_error != 1;
    goto L21;

  anon91_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon96_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon95_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon77_Then:
    goto L59;

  anon94_Then:
    goto L59;

  anon76_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon75_Then:
    goto L31;

  anon73_Then:
    goto L31;

  anon74_Then:
    goto L45;

  anon93_Then:
    goto L45;

  anon72_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon71_Then:
    call {:si_unique_call 1484} Tmp_2404 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1485} vslice_dummy_var_267 := sdv_InterlockedDecrement(Tmp_2404);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto L44;

  anon86_Then:
    goto L31;

  anon70_Then:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2403;
    assume {:nonnull} Tmp_2403 != 0;
    assume Tmp_2403 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    havoc Tmp_2411;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2409;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_4222;
    call {:si_unique_call 1486} WPP_SF_qd(Tmp_2409, 69, Tmp_2411, pdoExtension_22, vslice_dummy_var_4222);
    goto L81;

  L81:
    call {:si_unique_call 1487} Tmp_2404 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    call {:si_unique_call 1488} sdv_KeAcquireSpinLock(0, Tmp_2404);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    havoc cIrql_13;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 1489} sdv_KeReleaseSpinLock(0, cIrql_13);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2405;
    assume {:nonnull} Tmp_2405 != 0;
    assume Tmp_2405 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    havoc Tmp_2400;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2401;
    call {:si_unique_call 1490} WPP_SF_q(Tmp_2401, 70, Tmp_2400, pdoExtension_22);
    goto L102;

  L102:
    call {:si_unique_call 1491} status_74 := Sbp2ManagementTransaction#1(pdoExtension_22, 0, -1);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} status_74 == 259;
    assume {:nonnull} waitValue_4 != 0;
    assume waitValue_4 > 0;
    call {:si_unique_call 1492} vslice_dummy_var_264 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_4);
    call {:si_unique_call 1493} Tmp_2404 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    call {:si_unique_call 1494} sdv_KeAcquireSpinLock(0, Tmp_2404);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    havoc cIrql_13;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    status_74 := -1073741823;
    goto L126;

  L126:
    call {:si_unique_call 1495} sdv_KeReleaseSpinLock(0, cIrql_13);
    goto L114;

  L114:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} status_74 == 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_4223;
    call {:si_unique_call 1496} vslice_dummy_var_263 := Sbp2Reset#1(vslice_dummy_var_4223, 1);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1497} Tmp_2404 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    call {:si_unique_call 1498} sdv_KeAcquireSpinLock(0, Tmp_2404);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    havoc cIrql_13;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1499} sdv_KeReleaseSpinLock(0, cIrql_13);
    call {:si_unique_call 1500} Tmp_2404 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1501} vslice_dummy_var_265 := sdv_InterlockedIncrement(Tmp_2404);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto L31;

  anon92_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon84_Then:
    assume {:partition} status_74 != 0;
    goto L31;

  anon85_Then:
    status_74 := 0;
    goto L126;

  anon83_Then:
    assume {:partition} status_74 != 259;
    goto L114;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon82_Then:
    goto L102;

  anon89_Then:
    goto L102;

  anon81_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L102;

  anon80_Then:
    call {:si_unique_call 1502} sdv_KeReleaseSpinLock(0, cIrql_13);
    call {:si_unique_call 1503} Tmp_2404 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1504} vslice_dummy_var_266 := sdv_InterlockedIncrement(Tmp_2404);
    assume {:nonnull} Tmp_2404 != 0;
    assume Tmp_2404 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto L31;

  anon79_Then:
    goto L81;

  anon88_Then:
    goto L81;

  anon78_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L81;

  anon69_Then:
    assume {:partition} 0 > status_74;
    goto L21;

  anon66_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L21;

  anon67_Then:
    goto L17;

  anon87_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    status_74 := -1073741810;
    goto L21;

  anon65_Then:
    goto L21;
}



procedure {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_4: int, actual_cbDest_1: int, actual_pszFormat_2: int) returns (Tmp_2413: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2413 == 0 || Tmp_2413 == 5 || Tmp_2413 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_4: int, actual_cbDest_1: int, actual_pszFormat_2: int) returns (Tmp_2413: int)
{
  var {:scalar} cchDest_4: int;
  var {:pointer} argList_2: int;
  var {:scalar} status_75: int;
  var {:pointer} pszDest_4: int;
  var {:scalar} cbDest_1: int;
  var {:pointer} pszFormat_2: int;
  var vslice_dummy_var_4224: int;

  anon0:
    pszDest_4 := actual_pszDest_4;
    cbDest_1 := actual_cbDest_1;
    call {:si_unique_call 1505} pszFormat_2 := __HAVOC_malloc(4);
    cchDest_4 := INTDIV(cbDest_1, 2);
    call {:si_unique_call 1506} status_75 := RtlStringValidateDestW_sdv_static_function_1(pszDest_4, cchDest_4, -1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_75 >= 0;
    argList_2 := pszFormat_2;
    assume {:nonnull} pszFormat_2 != 0;
    assume pszFormat_2 > 0;
    havoc vslice_dummy_var_4224;
    call {:si_unique_call 1507} status_75 := RtlStringVPrintfWorkerW_sdv_static_function_1(pszDest_4, cchDest_4, 0, vslice_dummy_var_4224, argList_2);
    argList_2 := 0;
    goto L19;

  L19:
    Tmp_2413 := status_75;
    return;

  anon5_Then:
    assume {:partition} 0 > status_75;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_4 > 0;
    assume {:nonnull} pszDest_4 != 0;
    assume pszDest_4 > 0;
    goto L19;

  anon6_Then:
    assume {:partition} 0 >= cchDest_4;
    goto L19;
}



procedure {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension_6: int, actual_DeviceInfo_8: int, actual_InstanceNumber_1: int) returns (Tmp_2415: int);
  modifies alloc, Mem_T.P_DEVICE_OBJECT, Mem_T.LogStart__DEBUG_LOG, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension_6: int, actual_DeviceInfo_8: int, actual_InstanceNumber_1: int) returns (Tmp_2415: int)
{
  var {:pointer} Tmp_2416: int;
  var {:scalar} Tmp_2417: int;
  var {:pointer} Tmp_2420: int;
  var {:pointer} Tmp_2421: int;
  var {:pointer} Tmp_2422: int;
  var {:scalar} size_2: int;
  var {:scalar} Tmp_2423: int;
  var {:pointer} symlinkBuffer_1: int;
  var {:pointer} Tmp_2425: int;
  var {:pointer} pdoExtension_23: int;
  var {:scalar} uniDeviceName_2: int;
  var {:pointer} Tmp_2426: int;
  var {:scalar} Tmp_2428: int;
  var {:pointer} Tmp_2429: int;
  var {:scalar} sdv_770: int;
  var {:pointer} Tmp_2430: int;
  var {:pointer} sdv_771: int;
  var {:scalar} Tmp_2432: int;
  var {:scalar} devType_1: int;
  var {:scalar} Tmp_2433: int;
  var {:pointer} sdv_772: int;
  var {:pointer} sdv_773: int;
  var {:scalar} sdv_774: int;
  var {:pointer} Tmp_2437: int;
  var {:scalar} sdv_777: int;
  var {:pointer} Tmp_2439: int;
  var {:scalar} sdv_779: int;
  var {:scalar} sdv_780: int;
  var {:pointer} Tmp_2441: int;
  var {:pointer} Tmp_2444: int;
  var {:pointer} Tmp_2445: int;
  var {:scalar} Tmp_2446: int;
  var {:pointer} Tmp_2447: int;
  var {:scalar} status_76: int;
  var {:pointer} devnameBuffer: int;
  var {:pointer} Tmp_2449: int;
  var {:pointer} Tmp_2450: int;
  var {:pointer} Tmp_2451: int;
  var {:pointer} Tmp_2452: int;
  var {:pointer} Tmp_2453: int;
  var {:pointer} Tmp_2454: int;
  var {:pointer} Tmp_2457: int;
  var {:scalar} sdv_789: int;
  var {:pointer} FdoExtension_6: int;
  var {:pointer} DeviceInfo_8: int;
  var {:scalar} InstanceNumber_1: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_4225: int;

  anon0:
    call {:si_unique_call 1508} uniDeviceName_2 := __HAVOC_malloc(12);
    FdoExtension_6 := actual_FdoExtension_6;
    DeviceInfo_8 := actual_DeviceInfo_8;
    InstanceNumber_1 := actual_InstanceNumber_1;
    call {:si_unique_call 1509} vslice_dummy_var_268 := __HAVOC_malloc(56);
    call {:si_unique_call 1510} vslice_dummy_var_269 := __HAVOC_malloc(44);
    call {:si_unique_call 1511} vslice_dummy_var_270 := __HAVOC_malloc(56);
    call {:si_unique_call 1512} Tmp_2425 := __HAVOC_malloc(272);
    call {:si_unique_call 1513} Tmp_2426 := __HAVOC_malloc(180);
    call {:si_unique_call 1514} vslice_dummy_var_271 := __HAVOC_malloc(36);
    call {:si_unique_call 1515} Tmp_2430 := __HAVOC_malloc(4);
    call {:si_unique_call 1516} vslice_dummy_var_272 := __HAVOC_malloc(32);
    call {:si_unique_call 1517} vslice_dummy_var_273 := __HAVOC_malloc(8);
    call {:si_unique_call 1518} vslice_dummy_var_274 := __HAVOC_malloc(56);
    call {:si_unique_call 1519} vslice_dummy_var_275 := __HAVOC_malloc(44);
    call {:si_unique_call 1520} vslice_dummy_var_276 := __HAVOC_malloc(44);
    call {:si_unique_call 1521} vslice_dummy_var_277 := __HAVOC_malloc(8);
    call {:si_unique_call 1522} vslice_dummy_var_278 := __HAVOC_malloc(8);
    call {:si_unique_call 1523} Tmp_2444 := __HAVOC_malloc(4);
    call {:si_unique_call 1524} Tmp_2447 := __HAVOC_malloc(4);
    call {:si_unique_call 1525} vslice_dummy_var_279 := __HAVOC_malloc(8);
    call {:si_unique_call 1526} Tmp_2451 := __HAVOC_malloc(4);
    call {:si_unique_call 1527} Tmp_2452 := __HAVOC_malloc(188);
    call {:si_unique_call 1528} vslice_dummy_var_280 := __HAVOC_malloc(8);
    call {:si_unique_call 1529} vslice_dummy_var_281 := __HAVOC_malloc(44);
    call {:si_unique_call 1530} vslice_dummy_var_282 := __HAVOC_malloc(32);
    call {:si_unique_call 1531} vslice_dummy_var_283 := __HAVOC_malloc(8);
    devnameBuffer := 0;
    symlinkBuffer_1 := 0;
    call {:si_unique_call 1532} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    goto L18;

  L18:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    devType_1 := 25;
    goto L24;

  L24:
    size_2 := 2560;
    call {:si_unique_call 1533} sdv_771 := ExAllocatePoolWithTag(512, size_2, -330079661);
    devnameBuffer := sdv_771;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} devnameBuffer != 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2421;
    goto L44;

  L44:
    Tmp_2452 := strConst__li2bpl52;
    call {:si_unique_call 1534} status_76 := RtlStringCbPrintfW(devnameBuffer, size_2, Tmp_2452);
    goto L48;

  L48:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} status_76 >= 0;
    call {:si_unique_call 1535} RtlInitUnicodeString(uniDeviceName_2, devnameBuffer);
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    call {:si_unique_call 1536} status_76 := IoCreateDevice(0, 5256, 0, devType_1, 0, 0, DeviceObject__DEVICE_INFORMATION(DeviceInfo_8));
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} status_76 >= 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Tmp_2454 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_8)];
    assume {:nonnull} Tmp_2454 != 0;
    assume Tmp_2454 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Tmp_2439 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_8)];
    assume {:nonnull} Tmp_2439 != 0;
    assume Tmp_2439 > 0;
    goto L64;

  L64:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Tmp_2437 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_8)];
    assume {:nonnull} Tmp_2437 != 0;
    assume Tmp_2437 > 0;
    pdoExtension_23 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2437)];
    call {:si_unique_call 1537} sdv_RtlZeroMemory(0, 1160);
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    havoc Tmp_2450;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} Tmp_2450 != 0;
    assume Tmp_2450 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1538} KeInitializeEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_23), 0, 0);
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1539} KeInitializeEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_23), 0, 0);
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1540} Tmp_2441 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2441 != 0;
    assume Tmp_2441 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1541} sdv_KeInitializeSpinLock(Tmp_2441);
    assume {:nonnull} Tmp_2441 != 0;
    assume Tmp_2441 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1542} sdv_IoInitializeRemoveLock(0, 846226003, 2, 8192);
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1543} Sbp2AllocateLog(pdoExtension_23);
    call {:si_unique_call 1544} Sbp2AddLog(pdoExtension_23, 1, -917616300, pdoExtension_23, 0);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2423;
    call {:si_unique_call 1545} sdv_773 := ExAllocatePoolWithTag(512, Tmp_2423, -498638253);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2447;
    assume {:nonnull} Tmp_2447 != 0;
    assume Tmp_2447 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    havoc Tmp_2422;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2446;
    call {:si_unique_call 1546} WPP_SF_(Tmp_2446, 14, Tmp_2422);
    goto L148;

  L148:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Tmp_2453 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_8)];
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Tmp_2416 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_8)];
    assume {:nonnull} Tmp_2416 != 0;
    assume Tmp_2416 > 0;
    assume {:nonnull} Tmp_2453 != 0;
    assume Tmp_2453 > 0;
    call {:si_unique_call 1547} status_76 := Sbp2PreAllocateLists(pdoExtension_23);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} yogi_error != 1;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} status_76 >= 0;
    size_2 := 1536;
    call {:si_unique_call 1548} sdv_772 := ExAllocatePoolWithTag(1, size_2, -330079661);
    symlinkBuffer_1 := sdv_772;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} symlinkBuffer_1 != 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    Tmp_2426 := strConst__li2bpl31;
    call {:si_unique_call 1549} status_76 := RtlStringCbPrintfW(symlinkBuffer_1, size_2, Tmp_2426);
    goto L183;

  L183:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} status_76 >= 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1550} RtlInitUnicodeString(UniSymLinkName__DEVICE_EXTENSION(pdoExtension_23), symlinkBuffer_1);
    call {:si_unique_call 1551} status_76 := IoCreateUnprotectedSymbolicLink(0, 0);
    goto L184;

  L184:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_76 < 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2444;
    assume {:nonnull} Tmp_2444 != 0;
    assume Tmp_2444 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    havoc Tmp_2420;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2432;
    call {:si_unique_call 1552} WPP_SF_qD(Tmp_2432, 16, Tmp_2420, pdoExtension_23, status_76);
    goto L227;

  L227:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} symlinkBuffer_1 != 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1553} ExFreePoolWithTag(0, -330079661);
    symlinkBuffer_1 := 0;
    goto L235;

  L235:
    status_76 := 0;
    goto L199;

  L199:
    call {:si_unique_call 1554} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1555} KeInitializeDpc(DeviceManagementTimeoutDpc__DEVICE_EXTENSION(pdoExtension_23), li2bplFunctionConstant375, 0);
    call {:si_unique_call 1556} KeInitializeTimer(0);
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1557} InitializeListHead(BusResetEntry__DEVICE_EXTENSION(pdoExtension_23));
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    assume {:nonnull} pdoExtension_23 != 0;
    assume pdoExtension_23 > 0;
    call {:si_unique_call 1558} Sbp2SqmInsertLunInformation(DeviceInfo_8);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Tmp_2449 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_8)];
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Tmp_2429 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_8)];
    assume {:nonnull} Tmp_2429 != 0;
    assume Tmp_2429 > 0;
    assume {:nonnull} Tmp_2449 != 0;
    assume Tmp_2449 > 0;
    Tmp_2415 := status_76;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon100_Then:
    assume {:partition} symlinkBuffer_1 == 0;
    goto L235;

  anon101_Then:
    goto L227;

  anon125_Then:
    goto L227;

  anon99_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L227;

  anon96_Then:
    assume {:partition} 0 <= status_76;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2451;
    assume {:nonnull} Tmp_2451 != 0;
    assume Tmp_2451 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    havoc Tmp_2445;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2417;
    call {:si_unique_call 1559} WPP_SF_qS(Tmp_2417, 15, Tmp_2445, pdoExtension_23, symlinkBuffer_1);
    goto L199;

  anon98_Then:
    goto L199;

  anon124_Then:
    goto L199;

  anon97_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L199;

  anon95_Then:
    assume {:partition} 0 > status_76;
    goto L184;

  anon123_Then:
    assume {:partition} symlinkBuffer_1 == 0;
    status_76 := -1073741670;
    goto L183;

  anon94_Then:
    assume {:partition} 0 > status_76;
    call {:si_unique_call 1560} IoDeleteDevice(0);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(DeviceInfo_8)] := 0;
    Tmp_2415 := status_76;
    goto L1;

  anon122_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon103_Then:
    goto L148;

  anon126_Then:
    goto L148;

  anon102_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon120_Then:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2428;
    call {:si_unique_call 1561} sdv_RtlZeroMemory(0, Tmp_2428);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto L114;

  L114:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto L118;

  L118:
    call {:si_unique_call 1562} vslice_dummy_var_284 := corral_nondet();
    goto L147;

  L147:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2430;
    assume {:nonnull} Tmp_2430 != 0;
    assume Tmp_2430 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    havoc Tmp_2457;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2433;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc vslice_dummy_var_4225;
    call {:si_unique_call 1563} WPP_SF_qS(Tmp_2433, 13, Tmp_2457, pdoExtension_23, vslice_dummy_var_4225);
    goto L148;

  anon93_Then:
    goto L148;

  anon121_Then:
    goto L148;

  anon92_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon109_Then:
    call {:si_unique_call 1564} vslice_dummy_var_292 := corral_nondet();
    goto L147;

  anon110_Then:
    call {:si_unique_call 1565} vslice_dummy_var_291 := corral_nondet();
    goto L147;

  anon111_Then:
    call {:si_unique_call 1566} vslice_dummy_var_290 := corral_nondet();
    goto L147;

  anon112_Then:
    call {:si_unique_call 1567} vslice_dummy_var_289 := corral_nondet();
    goto L147;

  anon113_Then:
    call {:si_unique_call 1568} vslice_dummy_var_288 := corral_nondet();
    goto L147;

  anon114_Then:
    call {:si_unique_call 1569} vslice_dummy_var_287 := corral_nondet();
    goto L147;

  anon115_Then:
    call {:si_unique_call 1570} vslice_dummy_var_286 := corral_nondet();
    goto L147;

  anon116_Then:
    call {:si_unique_call 1571} vslice_dummy_var_285 := corral_nondet();
    goto L147;

  anon91_Then:
    goto L118;

  anon108_Then:
    call {:si_unique_call 1572} vslice_dummy_var_293 := corral_nondet();
    goto L147;

  anon90_Then:
    goto L114;

  anon119_Then:
    goto L64;

  anon89_Then:
    assume {:partition} 0 > status_76;
    call {:si_unique_call 1573} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    Tmp_2415 := status_76;
    goto L1;

  anon88_Then:
    assume {:partition} 0 > status_76;
    call {:si_unique_call 1574} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    Tmp_2415 := status_76;
    goto L1;

  anon118_Then:
    Tmp_2421 := strConst__li2bpl51;
    goto L44;

  anon87_Then:
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    Tmp_2425 := strConst__li2bpl62;
    call {:si_unique_call 1575} status_76 := RtlStringCbPrintfW(devnameBuffer, size_2, Tmp_2425);
    goto L48;

  anon117_Then:
    assume {:partition} devnameBuffer == 0;
    Tmp_2415 := -1073741670;
    goto L1;

  anon105_Then:
    goto L19;

  L19:
    devType_1 := 45;
    goto L24;

  anon106_Then:
    goto L19;

  anon107_Then:
    devType_1 := 24;
    goto L24;

  anon86_Then:
    goto L19;

  anon104_Then:
    devType_1 := 34;
    goto L24;

  anon85_Then:
    goto L18;
}



procedure {:origName "RtlStringVPrintfWorkerA_sdv_static_function_1"} RtlStringVPrintfWorkerA_sdv_static_function_1(actual_pszDest_5: int, actual_cchDest_5: int, actual_pcchNewDestLength_1: int, actual_pszFormat_3: int, actual_argList_3: int) returns (Tmp_2460: int);
  free ensures {:va_keep} Tmp_2460 == 0 || Tmp_2460 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlStringVPrintfWorkerA_sdv_static_function_1"} RtlStringVPrintfWorkerA_sdv_static_function_1(actual_pszDest_5: int, actual_cchDest_5: int, actual_pcchNewDestLength_1: int, actual_pszFormat_3: int, actual_argList_3: int) returns (Tmp_2460: int)
{
  var {:scalar} cchNewDestLength_1: int;
  var {:scalar} iRet_1: int;
  var {:scalar} cchMax_3: int;
  var {:scalar} status_77: int;
  var {:pointer} pszDest_5: int;
  var {:scalar} cchDest_5: int;
  var {:pointer} pcchNewDestLength_1: int;

  anon0:
    pszDest_5 := actual_pszDest_5;
    cchDest_5 := actual_cchDest_5;
    pcchNewDestLength_1 := actual_pcchNewDestLength_1;
    status_77 := 0;
    cchNewDestLength_1 := 0;
    cchMax_3 := cchDest_5 - 1;
    call {:si_unique_call 1576} iRet_1 := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet_1;
    goto L16;

  L16:
    assume {:nonnull} pszDest_5 != 0;
    assume pszDest_5 > 0;
    cchNewDestLength_1 := cchMax_3;
    status_77 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength_1 != 0;
    assume {:nonnull} pcchNewDestLength_1 != 0;
    assume pcchNewDestLength_1 > 0;
    goto L21;

  L21:
    Tmp_2460 := status_77;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength_1 == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet_1 >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet_1 <= cchMax_3;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet_1 == cchMax_3;
    assume {:nonnull} pszDest_5 != 0;
    assume pszDest_5 > 0;
    cchNewDestLength_1 := cchMax_3;
    goto L20;

  anon12_Then:
    assume {:partition} iRet_1 != cchMax_3;
    cchNewDestLength_1 := iRet_1;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax_3 < iRet_1;
    goto L16;
}



procedure {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_9: int, actual_uniInstanceId: int) returns (Tmp_2462: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2462 == -1073741670 || Tmp_2462 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_9: int, actual_uniInstanceId: int) returns (Tmp_2462: int)
{
  var {:pointer} Tmp_2463: int;
  var {:scalar} Tmp_2464: int;
  var {:pointer} Tmp_2465: int;
  var {:pointer} sdv_791: int;
  var {:scalar} Tmp_2466: int;
  var {:pointer} Tmp_2467: int;
  var {:scalar} sdv_792: int;
  var {:scalar} Tmp_2468: int;
  var {:pointer} Tmp_2469: int;
  var {:scalar} sdv_793: int;
  var {:pointer} Tmp_2470: int;
  var {:scalar} Tmp_2471: int;
  var {:scalar} status_78: int;
  var {:pointer} DeviceInfo_9: int;
  var {:pointer} uniInstanceId: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_4226: int;

  anon0:
    DeviceInfo_9 := actual_DeviceInfo_9;
    uniInstanceId := actual_uniInstanceId;
    call {:si_unique_call 1577} Tmp_2467 := __HAVOC_malloc(4);
    call {:si_unique_call 1578} Tmp_2469 := __HAVOC_malloc(36);
    call {:si_unique_call 1579} vslice_dummy_var_294 := __HAVOC_malloc(8);
    call {:si_unique_call 1580} vslice_dummy_var_295 := __HAVOC_malloc(8);
    status_78 := 0;
    call {:si_unique_call 1581} sdv_do_paged_code_check();
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2471;
    call {:si_unique_call 1582} sdv_791 := ExAllocatePoolWithTag(1, Tmp_2471, 846226003);
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2467;
    assume {:nonnull} Tmp_2467 != 0;
    assume Tmp_2467 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_2465;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2464;
    call {:si_unique_call 1583} WPP_SF_(Tmp_2464, 107, Tmp_2465);
    goto L37;

  L37:
    status_78 := -1073741670;
    goto L35;

  L35:
    Tmp_2462 := status_78;
    return;

  anon10_Then:
    goto L37;

  anon12_Then:
    goto L37;

  anon9_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L37;

  anon11_Then:
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2468;
    call {:si_unique_call 1584} sdv_RtlZeroMemory(0, Tmp_2468);
    assume {:nonnull} DeviceInfo_9 != 0;
    assume DeviceInfo_9 > 0;
    havoc Tmp_2463;
    assume {:nonnull} Tmp_2463 != 0;
    assume Tmp_2463 > 0;
    assume {:nonnull} DeviceInfo_9 != 0;
    assume DeviceInfo_9 > 0;
    havoc Tmp_2470;
    assume {:nonnull} Tmp_2470 != 0;
    assume Tmp_2470 > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2466;
    Tmp_2469 := strConst__li2bpl30;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc vslice_dummy_var_4226;
    call {:si_unique_call 1585} vslice_dummy_var_296 := RtlStringCbPrintfW(vslice_dummy_var_4226, Tmp_2466, Tmp_2469);
    goto L35;
}



procedure {:origName "_InlineInterlockedExchangePointer"} _InlineInterlockedExchangePointer(actual_Destination_3: int, actual_Value_1: int) returns (Tmp_2475: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "_InlineInterlockedExchangePointer"} _InlineInterlockedExchangePointer(actual_Destination_3: int, actual_Value_1: int) returns (Tmp_2475: int)
{
  var {:scalar} sdv_795: int;

  anon0:
    Tmp_2475 := sdv_795;
    return;
}



procedure {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_PdoExtension_24: int) returns (Tmp_2477: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_PdoExtension_24: int) returns (Tmp_2477: int)
{
  var {:pointer} Tmp_2478: int;
  var {:pointer} Tmp_2479: int;
  var {:scalar} cnt: int;
  var {:pointer} Tmp_2480: int;
  var {:pointer} sdv_798: int;
  var {:pointer} context_3: int;
  var {:pointer} Tmp_2481: int;
  var {:pointer} Tmp_2482: int;
  var {:pointer} Tmp_2483: int;
  var {:pointer} sdv_799: int;
  var {:pointer} Tmp_2484: int;
  var {:pointer} Tmp_2485: int;
  var {:pointer} Tmp_2486: int;
  var {:pointer} sdv_800: int;
  var {:pointer} sdv_802: int;
  var {:pointer} Tmp_2487: int;
  var {:pointer} Tmp_2488: int;
  var {:pointer} sdv_803: int;
  var {:pointer} Tmp_2490: int;
  var {:pointer} Tmp_2491: int;
  var {:pointer} Tmp_2492: int;
  var {:pointer} statusFifoElement_1: int;
  var {:pointer} Tmp_2493: int;
  var {:pointer} Tmp_2494: int;
  var {:pointer} packet_15: int;
  var {:scalar} status_79: int;
  var {:pointer} Tmp_2495: int;
  var {:pointer} Tmp_2496: int;
  var {:pointer} Tmp_2497: int;
  var {:pointer} Tmp_2498: int;
  var {:pointer} PdoExtension_24: int;
  var boogieTmp: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_4227: int;
  var vslice_dummy_var_4228: int;
  var vslice_dummy_var_4229: int;

  anon0:
    call {:si_unique_call 1586} packet_15 := __HAVOC_malloc(4);
    PdoExtension_24 := actual_PdoExtension_24;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1587} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(PdoExtension_24));
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1588} InitializeSListHead(FreeContextListHead__DEVICE_EXTENSION(PdoExtension_24));
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1589} InitializeSListHead(BusRequestIrpIrbListHead__DEVICE_EXTENSION(PdoExtension_24));
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1590} InitializeSListHead(StatusFifoListHead__DEVICE_EXTENSION(PdoExtension_24));
    call {:si_unique_call 1591} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 32, 846226003, 0);
    call {:si_unique_call 1592} Tmp_2482 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    call {:si_unique_call 1593} sdv_KeInitializeSpinLock(Tmp_2482);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    call {:si_unique_call 1594} Tmp_2482 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    call {:si_unique_call 1595} sdv_KeInitializeSpinLock(Tmp_2482);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    call {:si_unique_call 1596} Tmp_2482 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    call {:si_unique_call 1597} sdv_KeInitializeSpinLock(Tmp_2482);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    call {:si_unique_call 1598} Tmp_2482 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    call {:si_unique_call 1599} sdv_KeInitializeSpinLock(Tmp_2482);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    call {:si_unique_call 1600} Tmp_2482 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    call {:si_unique_call 1601} sdv_KeInitializeSpinLock(Tmp_2482);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2482 != 0;
    assume Tmp_2482 > 0;
    cnt := 0;
    goto L41;

  L41:
    call {:si_unique_call 1602} cnt, sdv_798, sdv_802, Tmp_2487, boogieTmp, vslice_dummy_var_297 := Sbp2PreAllocateLists_loop_L41(cnt, sdv_798, sdv_802, Tmp_2487, packet_15, PdoExtension_24, boogieTmp, vslice_dummy_var_297);
    goto L41_last;

  L41_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} 8 > cnt;
    call {:si_unique_call 1603} sdv_798 := ExAllocatePoolWithTag(512, 24, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    Mem_T.P_IRBIRP[packet_15] := sdv_798;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_15] == 0;
    goto L74;

  L74:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc vslice_dummy_var_4227;
    call {:si_unique_call 1604} vslice_dummy_var_299 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_4227, 1, 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    Tmp_2477 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_15] != 0;
    call {:si_unique_call 1605} sdv_802 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc Tmp_2487;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} Tmp_2487 != 0;
    assume Tmp_2487 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_4228;
    call {:si_unique_call 1606} boogieTmp := IoAllocateIrp(vslice_dummy_var_4228, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 1607} vslice_dummy_var_297 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    assume false;
    return;

  anon30_Then:
    call {:si_unique_call 1608} sdv_ExFreePool(0);
    call {:si_unique_call 1609} ExFreePoolWithTag(0, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    Mem_T.P_IRBIRP[packet_15] := 0;
    goto L74;

  anon38_Then:
    call {:si_unique_call 1610} ExFreePoolWithTag(0, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    Mem_T.P_IRBIRP[packet_15] := 0;
    goto L74;

  anon29_Then:
    assume {:partition} cnt >= 8;
    cnt := 640;
    call {:si_unique_call 1611} sdv_799 := ExAllocatePoolWithTag(512, cnt, -430742957);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    cnt := 0;
    goto L88;

  L88:
    call {:si_unique_call 1612} cnt, statusFifoElement_1, boogieTmp, vslice_dummy_var_298 := Sbp2PreAllocateLists_loop_L88(cnt, statusFifoElement_1, PdoExtension_24, boogieTmp, vslice_dummy_var_298);
    goto L88_last;

  L88_last:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} 15 > cnt;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc statusFifoElement_1;
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    call {:si_unique_call 1613} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1614} vslice_dummy_var_298 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    assume false;
    return;

  anon32_Then:
    goto L74;

  anon31_Then:
    assume {:partition} cnt >= 15;
    cnt := 1600;
    call {:si_unique_call 1615} sdv_800 := ExAllocatePoolWithTag(512, cnt, -499031469);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 1616} sdv_RtlZeroMemory(0, cnt);
    call {:si_unique_call 1617} AllocateIrpAndIrb(PdoExtension_24, packet_15);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_15] != 0;
    cnt := 0;
    goto L120;

  L120:
    call {:si_unique_call 1618} Tmp_2478, Tmp_2479, cnt, Tmp_2480, context_3, Tmp_2481, Tmp_2483, Tmp_2484, Tmp_2485, Tmp_2486, Tmp_2488, sdv_803, Tmp_2490, Tmp_2491, Tmp_2492, Tmp_2493, Tmp_2494, status_79, Tmp_2495, Tmp_2496, Tmp_2497, Tmp_2498, vslice_dummy_var_300 := Sbp2PreAllocateLists_loop_L120(Tmp_2478, Tmp_2479, cnt, Tmp_2480, context_3, Tmp_2481, Tmp_2483, Tmp_2484, Tmp_2485, Tmp_2486, Tmp_2488, sdv_803, Tmp_2490, Tmp_2491, Tmp_2492, Tmp_2493, Tmp_2494, packet_15, status_79, Tmp_2495, Tmp_2496, Tmp_2497, Tmp_2498, PdoExtension_24, vslice_dummy_var_300);
    goto L120_last;

  L120_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} 8 > cnt;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc context_3;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 1619} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(context_3), li2bplFunctionConstant378, 0);
    call {:si_unique_call 1620} KeInitializeTimer(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2497;
    assume {:nonnull} Tmp_2497 != 0;
    assume Tmp_2497 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2484;
    assume {:nonnull} Tmp_2484 != 0;
    assume Tmp_2484 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2490;
    assume {:nonnull} Tmp_2490 != 0;
    assume Tmp_2490 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2480;
    assume {:nonnull} Tmp_2480 != 0;
    assume Tmp_2480 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2481;
    assume {:nonnull} Tmp_2481 != 0;
    assume Tmp_2481 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2492;
    assume {:nonnull} Tmp_2492 != 0;
    assume Tmp_2492 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2485;
    assume {:nonnull} Tmp_2485 != 0;
    assume Tmp_2485 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2479;
    assume {:nonnull} Tmp_2479 != 0;
    assume Tmp_2479 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2483;
    assume {:nonnull} Tmp_2483 != 0;
    assume Tmp_2483 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2486;
    assume {:nonnull} Tmp_2486 != 0;
    assume Tmp_2486 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2493;
    assume {:nonnull} Tmp_2493 != 0;
    assume Tmp_2493 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2491;
    assume {:nonnull} Tmp_2491 != 0;
    assume Tmp_2491 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2495;
    assume {:nonnull} Tmp_2495 != 0;
    assume Tmp_2495 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2496;
    assume {:nonnull} Tmp_2496 != 0;
    assume Tmp_2496 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2488;
    assume {:nonnull} Tmp_2488 != 0;
    assume Tmp_2488 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2498;
    assume {:nonnull} Tmp_2498 != 0;
    assume Tmp_2498 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    call {:si_unique_call 1621} status_79 := Sbp2SendRequest#1(PdoExtension_24, Mem_T.P_IRBIRP[packet_15], 2);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_79 >= 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2494;
    assume {:nonnull} Tmp_2494 != 0;
    assume Tmp_2494 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    call {:si_unique_call 1622} sdv_803 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_15] != 0;
    assume Mem_T.P_IRBIRP[packet_15] > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2478;
    assume {:nonnull} Tmp_2478 != 0;
    assume Tmp_2478 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    havoc vslice_dummy_var_4229;
    Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_3)))] := vslice_dummy_var_4229;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 1623} vslice_dummy_var_300 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} 0 > status_79;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    call {:si_unique_call 1624} DeAllocateIrpAndIrb(PdoExtension_24, Mem_T.P_IRBIRP[packet_15]);
    goto L74;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    assume {:partition} cnt >= 8;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    call {:si_unique_call 1625} DeAllocateIrpAndIrb(PdoExtension_24, Mem_T.P_IRBIRP[packet_15]);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1626} boogieTmp := IoAllocateMdl(0, 4, 0, 0, 0);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_2477 := 0;
    goto L1;

  anon36_Then:
    goto L74;

  anon33_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_15] == 0;
    goto L74;

  anon41_Then:
    goto L74;

  anon40_Then:
    goto L74;
}



procedure {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int)
{
  var vslice_dummy_var_301: int;

  anon0:
    call {:si_unique_call 1627} vslice_dummy_var_301 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "WPP_SF_qq"} WPP_SF_qq(actual_Logger_33: int, actual_id_33: int, actual_TraceGuid_33: int, actual_s_p_e_c_i_a_l_117: int, actual_s_p_e_c_i_a_l_118: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qq"} WPP_SF_qq(actual_Logger_33: int, actual_id_33: int, actual_TraceGuid_33: int, actual_s_p_e_c_i_a_l_117: int, actual_s_p_e_c_i_a_l_118: int)
{
  var {:pointer} TraceGuid_33: int;
  var vslice_dummy_var_302: int;

  anon0:
    call {:si_unique_call 1628} vslice_dummy_var_302 := __HAVOC_malloc(4);
    TraceGuid_33 := actual_TraceGuid_33;
    return;
}



procedure {:origName "WPP_SF_qdSdd"} WPP_SF_qdSdd(actual_Logger_34: int, actual_id_34: int, actual_TraceGuid_34: int, actual_s_p_e_c_i_a_l_119: int, actual_s_p_e_c_i_a_l_120: int, actual_s_p_e_c_i_a_l_121: int, actual_s_p_e_c_i_a_l_122: int, actual_s_p_e_c_i_a_l_123: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qdSdd"} WPP_SF_qdSdd(actual_Logger_34: int, actual_id_34: int, actual_TraceGuid_34: int, actual_s_p_e_c_i_a_l_119: int, actual_s_p_e_c_i_a_l_120: int, actual_s_p_e_c_i_a_l_121: int, actual_s_p_e_c_i_a_l_122: int, actual_s_p_e_c_i_a_l_123: int)
{
  var {:pointer} Tmp_2504: int;
  var {:scalar} Tmp_2507: int;
  var {:scalar} sdv_811: int;
  var {:pointer} TraceGuid_34: int;
  var {:pointer} s_p_e_c_i_a_l_121: int;
  var vslice_dummy_var_303: int;

  anon0:
    call {:si_unique_call 1629} vslice_dummy_var_303 := __HAVOC_malloc(4);
    TraceGuid_34 := actual_TraceGuid_34;
    s_p_e_c_i_a_l_121 := actual_s_p_e_c_i_a_l_121;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_121 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_121 != 0;
    assume s_p_e_c_i_a_l_121 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2507 := (sdv_811 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_121 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_121 != 0;
    assume s_p_e_c_i_a_l_121 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2504 := s_p_e_c_i_a_l_121;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2504 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_121 == 0;
    goto L18;

  anon10_Then:
    Tmp_2507 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_121 == 0;
    goto L12;
}



procedure {:origName "GET_LUN"} GET_LUN(actual_PdoExtension_25: int) returns (Tmp_2511: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "GET_LUN"} GET_LUN(actual_PdoExtension_25: int) returns (Tmp_2511: int)
{
  var {:pointer} Tmp_2512: int;
  var {:pointer} PdoExtension_25: int;

  anon0:
    PdoExtension_25 := actual_PdoExtension_25;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    havoc Tmp_2512;
    assume {:nonnull} Tmp_2512 != 0;
    assume Tmp_2512 > 0;
    havoc Tmp_2511;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_2511 := 0;
    goto L1;
}



procedure {:origName "WPP_SF_qSDD"} WPP_SF_qSDD(actual_Logger_35: int, actual_id_35: int, actual_TraceGuid_35: int, actual_s_p_e_c_i_a_l_124: int, actual_s_p_e_c_i_a_l_125: int, actual_s_p_e_c_i_a_l_126: int, actual_s_p_e_c_i_a_l_127: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qSDD"} WPP_SF_qSDD(actual_Logger_35: int, actual_id_35: int, actual_TraceGuid_35: int, actual_s_p_e_c_i_a_l_124: int, actual_s_p_e_c_i_a_l_125: int, actual_s_p_e_c_i_a_l_126: int, actual_s_p_e_c_i_a_l_127: int)
{
  var {:scalar} Tmp_2515: int;
  var {:scalar} sdv_813: int;
  var {:pointer} Tmp_2518: int;
  var {:pointer} TraceGuid_35: int;
  var {:pointer} s_p_e_c_i_a_l_125: int;
  var vslice_dummy_var_304: int;

  anon0:
    call {:si_unique_call 1630} vslice_dummy_var_304 := __HAVOC_malloc(4);
    TraceGuid_35 := actual_TraceGuid_35;
    s_p_e_c_i_a_l_125 := actual_s_p_e_c_i_a_l_125;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_125 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_125 != 0;
    assume s_p_e_c_i_a_l_125 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2515 := (sdv_813 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_125 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_125 != 0;
    assume s_p_e_c_i_a_l_125 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2518 := s_p_e_c_i_a_l_125;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2518 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_125 == 0;
    goto L18;

  anon10_Then:
    Tmp_2515 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_125 == 0;
    goto L12;
}



procedure {:origName "RtlFailFast"} RtlFailFast(actual_Code: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "RtlFailFast"} RtlFailFast(actual_Code: int)
{
  var vslice_dummy_var_305: int;

  anon0:
    call {:si_unique_call 1631} vslice_dummy_var_305 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "GET_DEVICE_NAME"} GET_DEVICE_NAME(actual_PdoExtension_27: int) returns (Tmp_2552: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "GET_DEVICE_NAME"} GET_DEVICE_NAME(actual_PdoExtension_27: int) returns (Tmp_2552: int)
{
  var {:pointer} Tmp_2554: int;
  var {:pointer} Tmp_2555: int;
  var {:pointer} PdoExtension_27: int;

  anon0:
    PdoExtension_27 := actual_PdoExtension_27;
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    havoc Tmp_2555;
    assume {:nonnull} Tmp_2555 != 0;
    assume Tmp_2555 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    havoc Tmp_2554;
    assume {:nonnull} Tmp_2554 != 0;
    assume Tmp_2554 > 0;
    havoc Tmp_2552;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto L4;

  L4:
    Tmp_2552 := strConst__li2bpl63;
    goto L1;

  anon5_Then:
    goto L4;
}



procedure {:origName "WPP_SF_qDD"} WPP_SF_qDD(actual_Logger_36: int, actual_id_36: int, actual_TraceGuid_36: int, actual_s_p_e_c_i_a_l_128: int, actual_s_p_e_c_i_a_l_129: int, actual_s_p_e_c_i_a_l_130: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qDD"} WPP_SF_qDD(actual_Logger_36: int, actual_id_36: int, actual_TraceGuid_36: int, actual_s_p_e_c_i_a_l_128: int, actual_s_p_e_c_i_a_l_129: int, actual_s_p_e_c_i_a_l_130: int)
{
  var {:pointer} TraceGuid_36: int;
  var vslice_dummy_var_306: int;

  anon0:
    call {:si_unique_call 1632} vslice_dummy_var_306 := __HAVOC_malloc(4);
    TraceGuid_36 := actual_TraceGuid_36;
    return;
}



procedure {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_8: int, actual_DeviceRelations: int) returns (Tmp_2559: int);
  modifies alloc, Mem_T.P_IRBIRP, LockDepth, Mem_T.P_DEVICE_OBJECT, Mem_T.LogStart__DEBUG_LOG, Mem_T.PVOID, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_8: int, actual_DeviceRelations: int) returns (Tmp_2559: int)
{
  var {:scalar} i_9: int;
  var {:scalar} Tmp_2560: int;
  var {:pointer} Tmp_2561: int;
  var {:scalar} Tmp_2562: int;
  var {:scalar} Tmp_2563: int;
  var {:scalar} Tmp_2564: int;
  var {:scalar} subStatus: int;
  var {:pointer} Tmp_2566: int;
  var {:pointer} pdoExtension_24: int;
  var {:pointer} workItem_1: int;
  var {:scalar} Status_3: int;
  var {:scalar} Tmp_2568: int;
  var {:scalar} Tmp_2569: int;
  var {:pointer} Tmp_2570: int;
  var {:pointer} Tmp_2571: int;
  var {:pointer} Tmp_2572: int;
  var {:scalar} Tmp_2573: int;
  var {:pointer} Tmp_2574: int;
  var {:pointer} Tmp_2575: int;
  var {:pointer} Tmp_2576: int;
  var {:scalar} Tmp_2577: int;
  var {:pointer} PdoExtension_28: int;
  var {:scalar} Tmp_2578: int;
  var {:pointer} Tmp_2579: int;
  var {:pointer} Tmp_2580: int;
  var {:scalar} Tmp_2581: int;
  var {:scalar} Tmp_2582: int;
  var {:pointer} Tmp_2583: int;
  var {:pointer} Tmp_2584: int;
  var {:pointer} Tmp_2586: int;
  var {:pointer} Tmp_2587: int;
  var {:pointer} Tmp_2588: int;
  var {:pointer} Tmp_2589: int;
  var {:scalar} Tmp_2590: int;
  var {:pointer} Tmp_2591: int;
  var {:scalar} status_81: int;
  var {:scalar} instanceNum: int;
  var {:pointer} Tmp_2592: int;
  var {:scalar} Tmp_2593: int;
  var {:scalar} Tmp_2594: int;
  var {:scalar} OrgLUNCount: int;
  var {:scalar} Tmp_2595: int;
  var {:scalar} Tmp_2596: int;
  var {:pointer} Tmp_2597: int;
  var {:pointer} Tmp_2598: int;
  var {:pointer} FdoExtension_8: int;
  var {:pointer} DeviceRelations: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;

  anon0:
    FdoExtension_8 := actual_FdoExtension_8;
    DeviceRelations := actual_DeviceRelations;
    call {:si_unique_call 1633} Tmp_2561 := __HAVOC_malloc(2680);
    call {:si_unique_call 1634} Tmp_2566 := __HAVOC_malloc(4);
    call {:si_unique_call 1635} Tmp_2572 := __HAVOC_malloc(2680);
    call {:si_unique_call 1636} Tmp_2575 := __HAVOC_malloc(4);
    call {:si_unique_call 1637} Tmp_2576 := __HAVOC_malloc(2680);
    call {:si_unique_call 1638} Tmp_2579 := __HAVOC_malloc(2680);
    call {:si_unique_call 1639} Tmp_2580 := __HAVOC_malloc(2680);
    call {:si_unique_call 1640} Tmp_2583 := __HAVOC_malloc(2680);
    call {:si_unique_call 1641} Tmp_2584 := __HAVOC_malloc(2680);
    call {:si_unique_call 1642} Tmp_2586 := __HAVOC_malloc(2680);
    call {:si_unique_call 1643} Tmp_2589 := __HAVOC_malloc(2680);
    call {:si_unique_call 1644} Tmp_2591 := __HAVOC_malloc(4);
    call {:si_unique_call 1645} Tmp_2592 := __HAVOC_malloc(2680);
    call {:si_unique_call 1646} Tmp_2597 := __HAVOC_malloc(2680);
    call {:si_unique_call 1647} Tmp_2598 := __HAVOC_malloc(2680);
    status_81 := 0;
    instanceNum := 0;
    OrgLUNCount := 0;
    PdoExtension_28 := 0;
    call {:si_unique_call 1648} sdv_do_paged_code_check();
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc OrgLUNCount;
    call {:si_unique_call 1649} status_81 := Sbp2Get1394ConfigInfo(FdoExtension_8, 0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_81 >= 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(FdoExtension_8)], 8) != 0;
    status_81 := -1073741823;
    goto L27;

  L27:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2597;
    assume {:nonnull} Tmp_2597 != 0;
    assume Tmp_2597 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2597)] != 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2579;
    assume {:nonnull} Tmp_2579 != 0;
    assume Tmp_2579 > 0;
    Tmp_2570 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2579)];
    assume {:nonnull} Tmp_2570 != 0;
    assume Tmp_2570 > 0;
    PdoExtension_28 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2570)];
    goto L28;

  L28:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} PdoExtension_28 != 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2598;
    assume {:nonnull} Tmp_2598 != 0;
    assume Tmp_2598 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    i_9 := 0;
    goto L35;

  L35:
    call {:si_unique_call 1650} i_9, Tmp_2581, Tmp_2586 := Sbp2CreateDeviceRelations_loop_L35(i_9, Tmp_2581, Tmp_2586, OrgLUNCount, FdoExtension_8);
    goto L35_last;

  L35_last:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} OrgLUNCount > i_9;
    Tmp_2581 := i_9;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2586;
    assume {:nonnull} Tmp_2586 != 0;
    assume Tmp_2586 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2586 + Tmp_2581 * 268)] != 0;
    i_9 := i_9 + 1;
    goto anon64_Else_dummy;

  anon64_Else_dummy:
    assume false;
    return;

  anon64_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2586 + Tmp_2581 * 268)] == 0;
    goto L36;

  L36:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_81 < 0;
    call {:si_unique_call 1651} Status_3 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Status_3 >= 0;
    call {:si_unique_call 1652} workItem_1 := IoAllocateWorkItem(0);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} workItem_1 != 0;
    call {:si_unique_call 1653} IoQueueWorkItem#1(workItem_1, li2bplFunctionConstant389, 0, workItem_1);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    goto L30;

  L30:
    Tmp_2559 := status_81;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:partition} workItem_1 == 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    call {:si_unique_call 1654} vslice_dummy_var_307 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(FdoExtension_8), 0);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    goto L30;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    assume {:partition} 0 > Status_3;
    goto L30;

  anon65_Then:
    assume {:partition} 0 <= status_81;
    goto L30;

  anon52_Then:
    assume {:partition} i_9 >= OrgLUNCount;
    goto L36;

  anon63_Then:
    goto L30;

  anon51_Then:
    assume {:partition} PdoExtension_28 == 0;
    goto L30;

  anon62_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2597)] == 0;
    goto L28;

  anon50_Then:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(FdoExtension_8)], 8) == 0;
    status_81 := 0;
    i_9 := 0;
    goto L58;

  L58:
    call {:si_unique_call 1655} i_9, Tmp_2560, Tmp_2561, Tmp_2562, Tmp_2563, Tmp_2564, subStatus, Tmp_2566, pdoExtension_24, Tmp_2568, Tmp_2569, Tmp_2571, Tmp_2572, Tmp_2573, Tmp_2574, Tmp_2576, Tmp_2577, Tmp_2578, Tmp_2580, Tmp_2582, Tmp_2583, Tmp_2584, Tmp_2588, Tmp_2589, Tmp_2590, Tmp_2591, status_81, instanceNum, Tmp_2592, Tmp_2594, Tmp_2595, Tmp_2596, vslice_dummy_var_308, vslice_dummy_var_309 := Sbp2CreateDeviceRelations_loop_L58(i_9, Tmp_2560, Tmp_2561, Tmp_2562, Tmp_2563, Tmp_2564, subStatus, Tmp_2566, pdoExtension_24, Tmp_2568, Tmp_2569, Tmp_2571, Tmp_2572, Tmp_2573, Tmp_2574, Tmp_2576, Tmp_2577, Tmp_2578, Tmp_2580, Tmp_2582, Tmp_2583, Tmp_2584, Tmp_2588, Tmp_2589, Tmp_2590, Tmp_2591, status_81, instanceNum, Tmp_2592, Tmp_2594, Tmp_2595, Tmp_2596, FdoExtension_8, DeviceRelations, vslice_dummy_var_308, vslice_dummy_var_309);
    goto L58_last;

  L58_last:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_2595 := i_9;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2580;
    assume {:nonnull} Tmp_2580 != 0;
    assume Tmp_2580 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2580 + Tmp_2595 * 268)] != 0;
    subStatus := 0;
    Tmp_2564 := i_9;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2572;
    assume {:nonnull} Tmp_2572 != 0;
    assume Tmp_2572 > 0;
    Tmp_2571 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2572 + Tmp_2564 * 268)];
    assume {:nonnull} Tmp_2571 != 0;
    assume Tmp_2571 > 0;
    pdoExtension_24 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2571)];
    assume {:nonnull} pdoExtension_24 != 0;
    assume pdoExtension_24 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    Tmp_2582 := instanceNum;
    instanceNum := instanceNum + 1;
    Tmp_2569 := Tmp_2582;
    Tmp_2590 := i_9;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2589;
    Tmp_2574 := Tmp_2589 + Tmp_2590 * 268;
    call {:si_unique_call 1656} subStatus := Sbp2ReInitializePdo(FdoExtension_8, Tmp_2574, Tmp_2569);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto L66;

  L66:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} subStatus >= 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2596;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2591;
    Tmp_2563 := i_9;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2584;
    assume {:nonnull} Tmp_2584 != 0;
    assume Tmp_2584 > 0;
    assume {:nonnull} Tmp_2591 != 0;
    assume Tmp_2591 > 0;
    Mem_T.P_DEVICE_OBJECT[Tmp_2591 + Tmp_2596 * 4] := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2584 + Tmp_2563 * 268)];
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_2594 := i_9;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2561;
    assume {:nonnull} Tmp_2561 != 0;
    assume Tmp_2561 > 0;
    call {:si_unique_call 1657} vslice_dummy_var_308 := sdv_ObReferenceObject(0);
    goto L73;

  L73:
    i_9 := i_9 + 1;
    goto L73_dummy;

  L73_dummy:
    assume false;
    return;

  anon56_Then:
    assume {:partition} 0 > subStatus;
    goto L73;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    goto L66;

  anon68_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2580 + Tmp_2595 * 268)] == 0;
    instanceNum := 0;
    goto L80;

  L80:
    call {:si_unique_call 1658} Tmp_2560, Tmp_2568, Tmp_2576, Tmp_2578, Tmp_2588, status_81, instanceNum := Sbp2CreateDeviceRelations_loop_L80(i_9, Tmp_2560, Tmp_2568, Tmp_2576, Tmp_2578, Tmp_2588, status_81, instanceNum, FdoExtension_8);
    goto L80_last;

  L80_last:
    Tmp_2568 := instanceNum;
    instanceNum := instanceNum + 1;
    Tmp_2578 := Tmp_2568;
    Tmp_2560 := i_9;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2576;
    Tmp_2588 := Tmp_2576 + Tmp_2560 * 268;
    call {:si_unique_call 1661} status_81 := Sbp2CreatePdo(FdoExtension_8, Tmp_2588, Tmp_2578);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_81 != -1073741771;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_81 < 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2575;
    assume {:nonnull} Tmp_2575 != 0;
    assume Tmp_2575 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc Tmp_2587;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2593;
    call {:si_unique_call 1659} WPP_SF_D(Tmp_2593, 100, Tmp_2587, status_81);
    goto L98;

  L98:
    Tmp_2559 := status_81;
    goto L1;

  anon60_Then:
    goto L98;

  anon72_Then:
    goto L98;

  anon59_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L98;

  anon58_Then:
    assume {:partition} 0 <= status_81;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2577;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2566;
    Tmp_2573 := i_9;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2592;
    assume {:nonnull} Tmp_2566 != 0;
    assume Tmp_2566 > 0;
    assume {:nonnull} Tmp_2592 != 0;
    assume Tmp_2592 > 0;
    Mem_T.P_DEVICE_OBJECT[Tmp_2566 + Tmp_2577 * 4] := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2592 + Tmp_2573 * 268)];
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_2562 := i_9;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2583;
    assume {:nonnull} Tmp_2583 != 0;
    assume Tmp_2583 > 0;
    call {:si_unique_call 1660} vslice_dummy_var_309 := sdv_ObReferenceObject(0);
    goto L73;

  anon57_Then:
    assume {:partition} status_81 == -1073741771;
    goto anon57_Then_dummy;

  anon57_Then_dummy:
    assume false;
    return;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    goto L27;

  anon49_Then:
    assume {:partition} 0 > status_81;
    Tmp_2559 := status_81;
    goto L1;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_51: int) returns (Tmp_2599: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_51: int) returns (Tmp_2599: int)
{
  var {:scalar} Tmp_2600: int;
  var {:scalar} errorId: int;
  var {:scalar} waitValue_6: int;
  var {:pointer} sdv_838: int;
  var {:scalar} Tmp_2601: int;
  var {:pointer} Tmp_2602: int;
  var {:pointer} pdoExtension_25: int;
  var {:pointer} Tmp_2603: int;
  var {:pointer} Tmp_2604: int;
  var {:pointer} Tmp_2605: int;
  var {:pointer} Tmp_2606: int;
  var {:pointer} Tmp_2607: int;
  var {:pointer} Tmp_2608: int;
  var {:pointer} Tmp_2609: int;
  var {:scalar} sdv_840: int;
  var {:scalar} sdv_841: int;
  var {:pointer} Tmp_2610: int;
  var {:scalar} Tmp_2611: int;
  var {:scalar} Tmp_2612: int;
  var {:pointer} sdv_843: int;
  var {:pointer} Tmp_2613: int;
  var {:pointer} Tmp_2614: int;
  var {:pointer} Tmp_2615: int;
  var {:pointer} Tmp_2616: int;
  var {:scalar} Tmp_2617: int;
  var {:pointer} Tmp_2618: int;
  var {:scalar} Tmp_2619: int;
  var {:pointer} Tmp_2620: int;
  var {:pointer} Tmp_2621: int;
  var {:pointer} Tmp_2622: int;
  var {:pointer} Tmp_2623: int;
  var {:scalar} Tmp_2624: int;
  var {:scalar} Tmp_2625: int;
  var {:scalar} enabledBusResetNotification: int;
  var {:pointer} Tmp_2626: int;
  var {:scalar} Tmp_2627: int;
  var {:pointer} Tmp_2628: int;
  var {:pointer} Tmp_2629: int;
  var {:pointer} Tmp_2630: int;
  var {:pointer} Tmp_2631: int;
  var {:pointer} Tmp_2632: int;
  var {:pointer} Tmp_2633: int;
  var {:pointer} Tmp_2634: int;
  var {:pointer} Tmp_2635: int;
  var {:scalar} Tmp_2636: int;
  var {:pointer} Tmp_2637: int;
  var {:pointer} Tmp_2638: int;
  var {:pointer} Tmp_2639: int;
  var {:scalar} Tmp_2640: int;
  var {:pointer} fdoDeviceExtension: int;
  var {:scalar} Tmp_2641: int;
  var {:scalar} Tmp_2642: int;
  var {:pointer} Tmp_2643: int;
  var {:pointer} Tmp_2644: int;
  var {:scalar} Tmp_2645: int;
  var {:pointer} Tmp_2646: int;
  var {:pointer} Tmp_2647: int;
  var {:pointer} fdoExtension_15: int;
  var {:scalar} Tmp_2648: int;
  var {:pointer} sdv_854: int;
  var {:pointer} Tmp_2649: int;
  var {:pointer} Tmp_2650: int;
  var {:pointer} Tmp_2651: int;
  var {:scalar} Tmp_2652: int;
  var {:scalar} status_82: int;
  var {:scalar} Tmp_2654: int;
  var {:pointer} Tmp_2655: int;
  var {:scalar} Tmp_2656: int;
  var {:scalar} Tmp_2658: int;
  var {:pointer} DeviceObject_51: int;
  var boogieTmp: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_4230: int;
  var vslice_dummy_var_4231: int;
  var vslice_dummy_var_4232: int;
  var vslice_dummy_var_4233: int;
  var vslice_dummy_var_4234: int;

  anon0:
    call {:si_unique_call 1662} waitValue_6 := __HAVOC_malloc(20);
    DeviceObject_51 := actual_DeviceObject_51;
    call {:si_unique_call 1663} Tmp_2605 := __HAVOC_malloc(4);
    call {:si_unique_call 1664} Tmp_2606 := __HAVOC_malloc(4);
    call {:si_unique_call 1665} Tmp_2607 := __HAVOC_malloc(4);
    call {:si_unique_call 1666} Tmp_2608 := __HAVOC_malloc(4);
    call {:si_unique_call 1667} Tmp_2610 := __HAVOC_malloc(4);
    call {:si_unique_call 1668} Tmp_2613 := __HAVOC_malloc(4);
    call {:si_unique_call 1669} Tmp_2614 := __HAVOC_malloc(4);
    call {:si_unique_call 1670} Tmp_2622 := __HAVOC_malloc(4);
    call {:si_unique_call 1671} Tmp_2623 := __HAVOC_malloc(4);
    call {:si_unique_call 1672} Tmp_2644 := __HAVOC_malloc(4);
    call {:si_unique_call 1673} Tmp_2646 := __HAVOC_malloc(4);
    call {:si_unique_call 1674} Tmp_2651 := __HAVOC_malloc(4);
    call {:si_unique_call 1675} Tmp_2655 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_51 != 0;
    assume DeviceObject_51 > 0;
    pdoExtension_25 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_51)];
    assume {:nonnull} DeviceObject_51 != 0;
    assume DeviceObject_51 > 0;
    fdoExtension_15 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_51)];
    enabledBusResetNotification := 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    Tmp_2599 := -1073741130;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon166_Then:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2630;
    assume {:nonnull} Tmp_2630 != 0;
    assume Tmp_2630 > 0;
    fdoDeviceExtension := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2630)];
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc vslice_dummy_var_4230;
    call {:si_unique_call 1676} vslice_dummy_var_316 := Sbp2ConfigLegacyDevice(DeviceObject_51, vslice_dummy_var_4230);
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2615;
    assume {:nonnull} Tmp_2615 != 0;
    assume Tmp_2615 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} fdoDeviceExtension != 0;
    assume fdoDeviceExtension > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoDeviceExtension)] := BOR(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoDeviceExtension)], 16777216);
    goto L20;

  L20:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    call {:si_unique_call 1677} status_82 := Sbp2InitializeDeviceExtension#1(pdoExtension_25);
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} yogi_error != 1;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} status_82 >= 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2606;
    assume {:nonnull} Tmp_2606 != 0;
    assume Tmp_2606 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    havoc Tmp_2650;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2656;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2621;
    assume {:nonnull} Tmp_2621 != 0;
    assume Tmp_2621 > 0;
    havoc vslice_dummy_var_4231;
    call {:si_unique_call 1678} WPP_SF_qD(Tmp_2656, 17, Tmp_2650, pdoExtension_25, vslice_dummy_var_4231);
    goto L31;

  L31:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2602;
    assume {:nonnull} Tmp_2602 != 0;
    assume Tmp_2602 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} Tmp_2602 != 0;
    assume Tmp_2602 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} Tmp_2602 != 0;
    assume Tmp_2602 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    goto L42;

  L42:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2614;
    assume {:nonnull} Tmp_2614 != 0;
    assume Tmp_2614 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    havoc Tmp_2631;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2642;
    call {:si_unique_call 1679} WPP_SF_q(Tmp_2642, 18, Tmp_2631, pdoExtension_25);
    goto L39;

  L39:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2618;
    assume {:nonnull} Tmp_2618 != 0;
    assume Tmp_2618 > 0;
    call {:si_unique_call 1680} status_82 := Sbp2EnableBusResetNotification#1(Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2618)], 1);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} yogi_error != 1;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} status_82 >= 0;
    enabledBusResetNotification := 1;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    call {:si_unique_call 1681} vslice_dummy_var_313 := KeResetEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_25));
    call {:si_unique_call 1682} status_82 := Sbp2Issue1394BusReset#1(pdoExtension_25);
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} yogi_error != 1;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} status_82 < 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2651;
    assume {:nonnull} Tmp_2651 != 0;
    assume Tmp_2651 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    havoc Tmp_2649;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2654;
    call {:si_unique_call 1683} WPP_SF_qD(Tmp_2654, 19, Tmp_2649, pdoExtension_25, status_82);
    goto L265;

  L265:
    call {:si_unique_call 1684} sdv_840 := IsDeviceGone#1(pdoExtension_25, status_82);
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} yogi_error != 1;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} sdv_840 != 0;
    errorId := 997;
    goto L169;

  L169:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} status_82 >= 0;
    assume {:nonnull} DeviceObject_51 != 0;
    assume DeviceObject_51 > 0;
    goto L174;

  L174:
    Tmp_2599 := status_82;
    goto L1;

  anon189_Then:
    assume {:partition} 0 > status_82;
    call {:si_unique_call 1685} Sbp2CreateRequestErrorLog(DeviceObject_51, 0, errorId, status_82);
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2655;
    assume {:nonnull} Tmp_2655 != 0;
    assume Tmp_2655 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    havoc Tmp_2634;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2601;
    call {:si_unique_call 1686} WPP_SF_qD(Tmp_2601, 28, Tmp_2634, pdoExtension_25, status_82);
    goto L179;

  L179:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} enabledBusResetNotification != 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2620;
    assume {:nonnull} Tmp_2620 != 0;
    assume Tmp_2620 > 0;
    call {:si_unique_call 1687} vslice_dummy_var_314 := Sbp2EnableBusResetNotification#1(Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2620)], 0);
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} yogi_error != 1;
    goto L174;

  anon224_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon223_Then:
    assume {:partition} enabledBusResetNotification == 0;
    goto L174;

  anon191_Then:
    goto L179;

  anon222_Then:
    goto L179;

  anon190_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L179;

  anon207_Then:
    assume {:partition} sdv_840 == 0;
    goto L73;

  L73:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2613;
    assume {:nonnull} Tmp_2613 != 0;
    assume Tmp_2613 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    call {:si_unique_call 1688} Tmp_2627 := corral_nondet();
    call {:si_unique_call 1689} sdv_854 := GET_DEVICE_NAME(pdoExtension_25);
    call {:si_unique_call 1690} sdv_841 := GET_LUN(pdoExtension_25);
    havoc Tmp_2628;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2652;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2616;
    assume {:nonnull} Tmp_2616 != 0;
    assume Tmp_2616 > 0;
    havoc vslice_dummy_var_4232;
    call {:si_unique_call 1691} WPP_SF_qdSdd(Tmp_2652, 20, Tmp_2628, pdoExtension_25, sdv_841, sdv_854, vslice_dummy_var_4232, Tmp_2627);
    goto L74;

  L74:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2633;
    assume {:nonnull} Tmp_2633 != 0;
    assume Tmp_2633 > 0;
    assume {:nonnull} waitValue_6 != 0;
    assume waitValue_6 > 0;
    call {:si_unique_call 1692} status_82 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} status_82 != 0;
    goto L99;

  L99:
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2605;
    assume {:nonnull} Tmp_2605 != 0;
    assume Tmp_2605 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    call {:si_unique_call 1693} sdv_843 := GET_DEVICE_NAME(pdoExtension_25);
    havoc Tmp_2632;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2611;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc vslice_dummy_var_4233;
    call {:si_unique_call 1694} WPP_SF_qSDD(Tmp_2611, 21, Tmp_2632, pdoExtension_25, sdv_843, status_82, vslice_dummy_var_4233);
    goto L100;

  L100:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    goto L251;

  L251:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2610;
    assume {:nonnull} Tmp_2610 != 0;
    assume Tmp_2610 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    call {:si_unique_call 1695} sdv_838 := GET_DEVICE_NAME(pdoExtension_25);
    havoc Tmp_2609;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2617;
    call {:si_unique_call 1696} WPP_SF_qSD(Tmp_2617, 22, Tmp_2609, pdoExtension_25, sdv_838, status_82);
    goto L252;

  L252:
    errorId := 1052;
    goto L169;

  anon204_Then:
    goto L252;

  anon221_Then:
    goto L252;

  anon203_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L252;

  anon178_Then:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    goto L251;

  anon180_Then:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    call {:si_unique_call 1697} vslice_dummy_var_310 := Sbp2AccessRegister#1(pdoExtension_25, Reserved__DEVICE_EXTENSION(pdoExtension_25), 258);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    call {:si_unique_call 1698} vslice_dummy_var_311 := Sbp2AccessRegister#1(pdoExtension_25, Reserved__DEVICE_EXTENSION(pdoExtension_25), 272);
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto L126;

  L126:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    call {:si_unique_call 1699} status_82 := Sbp2IssueInternalCommand(pdoExtension_25, 18);
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} yogi_error != 1;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} status_82 >= 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2608;
    assume {:nonnull} Tmp_2608 != 0;
    assume Tmp_2608 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2640;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2629;
    assume {:nonnull} Tmp_2629 != 0;
    assume Tmp_2629 > 0;
    havoc Tmp_2600;
    havoc Tmp_2639;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2658;
    call {:si_unique_call 1700} WPP_SF_qDD(Tmp_2658, 23, Tmp_2639, pdoExtension_25, Tmp_2600, Tmp_2640);
    goto L129;

  L129:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2603;
    assume {:nonnull} Tmp_2603 != 0;
    assume Tmp_2603 > 0;
    havoc Tmp_2612;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2623;
    assume {:nonnull} Tmp_2623 != 0;
    assume Tmp_2623 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2604;
    assume {:nonnull} Tmp_2604 != 0;
    assume Tmp_2604 > 0;
    havoc Tmp_2624;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2648;
    havoc Tmp_2637;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2636;
    call {:si_unique_call 1701} WPP_SF_qDD(Tmp_2636, 26, Tmp_2637, pdoExtension_25, Tmp_2648, Tmp_2624);
    goto L210;

  L210:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc Tmp_2638;
    assume {:nonnull} Tmp_2638 != 0;
    assume Tmp_2638 > 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto L205;

  L205:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    goto L221;

  L221:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} status_82 >= 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    call {:si_unique_call 1702} CleanupOrbList#1(pdoExtension_25, -1073741248);
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1703} vslice_dummy_var_312 := Sbp2ManagementTransaction#1(pdoExtension_25, 7, -1);
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} yogi_error != 1;
    goto L169;

  anon234_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon233_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon197_Then:
    assume {:partition} 0 > status_82;
    goto L169;

  anon193_Then:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} status_82 >= 0;
    call {:si_unique_call 1704} status_82 := Sbp2IssueInternalCommand(pdoExtension_25, 26);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} status_82 < 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2622;
    assume {:nonnull} Tmp_2622 != 0;
    assume Tmp_2622 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_2635;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2625;
    call {:si_unique_call 1705} WPP_SF_q(Tmp_2625, 27, Tmp_2635, pdoExtension_25);
    goto L241;

  L241:
    errorId := 1196;
    goto L169;

  anon202_Then:
    goto L241;

  anon236_Then:
    goto L241;

  anon201_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L241;

  anon200_Then:
    assume {:partition} 0 <= status_82;
    goto L169;

  anon235_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon199_Then:
    assume {:partition} 0 > status_82;
    goto L169;

  anon198_Then:
    goto L169;

  anon196_Then:
    goto L221;

  anon195_Then:
    goto L210;

  anon232_Then:
    goto L210;

  anon194_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L210;

  anon231_Then:
    goto L205;

  anon184_Then:
    goto L129;

  anon230_Then:
    goto L129;

  anon183_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L129;

  anon181_Then:
    assume {:partition} 0 > status_82;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} status_82 == -1073741632;
    goto L153;

  L153:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2646;
    assume {:nonnull} Tmp_2646 != 0;
    assume Tmp_2646 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_2647;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2619;
    call {:si_unique_call 1706} WPP_SF_qD(Tmp_2619, 24, Tmp_2647, pdoExtension_25, status_82);
    goto L154;

  L154:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    call {:si_unique_call 1707} vslice_dummy_var_315 := Sbp2ManagementTransaction#1(pdoExtension_25, 7, -1);
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} yogi_error != 1;
    goto L162;

  L162:
    status_82 := -1073741435;
    errorId := 1136;
    goto L169;

  anon238_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon187_Then:
    goto L162;

  anon188_Then:
    goto L154;

  anon237_Then:
    goto L154;

  anon186_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L154;

  anon182_Then:
    assume {:partition} status_82 != -1073741632;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} status_82 != 17;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2607;
    assume {:nonnull} Tmp_2607 != 0;
    assume Tmp_2607 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_2626;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2645;
    call {:si_unique_call 1708} WPP_SF_qD(Tmp_2645, 25, Tmp_2626, pdoExtension_25, status_82);
    goto L196;

  L196:
    status_82 := 0;
    goto L129;

  anon192_Then:
    goto L196;

  anon240_Then:
    goto L196;

  anon239_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon185_Then:
    assume {:partition} status_82 == 17;
    goto L153;

  anon229_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon228_Then:
    goto L129;

  anon227_Then:
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    call {:si_unique_call 1709} boogieTmp := PoRegisterDeviceForIdleDetection(0, -1, -1, 4);
    goto L126;

  anon226_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon225_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon179_Then:
    goto L100;

  anon220_Then:
    goto L100;

  anon177_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L100;

  anon176_Then:
    assume {:partition} status_82 == 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    havoc status_82;
    goto L99;

  anon175_Then:
    goto L74;

  anon219_Then:
    goto L74;

  anon174_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L74;

  anon242_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon206_Then:
    goto L265;

  anon241_Then:
    goto L265;

  anon205_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L265;

  anon173_Then:
    assume {:partition} 0 <= status_82;
    goto L73;

  anon218_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon172_Then:
    assume {:partition} 0 > status_82;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    assume {:nonnull} pdoExtension_25 != 0;
    assume pdoExtension_25 > 0;
    call {:si_unique_call 1710} CleanupOrbList#1(pdoExtension_25, -1073741248);
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    errorId := 975;
    goto L169;

  anon243_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon217_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon171_Then:
    goto L39;

  anon216_Then:
    goto L39;

  anon215_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L39;

  anon209_Then:
    goto L39;

  anon210_Then:
    goto L42;

  anon214_Then:
    goto L42;

  anon170_Then:
    goto L31;

  anon213_Then:
    goto L31;

  anon169_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L31;

  anon168_Then:
    assume {:partition} 0 > status_82;
    errorId := 941;
    goto L169;

  anon212_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon244_Then:
    goto L20;

  anon167_Then:
    goto L20;

  anon211_Then:
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2644;
    assume {:nonnull} Tmp_2644 != 0;
    assume Tmp_2644 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    havoc Tmp_2643;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2641;
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    havoc vslice_dummy_var_4234;
    call {:si_unique_call 1711} WPP_SF_qD(Tmp_2641, 29, Tmp_2643, fdoExtension_15, vslice_dummy_var_4234);
    goto L300;

  L300:
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    assume {:nonnull} fdoExtension_15 != 0;
    assume fdoExtension_15 > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_15)] := 1;
    status_82 := 0;
    goto L174;

  anon208_Then:
    goto L300;

  anon246_Then:
    goto L300;

  anon245_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon165_Then:
    status_82 := -1073741810;
    goto L174;
}



procedure {:origName "WPP_SF_qd"} WPP_SF_qd(actual_Logger_37: int, actual_id_37: int, actual_TraceGuid_37: int, actual_s_p_e_c_i_a_l_131: int, actual_s_p_e_c_i_a_l_132: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qd"} WPP_SF_qd(actual_Logger_37: int, actual_id_37: int, actual_TraceGuid_37: int, actual_s_p_e_c_i_a_l_131: int, actual_s_p_e_c_i_a_l_132: int)
{
  var {:pointer} TraceGuid_37: int;
  var vslice_dummy_var_317: int;

  anon0:
    call {:si_unique_call 1712} vslice_dummy_var_317 := __HAVOC_malloc(4);
    TraceGuid_37 := actual_TraceGuid_37;
    return;
}



procedure {:origName "Sbp2HandleApiRequest"} Sbp2HandleApiRequest(actual_DeviceExtension_12: int, actual_Irp_31: int) returns (Tmp_2662: int);
  modifies alloc, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2HandleApiRequest"} Sbp2HandleApiRequest(actual_DeviceExtension_12: int, actual_Irp_31: int) returns (Tmp_2662: int)
{
  var {:pointer} Tmp_2663: int;
  var {:pointer} irpStack_22: int;
  var {:pointer} Tmp_2664: int;
  var {:scalar} Tmp_2665: int;
  var {:pointer} Tmp_2667: int;
  var {:pointer} sbp2Req: int;
  var {:pointer} Tmp_2668: int;
  var {:scalar} Tmp_2669: int;
  var {:scalar} status_83: int;
  var {:pointer} Tmp_2670: int;
  var {:pointer} DeviceExtension_12: int;
  var {:pointer} Irp_31: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_4235: int;

  anon0:
    DeviceExtension_12 := actual_DeviceExtension_12;
    Irp_31 := actual_Irp_31;
    call {:si_unique_call 1713} Tmp_2663 := __HAVOC_malloc(4);
    call {:si_unique_call 1714} Tmp_2670 := __HAVOC_malloc(4);
    call {:si_unique_call 1715} irpStack_22 := sdv_IoGetCurrentIrpStackLocation(Irp_31);
    call {:si_unique_call 1716} status_83 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_83 >= 0;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    havoc sbp2Req;
    assume {:nonnull} irpStack_22 != 0;
    assume irpStack_22 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2663;
    assume {:nonnull} Tmp_2663 != 0;
    assume Tmp_2663 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_2668;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2669;
    assume {:nonnull} irpStack_22 != 0;
    assume irpStack_22 > 0;
    havoc vslice_dummy_var_4235;
    call {:si_unique_call 1717} WPP_SF_qDD(Tmp_2669, 67, Tmp_2668, DeviceExtension_12, vslice_dummy_var_4235, 24);
    goto L25;

  L25:
    status_83 := -1073741811;
    goto L34;

  L34:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    call {:si_unique_call 1718} vslice_dummy_var_318 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_12), Irp_31);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1719} sdv_IoCompleteRequest(0, 0);
    Tmp_2662 := status_83;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    goto L25;

  anon38_Then:
    goto L25;

  anon32_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon37_Then:
    goto L20;

  L20:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sbp2Req == 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2670;
    assume {:nonnull} Tmp_2670 != 0;
    assume Tmp_2670 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    havoc Tmp_2664;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2665;
    call {:si_unique_call 1720} WPP_SF_q(Tmp_2665, 68, Tmp_2664, DeviceExtension_12);
    goto L56;

  L56:
    status_83 := -1073741811;
    goto L34;

  anon36_Then:
    goto L56;

  anon42_Then:
    goto L56;

  anon35_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon31_Then:
    assume {:partition} sbp2Req != 0;
    status_83 := -1073741822;
    assume {:nonnull} sbp2Req != 0;
    assume sbp2Req > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    havoc Tmp_2667;
    assume {:nonnull} Tmp_2667 != 0;
    assume Tmp_2667 > 0;
    call {:si_unique_call 1721} status_83 := Sbp2Get1394ConfigInfo(Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2667)], sbp2Req);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    goto L34;

  anon40_Then:
    status_83 := -1073741811;
    goto L34;

  anon30_Then:
    assume {:nonnull} irpStack_22 != 0;
    assume irpStack_22 > 0;
    havoc sbp2Req;
    goto L20;

  anon29_Then:
    assume {:partition} 0 > status_83;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    call {:si_unique_call 1722} sdv_IoCompleteRequest(0, 0);
    Tmp_2662 := status_83;
    goto L1;
}



procedure {:origName "WPP_SF_S"} WPP_SF_S(actual_Logger_38: int, actual_id_38: int, actual_TraceGuid_38: int, actual_s_p_e_c_i_a_l_133: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_S"} WPP_SF_S(actual_Logger_38: int, actual_id_38: int, actual_TraceGuid_38: int, actual_s_p_e_c_i_a_l_133: int)
{
  var {:scalar} sdv_861: int;
  var {:pointer} Tmp_2674: int;
  var {:scalar} Tmp_2677: int;
  var {:pointer} TraceGuid_38: int;
  var {:pointer} s_p_e_c_i_a_l_133: int;
  var vslice_dummy_var_319: int;

  anon0:
    call {:si_unique_call 1723} vslice_dummy_var_319 := __HAVOC_malloc(4);
    TraceGuid_38 := actual_TraceGuid_38;
    s_p_e_c_i_a_l_133 := actual_s_p_e_c_i_a_l_133;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_133 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_133 != 0;
    assume s_p_e_c_i_a_l_133 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2677 := (sdv_861 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_133 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_133 != 0;
    assume s_p_e_c_i_a_l_133 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2674 := s_p_e_c_i_a_l_133;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2674 := strConst__li2bpl1;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_133 == 0;
    goto L18;

  anon10_Then:
    Tmp_2677 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_133 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qD"} WPP_SF_qD(actual_Logger_39: int, actual_id_39: int, actual_TraceGuid_39: int, actual_s_p_e_c_i_a_l_134: int, actual_s_p_e_c_i_a_l_135: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "WPP_SF_qD"} WPP_SF_qD(actual_Logger_39: int, actual_id_39: int, actual_TraceGuid_39: int, actual_s_p_e_c_i_a_l_134: int, actual_s_p_e_c_i_a_l_135: int)
{
  var {:pointer} TraceGuid_39: int;
  var vslice_dummy_var_320: int;

  anon0:
    call {:si_unique_call 1724} vslice_dummy_var_320 := __HAVOC_malloc(4);
    TraceGuid_39 := actual_TraceGuid_39;
    return;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.AR_Length__ADDRESS_RANGE"} {:fieldname "AR_Length"} AR_Length__ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Abandoned__DISPATCHER_HEADER"} {:fieldname "Abandoned"} Abandoned__DISPATCHER_HEADER(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Absolute__DISPATCHER_HEADER"} {:fieldname "Absolute"} Absolute__DISPATCHER_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AcceleratedTransfer"} AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Action__BUS_RESET_ENTRY"} {:fieldname "Action"} Action__BUS_RESET_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__IO_SCSI_CAPABILITIES"} {:fieldname "AdapterScansDown"} AdapterScansDown__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterScansDown"} AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__IO_SCSI_CAPABILITIES"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AddressAndStatus__STATUS_FIFO_BLOCK"} {:fieldname "AddressAndStatus"} AddressAndStatus__STATUS_FIFO_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "AddressContext"} AddressContext__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "AddressHandle"} AddressHandle__ADDRESS_CONTEXT(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.AddressType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AddressType"} AddressType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "Address"} Address__ADDRESS_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "AddressesReturned"} AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.AffinitySet__DISPATCHER_HEADER"} {:fieldname "AffinitySet"} AffinitySet__DISPATCHER_HEADER(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__IO_SCSI_CAPABILITIES"} {:fieldname "AlignmentMask"} AlignmentMask__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AlignmentMask"} AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentRequirement__DEVICE_OBJECT"} {:fieldname "AlignmentRequirement"} AlignmentRequirement__DEVICE_OBJECT(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.AllocateAddressRange_unnamed_tag_72"} {:fieldname "AllocateAddressRange"} AllocateAddressRange_unnamed_tag_72(x: int) : int
{
  x + 472
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__CDB6INQUIRY"} {:fieldname "AllocationLength"} AllocationLength__CDB6INQUIRY(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__MODE_SENSE"} {:fieldname "AllocationLength"} AllocationLength__MODE_SENSE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AppendToNextContextToFree__DEVICE_EXTENSION"} {:fieldname "AppendToNextContextToFree"} AppendToNextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 748
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_42"} {:fieldname "Argument1"} Argument1_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_1"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AsyncContextBase__DEVICE_EXTENSION"} {:fieldname "AsyncContextBase"} AsyncContextBase__DEVICE_EXTENSION(x: int) : int
{
  x + 4524
}

function {:inline true} {:fieldmap "Mem_T.AsyncRead_unnamed_tag_72"} {:fieldname "AsyncRead"} AsyncRead_unnamed_tag_72(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncReqCtx__ARCP_ORB"} {:fieldname "AsyncReqCtx"} AsyncReqCtx__ARCP_ORB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncWrite_unnamed_tag_72"} {:fieldname "AsyncWrite"} AsyncWrite_unnamed_tag_72(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BlockDescriptorLength__MODE_PARAMETER_HEADER"} {:fieldname "BlockDescriptorLength"} BlockDescriptorLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BlockLength__MODE_PARAMETER_BLOCK"} {:fieldname "BlockLength"} BlockLength__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Buffer"} Buffer__STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Buffer"} Buffer_unnamed_tag_74(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BusAddress__OCTLET"} {:fieldname "BusAddress"} BusAddress__OCTLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusFdo__DEVICE_EXTENSION"} {:fieldname "BusFdo"} BusFdo__DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMajorVersion"} BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMinorVersion"} BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "BusRequestContextPool"} BusRequestContextPool__DEVICE_EXTENSION(x: int) : int
{
  x + 4388
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "BusRequestIrpIrbListHead"} BusRequestIrpIrbListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4500
}

function {:inline true} {:fieldmap "Mem_T.BusRequestLock__DEVICE_EXTENSION"} {:fieldname "BusRequestLock"} BusRequestLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4516
}

function {:inline true} {:fieldmap "Mem_T.BusResetEntryCount__DEVICE_EXTENSION"} {:fieldname "BusResetEntryCount"} BusResetEntryCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4776
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "BusResetEntry"} BusResetEntry__DEVICE_EXTENSION(x: int) : int
{
  x + 4768
}

function {:inline true} {:fieldmap "Mem_T.BusResetGeneration__BUS_RESET_ENTRY"} {:fieldname "BusResetGeneration"} BusResetGeneration__BUS_RESET_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BusResetGeneration__DEVICE_EXTENSION"} {:fieldname "BusResetGeneration"} BusResetGeneration__DEVICE_EXTENSION(x: int) : int
{
  x + 1424
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotification_unnamed_tag_72"} {:fieldname "BusResetNotification"} BusResetNotification_unnamed_tag_72(x: int) : int
{
  x + 1060
}

function {:inline true} {:fieldmap "Mem_T.BusResetPacket__FDO_DEVICE_EXTENSION"} {:fieldname "BusResetPacket"} BusResetPacket__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3468
}

function {:inline true} {:fieldmap "Mem_T.BusReset_unnamed_tag_72"} {:fieldname "BusReset"} BusReset_unnamed_tag_72(x: int) : int
{
  x + 972
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Busy__KDEVICE_QUEUE"} {:fieldname "Busy"} Busy__KDEVICE_QUEUE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte0_unnamed_tag_78"} {:fieldname "Byte0"} Byte0_unnamed_tag_78(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Byte1_unnamed_tag_78"} {:fieldname "Byte1"} Byte1_unnamed_tag_78(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Byte2_unnamed_tag_78"} {:fieldname "Byte2"} Byte2_unnamed_tag_78(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Byte3_unnamed_tag_78"} {:fieldname "Byte3"} Byte3_unnamed_tag_78(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Byte4_unnamed_tag_70"} {:fieldname "Byte4"} Byte4_unnamed_tag_70(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Byte5_unnamed_tag_70"} {:fieldname "Byte5"} Byte5_unnamed_tag_70(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte6_unnamed_tag_70"} {:fieldname "Byte6"} Byte6_unnamed_tag_70(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Byte7_unnamed_tag_70"} {:fieldname "Byte7"} Byte7_unnamed_tag_70(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ByteArray__OCTLET"} {:fieldname "ByteArray"} ByteArray__OCTLET(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.CDB10__CDB"} {:fieldname "CDB10"} CDB10__CDB(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.CDB6GENERIC__CDB"} {:fieldname "CDB6GENERIC"} CDB6GENERIC__CDB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CDB6INQUIRY__CDB"} {:fieldname "CDB6INQUIRY"} CDB6INQUIRY__CDB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.CR_Node_UniqueID__CONFIG_ROM"} {:fieldname "CR_Node_UniqueID"} CR_Node_UniqueID__CONFIG_ROM(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Callback"} Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_30"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_30(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CdbLength__SCSI_REQUEST_BLOCK"} {:fieldname "CdbLength"} CdbLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Cdb"} Cdb__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Characteristics__DEVICE_OBJECT"} {:fieldname "Characteristics"} Characteristics__DEVICE_OBJECT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "CmdOrbAddress"} CmdOrbAddress__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.CmdOrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "CmdOrb"} CmdOrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CmdOrbs__COMMON_BUFFER_DATA"} {:fieldname "CmdOrbs"} CmdOrbs__COMMON_BUFFER_DATA(x: int) : int
{
  x + 916
}

function {:inline true} {:fieldmap "Mem_T.CmdSetId__DEVICE_INFORMATION"} {:fieldname "CmdSetId"} CmdSetId__DEVICE_INFORMATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.CmdSetSpecId__DEVICE_INFORMATION"} {:fieldname "CmdSetSpecId"} CmdSetSpecId__DEVICE_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "CommonBufferContext"} CommonBufferContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1864
}

function {:inline true} {:fieldmap "Mem_T.CommonBuffer__DEVICE_EXTENSION"} {:fieldname "CommonBuffer"} CommonBuffer__DEVICE_EXTENSION(x: int) : int
{
  x + 1860
}

function {:inline true} {:fieldmap "Mem_T.Common__IO_REMOVE_LOCK"} {:fieldname "Common"} Common__IO_REMOVE_LOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Complete"} Complete__REQUEST_CONTEXT(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__DEVICE_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__DEVICE_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._CONFIG_ROM"} {:fieldname "ConfigRom"} ConfigRom__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3272
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ConsecutiveFailedRequestCount__DEVICE_EXTENSION"} {:fieldname "ConsecutiveFailedRequestCount"} ConsecutiveFailedRequestCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4788
}

function {:inline true} {:fieldmap "Mem_T.Contents__STATUS_FIFO_BLOCK"} {:fieldname "Contents"} Contents__STATUS_FIFO_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Context"} Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Context__NOTIFICATION_INFO_WXP"} {:fieldname "Context"} Context__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Control_WPP_PROJECT_CONTROL_BLOCK"} {:fieldname "Control"} Control_WPP_PROJECT_CONTROL_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Control__CDB6INQUIRY"} {:fieldname "Control"} Control__CDB6INQUIRY(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Control__IO_STACK_LOCATION"} {:fieldname "Control"} Control__IO_STACK_LOCATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Count__DEVICE_RELATIONS"} {:fieldname "Count"} Count__DEVICE_RELATIONS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CounterProfiling__DISPATCHER_HEADER"} {:fieldname "CounterProfiling"} CounterProfiling__DISPATCHER_HEADER(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.CrashDumpCount__DEVICE_EXTENSION"} {:fieldname "CrashDumpCount"} CrashDumpCount__DEVICE_EXTENSION(x: int) : int
{
  x + 780
}

function {:inline true} {:fieldmap "Mem_T.CsrRegisterBase__DEVICE_INFORMATION"} {:fieldname "CsrRegisterBase"} CsrRegisterBase__DEVICE_INFORMATION(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_High__LOGIN_RESPONSE"} {:fieldname "Csr_Off_High"} Csr_Off_High__LOGIN_RESPONSE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_Low__LOGIN_RESPONSE"} {:fieldname "Csr_Off_Low"} Csr_Off_Low__LOGIN_RESPONSE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CurrentGeneration__DEVICE_EXTENSION"} {:fieldname "CurrentGeneration"} CurrentGeneration__DEVICE_EXTENSION(x: int) : int
{
  x + 1420
}

function {:inline true} {:fieldmap "Mem_T.CurrentKey__DEVICE_EXTENSION"} {:fieldname "CurrentKey"} CurrentKey__DEVICE_EXTENSION(x: int) : int
{
  x + 436
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_6"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_6(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CycleProfiling__DISPATCHER_HEADER"} {:fieldname "CycleProfiling"} CycleProfiling__DISPATCHER_HEADER(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.DI_Length__DIRECTORY_INFO"} {:fieldname "DI_Length"} DI_Length__DIRECTORY_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1_LOG_ENTRY32"} {:fieldname "Data1"} Data1_LOG_ENTRY32(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2_LOG_ENTRY32"} {:fieldname "Data2"} Data2_LOG_ENTRY32(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "DataBuffer"} DataBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DataDescriptor__ORB_EXT_CMD"} {:fieldname "DataDescriptor"} DataDescriptor__ORB_EXT_CMD(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "DataMappingHandle"} DataMappingHandle__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.DataTransferLength__SCSI_REQUEST_BLOCK"} {:fieldname "DataTransferLength"} DataTransferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Data"} Data__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE"} {:fieldname "Dbd"} Dbd__MODE_SENSE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE10"} {:fieldname "Dbd"} Dbd__MODE_SENSE10(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._DEBUG_LOG"} {:fieldname "DbgLog"} DbgLog__DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.DebugActive__DISPATCHER_HEADER"} {:fieldname "DebugActive"} DebugActive__DISPATCHER_HEADER(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "DeferredPowerRequest"} DeferredPowerRequest__DEVICE_EXTENSION(x: int) : int
{
  x + 764
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DensityCode__MODE_PARAMETER_BLOCK"} {:fieldname "DensityCode"} DensityCode__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_READ"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_WRITE"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__REQUEST_CONTEXT"} {:fieldname "DeviceExtension"} DeviceExtension__REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.DeviceInfo__DEVICE_EXTENSION"} {:fieldname "DeviceInfo"} DeviceInfo__DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListEntry"} DeviceListEntry__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListHead"} DeviceListHead__KDEVICE_QUEUE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceListLock__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceListLock"} DeviceListLock__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 588
}

function {:inline true} {:fieldmap "Mem_T.DeviceListSize__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceListSize"} DeviceListSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 584
}

function {:inline true} {:fieldmap "Mem_T.DeviceList__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceList"} DeviceList__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 592
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "DeviceManagementTimeoutDpc"} DeviceManagementTimeoutDpc__DEVICE_EXTENSION(x: int) : int
{
  x + 4532
}

function {:inline true} {:fieldmap "Mem_T._MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "DeviceModeHeaderAndPage"} DeviceModeHeaderAndPage__DEVICE_EXTENSION(x: int) : int
{
  x + 1316
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ADDRESS_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ADDRESS_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ASYNC_REQUEST_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.P_DEVICE_OBJECT"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 752
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__FDO_DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE_ENTRY"} {:fieldname "DeviceQueueEntry"} DeviceQueueEntry_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE"} {:fieldname "DeviceQueue"} DeviceQueue__DEVICE_OBJECT(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.DeviceSpecificParameter__MODE_PARAMETER_HEADER"} {:fieldname "DeviceSpecificParameter"} DeviceSpecificParameter__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_35"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_35(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceTypeModifier__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceTypeModifier"} DeviceTypeModifier__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__INQUIRYDATA"} {:fieldname "DeviceType"} DeviceType__INQUIRYDATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceType"} DeviceType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.DirectoryHeader_unnamed_tag_80"} {:fieldname "DirectoryHeader"} DirectoryHeader_unnamed_tag_80(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DisableIncrement__DISPATCHER_HEADER"} {:fieldname "DisableIncrement"} DisableIncrement__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DpcActive__DISPATCHER_HEADER"} {:fieldname "DpcActive"} DpcActive__DISPATCHER_HEADER(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "DummyContext"} DummyContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1688
}

function {:inline true} {:fieldmap "Mem_T._ORB_EXT_CMD"} {:fieldname "Dummy"} Dummy__DEVICE_EXTENSION(x: int) : int
{
  x + 1460
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Elements__QUERY_LOGIN_RESPONSE"} {:fieldname "Elements"} Elements__QUERY_LOGIN_RESPONSE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.EncodedTolerableDelay__DISPATCHER_HEADER"} {:fieldname "EncodedTolerableDelay"} EncodedTolerableDelay__DISPATCHER_HEADER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "Event"} Event__REQUEST_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Expired__DISPATCHER_HEADER"} {:fieldname "Expired"} Expired__DISPATCHER_HEADER(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.ExtensionDataSpinLock__DEVICE_EXTENSION"} {:fieldname "ExtensionDataSpinLock"} ExtensionDataSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4528
}

function {:inline true} {:fieldmap "Mem_T.FifoMdl__ADDRESS_FIFO"} {:fieldname "FifoMdl"} FifoMdl__ADDRESS_FIFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSListHead"} FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSpinLock"} FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Fifo__NOTIFICATION_INFO_WXP"} {:fieldname "Fifo"} Fifo__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirmwareVersion__DEVICE_INFORMATION"} {:fieldname "FirmwareVersion"} FirmwareVersion__DEVICE_INFORMATION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.Flag_LOG_ENTRY32"} {:fieldname "Flag"} Flag_LOG_ENTRY32(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__ASYNC_REQUEST_CONTEXT"} {:fieldname "Flags"} Flags__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRB"} {:fieldname "Flags"} Flags__IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Flags"} Flags__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FreeAddressRange_unnamed_tag_72"} {:fieldname "FreeAddressRange"} FreeAddressRange_unnamed_tag_72(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "FreeContextListHead"} FreeContextListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4372
}

function {:inline true} {:fieldmap "Mem_T.FreeContextLock__DEVICE_EXTENSION"} {:fieldname "FreeContextLock"} FreeContextLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4520
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FunctionNumber__IRB"} {:fieldname "FunctionNumber"} FunctionNumber__IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Function__SCSI_REQUEST_BLOCK"} {:fieldname "Function"} Function__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__BUS_RESET_DATA"} {:fieldname "GenerationCount"} GenerationCount__BUS_RESET_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__IRB_REQ_GET_GENERATION_COUNT"} {:fieldname "GenerationCount"} GenerationCount__IRB_REQ_GET_GENERATION_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Generation__SBP2_BUSRESET_WORKITEM"} {:fieldname "Generation"} Generation__SBP2_BUSRESET_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Get1394AddressFromDeviceObject_unnamed_tag_72"} {:fieldname "Get1394AddressFromDeviceObject"} Get1394AddressFromDeviceObject_unnamed_tag_72(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T._IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "GetConfigurationInformation"} GetConfigurationInformation_unnamed_tag_72(x: int) : int
{
  x + 880
}

function {:inline true} {:fieldmap "Mem_T.GetGenerationCount_unnamed_tag_72"} {:fieldname "GetGenerationCount"} GetGenerationCount_unnamed_tag_72(x: int) : int
{
  x + 976
}

function {:inline true} {:fieldmap "Mem_T.GetLocalHostInformation_unnamed_tag_72"} {:fieldname "GetLocalHostInformation"} GetLocalHostInformation_unnamed_tag_72(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.GetMaxSpeedBetweenDevices_unnamed_tag_72"} {:fieldname "GetMaxSpeedBetweenDevices"} GetMaxSpeedBetweenDevices_unnamed_tag_72(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "GlobalStatusContext"} GlobalStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 4176
}

function {:inline true} {:fieldmap "Mem_T.GroupScheduling__DISPATCHER_HEADER"} {:fieldname "GroupScheduling"} GroupScheduling__DISPATCHER_HEADER(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.Hand__DISPATCHER_HEADER"} {:fieldname "Hand"} Hand__DISPATCHER_HEADER(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.HandleCount__DEVICE_EXTENSION"} {:fieldname "HandleCount"} HandleCount__DEVICE_EXTENSION(x: int) : int
{
  x + 784
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "HibernateCount"} HibernateCount__DEVICE_EXTENSION(x: int) : int
{
  x + 776
}

function {:inline true} {:fieldmap "Mem_T.High1Time__KSYSTEM_TIME"} {:fieldname "High1Time"} High1Time__KSYSTEM_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.High2Time__KSYSTEM_TIME"} {:fieldname "High2Time"} High2Time__KSYSTEM_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HighQuad_unnamed_tag_68"} {:fieldname "HighQuad"} HighQuad_unnamed_tag_68(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO2"} {:fieldname "HostControllerInformation"} HostControllerInformation__DEVICE_EXTENSION(x: int) : int
{
  x + 1440
}

function {:inline true} {:fieldmap "Mem_T.HostDDIMajorVersion__FDO_DEVICE_EXTENSION"} {:fieldname "HostDDIMajorVersion"} HostDDIMajorVersion__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3472
}

function {:inline true} {:fieldmap "Mem_T.HostDDIMinorVersion__FDO_DEVICE_EXTENSION"} {:fieldname "HostDDIMinorVersion"} HostDDIMinorVersion__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3476
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO4"} {:fieldname "HostRoutineAPI"} HostRoutineAPI__DEVICE_EXTENSION(x: int) : int
{
  x + 1452
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_ID__IO_ADDRESS"} {:fieldname "IA_Destination_ID"} IA_Destination_ID__IO_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_Offset__IO_ADDRESS"} {:fieldname "IA_Destination_Offset"} IA_Destination_Offset__IO_ADDRESS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IReserved__CDB6INQUIRY"} {:fieldname "IReserved"} IReserved__CDB6INQUIRY(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_34"} {:fieldname "IdType"} IdType_unnamed_tag_34(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IdleCounter__DEVICE_EXTENSION"} {:fieldname "IdleCounter"} IdleCounter__DEVICE_EXTENSION(x: int) : int
{
  x + 788
}

function {:inline true} {:fieldmap "Mem_T.InPath_unnamed_tag_36"} {:fieldname "InPath"} InPath_unnamed_tag_36(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Index__DEBUG_LOG"} {:fieldname "Index"} Index__DEBUG_LOG(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Index__DISPATCHER_HEADER"} {:fieldname "Index"} Index__DISPATCHER_HEADER(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "Information"} Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._NODE_ADDRESS"} {:fieldname "InitiatorAddressId"} InitiatorAddressId__DEVICE_EXTENSION(x: int) : int
{
  x + 1412
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_22"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_22(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._INQUIRYDATA"} {:fieldname "InquiryData"} InquiryData__DEVICE_EXTENSION(x: int) : int
{
  x + 804
}

function {:inline true} {:fieldmap "Mem_T.Inserted__DISPATCHER_HEADER"} {:fieldname "Inserted"} Inserted__DISPATCHER_HEADER(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.Inserted__KDEVICE_QUEUE_ENTRY"} {:fieldname "Inserted"} Inserted__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.InternalStatus__SCSI_REQUEST_BLOCK"} {:fieldname "InternalStatus"} InternalStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_22"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_22(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoCount__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "IoCount"} IoCount__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._IO_STATUS_BLOCK"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IoTimeoutValue__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "IoTimeoutValue"} IoTimeoutValue__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.IoWi__SBP2_BUSRESET_WORKITEM"} {:fieldname "IoWi"} IoWi__SBP2_BUSRESET_WORKITEM(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irb__IRBIRP"} {:fieldname "Irb"} Irb__IRBIRP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irp__IRBIRP"} {:fieldname "Irp"} Irp__IRBIRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Key_unnamed_tag_74"} {:fieldname "Key"} Key_unnamed_tag_74(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LUNResetSupported__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "LUNResetSupported"} LUNResetSupported__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LastStatusBlock__DEVICE_EXTENSION"} {:fieldname "LastStatusBlock"} LastStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.LastTransactionStatus__DEVICE_EXTENSION"} {:fieldname "LastTransactionStatus"} LastTransactionStatus__DEVICE_EXTENSION(x: int) : int
{
  x + 796
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "LegacyFlags"} LegacyFlags__DEVICE_INFORMATION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.LengthAndLoginId__LOGIN_RESPONSE"} {:fieldname "LengthAndLoginId"} LengthAndLoginId__LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthAndNumLogins__QUERY_LOGIN_RESPONSE"} {:fieldname "LengthAndNumLogins"} LengthAndNumLogins__QUERY_LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_QUERY_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_18"} {:fieldname "Length"} Length_unnamed_tag_18(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Level__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Level"} Level__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Link"} Link__BUS_RESET_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ListPointer__IRBIRP"} {:fieldname "ListPointer"} ListPointer__IRBIRP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.List__WORK_QUEUE_ITEM"} {:fieldname "List"} List__WORK_QUEUE_ITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LoadEject__START_STOP_RBC"} {:fieldname "LoadEject"} LoadEject__START_STOP_RBC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LockNV__DISPATCHER_HEADER"} {:fieldname "LockNV"} LockNV__DISPATCHER_HEADER(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.LockQueue__KLOCK_QUEUE_HANDLE"} {:fieldname "LockQueue"} LockQueue__KLOCK_QUEUE_HANDLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Lock__DISPATCHER_HEADER"} {:fieldname "Lock"} Lock__DISPATCHER_HEADER(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.Lock__KSPIN_LOCK_QUEUE"} {:fieldname "Lock"} Lock__KSPIN_LOCK_QUEUE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LogEnd__DEBUG_LOG"} {:fieldname "LogEnd"} LogEnd__DEBUG_LOG(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LogEntry__DEVICE_EXTENSION"} {:fieldname "LogEntry"} LogEntry__DEVICE_EXTENSION(x: int) : int
{
  x + 4792
}

function {:inline true} {:fieldmap "Mem_T.LogStart__DEBUG_LOG"} {:fieldname "LogStart"} LogStart__DEBUG_LOG(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Logger__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Logger"} Logger__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "LogicalBlockSize"} LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LogicalUnitNumber__CDB6INQUIRY"} {:fieldname "LogicalUnitNumber"} LogicalUnitNumber__CDB6INQUIRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.LoginRespContext__DEVICE_EXTENSION"} {:fieldname "LoginRespContext"} LoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2704
}

function {:inline true} {:fieldmap "Mem_T.LoginResponseAddress__ORB_LOGIN"} {:fieldname "LoginResponseAddress"} LoginResponseAddress__ORB_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T._LOGIN_RESPONSE"} {:fieldname "LoginResponse"} LoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.LoginResponse__DEVICE_EXTENSION"} {:fieldname "LoginResponse"} LoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2700
}

function {:inline true} {:fieldmap "Mem_T.LowPart__KSYSTEM_TIME"} {:fieldname "LowPart"} LowPart__KSYSTEM_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowQuad_unnamed_tag_68"} {:fieldname "LowQuad"} LowQuad_unnamed_tag_68(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.Lun__DEVICE_INFORMATION"} {:fieldname "Lun"} Lun__DEVICE_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MODE_SELECT__CDB"} {:fieldname "MODE_SELECT"} MODE_SELECT__CDB(x: int) : int
{
  x + 1944
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE10__CDB"} {:fieldname "MODE_SENSE10"} MODE_SENSE10__CDB(x: int) : int
{
  x + 1888
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE__CDB"} {:fieldname "MODE_SENSE"} MODE_SENSE__CDB(x: int) : int
{
  x + 1852
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorVersion__GET_LOCAL_HOST_INFO8"} {:fieldname "MajorVersion"} MajorVersion__GET_LOCAL_HOST_INFO8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ManagementAgentBaseReg__DEVICE_INFORMATION"} {:fieldname "ManagementAgentBaseReg"} ManagementAgentBaseReg__DEVICE_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "ManagementEvent"} ManagementEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 2388
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrbContext__DEVICE_EXTENSION"} {:fieldname "ManagementOrbContext"} ManagementOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2216
}

function {:inline true} {:fieldmap "Mem_T._STATUS_FIFO_BLOCK"} {:fieldname "ManagementOrbStatusBlock"} ManagementOrbStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 3224
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "ManagementOrbStatusContext"} ManagementOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3528
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrbTimeout__DEVICE_INFORMATION"} {:fieldname "ManagementOrbTimeout"} ManagementOrbTimeout__DEVICE_INFORMATION(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T._ORB_MNG"} {:fieldname "ManagementOrb"} ManagementOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrb__DEVICE_EXTENSION"} {:fieldname "ManagementOrb"} ManagementOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 2212
}

function {:inline true} {:fieldmap "Mem_T.Mask__DEBUG_LOG"} {:fieldname "Mask"} Mask__DEBUG_LOG(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncReadRequest"} MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncWriteRequest"} MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaxCdbLength__DEVICE_INFORMATION"} {:fieldname "MaxCdbLength"} MaxCdbLength__DEVICE_INFORMATION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__DEVICE_INFORMATION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__DEVICE_INFORMATION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__FDO_DEVICE_EXTENSION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.MaxControllerPhySpeed__DEVICE_EXTENSION"} {:fieldname "MaxControllerPhySpeed"} MaxControllerPhySpeed__DEVICE_EXTENSION(x: int) : int
{
  x + 1428
}

function {:inline true} {:fieldmap "Mem_T.MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP"} {:fieldname "MaxDmaBufferSize"} MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxOrbListDepth__DEVICE_EXTENSION"} {:fieldname "MaxOrbListDepth"} MaxOrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.MaxPages__PAGE_TABLE_CONTEXT"} {:fieldname "MaxPages"} MaxPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "MaxSegmentSize"} MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__STRING"} {:fieldname "MaximumLength"} MaximumLength__STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__IO_SCSI_CAPABILITIES"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__IO_SCSI_CAPABILITIES"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MdlAddress__IRP"} {:fieldname "MdlAddress"} MdlAddress__IRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_READ"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_WRITE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.MediumType__MODE_PARAMETER_HEADER"} {:fieldname "MediumType"} MediumType__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorVersion__GET_LOCAL_HOST_INFO8"} {:fieldname "MinorVersion"} MinorVersion__GET_LOCAL_HOST_INFO8(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModeDataLength__MODE_PARAMETER_HEADER"} {:fieldname "ModeDataLength"} ModeDataLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeafBufferSize"} ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeaf"} ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MultiplicationFactor__MODE_CACHING_PAGE"} {:fieldname "MultiplicationFactor"} MultiplicationFactor__MODE_CACHING_PAGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.NA_Bus_Number__NODE_ADDRESS"} {:fieldname "NA_Bus_Number"} NA_Bus_Number__NODE_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NA_Node_Number__NODE_ADDRESS"} {:fieldname "NA_Node_Number"} NA_Node_Number__NODE_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NextContextToFree__DEVICE_EXTENSION"} {:fieldname "NextContextToFree"} NextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 744
}

function {:inline true} {:fieldmap "Mem_T.NextOrbAddress__ORB_EXT_CMD"} {:fieldname "NextOrbAddress"} NextOrbAddress__ORB_EXT_CMD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__KSPIN_LOCK_QUEUE"} {:fieldname "Next"} Next__KSPIN_LOCK_QUEUE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__SINGLE_LIST_ENTRY"} {:fieldname "Next"} Next__SINGLE_LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT"} {:fieldname "NodeAddress"} NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NodeAndLoginId__QUERY_RESPONSE_ELEMENT"} {:fieldname "NodeAndLoginId"} NodeAndLoginId__QUERY_RESPONSE_ELEMENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeId__B1394_ADDRESS"} {:fieldname "NodeId"} NodeId__B1394_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumPDOsStarted__FDO_DEVICE_EXTENSION"} {:fieldname "NumPDOsStarted"} NumPDOsStarted__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.NumberOfBlocks__MODE_PARAMETER_BLOCK"} {:fieldname "NumberOfBlocks"} NumberOfBlocks__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "NumberOfLogicalBlocks"} NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.NumberOfPages__PAGE_TABLE_CONTEXT"} {:fieldname "NumberOfPages"} NumberOfPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Objects__DEVICE_RELATIONS"} {:fieldname "Objects"} Objects__DEVICE_RELATIONS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OctletPart__OCTLET"} {:fieldname "OctletPart"} OctletPart__OCTLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Octlet__IRBIRP"} {:fieldname "Octlet"} Octlet__IRBIRP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Off_High__ADDRESS_OFFSET"} {:fieldname "Off_High"} Off_High__ADDRESS_OFFSET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_High__B1394_ADDRESS"} {:fieldname "Off_High"} Off_High__B1394_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__ADDRESS_OFFSET"} {:fieldname "Off_Low"} Off_Low__ADDRESS_OFFSET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__B1394_ADDRESS"} {:fieldname "Off_Low"} Off_Low__B1394_ADDRESS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.OldIrql__KLOCK_QUEUE_HANDLE"} {:fieldname "OldIrql"} OldIrql__KLOCK_QUEUE_HANDLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB10"} {:fieldname "OperationCode"} OperationCode__CDB10(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB6GENERIC"} {:fieldname "OperationCode"} OperationCode__CDB6GENERIC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_EXT_CMD"} {:fieldname "OrbInfo"} OrbInfo__ORB_EXT_CMD(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_MNG"} {:fieldname "OrbInfo"} OrbInfo__ORB_MNG(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_QUERY_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_TASK_MNG"} {:fieldname "OrbInfo"} OrbInfo__ORB_TASK_MNG(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__ASYNC_REQUEST_CONTEXT"} {:fieldname "OrbListDepth"} OrbListDepth__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 548
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__DEVICE_EXTENSION"} {:fieldname "OrbListDepth"} OrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.OrbListOwnedCount__DEVICE_EXTENSION"} {:fieldname "OrbListOwnedCount"} OrbListOwnedCount__DEVICE_EXTENSION(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.P_KTHREAD"} {:fieldname "OrbListOwner"} OrbListOwner__DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T.OrbListSpinLock__DEVICE_EXTENSION"} {:fieldname "OrbListSpinLock"} OrbListSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 412
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "OrbList"} OrbList__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbPoolContext__DEVICE_EXTENSION"} {:fieldname "OrbPoolContext"} OrbPoolContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3052
}

function {:inline true} {:fieldmap "Mem_T.OrbReadPayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbReadPayloadMask"} OrbReadPayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1432
}

function {:inline true} {:fieldmap "Mem_T.OrbWritePayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbWritePayloadMask"} OrbWritePayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1436
}

function {:inline true} {:fieldmap "Mem_T._ORB_EXT_CMD"} {:fieldname "Orb"} Orb__ARCP_ORB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalRequest__SCSI_REQUEST_BLOCK"} {:fieldname "OriginalRequest"} OriginalRequest__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.OriginalSrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "OriginalSrb"} OriginalSrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 544
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_22"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_22(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_5"} {:fieldname "Overlay"} Overlay_unnamed_tag_5(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PFBit__MODE_SELECT"} {:fieldname "PFBit"} PFBit__MODE_SELECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Packet__ASYNC_REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 540
}

function {:inline true} {:fieldmap "Mem_T.Packet__REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__REQUEST_CONTEXT(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.PageCode__CDB6INQUIRY"} {:fieldname "PageCode"} PageCode__CDB6INQUIRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_CACHING_PAGE"} {:fieldname "PageCode"} PageCode__MODE_CACHING_PAGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_SENSE"} {:fieldname "PageCode"} PageCode__MODE_SENSE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PageLength__MODE_CACHING_PAGE"} {:fieldname "PageLength"} PageLength__MODE_CACHING_PAGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageSavable__MODE_CACHING_PAGE"} {:fieldname "PageSavable"} PageSavable__MODE_CACHING_PAGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PageTableContext__ASYNC_REQUEST_CONTEXT"} {:fieldname "PageTableContext"} PageTableContext__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.PageTable__PAGE_TABLE_CONTEXT"} {:fieldname "PageTable"} PageTable__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "Page"} Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PagingPathCount"} PagingPathCount__DEVICE_EXTENSION(x: int) : int
{
  x + 772
}

function {:inline true} {:fieldmap "Mem_T.ParameterListLength__MODE_SELECT"} {:fieldname "ParameterListLength"} ParameterListLength__MODE_SELECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PartialMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "PartialMdl"} PartialMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.Password__ORB_LOGIN"} {:fieldname "Password"} Password__ORB_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pc__MODE_SENSE"} {:fieldname "Pc"} Pc__MODE_SENSE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Pdo__FDO_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingOrbList"} PendingOrbList__DEVICE_EXTENSION(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "PendingPowerIrp"} PendingPowerIrp__DEVICE_EXTENSION(x: int) : int
{
  x + 768
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4"} {:fieldname "PhysAddrMappingRoutine"} PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pointer__IO_STATUS_BLOCK"} {:fieldname "Pointer"} Pointer__IO_STATUS_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Portdriver__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Portdriver"} Portdriver__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PowerConditions__START_STOP_RBC"} {:fieldname "PowerConditions"} PowerConditions__START_STOP_RBC(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "PowerDeferredIrp"} PowerDeferredIrp__DEVICE_EXTENSION(x: int) : int
{
  x + 760
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.Processor__DISPATCHER_HEADER"} {:fieldname "Processor"} Processor__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductIdOffset"} ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ProductId__INQUIRYDATA"} {:fieldname "ProductId"} ProductId__INQUIRYDATA(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionLevel__INQUIRYDATA"} {:fieldname "ProductRevisionLevel"} ProductRevisionLevel__INQUIRYDATA(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductRevisionOffset"} ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.PropertyId__STORAGE_PROPERTY_QUERY"} {:fieldname "PropertyId"} PropertyId__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__QUADLET"} {:fieldname "QuadPart"} QuadPart__QUADLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__ULARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__ULARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginRespContext__DEVICE_EXTENSION"} {:fieldname "QueryLoginRespContext"} QueryLoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2880
}

function {:inline true} {:fieldmap "Mem_T._QUERY_LOGIN_RESPONSE"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginResponse__DEVICE_EXTENSION"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2876
}

function {:inline true} {:fieldmap "Mem_T.QueryResponseAddress__ORB_QUERY_LOGIN"} {:fieldname "QueryResponseAddress"} QueryResponseAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.QueryType__STORAGE_PROPERTY_QUERY"} {:fieldname "QueryType"} QueryType__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.QueueControlFlags__DISPATCHER_HEADER"} {:fieldname "QueueControlFlags"} QueueControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "QueueSortKey"} QueueSortKey__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RawDeviceOK__DEVICE_CAPABILITIES"} {:fieldname "RawDeviceOK"} RawDeviceOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.ReLoginCount__DEVICE_EXTENSION"} {:fieldname "ReLoginCount"} ReLoginCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4784
}

function {:inline true} {:fieldmap "Mem_T.ReadDisableCache__MODE_CACHING_PAGE"} {:fieldname "ReadDisableCache"} ReadDisableCache__MODE_CACHING_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ReadRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "ReadRetensionPriority"} ReadRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.ReconnectHold__DEVICE_INFORMATION"} {:fieldname "ReconnectHold"} ReconnectHold__DEVICE_INFORMATION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__INQUIRYDATA"} {:fieldname "RemovableMedia"} RemovableMedia__INQUIRYDATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "RemovableMedia"} RemovableMedia__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Removable__DEVICE_CAPABILITIES"} {:fieldname "Removable"} Removable__DEVICE_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.RemoveEvent__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "RemoveEvent"} RemoveEvent__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.Removed__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "Removed"} Removed__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ADDRESS_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ADDRESS_CONTEXT(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.RequestNumber__SBP2_REQUEST"} {:fieldname "RequestNumber"} RequestNumber__SBP2_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RequestType__REQUEST_CONTEXT"} {:fieldname "RequestType"} RequestType__REQUEST_CONTEXT(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.RequestorMode__IRP"} {:fieldname "RequestorMode"} RequestorMode__IRP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Required1394Offset"} Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__CDB6INQUIRY"} {:fieldname "Reserved1"} Reserved1__CDB6INQUIRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__DISPATCHER_HEADER"} {:fieldname "Reserved1"} Reserved1__DISPATCHER_HEADER(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Reserved2__DISPATCHER_HEADER"} {:fieldname "Reserved2"} Reserved2__DISPATCHER_HEADER(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Reserved3__DISPATCHER_HEADER"} {:fieldname "Reserved3"} Reserved3__DISPATCHER_HEADER(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.Reserved5__DISPATCHER_HEADER"} {:fieldname "Reserved5"} Reserved5__DISPATCHER_HEADER(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.ReservedMdl__DEVICE_EXTENSION"} {:fieldname "ReservedMdl"} ReservedMdl__DEVICE_EXTENSION(x: int) : int
{
  x + 800
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ADDRESS_CONTEXT"} {:fieldname "Reserved"} Reserved__ADDRESS_CONTEXT(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Reserved"} Reserved__DEVICE_EXTENSION(x: int) : int
{
  x + 792
}

function {:inline true} {:fieldmap "Mem_T.Reserved__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "Reserved"} Reserved__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ORB_QUERY_LOGIN"} {:fieldname "Reserved"} Reserved__ORB_QUERY_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__BUS_RESET_DATA"} {:fieldname "ResetContext"} ResetContext__BUS_RESET_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetContext"} ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetRoutine"} ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.RetrieveTextLeaf_unnamed_tag_73"} {:fieldname "RetrieveTextLeaf"} RetrieveTextLeaf_unnamed_tag_73(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SPBit__MODE_SELECT"} {:fieldname "SPBit"} SPBit__MODE_SELECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.START_STOP_RBC__CDB_RBC"} {:fieldname "START_STOP_RBC"} START_STOP_RBC__CDB_RBC(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.ScsiStatus__SCSI_REQUEST_BLOCK"} {:fieldname "ScsiStatus"} ScsiStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Scsi_unnamed_tag_8"} {:fieldname "Scsi"} Scsi_unnamed_tag_8(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBufferLength__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBufferLength"} SenseInfoBufferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBuffer"} SenseInfoBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SenseKey__SENSE_DATA"} {:fieldname "SenseKey"} SenseKey__SENSE_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "SerialNumberOffset"} SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Sig_LOG_ENTRY32"} {:fieldname "Sig"} Sig_LOG_ENTRY32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SortKey__KDEVICE_QUEUE_ENTRY"} {:fieldname "SortKey"} SortKey__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SrbFlags__SCSI_REQUEST_BLOCK"} {:fieldname "SrbFlags"} SrbFlags__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SrbStatus__SCSI_REQUEST_BLOCK"} {:fieldname "SrbStatus"} SrbStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SrbType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "SrbType"} SrbType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Srb__ASYNC_REQUEST_CONTEXT"} {:fieldname "Srb"} Srb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Srb_unnamed_tag_26"} {:fieldname "Srb"} Srb_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "StartEvent"} StartEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 2544
}

function {:inline true} {:fieldmap "Mem_T.StartNextPacketCount__DEVICE_EXTENSION"} {:fieldname "StartNextPacketCount"} StartNextPacketCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4780
}

function {:inline true} {:fieldmap "Mem_T.Start__START_STOP_RBC"} {:fieldname "Start"} Start__START_STOP_RBC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_39"} {:fieldname "State"} State_unnamed_tag_39(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_MNG"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_MNG(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_QUERY_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_TASK_MNG"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_TASK_MNG(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusFifoBase__DEVICE_EXTENSION"} {:fieldname "StatusFifoBase"} StatusFifoBase__DEVICE_EXTENSION(x: int) : int
{
  x + 4368
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "StatusFifoListHead"} StatusFifoListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4348
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "StatusFifoLock"} StatusFifoLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4364
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SupportedAsynchronousEvents__IO_SCSI_CAPABILITIES"} {:fieldname "SupportedAsynchronousEvents"} SupportedAsynchronousEvents__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SurpriseRemovalOK__DEVICE_CAPABILITIES"} {:fieldname "SurpriseRemovalOK"} SurpriseRemovalOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_1"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_1(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 756
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__FDO_DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TL_Length__TEXTUAL_LEAF"} {:fieldname "TL_Length"} TL_Length__TEXTUAL_LEAF(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Tag__ASYNC_REQUEST_CONTEXT"} {:fieldname "Tag"} Tag__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.TaggedQueuing__IO_SCSI_CAPABILITIES"} {:fieldname "TaggedQueuing"} TaggedQueuing__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TargetResetSupported__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "TargetResetSupported"} TargetResetSupported__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.TaskOrbContext__DEVICE_EXTENSION"} {:fieldname "TaskOrbContext"} TaskOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2040
}

function {:inline true} {:fieldmap "Mem_T._STATUS_FIFO_BLOCK"} {:fieldname "TaskOrbStatusBlock"} TaskOrbStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 3700
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "TaskOrbStatusContext"} TaskOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 4004
}

function {:inline true} {:fieldmap "Mem_T._ORB_TASK_MNG"} {:fieldname "TaskOrb"} TaskOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.TaskOrb__DEVICE_EXTENSION"} {:fieldname "TaskOrb"} TaskOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 2036
}

function {:inline true} {:fieldmap "Mem_T.ThreadControlFlags__DISPATCHER_HEADER"} {:fieldname "ThreadControlFlags"} ThreadControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.TimeOutValue__SCSI_REQUEST_BLOCK"} {:fieldname "TimeOutValue"} TimeOutValue__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.Timer2CancelPending__DISPATCHER_HEADER"} {:fieldname "Timer2CancelPending"} Timer2CancelPending__DISPATCHER_HEADER(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Timer2Disabled__DISPATCHER_HEADER"} {:fieldname "Timer2Disabled"} Timer2Disabled__DISPATCHER_HEADER(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.Timer2Expiring__DISPATCHER_HEADER"} {:fieldname "Timer2Expiring"} Timer2Expiring__DISPATCHER_HEADER(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Timer2Flags__DISPATCHER_HEADER"} {:fieldname "Timer2Flags"} Timer2Flags__DISPATCHER_HEADER(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Timer2Inserted__DISPATCHER_HEADER"} {:fieldname "Timer2Inserted"} Timer2Inserted__DISPATCHER_HEADER(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Timer2Running__DISPATCHER_HEADER"} {:fieldname "Timer2Running"} Timer2Running__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Timer2SetPending__DISPATCHER_HEADER"} {:fieldname "Timer2SetPending"} Timer2SetPending__DISPATCHER_HEADER(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.TimerControlFlags__DISPATCHER_HEADER"} {:fieldname "TimerControlFlags"} TimerControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TimerDpc"} TimerDpc__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.TimerMiscFlags__DISPATCHER_HEADER"} {:fieldname "TimerMiscFlags"} TimerMiscFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TransactionType__ADDRESS_CONTEXT"} {:fieldname "TransactionType"} TransactionType__ADDRESS_CONTEXT(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Type__DEVICE_EXTENSION"} {:fieldname "Type"} Type__DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.Type__FDO_DEVICE_EXTENSION"} {:fieldname "Type"} Type__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_28"} {:fieldname "Type"} Type_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_36"} {:fieldname "Type"} Type_unnamed_tag_36(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_39"} {:fieldname "Type"} Type_unnamed_tag_39(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UniSymLinkName"} UniSymLinkName__DEVICE_EXTENSION(x: int) : int
{
  x + 1304
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitCharacteristics__DEVICE_INFORMATION"} {:fieldname "UnitCharacteristics"} UnitCharacteristics__DEVICE_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryBufferSize"} UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryLocation"} UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectory"} UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryBufferSize"} UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryLocation"} UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectory"} UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.UsageNotification_unnamed_tag_8"} {:fieldname "UsageNotification"} UsageNotification_unnamed_tag_8(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "VendorIdOffset"} VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VendorId__INQUIRYDATA"} {:fieldname "VendorId"} VendorId__INQUIRYDATA(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeafBufferSize"} VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeaf"} VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WaitListHead__DISPATCHER_HEADER"} {:fieldname "WaitListHead"} WaitListHead__DISPATCHER_HEADER(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.Wake__DISPATCHER_HEADER"} {:fieldname "Wake"} Wake__DISPATCHER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.WorkItem__IO_WORKITEM"} {:fieldname "WorkItem"} WorkItem__IO_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "WriteCacheDisable"} WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheEnable__MODE_CACHING_PAGE"} {:fieldname "WriteCacheEnable"} WriteCacheEnable__MODE_CACHING_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.WriteRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "WriteRetensionPriority"} WriteRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.asUlong_unnamed_tag_80"} {:fieldname "asUlong"} asUlong_unnamed_tag_80(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.b__LOG_SIGNATURE"} {:fieldname "b"} b__LOG_SIGNATURE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulAccessType"} fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_READ"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_WRITE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_BUS_RESET"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_BUS_RESET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__NOTIFICATION_INFO_WXP"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "hAddressRange"} hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.l__LOG_SIGNATURE"} {:fieldname "l"} l__LOG_SIGNATURE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "nAddressesToFree"} nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_READ"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_WRITE"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "nLength"} nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "nLevel"} nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToRead__IRB_REQ_ASYNC_READ"} {:fieldname "nNumberOfBytesToRead"} nNumberOfBytesToRead__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE"} {:fieldname "nNumberOfBytesToWrite"} nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nSpeed__IRB_REQ_ASYNC_READ"} {:fieldname "nSpeed"} nSpeed__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "pAddressRange"} pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__IRB"} {:fieldname "u"} u__IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__OCTLET"} {:fieldname "u"} u__OCTLET(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.u__QUADLET"} {:fieldname "u"} u__QUADLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.u__SBP2_REQUEST"} {:fieldname "u"} u__SBP2_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_READ"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_WRITE"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulLength_unnamed_tag_74"} {:fieldname "ulLength"} ulLength_unnamed_tag_74(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "ulNumberOfDestinations"} ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniGenericName"} uniGenericName__DEVICE_INFORMATION(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniModelId"} uniModelId__DEVICE_INFORMATION(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniVendorId"} uniVendorId__DEVICE_INFORMATION(x: int) : int
{
  x + 232
}

const {:string "%08x%08x"} unique strConst__li2bpl30: int;

const {:string "%ws %ws IEEE 1394 SBP2 Device"} unique strConst__li2bpl35: int;

const {:string "&"} unique strConst__li2bpl41: int;

const {:string "&REV"} unique strConst__li2bpl44: int;

const {:string "1.0"} unique strConst__li2bpl29: int;

const {:string "<NULL>"} unique strConst__li2bpl1: int;

const {:string "CmdSetId"} unique strConst__li2bpl42: int;

const {:string "D"} unique strConst__li2bpl10: int;

const {:string "F"} unique strConst__li2bpl11: int;

const {:string "FireLite Drive  "} unique strConst__li2bpl23: int;

const {:string "FireREX Storage"} unique strConst__li2bpl17: int;

const {:string "GSA-5163D Super Multi DVD Rewriter"} unique strConst__li2bpl16: int;

const {:string "GenCdRom"} unique strConst__li2bpl58: int;

const {:string "GenChanger"} unique strConst__li2bpl61: int;

const {:string "GenDisk"} unique strConst__li2bpl54: int;

const {:string "GenOptical"} unique strConst__li2bpl60: int;

const {:string "GenPrinter"} unique strConst__li2bpl56: int;

const {:string "GenSbp2Device"} unique strConst__li2bpl53: int;

const {:string "GenScanner"} unique strConst__li2bpl59: int;

const {:string "GenSequential"} unique strConst__li2bpl55: int;

const {:string "GenWorm"} unique strConst__li2bpl57: int;

const {:string "HDD USB 2.0/1394A"} unique strConst__li2bpl21: int;

const {:string "HL-DT-ST"} unique strConst__li2bpl25: int;

const {:string "IV00"} unique strConst__li2bpl46: int;

const {:string "IV00XXXX"} unique strConst__li2bpl47: int;

const {:string "Iomega"} unique strConst__li2bpl20: int;

const {:string "LUN"} unique strConst__li2bpl43: int;

const {:string "LUN %d"} unique strConst__li2bpl34: int;

const {:string "LegacyFlags"} unique strConst__li2bpl24: int;

const {:string "NULL"} unique strConst__li2bpl0: int;

const {:string "Niveus"} unique strConst__li2bpl45: int;

const {:string "P"} unique strConst__li2bpl12: int;

const {:string "PL3507"} unique strConst__li2bpl19: int;

const {:string "Prolific"} unique strConst__li2bpl18: int;

const {:string "S"} unique strConst__li2bpl9: int;

const {:string "SBP2\\"} unique strConst__li2bpl39: int;

const {:string "SBP2\\%d&%d&%d"} unique strConst__li2bpl32: int;

const {:string "SBP2\\%ws&%ws&LUN%x"} unique strConst__li2bpl49: int;

const {:string "SBP2\\%ws&%ws&LUN%x&REV%x"} unique strConst__li2bpl48: int;

const {:string "SBP2\\UNKNOWN VENDOR&UNKNOWN MODEL&LUN%x"} unique strConst__li2bpl50: int;

const {:string "Sbp2"} unique strConst__li2bpl28: int;

const {:string "TI STORAGELYNX!!"} unique strConst__li2bpl26: int;

const {:string "The driver is calling sdv_IoReleaseRemoveLock without first acquiring the Removelock."} unique strConst__li2bpl5: int;

const {:string "The driver is calling sdv_IoReleaseRemoveLockAndWait without first acquiring the Removelock."} unique strConst__li2bpl6: int;

const {:string "The routine has returned without releasing a Removelock."} unique strConst__li2bpl4: int;

const {:string "UNKNOWN MODEL"} unique strConst__li2bpl33: int;

const {:string "UNKNOWN VENDOR AND MODEL IEEE 1394 SBP2 Device"} unique strConst__li2bpl36: int;

const {:string "UNKNOWN VENDOR&UNKNOWN MODEL"} unique strConst__li2bpl40: int;

const {:string "UNKNOWN_MODEL"} unique strConst__li2bpl51: int;

const {:string "Unknown"} unique strConst__li2bpl63: int;

const {:string "VGP-XL1B"} unique strConst__li2bpl15: int;

const {:string "Vendor"} unique strConst__li2bpl27: int;

const {:string "\\Device\\Sbp2"} unique strConst__li2bpl38: int;

const {:string "\\Device\\Sbp2Port%x"} unique strConst__li2bpl37: int;

const {:string "\\Device\\Sbp2\\%ws&%ws&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl52: int;

const {:string "\\Device\\Sbp2\\UNKNOWN_VENDOR&UNKNOWN_MODEL&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl62: int;

const {:string "\\DosDevices\\Sbp2&LUN%x&%08x%08x&Instance%02d"} unique strConst__li2bpl31: int;

const {:string "callee"} unique strConst__li2bpl2: int;

const {:string "f"} unique strConst__li2bpl13: int;

const {:string "fdo"} unique strConst__li2bpl8: int;

const {:string "halt"} unique strConst__li2bpl3: int;

const {:string "iPod"} unique strConst__li2bpl22: int;

const {:string "p"} unique strConst__li2bpl14: int;

const {:string "pdo"} unique strConst__li2bpl7: int;

const {:allocated} li2bplFunctionConstant375: int;

axiom li2bplFunctionConstant375 == 375;

const {:allocated} li2bplFunctionConstant378: int;

axiom li2bplFunctionConstant378 == 378;

const {:allocated} li2bplFunctionConstant385: int;

axiom li2bplFunctionConstant385 == 385;

const {:allocated} li2bplFunctionConstant389: int;

axiom li2bplFunctionConstant389 == 389;

const {:allocated} li2bplFunctionConstant391: int;

axiom li2bplFunctionConstant391 == 391;

const {:allocated} li2bplFunctionConstant392: int;

axiom li2bplFunctionConstant392 == 392;

const {:allocated} li2bplFunctionConstant399: int;

axiom li2bplFunctionConstant399 == 399;

const {:allocated} li2bplFunctionConstant461: int;

axiom li2bplFunctionConstant461 == 461;

const {:allocated} li2bplFunctionConstant463: int;

axiom li2bplFunctionConstant463 == 463;

const {:allocated} li2bplFunctionConstant464: int;

axiom li2bplFunctionConstant464 == 464;

const {:allocated} li2bplFunctionConstant465: int;

axiom li2bplFunctionConstant465 == 465;

const {:allocated} li2bplFunctionConstant523: int;

axiom li2bplFunctionConstant523 == 523;

const {:allocated} li2bplFunctionConstant641: int;

axiom li2bplFunctionConstant641 == 641;

const {:allocated} li2bplFunctionConstant694: int;

axiom li2bplFunctionConstant694 == 694;

const {:allocated} li2bplFunctionConstant697: int;

axiom li2bplFunctionConstant697 == 697;

const {:allocated} li2bplFunctionConstant698: int;

axiom li2bplFunctionConstant698 == 698;

const {:allocated} li2bplFunctionConstant699: int;

axiom li2bplFunctionConstant699 == 699;

const {:allocated} li2bplFunctionConstant700: int;

axiom li2bplFunctionConstant700 == 700;

const {:allocated} li2bplFunctionConstant799: int;

axiom li2bplFunctionConstant799 == 799;

const {:allocated} li2bplFunctionConstant801: int;

axiom li2bplFunctionConstant801 == 801;

const {:allocated} li2bplFunctionConstant804: int;

axiom li2bplFunctionConstant804 == 804;

implementation {:origName "SdvExit"} {:osmodel} SdvExit#0()
{
  var vslice_dummy_var_321: int;

  anon0:
    call {:si_unique_call 1725} vslice_dummy_var_321 := __HAVOC_malloc(4);
    assume false;
    assume false;
    return;
}



procedure {:origName "SdvExit"} {:osmodel} SdvExit#0();
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "SdvExit"} {:osmodel} SdvExit#1()
{
  var vslice_dummy_var_322: int;

  anon0:
    call {:si_unique_call 1726} vslice_dummy_var_322 := __HAVOC_malloc(4);
    assume false;
    call {:si_unique_call 1727} SdvExit#0();
    return;
}



procedure {:origName "SdvExit"} {:osmodel} SdvExit#1();
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#0(actual_PdoExtension_1: int) returns (Tmp_168: int)
{
  var {:pointer} Tmp_169: int;
  var {:pointer} Tmp_170: int;
  var {:pointer} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:scalar} Tmp_173: int;
  var {:scalar} Tmp_174: int;
  var {:pointer} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:scalar} Tmp_178: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:pointer} Tmp_183: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:pointer} Tmp_187: int;
  var {:pointer} Tmp_188: int;
  var {:pointer} Tmp_189: int;
  var {:scalar} Tmp_190: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} Tmp_192: int;
  var {:pointer} Tmp_193: int;
  var {:scalar} Tmp_194: int;
  var {:scalar} getLocalHostInfo7: int;
  var {:scalar} Tmp_195: int;
  var {:pointer} Tmp_196: int;
  var {:pointer} Tmp_197: int;
  var {:scalar} Tmp_198: int;
  var {:scalar} Tmp_199: int;
  var {:scalar} Tmp_200: int;
  var {:pointer} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:scalar} Tmp_203: int;
  var {:scalar} Tmp_204: int;
  var {:pointer} Tmp_205: int;
  var {:pointer} packet: int;
  var {:scalar} status_4: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:scalar} Tmp_208: int;
  var {:pointer} Tmp_209: int;
  var {:pointer} Tmp_210: int;
  var {:pointer} Tmp_212: int;
  var {:scalar} Tmp_213: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} Tmp_215: int;
  var {:pointer} PdoExtension_1: int;

  anon0:
    call {:si_unique_call 1728} getLocalHostInfo7 := __HAVOC_malloc(24);
    call {:si_unique_call 1729} packet := __HAVOC_malloc(4);
    PdoExtension_1 := actual_PdoExtension_1;
    call {:si_unique_call 1730} Tmp_170 := __HAVOC_malloc(4);
    call {:si_unique_call 1731} Tmp_172 := __HAVOC_malloc(4);
    call {:si_unique_call 1732} Tmp_188 := __HAVOC_malloc(4);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    Mem_T.P_IRBIRP[packet] := 0;
    call {:si_unique_call 1733} AllocateIrpAndIrb(PdoExtension_1, packet);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_181;
    assume {:nonnull} Tmp_181 != 0;
    assume Tmp_181 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_176;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_175;
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_183;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    assume false;
    return;

  anon91_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet] == 0;
    Tmp_168 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;
}



procedure {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#0(actual_PdoExtension_1: int) returns (Tmp_168: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} Tmp_168 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#1(actual_PdoExtension_1: int) returns (Tmp_168: int)
{
  var {:pointer} Tmp_169: int;
  var {:pointer} Tmp_170: int;
  var {:pointer} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:scalar} Tmp_173: int;
  var {:scalar} Tmp_174: int;
  var {:pointer} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:scalar} Tmp_178: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:pointer} Tmp_183: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:pointer} Tmp_187: int;
  var {:pointer} Tmp_188: int;
  var {:pointer} Tmp_189: int;
  var {:scalar} Tmp_190: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} Tmp_192: int;
  var {:pointer} Tmp_193: int;
  var {:scalar} Tmp_194: int;
  var {:scalar} getLocalHostInfo7: int;
  var {:scalar} Tmp_195: int;
  var {:pointer} Tmp_196: int;
  var {:pointer} Tmp_197: int;
  var {:scalar} Tmp_198: int;
  var {:scalar} Tmp_199: int;
  var {:scalar} Tmp_200: int;
  var {:pointer} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:scalar} Tmp_203: int;
  var {:scalar} Tmp_204: int;
  var {:pointer} Tmp_205: int;
  var {:pointer} packet: int;
  var {:scalar} status_4: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:scalar} Tmp_208: int;
  var {:pointer} Tmp_209: int;
  var {:pointer} Tmp_210: int;
  var {:pointer} Tmp_212: int;
  var {:scalar} Tmp_213: int;
  var {:pointer} Tmp_214: int;
  var {:pointer} Tmp_215: int;
  var {:pointer} PdoExtension_1: int;
  var vslice_dummy_var_4236: int;
  var vslice_dummy_var_4237: int;
  var vslice_dummy_var_4238: int;

  anon0:
    call {:si_unique_call 1734} getLocalHostInfo7 := __HAVOC_malloc(24);
    call {:si_unique_call 1735} packet := __HAVOC_malloc(4);
    PdoExtension_1 := actual_PdoExtension_1;
    call {:si_unique_call 1736} Tmp_170 := __HAVOC_malloc(4);
    call {:si_unique_call 1737} Tmp_172 := __HAVOC_malloc(4);
    call {:si_unique_call 1738} Tmp_188 := __HAVOC_malloc(4);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    Mem_T.P_IRBIRP[packet] := 0;
    call {:si_unique_call 1739} AllocateIrpAndIrb(PdoExtension_1, packet);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_181;
    assume {:nonnull} Tmp_181 != 0;
    assume Tmp_181 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_176;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_175;
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_183;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1740} status_4 := Sbp2SendRequest#0(PdoExtension_1, Mem_T.P_IRBIRP[packet], 2);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} yogi_error != 1;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} status_4 < 0;
    goto L121;

  L121:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1741} DeAllocateIrpAndIrb(PdoExtension_1, Mem_T.P_IRBIRP[packet]);
    Tmp_168 := status_4;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon92_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_202;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  L32:
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_207;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_193;
    assume {:nonnull} Tmp_193 != 0;
    assume Tmp_193 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_196;
    assume {:nonnull} Tmp_196 != 0;
    assume Tmp_196 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_169;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1742} status_4 := Sbp2SendRequest#0(PdoExtension_1, Mem_T.P_IRBIRP[packet], 2);
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} yogi_error != 1;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} status_4 < 0;
    goto L121;

  anon93_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    Tmp_192 := 160;
    goto L50;

  L50:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    Tmp_194 := 160;
    goto L71;

  L71:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  L64:
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_215;
    assume {:nonnull} Tmp_215 != 0;
    assume Tmp_215 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_177;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_214;
    assume {:nonnull} Tmp_214 != 0;
    assume Tmp_214 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_212;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1743} status_4 := Sbp2SendRequest#0(PdoExtension_1, Mem_T.P_IRBIRP[packet], 2);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} yogi_error != 1;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} status_4 < 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_172;
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    havoc Tmp_185;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_190;
    call {:si_unique_call 1744} WPP_SF_q(Tmp_190, 119, Tmp_185, PdoExtension_1);
    goto L121;

  anon114_Then:
    goto L121;

  anon135_Then:
    goto L121;

  anon113_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L121;

  anon104_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_186;
    assume {:nonnull} Tmp_186 != 0;
    assume Tmp_186 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_209;
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_205;
    assume {:nonnull} Tmp_205 != 0;
    assume Tmp_205 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet] != 0;
    assume Mem_T.P_IRBIRP[packet] > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_210;
    assume {:nonnull} Tmp_210 != 0;
    assume Tmp_210 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1745} status_4 := Sbp2SendRequest#0(PdoExtension_1, Mem_T.P_IRBIRP[packet], 2);
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} yogi_error != 1;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} status_4 < 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_188;
    assume {:nonnull} Tmp_188 != 0;
    assume Tmp_188 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    havoc Tmp_180;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_199;
    call {:si_unique_call 1746} WPP_SF_q(Tmp_199, 120, Tmp_180, PdoExtension_1);
    goto L139;

  L139:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_179;
    assume {:nonnull} Tmp_179 != 0;
    assume Tmp_179 > 0;
    status_4 := 0;
    goto L121;

  anon112_Then:
    goto L139;

  anon134_Then:
    goto L139;

  anon111_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L139;

  anon105_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_178;
    goto L113;

  L113:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_201;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_182;
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    havoc Tmp_208;
    goto L116;

  L116:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_189;
    assume {:nonnull} Tmp_189 != 0;
    assume Tmp_189 > 0;
    goto L120;

  L120:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_170;
    assume {:nonnull} Tmp_170 != 0;
    assume Tmp_170 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_187;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_200;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_171;
    assume {:nonnull} Tmp_171 != 0;
    assume Tmp_171 > 0;
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc vslice_dummy_var_4236;
    havoc vslice_dummy_var_4237;
    havoc vslice_dummy_var_4238;
    call {:si_unique_call 1747} WPP_SF_qDDD(Tmp_200, 121, Tmp_187, PdoExtension_1, vslice_dummy_var_4236, vslice_dummy_var_4237, vslice_dummy_var_4238);
    goto L121;

  anon110_Then:
    goto L121;

  anon132_Then:
    goto L121;

  anon109_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L121;

  anon131_Then:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_198;
    goto L134;

  L134:
    Tmp_208 := Tmp_198;
    goto L116;

  anon108_Then:
    Tmp_198 := 2093056;
    goto L134;

  anon107_Then:
    Tmp_178 := 2093056;
    goto L113;

  anon106_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_184;
    assume {:nonnull} Tmp_184 != 0;
    assume Tmp_184 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_206;
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    havoc Tmp_195;
    goto L137;

  L137:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_197;
    assume {:nonnull} Tmp_197 != 0;
    assume Tmp_197 > 0;
    goto L120;

  anon133_Then:
    Tmp_195 := 2093056;
    goto L137;

  anon130_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon129_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon103_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_194;
    goto L71;

  anon123_Then:
    goto L64;

  anon124_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    Tmp_203 := 144;
    goto L75;

  L75:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon102_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_203;
    goto L75;

  anon125_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    Tmp_204 := 128;
    goto L79;

  L79:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon101_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_204;
    goto L79;

  anon95_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    Tmp_213 := 112;
    goto L83;

  L83:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon100_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_213;
    goto L83;

  anon99_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_192;
    goto L50;

  anon120_Then:
    goto L43;

  anon121_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    Tmp_191 := 144;
    goto L54;

  L54:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon98_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_191;
    goto L54;

  anon122_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Tmp_174 := 128;
    goto L58;

  L58:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon97_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_174;
    goto L58;

  anon94_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_173 := 112;
    goto L62;

  L62:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon96_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_173;
    goto L62;

  anon128_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon115_Then:
    goto L23;

  L23:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon116_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon117_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon118_Then:
    goto L23;

  anon119_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon127_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon126_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon91_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet] == 0;
    Tmp_168 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#1(actual_PdoExtension_1: int) returns (Tmp_168: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest#0(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1386: int)
{
  var {:pointer} Tmp_1387: int;
  var {:scalar} Tmp_1388: int;
  var {:scalar} tick: int;
  var {:pointer} s_p_e_c_i_a_l_74: int;
  var {:pointer} Tmp_1389: int;
  var {:pointer} pdoExtension_12: int;
  var {:pointer} Tmp_1390: int;
  var {:pointer} Tmp_1391: int;
  var {:pointer} sdv_458: int;
  var {:scalar} Tmp_1392: int;
  var {:pointer} Tmp_1393: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_1394: int;
  var {:pointer} pComplete: int;
  var {:scalar} Tmp_1395: int;
  var {:pointer} Tmp_1396: int;
  var {:pointer} Tmp_1397: int;
  var {:scalar} sdv_460: int;
  var {:pointer} sdv_461: int;
  var {:pointer} Tmp_1398: int;
  var {:pointer} s_p_e_c_i_a_l_75: int;
  var {:pointer} Tmp_1399: int;
  var {:scalar} delay: int;
  var {:scalar} sdv_462: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:pointer} Tmp_1400: int;
  var {:scalar} cIrql_8: int;
  var {:scalar} sdv_465: int;
  var {:scalar} status_40: int;
  var {:pointer} Tmp_1401: int;
  var {:pointer} Tmp_1402: int;
  var {:scalar} completed_1: int;
  var {:pointer} Tmp_1403: int;
  var {:pointer} Tmp_1404: int;
  var {:pointer} DeviceExtension_5: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_4239: int;
  var vslice_dummy_var_4240: int;
  var vslice_dummy_var_4241: int;
  var vslice_dummy_var_4242: int;
  var vslice_dummy_var_4243: int;
  var vslice_dummy_var_4244: int;
  var vslice_dummy_var_4245: int;

  anon0:
    call {:si_unique_call 1748} tick := __HAVOC_malloc(20);
    call {:si_unique_call 1749} delay := __HAVOC_malloc(20);
    DeviceExtension_5 := actual_DeviceExtension_5;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    call {:si_unique_call 1750} Tmp_1398 := __HAVOC_malloc(4);
    call {:si_unique_call 1751} Tmp_1402 := __HAVOC_malloc(4);
    call {:si_unique_call 1752} Tmp_1404 := __HAVOC_malloc(4);
    originalTransferMode := TransferMode;
    requestContext := 0;
    pdoExtension_12 := 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1399;
    assume {:nonnull} Tmp_1399 != 0;
    assume Tmp_1399 > 0;
    goto L13;

  L13:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    pdoExtension_12 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1393;
    assume {:nonnull} Tmp_1393 != 0;
    assume Tmp_1393 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    Tmp_1386 := -1073741823;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon80_Then:
    goto L20;

  L20:
    call {:si_unique_call 1753} Tmp_1394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    call {:si_unique_call 1754} sdv_KeAcquireSpinLock(0, Tmp_1394);
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    havoc cIrql_8;
    call {:si_unique_call 1755} sdv_461 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_461;
    call {:si_unique_call 1756} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto L32;

  L32:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} requestContext == 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1404;
    assume {:nonnull} Tmp_1404 != 0;
    assume Tmp_1404 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_1397;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1395;
    call {:si_unique_call 1757} WPP_SF_(Tmp_1395, 18, Tmp_1397);
    goto L152;

  L152:
    Tmp_1386 := -1073741670;
    goto L1;

  anon77_Then:
    goto L152;

  anon90_Then:
    goto L152;

  anon76_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon62_Then:
    assume {:partition} requestContext != 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 1758} sdv_462 := sdv_KeGetCurrentIrql();
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_462 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L37;

  L37:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  L51:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_4239;
    call {:si_unique_call 1759} nextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_4239);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_4240;
    call {:si_unique_call 1760} sdv_IoSetCompletionRoutine(vslice_dummy_var_4240, li2bplFunctionConstant523, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_4241;
    havoc vslice_dummy_var_4242;
    call {:si_unique_call 1761} status_40 := sdv_IoCallDriver#0(vslice_dummy_var_4241, vslice_dummy_var_4242);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_40 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1401;
    assume {:nonnull} Tmp_1401 != 0;
    assume Tmp_1401 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  L82:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1402;
    assume {:nonnull} Tmp_1402 != 0;
    assume Tmp_1402 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_1389;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1388;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1400;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1387;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_1387 != 0;
    assume Tmp_1387 > 0;
    assume {:nonnull} Tmp_1400 != 0;
    assume Tmp_1400 > 0;
    havoc vslice_dummy_var_4243;
    havoc vslice_dummy_var_4244;
    havoc vslice_dummy_var_4245;
    call {:si_unique_call 1762} WPP_SF_DDD(Tmp_1388, 20, Tmp_1389, vslice_dummy_var_4243, vslice_dummy_var_4244, vslice_dummy_var_4245);
    goto L83;

  L83:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    pdoExtension_12 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto L66;

  L66:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    Tmp_1403 := KeTickCount;
    assume {:nonnull} Tmp_1403 != 0;
    assume Tmp_1403 > 0;
    havoc s_p_e_c_i_a_l_74;
    goto L121;

  L121:
    call {:si_unique_call 1763} Sbp2SendRequest#0_loop_L121(s_p_e_c_i_a_l_74, delay);
    goto L121_last;

  L121_last:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    call {:si_unique_call 1764} sdv_465 := corral_nondet();
    assume {:nonnull} delay != 0;
    assume delay > 0;
    goto L132;

  L132:
    call {:si_unique_call 1765} Tmp_1396, s_p_e_c_i_a_l_75 := Sbp2SendRequest#0_loop_L132(tick, pComplete, Tmp_1396, s_p_e_c_i_a_l_75, delay);
    goto L132_last;

  L132_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    Tmp_1396 := KeTickCount;
    assume {:nonnull} Tmp_1396 != 0;
    assume Tmp_1396 > 0;
    havoc s_p_e_c_i_a_l_75;
    goto L142;

  L142:
    call {:si_unique_call 1766} Sbp2SendRequest#0_loop_L142(tick, s_p_e_c_i_a_l_75);
    goto L142_last;

  L142_last:
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L137;

  L137:
    completed_1 := sdv_460;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} completed_1 == 0;
    Tmp_1386 := -1073741823;
    goto L1;

  anon88_Then:
    assume {:partition} completed_1 != 0;
    goto L97;

  L97:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    call {:si_unique_call 1767} Tmp_1394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    call {:si_unique_call 1768} sdv_KeAcquireSpinLock(0, Tmp_1394);
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    havoc cIrql_8;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1769} ExFreeToNPagedLookasideList#0(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_5), requestContext);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1770} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto L113;

  L113:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1390;
    assume {:nonnull} Tmp_1390 != 0;
    assume Tmp_1390 > 0;
    havoc Tmp_1386;
    goto L1;

  anon86_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    call {:si_unique_call 1771} sdv_ExFreePool(0);
    goto L113;

  anon75_Then:
    goto anon75_Then_dummy;

  anon75_Then_dummy:
    assume false;
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    assume false;
    return;

  anon74_Then:
    goto L137;

  anon87_Then:
    goto anon87_Then_dummy;

  anon87_Then_dummy:
    assume false;
    return;

  anon71_Then:
    assume {:partition} TransferMode == 2;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_40 == 259;
    call {:si_unique_call 1772} vslice_dummy_var_323 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L97;

  anon72_Then:
    assume {:partition} status_40 != 259;
    goto L97;

  anon66_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_1386 := status_40;
    goto L1;

  anon69_Then:
    goto L66;

  anon70_Then:
    goto L83;

  anon85_Then:
    goto L83;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon83_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1398;
    assume {:nonnull} Tmp_1398 != 0;
    assume Tmp_1398 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L82;

  anon84_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L82;

  anon67_Then:
    havoc Tmp_1391;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1392;
    call {:si_unique_call 1773} WPP_SF_(Tmp_1392, 19, Tmp_1391);
    goto L82;

  anon65_Then:
    assume {:partition} status_40 != -1072562032;
    goto L66;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon81_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  anon64_Then:
    assume {:partition} 2 > sdv_462;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 1774} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L37;

  anon63_Then:
    assume {:partition} TransferMode != 2;
    goto L37;

  anon79_Then:
    goto L20;

  anon61_Then:
    call {:si_unique_call 1775} sdv_458 := ExAllocatePoolWithTag(512, 32, -481140141);
    requestContext := sdv_458;
    goto L32;

  anon78_Then:
    assume {:partition} originalTransferMode == 2;
    goto L13;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest#0(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1386: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest#1(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1386: int)
{
  var {:pointer} Tmp_1387: int;
  var {:scalar} Tmp_1388: int;
  var {:scalar} tick: int;
  var {:pointer} s_p_e_c_i_a_l_74: int;
  var {:pointer} Tmp_1389: int;
  var {:pointer} pdoExtension_12: int;
  var {:pointer} Tmp_1390: int;
  var {:pointer} Tmp_1391: int;
  var {:pointer} sdv_458: int;
  var {:scalar} Tmp_1392: int;
  var {:pointer} Tmp_1393: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_1394: int;
  var {:pointer} pComplete: int;
  var {:scalar} Tmp_1395: int;
  var {:pointer} Tmp_1396: int;
  var {:pointer} Tmp_1397: int;
  var {:scalar} sdv_460: int;
  var {:pointer} sdv_461: int;
  var {:pointer} Tmp_1398: int;
  var {:pointer} s_p_e_c_i_a_l_75: int;
  var {:pointer} Tmp_1399: int;
  var {:scalar} delay: int;
  var {:scalar} sdv_462: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:pointer} Tmp_1400: int;
  var {:scalar} cIrql_8: int;
  var {:scalar} sdv_465: int;
  var {:scalar} status_40: int;
  var {:pointer} Tmp_1401: int;
  var {:pointer} Tmp_1402: int;
  var {:scalar} completed_1: int;
  var {:pointer} Tmp_1403: int;
  var {:pointer} Tmp_1404: int;
  var {:pointer} DeviceExtension_5: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_4246: int;
  var vslice_dummy_var_4247: int;
  var vslice_dummy_var_4248: int;
  var vslice_dummy_var_4249: int;
  var vslice_dummy_var_4250: int;
  var vslice_dummy_var_4251: int;
  var vslice_dummy_var_4252: int;

  anon0:
    call {:si_unique_call 1776} tick := __HAVOC_malloc(20);
    call {:si_unique_call 1777} delay := __HAVOC_malloc(20);
    DeviceExtension_5 := actual_DeviceExtension_5;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    call {:si_unique_call 1778} Tmp_1398 := __HAVOC_malloc(4);
    call {:si_unique_call 1779} Tmp_1402 := __HAVOC_malloc(4);
    call {:si_unique_call 1780} Tmp_1404 := __HAVOC_malloc(4);
    originalTransferMode := TransferMode;
    requestContext := 0;
    pdoExtension_12 := 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1399;
    assume {:nonnull} Tmp_1399 != 0;
    assume Tmp_1399 > 0;
    goto L13;

  L13:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    pdoExtension_12 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1393;
    assume {:nonnull} Tmp_1393 != 0;
    assume Tmp_1393 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    Tmp_1386 := -1073741823;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon80_Then:
    goto L20;

  L20:
    call {:si_unique_call 1781} Tmp_1394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    call {:si_unique_call 1782} sdv_KeAcquireSpinLock(0, Tmp_1394);
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    havoc cIrql_8;
    call {:si_unique_call 1783} sdv_461 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_461;
    call {:si_unique_call 1784} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto L32;

  L32:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} requestContext == 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1404;
    assume {:nonnull} Tmp_1404 != 0;
    assume Tmp_1404 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_1397;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1395;
    call {:si_unique_call 1785} WPP_SF_(Tmp_1395, 18, Tmp_1397);
    goto L152;

  L152:
    Tmp_1386 := -1073741670;
    goto L1;

  anon77_Then:
    goto L152;

  anon90_Then:
    goto L152;

  anon76_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon62_Then:
    assume {:partition} requestContext != 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 1786} sdv_462 := sdv_KeGetCurrentIrql();
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_462 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L37;

  L37:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  L51:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_4246;
    call {:si_unique_call 1787} nextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_4246);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_4247;
    call {:si_unique_call 1788} sdv_IoSetCompletionRoutine(vslice_dummy_var_4247, li2bplFunctionConstant523, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_4248;
    havoc vslice_dummy_var_4249;
    call {:si_unique_call 1789} status_40 := sdv_IoCallDriver#1(vslice_dummy_var_4248, vslice_dummy_var_4249);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_40 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1401;
    assume {:nonnull} Tmp_1401 != 0;
    assume Tmp_1401 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  L82:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1402;
    assume {:nonnull} Tmp_1402 != 0;
    assume Tmp_1402 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_1389;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1388;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1400;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1387;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_1387 != 0;
    assume Tmp_1387 > 0;
    assume {:nonnull} Tmp_1400 != 0;
    assume Tmp_1400 > 0;
    havoc vslice_dummy_var_4250;
    havoc vslice_dummy_var_4251;
    havoc vslice_dummy_var_4252;
    call {:si_unique_call 1790} WPP_SF_DDD(Tmp_1388, 20, Tmp_1389, vslice_dummy_var_4250, vslice_dummy_var_4251, vslice_dummy_var_4252);
    goto L83;

  L83:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    pdoExtension_12 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto L66;

  L66:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    Tmp_1403 := KeTickCount;
    assume {:nonnull} Tmp_1403 != 0;
    assume Tmp_1403 > 0;
    havoc s_p_e_c_i_a_l_74;
    goto L121;

  L121:
    call {:si_unique_call 1791} Sbp2SendRequest#1_loop_L121(s_p_e_c_i_a_l_74, delay);
    goto L121_last;

  L121_last:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_74 != 0;
    assume s_p_e_c_i_a_l_74 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    call {:si_unique_call 1792} sdv_465 := corral_nondet();
    assume {:nonnull} delay != 0;
    assume delay > 0;
    goto L132;

  L132:
    call {:si_unique_call 1793} Tmp_1396, s_p_e_c_i_a_l_75 := Sbp2SendRequest#1_loop_L132(tick, pComplete, Tmp_1396, s_p_e_c_i_a_l_75, delay);
    goto L132_last;

  L132_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    Tmp_1396 := KeTickCount;
    assume {:nonnull} Tmp_1396 != 0;
    assume Tmp_1396 > 0;
    havoc s_p_e_c_i_a_l_75;
    goto L142;

  L142:
    call {:si_unique_call 1794} Sbp2SendRequest#1_loop_L142(tick, s_p_e_c_i_a_l_75);
    goto L142_last;

  L142_last:
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_75 != 0;
    assume s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L137;

  L137:
    completed_1 := sdv_460;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} completed_1 == 0;
    Tmp_1386 := -1073741823;
    goto L1;

  anon88_Then:
    assume {:partition} completed_1 != 0;
    goto L97;

  L97:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    call {:si_unique_call 1795} Tmp_1394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    call {:si_unique_call 1796} sdv_KeAcquireSpinLock(0, Tmp_1394);
    assume {:nonnull} Tmp_1394 != 0;
    assume Tmp_1394 > 0;
    havoc cIrql_8;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1797} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_5), requestContext);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1798} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto L113;

  L113:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1390;
    assume {:nonnull} Tmp_1390 != 0;
    assume Tmp_1390 > 0;
    havoc Tmp_1386;
    goto L1;

  anon86_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    call {:si_unique_call 1799} sdv_ExFreePool(0);
    goto L113;

  anon75_Then:
    goto anon75_Then_dummy;

  anon75_Then_dummy:
    assume false;
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    assume false;
    return;

  anon74_Then:
    goto L137;

  anon87_Then:
    goto anon87_Then_dummy;

  anon87_Then_dummy:
    assume false;
    return;

  anon71_Then:
    assume {:partition} TransferMode == 2;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_40 == 259;
    call {:si_unique_call 1800} vslice_dummy_var_324 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L97;

  anon72_Then:
    assume {:partition} status_40 != 259;
    goto L97;

  anon66_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_1386 := status_40;
    goto L1;

  anon69_Then:
    goto L66;

  anon70_Then:
    goto L83;

  anon85_Then:
    goto L83;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon83_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1398;
    assume {:nonnull} Tmp_1398 != 0;
    assume Tmp_1398 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L82;

  anon84_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L82;

  anon67_Then:
    havoc Tmp_1391;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1392;
    call {:si_unique_call 1801} WPP_SF_(Tmp_1392, 19, Tmp_1391);
    goto L82;

  anon65_Then:
    assume {:partition} status_40 != -1072562032;
    goto L66;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon81_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  anon64_Then:
    assume {:partition} 2 > sdv_462;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 1802} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L37;

  anon63_Then:
    assume {:partition} TransferMode != 2;
    goto L37;

  anon79_Then:
    goto L20;

  anon61_Then:
    call {:si_unique_call 1803} sdv_458 := ExAllocatePoolWithTag(512, 32, -481140141);
    requestContext := sdv_458;
    goto L32;

  anon78_Then:
    assume {:partition} originalTransferMode == 2;
    goto L13;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest#1(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1386: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#0(actual_DeviceObject_11: int, actual_Irp_7: int) returns (Tmp_1050: int)
{
  var {:pointer} Irp_7: int;

  anon0:
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 1804} Tmp_1050 := IofCallDriver#0(0, Irp_7);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#0(actual_DeviceObject_11: int, actual_Irp_7: int) returns (Tmp_1050: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#1(actual_DeviceObject_11: int, actual_Irp_7: int) returns (Tmp_1050: int)
{
  var {:pointer} Irp_7: int;

  anon0:
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 1805} Tmp_1050 := IofCallDriver#1(0, Irp_7);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#1(actual_DeviceObject_11: int, actual_Irp_7: int) returns (Tmp_1050: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver#0(actual_DeviceObject_9: int, actual_Irp_5: int) returns (Tmp_1040: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_27: int;
  var {:pointer} Irp_5: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_4253: int;
  var vslice_dummy_var_4254: int;
  var vslice_dummy_var_4255: int;
  var vslice_dummy_var_4256: int;

  anon0:
    call {:si_unique_call 1806} completion_1 := __HAVOC_malloc(4);
    Irp_5 := actual_Irp_5;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    status_27 := 259;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L29;

  L29:
    Tmp_1040 := status_27;
    goto LM2;

  LM2:
    return;

  anon55_Then:
    havoc vslice_dummy_var_4253;
    call {:si_unique_call 1807} vslice_dummy_var_325 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_4253, completion_1);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L23;

  anon53_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L21;

  anon75_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L19;

  anon68_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L60;

  L60:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    havoc vslice_dummy_var_4254;
    call {:si_unique_call 1808} vslice_dummy_var_328 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_4254, completion_1);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    goto L29;

  anon66_Then:
    goto L29;

  anon65_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L62;

  anon64_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L60;

  anon77_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L58;

  anon69_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L34;

  L34:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc vslice_dummy_var_4255;
    call {:si_unique_call 1809} vslice_dummy_var_326 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_4255, completion_1);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    goto L29;

  anon58_Then:
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L36;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L34;

  anon73_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L32;

  anon70_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L47;

  L47:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc vslice_dummy_var_4256;
    call {:si_unique_call 1810} vslice_dummy_var_327 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_4256, completion_1);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto L29;

  anon62_Then:
    goto L29;

  anon61_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L49;

  anon60_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L47;

  anon71_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L45;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver#0(actual_DeviceObject_9: int, actual_Irp_5: int) returns (Tmp_1040: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver#1(actual_DeviceObject_9: int, actual_Irp_5: int) returns (Tmp_1040: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_27: int;
  var {:pointer} Irp_5: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_4257: int;
  var vslice_dummy_var_4258: int;
  var vslice_dummy_var_4259: int;
  var vslice_dummy_var_4260: int;

  anon0:
    call {:si_unique_call 1811} completion_1 := __HAVOC_malloc(4);
    Irp_5 := actual_Irp_5;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    status_27 := 259;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto L29;

  L29:
    Tmp_1040 := status_27;
    goto LM2;

  LM2:
    return;

  anon55_Then:
    havoc vslice_dummy_var_4257;
    call {:si_unique_call 1812} vslice_dummy_var_329 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_4257, completion_1);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L23;

  anon53_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L21;

  anon75_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L19;

  anon68_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L60;

  L60:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    havoc vslice_dummy_var_4258;
    call {:si_unique_call 1813} vslice_dummy_var_332 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_4258, completion_1);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    goto L29;

  anon66_Then:
    goto L29;

  anon65_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L62;

  anon64_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L60;

  anon77_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L58;

  anon69_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L34;

  L34:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc vslice_dummy_var_4259;
    call {:si_unique_call 1814} vslice_dummy_var_330 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_4259, completion_1);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    goto L29;

  anon58_Then:
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L36;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L34;

  anon73_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L32;

  anon70_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L47;

  L47:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc vslice_dummy_var_4260;
    call {:si_unique_call 1815} vslice_dummy_var_331 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_5, vslice_dummy_var_4260, completion_1);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto L29;

  anon62_Then:
    goto L29;

  anon61_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L49;

  anon60_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L47;

  anon71_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L45;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver#1(actual_DeviceObject_9: int, actual_Irp_5: int) returns (Tmp_1040: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#0(actual_DeviceObject_10: int, actual_Irp_6: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_1044: int)
{
  var {:scalar} Status: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} Irp_6: int;
  var {:pointer} Context_5: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_10 := actual_DeviceObject_10;
    Irp_6 := actual_Irp_6;
    Context_5 := actual_Context_5;
    Completion := actual_Completion;
    call {:si_unique_call 1816} irpsp := sdv_IoGetNextIrpStackLocation(Irp_6);
    Status := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 1817} Status := Sbp2FdoDevicePowerCompletion(DeviceObject_10, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1818} Status := Sbp2FdoRequestCompletionRoutine(DeviceObject_10, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 1819} Status := Sbp2FdoSystemPowerCompletion#0(DeviceObject_10, Irp_6, Context_5);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L45;

  L45:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 1820} Status := Sbp2PortForwardIrpSynchronousCompletionRoutine(DeviceObject_10, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L62;

  L62:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1821} Status := Sbp2RequestCompletionRoutine#0(DeviceObject_10, Irp_6, Context_5);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L79;

  L79:
    Tmp_1044 := Status;
    goto LM2;

  LM2:
    return;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    goto L79;

  anon17_Then:
    goto L62;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    goto L45;

  anon15_Then:
    goto L28;

  anon19_Then:
    goto L11;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#0(actual_DeviceObject_10: int, actual_Irp_6: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_1044: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#1(actual_DeviceObject_10: int, actual_Irp_6: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_1044: int)
{
  var {:scalar} Status: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} Irp_6: int;
  var {:pointer} Context_5: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_10 := actual_DeviceObject_10;
    Irp_6 := actual_Irp_6;
    Context_5 := actual_Context_5;
    Completion := actual_Completion;
    call {:si_unique_call 1822} irpsp := sdv_IoGetNextIrpStackLocation(Irp_6);
    Status := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 1823} Status := Sbp2FdoDevicePowerCompletion(DeviceObject_10, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1824} Status := Sbp2FdoRequestCompletionRoutine(DeviceObject_10, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 1825} Status := Sbp2FdoSystemPowerCompletion#1(DeviceObject_10, Irp_6, Context_5);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L45;

  L45:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 1826} Status := Sbp2PortForwardIrpSynchronousCompletionRoutine(DeviceObject_10, Irp_6, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L62;

  L62:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1827} Status := Sbp2RequestCompletionRoutine#1(DeviceObject_10, Irp_6, Context_5);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L79;

  L79:
    Tmp_1044 := Status;
    goto LM2;

  LM2:
    return;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    goto L79;

  anon17_Then:
    goto L62;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    goto L45;

  anon15_Then:
    goto L28;

  anon19_Then:
    goto L11;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#1(actual_DeviceObject_10: int, actual_Irp_6: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_1044: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2FdoSystemPowerCompletion"} Sbp2FdoSystemPowerCompletion#0(actual_DeviceObject_25: int, actual_Irp_16: int, actual_Context_10: int) returns (Tmp_1253: int)
{
  var {:pointer} irpStack_9: int;
  var {:scalar} Tmp_1254: int;
  var {:pointer} Tmp_1255: int;
  var {:scalar} newPowerState_6: int;
  var {:pointer} Tmp_1256: int;
  var {:pointer} Tmp_1257: int;
  var {:scalar} powerState_2: int;
  var {:pointer} Tmp_1259: int;
  var {:pointer} fdoExtension_8: int;
  var {:scalar} Tmp_1260: int;
  var {:pointer} Tmp_1261: int;
  var {:pointer} Tmp_1262: int;
  var {:scalar} status_34: int;
  var {:scalar} newSystemState_4: int;
  var {:scalar} Tmp_1263: int;
  var {:pointer} DeviceObject_25: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_4261: int;

  anon0:
    call {:si_unique_call 1828} newPowerState_6 := __HAVOC_malloc(8);
    call {:si_unique_call 1829} powerState_2 := __HAVOC_malloc(8);
    DeviceObject_25 := actual_DeviceObject_25;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 1830} Tmp_1255 := __HAVOC_malloc(4);
    call {:si_unique_call 1831} Tmp_1256 := __HAVOC_malloc(4);
    call {:si_unique_call 1832} Tmp_1262 := __HAVOC_malloc(4);
    status_34 := 0;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    fdoExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_25)];
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1256;
    assume {:nonnull} Tmp_1256 != 0;
    assume Tmp_1256 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_1259;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1263;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    havoc vslice_dummy_var_4261;
    call {:si_unique_call 1833} WPP_SF_qqD(Tmp_1263, 23, Tmp_1259, fdoExtension_8, Irp_16, vslice_dummy_var_4261);
    goto L13;

  L13:
    call {:si_unique_call 1834} irpStack_9 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} irpStack_9 != 0;
    assume irpStack_9 > 0;
    havoc newSystemState_4;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    assume {:nonnull} newPowerState_6 != 0;
    assume newPowerState_6 > 0;
    call {:si_unique_call 1835} Sbp2SetPowerState(DeviceObject_25, 0, newPowerState_6);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} newSystemState_4 == 1;
    call {:si_unique_call 1836} sdv_IoMarkIrpPending(0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1262;
    assume {:nonnull} Tmp_1262 != 0;
    assume Tmp_1262 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    havoc Tmp_1261;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1260;
    call {:si_unique_call 1837} WPP_SF_qq(Tmp_1260, 24, Tmp_1261, fdoExtension_8, Irp_16);
    goto L45;

  L45:
    assume {:nonnull} powerState_2 != 0;
    assume powerState_2 > 0;
    call {:si_unique_call 1838} status_34 := PoRequestPowerIrp#0(DeviceObject_25, 2, powerState_2, li2bplFunctionConstant699, Irp_16, 0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_34 < 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1255;
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_1257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1254;
    call {:si_unique_call 1839} WPP_SF_qD(Tmp_1254, 25, Tmp_1257, fdoExtension_8, status_34);
    goto L69;

  L69:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 1840} PoStartNextPowerIrp(0);
    Tmp_1253 := status_34;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon41_Then:
    goto L69;

  anon48_Then:
    goto L69;

  anon40_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L69;

  anon38_Then:
    assume {:partition} 0 <= status_34;
    status_34 := -1073741802;
    goto L62;

  L62:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_34 != -1073741802;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    havoc status_34;
    call {:si_unique_call 1841} PoStartNextPowerIrp(0);
    goto L63;

  L63:
    Tmp_1253 := status_34;
    goto L1;

  anon39_Then:
    assume {:partition} status_34 == -1073741802;
    goto L63;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    goto L45;

  anon46_Then:
    goto L45;

  anon36_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon35_Then:
    assume {:partition} newSystemState_4 != 1;
    call {:si_unique_call 1842} PoStartNextPowerIrp(0);
    call {:si_unique_call 1843} sdv_IoCompleteRequest(0, 0);
    status_34 := -1073741802;
    goto L62;

  anon45_Then:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} newSystemState_4 == 1;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_8)] := BOR(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_8)], 8388608);
    status_34 := 0;
    goto L62;

  anon42_Then:
    assume {:partition} newSystemState_4 != 1;
    goto L62;

  anon34_Then:
    goto L62;

  anon33_Then:
    goto L13;

  anon44_Then:
    goto L13;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L13;
}



procedure {:origName "Sbp2FdoSystemPowerCompletion"} Sbp2FdoSystemPowerCompletion#0(actual_DeviceObject_25: int, actual_Irp_16: int, actual_Context_10: int) returns (Tmp_1253: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2FdoSystemPowerCompletion"} Sbp2FdoSystemPowerCompletion#1(actual_DeviceObject_25: int, actual_Irp_16: int, actual_Context_10: int) returns (Tmp_1253: int)
{
  var {:pointer} irpStack_9: int;
  var {:scalar} Tmp_1254: int;
  var {:pointer} Tmp_1255: int;
  var {:scalar} newPowerState_6: int;
  var {:pointer} Tmp_1256: int;
  var {:pointer} Tmp_1257: int;
  var {:scalar} powerState_2: int;
  var {:pointer} Tmp_1259: int;
  var {:pointer} fdoExtension_8: int;
  var {:scalar} Tmp_1260: int;
  var {:pointer} Tmp_1261: int;
  var {:pointer} Tmp_1262: int;
  var {:scalar} status_34: int;
  var {:scalar} newSystemState_4: int;
  var {:scalar} Tmp_1263: int;
  var {:pointer} DeviceObject_25: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_4262: int;

  anon0:
    call {:si_unique_call 1844} newPowerState_6 := __HAVOC_malloc(8);
    call {:si_unique_call 1845} powerState_2 := __HAVOC_malloc(8);
    DeviceObject_25 := actual_DeviceObject_25;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 1846} Tmp_1255 := __HAVOC_malloc(4);
    call {:si_unique_call 1847} Tmp_1256 := __HAVOC_malloc(4);
    call {:si_unique_call 1848} Tmp_1262 := __HAVOC_malloc(4);
    status_34 := 0;
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    fdoExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_25)];
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1256;
    assume {:nonnull} Tmp_1256 != 0;
    assume Tmp_1256 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_1259;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1263;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    havoc vslice_dummy_var_4262;
    call {:si_unique_call 1849} WPP_SF_qqD(Tmp_1263, 23, Tmp_1259, fdoExtension_8, Irp_16, vslice_dummy_var_4262);
    goto L13;

  L13:
    call {:si_unique_call 1850} irpStack_9 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} irpStack_9 != 0;
    assume irpStack_9 > 0;
    havoc newSystemState_4;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    assume {:nonnull} newPowerState_6 != 0;
    assume newPowerState_6 > 0;
    call {:si_unique_call 1851} Sbp2SetPowerState(DeviceObject_25, 0, newPowerState_6);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} newSystemState_4 == 1;
    call {:si_unique_call 1852} sdv_IoMarkIrpPending(0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1262;
    assume {:nonnull} Tmp_1262 != 0;
    assume Tmp_1262 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    havoc Tmp_1261;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1260;
    call {:si_unique_call 1853} WPP_SF_qq(Tmp_1260, 24, Tmp_1261, fdoExtension_8, Irp_16);
    goto L45;

  L45:
    assume {:nonnull} powerState_2 != 0;
    assume powerState_2 > 0;
    call {:si_unique_call 1854} status_34 := PoRequestPowerIrp#1(DeviceObject_25, 2, powerState_2, li2bplFunctionConstant699, Irp_16, 0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_34 < 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1255;
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_1257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1254;
    call {:si_unique_call 1855} WPP_SF_qD(Tmp_1254, 25, Tmp_1257, fdoExtension_8, status_34);
    goto L69;

  L69:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 1856} PoStartNextPowerIrp(0);
    Tmp_1253 := status_34;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon41_Then:
    goto L69;

  anon48_Then:
    goto L69;

  anon40_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L69;

  anon38_Then:
    assume {:partition} 0 <= status_34;
    status_34 := -1073741802;
    goto L62;

  L62:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_34 != -1073741802;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    havoc status_34;
    call {:si_unique_call 1857} PoStartNextPowerIrp(0);
    goto L63;

  L63:
    Tmp_1253 := status_34;
    goto L1;

  anon39_Then:
    assume {:partition} status_34 == -1073741802;
    goto L63;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    goto L45;

  anon46_Then:
    goto L45;

  anon36_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon35_Then:
    assume {:partition} newSystemState_4 != 1;
    call {:si_unique_call 1858} PoStartNextPowerIrp(0);
    call {:si_unique_call 1859} sdv_IoCompleteRequest(0, 0);
    status_34 := -1073741802;
    goto L62;

  anon45_Then:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} newSystemState_4 == 1;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_8)] := BOR(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_8)], 8388608);
    status_34 := 0;
    goto L62;

  anon42_Then:
    assume {:partition} newSystemState_4 != 1;
    goto L62;

  anon34_Then:
    goto L62;

  anon33_Then:
    goto L13;

  anon44_Then:
    goto L13;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L13;
}



procedure {:origName "Sbp2FdoSystemPowerCompletion"} Sbp2FdoSystemPowerCompletion#1(actual_DeviceObject_25: int, actual_Irp_16: int, actual_Context_10: int) returns (Tmp_1253: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#0(actual_DeviceObject_6: int, actual_MinorFunction: int, actual_SD4: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_3: int) returns (Tmp_954: int)
{
  var {:scalar} PowerState_4: int;
  var {:pointer} DeviceObject_6: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} SD4: int;
  var {:scalar} CompletionFunction: int;
  var {:pointer} Context_3: int;
  var vslice_dummy_var_333: int;

  anon0:
    call {:si_unique_call 1860} PowerState_4 := __HAVOC_malloc(8);
    DeviceObject_6 := actual_DeviceObject_6;
    MinorFunction := actual_MinorFunction;
    SD4 := actual_SD4;
    CompletionFunction := actual_CompletionFunction;
    Context_3 := actual_Context_3;
    assume {:nonnull} PowerState_4 != 0;
    assume PowerState_4 > 0;
    assume {:nonnull} SD4 != 0;
    assume SD4 > 0;
    assume {:nonnull} PowerState_4 != 0;
    assume PowerState_4 > 0;
    assume {:nonnull} SD4 != 0;
    assume SD4 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} MinorFunction != 3;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 2;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_954 := -1073741584;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    call {:si_unique_call 1861} vslice_dummy_var_333 := sdv_RunPowerCompletionRoutines#0(DeviceObject_6, MinorFunction, PowerState_4, Context_3, IoStatus__IRP(sdv_power_irp), CompletionFunction);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    Tmp_954 := 259;
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_954 := -1073741670;
    goto L1;

  anon12_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon14_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#0(actual_DeviceObject_6: int, actual_MinorFunction: int, actual_SD4: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_3: int) returns (Tmp_954: int);
  modifies alloc, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#1(actual_DeviceObject_6: int, actual_MinorFunction: int, actual_SD4: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_3: int) returns (Tmp_954: int)
{
  var {:scalar} PowerState_4: int;
  var {:pointer} DeviceObject_6: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} SD4: int;
  var {:scalar} CompletionFunction: int;
  var {:pointer} Context_3: int;
  var vslice_dummy_var_334: int;

  anon0:
    call {:si_unique_call 1862} PowerState_4 := __HAVOC_malloc(8);
    DeviceObject_6 := actual_DeviceObject_6;
    MinorFunction := actual_MinorFunction;
    SD4 := actual_SD4;
    CompletionFunction := actual_CompletionFunction;
    Context_3 := actual_Context_3;
    assume {:nonnull} PowerState_4 != 0;
    assume PowerState_4 > 0;
    assume {:nonnull} SD4 != 0;
    assume SD4 > 0;
    assume {:nonnull} PowerState_4 != 0;
    assume PowerState_4 > 0;
    assume {:nonnull} SD4 != 0;
    assume SD4 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} MinorFunction != 3;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 2;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_954 := -1073741584;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    call {:si_unique_call 1863} vslice_dummy_var_334 := sdv_RunPowerCompletionRoutines#1(DeviceObject_6, MinorFunction, PowerState_4, Context_3, IoStatus__IRP(sdv_power_irp), CompletionFunction);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    Tmp_954 := 259;
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_954 := -1073741670;
    goto L1;

  anon12_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon14_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp#1(actual_DeviceObject_6: int, actual_MinorFunction: int, actual_SD4: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_3: int) returns (Tmp_954: int);
  modifies alloc, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#0(actual_DeviceObject_7: int, actual_MinorFunction_1: int, actual_SD3: int, actual_Context_4: int, actual_IoStatus: int, actual_CompletionFunction_1: int) returns (Tmp_964: int)
{
  var {:scalar} PowerState_3: int;
  var {:scalar} CompletionFunction_2: int;
  var {:pointer} DeviceObject_7: int;
  var {:scalar} MinorFunction_1: int;
  var {:pointer} SD3: int;
  var {:pointer} Context_4: int;
  var {:pointer} IoStatus: int;
  var {:scalar} CompletionFunction_1: int;

  anon0:
    call {:si_unique_call 1864} PowerState_3 := __HAVOC_malloc(8);
    DeviceObject_7 := actual_DeviceObject_7;
    MinorFunction_1 := actual_MinorFunction_1;
    SD3 := actual_SD3;
    Context_4 := actual_Context_4;
    IoStatus := actual_IoStatus;
    CompletionFunction_1 := actual_CompletionFunction_1;
    assume {:nonnull} PowerState_3 != 0;
    assume PowerState_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} PowerState_3 != 0;
    assume PowerState_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    CompletionFunction_2 := 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant697;
    call {:si_unique_call 1865} sdv_stub_power_completion_begin();
    call {:si_unique_call 1866} Sbp2FdoSystemPowerDownCompletion#0(DeviceObject_7, MinorFunction_1, PowerState_3, Context_4, IoStatus);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    CompletionFunction_2 := 1;
    goto L6;

  L6:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant699;
    call {:si_unique_call 1867} sdv_stub_power_completion_begin();
    call {:si_unique_call 1868} Sbp2FdoSystemPowerUpCompletion(DeviceObject_7, MinorFunction_1, PowerState_3, Context_4, IoStatus);
    CompletionFunction_2 := 1;
    goto L19;

  L19:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant694;
    call {:si_unique_call 1869} sdv_stub_power_completion_begin();
    call {:si_unique_call 1870} Sbp2PdoSystemPowerCompletion(DeviceObject_7, MinorFunction_1, PowerState_3, Context_4, IoStatus);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    CompletionFunction_2 := 1;
    goto L32;

  L32:
    Tmp_964 := CompletionFunction_2;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant694;
    goto L32;

  anon11_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant699;
    goto L19;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant697;
    goto L6;
}



procedure {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#0(actual_DeviceObject_7: int, actual_MinorFunction_1: int, actual_SD3: int, actual_Context_4: int, actual_IoStatus: int, actual_CompletionFunction_1: int) returns (Tmp_964: int);
  modifies alloc, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#1(actual_DeviceObject_7: int, actual_MinorFunction_1: int, actual_SD3: int, actual_Context_4: int, actual_IoStatus: int, actual_CompletionFunction_1: int) returns (Tmp_964: int)
{
  var {:scalar} PowerState_3: int;
  var {:scalar} CompletionFunction_2: int;
  var {:pointer} DeviceObject_7: int;
  var {:scalar} MinorFunction_1: int;
  var {:pointer} SD3: int;
  var {:pointer} Context_4: int;
  var {:pointer} IoStatus: int;
  var {:scalar} CompletionFunction_1: int;

  anon0:
    call {:si_unique_call 1871} PowerState_3 := __HAVOC_malloc(8);
    DeviceObject_7 := actual_DeviceObject_7;
    MinorFunction_1 := actual_MinorFunction_1;
    SD3 := actual_SD3;
    Context_4 := actual_Context_4;
    IoStatus := actual_IoStatus;
    CompletionFunction_1 := actual_CompletionFunction_1;
    assume {:nonnull} PowerState_3 != 0;
    assume PowerState_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    assume {:nonnull} PowerState_3 != 0;
    assume PowerState_3 > 0;
    assume {:nonnull} SD3 != 0;
    assume SD3 > 0;
    CompletionFunction_2 := 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant697;
    call {:si_unique_call 1872} sdv_stub_power_completion_begin();
    call {:si_unique_call 1873} Sbp2FdoSystemPowerDownCompletion#1(DeviceObject_7, MinorFunction_1, PowerState_3, Context_4, IoStatus);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    CompletionFunction_2 := 1;
    goto L6;

  L6:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant699;
    call {:si_unique_call 1874} sdv_stub_power_completion_begin();
    call {:si_unique_call 1875} Sbp2FdoSystemPowerUpCompletion(DeviceObject_7, MinorFunction_1, PowerState_3, Context_4, IoStatus);
    CompletionFunction_2 := 1;
    goto L19;

  L19:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} CompletionFunction_1 == li2bplFunctionConstant694;
    call {:si_unique_call 1876} sdv_stub_power_completion_begin();
    call {:si_unique_call 1877} Sbp2PdoSystemPowerCompletion(DeviceObject_7, MinorFunction_1, PowerState_3, Context_4, IoStatus);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    CompletionFunction_2 := 1;
    goto L32;

  L32:
    Tmp_964 := CompletionFunction_2;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant694;
    goto L32;

  anon11_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant699;
    goto L19;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} CompletionFunction_1 != li2bplFunctionConstant697;
    goto L6;
}



procedure {:origName "sdv_RunPowerCompletionRoutines"} {:osmodel} sdv_RunPowerCompletionRoutines#1(actual_DeviceObject_7: int, actual_MinorFunction_1: int, actual_SD3: int, actual_Context_4: int, actual_IoStatus: int, actual_CompletionFunction_1: int) returns (Tmp_964: int);
  modifies alloc, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2FdoSystemPowerDownCompletion"} Sbp2FdoSystemPowerDownCompletion#0(actual_DeviceObject_15: int, actual_MinorFunction_2: int, actual_SD2: int, actual_Context_6: int, actual_IoStatus_1: int)
{
  var {:scalar} PowerState_2: int;
  var {:scalar} Tmp_1117: int;
  var {:pointer} fdoExtension_3: int;
  var {:pointer} Tmp_1118: int;
  var {:pointer} irp: int;
  var {:pointer} Tmp_1119: int;
  var {:scalar} Tmp_1120: int;
  var {:pointer} Tmp_1121: int;
  var {:pointer} Tmp_1123: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} SD2: int;
  var {:pointer} Context_6: int;
  var {:pointer} IoStatus_1: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_4263: int;
  var vslice_dummy_var_4264: int;

  anon0:
    call {:si_unique_call 1878} PowerState_2 := __HAVOC_malloc(8);
    call {:si_unique_call 1879} vslice_dummy_var_335 := __HAVOC_malloc(4);
    DeviceObject_15 := actual_DeviceObject_15;
    SD2 := actual_SD2;
    Context_6 := actual_Context_6;
    IoStatus_1 := actual_IoStatus_1;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    call {:si_unique_call 1880} Tmp_1118 := __HAVOC_malloc(4);
    call {:si_unique_call 1881} Tmp_1121 := __HAVOC_malloc(4);
    irp := Context_6;
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    fdoExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_15)];
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1121;
    assume {:nonnull} Tmp_1121 != 0;
    assume Tmp_1121 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    havoc Tmp_1123;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1117;
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    havoc vslice_dummy_var_4263;
    call {:si_unique_call 1882} WPP_SF_qqD(Tmp_1117, 21, Tmp_1123, fdoExtension_3, irp, vslice_dummy_var_4263);
    goto L11;

  L11:
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1118;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1119;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1120;
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    havoc vslice_dummy_var_4264;
    call {:si_unique_call 1883} WPP_SF_qD(Tmp_1120, 22, Tmp_1119, fdoExtension_3, vslice_dummy_var_4264);
    goto L36;

  L36:
    assume {:nonnull} irp != 0;
    assume irp > 0;
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    assume {:nonnull} irp != 0;
    assume irp > 0;
    call {:si_unique_call 1884} PoStartNextPowerIrp(0);
    call {:si_unique_call 1885} sdv_IoCompleteRequest(0, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon20_Then:
    goto L36;

  anon24_Then:
    goto L36;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L36;

  anon17_Then:
    call {:si_unique_call 1886} PoStartNextPowerIrp(0);
    call {:si_unique_call 1887} sdv_IoCopyCurrentIrpStackLocationToNext(irp);
    call {:si_unique_call 1888} sdv_IoSetCompletionRoutine(irp, li2bplFunctionConstant698, Context_6, 1, 1, 1);
    call {:si_unique_call 1889} vslice_dummy_var_336 := PoCallDriver#0(0, irp);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon23_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    goto L11;

  anon22_Then:
    goto L11;

  anon21_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L11;
}



procedure {:origName "Sbp2FdoSystemPowerDownCompletion"} Sbp2FdoSystemPowerDownCompletion#0(actual_DeviceObject_15: int, actual_MinorFunction_2: int, actual_SD2: int, actual_Context_6: int, actual_IoStatus_1: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2FdoSystemPowerDownCompletion"} Sbp2FdoSystemPowerDownCompletion#1(actual_DeviceObject_15: int, actual_MinorFunction_2: int, actual_SD2: int, actual_Context_6: int, actual_IoStatus_1: int)
{
  var {:scalar} PowerState_2: int;
  var {:scalar} Tmp_1117: int;
  var {:pointer} fdoExtension_3: int;
  var {:pointer} Tmp_1118: int;
  var {:pointer} irp: int;
  var {:pointer} Tmp_1119: int;
  var {:scalar} Tmp_1120: int;
  var {:pointer} Tmp_1121: int;
  var {:pointer} Tmp_1123: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} SD2: int;
  var {:pointer} Context_6: int;
  var {:pointer} IoStatus_1: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_4265: int;
  var vslice_dummy_var_4266: int;

  anon0:
    call {:si_unique_call 1890} PowerState_2 := __HAVOC_malloc(8);
    call {:si_unique_call 1891} vslice_dummy_var_337 := __HAVOC_malloc(4);
    DeviceObject_15 := actual_DeviceObject_15;
    SD2 := actual_SD2;
    Context_6 := actual_Context_6;
    IoStatus_1 := actual_IoStatus_1;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} PowerState_2 != 0;
    assume PowerState_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    call {:si_unique_call 1892} Tmp_1118 := __HAVOC_malloc(4);
    call {:si_unique_call 1893} Tmp_1121 := __HAVOC_malloc(4);
    irp := Context_6;
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    fdoExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_15)];
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1121;
    assume {:nonnull} Tmp_1121 != 0;
    assume Tmp_1121 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    havoc Tmp_1123;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1117;
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    havoc vslice_dummy_var_4265;
    call {:si_unique_call 1894} WPP_SF_qqD(Tmp_1117, 21, Tmp_1123, fdoExtension_3, irp, vslice_dummy_var_4265);
    goto L11;

  L11:
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1118;
    assume {:nonnull} Tmp_1118 != 0;
    assume Tmp_1118 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1119;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1120;
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    havoc vslice_dummy_var_4266;
    call {:si_unique_call 1895} WPP_SF_qD(Tmp_1120, 22, Tmp_1119, fdoExtension_3, vslice_dummy_var_4266);
    goto L36;

  L36:
    assume {:nonnull} irp != 0;
    assume irp > 0;
    assume {:nonnull} IoStatus_1 != 0;
    assume IoStatus_1 > 0;
    assume {:nonnull} irp != 0;
    assume irp > 0;
    call {:si_unique_call 1896} PoStartNextPowerIrp(0);
    call {:si_unique_call 1897} sdv_IoCompleteRequest(0, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon20_Then:
    goto L36;

  anon24_Then:
    goto L36;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L36;

  anon17_Then:
    call {:si_unique_call 1898} PoStartNextPowerIrp(0);
    call {:si_unique_call 1899} sdv_IoCopyCurrentIrpStackLocationToNext(irp);
    call {:si_unique_call 1900} sdv_IoSetCompletionRoutine(irp, li2bplFunctionConstant698, Context_6, 1, 1, 1);
    call {:si_unique_call 1901} vslice_dummy_var_338 := PoCallDriver#1(0, irp);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon23_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    goto L11;

  anon22_Then:
    goto L11;

  anon21_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L11;
}



procedure {:origName "Sbp2FdoSystemPowerDownCompletion"} Sbp2FdoSystemPowerDownCompletion#1(actual_DeviceObject_15: int, actual_MinorFunction_2: int, actual_SD2: int, actual_Context_6: int, actual_IoStatus_1: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver#0(actual_DeviceObject_3: int, actual_Irp_1: int) returns (Tmp_917: int)
{
  var {:dopa} {:scalar} completion: int;
  var {:scalar} status_24: int;
  var {:pointer} Irp_1: int;

  anon0:
    call {:si_unique_call 1902} completion := __HAVOC_malloc(4);
    Irp_1 := actual_Irp_1;
    assume {:nonnull} completion != 0;
    assume completion > 0;
    status_24 := 259;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L29;

  L29:
    Tmp_917 := status_24;
    goto LM2;

  LM2:
    return;

  anon56_Then:
    assume false;
    return;

  anon55_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L23;

  anon54_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L21;

  anon75_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L19;

  anon69_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L60;

  L60:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume false;
    return;

  anon68_Then:
    goto L29;

  anon67_Then:
    goto L29;

  anon66_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L62;

  anon65_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L60;

  anon77_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L58;

  anon70_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L34;

  L34:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume false;
    return;

  anon60_Then:
    goto L29;

  anon59_Then:
    goto L29;

  anon58_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L36;

  anon57_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L34;

  anon73_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L32;

  anon53_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L47;

  L47:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume false;
    return;

  anon64_Then:
    goto L29;

  anon63_Then:
    goto L29;

  anon62_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L49;

  anon61_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L47;

  anon71_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L45;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver#0(actual_DeviceObject_3: int, actual_Irp_1: int) returns (Tmp_917: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_917 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver#1(actual_DeviceObject_3: int, actual_Irp_1: int) returns (Tmp_917: int)
{
  var {:dopa} {:scalar} completion: int;
  var {:scalar} status_24: int;
  var {:pointer} Irp_1: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_4267: int;
  var vslice_dummy_var_4268: int;
  var vslice_dummy_var_4269: int;
  var vslice_dummy_var_4270: int;

  anon0:
    call {:si_unique_call 1903} completion := __HAVOC_malloc(4);
    Irp_1 := actual_Irp_1;
    assume {:nonnull} completion != 0;
    assume completion > 0;
    status_24 := 259;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L23;

  L23:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L29;

  L29:
    Tmp_917 := status_24;
    goto LM2;

  LM2:
    return;

  anon56_Then:
    havoc vslice_dummy_var_4267;
    call {:si_unique_call 1904} vslice_dummy_var_339 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_1, vslice_dummy_var_4267, completion);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L23;

  anon54_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L21;

  anon75_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L19;

  anon69_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L58;

  L58:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L60;

  L60:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L62;

  L62:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc vslice_dummy_var_4268;
    call {:si_unique_call 1905} vslice_dummy_var_342 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_1, vslice_dummy_var_4268, completion);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    goto L29;

  anon67_Then:
    goto L29;

  anon66_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L62;

  anon65_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L60;

  anon77_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L58;

  anon70_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L32;

  L32:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L34;

  L34:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc vslice_dummy_var_4269;
    call {:si_unique_call 1906} vslice_dummy_var_340 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_1, vslice_dummy_var_4269, completion);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L29;

  anon59_Then:
    goto L29;

  anon58_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L36;

  anon57_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L34;

  anon73_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L32;

  anon53_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L45;

  L45:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L47;

  L47:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L49;

  L49:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    havoc vslice_dummy_var_4270;
    call {:si_unique_call 1907} vslice_dummy_var_341 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_1, vslice_dummy_var_4270, completion);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} yogi_error != 1;
    goto L29;

  anon72_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    goto L29;

  anon63_Then:
    goto L29;

  anon62_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L49;

  anon61_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L47;

  anon71_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L45;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver#1(actual_DeviceObject_3: int, actual_Irp_1: int) returns (Tmp_917: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2RequestCompletionRoutine"} Sbp2RequestCompletionRoutine#0(actual_DeviceObject_27: int, actual_Irp_17: int, actual_ContextIn: int) returns (Tmp_1294: int)
{
  var {:pointer} Tmp_1295: int;
  var {:pointer} Tmp_1296: int;
  var {:pointer} Tmp_1297: int;
  var {:scalar} cIrql_6: int;
  var {:pointer} pdoExtension_11: int;
  var {:pointer} Tmp_1298: int;
  var {:pointer} Tmp_1299: int;
  var {:pointer} Tmp_1300: int;
  var {:scalar} sdv_424: int;
  var {:pointer} Context_12: int;
  var {:pointer} Tmp_1301: int;
  var {:pointer} Tmp_1302: int;
  var {:scalar} cIrql_7: int;
  var {:pointer} Tmp_1304: int;
  var {:scalar} completed: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} ContextIn: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_4271: int;
  var vslice_dummy_var_4272: int;

  anon0:
    ContextIn := actual_ContextIn;
    Context_12 := ContextIn;
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    call {:si_unique_call 1908} vslice_dummy_var_343 := KeSetEvent(Event__REQUEST_CONTEXT(Context_12), 0, 0);
    goto L10;

  L10:
    Tmp_1294 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon26_Then:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    completed := sdv_424;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} completed != 0;
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc deviceExtension_1;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1909} Tmp_1297 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    call {:si_unique_call 1910} sdv_KeAcquireSpinLock(0, Tmp_1297);
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    havoc cIrql_6;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1911} ExFreeToNPagedLookasideList#0(BusRequestContextPool__DEVICE_EXTENSION(deviceExtension_1), Context_12);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1912} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L10;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    call {:si_unique_call 1913} sdv_ExFreePool(0);
    goto L10;

  anon31_Then:
    assume {:partition} completed == 0;
    goto L10;

  anon23_Then:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc Tmp_1300;
    assume {:nonnull} Tmp_1300 != 0;
    assume Tmp_1300 > 0;
    havoc Tmp_1301;
    assume {:nonnull} Tmp_1301 != 0;
    assume Tmp_1301 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Tmp_1301 != 0;
    assume Tmp_1301 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L18;

  L18:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc Tmp_1304;
    assume {:nonnull} Tmp_1304 != 0;
    assume Tmp_1304 > 0;
    havoc Tmp_1296;
    assume {:nonnull} Tmp_1296 != 0;
    assume Tmp_1296 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc Tmp_1295;
    assume {:nonnull} Tmp_1295 != 0;
    assume Tmp_1295 > 0;
    call {:si_unique_call 1914} IoFreeMdl(0);
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc Tmp_1299;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    havoc Tmp_1298;
    assume {:nonnull} Tmp_1298 != 0;
    assume Tmp_1298 > 0;
    goto L15;

  L15:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc vslice_dummy_var_4271;
    havoc vslice_dummy_var_4272;
    call {:si_unique_call 1915} DeAllocateIrpAndIrb(vslice_dummy_var_4271, vslice_dummy_var_4272);
    goto L13;

  L13:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc Tmp_1302;
    assume {:nonnull} Tmp_1302 != 0;
    assume Tmp_1302 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc pdoExtension_11;
    call {:si_unique_call 1916} Tmp_1297 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    call {:si_unique_call 1917} sdv_KeAcquireSpinLock(0, Tmp_1297);
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    call {:si_unique_call 1918} ExFreeToNPagedLookasideList#0(BusRequestContextPool__DEVICE_EXTENSION(pdoExtension_11), Context_12);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1919} sdv_KeReleaseSpinLock(0, cIrql_7);
    goto L10;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    call {:si_unique_call 1920} sdv_ExFreePool(0);
    goto L10;

  anon28_Then:
    goto L15;

  anon25_Then:
    goto L15;

  anon27_Then:
    goto L18;

  anon24_Then:
    goto L13;
}



procedure {:origName "Sbp2RequestCompletionRoutine"} Sbp2RequestCompletionRoutine#0(actual_DeviceObject_27: int, actual_Irp_17: int, actual_ContextIn: int) returns (Tmp_1294: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2RequestCompletionRoutine"} Sbp2RequestCompletionRoutine#1(actual_DeviceObject_27: int, actual_Irp_17: int, actual_ContextIn: int) returns (Tmp_1294: int)
{
  var {:pointer} Tmp_1295: int;
  var {:pointer} Tmp_1296: int;
  var {:pointer} Tmp_1297: int;
  var {:scalar} cIrql_6: int;
  var {:pointer} pdoExtension_11: int;
  var {:pointer} Tmp_1298: int;
  var {:pointer} Tmp_1299: int;
  var {:pointer} Tmp_1300: int;
  var {:scalar} sdv_424: int;
  var {:pointer} Context_12: int;
  var {:pointer} Tmp_1301: int;
  var {:pointer} Tmp_1302: int;
  var {:scalar} cIrql_7: int;
  var {:pointer} Tmp_1304: int;
  var {:scalar} completed: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} ContextIn: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_4273: int;
  var vslice_dummy_var_4274: int;

  anon0:
    ContextIn := actual_ContextIn;
    Context_12 := ContextIn;
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    call {:si_unique_call 1921} vslice_dummy_var_344 := KeSetEvent(Event__REQUEST_CONTEXT(Context_12), 0, 0);
    goto L10;

  L10:
    Tmp_1294 := -1073741802;
    goto LM2;

  LM2:
    return;

  anon26_Then:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    completed := sdv_424;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} completed != 0;
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc deviceExtension_1;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1922} Tmp_1297 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    call {:si_unique_call 1923} sdv_KeAcquireSpinLock(0, Tmp_1297);
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    havoc cIrql_6;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    call {:si_unique_call 1924} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(deviceExtension_1), Context_12);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1925} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L10;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    call {:si_unique_call 1926} sdv_ExFreePool(0);
    goto L10;

  anon31_Then:
    assume {:partition} completed == 0;
    goto L10;

  anon23_Then:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc Tmp_1300;
    assume {:nonnull} Tmp_1300 != 0;
    assume Tmp_1300 > 0;
    havoc Tmp_1301;
    assume {:nonnull} Tmp_1301 != 0;
    assume Tmp_1301 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Tmp_1301 != 0;
    assume Tmp_1301 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L18;

  L18:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc Tmp_1304;
    assume {:nonnull} Tmp_1304 != 0;
    assume Tmp_1304 > 0;
    havoc Tmp_1296;
    assume {:nonnull} Tmp_1296 != 0;
    assume Tmp_1296 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc Tmp_1295;
    assume {:nonnull} Tmp_1295 != 0;
    assume Tmp_1295 > 0;
    call {:si_unique_call 1927} IoFreeMdl(0);
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc Tmp_1299;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    havoc Tmp_1298;
    assume {:nonnull} Tmp_1298 != 0;
    assume Tmp_1298 > 0;
    goto L15;

  L15:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc vslice_dummy_var_4273;
    havoc vslice_dummy_var_4274;
    call {:si_unique_call 1928} DeAllocateIrpAndIrb(vslice_dummy_var_4273, vslice_dummy_var_4274);
    goto L13;

  L13:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc Tmp_1302;
    assume {:nonnull} Tmp_1302 != 0;
    assume Tmp_1302 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Context_12 != 0;
    assume Context_12 > 0;
    havoc pdoExtension_11;
    call {:si_unique_call 1929} Tmp_1297 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    call {:si_unique_call 1930} sdv_KeAcquireSpinLock(0, Tmp_1297);
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    call {:si_unique_call 1931} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(pdoExtension_11), Context_12);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1932} sdv_KeReleaseSpinLock(0, cIrql_7);
    goto L10;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    call {:si_unique_call 1933} sdv_ExFreePool(0);
    goto L10;

  anon28_Then:
    goto L15;

  anon25_Then:
    goto L15;

  anon27_Then:
    goto L18;

  anon24_Then:
    goto L13;
}



procedure {:origName "Sbp2RequestCompletionRoutine"} Sbp2RequestCompletionRoutine#1(actual_DeviceObject_27: int, actual_Irp_17: int, actual_ContextIn: int) returns (Tmp_1294: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_2523: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;

  anon0:
    call {:si_unique_call 1934} vslice_dummy_var_345 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_2523 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_2523 != 0;
    assume Tmp_2523 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1935} Sbp2AllocComplete#0(Entry_3);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1936} Sbp2BusResetNotification#0(Entry_3);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon30_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1937} Sbp2BusResetNotificationEx#0(Entry_3);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1938} vslice_dummy_var_348 := Sbp2GlobalStatusCallback#0(Entry_3);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1939} vslice_dummy_var_347 := Sbp2ManagementOrbStatusCallback#0(Entry_3);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1940} vslice_dummy_var_346 := Sbp2TaskOrbStatusCallback#0(Entry_3);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L1;

  anon27_Then:
    call {:si_unique_call 1941} vslice_dummy_var_349 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_2523: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;

  anon0:
    call {:si_unique_call 1942} vslice_dummy_var_350 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_2523 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_2523 != 0;
    assume Tmp_2523 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1943} Sbp2AllocComplete#1(Entry_3);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1944} Sbp2BusResetNotification#1(Entry_3);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon30_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1945} Sbp2BusResetNotificationEx#1(Entry_3);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1946} vslice_dummy_var_353 := Sbp2GlobalStatusCallback#1(Entry_3);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1947} vslice_dummy_var_352 := Sbp2ManagementOrbStatusCallback#1(Entry_3);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1948} vslice_dummy_var_351 := Sbp2TaskOrbStatusCallback#1(Entry_3);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L1;

  anon27_Then:
    call {:si_unique_call 1949} vslice_dummy_var_354 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#0(actual_NotificationInfo: int) returns (Tmp_42: int)
{
  var {:scalar} Tmp_43: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} deviceObject: int;
  var {:scalar} Tmp_45: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} Tmp_47: int;
  var {:scalar} Tmp_48: int;
  var {:pointer} Tmp_49: int;
  var {:scalar} sdv_12: int;
  var {:pointer} Tmp_50: int;
  var {:scalar} sdv_13: int;
  var {:pointer} Tmp_52: int;
  var {:scalar} Tmp_53: int;
  var {:pointer} Tmp_54: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:scalar} Tmp_57: int;
  var {:scalar} status_1: int;
  var {:pointer} NotificationInfo: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_4275: int;
  var vslice_dummy_var_4276: int;
  var vslice_dummy_var_4277: int;
  var vslice_dummy_var_4278: int;
  var vslice_dummy_var_4279: int;
  var vslice_dummy_var_4280: int;
  var vslice_dummy_var_4281: int;

  anon0:
    NotificationInfo := actual_NotificationInfo;
    call {:si_unique_call 1950} Tmp_46 := __HAVOC_malloc(4);
    call {:si_unique_call 1951} Tmp_47 := __HAVOC_malloc(4);
    call {:si_unique_call 1952} Tmp_50 := __HAVOC_malloc(4);
    call {:si_unique_call 1953} Tmp_54 := __HAVOC_malloc(4);
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    havoc deviceObject;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    pdoExtension := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject)];
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    Tmp_42 := 6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon66_Then:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 1954} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1955} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_42 := 0;
    goto L1;

  anon54_Then:
    call {:si_unique_call 1956} vslice_dummy_var_355 := KeCancelTimer(0);
    call {:si_unique_call 1957} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1958} status_1 := CheckStatusResponseValue(TaskOrbStatusBlock__DEVICE_EXTENSION(pdoExtension));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_1 != 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_54;
    assume {:nonnull} Tmp_54 != 0;
    assume Tmp_54 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc Tmp_52;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_43;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4275;
    havoc vslice_dummy_var_4276;
    call {:si_unique_call 1959} WPP_SF_qDd(Tmp_43, 115, Tmp_52, pdoExtension, vslice_dummy_var_4275, vslice_dummy_var_4276);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4277;
    call {:si_unique_call 1960} vslice_dummy_var_356 := Sbp2Reset#0(vslice_dummy_var_4277, 1);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_50;
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_44;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_45;
    call {:si_unique_call 1961} WPP_SF_q(Tmp_45, 116, Tmp_44, pdoExtension);
    goto L82;

  L82:
    call {:si_unique_call 1962} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1963} Sbp2AddLog(pdoExtension, 1, -732793996, status_1, 0);
    goto L94;

  L94:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_57 := 5;
    goto L101;

  L101:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1964} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1965} CleanupOrbList#0(pdoExtension, -1073741248);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4278;
    call {:si_unique_call 1966} Sbp2StartNextPacketByKey#0(vslice_dummy_var_4278, 0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_42 := 0;
    goto L1;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_57;
    goto L101;

  anon72_Then:
    goto L94;

  anon62_Then:
    goto L82;

  anon71_Then:
    goto L82;

  anon61_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L45;

  anon69_Then:
    goto L45;

  anon59_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon56_Then:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_46;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_49;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_53;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4279;
    call {:si_unique_call 1967} WPP_SF_qDd(Tmp_53, 114, Tmp_49, pdoExtension, vslice_dummy_var_4279, 15);
    goto L56;

  L56:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4280;
    call {:si_unique_call 1968} Sbp2CreateRequestErrorLog(vslice_dummy_var_4280, 0, 4381, 16);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4281;
    call {:si_unique_call 1969} vslice_dummy_var_357 := Sbp2Reset#0(vslice_dummy_var_4281, 5);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    Tmp_42 := 0;
    goto L1;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto L56;

  anon67_Then:
    goto L56;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon55_Then:
    assume {:partition} status_1 == 0;
    goto L45;

  anon53_Then:
    call {:si_unique_call 1970} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_55;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_48;
    call {:si_unique_call 1971} WPP_SF_q(Tmp_48, 113, Tmp_55, pdoExtension);
    goto L115;

  L115:
    Tmp_42 := 0;
    goto L1;

  anon65_Then:
    goto L115;

  anon75_Then:
    goto L115;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L115;

  anon52_Then:
    goto L13;

  anon51_Then:
    Tmp_42 := 0;
    goto L1;
}



procedure {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#0(actual_NotificationInfo: int) returns (Tmp_42: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#1(actual_NotificationInfo: int) returns (Tmp_42: int)
{
  var {:scalar} Tmp_43: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} deviceObject: int;
  var {:scalar} Tmp_45: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} Tmp_47: int;
  var {:scalar} Tmp_48: int;
  var {:pointer} Tmp_49: int;
  var {:scalar} sdv_12: int;
  var {:pointer} Tmp_50: int;
  var {:scalar} sdv_13: int;
  var {:pointer} Tmp_52: int;
  var {:scalar} Tmp_53: int;
  var {:pointer} Tmp_54: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:scalar} Tmp_57: int;
  var {:scalar} status_1: int;
  var {:pointer} NotificationInfo: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_4282: int;
  var vslice_dummy_var_4283: int;
  var vslice_dummy_var_4284: int;
  var vslice_dummy_var_4285: int;
  var vslice_dummy_var_4286: int;
  var vslice_dummy_var_4287: int;
  var vslice_dummy_var_4288: int;

  anon0:
    NotificationInfo := actual_NotificationInfo;
    call {:si_unique_call 1972} Tmp_46 := __HAVOC_malloc(4);
    call {:si_unique_call 1973} Tmp_47 := __HAVOC_malloc(4);
    call {:si_unique_call 1974} Tmp_50 := __HAVOC_malloc(4);
    call {:si_unique_call 1975} Tmp_54 := __HAVOC_malloc(4);
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    havoc deviceObject;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    pdoExtension := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject)];
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    Tmp_42 := 6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon66_Then:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 1976} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1977} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_42 := 0;
    goto L1;

  anon54_Then:
    call {:si_unique_call 1978} vslice_dummy_var_358 := KeCancelTimer(0);
    call {:si_unique_call 1979} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1980} status_1 := CheckStatusResponseValue(TaskOrbStatusBlock__DEVICE_EXTENSION(pdoExtension));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_1 != 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_54;
    assume {:nonnull} Tmp_54 != 0;
    assume Tmp_54 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc Tmp_52;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_43;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4282;
    havoc vslice_dummy_var_4283;
    call {:si_unique_call 1981} WPP_SF_qDd(Tmp_43, 115, Tmp_52, pdoExtension, vslice_dummy_var_4282, vslice_dummy_var_4283);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4284;
    call {:si_unique_call 1982} vslice_dummy_var_359 := Sbp2Reset#1(vslice_dummy_var_4284, 1);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_50;
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_44;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_45;
    call {:si_unique_call 1983} WPP_SF_q(Tmp_45, 116, Tmp_44, pdoExtension);
    goto L82;

  L82:
    call {:si_unique_call 1984} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1985} Sbp2AddLog(pdoExtension, 1, -732793996, status_1, 0);
    goto L94;

  L94:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_57 := 5;
    goto L101;

  L101:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1986} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1987} CleanupOrbList#1(pdoExtension, -1073741248);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4285;
    call {:si_unique_call 1988} Sbp2StartNextPacketByKey#1(vslice_dummy_var_4285, 0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_42 := 0;
    goto L1;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_57;
    goto L101;

  anon72_Then:
    goto L94;

  anon62_Then:
    goto L82;

  anon71_Then:
    goto L82;

  anon61_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L45;

  anon69_Then:
    goto L45;

  anon59_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon56_Then:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_46;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_49;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_53;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4286;
    call {:si_unique_call 1989} WPP_SF_qDd(Tmp_53, 114, Tmp_49, pdoExtension, vslice_dummy_var_4286, 15);
    goto L56;

  L56:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4287;
    call {:si_unique_call 1990} Sbp2CreateRequestErrorLog(vslice_dummy_var_4287, 0, 4381, 16);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_4288;
    call {:si_unique_call 1991} vslice_dummy_var_360 := Sbp2Reset#1(vslice_dummy_var_4288, 5);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    Tmp_42 := 0;
    goto L1;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto L56;

  anon67_Then:
    goto L56;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon55_Then:
    assume {:partition} status_1 == 0;
    goto L45;

  anon53_Then:
    call {:si_unique_call 1992} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_55;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_48;
    call {:si_unique_call 1993} WPP_SF_q(Tmp_48, 113, Tmp_55, pdoExtension);
    goto L115;

  L115:
    Tmp_42 := 0;
    goto L1;

  anon65_Then:
    goto L115;

  anon75_Then:
    goto L115;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L115;

  anon52_Then:
    goto L13;

  anon51_Then:
    Tmp_42 := 0;
    goto L1;
}



procedure {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#1(actual_NotificationInfo: int) returns (Tmp_42: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2Reset"} Sbp2Reset#0(actual_DeviceObject_46: int, actual_ResetLevel: int) returns (Tmp_2012: int)
{
  var {:pointer} Tmp_2013: int;
  var {:pointer} Tmp_2014: int;
  var {:pointer} Tmp_2015: int;
  var {:scalar} transTimeout: int;
  var {:scalar} retry: int;
  var {:pointer} pdoExtension_19: int;
  var {:pointer} Tmp_2016: int;
  var {:pointer} Tmp_2017: int;
  var {:pointer} Tmp_2018: int;
  var {:pointer} Tmp_2019: int;
  var {:scalar} Tmp_2020: int;
  var {:scalar} sdv_620: int;
  var {:pointer} Tmp_2021: int;
  var {:pointer} Tmp_2022: int;
  var {:pointer} Tmp_2023: int;
  var {:scalar} transType: int;
  var {:scalar} sdv_622: int;
  var {:pointer} Tmp_2024: int;
  var {:scalar} sdv_624: int;
  var {:scalar} Tmp_2025: int;
  var {:pointer} Tmp_2026: int;
  var {:scalar} Tmp_2027: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} Tmp_2028: int;
  var {:pointer} Tmp_2029: int;
  var {:pointer} fdoExtension_10: int;
  var {:scalar} sdv_626: int;
  var {:pointer} Tmp_2030: int;
  var {:pointer} Tmp_2031: int;
  var {:pointer} Tmp_2032: int;
  var {:pointer} irp_8: int;
  var {:pointer} Tmp_2033: int;
  var {:scalar} Tmp_2034: int;
  var {:pointer} Tmp_2035: int;
  var {:scalar} Tmp_2036: int;
  var {:pointer} sdv_630: int;
  var {:scalar} status_64: int;
  var {:pointer} Tmp_2037: int;
  var {:pointer} Tmp_2038: int;
  var {:pointer} Tmp_2039: int;
  var {:pointer} Tmp_2040: int;
  var {:pointer} DeviceObject_46: int;
  var {:scalar} ResetLevel: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_4289: int;
  var vslice_dummy_var_4290: int;
  var vslice_dummy_var_4291: int;

  anon0:
    DeviceObject_46 := actual_DeviceObject_46;
    ResetLevel := actual_ResetLevel;
    call {:si_unique_call 1994} Tmp_2019 := __HAVOC_malloc(4);
    call {:si_unique_call 1995} Tmp_2023 := __HAVOC_malloc(4);
    call {:si_unique_call 1996} Tmp_2024 := __HAVOC_malloc(4);
    call {:si_unique_call 1997} Tmp_2029 := __HAVOC_malloc(4);
    call {:si_unique_call 1998} Tmp_2039 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_46 != 0;
    assume DeviceObject_46 > 0;
    pdoExtension_19 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_46)];
    status_64 := 0;
    retry := 2;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2021;
    assume {:nonnull} Tmp_2021 != 0;
    assume Tmp_2021 > 0;
    fdoExtension_10 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2021)];
    call {:si_unique_call 1999} Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    call {:si_unique_call 2000} sdv_KeAcquireSpinLock(0, Tmp_2032);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    call {:si_unique_call 2001} sdv_KeReleaseSpinLock(0, oldIrql_5);
    Tmp_2012 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon81_Then:
    call {:si_unique_call 2002} sdv_KeReleaseSpinLock(0, oldIrql_5);
    goto L26;

  L26:
    call {:si_unique_call 2003} Tmp_2013, Tmp_2014, Tmp_2015, transTimeout, retry, Tmp_2016, Tmp_2017, Tmp_2018, Tmp_2019, Tmp_2020, Tmp_2022, Tmp_2023, transType, sdv_622, Tmp_2024, Tmp_2025, Tmp_2026, Tmp_2027, oldIrql_5, Tmp_2028, Tmp_2029, Tmp_2030, Tmp_2031, Tmp_2032, Tmp_2033, Tmp_2034, Tmp_2035, Tmp_2036, status_64, Tmp_2037, Tmp_2038, Tmp_2039, Tmp_2040, vslice_dummy_var_361, vslice_dummy_var_363, vslice_dummy_var_364 := Sbp2Reset#0_loop_L26(Tmp_2013, Tmp_2014, Tmp_2015, transTimeout, retry, pdoExtension_19, Tmp_2016, Tmp_2017, Tmp_2018, Tmp_2019, Tmp_2020, sdv_620, Tmp_2022, Tmp_2023, transType, sdv_622, Tmp_2024, sdv_624, Tmp_2025, Tmp_2026, Tmp_2027, oldIrql_5, Tmp_2028, Tmp_2029, fdoExtension_10, sdv_626, Tmp_2030, Tmp_2031, Tmp_2032, Tmp_2033, Tmp_2034, Tmp_2035, Tmp_2036, status_64, Tmp_2037, Tmp_2038, Tmp_2039, Tmp_2040, ResetLevel, vslice_dummy_var_361, vslice_dummy_var_363, vslice_dummy_var_364);
    goto L26_last;

  L26_last:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} 0 >= retry;
    Tmp_2012 := status_64;
    goto L1;

  anon82_Then:
    assume {:partition} retry > 0;
    retry := retry - 1;
    call {:si_unique_call 2004} Sbp2AddLog(pdoExtension_19, 1, -227314626, ResetLevel, 0);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} ResetLevel != 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} ResetLevel != 1;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} ResetLevel != 2;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} ResetLevel != 3;
    goto L187;

  L187:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2023;
    assume {:nonnull} Tmp_2023 != 0;
    assume Tmp_2023 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_2028;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2036;
    call {:si_unique_call 2005} WPP_SF_q(Tmp_2036, 64, Tmp_2028, pdoExtension_19);
    goto L188;

  L188:
    call {:si_unique_call 2006} Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    call {:si_unique_call 2007} sdv_KeAcquireSpinLock(0, Tmp_2032);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_10)], 16777216) != 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto L201;

  L201:
    call {:si_unique_call 2008} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 2009} CleanupOrbList#0(pdoExtension_19, -1073741248);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2010} status_64 := Sbp2QueueManagementWorkItem#0(pdoExtension_19, 4, -1);
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  L92:
    call {:si_unique_call 2011} Sbp2AddLog(pdoExtension_19, 1, -227314639, status_64, retry);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} status_64 == -1072562032;
    goto L98;

  L98:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} retry != 0;
    call {:si_unique_call 2012} vslice_dummy_var_361 := KeCancelTimer(0);
    call {:si_unique_call 2013} status_64 := Sbp2UpdateNodeInformation#0(pdoExtension_19);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} yogi_error != 1;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2039;
    assume {:nonnull} Tmp_2039 != 0;
    assume Tmp_2039 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc Tmp_2033;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2027;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_4289;
    call {:si_unique_call 2014} WPP_SF_qDD(Tmp_2027, 65, Tmp_2033, pdoExtension_19, status_64, vslice_dummy_var_4289);
    goto anon91_Else_dummy;

  anon91_Else_dummy:
    assume false;
    return;

  anon91_Then:
    goto anon91_Then_dummy;

  anon91_Then_dummy:
    assume false;
    return;

  anon105_Then:
    goto anon105_Then_dummy;

  anon105_Then_dummy:
    assume false;
    return;

  anon90_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon90_Then_dummy;

  anon90_Then_dummy:
    assume false;
    return;

  anon104_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon88_Then:
    assume {:partition} retry == 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} 3 > ResetLevel;
    Tmp_2012 := status_64;
    goto L1;

  anon89_Then:
    assume {:partition} ResetLevel >= 3;
    call {:si_unique_call 2015} Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    call {:si_unique_call 2016} sdv_KeAcquireSpinLock(0, Tmp_2032);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2017} sdv_KeReleaseSpinLock(0, oldIrql_5);
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2018} sdv_630 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_19), 0);
    irp_8 := sdv_630;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} irp_8 != 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_4290;
    call {:si_unique_call 2019} Sbp2StartIo#0(vslice_dummy_var_4290, irp_8);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} yogi_error != 1;
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_4291;
    call {:si_unique_call 2020} Sbp2StartNextPacketByKey#0(vslice_dummy_var_4291, 0);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    Tmp_2012 := status_64;
    goto L1;

  anon108_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon107_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon106_Then:
    assume {:partition} irp_8 == 0;
    goto L133;

  anon86_Then:
    assume {:partition} status_64 != -1072562032;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} status_64 != -1073741248;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} status_64 >= 0;
    goto L144;

  L144:
    Tmp_2012 := status_64;
    goto L1;

  anon92_Then:
    assume {:partition} 0 > status_64;
    call {:si_unique_call 2021} vslice_dummy_var_362 := KeCancelTimer(0);
    call {:si_unique_call 2022} IoInvalidateDeviceState(0);
    goto L144;

  anon87_Then:
    assume {:partition} status_64 == -1073741248;
    goto L98;

  anon120_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon119_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon118_Then:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_10)], 16777216) == 0;
    goto L201;

  anon99_Then:
    goto L188;

  anon117_Then:
    goto L188;

  anon98_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon100_Then:
    assume {:partition} ResetLevel == 3;
    goto L187;

  anon101_Then:
    assume {:partition} ResetLevel == 2;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2024;
    assume {:nonnull} Tmp_2024 != 0;
    assume Tmp_2024 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_2031;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2025;
    call {:si_unique_call 2023} WPP_SF_q(Tmp_2025, 63, Tmp_2031, pdoExtension_19);
    goto L46;

  L46:
    transType := 12;
    transTimeout := 2;
    retry := 0;
    call {:si_unique_call 2024} Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    call {:si_unique_call 2025} sdv_KeAcquireSpinLock(0, Tmp_2032);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2018;
    assume {:nonnull} Tmp_2018 != 0;
    assume Tmp_2018 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2017;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2040;
    assume {:nonnull} Tmp_2017 != 0;
    assume Tmp_2017 > 0;
    assume {:nonnull} Tmp_2040 != 0;
    assume Tmp_2040 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2037;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2016;
    assume {:nonnull} Tmp_2016 != 0;
    assume Tmp_2016 > 0;
    assume {:nonnull} Tmp_2037 != 0;
    assume Tmp_2037 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2014;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2030;
    assume {:nonnull} Tmp_2014 != 0;
    assume Tmp_2014 > 0;
    assume {:nonnull} Tmp_2030 != 0;
    assume Tmp_2030 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2035;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2013;
    assume {:nonnull} Tmp_2013 != 0;
    assume Tmp_2013 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2038;
    assume {:nonnull} Tmp_2038 != 0;
    assume Tmp_2038 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2026;
    assume {:nonnull} Tmp_2026 != 0;
    assume Tmp_2026 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2026} Sbp2SetManagementTimer(pdoExtension_19, transTimeout);
    call {:si_unique_call 2027} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 2028} CleanupOrbList#0(pdoExtension_19, -1073741248);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2029} status_64 := Sbp2AccessRegister#0(pdoExtension_19, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(pdoExtension_19)), 1024);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon116_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon115_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon85_Then:
    goto L46;

  anon114_Then:
    goto L46;

  anon84_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon102_Then:
    assume {:partition} ResetLevel == 1;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2019;
    assume {:nonnull} Tmp_2019 != 0;
    assume Tmp_2019 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    havoc Tmp_2022;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2034;
    call {:si_unique_call 2030} WPP_SF_q(Tmp_2034, 62, Tmp_2022, pdoExtension_19);
    goto L149;

  L149:
    call {:si_unique_call 2031} sdv_622 := sdv_KeGetCurrentIrql();
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} 2 > sdv_622;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2032} vslice_dummy_var_363 := Sbp2AccessRegister#0(pdoExtension_19, Reserved__DEVICE_EXTENSION(pdoExtension_19), 320);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2033} status_64 := Sbp2AccessRegister#0(pdoExtension_19, Reserved__DEVICE_EXTENSION(pdoExtension_19), 258);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon95_Then:
    assume {:partition} sdv_622 >= 2;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2034} vslice_dummy_var_364 := Sbp2AccessRegister#0(pdoExtension_19, Reserved__DEVICE_EXTENSION(pdoExtension_19), 1088);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2035} status_64 := Sbp2AccessRegister#0(pdoExtension_19, Reserved__DEVICE_EXTENSION(pdoExtension_19), 1026);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon112_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon94_Then:
    goto L149;

  anon109_Then:
    goto L149;

  anon93_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon83_Then:
    assume {:partition} ResetLevel == 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2029;
    assume {:nonnull} Tmp_2029 != 0;
    assume Tmp_2029 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_2015;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2020;
    call {:si_unique_call 2036} WPP_SF_q(Tmp_2020, 61, Tmp_2015, pdoExtension_19);
    goto L178;

  L178:
    retry := 0;
    goto L92;

  anon97_Then:
    goto L178;

  anon103_Then:
    goto L178;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:origName "Sbp2Reset"} Sbp2Reset#0(actual_DeviceObject_46: int, actual_ResetLevel: int) returns (Tmp_2012: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2Reset"} Sbp2Reset#1(actual_DeviceObject_46: int, actual_ResetLevel: int) returns (Tmp_2012: int)
{
  var {:pointer} Tmp_2013: int;
  var {:pointer} Tmp_2014: int;
  var {:pointer} Tmp_2015: int;
  var {:scalar} transTimeout: int;
  var {:scalar} retry: int;
  var {:pointer} pdoExtension_19: int;
  var {:pointer} Tmp_2016: int;
  var {:pointer} Tmp_2017: int;
  var {:pointer} Tmp_2018: int;
  var {:pointer} Tmp_2019: int;
  var {:scalar} Tmp_2020: int;
  var {:scalar} sdv_620: int;
  var {:pointer} Tmp_2021: int;
  var {:pointer} Tmp_2022: int;
  var {:pointer} Tmp_2023: int;
  var {:scalar} transType: int;
  var {:scalar} sdv_622: int;
  var {:pointer} Tmp_2024: int;
  var {:scalar} sdv_624: int;
  var {:scalar} Tmp_2025: int;
  var {:pointer} Tmp_2026: int;
  var {:scalar} Tmp_2027: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} Tmp_2028: int;
  var {:pointer} Tmp_2029: int;
  var {:pointer} fdoExtension_10: int;
  var {:scalar} sdv_626: int;
  var {:pointer} Tmp_2030: int;
  var {:pointer} Tmp_2031: int;
  var {:pointer} Tmp_2032: int;
  var {:pointer} irp_8: int;
  var {:pointer} Tmp_2033: int;
  var {:scalar} Tmp_2034: int;
  var {:pointer} Tmp_2035: int;
  var {:scalar} Tmp_2036: int;
  var {:pointer} sdv_630: int;
  var {:scalar} status_64: int;
  var {:pointer} Tmp_2037: int;
  var {:pointer} Tmp_2038: int;
  var {:pointer} Tmp_2039: int;
  var {:pointer} Tmp_2040: int;
  var {:pointer} DeviceObject_46: int;
  var {:scalar} ResetLevel: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_4292: int;
  var vslice_dummy_var_4293: int;
  var vslice_dummy_var_4294: int;

  anon0:
    DeviceObject_46 := actual_DeviceObject_46;
    ResetLevel := actual_ResetLevel;
    call {:si_unique_call 2037} Tmp_2019 := __HAVOC_malloc(4);
    call {:si_unique_call 2038} Tmp_2023 := __HAVOC_malloc(4);
    call {:si_unique_call 2039} Tmp_2024 := __HAVOC_malloc(4);
    call {:si_unique_call 2040} Tmp_2029 := __HAVOC_malloc(4);
    call {:si_unique_call 2041} Tmp_2039 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_46 != 0;
    assume DeviceObject_46 > 0;
    pdoExtension_19 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_46)];
    status_64 := 0;
    retry := 2;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2021;
    assume {:nonnull} Tmp_2021 != 0;
    assume Tmp_2021 > 0;
    fdoExtension_10 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2021)];
    call {:si_unique_call 2042} Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    call {:si_unique_call 2043} sdv_KeAcquireSpinLock(0, Tmp_2032);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    call {:si_unique_call 2044} sdv_KeReleaseSpinLock(0, oldIrql_5);
    Tmp_2012 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon81_Then:
    call {:si_unique_call 2045} sdv_KeReleaseSpinLock(0, oldIrql_5);
    goto L26;

  L26:
    call {:si_unique_call 2046} Tmp_2013, Tmp_2014, Tmp_2015, transTimeout, retry, Tmp_2016, Tmp_2017, Tmp_2018, Tmp_2019, Tmp_2020, Tmp_2022, Tmp_2023, transType, sdv_622, Tmp_2024, Tmp_2025, Tmp_2026, Tmp_2027, oldIrql_5, Tmp_2028, Tmp_2029, Tmp_2030, Tmp_2031, Tmp_2032, Tmp_2033, Tmp_2034, Tmp_2035, Tmp_2036, status_64, Tmp_2037, Tmp_2038, Tmp_2039, Tmp_2040, vslice_dummy_var_365, vslice_dummy_var_367, vslice_dummy_var_368 := Sbp2Reset#1_loop_L26(Tmp_2013, Tmp_2014, Tmp_2015, transTimeout, retry, pdoExtension_19, Tmp_2016, Tmp_2017, Tmp_2018, Tmp_2019, Tmp_2020, sdv_620, Tmp_2022, Tmp_2023, transType, sdv_622, Tmp_2024, sdv_624, Tmp_2025, Tmp_2026, Tmp_2027, oldIrql_5, Tmp_2028, Tmp_2029, fdoExtension_10, sdv_626, Tmp_2030, Tmp_2031, Tmp_2032, Tmp_2033, Tmp_2034, Tmp_2035, Tmp_2036, status_64, Tmp_2037, Tmp_2038, Tmp_2039, Tmp_2040, ResetLevel, vslice_dummy_var_365, vslice_dummy_var_367, vslice_dummy_var_368);
    goto L26_last;

  L26_last:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} 0 >= retry;
    Tmp_2012 := status_64;
    goto L1;

  anon82_Then:
    assume {:partition} retry > 0;
    retry := retry - 1;
    call {:si_unique_call 2047} Sbp2AddLog(pdoExtension_19, 1, -227314626, ResetLevel, 0);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} ResetLevel != 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} ResetLevel != 1;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} ResetLevel != 2;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} ResetLevel != 3;
    goto L187;

  L187:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2023;
    assume {:nonnull} Tmp_2023 != 0;
    assume Tmp_2023 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_2028;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2036;
    call {:si_unique_call 2048} WPP_SF_q(Tmp_2036, 64, Tmp_2028, pdoExtension_19);
    goto L188;

  L188:
    call {:si_unique_call 2049} Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    call {:si_unique_call 2050} sdv_KeAcquireSpinLock(0, Tmp_2032);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} fdoExtension_10 != 0;
    assume fdoExtension_10 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_10)], 16777216) != 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto L201;

  L201:
    call {:si_unique_call 2051} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 2052} CleanupOrbList#1(pdoExtension_19, -1073741248);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2053} status_64 := Sbp2QueueManagementWorkItem#1(pdoExtension_19, 4, -1);
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  L92:
    call {:si_unique_call 2054} Sbp2AddLog(pdoExtension_19, 1, -227314639, status_64, retry);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} status_64 == -1072562032;
    goto L98;

  L98:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} retry != 0;
    call {:si_unique_call 2055} vslice_dummy_var_365 := KeCancelTimer(0);
    call {:si_unique_call 2056} status_64 := Sbp2UpdateNodeInformation#1(pdoExtension_19);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} yogi_error != 1;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2039;
    assume {:nonnull} Tmp_2039 != 0;
    assume Tmp_2039 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc Tmp_2033;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2027;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_4292;
    call {:si_unique_call 2057} WPP_SF_qDD(Tmp_2027, 65, Tmp_2033, pdoExtension_19, status_64, vslice_dummy_var_4292);
    goto anon91_Else_dummy;

  anon91_Else_dummy:
    assume false;
    return;

  anon91_Then:
    goto anon91_Then_dummy;

  anon91_Then_dummy:
    assume false;
    return;

  anon105_Then:
    goto anon105_Then_dummy;

  anon105_Then_dummy:
    assume false;
    return;

  anon90_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon90_Then_dummy;

  anon90_Then_dummy:
    assume false;
    return;

  anon104_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon88_Then:
    assume {:partition} retry == 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} 3 > ResetLevel;
    Tmp_2012 := status_64;
    goto L1;

  anon89_Then:
    assume {:partition} ResetLevel >= 3;
    call {:si_unique_call 2058} Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    call {:si_unique_call 2059} sdv_KeAcquireSpinLock(0, Tmp_2032);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2060} sdv_KeReleaseSpinLock(0, oldIrql_5);
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2061} sdv_630 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_19), 0);
    irp_8 := sdv_630;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} irp_8 != 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_4293;
    call {:si_unique_call 2062} Sbp2StartIo#1(vslice_dummy_var_4293, irp_8);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} yogi_error != 1;
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_4294;
    call {:si_unique_call 2063} Sbp2StartNextPacketByKey#1(vslice_dummy_var_4294, 0);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    Tmp_2012 := status_64;
    goto L1;

  anon108_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon107_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon106_Then:
    assume {:partition} irp_8 == 0;
    goto L133;

  anon86_Then:
    assume {:partition} status_64 != -1072562032;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} status_64 != -1073741248;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} status_64 >= 0;
    goto L144;

  L144:
    Tmp_2012 := status_64;
    goto L1;

  anon92_Then:
    assume {:partition} 0 > status_64;
    call {:si_unique_call 2064} vslice_dummy_var_366 := KeCancelTimer(0);
    call {:si_unique_call 2065} IoInvalidateDeviceState(0);
    goto L144;

  anon87_Then:
    assume {:partition} status_64 == -1073741248;
    goto L98;

  anon120_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon119_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon118_Then:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_10)], 16777216) == 0;
    goto L201;

  anon99_Then:
    goto L188;

  anon117_Then:
    goto L188;

  anon98_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon100_Then:
    assume {:partition} ResetLevel == 3;
    goto L187;

  anon101_Then:
    assume {:partition} ResetLevel == 2;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2024;
    assume {:nonnull} Tmp_2024 != 0;
    assume Tmp_2024 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_2031;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2025;
    call {:si_unique_call 2066} WPP_SF_q(Tmp_2025, 63, Tmp_2031, pdoExtension_19);
    goto L46;

  L46:
    transType := 12;
    transTimeout := 2;
    retry := 0;
    call {:si_unique_call 2067} Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    call {:si_unique_call 2068} sdv_KeAcquireSpinLock(0, Tmp_2032);
    assume {:nonnull} Tmp_2032 != 0;
    assume Tmp_2032 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2018;
    assume {:nonnull} Tmp_2018 != 0;
    assume Tmp_2018 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2017;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2040;
    assume {:nonnull} Tmp_2017 != 0;
    assume Tmp_2017 > 0;
    assume {:nonnull} Tmp_2040 != 0;
    assume Tmp_2040 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2037;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2016;
    assume {:nonnull} Tmp_2016 != 0;
    assume Tmp_2016 > 0;
    assume {:nonnull} Tmp_2037 != 0;
    assume Tmp_2037 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2014;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2030;
    assume {:nonnull} Tmp_2014 != 0;
    assume Tmp_2014 > 0;
    assume {:nonnull} Tmp_2030 != 0;
    assume Tmp_2030 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2035;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} Tmp_2035 != 0;
    assume Tmp_2035 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2013;
    assume {:nonnull} Tmp_2013 != 0;
    assume Tmp_2013 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2038;
    assume {:nonnull} Tmp_2038 != 0;
    assume Tmp_2038 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc Tmp_2026;
    assume {:nonnull} Tmp_2026 != 0;
    assume Tmp_2026 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2069} Sbp2SetManagementTimer(pdoExtension_19, transTimeout);
    call {:si_unique_call 2070} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 2071} CleanupOrbList#1(pdoExtension_19, -1073741248);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2072} status_64 := Sbp2AccessRegister#1(pdoExtension_19, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(pdoExtension_19)), 1024);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon116_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon115_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon85_Then:
    goto L46;

  anon114_Then:
    goto L46;

  anon84_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon102_Then:
    assume {:partition} ResetLevel == 1;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2019;
    assume {:nonnull} Tmp_2019 != 0;
    assume Tmp_2019 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    havoc Tmp_2022;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2034;
    call {:si_unique_call 2073} WPP_SF_q(Tmp_2034, 62, Tmp_2022, pdoExtension_19);
    goto L149;

  L149:
    call {:si_unique_call 2074} sdv_622 := sdv_KeGetCurrentIrql();
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} 2 > sdv_622;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2075} vslice_dummy_var_367 := Sbp2AccessRegister#1(pdoExtension_19, Reserved__DEVICE_EXTENSION(pdoExtension_19), 320);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2076} status_64 := Sbp2AccessRegister#1(pdoExtension_19, Reserved__DEVICE_EXTENSION(pdoExtension_19), 258);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon95_Then:
    assume {:partition} sdv_622 >= 2;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2077} vslice_dummy_var_368 := Sbp2AccessRegister#1(pdoExtension_19, Reserved__DEVICE_EXTENSION(pdoExtension_19), 1088);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 2078} status_64 := Sbp2AccessRegister#1(pdoExtension_19, Reserved__DEVICE_EXTENSION(pdoExtension_19), 1026);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon112_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon94_Then:
    goto L149;

  anon109_Then:
    goto L149;

  anon93_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon83_Then:
    assume {:partition} ResetLevel == 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2029;
    assume {:nonnull} Tmp_2029 != 0;
    assume Tmp_2029 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_2015;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2020;
    call {:si_unique_call 2079} WPP_SF_q(Tmp_2020, 61, Tmp_2015, pdoExtension_19);
    goto L178;

  L178:
    retry := 0;
    goto L92;

  anon97_Then:
    goto L178;

  anon103_Then:
    goto L178;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:origName "Sbp2Reset"} Sbp2Reset#1(actual_DeviceObject_46: int, actual_ResetLevel: int) returns (Tmp_2012: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "CleanupOrbList"} CleanupOrbList#0(actual_DeviceExtension_4: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_1336: int;
  var {:pointer} Tmp_1338: int;
  var {:pointer} Tmp_1339: int;
  var {:scalar} pendingOrbListHead: int;
  var {:pointer} Tmp_1340: int;
  var {:scalar} Tmp_1341: int;
  var {:scalar} sdv_439: int;
  var {:scalar} orbLock_6: int;
  var {:pointer} pEntry: int;
  var {:scalar} Tmp_1343: int;
  var {:pointer} Tmp_1344: int;
  var {:pointer} Tmp_1345: int;
  var {:pointer} requestIrp_1: int;
  var {:pointer} Tmp_1346: int;
  var {:pointer} Tmp_1347: int;
  var {:pointer} sdv_446: int;
  var {:pointer} Tmp_1348: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_1349: int;
  var {:scalar} sdv_448: int;
  var {:pointer} Tmp_1350: int;
  var {:pointer} DeviceExtension_4: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_4295: int;
  var vslice_dummy_var_4296: int;

  anon0:
    call {:si_unique_call 2080} vslice_dummy_var_369 := __HAVOC_malloc(4);
    call {:si_unique_call 2081} pendingOrbListHead := __HAVOC_malloc(8);
    call {:si_unique_call 2082} orbLock_6 := __HAVOC_malloc(12);
    DeviceExtension_4 := actual_DeviceExtension_4;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 2083} Tmp_1339 := __HAVOC_malloc(4);
    call {:si_unique_call 2084} Tmp_1348 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    call {:si_unique_call 2085} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2086} Sbp2AddLog(DeviceExtension_4, 32, -1018203550, DeviceExtension_4, CompletionStatus);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc vslice_dummy_var_4295;
    call {:si_unique_call 2087} vslice_dummy_var_370 := FreeAsyncRequestContext(DeviceExtension_4, vslice_dummy_var_4295);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto L18;

  L18:
    call {:si_unique_call 2088} sdv_439 := sdv_IsListEmpty(0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_439 != 0;
    call {:si_unique_call 2089} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon42_Then:
    assume {:partition} sdv_439 == 0;
    call {:si_unique_call 2090} InitializeListHead(pendingOrbListHead);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2091} vslice_dummy_var_371 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4), pendingOrbListHead);
    call {:si_unique_call 2092} vslice_dummy_var_372 := sdv_RemoveEntryList(0);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2093} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4));
    goto L42;

  L42:
    call {:si_unique_call 2094} Tmp_1336, Tmp_1338, Tmp_1339, Tmp_1340, Tmp_1341, pEntry, Tmp_1343, Tmp_1344, Tmp_1345, requestIrp_1, Tmp_1346, Tmp_1347, sdv_446, Tmp_1348, currentListItem_1, Tmp_1349, sdv_448, Tmp_1350, vslice_dummy_var_373, vslice_dummy_var_375, vslice_dummy_var_376, vslice_dummy_var_377, vslice_dummy_var_378, vslice_dummy_var_379 := CleanupOrbList#0_loop_L42(Tmp_1336, Tmp_1338, Tmp_1339, pendingOrbListHead, Tmp_1340, Tmp_1341, orbLock_6, pEntry, Tmp_1343, Tmp_1344, Tmp_1345, requestIrp_1, Tmp_1346, Tmp_1347, sdv_446, Tmp_1348, currentListItem_1, Tmp_1349, sdv_448, Tmp_1350, DeviceExtension_4, CompletionStatus, vslice_dummy_var_373, vslice_dummy_var_375, vslice_dummy_var_376, vslice_dummy_var_377, vslice_dummy_var_378, vslice_dummy_var_379);
    goto L42_last;

  L42_last:
    call {:si_unique_call 2111} pEntry := RemoveHeadList(pendingOrbListHead);
    call {:si_unique_call 2112} InitializeListHead(pEntry);
    call {:si_unique_call 2113} sdv_446 := sdv_containing_record(pEntry, 0);
    currentListItem_1 := sdv_446;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    call {:si_unique_call 2095} vslice_dummy_var_373 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 2096} sdv_448 := sdv_IsListEmpty(0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_448 != 0;
    call {:si_unique_call 2097} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2098} vslice_dummy_var_374 := Sbp2RestartPendingPowerIrp#0(DeviceExtension_4);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon43_Then:
    assume {:partition} sdv_448 == 0;
    goto anon43_Then_dummy;

  anon43_Then_dummy:
    assume false;
    return;

  anon53_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2099} vslice_dummy_var_377 := KeCancelTimer(0);
    call {:si_unique_call 2100} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2101} vslice_dummy_var_375 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1348;
    assume {:nonnull} Tmp_1348 != 0;
    assume Tmp_1348 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_1344;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1341;
    call {:si_unique_call 2102} WPP_SF_q(Tmp_1341, 11, Tmp_1344, currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1349;
    assume {:nonnull} Tmp_1349 != 0;
    assume Tmp_1349 > 0;
    havoc requestIrp_1;
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1350;
    assume {:nonnull} Tmp_1350 != 0;
    assume Tmp_1350 > 0;
    goto L98;

  L98:
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1338;
    assume {:nonnull} Tmp_1338 != 0;
    assume Tmp_1338 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    call {:si_unique_call 2103} Sbp2DeferPendingRequest(DeviceExtension_4, requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2104} vslice_dummy_var_378 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 2105} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L58;

  anon57_Then:
    goto L105;

  L105:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1336;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_1336 != 0;
    assume Tmp_1336 > 0;
    havoc vslice_dummy_var_4296;
    call {:si_unique_call 2106} Sbp2StartPacket#0(vslice_dummy_var_4296, requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_1336));
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon58_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon48_Then:
    goto L105;

  anon47_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2107} vslice_dummy_var_379 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1339;
    assume {:nonnull} Tmp_1339 != 0;
    assume Tmp_1339 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    havoc Tmp_1345;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1343;
    call {:si_unique_call 2108} WPP_SF_qq(Tmp_1343, 12, Tmp_1345, DeviceExtension_4, requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2109} vslice_dummy_var_376 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_4), requestIrp_1);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2110} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    goto L123;

  anon59_Then:
    goto L123;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon46_Then:
    goto L99;

  anon51_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1340;
    assume {:nonnull} Tmp_1340 != 0;
    assume Tmp_1340 > 0;
    goto L98;

  anon52_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1347;
    assume {:nonnull} Tmp_1347 != 0;
    assume Tmp_1347 > 0;
    goto L98;

  anon56_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1346;
    assume {:nonnull} Tmp_1346 != 0;
    assume Tmp_1346 > 0;
    goto L98;

  anon45_Then:
    goto L83;

  anon55_Then:
    goto L83;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon41_Then:
    goto L18;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList#0(actual_DeviceExtension_4: int, actual_CompletionStatus: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "CleanupOrbList"} CleanupOrbList#1(actual_DeviceExtension_4: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_1336: int;
  var {:pointer} Tmp_1338: int;
  var {:pointer} Tmp_1339: int;
  var {:scalar} pendingOrbListHead: int;
  var {:pointer} Tmp_1340: int;
  var {:scalar} Tmp_1341: int;
  var {:scalar} sdv_439: int;
  var {:scalar} orbLock_6: int;
  var {:pointer} pEntry: int;
  var {:scalar} Tmp_1343: int;
  var {:pointer} Tmp_1344: int;
  var {:pointer} Tmp_1345: int;
  var {:pointer} requestIrp_1: int;
  var {:pointer} Tmp_1346: int;
  var {:pointer} Tmp_1347: int;
  var {:pointer} sdv_446: int;
  var {:pointer} Tmp_1348: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_1349: int;
  var {:scalar} sdv_448: int;
  var {:pointer} Tmp_1350: int;
  var {:pointer} DeviceExtension_4: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_4297: int;
  var vslice_dummy_var_4298: int;

  anon0:
    call {:si_unique_call 2114} vslice_dummy_var_380 := __HAVOC_malloc(4);
    call {:si_unique_call 2115} pendingOrbListHead := __HAVOC_malloc(8);
    call {:si_unique_call 2116} orbLock_6 := __HAVOC_malloc(12);
    DeviceExtension_4 := actual_DeviceExtension_4;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 2117} Tmp_1339 := __HAVOC_malloc(4);
    call {:si_unique_call 2118} Tmp_1348 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    call {:si_unique_call 2119} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2120} Sbp2AddLog(DeviceExtension_4, 32, -1018203550, DeviceExtension_4, CompletionStatus);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc vslice_dummy_var_4297;
    call {:si_unique_call 2121} vslice_dummy_var_381 := FreeAsyncRequestContext(DeviceExtension_4, vslice_dummy_var_4297);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto L18;

  L18:
    call {:si_unique_call 2122} sdv_439 := sdv_IsListEmpty(0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_439 != 0;
    call {:si_unique_call 2123} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon42_Then:
    assume {:partition} sdv_439 == 0;
    call {:si_unique_call 2124} InitializeListHead(pendingOrbListHead);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2125} vslice_dummy_var_382 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4), pendingOrbListHead);
    call {:si_unique_call 2126} vslice_dummy_var_383 := sdv_RemoveEntryList(0);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2127} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4));
    goto L42;

  L42:
    call {:si_unique_call 2128} Tmp_1336, Tmp_1338, Tmp_1339, Tmp_1340, Tmp_1341, pEntry, Tmp_1343, Tmp_1344, Tmp_1345, requestIrp_1, Tmp_1346, Tmp_1347, sdv_446, Tmp_1348, currentListItem_1, Tmp_1349, sdv_448, Tmp_1350, vslice_dummy_var_384, vslice_dummy_var_386, vslice_dummy_var_387, vslice_dummy_var_388, vslice_dummy_var_389, vslice_dummy_var_390 := CleanupOrbList#1_loop_L42(Tmp_1336, Tmp_1338, Tmp_1339, pendingOrbListHead, Tmp_1340, Tmp_1341, orbLock_6, pEntry, Tmp_1343, Tmp_1344, Tmp_1345, requestIrp_1, Tmp_1346, Tmp_1347, sdv_446, Tmp_1348, currentListItem_1, Tmp_1349, sdv_448, Tmp_1350, DeviceExtension_4, CompletionStatus, vslice_dummy_var_384, vslice_dummy_var_386, vslice_dummy_var_387, vslice_dummy_var_388, vslice_dummy_var_389, vslice_dummy_var_390);
    goto L42_last;

  L42_last:
    call {:si_unique_call 2145} pEntry := RemoveHeadList(pendingOrbListHead);
    call {:si_unique_call 2146} InitializeListHead(pEntry);
    call {:si_unique_call 2147} sdv_446 := sdv_containing_record(pEntry, 0);
    currentListItem_1 := sdv_446;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    call {:si_unique_call 2129} vslice_dummy_var_384 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 2130} sdv_448 := sdv_IsListEmpty(0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_448 != 0;
    call {:si_unique_call 2131} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2132} vslice_dummy_var_385 := Sbp2RestartPendingPowerIrp#1(DeviceExtension_4);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon43_Then:
    assume {:partition} sdv_448 == 0;
    goto anon43_Then_dummy;

  anon43_Then_dummy:
    assume false;
    return;

  anon53_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2133} vslice_dummy_var_388 := KeCancelTimer(0);
    call {:si_unique_call 2134} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2135} vslice_dummy_var_386 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1348;
    assume {:nonnull} Tmp_1348 != 0;
    assume Tmp_1348 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_1344;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1341;
    call {:si_unique_call 2136} WPP_SF_q(Tmp_1341, 11, Tmp_1344, currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1349;
    assume {:nonnull} Tmp_1349 != 0;
    assume Tmp_1349 > 0;
    havoc requestIrp_1;
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1350;
    assume {:nonnull} Tmp_1350 != 0;
    assume Tmp_1350 > 0;
    goto L98;

  L98:
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1338;
    assume {:nonnull} Tmp_1338 != 0;
    assume Tmp_1338 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    call {:si_unique_call 2137} Sbp2DeferPendingRequest(DeviceExtension_4, requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2138} vslice_dummy_var_389 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 2139} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L58;

  anon57_Then:
    goto L105;

  L105:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1336;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_1336 != 0;
    assume Tmp_1336 > 0;
    havoc vslice_dummy_var_4298;
    call {:si_unique_call 2140} Sbp2StartPacket#1(vslice_dummy_var_4298, requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_1336));
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon58_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon48_Then:
    goto L105;

  anon47_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2141} vslice_dummy_var_390 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1339;
    assume {:nonnull} Tmp_1339 != 0;
    assume Tmp_1339 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    havoc Tmp_1345;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1343;
    call {:si_unique_call 2142} WPP_SF_qq(Tmp_1343, 12, Tmp_1345, DeviceExtension_4, requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2143} vslice_dummy_var_387 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_4), requestIrp_1);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2144} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    goto L123;

  anon59_Then:
    goto L123;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon46_Then:
    goto L99;

  anon51_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1340;
    assume {:nonnull} Tmp_1340 != 0;
    assume Tmp_1340 > 0;
    goto L98;

  anon52_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1347;
    assume {:nonnull} Tmp_1347 != 0;
    assume Tmp_1347 > 0;
    goto L98;

  anon56_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1346;
    assume {:nonnull} Tmp_1346 != 0;
    assume Tmp_1346 > 0;
    goto L98;

  anon45_Then:
    goto L83;

  anon55_Then:
    goto L83;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon41_Then:
    goto L18;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList#1(actual_DeviceExtension_4: int, actual_CompletionStatus: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#0(actual_PdoExtension_13: int) returns (Tmp_1168: int)
{
  var {:pointer} irpStack_4: int;
  var {:pointer} Irp_12: int;
  var {:pointer} Tmp_1169: int;
  var {:pointer} Tmp_1170: int;
  var {:pointer} sdv_390: int;
  var {:pointer} Tmp_1171: int;
  var {:pointer} Tmp_1172: int;
  var {:pointer} Tmp_1173: int;
  var {:pointer} Tmp_1174: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} status_31: int;
  var {:scalar} Tmp_1175: int;
  var {:scalar} Tmp_1176: int;
  var {:scalar} Tmp_1177: int;
  var {:pointer} PdoExtension_13: int;
  var vslice_dummy_var_4299: int;

  anon0:
    PdoExtension_13 := actual_PdoExtension_13;
    call {:si_unique_call 2148} Tmp_1169 := __HAVOC_malloc(4);
    call {:si_unique_call 2149} Tmp_1174 := __HAVOC_malloc(4);
    status_31 := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2150} sdv_390 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(PdoExtension_13), 0);
    Irp_12 := sdv_390;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Irp_12 != 0;
    call {:si_unique_call 2151} Sbp2AddLog(PdoExtension_13, 2, -800492944, Irp_12, 0);
    call {:si_unique_call 2152} irpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1174;
    assume {:nonnull} Tmp_1174 != 0;
    assume Tmp_1174 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc Tmp_1177;
    havoc Tmp_1170;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1175;
    call {:si_unique_call 2153} WPP_SF_qD(Tmp_1175, 36, Tmp_1170, PdoExtension_13, Tmp_1177);
    goto L25;

  L25:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 2154} Tmp_1171 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1171 != 0;
    assume Tmp_1171 > 0;
    call {:si_unique_call 2155} sdv_KeAcquireSpinLock(0, Tmp_1171);
    assume {:nonnull} Tmp_1171 != 0;
    assume Tmp_1171 > 0;
    havoc cIrql_3;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_1172;
    assume {:nonnull} Tmp_1172 != 0;
    assume Tmp_1172 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2156} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 2157} status_31 := Sbp2ManagementTransaction#0(PdoExtension_13, 7, -1);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} yogi_error != 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1169;
    assume {:nonnull} Tmp_1169 != 0;
    assume Tmp_1169 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_1173;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1176;
    call {:si_unique_call 2158} WPP_SF_qD(Tmp_1176, 37, Tmp_1173, PdoExtension_13, status_31);
    goto L56;

  L56:
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc vslice_dummy_var_4299;
    call {:si_unique_call 2159} Sbp2PdoCompletePowerIrp(vslice_dummy_var_4299, Irp_12);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1168 := status_31;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    goto L56;

  anon41_Then:
    goto L56;

  anon33_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon40_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon38_Then:
    goto L40;

  L40:
    call {:si_unique_call 2160} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L56;

  anon37_Then:
    goto L40;

  anon30_Then:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 2161} status_31 := Sbp2Issue1394BusReset#0(PdoExtension_13);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto L56;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    goto L56;

  anon31_Then:
    goto L25;

  anon36_Then:
    goto L25;

  anon29_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon35_Then:
    assume {:partition} Irp_12 == 0;
    Tmp_1168 := 0;
    goto L1;
}



procedure {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#0(actual_PdoExtension_13: int) returns (Tmp_1168: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.P_IRBIRP, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#1(actual_PdoExtension_13: int) returns (Tmp_1168: int)
{
  var {:pointer} irpStack_4: int;
  var {:pointer} Irp_12: int;
  var {:pointer} Tmp_1169: int;
  var {:pointer} Tmp_1170: int;
  var {:pointer} sdv_390: int;
  var {:pointer} Tmp_1171: int;
  var {:pointer} Tmp_1172: int;
  var {:pointer} Tmp_1173: int;
  var {:pointer} Tmp_1174: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} status_31: int;
  var {:scalar} Tmp_1175: int;
  var {:scalar} Tmp_1176: int;
  var {:scalar} Tmp_1177: int;
  var {:pointer} PdoExtension_13: int;
  var vslice_dummy_var_4300: int;

  anon0:
    PdoExtension_13 := actual_PdoExtension_13;
    call {:si_unique_call 2162} Tmp_1169 := __HAVOC_malloc(4);
    call {:si_unique_call 2163} Tmp_1174 := __HAVOC_malloc(4);
    status_31 := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2164} sdv_390 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(PdoExtension_13), 0);
    Irp_12 := sdv_390;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Irp_12 != 0;
    call {:si_unique_call 2165} Sbp2AddLog(PdoExtension_13, 2, -800492944, Irp_12, 0);
    call {:si_unique_call 2166} irpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1174;
    assume {:nonnull} Tmp_1174 != 0;
    assume Tmp_1174 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc Tmp_1177;
    havoc Tmp_1170;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1175;
    call {:si_unique_call 2167} WPP_SF_qD(Tmp_1175, 36, Tmp_1170, PdoExtension_13, Tmp_1177);
    goto L25;

  L25:
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 2168} Tmp_1171 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1171 != 0;
    assume Tmp_1171 > 0;
    call {:si_unique_call 2169} sdv_KeAcquireSpinLock(0, Tmp_1171);
    assume {:nonnull} Tmp_1171 != 0;
    assume Tmp_1171 > 0;
    havoc cIrql_3;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_1172;
    assume {:nonnull} Tmp_1172 != 0;
    assume Tmp_1172 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2170} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 2171} status_31 := Sbp2ManagementTransaction#1(PdoExtension_13, 7, -1);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} yogi_error != 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1169;
    assume {:nonnull} Tmp_1169 != 0;
    assume Tmp_1169 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_1173;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1176;
    call {:si_unique_call 2172} WPP_SF_qD(Tmp_1176, 37, Tmp_1173, PdoExtension_13, status_31);
    goto L56;

  L56:
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc vslice_dummy_var_4300;
    call {:si_unique_call 2173} Sbp2PdoCompletePowerIrp(vslice_dummy_var_4300, Irp_12);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1168 := status_31;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    goto L56;

  anon41_Then:
    goto L56;

  anon33_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon40_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon38_Then:
    goto L40;

  L40:
    call {:si_unique_call 2174} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L56;

  anon37_Then:
    goto L40;

  anon30_Then:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 2175} status_31 := Sbp2Issue1394BusReset#1(PdoExtension_13);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto L56;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    goto L56;

  anon31_Then:
    goto L25;

  anon36_Then:
    goto L25;

  anon29_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon35_Then:
    assume {:partition} Irp_12 == 0;
    Tmp_1168 := 0;
    goto L1;
}



procedure {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#1(actual_PdoExtension_13: int) returns (Tmp_1168: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#0(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_591: int)
{
  var {:scalar} Tmp_592: int;
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_169: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:scalar} Tmp_595: int;
  var {:scalar} Tmp_596: int;
  var {:pointer} Tmp_597: int;
  var {:pointer} Tmp_598: int;
  var {:pointer} Tmp_599: int;
  var {:pointer} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:scalar} sdv_172: int;
  var {:scalar} regType: int;
  var {:scalar} sdv_173: int;
  var {:scalar} Tmp_603: int;
  var {:scalar} sdv_174: int;
  var {:scalar} bSync: int;
  var {:pointer} Tmp_604: int;
  var {:scalar} sdv_179: int;
  var {:scalar} sdv_180: int;
  var {:scalar} sdv_181: int;
  var {:pointer} Tmp_605: int;
  var {:scalar} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:pointer} Tmp_608: int;
  var {:scalar} sdv_182: int;
  var {:pointer} Tmp_609: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_183: int;
  var {:pointer} Tmp_610: int;
  var {:scalar} sdv_184: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_611: int;
  var {:scalar} Tmp_612: int;
  var {:pointer} Tmp_613: int;
  var {:pointer} sbpRequest_2: int;
  var {:pointer} Tmp_614: int;
  var {:pointer} PdoExtension_7: int;
  var {:scalar} Type: int;
  var {:scalar} Generation_3: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_4301: int;

  anon0:
    call {:si_unique_call 2176} waitValue_2 := __HAVOC_malloc(20);
    PdoExtension_7 := actual_PdoExtension_7;
    Type := actual_Type;
    Generation_3 := actual_Generation_3;
    call {:si_unique_call 2177} Tmp_593 := __HAVOC_malloc(4);
    call {:si_unique_call 2178} Tmp_599 := __HAVOC_malloc(4);
    call {:si_unique_call 2179} Tmp_600 := __HAVOC_malloc(4);
    call {:si_unique_call 2180} Tmp_601 := __HAVOC_malloc(4);
    call {:si_unique_call 2181} Tmp_604 := __HAVOC_malloc(4);
    call {:si_unique_call 2182} Tmp_614 := __HAVOC_malloc(4);
    call {:si_unique_call 2183} Sbp2AddLog(PdoExtension_7, 1, -848859842, Type, 0);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    Tmp_591 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon77_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc sbpRequest_2;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} sbpRequest_2 != 0;
    call {:si_unique_call 2184} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Type != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Type != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} Type != 3;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Type == 7;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    status_14 := 0;
    goto L39;

  L39:
    call {:si_unique_call 2185} Sbp2AddLog(PdoExtension_7, 1, -848859844, Type, status_14);
    Tmp_591 := status_14;
    goto L1;

  anon78_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_614;
    assume {:nonnull} Tmp_614 != 0;
    assume Tmp_614 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    havoc Tmp_610;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_592;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc vslice_dummy_var_4301;
    call {:si_unique_call 2186} WPP_SF_qD(Tmp_592, 88, Tmp_610, PdoExtension_7, vslice_dummy_var_4301);
    goto L25;

  L25:
    call {:si_unique_call 2187} status_14 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_597;
    assume {:nonnull} Tmp_597 != 0;
    assume Tmp_597 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    call {:si_unique_call 2188} sdv_184 := sdv_KeGetCurrentIrql();
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} 2 > sdv_184;
    bSync := 1;
    regType := 256;
    goto L160;

  L160:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2189} vslice_dummy_var_391 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    Tmp_603 := bSync;
    call {:si_unique_call 2190} Sbp2AddLog(PdoExtension_7, 1, -848859855, Type, Tmp_603);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2191} status_14 := Sbp2AccessRegister#0(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), regType);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} status_14 < 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_601;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_605;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_596;
    call {:si_unique_call 2192} WPP_SF_qdD(Tmp_596, 91, Tmp_605, PdoExtension_7, Type, status_14);
    goto L218;

  L218:
    call {:si_unique_call 2193} Sbp2AddLog(PdoExtension_7, 1, -848859852, Type, status_14);
    goto L176;

  L176:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2194} vslice_dummy_var_392 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_7), 0);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon112_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon97_Then:
    goto L218;

  anon114_Then:
    goto L218;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L218;

  anon88_Then:
    assume {:partition} 0 <= status_14;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} bSync != 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_608;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    call {:si_unique_call 2195} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    call {:si_unique_call 2196} Sbp2AddLog(PdoExtension_7, 1, -848859854, Type, status_14);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} status_14 == 258;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_599;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    havoc Tmp_609;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_612;
    call {:si_unique_call 2197} WPP_SF_qd(Tmp_612, 89, Tmp_609, PdoExtension_7, Type);
    goto L193;

  L193:
    status_14 := -1073741823;
    goto L176;

  anon93_Then:
    goto L193;

  anon111_Then:
    goto L193;

  anon92_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L193;

  anon90_Then:
    assume {:partition} status_14 != 258;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} status_14 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc status_14;
    call {:si_unique_call 2198} Sbp2AddLog(PdoExtension_7, 1, -848859853, status_14, 0);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_600;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_598;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_611;
    call {:si_unique_call 2199} WPP_SF_qD(Tmp_611, 90, Tmp_598, PdoExtension_7, status_14);
    goto L176;

  anon95_Then:
    goto L176;

  anon113_Then:
    goto L176;

  anon94_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L176;

  anon91_Then:
    assume {:partition} status_14 != 0;
    goto L176;

  anon89_Then:
    assume {:partition} bSync == 0;
    goto L176;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon87_Then:
    assume {:partition} sdv_184 >= 2;
    bSync := 0;
    regType := 1024;
    goto L160;

  anon86_Then:
    assume {:partition} 0 > status_14;
    Tmp_591 := status_14;
    goto L1;

  anon79_Then:
    goto L25;

  anon109_Then:
    goto L25;

  anon108_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon98_Then:
    assume {:partition} Type != 7;
    goto L25;

  anon99_Then:
    assume {:partition} Type == 3;
    call {:si_unique_call 2200} status_14 := Sbp2DoReconnect#0(PdoExtension_7, Generation_3);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon107_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon100_Then:
    assume {:partition} Type == 1;
    queryOrb := sbpRequest_2;
    call {:si_unique_call 2201} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_613;
    assume {:nonnull} Tmp_613 != 0;
    assume Tmp_613 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2202} vslice_dummy_var_393 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2203} status_14 := Sbp2AccessRegister#0(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), 256);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} yogi_error != 1;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} status_14 < 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_593;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_607;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_595;
    call {:si_unique_call 2204} WPP_SF_qD(Tmp_595, 86, Tmp_607, PdoExtension_7, status_14);
    goto L123;

  L123:
    Tmp_591 := status_14;
    goto L1;

  anon85_Then:
    goto L123;

  anon106_Then:
    goto L123;

  anon84_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon80_Then:
    assume {:partition} 0 <= status_14;
    call {:si_unique_call 2205} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_14 == 258;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_604;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_594;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_606;
    call {:si_unique_call 2206} WPP_SF_q(Tmp_606, 87, Tmp_594, PdoExtension_7);
    goto L114;

  L114:
    Tmp_591 := -1073741823;
    goto L1;

  anon83_Then:
    goto L114;

  anon105_Then:
    goto L114;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L114;

  anon81_Then:
    assume {:partition} status_14 != 258;
    goto L39;

  anon104_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon102_Then:
    assume {:partition} Type == 0;
    call {:si_unique_call 2207} status_14 := Sbp2DoLogin#0(PdoExtension_7, Generation_3);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon103_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon101_Then:
    assume {:partition} sbpRequest_2 == 0;
    Tmp_591 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#0(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_591: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#1(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_591: int)
{
  var {:scalar} Tmp_592: int;
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_169: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:scalar} Tmp_595: int;
  var {:scalar} Tmp_596: int;
  var {:pointer} Tmp_597: int;
  var {:pointer} Tmp_598: int;
  var {:pointer} Tmp_599: int;
  var {:pointer} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:scalar} sdv_172: int;
  var {:scalar} regType: int;
  var {:scalar} sdv_173: int;
  var {:scalar} Tmp_603: int;
  var {:scalar} sdv_174: int;
  var {:scalar} bSync: int;
  var {:pointer} Tmp_604: int;
  var {:scalar} sdv_179: int;
  var {:scalar} sdv_180: int;
  var {:scalar} sdv_181: int;
  var {:pointer} Tmp_605: int;
  var {:scalar} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:pointer} Tmp_608: int;
  var {:scalar} sdv_182: int;
  var {:pointer} Tmp_609: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_183: int;
  var {:pointer} Tmp_610: int;
  var {:scalar} sdv_184: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_611: int;
  var {:scalar} Tmp_612: int;
  var {:pointer} Tmp_613: int;
  var {:pointer} sbpRequest_2: int;
  var {:pointer} Tmp_614: int;
  var {:pointer} PdoExtension_7: int;
  var {:scalar} Type: int;
  var {:scalar} Generation_3: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_4302: int;

  anon0:
    call {:si_unique_call 2208} waitValue_2 := __HAVOC_malloc(20);
    PdoExtension_7 := actual_PdoExtension_7;
    Type := actual_Type;
    Generation_3 := actual_Generation_3;
    call {:si_unique_call 2209} Tmp_593 := __HAVOC_malloc(4);
    call {:si_unique_call 2210} Tmp_599 := __HAVOC_malloc(4);
    call {:si_unique_call 2211} Tmp_600 := __HAVOC_malloc(4);
    call {:si_unique_call 2212} Tmp_601 := __HAVOC_malloc(4);
    call {:si_unique_call 2213} Tmp_604 := __HAVOC_malloc(4);
    call {:si_unique_call 2214} Tmp_614 := __HAVOC_malloc(4);
    call {:si_unique_call 2215} Sbp2AddLog(PdoExtension_7, 1, -848859842, Type, 0);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    Tmp_591 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon77_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc sbpRequest_2;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} sbpRequest_2 != 0;
    call {:si_unique_call 2216} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Type != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Type != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} Type != 3;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Type == 7;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    status_14 := 0;
    goto L39;

  L39:
    call {:si_unique_call 2217} Sbp2AddLog(PdoExtension_7, 1, -848859844, Type, status_14);
    Tmp_591 := status_14;
    goto L1;

  anon78_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_614;
    assume {:nonnull} Tmp_614 != 0;
    assume Tmp_614 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    havoc Tmp_610;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_592;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc vslice_dummy_var_4302;
    call {:si_unique_call 2218} WPP_SF_qD(Tmp_592, 88, Tmp_610, PdoExtension_7, vslice_dummy_var_4302);
    goto L25;

  L25:
    call {:si_unique_call 2219} status_14 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_597;
    assume {:nonnull} Tmp_597 != 0;
    assume Tmp_597 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    call {:si_unique_call 2220} sdv_184 := sdv_KeGetCurrentIrql();
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} 2 > sdv_184;
    bSync := 1;
    regType := 256;
    goto L160;

  L160:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2221} vslice_dummy_var_394 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    Tmp_603 := bSync;
    call {:si_unique_call 2222} Sbp2AddLog(PdoExtension_7, 1, -848859855, Type, Tmp_603);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2223} status_14 := Sbp2AccessRegister#1(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), regType);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} status_14 < 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_601;
    assume {:nonnull} Tmp_601 != 0;
    assume Tmp_601 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_605;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_596;
    call {:si_unique_call 2224} WPP_SF_qdD(Tmp_596, 91, Tmp_605, PdoExtension_7, Type, status_14);
    goto L218;

  L218:
    call {:si_unique_call 2225} Sbp2AddLog(PdoExtension_7, 1, -848859852, Type, status_14);
    goto L176;

  L176:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2226} vslice_dummy_var_395 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_7), 0);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon112_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon97_Then:
    goto L218;

  anon114_Then:
    goto L218;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L218;

  anon88_Then:
    assume {:partition} 0 <= status_14;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} bSync != 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_608;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    call {:si_unique_call 2227} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    call {:si_unique_call 2228} Sbp2AddLog(PdoExtension_7, 1, -848859854, Type, status_14);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} status_14 == 258;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_599;
    assume {:nonnull} Tmp_599 != 0;
    assume Tmp_599 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    havoc Tmp_609;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_612;
    call {:si_unique_call 2229} WPP_SF_qd(Tmp_612, 89, Tmp_609, PdoExtension_7, Type);
    goto L193;

  L193:
    status_14 := -1073741823;
    goto L176;

  anon93_Then:
    goto L193;

  anon111_Then:
    goto L193;

  anon92_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L193;

  anon90_Then:
    assume {:partition} status_14 != 258;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} status_14 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc status_14;
    call {:si_unique_call 2230} Sbp2AddLog(PdoExtension_7, 1, -848859853, status_14, 0);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_600;
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_598;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_611;
    call {:si_unique_call 2231} WPP_SF_qD(Tmp_611, 90, Tmp_598, PdoExtension_7, status_14);
    goto L176;

  anon95_Then:
    goto L176;

  anon113_Then:
    goto L176;

  anon94_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L176;

  anon91_Then:
    assume {:partition} status_14 != 0;
    goto L176;

  anon89_Then:
    assume {:partition} bSync == 0;
    goto L176;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon87_Then:
    assume {:partition} sdv_184 >= 2;
    bSync := 0;
    regType := 1024;
    goto L160;

  anon86_Then:
    assume {:partition} 0 > status_14;
    Tmp_591 := status_14;
    goto L1;

  anon79_Then:
    goto L25;

  anon109_Then:
    goto L25;

  anon108_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon98_Then:
    assume {:partition} Type != 7;
    goto L25;

  anon99_Then:
    assume {:partition} Type == 3;
    call {:si_unique_call 2232} status_14 := Sbp2DoReconnect#1(PdoExtension_7, Generation_3);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon107_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon100_Then:
    assume {:partition} Type == 1;
    queryOrb := sbpRequest_2;
    call {:si_unique_call 2233} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_613;
    assume {:nonnull} Tmp_613 != 0;
    assume Tmp_613 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2234} vslice_dummy_var_396 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2235} status_14 := Sbp2AccessRegister#1(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), 256);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} yogi_error != 1;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} status_14 < 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_593;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_607;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_595;
    call {:si_unique_call 2236} WPP_SF_qD(Tmp_595, 86, Tmp_607, PdoExtension_7, status_14);
    goto L123;

  L123:
    Tmp_591 := status_14;
    goto L1;

  anon85_Then:
    goto L123;

  anon106_Then:
    goto L123;

  anon84_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon80_Then:
    assume {:partition} 0 <= status_14;
    call {:si_unique_call 2237} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_14 == 258;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_604;
    assume {:nonnull} Tmp_604 != 0;
    assume Tmp_604 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_594;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_606;
    call {:si_unique_call 2238} WPP_SF_q(Tmp_606, 87, Tmp_594, PdoExtension_7);
    goto L114;

  L114:
    Tmp_591 := -1073741823;
    goto L1;

  anon83_Then:
    goto L114;

  anon105_Then:
    goto L114;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L114;

  anon81_Then:
    assume {:partition} status_14 != 258;
    goto L39;

  anon104_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon102_Then:
    assume {:partition} Type == 0;
    call {:si_unique_call 2239} status_14 := Sbp2DoLogin#1(PdoExtension_7, Generation_3);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon103_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon101_Then:
    assume {:partition} sbpRequest_2 == 0;
    Tmp_591 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#1(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_591: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin#0(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_372: int)
{
  var {:pointer} Tmp_373: int;
  var {:scalar} Tmp_374: int;
  var {:scalar} waitValue: int;
  var {:pointer} Tmp_375: int;
  var {:pointer} Tmp_376: int;
  var {:scalar} sdv_89: int;
  var {:scalar} sdv_90: int;
  var {:scalar} Tmp_377: int;
  var {:scalar} Tmp_378: int;
  var {:scalar} sdv_92: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} sdv_93: int;
  var {:scalar} sdv_94: int;
  var {:scalar} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:pointer} sdv_96: int;
  var {:pointer} loginOrb: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} Tmp_384: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} sdv_99: int;
  var {:pointer} Tmp_386: int;
  var {:pointer} Tmp_387: int;
  var {:scalar} Tmp_388: int;
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} Tmp_391: int;
  var {:scalar} Tmp_392: int;
  var {:scalar} sdv_100: int;
  var {:pointer} Tmp_393: int;
  var {:pointer} Tmp_394: int;
  var {:pointer} Tmp_395: int;
  var {:pointer} Tmp_396: int;
  var {:pointer} Tmp_397: int;
  var {:scalar} Tmp_398: int;
  var {:pointer} Tmp_399: int;
  var {:pointer} Tmp_400: int;
  var {:scalar} Tmp_401: int;
  var {:scalar} sdv_102: int;
  var {:pointer} Tmp_402: int;
  var {:scalar} Tmp_403: int;
  var {:scalar} sdv_103: int;
  var {:scalar} sdv_104: int;
  var {:scalar} sdv_105: int;
  var {:pointer} Tmp_404: int;
  var {:scalar} sdv_106: int;
  var {:pointer} Tmp_405: int;
  var {:pointer} Tmp_406: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} Tmp_407: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_408: int;
  var {:pointer} Tmp_409: int;
  var {:pointer} sbpRequest: int;
  var {:scalar} sdv_109: int;
  var {:pointer} PdoExtension_2: int;
  var {:scalar} Generation_1: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_4303: int;
  var vslice_dummy_var_4304: int;
  var vslice_dummy_var_4305: int;
  var vslice_dummy_var_4306: int;
  var vslice_dummy_var_4307: int;
  var vslice_dummy_var_4308: int;
  var vslice_dummy_var_4309: int;

  anon0:
    call {:si_unique_call 2240} waitValue := __HAVOC_malloc(20);
    PdoExtension_2 := actual_PdoExtension_2;
    Generation_1 := actual_Generation_1;
    call {:si_unique_call 2241} Tmp_376 := __HAVOC_malloc(4);
    call {:si_unique_call 2242} Tmp_379 := __HAVOC_malloc(4);
    call {:si_unique_call 2243} Tmp_383 := __HAVOC_malloc(4);
    call {:si_unique_call 2244} Tmp_386 := __HAVOC_malloc(4);
    call {:si_unique_call 2245} Tmp_391 := __HAVOC_malloc(4);
    call {:si_unique_call 2246} Tmp_393 := __HAVOC_malloc(4);
    call {:si_unique_call 2247} Tmp_394 := __HAVOC_malloc(4);
    call {:si_unique_call 2248} Tmp_396 := __HAVOC_malloc(4);
    call {:si_unique_call 2249} Tmp_397 := __HAVOC_malloc(4);
    call {:si_unique_call 2250} Tmp_406 := __HAVOC_malloc(4);
    call {:si_unique_call 2251} vslice_dummy_var_397 := sdv_KeGetCurrentIrql();
    call {:si_unique_call 2252} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    call {:si_unique_call 2253} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2254} Sbp2AddLog(PdoExtension_2, 1, -867219650, 0, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_394;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    havoc Tmp_408;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_377;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4303;
    call {:si_unique_call 2255} WPP_SF_qD(Tmp_377, 68, Tmp_408, PdoExtension_2, vslice_dummy_var_4303);
    goto L25;

  L25:
    call {:si_unique_call 2256} Sbp2AddLog(PdoExtension_2, 1, -867219663, 0, 0);
    call {:si_unique_call 2257} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_372 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon118_Then:
    goto L25;

  anon149_Then:
    goto L25;

  anon117_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon115_Then:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2258} Sbp2AddLog(PdoExtension_2, 1, -867219662, 0, 0);
    goto L39;

  L39:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2259} sdv_KeReleaseSpinLock(0, cIrql_1);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4304;
    call {:si_unique_call 2260} sdv_103 := Sbp2CleanDeviceExtension#0(vslice_dummy_var_4304, 0, 0);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} yogi_error != 1;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} sdv_103 == 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_376;
    assume {:nonnull} Tmp_376 != 0;
    assume Tmp_376 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    havoc Tmp_395;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_388;
    call {:si_unique_call 2261} WPP_SF_q(Tmp_388, 69, Tmp_395, PdoExtension_2);
    goto L54;

  L54:
    call {:si_unique_call 2262} status_8 := Sbp2InitializeDeviceExtension#0(PdoExtension_2);
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} yogi_error != 1;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} status_8 < 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    havoc Tmp_400;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_392;
    call {:si_unique_call 2263} WPP_SF_qD(Tmp_392, 70, Tmp_400, PdoExtension_2, status_8);
    goto L315;

  L315:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    Tmp_372 := status_8;
    goto L1;

  anon145_Then:
    goto L315;

  anon170_Then:
    goto L315;

  anon144_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L315;

  anon120_Then:
    assume {:partition} 0 <= status_8;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc sbpRequest;
    loginOrb := sbpRequest;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_386;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    call {:si_unique_call 2264} sdv_96 := GET_DEVICE_NAME(PdoExtension_2);
    call {:si_unique_call 2265} sdv_106 := GET_LUN(PdoExtension_2);
    havoc Tmp_407;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_401;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4305;
    call {:si_unique_call 2266} WPP_SF_qdSDd(Tmp_401, 71, Tmp_407, PdoExtension_2, sdv_106, sdv_96, vslice_dummy_var_4305, Generation_1);
    goto L68;

  L68:
    call {:si_unique_call 2267} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    goto L107;

  L107:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L106;

  L106:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2268} vslice_dummy_var_400 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_2));
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2269} status_8 := Sbp2AccessRegisterEx#0(PdoExtension_2, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_2)), 256, Generation_1);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2270} Sbp2AddLog(PdoExtension_2, 1, -867219660, status_8, 0);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} status_8 < 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_379;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc Tmp_399;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_378;
    call {:si_unique_call 2271} WPP_SF_qD(Tmp_378, 76, Tmp_399, PdoExtension_2, status_8);
    goto L254;

  L254:
    call {:si_unique_call 2272} Sbp2AddLog(PdoExtension_2, 1, -867219658, status_8, 0);
    call {:si_unique_call 2273} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    call {:si_unique_call 2274} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} status_8 == -1072562032;
    goto L270;

  L270:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2275} Sbp2SetManagementTimer(PdoExtension_2, 3);
    call {:si_unique_call 2276} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_372 := 0;
    goto L1;

  anon166_Then:
    assume {:partition} status_8 != -1072562032;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} status_8 != -1073741248;
    call {:si_unique_call 2277} sdv_90 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} sdv_90 == 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_393;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    havoc Tmp_409;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_398;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4306;
    call {:si_unique_call 2278} WPP_SF_qD(Tmp_398, 77, Tmp_409, PdoExtension_2, vslice_dummy_var_4306);
    goto L298;

  L298:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_381;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    call {:si_unique_call 2279} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2280} Sbp2LoginErrorHandler#0(PdoExtension_2, status_8, 2793);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} yogi_error != 1;
    Tmp_372 := status_8;
    goto L1;

  anon169_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon143_Then:
    goto L298;

  anon168_Then:
    goto L298;

  anon142_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L298;

  anon141_Then:
    assume {:partition} sdv_90 != 0;
    call {:si_unique_call 2281} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2282} vslice_dummy_var_399 := Sbp2Issue1394BusReset#0(PdoExtension_2);
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2283} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    call {:si_unique_call 2284} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2285} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  L193:
    Tmp_372 := status_8;
    goto L1;

  anon167_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon140_Then:
    assume {:partition} status_8 == -1073741248;
    goto L270;

  anon139_Then:
    goto L254;

  anon165_Then:
    goto L254;

  anon138_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L254;

  anon122_Then:
    assume {:partition} 0 <= status_8;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_406;
    assume {:nonnull} Tmp_406 != 0;
    assume Tmp_406 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    havoc Tmp_387;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_380;
    call {:si_unique_call 2286} WPP_SF_qD(Tmp_380, 72, Tmp_387, PdoExtension_2, status_8);
    goto L146;

  L146:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_375;
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    call {:si_unique_call 2287} status_8 := KeWaitForSingleObject(0, 0, 0, 0, waitValue);
    call {:si_unique_call 2288} Sbp2AddLog(PdoExtension_2, 1, -867219659, status_8, 0);
    call {:si_unique_call 2289} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    call {:si_unique_call 2290} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} status_8 == 258;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_396;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    havoc Tmp_405;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_382;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_389;
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    havoc vslice_dummy_var_4307;
    call {:si_unique_call 2291} WPP_SF_qd(Tmp_382, 73, Tmp_405, PdoExtension_2, vslice_dummy_var_4307);
    goto L171;

  L171:
    status_8 := -1073741643;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto L180;

  L180:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    status_8 := -1073741810;
    goto L181;

  L181:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} status_8 < 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_391;
    assume {:nonnull} Tmp_391 != 0;
    assume Tmp_391 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    havoc Tmp_404;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_403;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4308;
    call {:si_unique_call 2292} WPP_SF_qDd(Tmp_403, 74, Tmp_404, PdoExtension_2, status_8, vslice_dummy_var_4308);
    goto L204;

  L204:
    call {:si_unique_call 2293} Sbp2AddLog(PdoExtension_2, 1, -867219657, status_8, 0);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} status_8 != 29;
    call {:si_unique_call 2294} sdv_105 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} sdv_105 == 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_397;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    havoc Tmp_384;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_374;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4309;
    call {:si_unique_call 2295} WPP_SF_qD(Tmp_374, 75, Tmp_384, PdoExtension_2, vslice_dummy_var_4309);
    goto L237;

  L237:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_402;
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    call {:si_unique_call 2296} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2297} Sbp2LoginErrorHandler#0(PdoExtension_2, status_8, 2707);
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} yogi_error != 1;
    Tmp_372 := status_8;
    goto L1;

  anon164_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon137_Then:
    goto L237;

  anon163_Then:
    goto L237;

  anon136_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L237;

  anon133_Then:
    assume {:partition} sdv_105 != 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} status_8 != -1072562032;
    call {:si_unique_call 2298} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2299} sdv_102 := Sbp2Issue1394BusReset#0(PdoExtension_2);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} yogi_error != 1;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_102 >= 0;
    goto L233;

  L233:
    call {:si_unique_call 2300} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    call {:si_unique_call 2301} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc cIrql_1;
    goto L186;

  L186:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} status_8 != 0;
    goto L190;

  L190:
    call {:si_unique_call 2302} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  anon129_Then:
    assume {:partition} status_8 == 0;
    call {:si_unique_call 2303} Sbp2AddLog(PdoExtension_2, 1, -867219655, status_8, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2304} vslice_dummy_var_398 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_2), 0, 0);
    goto L197;

  L197:
    assume false;
    return;

  anon159_Then:
    goto L197;

  anon135_Then:
    assume {:partition} 0 > sdv_102;
    call {:si_unique_call 2305} Sbp2SetDeferLoginTimer(PdoExtension_2);
    goto L233;

  anon162_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon134_Then:
    assume {:partition} status_8 == -1072562032;
    goto L186;

  anon132_Then:
    assume {:partition} status_8 == 29;
    goto L186;

  anon131_Then:
    goto L204;

  anon161_Then:
    goto L204;

  anon130_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L204;

  anon128_Then:
    assume {:partition} 0 <= status_8;
    goto L186;

  anon127_Then:
    goto L181;

  anon126_Then:
    goto L171;

  anon158_Then:
    goto L171;

  anon125_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L171;

  anon157_Then:
    assume {:partition} status_8 != 258;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc status_8;
    goto L180;

  anon124_Then:
    goto L146;

  anon156_Then:
    goto L146;

  anon123_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L146;

  anon155_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon148_Then:
    goto L106;

  anon154_Then:
    goto L107;

  anon121_Then:
    goto L68;

  anon153_Then:
    goto L68;

  anon152_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L68;

  anon151_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon147_Then:
    goto L54;

  anon171_Then:
    goto L54;

  anon146_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon119_Then:
    assume {:partition} sdv_103 != 0;
    goto L54;

  anon150_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L39;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin#0(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_372: int);
  modifies alloc, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.PVOID, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin#1(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_372: int)
{
  var {:pointer} Tmp_373: int;
  var {:scalar} Tmp_374: int;
  var {:scalar} waitValue: int;
  var {:pointer} Tmp_375: int;
  var {:pointer} Tmp_376: int;
  var {:scalar} sdv_89: int;
  var {:scalar} sdv_90: int;
  var {:scalar} Tmp_377: int;
  var {:scalar} Tmp_378: int;
  var {:scalar} sdv_92: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} sdv_93: int;
  var {:scalar} sdv_94: int;
  var {:scalar} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:pointer} sdv_96: int;
  var {:pointer} loginOrb: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} Tmp_384: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} sdv_99: int;
  var {:pointer} Tmp_386: int;
  var {:pointer} Tmp_387: int;
  var {:scalar} Tmp_388: int;
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} Tmp_391: int;
  var {:scalar} Tmp_392: int;
  var {:scalar} sdv_100: int;
  var {:pointer} Tmp_393: int;
  var {:pointer} Tmp_394: int;
  var {:pointer} Tmp_395: int;
  var {:pointer} Tmp_396: int;
  var {:pointer} Tmp_397: int;
  var {:scalar} Tmp_398: int;
  var {:pointer} Tmp_399: int;
  var {:pointer} Tmp_400: int;
  var {:scalar} Tmp_401: int;
  var {:scalar} sdv_102: int;
  var {:pointer} Tmp_402: int;
  var {:scalar} Tmp_403: int;
  var {:scalar} sdv_103: int;
  var {:scalar} sdv_104: int;
  var {:scalar} sdv_105: int;
  var {:pointer} Tmp_404: int;
  var {:scalar} sdv_106: int;
  var {:pointer} Tmp_405: int;
  var {:pointer} Tmp_406: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} Tmp_407: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_408: int;
  var {:pointer} Tmp_409: int;
  var {:pointer} sbpRequest: int;
  var {:scalar} sdv_109: int;
  var {:pointer} PdoExtension_2: int;
  var {:scalar} Generation_1: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_4310: int;
  var vslice_dummy_var_4311: int;
  var vslice_dummy_var_4312: int;
  var vslice_dummy_var_4313: int;
  var vslice_dummy_var_4314: int;
  var vslice_dummy_var_4315: int;
  var vslice_dummy_var_4316: int;

  anon0:
    call {:si_unique_call 2306} waitValue := __HAVOC_malloc(20);
    PdoExtension_2 := actual_PdoExtension_2;
    Generation_1 := actual_Generation_1;
    call {:si_unique_call 2307} Tmp_376 := __HAVOC_malloc(4);
    call {:si_unique_call 2308} Tmp_379 := __HAVOC_malloc(4);
    call {:si_unique_call 2309} Tmp_383 := __HAVOC_malloc(4);
    call {:si_unique_call 2310} Tmp_386 := __HAVOC_malloc(4);
    call {:si_unique_call 2311} Tmp_391 := __HAVOC_malloc(4);
    call {:si_unique_call 2312} Tmp_393 := __HAVOC_malloc(4);
    call {:si_unique_call 2313} Tmp_394 := __HAVOC_malloc(4);
    call {:si_unique_call 2314} Tmp_396 := __HAVOC_malloc(4);
    call {:si_unique_call 2315} Tmp_397 := __HAVOC_malloc(4);
    call {:si_unique_call 2316} Tmp_406 := __HAVOC_malloc(4);
    call {:si_unique_call 2317} vslice_dummy_var_401 := sdv_KeGetCurrentIrql();
    call {:si_unique_call 2318} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    call {:si_unique_call 2319} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2320} Sbp2AddLog(PdoExtension_2, 1, -867219650, 0, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_394;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    havoc Tmp_408;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_377;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4310;
    call {:si_unique_call 2321} WPP_SF_qD(Tmp_377, 68, Tmp_408, PdoExtension_2, vslice_dummy_var_4310);
    goto L25;

  L25:
    call {:si_unique_call 2322} Sbp2AddLog(PdoExtension_2, 1, -867219663, 0, 0);
    call {:si_unique_call 2323} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_372 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon118_Then:
    goto L25;

  anon149_Then:
    goto L25;

  anon117_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon115_Then:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2324} Sbp2AddLog(PdoExtension_2, 1, -867219662, 0, 0);
    goto L39;

  L39:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2325} sdv_KeReleaseSpinLock(0, cIrql_1);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4311;
    call {:si_unique_call 2326} sdv_103 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_4311, 0, 0);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} yogi_error != 1;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} sdv_103 == 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_376;
    assume {:nonnull} Tmp_376 != 0;
    assume Tmp_376 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    havoc Tmp_395;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_388;
    call {:si_unique_call 2327} WPP_SF_q(Tmp_388, 69, Tmp_395, PdoExtension_2);
    goto L54;

  L54:
    call {:si_unique_call 2328} status_8 := Sbp2InitializeDeviceExtension#1(PdoExtension_2);
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} yogi_error != 1;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} status_8 < 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    havoc Tmp_400;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_392;
    call {:si_unique_call 2329} WPP_SF_qD(Tmp_392, 70, Tmp_400, PdoExtension_2, status_8);
    goto L315;

  L315:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    Tmp_372 := status_8;
    goto L1;

  anon145_Then:
    goto L315;

  anon170_Then:
    goto L315;

  anon144_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L315;

  anon120_Then:
    assume {:partition} 0 <= status_8;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc sbpRequest;
    loginOrb := sbpRequest;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_386;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    call {:si_unique_call 2330} sdv_96 := GET_DEVICE_NAME(PdoExtension_2);
    call {:si_unique_call 2331} sdv_106 := GET_LUN(PdoExtension_2);
    havoc Tmp_407;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_401;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4312;
    call {:si_unique_call 2332} WPP_SF_qdSDd(Tmp_401, 71, Tmp_407, PdoExtension_2, sdv_106, sdv_96, vslice_dummy_var_4312, Generation_1);
    goto L68;

  L68:
    call {:si_unique_call 2333} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    goto L107;

  L107:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L106;

  L106:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2334} vslice_dummy_var_405 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_2));
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2335} status_8 := Sbp2AccessRegisterEx#1(PdoExtension_2, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_2)), 256, Generation_1);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2336} Sbp2AddLog(PdoExtension_2, 1, -867219660, status_8, 0);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} status_8 < 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_379;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc Tmp_399;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_378;
    call {:si_unique_call 2337} WPP_SF_qD(Tmp_378, 76, Tmp_399, PdoExtension_2, status_8);
    goto L254;

  L254:
    call {:si_unique_call 2338} Sbp2AddLog(PdoExtension_2, 1, -867219658, status_8, 0);
    call {:si_unique_call 2339} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    call {:si_unique_call 2340} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} status_8 == -1072562032;
    goto L270;

  L270:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2341} Sbp2SetManagementTimer(PdoExtension_2, 3);
    call {:si_unique_call 2342} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_372 := 0;
    goto L1;

  anon166_Then:
    assume {:partition} status_8 != -1072562032;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} status_8 != -1073741248;
    call {:si_unique_call 2343} sdv_90 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} sdv_90 == 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_393;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    havoc Tmp_409;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_398;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4313;
    call {:si_unique_call 2344} WPP_SF_qD(Tmp_398, 77, Tmp_409, PdoExtension_2, vslice_dummy_var_4313);
    goto L298;

  L298:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_381;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    call {:si_unique_call 2345} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2346} Sbp2LoginErrorHandler#1(PdoExtension_2, status_8, 2793);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} yogi_error != 1;
    Tmp_372 := status_8;
    goto L1;

  anon169_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon143_Then:
    goto L298;

  anon168_Then:
    goto L298;

  anon142_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L298;

  anon141_Then:
    assume {:partition} sdv_90 != 0;
    call {:si_unique_call 2347} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2348} vslice_dummy_var_404 := Sbp2Issue1394BusReset#1(PdoExtension_2);
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2349} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    call {:si_unique_call 2350} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2351} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  L193:
    Tmp_372 := status_8;
    goto L1;

  anon167_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon140_Then:
    assume {:partition} status_8 == -1073741248;
    goto L270;

  anon139_Then:
    goto L254;

  anon165_Then:
    goto L254;

  anon138_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L254;

  anon122_Then:
    assume {:partition} 0 <= status_8;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_406;
    assume {:nonnull} Tmp_406 != 0;
    assume Tmp_406 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    havoc Tmp_387;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_380;
    call {:si_unique_call 2352} WPP_SF_qD(Tmp_380, 72, Tmp_387, PdoExtension_2, status_8);
    goto L146;

  L146:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_375;
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    call {:si_unique_call 2353} status_8 := KeWaitForSingleObject(0, 0, 0, 0, waitValue);
    call {:si_unique_call 2354} Sbp2AddLog(PdoExtension_2, 1, -867219659, status_8, 0);
    call {:si_unique_call 2355} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    call {:si_unique_call 2356} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} status_8 == 258;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_396;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    havoc Tmp_405;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_382;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_389;
    assume {:nonnull} Tmp_389 != 0;
    assume Tmp_389 > 0;
    havoc vslice_dummy_var_4314;
    call {:si_unique_call 2357} WPP_SF_qd(Tmp_382, 73, Tmp_405, PdoExtension_2, vslice_dummy_var_4314);
    goto L171;

  L171:
    status_8 := -1073741643;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto L180;

  L180:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    status_8 := -1073741810;
    goto L181;

  L181:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} status_8 < 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_391;
    assume {:nonnull} Tmp_391 != 0;
    assume Tmp_391 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    havoc Tmp_404;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_403;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4315;
    call {:si_unique_call 2358} WPP_SF_qDd(Tmp_403, 74, Tmp_404, PdoExtension_2, status_8, vslice_dummy_var_4315);
    goto L204;

  L204:
    call {:si_unique_call 2359} Sbp2AddLog(PdoExtension_2, 1, -867219657, status_8, 0);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} status_8 != 29;
    call {:si_unique_call 2360} sdv_105 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} sdv_105 == 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_397;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    havoc Tmp_384;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_374;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_4316;
    call {:si_unique_call 2361} WPP_SF_qD(Tmp_374, 75, Tmp_384, PdoExtension_2, vslice_dummy_var_4316);
    goto L237;

  L237:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_402;
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    call {:si_unique_call 2362} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2363} Sbp2LoginErrorHandler#1(PdoExtension_2, status_8, 2707);
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} yogi_error != 1;
    Tmp_372 := status_8;
    goto L1;

  anon164_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon137_Then:
    goto L237;

  anon163_Then:
    goto L237;

  anon136_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L237;

  anon133_Then:
    assume {:partition} sdv_105 != 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} status_8 != -1072562032;
    call {:si_unique_call 2364} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2365} sdv_102 := Sbp2Issue1394BusReset#1(PdoExtension_2);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} yogi_error != 1;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_102 >= 0;
    goto L233;

  L233:
    call {:si_unique_call 2366} Tmp_390 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    call {:si_unique_call 2367} sdv_KeAcquireSpinLock(0, Tmp_390);
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc cIrql_1;
    goto L186;

  L186:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} status_8 != 0;
    goto L190;

  L190:
    call {:si_unique_call 2368} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  anon129_Then:
    assume {:partition} status_8 == 0;
    call {:si_unique_call 2369} Sbp2AddLog(PdoExtension_2, 1, -867219655, status_8, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2370} vslice_dummy_var_403 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_2), 0, 0);
    goto L197;

  L197:
    call {:si_unique_call 2371} vslice_dummy_var_402 := Sbp2RestartPendingPowerIrp#0(PdoExtension_2);
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} yogi_error != 1;
    goto L190;

  anon160_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon159_Then:
    goto L197;

  anon135_Then:
    assume {:partition} 0 > sdv_102;
    call {:si_unique_call 2372} Sbp2SetDeferLoginTimer(PdoExtension_2);
    goto L233;

  anon162_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon134_Then:
    assume {:partition} status_8 == -1072562032;
    goto L186;

  anon132_Then:
    assume {:partition} status_8 == 29;
    goto L186;

  anon131_Then:
    goto L204;

  anon161_Then:
    goto L204;

  anon130_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L204;

  anon128_Then:
    assume {:partition} 0 <= status_8;
    goto L186;

  anon127_Then:
    goto L181;

  anon126_Then:
    goto L171;

  anon158_Then:
    goto L171;

  anon125_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L171;

  anon157_Then:
    assume {:partition} status_8 != 258;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc status_8;
    goto L180;

  anon124_Then:
    goto L146;

  anon156_Then:
    goto L146;

  anon123_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L146;

  anon155_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon148_Then:
    goto L106;

  anon154_Then:
    goto L107;

  anon121_Then:
    goto L68;

  anon153_Then:
    goto L68;

  anon152_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L68;

  anon151_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon147_Then:
    goto L54;

  anon171_Then:
    goto L54;

  anon146_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon119_Then:
    assume {:partition} sdv_103 != 0;
    goto L54;

  anon150_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L39;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin#1(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_372: int);
  modifies alloc, LockDepth, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_48: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2118: int)
{
  var {:scalar} Tmp_2119: int;
  var {:scalar} Tmp_2120: int;
  var {:pointer} Tmp_2122: int;
  var {:scalar} Tmp_2123: int;
  var {:scalar} Tmp_2124: int;
  var {:pointer} Tmp_2125: int;
  var {:pointer} Tmp_2126: int;
  var {:scalar} Tmp_2127: int;
  var {:pointer} Tmp_2129: int;
  var {:pointer} pdoExtension_20: int;
  var {:scalar} Tmp_2131: int;
  var {:scalar} Tmp_2132: int;
  var {:pointer} Tmp_2133: int;
  var {:pointer} Tmp_2134: int;
  var {:pointer} Tmp_2135: int;
  var {:scalar} Tmp_2136: int;
  var {:pointer} Tmp_2137: int;
  var {:pointer} Tmp_2138: int;
  var {:pointer} Tmp_2139: int;
  var {:pointer} Tmp_2140: int;
  var {:pointer} Tmp_2141: int;
  var {:pointer} sdv_700: int;
  var {:pointer} Tmp_2142: int;
  var {:scalar} Tmp_2143: int;
  var {:pointer} Tmp_2144: int;
  var {:pointer} Tmp_2145: int;
  var {:pointer} Tmp_2146: int;
  var {:scalar} Tmp_2147: int;
  var {:scalar} Tmp_2148: int;
  var {:pointer} sdv_701: int;
  var {:pointer} sdv_702: int;
  var {:scalar} Tmp_2149: int;
  var {:pointer} Tmp_2150: int;
  var {:pointer} Tmp_2151: int;
  var {:pointer} Tmp_2152: int;
  var {:pointer} sdv_703: int;
  var {:pointer} Tmp_2153: int;
  var {:pointer} Tmp_2154: int;
  var {:pointer} sdv_704: int;
  var {:scalar} Tmp_2155: int;
  var {:pointer} Tmp_2156: int;
  var {:pointer} Tmp_2157: int;
  var {:pointer} irp_9: int;
  var {:pointer} Tmp_2158: int;
  var {:pointer} Tmp_2159: int;
  var {:pointer} Tmp_2160: int;
  var {:pointer} Tmp_2161: int;
  var {:scalar} sdv_706: int;
  var {:pointer} Tmp_2162: int;
  var {:pointer} Tmp_2163: int;
  var {:scalar} Tmp_2164: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} Tmp_2165: int;
  var {:pointer} sdv_707: int;
  var {:scalar} Tmp_2166: int;
  var {:pointer} Tmp_2167: int;
  var {:pointer} Tmp_2168: int;
  var {:pointer} Tmp_2169: int;
  var {:scalar} valid: int;
  var {:pointer} Tmp_2171: int;
  var {:scalar} Tmp_2172: int;
  var {:scalar} status_70: int;
  var {:pointer} Tmp_2173: int;
  var {:scalar} Tmp_2174: int;
  var {:pointer} Tmp_2175: int;
  var {:scalar} Tmp_2176: int;
  var {:pointer} Tmp_2177: int;
  var {:pointer} Tmp_2178: int;
  var {:scalar} Tmp_2179: int;
  var {:pointer} Tmp_2180: int;
  var {:scalar} Tmp_2181: int;
  var {:scalar} i_6: int;
  var {:pointer} Tmp_2182: int;
  var {:pointer} Tmp_2183: int;
  var {:pointer} Tmp_2184: int;
  var {:pointer} Tmp_2185: int;
  var {:scalar} Tmp_2186: int;
  var {:scalar} Tmp_2187: int;
  var {:pointer} Tmp_2188: int;
  var {:scalar} Tmp_2189: int;
  var {:scalar} Tmp_2190: int;
  var {:scalar} Tmp_2192: int;
  var {:pointer} Tmp_2194: int;
  var {:pointer} Tmp_2195: int;
  var {:pointer} Tmp_2196: int;
  var {:scalar} Tmp_2197: int;
  var {:scalar} Tmp_2200: int;
  var {:scalar} Tmp_2201: int;
  var {:pointer} context_2: int;
  var {:scalar} Tmp_2202: int;
  var {:scalar} Tmp_2203: int;
  var {:scalar} Tmp_2204: int;
  var {:scalar} Tmp_2206: int;
  var {:pointer} Tmp_2207: int;
  var {:pointer} Tmp_2208: int;
  var {:scalar} Tmp_2209: int;
  var {:pointer} Tmp_2210: int;
  var {:scalar} Tmp_2211: int;
  var {:pointer} Tmp_2212: int;
  var {:pointer} Tmp_2213: int;
  var {:pointer} Tmp_2214: int;
  var {:pointer} Tmp_2215: int;
  var {:scalar} Tmp_2216: int;
  var {:pointer} sdv_710: int;
  var {:scalar} sdv_711: int;
  var {:pointer} Tmp_2217: int;
  var {:scalar} Tmp_2218: int;
  var {:pointer} fdoExtension_13: int;
  var {:pointer} Tmp_2219: int;
  var {:pointer} Tmp_2220: int;
  var {:pointer} Tmp_2221: int;
  var {:pointer} Tmp_2222: int;
  var {:pointer} Tmp_2223: int;
  var {:pointer} Tmp_2224: int;
  var {:pointer} Tmp_2225: int;
  var {:scalar} Tmp_2226: int;
  var {:scalar} Tmp_2227: int;
  var {:pointer} Tmp_2228: int;
  var {:scalar} Tmp_2229: int;
  var {:scalar} cIrql_11: int;
  var {:pointer} Tmp_2230: int;
  var {:scalar} Tmp_2232: int;
  var {:scalar} status_71: int;
  var {:pointer} packet_13: int;
  var {:scalar} Tmp_2233: int;
  var {:scalar} Tmp_2234: int;
  var {:pointer} Tmp_2235: int;
  var {:scalar} Tmp_2236: int;
  var {:scalar} Tmp_2237: int;
  var {:pointer} Tmp_2238: int;
  var {:pointer} Tmp_2239: int;
  var {:pointer} Tmp_2240: int;
  var {:scalar} Tmp_2241: int;
  var {:pointer} Tmp_2242: int;
  var {:pointer} DeviceObject_48: int;
  var {:scalar} FreeLists: int;
  var {:scalar} OnRemove: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_4317: int;
  var vslice_dummy_var_4318: int;
  var vslice_dummy_var_4319: int;
  var vslice_dummy_var_4320: int;
  var vslice_dummy_var_4321: int;

  anon0:
    DeviceObject_48 := actual_DeviceObject_48;
    FreeLists := actual_FreeLists;
    OnRemove := actual_OnRemove;
    call {:si_unique_call 2373} Tmp_2122 := __HAVOC_malloc(2680);
    call {:si_unique_call 2374} Tmp_2126 := __HAVOC_malloc(2680);
    call {:si_unique_call 2375} Tmp_2133 := __HAVOC_malloc(4);
    call {:si_unique_call 2376} Tmp_2134 := __HAVOC_malloc(2680);
    call {:si_unique_call 2377} Tmp_2135 := __HAVOC_malloc(2680);
    call {:si_unique_call 2378} Tmp_2137 := __HAVOC_malloc(2680);
    call {:si_unique_call 2379} Tmp_2138 := __HAVOC_malloc(2680);
    call {:si_unique_call 2380} Tmp_2139 := __HAVOC_malloc(2680);
    call {:si_unique_call 2381} Tmp_2141 := __HAVOC_malloc(2680);
    call {:si_unique_call 2382} Tmp_2146 := __HAVOC_malloc(2680);
    call {:si_unique_call 2383} Tmp_2151 := __HAVOC_malloc(2680);
    call {:si_unique_call 2384} Tmp_2152 := __HAVOC_malloc(4);
    call {:si_unique_call 2385} Tmp_2153 := __HAVOC_malloc(2680);
    call {:si_unique_call 2386} Tmp_2154 := __HAVOC_malloc(4);
    call {:si_unique_call 2387} Tmp_2156 := __HAVOC_malloc(2680);
    call {:si_unique_call 2388} Tmp_2157 := __HAVOC_malloc(2680);
    call {:si_unique_call 2389} Tmp_2160 := __HAVOC_malloc(4);
    call {:si_unique_call 2390} Tmp_2163 := __HAVOC_malloc(2680);
    call {:si_unique_call 2391} Tmp_2167 := __HAVOC_malloc(2680);
    call {:si_unique_call 2392} Tmp_2168 := __HAVOC_malloc(2680);
    call {:si_unique_call 2393} Tmp_2175 := __HAVOC_malloc(2680);
    call {:si_unique_call 2394} Tmp_2177 := __HAVOC_malloc(2680);
    call {:si_unique_call 2395} Tmp_2182 := __HAVOC_malloc(4);
    call {:si_unique_call 2396} Tmp_2183 := __HAVOC_malloc(4);
    call {:si_unique_call 2397} Tmp_2184 := __HAVOC_malloc(2680);
    call {:si_unique_call 2398} Tmp_2188 := __HAVOC_malloc(4);
    call {:si_unique_call 2399} Tmp_2194 := __HAVOC_malloc(2680);
    call {:si_unique_call 2400} Tmp_2196 := __HAVOC_malloc(2680);
    call {:si_unique_call 2401} Tmp_2207 := __HAVOC_malloc(2680);
    call {:si_unique_call 2402} Tmp_2210 := __HAVOC_malloc(4);
    call {:si_unique_call 2403} Tmp_2212 := __HAVOC_malloc(2680);
    call {:si_unique_call 2404} Tmp_2213 := __HAVOC_malloc(4);
    call {:si_unique_call 2405} Tmp_2215 := __HAVOC_malloc(2680);
    call {:si_unique_call 2406} Tmp_2217 := __HAVOC_malloc(2680);
    call {:si_unique_call 2407} Tmp_2219 := __HAVOC_malloc(2680);
    call {:si_unique_call 2408} Tmp_2221 := __HAVOC_malloc(2680);
    call {:si_unique_call 2409} Tmp_2224 := __HAVOC_malloc(2680);
    call {:si_unique_call 2410} Tmp_2230 := __HAVOC_malloc(2680);
    call {:si_unique_call 2411} Tmp_2235 := __HAVOC_malloc(2680);
    call {:si_unique_call 2412} Tmp_2239 := __HAVOC_malloc(4);
    call {:si_unique_call 2413} Tmp_2240 := __HAVOC_malloc(2680);
    call {:si_unique_call 2414} Tmp_2242 := __HAVOC_malloc(2680);
    valid := 0;
    assume {:nonnull} DeviceObject_48 != 0;
    assume DeviceObject_48 > 0;
    pdoExtension_20 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_48)];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2154;
    assume {:nonnull} Tmp_2154 != 0;
    assume Tmp_2154 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    Tmp_2218 := FreeLists;
    havoc Tmp_2129;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2241;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_4317;
    call {:si_unique_call 2415} WPP_SF_qDd(Tmp_2241, 31, Tmp_2129, pdoExtension_20, vslice_dummy_var_4317, Tmp_2218);
    goto L19;

  L19:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2150;
    assume {:nonnull} Tmp_2150 != 0;
    assume Tmp_2150 > 0;
    fdoExtension_13 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2150)];
    Tmp_2232 := FreeLists;
    call {:si_unique_call 2416} Sbp2AddLog(pdoExtension_20, 1, -1016304048, Tmp_2232, fdoExtension_13);
    i_6 := 0;
    goto L33;

  L33:
    call {:si_unique_call 2417} Tmp_2131, i_6, Tmp_2202, Tmp_2212, Tmp_2217 := Sbp2CleanDeviceExtension#0_loop_L33(Tmp_2131, i_6, Tmp_2202, Tmp_2212, Tmp_2217, fdoExtension_13, DeviceObject_48);
    goto L33_last;

  L33_last:
    Tmp_2202 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2217;
    assume {:nonnull} Tmp_2217 != 0;
    assume Tmp_2217 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2217 + Tmp_2202 * 268)] != 0;
    Tmp_2131 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2212;
    assume {:nonnull} Tmp_2212 != 0;
    assume Tmp_2212 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2212 + Tmp_2131 * 268)] == DeviceObject_48;
    valid := 1;
    goto L34;

  L34:
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 2418} vslice_dummy_var_406 := KeCancelTimer(0);
    assume false;
    return;

  anon176_Then:
    goto L43;

  L43:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(DummyContext__DEVICE_EXTENSION(pdoExtension_20))] != 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2419} FreeAddressRange#0(pdoExtension_20, DummyContext__DEVICE_EXTENSION(pdoExtension_20));
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} yogi_error != 1;
    goto L50;

  L50:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} FreeLists != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2133;
    assume {:nonnull} Tmp_2133 != 0;
    assume Tmp_2133 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    Tmp_2172 := OnRemove;
    Tmp_2165 := FreeLists;
    havoc Tmp_2185;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2190;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_4318;
    call {:si_unique_call 2420} WPP_SF_qDdd(Tmp_2190, 32, Tmp_2185, pdoExtension_20, vslice_dummy_var_4318, Tmp_2165, Tmp_2172);
    goto L60;

  L60:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2421} FreeAddressRange#0(pdoExtension_20, TaskOrbStatusContext__DEVICE_EXTENSION(pdoExtension_20));
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2422} FreeAddressRange#0(pdoExtension_20, GlobalStatusContext__DEVICE_EXTENSION(pdoExtension_20));
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2423} FreeAddressRange#0(pdoExtension_20, ManagementOrbStatusContext__DEVICE_EXTENSION(pdoExtension_20));
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2424} sdv_710 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_20), 0);
    irp_9 := sdv_710;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} irp_9 != 0;
    assume {:nonnull} irp_9 != 0;
    assume irp_9 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2425} vslice_dummy_var_409 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_20), irp_9);
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2426} sdv_IoCompleteRequest(0, 0);
    goto L84;

  L84:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2427} sdv_703 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_20), 0);
    irp_9 := sdv_703;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} irp_9 != 0;
    assume {:nonnull} irp_9 != 0;
    assume irp_9 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2428} vslice_dummy_var_410 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_20), irp_9);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2429} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2430} sdv_704 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_20), 0);
    irp_9 := sdv_704;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} irp_9 != 0;
    assume {:nonnull} irp_9 != 0;
    assume irp_9 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2431} vslice_dummy_var_411 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_20), irp_9);
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2432} sdv_IoCompleteRequest(0, 0);
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    call {:si_unique_call 2433} vslice_dummy_var_407 := IoDeleteSymbolicLink(0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2434} ExFreePoolWithTag(0, -330079661);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto L116;

  L116:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2152;
    assume {:nonnull} Tmp_2152 != 0;
    assume Tmp_2152 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    havoc Tmp_2145;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2237;
    call {:si_unique_call 2435} WPP_SF_q(Tmp_2237, 33, Tmp_2145, pdoExtension_20);
    goto L240;

  L240:
    Tmp_2118 := 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon195_Then:
    goto L240;

  anon238_Then:
    goto L240;

  anon194_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L240;

  anon183_Then:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2213;
    assume {:nonnull} Tmp_2213 != 0;
    assume Tmp_2213 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_2238;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2211;
    call {:si_unique_call 2436} WPP_SF_q(Tmp_2211, 34, Tmp_2238, pdoExtension_20);
    goto L132;

  L132:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2437} FreeAddressRange#0(pdoExtension_20, CommonBufferContext__DEVICE_EXTENSION(pdoExtension_20));
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    i_6 := 0;
    goto L147;

  L147:
    call {:si_unique_call 2438} i_6, context_2 := Sbp2CleanDeviceExtension#0_loop_L147(pdoExtension_20, i_6, context_2);
    goto L147_last;

  L147_last:
    assume {:CounterLoop 8} {:Counter "i_6"} true;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} 8 > i_6;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc context_2;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    call {:si_unique_call 2439} FreeAddressRange#0(pdoExtension_20, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_2)));
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    i_6 := i_6 + 1;
    goto L154_dummy;

  L154_dummy:
    assume false;
    return;

  anon232_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon231_Then:
    goto L154;

  anon187_Then:
    assume {:partition} i_6 >= 8;
    call {:si_unique_call 2440} ExFreePoolWithTag(0, -499031469);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto L145;

  L145:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    call {:si_unique_call 2441} sdv_707 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_707;
    goto L167;

  L167:
    call {:si_unique_call 2442} Tmp_2123, sdv_702, statusFifoElement, Tmp_2188, Tmp_2228 := Sbp2CleanDeviceExtension#0_loop_L167(Tmp_2123, pdoExtension_20, sdv_702, statusFifoElement, Tmp_2188, Tmp_2228);
    goto L167_last;

  L167_last:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} statusFifoElement != 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2188;
    assume {:nonnull} Tmp_2188 != 0;
    assume Tmp_2188 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_2228;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2123;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_4319;
    call {:si_unique_call 2443} WPP_SF_qqq(Tmp_2123, 35, Tmp_2228, pdoExtension_20, statusFifoElement, vslice_dummy_var_4319);
    goto L175;

  L175:
    call {:si_unique_call 2444} IoFreeMdl(0);
    call {:si_unique_call 2445} sdv_702 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_702;
    goto L175_dummy;

  L175_dummy:
    assume false;
    return;

  anon190_Then:
    goto L175;

  anon233_Then:
    goto L175;

  anon189_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;

  anon188_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 2446} ExFreePoolWithTag(0, -430742957);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto L160;

  L160:
    call {:si_unique_call 2447} sdv_700 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_700;
    goto L191;

  L191:
    call {:si_unique_call 2448} sdv_701, Tmp_2222, packet_13 := Sbp2CleanDeviceExtension#0_loop_L191(sdv_701, Tmp_2222, packet_13);
    goto L191_last;

  L191_last:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} packet_13 != 0;
    call {:si_unique_call 2449} sdv_ExFreePool(0);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_2222;
    assume {:nonnull} Tmp_2222 != 0;
    assume Tmp_2222 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    call {:si_unique_call 2450} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 2451} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 2452} sdv_701 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_701;
    goto L199_dummy;

  L199_dummy:
    assume false;
    return;

  anon234_Then:
    goto L199;

  anon191_Then:
    assume {:partition} packet_13 == 0;
    call {:si_unique_call 2453} Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    call {:si_unique_call 2454} sdv_KeAcquireSpinLock(0, Tmp_2180);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    havoc cIrql_11;
    call {:si_unique_call 2455} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 2456} sdv_KeReleaseSpinLock(0, cIrql_11);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    call {:si_unique_call 2457} IoFreeMdl(0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2173;
    assume {:nonnull} Tmp_2173 != 0;
    assume Tmp_2173 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2208;
    assume {:nonnull} Tmp_2208 != 0;
    assume Tmp_2208 > 0;
    call {:si_unique_call 2458} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2140;
    assume {:nonnull} Tmp_2140 != 0;
    assume Tmp_2140 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2161;
    assume {:nonnull} Tmp_2161 != 0;
    assume Tmp_2161 > 0;
    goto L222;

  L222:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2171;
    assume {:nonnull} Tmp_2171 != 0;
    assume Tmp_2171 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2225;
    assume {:nonnull} Tmp_2225 != 0;
    assume Tmp_2225 > 0;
    call {:si_unique_call 2459} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2159;
    assume {:nonnull} Tmp_2159 != 0;
    assume Tmp_2159 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2178;
    assume {:nonnull} Tmp_2178 != 0;
    assume Tmp_2178 > 0;
    goto L228;

  L228:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2220;
    assume {:nonnull} Tmp_2220 != 0;
    assume Tmp_2220 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2144;
    assume {:nonnull} Tmp_2144 != 0;
    assume Tmp_2144 > 0;
    call {:si_unique_call 2460} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2125;
    assume {:nonnull} Tmp_2125 != 0;
    assume Tmp_2125 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2214;
    assume {:nonnull} Tmp_2214 != 0;
    assume Tmp_2214 > 0;
    goto L54;

  L54:
    Tmp_2118 := 1;
    goto L1;

  anon237_Then:
    goto L54;

  anon236_Then:
    goto L228;

  anon235_Then:
    goto L222;

  anon193_Then:
    goto L54;

  anon192_Then:
    goto L216;

  anon186_Then:
    goto L160;

  anon230_Then:
    goto L145;

  anon229_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon185_Then:
    goto L132;

  anon228_Then:
    goto L132;

  anon184_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  anon182_Then:
    goto L116;

  anon227_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon226_Then:
    assume {:partition} irp_9 == 0;
    goto L108;

  anon225_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon224_Then:
    assume {:partition} irp_9 == 0;
    goto L96;

  anon223_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon222_Then:
    assume {:partition} irp_9 == 0;
    goto L84;

  anon221_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon220_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon219_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon180_Then:
    goto L54;

  anon181_Then:
    goto L60;

  anon218_Then:
    goto L60;

  anon179_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon178_Then:
    assume {:partition} FreeLists == 0;
    goto L54;

  anon217_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon177_Then:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(DummyContext__DEVICE_EXTENSION(pdoExtension_20))] == 0;
    goto L50;

  anon175_Then:
    assume {:partition} valid == 0;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc vslice_dummy_var_4320;
    call {:si_unique_call 2461} Sbp2AddLog(pdoExtension_20, 1, -1016304078, vslice_dummy_var_4320, 0);
    Tmp_2118 := 0;
    goto L1;

  anon215_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2212 + Tmp_2131 * 268)] != DeviceObject_48;
    i_6 := i_6 + 1;
    goto anon215_Then_dummy;

  anon215_Then_dummy:
    assume false;
    return;

  anon214_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2217 + Tmp_2202 * 268)] == 0;
    goto L34;

  anon174_Then:
    goto L19;

  anon213_Then:
    goto L19;

  anon173_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L19;

  anon212_Then:
    assume {:nonnull} DeviceObject_48 != 0;
    assume DeviceObject_48 > 0;
    fdoExtension_13 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_48)];
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_13)], 262144) != 0;
    Tmp_2118 := 0;
    goto L1;

  anon239_Then:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_13)], 262144) == 0;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_13)] := BOR(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_13)], 262144);
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    call {:si_unique_call 2462} status_71 := Sbp2EnableBusResetNotification#0(fdoExtension_13, 0);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} status_71 < 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2183;
    assume {:nonnull} Tmp_2183 != 0;
    assume Tmp_2183 > 0;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    havoc Tmp_2223;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2233;
    call {:si_unique_call 2463} WPP_SF_qD(Tmp_2233, 36, Tmp_2223, fdoExtension_13, status_71);
    goto L253;

  L253:
    call {:si_unique_call 2464} Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    call {:si_unique_call 2465} sdv_KeAcquireSpinLock(0, Tmp_2180);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    havoc cIrql_11;
    goto L273;

  L273:
    call {:si_unique_call 2466} Tmp_2119, Tmp_2120, Tmp_2122, Tmp_2126, pdoExtension_20, Tmp_2132, Tmp_2134, Tmp_2135, Tmp_2136, Tmp_2137, Tmp_2138, Tmp_2139, Tmp_2141, Tmp_2142, Tmp_2143, Tmp_2146, Tmp_2147, Tmp_2148, Tmp_2149, Tmp_2151, Tmp_2153, Tmp_2155, Tmp_2156, Tmp_2157, Tmp_2160, Tmp_2163, Tmp_2164, Tmp_2166, Tmp_2167, Tmp_2168, Tmp_2169, Tmp_2174, Tmp_2176, Tmp_2177, Tmp_2179, Tmp_2180, Tmp_2181, i_6, Tmp_2184, Tmp_2186, Tmp_2187, Tmp_2192, Tmp_2194, Tmp_2196, Tmp_2200, Tmp_2201, Tmp_2203, Tmp_2204, Tmp_2206, Tmp_2207, Tmp_2209, Tmp_2215, Tmp_2216, Tmp_2221, Tmp_2224, Tmp_2226, Tmp_2227, Tmp_2229, cIrql_11, Tmp_2230, Tmp_2234, Tmp_2235, Tmp_2240, Tmp_2242, DeviceObject_48 := Sbp2CleanDeviceExtension#0_loop_L273(Tmp_2119, Tmp_2120, Tmp_2122, Tmp_2126, pdoExtension_20, Tmp_2132, Tmp_2134, Tmp_2135, Tmp_2136, Tmp_2137, Tmp_2138, Tmp_2139, Tmp_2141, Tmp_2142, Tmp_2143, Tmp_2146, Tmp_2147, Tmp_2148, Tmp_2149, Tmp_2151, Tmp_2153, Tmp_2155, Tmp_2156, Tmp_2157, Tmp_2160, Tmp_2163, Tmp_2164, Tmp_2166, Tmp_2167, Tmp_2168, Tmp_2169, Tmp_2174, Tmp_2176, Tmp_2177, Tmp_2179, Tmp_2180, Tmp_2181, i_6, Tmp_2184, Tmp_2186, Tmp_2187, Tmp_2192, Tmp_2194, Tmp_2196, Tmp_2200, Tmp_2201, Tmp_2203, Tmp_2204, Tmp_2206, Tmp_2207, Tmp_2209, Tmp_2215, Tmp_2216, fdoExtension_13, Tmp_2221, Tmp_2224, Tmp_2226, Tmp_2227, Tmp_2229, cIrql_11, Tmp_2230, Tmp_2234, Tmp_2235, Tmp_2240, Tmp_2242, DeviceObject_48);
    goto L273_last;

  L273_last:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc i_6;
    Tmp_2166 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2135;
    assume {:nonnull} Tmp_2135 != 0;
    assume Tmp_2135 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2135 + Tmp_2166 * 268)] != 0;
    Tmp_2119 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2151;
    assume {:nonnull} Tmp_2151 != 0;
    assume Tmp_2151 > 0;
    Tmp_2142 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2151 + Tmp_2119 * 268)];
    assume {:nonnull} Tmp_2142 != 0;
    assume Tmp_2142 > 0;
    pdoExtension_20 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2142)];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    Tmp_2201 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2184;
    assume {:nonnull} Tmp_2184 != 0;
    assume Tmp_2184 > 0;
    DeviceObject_48 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2184 + Tmp_2201 * 268)];
    Tmp_2192 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2230;
    assume {:nonnull} Tmp_2230 != 0;
    assume Tmp_2230 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    Tmp_2181 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2215;
    assume {:nonnull} Tmp_2215 != 0;
    assume Tmp_2215 > 0;
    call {:si_unique_call 2467} sdv_ExFreePool(0);
    Tmp_2176 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2194;
    assume {:nonnull} Tmp_2194 != 0;
    assume Tmp_2194 > 0;
    Tmp_2120 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2240;
    assume {:nonnull} Tmp_2240 != 0;
    assume Tmp_2240 > 0;
    goto L283;

  L283:
    Tmp_2200 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2157;
    assume {:nonnull} Tmp_2157 != 0;
    assume Tmp_2157 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    Tmp_2148 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2242;
    assume {:nonnull} Tmp_2242 != 0;
    assume Tmp_2242 > 0;
    call {:si_unique_call 2468} sdv_ExFreePool(0);
    Tmp_2227 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2196;
    assume {:nonnull} Tmp_2196 != 0;
    assume Tmp_2196 > 0;
    Tmp_2206 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2235;
    assume {:nonnull} Tmp_2235 != 0;
    assume Tmp_2235 > 0;
    goto L290;

  L290:
    Tmp_2143 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2153;
    assume {:nonnull} Tmp_2153 != 0;
    assume Tmp_2153 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    Tmp_2216 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2167;
    assume {:nonnull} Tmp_2167 != 0;
    assume Tmp_2167 > 0;
    call {:si_unique_call 2469} sdv_ExFreePool(0);
    Tmp_2179 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2138;
    assume {:nonnull} Tmp_2138 != 0;
    assume Tmp_2138 > 0;
    Tmp_2203 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2126;
    assume {:nonnull} Tmp_2126 != 0;
    assume Tmp_2126 > 0;
    goto L297;

  L297:
    Tmp_2186 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2141;
    assume {:nonnull} Tmp_2141 != 0;
    assume Tmp_2141 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2141 + Tmp_2186 * 268)] := 0;
    call {:si_unique_call 2470} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 2471} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2472} IoDeleteDevice(0);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2160;
    assume {:nonnull} Tmp_2160 != 0;
    assume Tmp_2160 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_2169;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2155;
    call {:si_unique_call 2473} WPP_SF_q(Tmp_2155, 37, Tmp_2169, pdoExtension_20);
    goto L317;

  L317:
    call {:si_unique_call 2474} Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    call {:si_unique_call 2475} sdv_KeAcquireSpinLock(0, Tmp_2180);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    havoc cIrql_11;
    goto L328;

  L328:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto L328_dummy;

  L328_dummy:
    assume false;
    return;

  anon202_Then:
    goto L317;

  anon248_Then:
    goto L317;

  anon201_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon247_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon246_Then:
    goto L297;

  anon245_Then:
    goto L290;

  anon244_Then:
    goto L283;

  anon243_Then:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    Tmp_2127 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2175;
    assume {:nonnull} Tmp_2175 != 0;
    assume Tmp_2175 > 0;
    DeviceObject_48 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2175 + Tmp_2127 * 268)];
    call {:si_unique_call 2476} sdv_KeReleaseSpinLock(0, cIrql_11);
    assume false;
    return;

  anon242_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2135 + Tmp_2166 * 268)] == 0;
    goto L277;

  L277:
    Tmp_2164 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2137;
    assume {:nonnull} Tmp_2137 != 0;
    assume Tmp_2137 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    Tmp_2187 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2163;
    assume {:nonnull} Tmp_2163 != 0;
    assume Tmp_2163 > 0;
    call {:si_unique_call 2477} sdv_ExFreePool(0);
    Tmp_2132 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2139;
    assume {:nonnull} Tmp_2139 != 0;
    assume Tmp_2139 > 0;
    Tmp_2174 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2221;
    assume {:nonnull} Tmp_2221 != 0;
    assume Tmp_2221 > 0;
    goto L423;

  L423:
    Tmp_2234 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2168;
    assume {:nonnull} Tmp_2168 != 0;
    assume Tmp_2168 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    Tmp_2149 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2224;
    assume {:nonnull} Tmp_2224 != 0;
    assume Tmp_2224 > 0;
    call {:si_unique_call 2478} sdv_ExFreePool(0);
    Tmp_2147 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2177;
    assume {:nonnull} Tmp_2177 != 0;
    assume Tmp_2177 > 0;
    Tmp_2204 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2156;
    assume {:nonnull} Tmp_2156 != 0;
    assume Tmp_2156 > 0;
    goto L430;

  L430:
    Tmp_2209 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2146;
    assume {:nonnull} Tmp_2146 != 0;
    assume Tmp_2146 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    Tmp_2136 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2207;
    assume {:nonnull} Tmp_2207 != 0;
    assume Tmp_2207 > 0;
    call {:si_unique_call 2479} sdv_ExFreePool(0);
    Tmp_2226 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2134;
    assume {:nonnull} Tmp_2134 != 0;
    assume Tmp_2134 > 0;
    Tmp_2229 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2122;
    assume {:nonnull} Tmp_2122 != 0;
    assume Tmp_2122 > 0;
    goto L328;

  anon256_Then:
    goto L328;

  anon255_Then:
    goto L430;

  anon254_Then:
    goto L423;

  anon199_Then:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc vslice_dummy_var_4321;
    call {:si_unique_call 2480} DeAllocateIrpAndIrb(fdoExtension_13, vslice_dummy_var_4321);
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto L443;

  L443:
    call {:si_unique_call 2481} sdv_KeReleaseSpinLock(0, cIrql_11);
    goto L54;

  anon200_Then:
    goto L443;

  anon198_Then:
    goto L253;

  anon258_Then:
    goto L253;

  anon197_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L253;

  anon196_Then:
    assume {:partition} 0 <= status_71;
    goto L253;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon240_Then:
    goto L253;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_48: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2118: int);
  modifies alloc, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.PVOID, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_48: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2118: int)
{
  var {:scalar} Tmp_2119: int;
  var {:scalar} Tmp_2120: int;
  var {:pointer} Tmp_2122: int;
  var {:scalar} Tmp_2123: int;
  var {:scalar} Tmp_2124: int;
  var {:pointer} Tmp_2125: int;
  var {:pointer} Tmp_2126: int;
  var {:scalar} Tmp_2127: int;
  var {:pointer} Tmp_2129: int;
  var {:pointer} pdoExtension_20: int;
  var {:scalar} Tmp_2131: int;
  var {:scalar} Tmp_2132: int;
  var {:pointer} Tmp_2133: int;
  var {:pointer} Tmp_2134: int;
  var {:pointer} Tmp_2135: int;
  var {:scalar} Tmp_2136: int;
  var {:pointer} Tmp_2137: int;
  var {:pointer} Tmp_2138: int;
  var {:pointer} Tmp_2139: int;
  var {:pointer} Tmp_2140: int;
  var {:pointer} Tmp_2141: int;
  var {:pointer} sdv_700: int;
  var {:pointer} Tmp_2142: int;
  var {:scalar} Tmp_2143: int;
  var {:pointer} Tmp_2144: int;
  var {:pointer} Tmp_2145: int;
  var {:pointer} Tmp_2146: int;
  var {:scalar} Tmp_2147: int;
  var {:scalar} Tmp_2148: int;
  var {:pointer} sdv_701: int;
  var {:pointer} sdv_702: int;
  var {:scalar} Tmp_2149: int;
  var {:pointer} Tmp_2150: int;
  var {:pointer} Tmp_2151: int;
  var {:pointer} Tmp_2152: int;
  var {:pointer} sdv_703: int;
  var {:pointer} Tmp_2153: int;
  var {:pointer} Tmp_2154: int;
  var {:pointer} sdv_704: int;
  var {:scalar} Tmp_2155: int;
  var {:pointer} Tmp_2156: int;
  var {:pointer} Tmp_2157: int;
  var {:pointer} irp_9: int;
  var {:pointer} Tmp_2158: int;
  var {:pointer} Tmp_2159: int;
  var {:pointer} Tmp_2160: int;
  var {:pointer} Tmp_2161: int;
  var {:scalar} sdv_706: int;
  var {:pointer} Tmp_2162: int;
  var {:pointer} Tmp_2163: int;
  var {:scalar} Tmp_2164: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} Tmp_2165: int;
  var {:pointer} sdv_707: int;
  var {:scalar} Tmp_2166: int;
  var {:pointer} Tmp_2167: int;
  var {:pointer} Tmp_2168: int;
  var {:pointer} Tmp_2169: int;
  var {:scalar} valid: int;
  var {:pointer} Tmp_2171: int;
  var {:scalar} Tmp_2172: int;
  var {:scalar} status_70: int;
  var {:pointer} Tmp_2173: int;
  var {:scalar} Tmp_2174: int;
  var {:pointer} Tmp_2175: int;
  var {:scalar} Tmp_2176: int;
  var {:pointer} Tmp_2177: int;
  var {:pointer} Tmp_2178: int;
  var {:scalar} Tmp_2179: int;
  var {:pointer} Tmp_2180: int;
  var {:scalar} Tmp_2181: int;
  var {:scalar} i_6: int;
  var {:pointer} Tmp_2182: int;
  var {:pointer} Tmp_2183: int;
  var {:pointer} Tmp_2184: int;
  var {:pointer} Tmp_2185: int;
  var {:scalar} Tmp_2186: int;
  var {:scalar} Tmp_2187: int;
  var {:pointer} Tmp_2188: int;
  var {:scalar} Tmp_2189: int;
  var {:scalar} Tmp_2190: int;
  var {:scalar} Tmp_2192: int;
  var {:pointer} Tmp_2194: int;
  var {:pointer} Tmp_2195: int;
  var {:pointer} Tmp_2196: int;
  var {:scalar} Tmp_2197: int;
  var {:scalar} Tmp_2200: int;
  var {:scalar} Tmp_2201: int;
  var {:pointer} context_2: int;
  var {:scalar} Tmp_2202: int;
  var {:scalar} Tmp_2203: int;
  var {:scalar} Tmp_2204: int;
  var {:scalar} Tmp_2206: int;
  var {:pointer} Tmp_2207: int;
  var {:pointer} Tmp_2208: int;
  var {:scalar} Tmp_2209: int;
  var {:pointer} Tmp_2210: int;
  var {:scalar} Tmp_2211: int;
  var {:pointer} Tmp_2212: int;
  var {:pointer} Tmp_2213: int;
  var {:pointer} Tmp_2214: int;
  var {:pointer} Tmp_2215: int;
  var {:scalar} Tmp_2216: int;
  var {:pointer} sdv_710: int;
  var {:scalar} sdv_711: int;
  var {:pointer} Tmp_2217: int;
  var {:scalar} Tmp_2218: int;
  var {:pointer} fdoExtension_13: int;
  var {:pointer} Tmp_2219: int;
  var {:pointer} Tmp_2220: int;
  var {:pointer} Tmp_2221: int;
  var {:pointer} Tmp_2222: int;
  var {:pointer} Tmp_2223: int;
  var {:pointer} Tmp_2224: int;
  var {:pointer} Tmp_2225: int;
  var {:scalar} Tmp_2226: int;
  var {:scalar} Tmp_2227: int;
  var {:pointer} Tmp_2228: int;
  var {:scalar} Tmp_2229: int;
  var {:scalar} cIrql_11: int;
  var {:pointer} Tmp_2230: int;
  var {:scalar} Tmp_2232: int;
  var {:scalar} status_71: int;
  var {:pointer} packet_13: int;
  var {:scalar} Tmp_2233: int;
  var {:scalar} Tmp_2234: int;
  var {:pointer} Tmp_2235: int;
  var {:scalar} Tmp_2236: int;
  var {:scalar} Tmp_2237: int;
  var {:pointer} Tmp_2238: int;
  var {:pointer} Tmp_2239: int;
  var {:pointer} Tmp_2240: int;
  var {:scalar} Tmp_2241: int;
  var {:pointer} Tmp_2242: int;
  var {:pointer} DeviceObject_48: int;
  var {:scalar} FreeLists: int;
  var {:scalar} OnRemove: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_4322: int;
  var vslice_dummy_var_4323: int;
  var vslice_dummy_var_4324: int;
  var vslice_dummy_var_4325: int;
  var vslice_dummy_var_4326: int;

  anon0:
    DeviceObject_48 := actual_DeviceObject_48;
    FreeLists := actual_FreeLists;
    OnRemove := actual_OnRemove;
    call {:si_unique_call 2482} Tmp_2122 := __HAVOC_malloc(2680);
    call {:si_unique_call 2483} Tmp_2126 := __HAVOC_malloc(2680);
    call {:si_unique_call 2484} Tmp_2133 := __HAVOC_malloc(4);
    call {:si_unique_call 2485} Tmp_2134 := __HAVOC_malloc(2680);
    call {:si_unique_call 2486} Tmp_2135 := __HAVOC_malloc(2680);
    call {:si_unique_call 2487} Tmp_2137 := __HAVOC_malloc(2680);
    call {:si_unique_call 2488} Tmp_2138 := __HAVOC_malloc(2680);
    call {:si_unique_call 2489} Tmp_2139 := __HAVOC_malloc(2680);
    call {:si_unique_call 2490} Tmp_2141 := __HAVOC_malloc(2680);
    call {:si_unique_call 2491} Tmp_2146 := __HAVOC_malloc(2680);
    call {:si_unique_call 2492} Tmp_2151 := __HAVOC_malloc(2680);
    call {:si_unique_call 2493} Tmp_2152 := __HAVOC_malloc(4);
    call {:si_unique_call 2494} Tmp_2153 := __HAVOC_malloc(2680);
    call {:si_unique_call 2495} Tmp_2154 := __HAVOC_malloc(4);
    call {:si_unique_call 2496} Tmp_2156 := __HAVOC_malloc(2680);
    call {:si_unique_call 2497} Tmp_2157 := __HAVOC_malloc(2680);
    call {:si_unique_call 2498} Tmp_2160 := __HAVOC_malloc(4);
    call {:si_unique_call 2499} Tmp_2163 := __HAVOC_malloc(2680);
    call {:si_unique_call 2500} Tmp_2167 := __HAVOC_malloc(2680);
    call {:si_unique_call 2501} Tmp_2168 := __HAVOC_malloc(2680);
    call {:si_unique_call 2502} Tmp_2175 := __HAVOC_malloc(2680);
    call {:si_unique_call 2503} Tmp_2177 := __HAVOC_malloc(2680);
    call {:si_unique_call 2504} Tmp_2182 := __HAVOC_malloc(4);
    call {:si_unique_call 2505} Tmp_2183 := __HAVOC_malloc(4);
    call {:si_unique_call 2506} Tmp_2184 := __HAVOC_malloc(2680);
    call {:si_unique_call 2507} Tmp_2188 := __HAVOC_malloc(4);
    call {:si_unique_call 2508} Tmp_2194 := __HAVOC_malloc(2680);
    call {:si_unique_call 2509} Tmp_2196 := __HAVOC_malloc(2680);
    call {:si_unique_call 2510} Tmp_2207 := __HAVOC_malloc(2680);
    call {:si_unique_call 2511} Tmp_2210 := __HAVOC_malloc(4);
    call {:si_unique_call 2512} Tmp_2212 := __HAVOC_malloc(2680);
    call {:si_unique_call 2513} Tmp_2213 := __HAVOC_malloc(4);
    call {:si_unique_call 2514} Tmp_2215 := __HAVOC_malloc(2680);
    call {:si_unique_call 2515} Tmp_2217 := __HAVOC_malloc(2680);
    call {:si_unique_call 2516} Tmp_2219 := __HAVOC_malloc(2680);
    call {:si_unique_call 2517} Tmp_2221 := __HAVOC_malloc(2680);
    call {:si_unique_call 2518} Tmp_2224 := __HAVOC_malloc(2680);
    call {:si_unique_call 2519} Tmp_2230 := __HAVOC_malloc(2680);
    call {:si_unique_call 2520} Tmp_2235 := __HAVOC_malloc(2680);
    call {:si_unique_call 2521} Tmp_2239 := __HAVOC_malloc(4);
    call {:si_unique_call 2522} Tmp_2240 := __HAVOC_malloc(2680);
    call {:si_unique_call 2523} Tmp_2242 := __HAVOC_malloc(2680);
    valid := 0;
    assume {:nonnull} DeviceObject_48 != 0;
    assume DeviceObject_48 > 0;
    pdoExtension_20 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_48)];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2154;
    assume {:nonnull} Tmp_2154 != 0;
    assume Tmp_2154 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    Tmp_2218 := FreeLists;
    havoc Tmp_2129;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2241;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_4322;
    call {:si_unique_call 2524} WPP_SF_qDd(Tmp_2241, 31, Tmp_2129, pdoExtension_20, vslice_dummy_var_4322, Tmp_2218);
    goto L19;

  L19:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2150;
    assume {:nonnull} Tmp_2150 != 0;
    assume Tmp_2150 > 0;
    fdoExtension_13 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2150)];
    Tmp_2232 := FreeLists;
    call {:si_unique_call 2525} Sbp2AddLog(pdoExtension_20, 1, -1016304048, Tmp_2232, fdoExtension_13);
    i_6 := 0;
    goto L33;

  L33:
    call {:si_unique_call 2526} Tmp_2131, i_6, Tmp_2202, Tmp_2212, Tmp_2217 := Sbp2CleanDeviceExtension#1_loop_L33(Tmp_2131, i_6, Tmp_2202, Tmp_2212, Tmp_2217, fdoExtension_13, DeviceObject_48);
    goto L33_last;

  L33_last:
    Tmp_2202 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2217;
    assume {:nonnull} Tmp_2217 != 0;
    assume Tmp_2217 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2217 + Tmp_2202 * 268)] != 0;
    Tmp_2131 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2212;
    assume {:nonnull} Tmp_2212 != 0;
    assume Tmp_2212 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2212 + Tmp_2131 * 268)] == DeviceObject_48;
    valid := 1;
    goto L34;

  L34:
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 2527} vslice_dummy_var_414 := KeCancelTimer(0);
    call {:si_unique_call 2528} CleanupOrbList#0(pdoExtension_20, -1073741248);
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} yogi_error != 1;
    goto L43;

  L43:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(DummyContext__DEVICE_EXTENSION(pdoExtension_20))] != 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2529} FreeAddressRange#1(pdoExtension_20, DummyContext__DEVICE_EXTENSION(pdoExtension_20));
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} yogi_error != 1;
    goto L50;

  L50:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} FreeLists != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2133;
    assume {:nonnull} Tmp_2133 != 0;
    assume Tmp_2133 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    Tmp_2172 := OnRemove;
    Tmp_2165 := FreeLists;
    havoc Tmp_2185;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2190;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_4323;
    call {:si_unique_call 2530} WPP_SF_qDdd(Tmp_2190, 32, Tmp_2185, pdoExtension_20, vslice_dummy_var_4323, Tmp_2165, Tmp_2172);
    goto L60;

  L60:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2531} FreeAddressRange#1(pdoExtension_20, TaskOrbStatusContext__DEVICE_EXTENSION(pdoExtension_20));
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2532} FreeAddressRange#1(pdoExtension_20, GlobalStatusContext__DEVICE_EXTENSION(pdoExtension_20));
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2533} FreeAddressRange#1(pdoExtension_20, ManagementOrbStatusContext__DEVICE_EXTENSION(pdoExtension_20));
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2534} sdv_710 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_20), 0);
    irp_9 := sdv_710;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} irp_9 != 0;
    assume {:nonnull} irp_9 != 0;
    assume irp_9 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2535} vslice_dummy_var_417 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_20), irp_9);
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2536} sdv_IoCompleteRequest(0, 0);
    goto L84;

  L84:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2537} sdv_703 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_20), 0);
    irp_9 := sdv_703;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} irp_9 != 0;
    assume {:nonnull} irp_9 != 0;
    assume irp_9 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2538} vslice_dummy_var_418 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_20), irp_9);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2539} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2540} sdv_704 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_20), 0);
    irp_9 := sdv_704;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} irp_9 != 0;
    assume {:nonnull} irp_9 != 0;
    assume irp_9 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2541} vslice_dummy_var_419 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_20), irp_9);
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2542} sdv_IoCompleteRequest(0, 0);
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    call {:si_unique_call 2543} vslice_dummy_var_415 := IoDeleteSymbolicLink(0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2544} ExFreePoolWithTag(0, -330079661);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto L116;

  L116:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2152;
    assume {:nonnull} Tmp_2152 != 0;
    assume Tmp_2152 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    havoc Tmp_2145;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2237;
    call {:si_unique_call 2545} WPP_SF_q(Tmp_2237, 33, Tmp_2145, pdoExtension_20);
    goto L240;

  L240:
    Tmp_2118 := 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon195_Then:
    goto L240;

  anon238_Then:
    goto L240;

  anon194_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L240;

  anon183_Then:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2213;
    assume {:nonnull} Tmp_2213 != 0;
    assume Tmp_2213 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_2238;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2211;
    call {:si_unique_call 2546} WPP_SF_q(Tmp_2211, 34, Tmp_2238, pdoExtension_20);
    goto L132;

  L132:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2547} FreeAddressRange#1(pdoExtension_20, CommonBufferContext__DEVICE_EXTENSION(pdoExtension_20));
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    i_6 := 0;
    goto L147;

  L147:
    call {:si_unique_call 2548} i_6, context_2 := Sbp2CleanDeviceExtension#1_loop_L147(pdoExtension_20, i_6, context_2);
    goto L147_last;

  L147_last:
    assume {:CounterLoop 8} {:Counter "i_6"} true;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} 8 > i_6;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc context_2;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    call {:si_unique_call 2549} FreeAddressRange#1(pdoExtension_20, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_2)));
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    i_6 := i_6 + 1;
    goto L154_dummy;

  L154_dummy:
    assume false;
    return;

  anon232_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon231_Then:
    goto L154;

  anon187_Then:
    assume {:partition} i_6 >= 8;
    call {:si_unique_call 2550} ExFreePoolWithTag(0, -499031469);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto L145;

  L145:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    call {:si_unique_call 2551} sdv_707 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_707;
    goto L167;

  L167:
    call {:si_unique_call 2552} Tmp_2123, sdv_702, statusFifoElement, Tmp_2188, Tmp_2228 := Sbp2CleanDeviceExtension#1_loop_L167(Tmp_2123, pdoExtension_20, sdv_702, statusFifoElement, Tmp_2188, Tmp_2228);
    goto L167_last;

  L167_last:
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} statusFifoElement != 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2188;
    assume {:nonnull} Tmp_2188 != 0;
    assume Tmp_2188 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_2228;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2123;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc vslice_dummy_var_4324;
    call {:si_unique_call 2553} WPP_SF_qqq(Tmp_2123, 35, Tmp_2228, pdoExtension_20, statusFifoElement, vslice_dummy_var_4324);
    goto L175;

  L175:
    call {:si_unique_call 2554} IoFreeMdl(0);
    call {:si_unique_call 2555} sdv_702 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_702;
    goto L175_dummy;

  L175_dummy:
    assume false;
    return;

  anon190_Then:
    goto L175;

  anon233_Then:
    goto L175;

  anon189_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;

  anon188_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 2556} ExFreePoolWithTag(0, -430742957);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto L160;

  L160:
    call {:si_unique_call 2557} sdv_700 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_700;
    goto L191;

  L191:
    call {:si_unique_call 2558} sdv_701, Tmp_2222, packet_13 := Sbp2CleanDeviceExtension#1_loop_L191(sdv_701, Tmp_2222, packet_13);
    goto L191_last;

  L191_last:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} packet_13 != 0;
    call {:si_unique_call 2559} sdv_ExFreePool(0);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_2222;
    assume {:nonnull} Tmp_2222 != 0;
    assume Tmp_2222 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    call {:si_unique_call 2560} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 2561} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 2562} sdv_701 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_701;
    goto L199_dummy;

  L199_dummy:
    assume false;
    return;

  anon234_Then:
    goto L199;

  anon191_Then:
    assume {:partition} packet_13 == 0;
    call {:si_unique_call 2563} Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    call {:si_unique_call 2564} sdv_KeAcquireSpinLock(0, Tmp_2180);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    havoc cIrql_11;
    call {:si_unique_call 2565} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 2566} sdv_KeReleaseSpinLock(0, cIrql_11);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    call {:si_unique_call 2567} IoFreeMdl(0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2173;
    assume {:nonnull} Tmp_2173 != 0;
    assume Tmp_2173 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2208;
    assume {:nonnull} Tmp_2208 != 0;
    assume Tmp_2208 > 0;
    call {:si_unique_call 2568} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2140;
    assume {:nonnull} Tmp_2140 != 0;
    assume Tmp_2140 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2161;
    assume {:nonnull} Tmp_2161 != 0;
    assume Tmp_2161 > 0;
    goto L222;

  L222:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2171;
    assume {:nonnull} Tmp_2171 != 0;
    assume Tmp_2171 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2225;
    assume {:nonnull} Tmp_2225 != 0;
    assume Tmp_2225 > 0;
    call {:si_unique_call 2569} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2159;
    assume {:nonnull} Tmp_2159 != 0;
    assume Tmp_2159 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2178;
    assume {:nonnull} Tmp_2178 != 0;
    assume Tmp_2178 > 0;
    goto L228;

  L228:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2220;
    assume {:nonnull} Tmp_2220 != 0;
    assume Tmp_2220 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2144;
    assume {:nonnull} Tmp_2144 != 0;
    assume Tmp_2144 > 0;
    call {:si_unique_call 2570} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2125;
    assume {:nonnull} Tmp_2125 != 0;
    assume Tmp_2125 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2214;
    assume {:nonnull} Tmp_2214 != 0;
    assume Tmp_2214 > 0;
    goto L54;

  L54:
    Tmp_2118 := 1;
    goto L1;

  anon237_Then:
    goto L54;

  anon236_Then:
    goto L228;

  anon235_Then:
    goto L222;

  anon193_Then:
    goto L54;

  anon192_Then:
    goto L216;

  anon186_Then:
    goto L160;

  anon230_Then:
    goto L145;

  anon229_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon185_Then:
    goto L132;

  anon228_Then:
    goto L132;

  anon184_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  anon182_Then:
    goto L116;

  anon227_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon226_Then:
    assume {:partition} irp_9 == 0;
    goto L108;

  anon225_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon224_Then:
    assume {:partition} irp_9 == 0;
    goto L96;

  anon223_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon222_Then:
    assume {:partition} irp_9 == 0;
    goto L84;

  anon221_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon220_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon219_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon180_Then:
    goto L54;

  anon181_Then:
    goto L60;

  anon218_Then:
    goto L60;

  anon179_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon178_Then:
    assume {:partition} FreeLists == 0;
    goto L54;

  anon217_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon177_Then:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(DummyContext__DEVICE_EXTENSION(pdoExtension_20))] == 0;
    goto L50;

  anon216_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon176_Then:
    goto L43;

  anon175_Then:
    assume {:partition} valid == 0;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc vslice_dummy_var_4325;
    call {:si_unique_call 2571} Sbp2AddLog(pdoExtension_20, 1, -1016304078, vslice_dummy_var_4325, 0);
    Tmp_2118 := 0;
    goto L1;

  anon215_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2212 + Tmp_2131 * 268)] != DeviceObject_48;
    i_6 := i_6 + 1;
    goto anon215_Then_dummy;

  anon215_Then_dummy:
    assume false;
    return;

  anon214_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2217 + Tmp_2202 * 268)] == 0;
    goto L34;

  anon174_Then:
    goto L19;

  anon213_Then:
    goto L19;

  anon173_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L19;

  anon212_Then:
    assume {:nonnull} DeviceObject_48 != 0;
    assume DeviceObject_48 > 0;
    fdoExtension_13 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_48)];
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_13)], 262144) != 0;
    Tmp_2118 := 0;
    goto L1;

  anon239_Then:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_13)], 262144) == 0;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_13)] := BOR(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_13)], 262144);
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    call {:si_unique_call 2572} status_71 := Sbp2EnableBusResetNotification#1(fdoExtension_13, 0);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} status_71 < 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2183;
    assume {:nonnull} Tmp_2183 != 0;
    assume Tmp_2183 > 0;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    havoc Tmp_2223;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2233;
    call {:si_unique_call 2573} WPP_SF_qD(Tmp_2233, 36, Tmp_2223, fdoExtension_13, status_71);
    goto L253;

  L253:
    call {:si_unique_call 2574} Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    call {:si_unique_call 2575} sdv_KeAcquireSpinLock(0, Tmp_2180);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    havoc cIrql_11;
    goto L273;

  L273:
    call {:si_unique_call 2576} Tmp_2119, Tmp_2120, Tmp_2122, Tmp_2124, Tmp_2126, Tmp_2127, pdoExtension_20, Tmp_2132, Tmp_2134, Tmp_2135, Tmp_2136, Tmp_2137, Tmp_2138, Tmp_2139, Tmp_2141, Tmp_2142, Tmp_2143, Tmp_2146, Tmp_2147, Tmp_2148, Tmp_2149, Tmp_2151, Tmp_2153, Tmp_2155, Tmp_2156, Tmp_2157, Tmp_2158, Tmp_2160, sdv_706, Tmp_2162, Tmp_2163, Tmp_2164, Tmp_2166, Tmp_2167, Tmp_2168, Tmp_2169, status_70, Tmp_2174, Tmp_2175, Tmp_2176, Tmp_2177, Tmp_2179, Tmp_2180, Tmp_2181, i_6, Tmp_2182, Tmp_2184, Tmp_2186, Tmp_2187, Tmp_2189, Tmp_2192, Tmp_2194, Tmp_2195, Tmp_2196, Tmp_2197, Tmp_2200, Tmp_2201, Tmp_2203, Tmp_2204, Tmp_2206, Tmp_2207, Tmp_2209, Tmp_2210, Tmp_2215, Tmp_2216, sdv_711, Tmp_2219, Tmp_2221, Tmp_2224, Tmp_2226, Tmp_2227, Tmp_2229, cIrql_11, Tmp_2230, Tmp_2234, Tmp_2235, Tmp_2236, Tmp_2239, Tmp_2240, Tmp_2242, DeviceObject_48, vslice_dummy_var_416, vslice_dummy_var_420, vslice_dummy_var_421 := Sbp2CleanDeviceExtension#1_loop_L273(Tmp_2119, Tmp_2120, Tmp_2122, Tmp_2124, Tmp_2126, Tmp_2127, pdoExtension_20, Tmp_2132, Tmp_2134, Tmp_2135, Tmp_2136, Tmp_2137, Tmp_2138, Tmp_2139, Tmp_2141, Tmp_2142, Tmp_2143, Tmp_2146, Tmp_2147, Tmp_2148, Tmp_2149, Tmp_2151, Tmp_2153, Tmp_2155, Tmp_2156, Tmp_2157, Tmp_2158, Tmp_2160, sdv_706, Tmp_2162, Tmp_2163, Tmp_2164, Tmp_2166, Tmp_2167, Tmp_2168, Tmp_2169, status_70, Tmp_2174, Tmp_2175, Tmp_2176, Tmp_2177, Tmp_2179, Tmp_2180, Tmp_2181, i_6, Tmp_2182, Tmp_2184, Tmp_2186, Tmp_2187, Tmp_2189, Tmp_2192, Tmp_2194, Tmp_2195, Tmp_2196, Tmp_2197, Tmp_2200, Tmp_2201, Tmp_2203, Tmp_2204, Tmp_2206, Tmp_2207, Tmp_2209, Tmp_2210, Tmp_2215, Tmp_2216, sdv_711, fdoExtension_13, Tmp_2219, Tmp_2221, Tmp_2224, Tmp_2226, Tmp_2227, Tmp_2229, cIrql_11, Tmp_2230, Tmp_2234, Tmp_2235, Tmp_2236, Tmp_2239, Tmp_2240, Tmp_2242, DeviceObject_48, vslice_dummy_var_416, vslice_dummy_var_420, vslice_dummy_var_421);
    goto L273_last;

  L273_last:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc i_6;
    Tmp_2166 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2135;
    assume {:nonnull} Tmp_2135 != 0;
    assume Tmp_2135 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2135 + Tmp_2166 * 268)] != 0;
    Tmp_2119 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2151;
    assume {:nonnull} Tmp_2151 != 0;
    assume Tmp_2151 > 0;
    Tmp_2142 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2151 + Tmp_2119 * 268)];
    assume {:nonnull} Tmp_2142 != 0;
    assume Tmp_2142 > 0;
    pdoExtension_20 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2142)];
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    Tmp_2201 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2184;
    assume {:nonnull} Tmp_2184 != 0;
    assume Tmp_2184 > 0;
    DeviceObject_48 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2184 + Tmp_2201 * 268)];
    Tmp_2192 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2230;
    assume {:nonnull} Tmp_2230 != 0;
    assume Tmp_2230 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    Tmp_2181 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2215;
    assume {:nonnull} Tmp_2215 != 0;
    assume Tmp_2215 > 0;
    call {:si_unique_call 2577} sdv_ExFreePool(0);
    Tmp_2176 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2194;
    assume {:nonnull} Tmp_2194 != 0;
    assume Tmp_2194 > 0;
    Tmp_2120 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2240;
    assume {:nonnull} Tmp_2240 != 0;
    assume Tmp_2240 > 0;
    goto L283;

  L283:
    Tmp_2200 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2157;
    assume {:nonnull} Tmp_2157 != 0;
    assume Tmp_2157 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    Tmp_2148 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2242;
    assume {:nonnull} Tmp_2242 != 0;
    assume Tmp_2242 > 0;
    call {:si_unique_call 2578} sdv_ExFreePool(0);
    Tmp_2227 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2196;
    assume {:nonnull} Tmp_2196 != 0;
    assume Tmp_2196 > 0;
    Tmp_2206 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2235;
    assume {:nonnull} Tmp_2235 != 0;
    assume Tmp_2235 > 0;
    goto L290;

  L290:
    Tmp_2143 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2153;
    assume {:nonnull} Tmp_2153 != 0;
    assume Tmp_2153 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    Tmp_2216 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2167;
    assume {:nonnull} Tmp_2167 != 0;
    assume Tmp_2167 > 0;
    call {:si_unique_call 2579} sdv_ExFreePool(0);
    Tmp_2179 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2138;
    assume {:nonnull} Tmp_2138 != 0;
    assume Tmp_2138 > 0;
    Tmp_2203 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2126;
    assume {:nonnull} Tmp_2126 != 0;
    assume Tmp_2126 > 0;
    goto L297;

  L297:
    Tmp_2186 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2141;
    assume {:nonnull} Tmp_2141 != 0;
    assume Tmp_2141 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2141 + Tmp_2186 * 268)] := 0;
    call {:si_unique_call 2580} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 2581} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2582} IoDeleteDevice(0);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2160;
    assume {:nonnull} Tmp_2160 != 0;
    assume Tmp_2160 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_2169;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2155;
    call {:si_unique_call 2583} WPP_SF_q(Tmp_2155, 37, Tmp_2169, pdoExtension_20);
    goto L317;

  L317:
    call {:si_unique_call 2584} Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    call {:si_unique_call 2585} sdv_KeAcquireSpinLock(0, Tmp_2180);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    havoc cIrql_11;
    goto L328;

  L328:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto L328_dummy;

  L328_dummy:
    assume false;
    return;

  anon202_Then:
    goto L317;

  anon248_Then:
    goto L317;

  anon201_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon247_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon246_Then:
    goto L297;

  anon245_Then:
    goto L290;

  anon244_Then:
    goto L283;

  anon243_Then:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    Tmp_2127 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2175;
    assume {:nonnull} Tmp_2175 != 0;
    assume Tmp_2175 > 0;
    DeviceObject_48 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2175 + Tmp_2127 * 268)];
    call {:si_unique_call 2586} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 2587} sdv_711 := Sbp2CleanDeviceExtension#0(DeviceObject_48, 1, 0);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} yogi_error != 1;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} sdv_711 != 0;
    call {:si_unique_call 2588} status_70 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} status_70 < 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2210;
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    havoc Tmp_2195;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2236;
    call {:si_unique_call 2589} WPP_SF_qD(Tmp_2236, 38, Tmp_2195, DeviceObject_48, status_70);
    goto L348;

  L348:
    call {:si_unique_call 2590} Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    call {:si_unique_call 2591} sdv_KeRaiseIrql(2, Tmp_2180);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    havoc cIrql_11;
    call {:si_unique_call 2592} Sbp2StartNextPacketByKey#1(DeviceObject_48, 0);
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2593} sdv_KeLowerIrql(cIrql_11);
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2182;
    assume {:nonnull} Tmp_2182 != 0;
    assume Tmp_2182 > 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    havoc Tmp_2162;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2124;
    call {:si_unique_call 2594} WPP_SF_qq(Tmp_2124, 39, Tmp_2162, pdoExtension_20, DeviceObject_48);
    goto L361;

  L361:
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2595} vslice_dummy_var_420 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_20), 0, 0);
    call {:si_unique_call 2596} vslice_dummy_var_416 := KeCancelTimer(0);
    call {:si_unique_call 2597} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:partition} yogi_error != 1;
    goto L379;

  L379:
    call {:si_unique_call 2598} sdv_706, vslice_dummy_var_421 := Sbp2CleanDeviceExtension#1_loop_L379(pdoExtension_20, sdv_706, vslice_dummy_var_421);
    goto L379_last;

  L379_last:
    call {:si_unique_call 2615} sdv_706 := sdv_IsListEmpty(0);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} sdv_706 == 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 2599} vslice_dummy_var_421 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2600} sdv_ExFreePool(0);
    goto anon207_Else_dummy;

  anon207_Else_dummy:
    assume false;
    return;

  anon207_Then:
    assume {:partition} sdv_706 != 0;
    call {:si_unique_call 2601} Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    call {:si_unique_call 2602} sdv_KeAcquireSpinLock(0, Tmp_2180);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    havoc cIrql_11;
    Tmp_2189 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2219;
    assume {:nonnull} Tmp_2219 != 0;
    assume Tmp_2219 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2219 + Tmp_2189 * 268)] := 0;
    call {:si_unique_call 2603} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 2604} IoDeleteDevice(0);
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2239;
    assume {:nonnull} Tmp_2239 != 0;
    assume Tmp_2239 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_2158;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2197;
    call {:si_unique_call 2605} WPP_SF_q(Tmp_2197, 40, Tmp_2158, pdoExtension_20);
    goto L398;

  L398:
    call {:si_unique_call 2606} Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    call {:si_unique_call 2607} sdv_KeAcquireSpinLock(0, Tmp_2180);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    havoc cIrql_11;
    goto L277;

  L277:
    Tmp_2164 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2137;
    assume {:nonnull} Tmp_2137 != 0;
    assume Tmp_2137 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    Tmp_2187 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2163;
    assume {:nonnull} Tmp_2163 != 0;
    assume Tmp_2163 > 0;
    call {:si_unique_call 2608} sdv_ExFreePool(0);
    Tmp_2132 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2139;
    assume {:nonnull} Tmp_2139 != 0;
    assume Tmp_2139 > 0;
    Tmp_2174 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2221;
    assume {:nonnull} Tmp_2221 != 0;
    assume Tmp_2221 > 0;
    goto L423;

  L423:
    Tmp_2234 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2168;
    assume {:nonnull} Tmp_2168 != 0;
    assume Tmp_2168 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    Tmp_2149 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2224;
    assume {:nonnull} Tmp_2224 != 0;
    assume Tmp_2224 > 0;
    call {:si_unique_call 2609} sdv_ExFreePool(0);
    Tmp_2147 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2177;
    assume {:nonnull} Tmp_2177 != 0;
    assume Tmp_2177 > 0;
    Tmp_2204 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2156;
    assume {:nonnull} Tmp_2156 != 0;
    assume Tmp_2156 > 0;
    goto L430;

  L430:
    Tmp_2209 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2146;
    assume {:nonnull} Tmp_2146 != 0;
    assume Tmp_2146 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    Tmp_2136 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2207;
    assume {:nonnull} Tmp_2207 != 0;
    assume Tmp_2207 > 0;
    call {:si_unique_call 2610} sdv_ExFreePool(0);
    Tmp_2226 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2134;
    assume {:nonnull} Tmp_2134 != 0;
    assume Tmp_2134 > 0;
    Tmp_2229 := i_6;
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc Tmp_2122;
    assume {:nonnull} Tmp_2122 != 0;
    assume Tmp_2122 > 0;
    goto L328;

  anon256_Then:
    goto L328;

  anon255_Then:
    goto L430;

  anon254_Then:
    goto L423;

  anon209_Then:
    goto L398;

  anon253_Then:
    goto L398;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L398;

  anon252_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon206_Then:
    goto L361;

  anon251_Then:
    goto L361;

  anon205_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L361;

  anon250_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon211_Then:
    goto L348;

  anon257_Then:
    goto L348;

  anon210_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L348;

  anon204_Then:
    assume {:partition} 0 <= status_70;
    goto L348;

  anon203_Then:
    assume {:partition} sdv_711 == 0;
    call {:si_unique_call 2611} Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    call {:si_unique_call 2612} sdv_KeAcquireSpinLock(0, Tmp_2180);
    assume {:nonnull} Tmp_2180 != 0;
    assume Tmp_2180 > 0;
    havoc cIrql_11;
    goto L277;

  anon249_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon242_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_2135 + Tmp_2166 * 268)] == 0;
    goto L277;

  anon199_Then:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    havoc vslice_dummy_var_4326;
    call {:si_unique_call 2613} DeAllocateIrpAndIrb(fdoExtension_13, vslice_dummy_var_4326);
    assume {:nonnull} fdoExtension_13 != 0;
    assume fdoExtension_13 > 0;
    goto L443;

  L443:
    call {:si_unique_call 2614} sdv_KeReleaseSpinLock(0, cIrql_11);
    goto L54;

  anon200_Then:
    goto L443;

  anon198_Then:
    goto L253;

  anon258_Then:
    goto L253;

  anon197_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L253;

  anon196_Then:
    assume {:partition} 0 <= status_71;
    goto L253;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon240_Then:
    goto L253;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_48: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2118: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "FreeAddressRange"} FreeAddressRange#0(actual_DeviceExtension_7: int, actual_Context_15: int)
{
  var {:pointer} Tmp_1430: int;
  var {:pointer} Tmp_1432: int;
  var {:scalar} Tmp_1433: int;
  var {:scalar} sdv_479: int;
  var {:pointer} Tmp_1434: int;
  var {:pointer} Tmp_1435: int;
  var {:pointer} Tmp_1436: int;
  var {:pointer} Tmp_1437: int;
  var {:scalar} sdv_480: int;
  var {:pointer} Tmp_1438: int;
  var {:pointer} Tmp_1439: int;
  var {:pointer} Tmp_1440: int;
  var {:pointer} Tmp_1441: int;
  var {:pointer} Tmp_1442: int;
  var {:scalar} routine_1: int;
  var {:pointer} Tmp_1443: int;
  var {:pointer} packet_10: int;
  var {:scalar} status_42: int;
  var {:pointer} Tmp_1444: int;
  var {:pointer} Tmp_1445: int;
  var {:scalar} Tmp_1446: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Context_15: int;
  var vslice_dummy_var_422: int;

  anon0:
    call {:si_unique_call 2616} vslice_dummy_var_422 := __HAVOC_malloc(4);
    call {:si_unique_call 2617} packet_10 := __HAVOC_malloc(4);
    DeviceExtension_7 := actual_DeviceExtension_7;
    Context_15 := actual_Context_15;
    call {:si_unique_call 2618} Tmp_1432 := __HAVOC_malloc(4);
    call {:si_unique_call 2619} Tmp_1440 := __HAVOC_malloc(4);
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_15)] != 0;
    call {:si_unique_call 2620} AllocateIrpAndIrb(DeviceExtension_7, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_10] != 0;
    call {:si_unique_call 2621} Sbp2AddLog(DeviceExtension_7, 32, -968797586, DeviceExtension_7, Context_15);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1435;
    assume {:nonnull} Tmp_1435 != 0;
    assume Tmp_1435 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1444;
    assume {:nonnull} Tmp_1444 != 0;
    assume Tmp_1444 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1441;
    assume {:nonnull} Tmp_1441 != 0;
    assume Tmp_1441 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1443;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1443 != 0;
    assume Tmp_1443 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1437;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1437 != 0;
    assume Tmp_1437 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Context_15 == CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto L27;

  L27:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1442;
    assume {:nonnull} Tmp_1442 != 0;
    assume Tmp_1442 > 0;
    call {:si_unique_call 2622} sdv_480 := sdv_KeGetCurrentIrql();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_480 >= 2;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc routine_1;
    assume routine_1 == 0;
    call {:si_unique_call 2623} Sbp2AddLog(DeviceExtension_7, 32, -968797647, DeviceExtension_7, status_42);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_42 < 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1440;
    assume {:nonnull} Tmp_1440 != 0;
    assume Tmp_1440 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_1436;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1446;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    call {:si_unique_call 2624} WPP_SF_qD(Tmp_1446, 13, Tmp_1436, Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_15)], status_42);
    goto L49;

  L49:
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_15)] := 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 2625} IoFreeMdl(0);
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto L51;

  L51:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    call {:si_unique_call 2626} DeAllocateIrpAndIrb(DeviceExtension_7, Mem_T.P_IRBIRP[packet_10]);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon49_Then:
    goto L51;

  anon43_Then:
    goto L49;

  anon51_Then:
    goto L49;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon41_Then:
    assume {:partition} 0 <= status_42;
    goto L49;

  anon40_Then:
    goto L32;

  L32:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    assume false;
    return;

  anon39_Then:
    assume {:partition} 2 > sdv_480;
    goto L32;

  anon38_Then:
    assume {:partition} Context_15 != CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    call {:si_unique_call 2627} sdv_479 := sdv_MmGetMdlByteCount(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1439;
    assume {:nonnull} Tmp_1439 != 0;
    assume Tmp_1439 > 0;
    havoc Tmp_1445;
    assume {:nonnull} Tmp_1445 != 0;
    assume Tmp_1445 > 0;
    goto L27;

  anon47_Then:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Context_15 == GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1438;
    assume {:nonnull} Tmp_1438 != 0;
    assume Tmp_1438 > 0;
    havoc Tmp_1434;
    assume {:nonnull} Tmp_1434 != 0;
    assume Tmp_1434 > 0;
    goto L27;

  anon37_Then:
    assume {:partition} Context_15 != GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    goto L27;

  anon36_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_10] == 0;
    goto L1;

  anon35_Then:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_15)] == 0;
    goto L1;
}



procedure {:origName "FreeAddressRange"} FreeAddressRange#0(actual_DeviceExtension_7: int, actual_Context_15: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "FreeAddressRange"} FreeAddressRange#1(actual_DeviceExtension_7: int, actual_Context_15: int)
{
  var {:pointer} Tmp_1430: int;
  var {:pointer} Tmp_1432: int;
  var {:scalar} Tmp_1433: int;
  var {:scalar} sdv_479: int;
  var {:pointer} Tmp_1434: int;
  var {:pointer} Tmp_1435: int;
  var {:pointer} Tmp_1436: int;
  var {:pointer} Tmp_1437: int;
  var {:scalar} sdv_480: int;
  var {:pointer} Tmp_1438: int;
  var {:pointer} Tmp_1439: int;
  var {:pointer} Tmp_1440: int;
  var {:pointer} Tmp_1441: int;
  var {:pointer} Tmp_1442: int;
  var {:scalar} routine_1: int;
  var {:pointer} Tmp_1443: int;
  var {:pointer} packet_10: int;
  var {:scalar} status_42: int;
  var {:pointer} Tmp_1444: int;
  var {:pointer} Tmp_1445: int;
  var {:scalar} Tmp_1446: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Context_15: int;
  var vslice_dummy_var_423: int;

  anon0:
    call {:si_unique_call 2628} vslice_dummy_var_423 := __HAVOC_malloc(4);
    call {:si_unique_call 2629} packet_10 := __HAVOC_malloc(4);
    DeviceExtension_7 := actual_DeviceExtension_7;
    Context_15 := actual_Context_15;
    call {:si_unique_call 2630} Tmp_1432 := __HAVOC_malloc(4);
    call {:si_unique_call 2631} Tmp_1440 := __HAVOC_malloc(4);
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_15)] != 0;
    call {:si_unique_call 2632} AllocateIrpAndIrb(DeviceExtension_7, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_10] != 0;
    call {:si_unique_call 2633} Sbp2AddLog(DeviceExtension_7, 32, -968797586, DeviceExtension_7, Context_15);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1435;
    assume {:nonnull} Tmp_1435 != 0;
    assume Tmp_1435 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1444;
    assume {:nonnull} Tmp_1444 != 0;
    assume Tmp_1444 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1441;
    assume {:nonnull} Tmp_1441 != 0;
    assume Tmp_1441 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1443;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1443 != 0;
    assume Tmp_1443 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1437;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    assume {:nonnull} Tmp_1437 != 0;
    assume Tmp_1437 > 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Context_15 == CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto L27;

  L27:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1442;
    assume {:nonnull} Tmp_1442 != 0;
    assume Tmp_1442 > 0;
    call {:si_unique_call 2634} sdv_480 := sdv_KeGetCurrentIrql();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_480 >= 2;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc routine_1;
    assume routine_1 == 0;
    call {:si_unique_call 2635} Sbp2AddLog(DeviceExtension_7, 32, -968797647, DeviceExtension_7, status_42);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_42 < 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1440;
    assume {:nonnull} Tmp_1440 != 0;
    assume Tmp_1440 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_1436;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1446;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    call {:si_unique_call 2636} WPP_SF_qD(Tmp_1446, 13, Tmp_1436, Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_15)], status_42);
    goto L49;

  L49:
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_15)] := 0;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 2637} IoFreeMdl(0);
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    goto L51;

  L51:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    call {:si_unique_call 2638} DeAllocateIrpAndIrb(DeviceExtension_7, Mem_T.P_IRBIRP[packet_10]);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon49_Then:
    goto L51;

  anon43_Then:
    goto L49;

  anon51_Then:
    goto L49;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon41_Then:
    assume {:partition} 0 <= status_42;
    goto L49;

  anon40_Then:
    goto L32;

  L32:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    call {:si_unique_call 2639} status_42 := Sbp2SendRequest#0(DeviceExtension_7, Mem_T.P_IRBIRP[packet_10], 2);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2640} Sbp2AddLog(DeviceExtension_7, 32, -968797646, DeviceExtension_7, status_42);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_42 < 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1432;
    assume {:nonnull} Tmp_1432 != 0;
    assume Tmp_1432 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    havoc Tmp_1430;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1433;
    assume {:nonnull} Context_15 != 0;
    assume Context_15 > 0;
    call {:si_unique_call 2641} WPP_SF_qD(Tmp_1433, 14, Tmp_1430, Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_15)], status_42);
    goto L49;

  anon46_Then:
    goto L49;

  anon50_Then:
    goto L49;

  anon45_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon44_Then:
    assume {:partition} 0 <= status_42;
    goto L49;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon39_Then:
    assume {:partition} 2 > sdv_480;
    goto L32;

  anon38_Then:
    assume {:partition} Context_15 != CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    call {:si_unique_call 2642} sdv_479 := sdv_MmGetMdlByteCount(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1439;
    assume {:nonnull} Tmp_1439 != 0;
    assume Tmp_1439 > 0;
    havoc Tmp_1445;
    assume {:nonnull} Tmp_1445 != 0;
    assume Tmp_1445 > 0;
    goto L27;

  anon47_Then:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Context_15 == GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_10] != 0;
    assume Mem_T.P_IRBIRP[packet_10] > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1438;
    assume {:nonnull} Tmp_1438 != 0;
    assume Tmp_1438 > 0;
    havoc Tmp_1434;
    assume {:nonnull} Tmp_1434 != 0;
    assume Tmp_1434 > 0;
    goto L27;

  anon37_Then:
    assume {:partition} Context_15 != GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    goto L27;

  anon36_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_10] == 0;
    goto L1;

  anon35_Then:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_15)] == 0;
    goto L1;
}



procedure {:origName "FreeAddressRange"} FreeAddressRange#1(actual_DeviceExtension_7: int, actual_Context_15: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#0(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2540: int)
{
  var {:scalar} waitValue_5: int;
  var {:pointer} Tmp_2541: int;
  var {:pointer} Tmp_2542: int;
  var {:pointer} Tmp_2543: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} Tmp_2544: int;
  var {:pointer} Tmp_2545: int;
  var {:pointer} Tmp_2546: int;
  var {:pointer} Tmp_2548: int;
  var {:pointer} Tmp_2549: int;
  var {:pointer} packet_16: int;
  var {:pointer} FdoExtension_7: int;
  var {:scalar} Enable: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_4327: int;

  anon0:
    call {:si_unique_call 2643} waitValue_5 := __HAVOC_malloc(20);
    call {:si_unique_call 2644} packet_16 := __HAVOC_malloc(4);
    FdoExtension_7 := actual_FdoExtension_7;
    Enable := actual_Enable;
    ntStatus_1 := 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc vslice_dummy_var_4327;
    Mem_T.P_IRBIRP[packet_16] := vslice_dummy_var_4327;
    goto L12;

  L12:
    assume {:nonnull} waitValue_5 != 0;
    assume waitValue_5 > 0;
    call {:si_unique_call 2645} vslice_dummy_var_426 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_5);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L22;

  L22:
    call {:si_unique_call 2646} vslice_dummy_var_424 := KeReleaseMutex(0, 0);
    goto L25;

  L25:
    Tmp_2540 := ntStatus_1;
    goto LM2;

  LM2:
    return;

  anon32_Then:
    goto L20;

  L20:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2546;
    assume {:nonnull} Tmp_2546 != 0;
    assume Tmp_2546 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2549;
    assume {:nonnull} Tmp_2549 != 0;
    assume Tmp_2549 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Enable != 0;
    call {:si_unique_call 2647} vslice_dummy_var_425 := Sbp2GetHostDDIVersion#0(FdoExtension_7);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2542;
    assume {:nonnull} Tmp_2542 != 0;
    assume Tmp_2542 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2543;
    assume {:nonnull} Tmp_2543 != 0;
    assume Tmp_2543 > 0;
    goto L36;

  L36:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2544;
    assume {:nonnull} Tmp_2544 != 0;
    assume Tmp_2544 > 0;
    goto L37;

  L37:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    assume false;
    return;

  anon27_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2541;
    assume {:nonnull} Tmp_2541 != 0;
    assume Tmp_2541 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2545;
    assume {:nonnull} Tmp_2545 != 0;
    assume Tmp_2545 > 0;
    goto L36;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2548;
    assume {:nonnull} Tmp_2548 != 0;
    assume Tmp_2548 > 0;
    goto L37;

  anon25_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(FdoExtension_7)], 262144) != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L20;

  anon26_Then:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(FdoExtension_7)], 262144) == 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L22;

  anon36_Then:
    goto L20;

  anon31_Then:
    call {:si_unique_call 2648} AllocateIrpAndIrb(FdoExtension_7, packet_16);
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_16] != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  anon30_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_16] == 0;
    ntStatus_1 := -1073741670;
    goto L25;
}



procedure {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#0(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2540: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#1(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2540: int)
{
  var {:scalar} waitValue_5: int;
  var {:pointer} Tmp_2541: int;
  var {:pointer} Tmp_2542: int;
  var {:pointer} Tmp_2543: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} Tmp_2544: int;
  var {:pointer} Tmp_2545: int;
  var {:pointer} Tmp_2546: int;
  var {:pointer} Tmp_2548: int;
  var {:pointer} Tmp_2549: int;
  var {:pointer} packet_16: int;
  var {:pointer} FdoExtension_7: int;
  var {:scalar} Enable: int;
  var vslice_dummy_var_427: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_4328: int;

  anon0:
    call {:si_unique_call 2649} waitValue_5 := __HAVOC_malloc(20);
    call {:si_unique_call 2650} packet_16 := __HAVOC_malloc(4);
    FdoExtension_7 := actual_FdoExtension_7;
    Enable := actual_Enable;
    ntStatus_1 := 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc vslice_dummy_var_4328;
    Mem_T.P_IRBIRP[packet_16] := vslice_dummy_var_4328;
    goto L12;

  L12:
    assume {:nonnull} waitValue_5 != 0;
    assume waitValue_5 > 0;
    call {:si_unique_call 2651} vslice_dummy_var_429 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_5);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L22;

  L22:
    call {:si_unique_call 2652} vslice_dummy_var_427 := KeReleaseMutex(0, 0);
    goto L25;

  L25:
    Tmp_2540 := ntStatus_1;
    goto LM2;

  LM2:
    return;

  anon32_Then:
    goto L20;

  L20:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2546;
    assume {:nonnull} Tmp_2546 != 0;
    assume Tmp_2546 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2549;
    assume {:nonnull} Tmp_2549 != 0;
    assume Tmp_2549 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Enable != 0;
    call {:si_unique_call 2653} vslice_dummy_var_428 := Sbp2GetHostDDIVersion#1(FdoExtension_7);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2542;
    assume {:nonnull} Tmp_2542 != 0;
    assume Tmp_2542 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2543;
    assume {:nonnull} Tmp_2543 != 0;
    assume Tmp_2543 > 0;
    goto L36;

  L36:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2544;
    assume {:nonnull} Tmp_2544 != 0;
    assume Tmp_2544 > 0;
    goto L37;

  L37:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    call {:si_unique_call 2654} ntStatus_1 := Sbp2SendRequest#0(FdoExtension_7, Mem_T.P_IRBIRP[packet_16], 2);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_1 < 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L22;

  anon29_Then:
    assume {:partition} Enable == 0;
    goto L22;

  anon28_Then:
    assume {:partition} 0 <= ntStatus_1;
    goto L22;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2541;
    assume {:nonnull} Tmp_2541 != 0;
    assume Tmp_2541 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2545;
    assume {:nonnull} Tmp_2545 != 0;
    assume Tmp_2545 > 0;
    goto L36;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_16] != 0;
    assume Mem_T.P_IRBIRP[packet_16] > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2548;
    assume {:nonnull} Tmp_2548 != 0;
    assume Tmp_2548 > 0;
    goto L37;

  anon25_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(FdoExtension_7)], 262144) != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L20;

  anon26_Then:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(FdoExtension_7)], 262144) == 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L22;

  anon36_Then:
    goto L20;

  anon31_Then:
    call {:si_unique_call 2655} AllocateIrpAndIrb(FdoExtension_7, packet_16);
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_16] != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  anon30_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_16] == 0;
    ntStatus_1 := -1073741670;
    goto L25;
}



procedure {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#1(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2540: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#0(actual_FdoExtension_5: int) returns (Tmp_2383: int)
{
  var {:pointer} Tmp_2384: int;
  var {:scalar} ntStatus: int;
  var {:pointer} Tmp_2385: int;
  var {:pointer} packet_14: int;
  var {:pointer} Tmp_2387: int;
  var {:scalar} HostDDIVersion: int;
  var {:pointer} Tmp_2388: int;
  var {:pointer} FdoExtension_5: int;

  anon0:
    call {:si_unique_call 2656} packet_14 := __HAVOC_malloc(4);
    call {:si_unique_call 2657} HostDDIVersion := __HAVOC_malloc(8);
    FdoExtension_5 := actual_FdoExtension_5;
    ntStatus := 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    Mem_T.P_IRBIRP[packet_14] := 0;
    call {:si_unique_call 2658} sdv_do_paged_code_check();
    call {:si_unique_call 2659} AllocateIrpAndIrb(FdoExtension_5, packet_14);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_14] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2388;
    assume {:nonnull} Tmp_2388 != 0;
    assume Tmp_2388 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2384;
    assume {:nonnull} Tmp_2384 != 0;
    assume Tmp_2384 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2385;
    assume {:nonnull} Tmp_2385 != 0;
    assume Tmp_2385 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2387;
    assume {:nonnull} Tmp_2387 != 0;
    assume Tmp_2387 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    assume false;
    return;

  anon7_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_14] == 0;
    Tmp_2383 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;
}



procedure {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#0(actual_FdoExtension_5: int) returns (Tmp_2383: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} Tmp_2383 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#1(actual_FdoExtension_5: int) returns (Tmp_2383: int)
{
  var {:pointer} Tmp_2384: int;
  var {:scalar} ntStatus: int;
  var {:pointer} Tmp_2385: int;
  var {:pointer} packet_14: int;
  var {:pointer} Tmp_2387: int;
  var {:scalar} HostDDIVersion: int;
  var {:pointer} Tmp_2388: int;
  var {:pointer} FdoExtension_5: int;

  anon0:
    call {:si_unique_call 2660} packet_14 := __HAVOC_malloc(4);
    call {:si_unique_call 2661} HostDDIVersion := __HAVOC_malloc(8);
    FdoExtension_5 := actual_FdoExtension_5;
    ntStatus := 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    Mem_T.P_IRBIRP[packet_14] := 0;
    call {:si_unique_call 2662} sdv_do_paged_code_check();
    call {:si_unique_call 2663} AllocateIrpAndIrb(FdoExtension_5, packet_14);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_14] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2388;
    assume {:nonnull} Tmp_2388 != 0;
    assume Tmp_2388 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2384;
    assume {:nonnull} Tmp_2384 != 0;
    assume Tmp_2384 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2385;
    assume {:nonnull} Tmp_2385 != 0;
    assume Tmp_2385 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_14] != 0;
    assume Mem_T.P_IRBIRP[packet_14] > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2387;
    assume {:nonnull} Tmp_2387 != 0;
    assume Tmp_2387 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    call {:si_unique_call 2664} ntStatus := Sbp2SendRequest#0(FdoExtension_5, Mem_T.P_IRBIRP[packet_14], 2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} ntStatus >= 0;
    assume {:nonnull} FdoExtension_5 != 0;
    assume FdoExtension_5 > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} FdoExtension_5 != 0;
    assume FdoExtension_5 > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    goto L31;

  L31:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    call {:si_unique_call 2665} DeAllocateIrpAndIrb(FdoExtension_5, Mem_T.P_IRBIRP[packet_14]);
    Tmp_2383 := ntStatus;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} 0 > ntStatus;
    ntStatus := 0;
    goto L31;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_14] == 0;
    Tmp_2383 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#1(actual_FdoExtension_5: int) returns (Tmp_2383: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_26: int, actual_Key: int)
{
  var {:pointer} Tmp_1270: int;
  var {:scalar} sdv_413: int;
  var {:scalar} sdv_415: int;
  var {:pointer} sdv_416: int;
  var {:pointer} irp_3: int;
  var {:pointer} packet_7: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} DeviceObject_26: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_430: int;

  anon0:
    call {:si_unique_call 2666} vslice_dummy_var_430 := __HAVOC_malloc(4);
    DeviceObject_26 := actual_DeviceObject_26;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_26 != 0;
    assume DeviceObject_26 > 0;
    deviceExtension := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_26)];
    call {:si_unique_call 2667} Tmp_1270 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2668} sdv_413 := sdv_InterlockedIncrement(Tmp_1270);
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_413 == 1;
    goto L11;

  L11:
    call {:si_unique_call 2669} Tmp_1270, sdv_415, sdv_416, irp_3, packet_7 := Sbp2StartNextPacketByKey#0_loop_L11(Tmp_1270, sdv_415, sdv_416, irp_3, packet_7, deviceExtension, DeviceObject_26, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_26 != 0;
    assume DeviceObject_26 > 0;
    call {:si_unique_call 2674} packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_26), Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} packet_7 != 0;
    call {:si_unique_call 2670} sdv_416 := sdv_containing_record(packet_7, 64);
    irp_3 := sdv_416;
    call {:si_unique_call 2671} Sbp2StartIo#0(DeviceObject_26, irp_3);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 2672} Tmp_1270 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2673} sdv_415 := sdv_InterlockedDecrement(Tmp_1270);
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_415 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} sdv_415 == 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} packet_7 == 0;
    goto L17;

  anon9_Then:
    assume {:partition} sdv_413 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_26: int, actual_Key: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_26: int, actual_Key: int)
{
  var {:pointer} Tmp_1270: int;
  var {:scalar} sdv_413: int;
  var {:scalar} sdv_415: int;
  var {:pointer} sdv_416: int;
  var {:pointer} irp_3: int;
  var {:pointer} packet_7: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} DeviceObject_26: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_431: int;

  anon0:
    call {:si_unique_call 2675} vslice_dummy_var_431 := __HAVOC_malloc(4);
    DeviceObject_26 := actual_DeviceObject_26;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_26 != 0;
    assume DeviceObject_26 > 0;
    deviceExtension := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_26)];
    call {:si_unique_call 2676} Tmp_1270 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2677} sdv_413 := sdv_InterlockedIncrement(Tmp_1270);
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_413 == 1;
    goto L11;

  L11:
    call {:si_unique_call 2678} Tmp_1270, sdv_415, sdv_416, irp_3, packet_7 := Sbp2StartNextPacketByKey#1_loop_L11(Tmp_1270, sdv_415, sdv_416, irp_3, packet_7, deviceExtension, DeviceObject_26, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_26 != 0;
    assume DeviceObject_26 > 0;
    call {:si_unique_call 2683} packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_26), Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} packet_7 != 0;
    call {:si_unique_call 2679} sdv_416 := sdv_containing_record(packet_7, 64);
    irp_3 := sdv_416;
    call {:si_unique_call 2680} Sbp2StartIo#1(DeviceObject_26, irp_3);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 2681} Tmp_1270 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2682} sdv_415 := sdv_InterlockedDecrement(Tmp_1270);
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_415 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} sdv_415 == 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} packet_7 == 0;
    goto L17;

  anon9_Then:
    assume {:partition} sdv_413 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_26: int, actual_Key: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.PVOID, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_34: int, actual_Irp_20: int)
{
  var {:scalar} Tmp_1634: int;
  var {:pointer} Tmp_1635: int;
  var {:pointer} Tmp_1637: int;
  var {:pointer} Tmp_1638: int;
  var {:scalar} Tmp_1639: int;
  var {:scalar} sdv_522: int;
  var {:scalar} Tmp_1640: int;
  var {:pointer} Tmp_1641: int;
  var {:pointer} Tmp_1642: int;
  var {:scalar} Tmp_1643: int;
  var {:pointer} Tmp_1644: int;
  var {:pointer} Tmp_1645: int;
  var {:pointer} Tmp_1646: int;
  var {:pointer} Tmp_1647: int;
  var {:scalar} Tmp_1648: int;
  var {:scalar} sdv_524: int;
  var {:pointer} Tmp_1649: int;
  var {:pointer} sdv_525: int;
  var {:pointer} qIrp: int;
  var {:pointer} sdv_528: int;
  var {:pointer} Tmp_1650: int;
  var {:scalar} sdv_529: int;
  var {:scalar} queued: int;
  var {:scalar} Tmp_1651: int;
  var {:pointer} sdv_530: int;
  var {:pointer} srb_4: int;
  var {:scalar} Tmp_1652: int;
  var {:pointer} Tmp_1653: int;
  var {:pointer} deviceExtension_5: int;
  var {:scalar} Tmp_1654: int;
  var {:pointer} irpStack_13: int;
  var {:pointer} deferredIrp_2: int;
  var {:scalar} Tmp_1655: int;
  var {:scalar} Tmp_1656: int;
  var {:pointer} Tmp_1657: int;
  var {:pointer} sdv_531: int;
  var {:scalar} Tmp_1658: int;
  var {:pointer} Tmp_1659: int;
  var {:pointer} Tmp_1661: int;
  var {:pointer} Tmp_1662: int;
  var {:pointer} context: int;
  var {:scalar} Tmp_1663: int;
  var {:pointer} Tmp_1664: int;
  var {:pointer} Tmp_1665: int;
  var {:scalar} sdv_533: int;
  var {:scalar} sdv_534: int;
  var {:scalar} Tmp_1666: int;
  var {:scalar} Tmp_1667: int;
  var {:pointer} Tmp_1668: int;
  var {:scalar} Tmp_1669: int;
  var {:pointer} Tmp_1670: int;
  var {:pointer} Tmp_1671: int;
  var {:pointer} sdv_535: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} Tmp_1672: int;
  var {:pointer} Tmp_1673: int;
  var {:pointer} Tmp_1674: int;
  var {:pointer} Tmp_1675: int;
  var {:scalar} Tmp_1676: int;
  var {:pointer} Tmp_1677: int;
  var {:pointer} Tmp_1678: int;
  var {:pointer} Tmp_1679: int;
  var {:scalar} Tmp_1680: int;
  var {:scalar} status_48: int;
  var {:pointer} entry_3: int;
  var {:pointer} Tmp_1681: int;
  var {:pointer} Tmp_1682: int;
  var {:scalar} sdv_536: int;
  var {:pointer} queue_2: int;
  var {:scalar} state_1: int;
  var {:pointer} Tmp_1683: int;
  var {:pointer} DeviceObject_34: int;
  var {:pointer} Irp_20: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_4329: int;
  var vslice_dummy_var_4330: int;
  var vslice_dummy_var_4331: int;
  var vslice_dummy_var_4332: int;
  var vslice_dummy_var_4333: int;
  var vslice_dummy_var_4334: int;
  var vslice_dummy_var_4335: int;
  var vslice_dummy_var_4336: int;
  var vslice_dummy_var_4337: int;
  var vslice_dummy_var_4338: int;
  var vslice_dummy_var_4339: int;

  anon0:
    call {:si_unique_call 2684} vslice_dummy_var_432 := __HAVOC_malloc(4);
    call {:si_unique_call 2685} context := __HAVOC_malloc(4);
    call {:si_unique_call 2686} state_1 := __HAVOC_malloc(8);
    DeviceObject_34 := actual_DeviceObject_34;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 2687} Tmp_1637 := __HAVOC_malloc(4);
    call {:si_unique_call 2688} Tmp_1638 := __HAVOC_malloc(4);
    call {:si_unique_call 2689} Tmp_1642 := __HAVOC_malloc(4);
    call {:si_unique_call 2690} Tmp_1647 := __HAVOC_malloc(4);
    call {:si_unique_call 2691} Tmp_1649 := __HAVOC_malloc(4);
    call {:si_unique_call 2692} Tmp_1650 := __HAVOC_malloc(4);
    call {:si_unique_call 2693} Tmp_1659 := __HAVOC_malloc(4);
    call {:si_unique_call 2694} Tmp_1661 := __HAVOC_malloc(4);
    call {:si_unique_call 2695} Tmp_1664 := __HAVOC_malloc(4);
    call {:si_unique_call 2696} Tmp_1672 := __HAVOC_malloc(4);
    call {:si_unique_call 2697} Tmp_1677 := __HAVOC_malloc(4);
    call {:si_unique_call 2698} Tmp_1678 := __HAVOC_malloc(4);
    call {:si_unique_call 2699} Tmp_1679 := __HAVOC_malloc(4);
    call {:si_unique_call 2700} Tmp_1681 := __HAVOC_malloc(4);
    call {:si_unique_call 2701} Tmp_1682 := __HAVOC_malloc(4);
    call {:si_unique_call 2702} irpStack_13 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    deviceExtension_5 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_34)];
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    havoc srb_4;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2703} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2704} Sbp2AddLog(deviceExtension_5, 64, -747353745, Irp_20, srb_4);
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    goto L24;

  L24:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    call {:si_unique_call 2705} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_48 := -1073741632;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 2706} sdv_IoCompleteRequest(0, 0);
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1642;
    assume {:nonnull} Tmp_1642 != 0;
    assume Tmp_1642 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    havoc Tmp_1674;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1666;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc vslice_dummy_var_4329;
    call {:si_unique_call 2707} WPP_SF_qqD(Tmp_1666, 23, Tmp_1674, deviceExtension_5, Irp_20, vslice_dummy_var_4329);
    goto L39;

  L39:
    assume false;
    return;

  anon176_Then:
    goto L39;

  anon227_Then:
    goto L39;

  anon175_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L39;

  anon173_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 2708} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1637;
    assume {:nonnull} Tmp_1637 != 0;
    assume Tmp_1637 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc Tmp_1657;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1648;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4330;
    havoc vslice_dummy_var_4331;
    call {:si_unique_call 2709} WPP_SF_qqqDD(Tmp_1648, 25, Tmp_1657, DeviceObject_34, Irp_20, srb_4, vslice_dummy_var_4330, vslice_dummy_var_4331);
    goto L67;

  L67:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto L76;

  L76:
    call {:si_unique_call 2710} Create1394TransactionForSrb#0(deviceExtension_5, srb_4, context);
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon231_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon179_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc Tmp_1675;
    assume {:nonnull} Tmp_1675 != 0;
    assume Tmp_1675 > 0;
    goto L76;

  anon181_Then:
    goto L76;

  anon180_Then:
    goto L67;

  anon230_Then:
    goto L67;

  anon178_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon177_Then:
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4332;
    call {:si_unique_call 2711} sdv_533 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4332);
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} sdv_533 == 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1682;
    assume {:nonnull} Tmp_1682 != 0;
    assume Tmp_1682 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    havoc Tmp_1673;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1640;
    call {:si_unique_call 2712} WPP_SF_qq(Tmp_1640, 24, Tmp_1673, deviceExtension_5, Irp_20);
    goto L87;

  L87:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2713} vslice_dummy_var_436 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2714} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon233_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon184_Then:
    goto L87;

  anon232_Then:
    goto L87;

  anon183_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L87;

  anon182_Then:
    assume {:partition} sdv_533 != 0;
    goto L1;

  anon174_Then:
    call {:si_unique_call 2715} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4333;
    call {:si_unique_call 2716} queued := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4333);
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} queued == 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1664;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_1644;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1680;
    call {:si_unique_call 2717} WPP_SF_qq(Tmp_1680, 26, Tmp_1644, deviceExtension_5, Irp_20);
    goto L215;

  L215:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2718} sdv_525 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto L116;

  L116:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1638;
    assume {:nonnull} Tmp_1638 != 0;
    assume Tmp_1638 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    Tmp_1676 := queued;
    havoc Tmp_1665;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1654;
    call {:si_unique_call 2719} WPP_SF_qDq(Tmp_1654, 27, Tmp_1665, deviceExtension_5, Tmp_1676, Irp_20);
    goto L117;

  L117:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1649;
    assume {:nonnull} Tmp_1649 != 0;
    assume Tmp_1649 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    havoc Tmp_1651;
    havoc Tmp_1683;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1656;
    call {:si_unique_call 2720} WPP_SF_qd(Tmp_1656, 28, Tmp_1683, deviceExtension_5, Tmp_1651);
    goto L130;

  L130:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc vslice_dummy_var_4334;
    call {:si_unique_call 2721} status_48 := PoRequestPowerIrp#0(vslice_dummy_var_4334, 2, state_1, 0, 0, 0);
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} yogi_error != 1;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} status_48 < 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1679;
    assume {:nonnull} Tmp_1679 != 0;
    assume Tmp_1679 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    havoc Tmp_1646;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1667;
    call {:si_unique_call 2722} WPP_SF_qD(Tmp_1667, 29, Tmp_1646, deviceExtension_5, status_48);
    goto L148;

  L148:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2723} sdv_530 := _InlineInterlockedCompareExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), 0, Irp_20);
    deferredIrp_2 := sdv_530;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} deferredIrp_2 != Irp_20;
    Irp_20 := 0;
    goto L181;

  L181:
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Irp_20 == 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1647;
    assume {:nonnull} Tmp_1647 != 0;
    assume Tmp_1647 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    havoc Tmp_1671;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1639;
    call {:si_unique_call 2724} WPP_SF_q(Tmp_1639, 30, Tmp_1671, deviceExtension_5);
    goto L1;

  anon200_Then:
    goto L1;

  anon242_Then:
    goto L1;

  anon199_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon198_Then:
    assume {:partition} Irp_20 != 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 2725} sdv_IoCompleteRequest(0, 0);
    assume false;
    return;

  anon243_Then:
    assume {:partition} deferredIrp_2 == Irp_20;
    goto L181;

  anon194_Then:
    assume {:partition} queued != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_34);
    call {:si_unique_call 2726} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry_3;
    goto L166;

  L166:
    call {:si_unique_call 2727} qIrp, sdv_535, entry_3 := Sbp2StartIo#0_loop_L166(qIrp, sdv_535, entry_3, Irp_20);
    goto L166_last;

  L166_last:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    call {:si_unique_call 2728} sdv_535 := sdv_containing_record(entry_3, 64);
    qIrp := sdv_535;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} qIrp == Irp_20;
    call {:si_unique_call 2729} vslice_dummy_var_434 := sdv_RemoveEntryList(0);
    goto L167;

  L167:
    call {:si_unique_call 2730} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} qIrp != Irp_20;
    Irp_20 := 0;
    goto L181;

  anon197_Then:
    assume {:partition} qIrp == Irp_20;
    goto L181;

  anon239_Then:
    assume {:partition} qIrp != Irp_20;
    assume {:nonnull} entry_3 != 0;
    assume entry_3 > 0;
    havoc entry_3;
    goto anon239_Then_dummy;

  anon239_Then_dummy:
    assume false;
    return;

  anon196_Then:
    goto L167;

  anon195_Then:
    goto L148;

  anon238_Then:
    goto L148;

  anon193_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon192_Then:
    assume {:partition} 0 <= status_48;
    goto L1;

  anon237_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon191_Then:
    goto L130;

  anon236_Then:
    goto L130;

  anon235_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L130;

  anon190_Then:
    goto L117;

  anon234_Then:
    goto L117;

  anon189_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L117;

  anon202_Then:
    goto L215;

  anon244_Then:
    goto L215;

  anon201_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L215;

  anon188_Then:
    assume {:partition} queued != 0;
    goto L116;

  anon187_Then:
    goto L103;

  L103:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    call {:si_unique_call 2731} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4335;
    call {:si_unique_call 2732} sdv_524 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4335);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} sdv_524 != 0;
    goto L238;

  L238:
    call {:si_unique_call 2733} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1678;
    assume {:nonnull} Tmp_1678 != 0;
    assume Tmp_1678 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    havoc Tmp_1635;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1669;
    call {:si_unique_call 2734} WPP_SF_qq(Tmp_1669, 31, Tmp_1635, deviceExtension_5, Irp_20);
    goto L1;

  anon206_Then:
    goto L1;

  anon245_Then:
    goto L1;

  anon205_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon204_Then:
    assume {:partition} sdv_524 == 0;
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4336;
    call {:si_unique_call 2735} sdv_536 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4336);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} sdv_536 == 0;
    call {:si_unique_call 2736} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1661;
    assume {:nonnull} Tmp_1661 != 0;
    assume Tmp_1661 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_1653;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1655;
    call {:si_unique_call 2737} WPP_SF_qq(Tmp_1655, 32, Tmp_1653, deviceExtension_5, Irp_20);
    goto L261;

  L261:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2738} vslice_dummy_var_437 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2739} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon247_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon209_Then:
    goto L261;

  anon246_Then:
    goto L261;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L261;

  anon207_Then:
    assume {:partition} sdv_536 != 0;
    goto L238;

  anon186_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto L279;

  L279:
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4337;
    call {:si_unique_call 2740} sdv_534 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4337);
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} sdv_534 == 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2741} sdv_531 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1650;
    assume {:nonnull} Tmp_1650 != 0;
    assume Tmp_1650 > 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    havoc Tmp_1645;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1652;
    call {:si_unique_call 2742} WPP_SF_q(Tmp_1652, 33, Tmp_1645, Irp_20);
    goto L1;

  anon215_Then:
    goto L1;

  anon250_Then:
    goto L1;

  anon249_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon212_Then:
    assume {:partition} sdv_534 != 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1681;
    assume {:nonnull} Tmp_1681 != 0;
    assume Tmp_1681 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    havoc Tmp_1668;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1663;
    call {:si_unique_call 2743} WPP_SF_q(Tmp_1663, 34, Tmp_1668, Irp_20);
    goto L1;

  anon214_Then:
    goto L1;

  anon248_Then:
    goto L1;

  anon213_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon211_Then:
    goto L277;

  L277:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L279;

  anon210_Then:
    goto L67;

  anon203_Then:
    goto L277;

  anon185_Then:
    goto L103;

  anon171_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2744} sdv_528 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    oldIrp_1 := sdv_528;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1659;
    assume {:nonnull} Tmp_1659 != 0;
    assume Tmp_1659 > 0;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    havoc Tmp_1662;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1634;
    call {:si_unique_call 2745} WPP_SF_qqq(Tmp_1634, 20, Tmp_1662, deviceExtension_5, Irp_20, oldIrp_1);
    goto L327;

  L327:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    goto L338;

  L338:
    call {:si_unique_call 2746} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon219_Then:
    call {:si_unique_call 2747} Sbp2SetDeferLoginTimer(deviceExtension_5);
    goto L338;

  anon220_Then:
    goto L327;

  anon252_Then:
    goto L327;

  anon251_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L327;

  anon218_Then:
    goto L314;

  L314:
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4338;
    call {:si_unique_call 2748} sdv_522 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4338);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} sdv_522 != 0;
    goto L346;

  L346:
    call {:si_unique_call 2749} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1677;
    assume {:nonnull} Tmp_1677 != 0;
    assume Tmp_1677 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    havoc Tmp_1670;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1658;
    call {:si_unique_call 2750} WPP_SF_qq(Tmp_1658, 21, Tmp_1670, deviceExtension_5, Irp_20);
    goto L1;

  anon223_Then:
    goto L1;

  anon253_Then:
    goto L1;

  anon222_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon221_Then:
    assume {:partition} sdv_522 == 0;
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4339;
    call {:si_unique_call 2751} sdv_529 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4339);
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} sdv_529 == 0;
    call {:si_unique_call 2752} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1672;
    assume {:nonnull} Tmp_1672 != 0;
    assume Tmp_1672 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    havoc Tmp_1641;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1643;
    call {:si_unique_call 2753} WPP_SF_qq(Tmp_1643, 22, Tmp_1641, deviceExtension_5, Irp_20);
    goto L369;

  L369:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2754} vslice_dummy_var_438 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2755} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon255_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon226_Then:
    goto L369;

  anon254_Then:
    goto L369;

  anon225_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L369;

  anon224_Then:
    assume {:partition} sdv_529 != 0;
    goto L346;

  anon217_Then:
    goto L314;

  anon216_Then:
    goto L24;

  anon172_Then:
    goto L24;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_34: int, actual_Irp_20: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_34: int, actual_Irp_20: int)
{
  var {:scalar} Tmp_1634: int;
  var {:pointer} Tmp_1635: int;
  var {:pointer} Tmp_1637: int;
  var {:pointer} Tmp_1638: int;
  var {:scalar} Tmp_1639: int;
  var {:scalar} sdv_522: int;
  var {:scalar} Tmp_1640: int;
  var {:pointer} Tmp_1641: int;
  var {:pointer} Tmp_1642: int;
  var {:scalar} Tmp_1643: int;
  var {:pointer} Tmp_1644: int;
  var {:pointer} Tmp_1645: int;
  var {:pointer} Tmp_1646: int;
  var {:pointer} Tmp_1647: int;
  var {:scalar} Tmp_1648: int;
  var {:scalar} sdv_524: int;
  var {:pointer} Tmp_1649: int;
  var {:pointer} sdv_525: int;
  var {:pointer} qIrp: int;
  var {:pointer} sdv_528: int;
  var {:pointer} Tmp_1650: int;
  var {:scalar} sdv_529: int;
  var {:scalar} queued: int;
  var {:scalar} Tmp_1651: int;
  var {:pointer} sdv_530: int;
  var {:pointer} srb_4: int;
  var {:scalar} Tmp_1652: int;
  var {:pointer} Tmp_1653: int;
  var {:pointer} deviceExtension_5: int;
  var {:scalar} Tmp_1654: int;
  var {:pointer} irpStack_13: int;
  var {:pointer} deferredIrp_2: int;
  var {:scalar} Tmp_1655: int;
  var {:scalar} Tmp_1656: int;
  var {:pointer} Tmp_1657: int;
  var {:pointer} sdv_531: int;
  var {:scalar} Tmp_1658: int;
  var {:pointer} Tmp_1659: int;
  var {:pointer} Tmp_1661: int;
  var {:pointer} Tmp_1662: int;
  var {:pointer} context: int;
  var {:scalar} Tmp_1663: int;
  var {:pointer} Tmp_1664: int;
  var {:pointer} Tmp_1665: int;
  var {:scalar} sdv_533: int;
  var {:scalar} sdv_534: int;
  var {:scalar} Tmp_1666: int;
  var {:scalar} Tmp_1667: int;
  var {:pointer} Tmp_1668: int;
  var {:scalar} Tmp_1669: int;
  var {:pointer} Tmp_1670: int;
  var {:pointer} Tmp_1671: int;
  var {:pointer} sdv_535: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} Tmp_1672: int;
  var {:pointer} Tmp_1673: int;
  var {:pointer} Tmp_1674: int;
  var {:pointer} Tmp_1675: int;
  var {:scalar} Tmp_1676: int;
  var {:pointer} Tmp_1677: int;
  var {:pointer} Tmp_1678: int;
  var {:pointer} Tmp_1679: int;
  var {:scalar} Tmp_1680: int;
  var {:scalar} status_48: int;
  var {:pointer} entry_3: int;
  var {:pointer} Tmp_1681: int;
  var {:pointer} Tmp_1682: int;
  var {:scalar} sdv_536: int;
  var {:pointer} queue_2: int;
  var {:scalar} state_1: int;
  var {:pointer} Tmp_1683: int;
  var {:pointer} DeviceObject_34: int;
  var {:pointer} Irp_20: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_440: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_4340: int;
  var vslice_dummy_var_4341: int;
  var vslice_dummy_var_4342: int;
  var vslice_dummy_var_4343: int;
  var vslice_dummy_var_4344: int;
  var vslice_dummy_var_4345: int;
  var vslice_dummy_var_4346: int;
  var vslice_dummy_var_4347: int;
  var vslice_dummy_var_4348: int;
  var vslice_dummy_var_4349: int;
  var vslice_dummy_var_4350: int;

  anon0:
    call {:si_unique_call 2756} vslice_dummy_var_439 := __HAVOC_malloc(4);
    call {:si_unique_call 2757} context := __HAVOC_malloc(4);
    call {:si_unique_call 2758} state_1 := __HAVOC_malloc(8);
    DeviceObject_34 := actual_DeviceObject_34;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 2759} Tmp_1637 := __HAVOC_malloc(4);
    call {:si_unique_call 2760} Tmp_1638 := __HAVOC_malloc(4);
    call {:si_unique_call 2761} Tmp_1642 := __HAVOC_malloc(4);
    call {:si_unique_call 2762} Tmp_1647 := __HAVOC_malloc(4);
    call {:si_unique_call 2763} Tmp_1649 := __HAVOC_malloc(4);
    call {:si_unique_call 2764} Tmp_1650 := __HAVOC_malloc(4);
    call {:si_unique_call 2765} Tmp_1659 := __HAVOC_malloc(4);
    call {:si_unique_call 2766} Tmp_1661 := __HAVOC_malloc(4);
    call {:si_unique_call 2767} Tmp_1664 := __HAVOC_malloc(4);
    call {:si_unique_call 2768} Tmp_1672 := __HAVOC_malloc(4);
    call {:si_unique_call 2769} Tmp_1677 := __HAVOC_malloc(4);
    call {:si_unique_call 2770} Tmp_1678 := __HAVOC_malloc(4);
    call {:si_unique_call 2771} Tmp_1679 := __HAVOC_malloc(4);
    call {:si_unique_call 2772} Tmp_1681 := __HAVOC_malloc(4);
    call {:si_unique_call 2773} Tmp_1682 := __HAVOC_malloc(4);
    call {:si_unique_call 2774} irpStack_13 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    deviceExtension_5 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_34)];
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    havoc srb_4;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2775} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2776} Sbp2AddLog(deviceExtension_5, 64, -747353745, Irp_20, srb_4);
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    goto L24;

  L24:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    call {:si_unique_call 2777} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_48 := -1073741632;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 2778} sdv_IoCompleteRequest(0, 0);
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1642;
    assume {:nonnull} Tmp_1642 != 0;
    assume Tmp_1642 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    havoc Tmp_1674;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1666;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc vslice_dummy_var_4340;
    call {:si_unique_call 2779} WPP_SF_qqD(Tmp_1666, 23, Tmp_1674, deviceExtension_5, Irp_20, vslice_dummy_var_4340);
    goto L39;

  L39:
    call {:si_unique_call 2780} Sbp2StartNextPacketByKey#0(DeviceObject_34, 0);
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2781} vslice_dummy_var_440 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon229_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon228_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon176_Then:
    goto L39;

  anon227_Then:
    goto L39;

  anon175_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L39;

  anon173_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 2782} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1637;
    assume {:nonnull} Tmp_1637 != 0;
    assume Tmp_1637 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc Tmp_1657;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1648;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4341;
    havoc vslice_dummy_var_4342;
    call {:si_unique_call 2783} WPP_SF_qqqDD(Tmp_1648, 25, Tmp_1657, DeviceObject_34, Irp_20, srb_4, vslice_dummy_var_4341, vslice_dummy_var_4342);
    goto L67;

  L67:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto L76;

  L76:
    call {:si_unique_call 2784} Create1394TransactionForSrb#1(deviceExtension_5, srb_4, context);
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon231_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon179_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc Tmp_1675;
    assume {:nonnull} Tmp_1675 != 0;
    assume Tmp_1675 > 0;
    goto L76;

  anon181_Then:
    goto L76;

  anon180_Then:
    goto L67;

  anon230_Then:
    goto L67;

  anon178_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon177_Then:
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4343;
    call {:si_unique_call 2785} sdv_533 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4343);
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} sdv_533 == 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1682;
    assume {:nonnull} Tmp_1682 != 0;
    assume Tmp_1682 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    havoc Tmp_1673;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1640;
    call {:si_unique_call 2786} WPP_SF_qq(Tmp_1640, 24, Tmp_1673, deviceExtension_5, Irp_20);
    goto L87;

  L87:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2787} vslice_dummy_var_443 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2788} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon233_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon184_Then:
    goto L87;

  anon232_Then:
    goto L87;

  anon183_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L87;

  anon182_Then:
    assume {:partition} sdv_533 != 0;
    goto L1;

  anon174_Then:
    call {:si_unique_call 2789} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4344;
    call {:si_unique_call 2790} queued := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4344);
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} queued == 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1664;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_1644;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1680;
    call {:si_unique_call 2791} WPP_SF_qq(Tmp_1680, 26, Tmp_1644, deviceExtension_5, Irp_20);
    goto L215;

  L215:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2792} sdv_525 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto L116;

  L116:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1638;
    assume {:nonnull} Tmp_1638 != 0;
    assume Tmp_1638 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    Tmp_1676 := queued;
    havoc Tmp_1665;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1654;
    call {:si_unique_call 2793} WPP_SF_qDq(Tmp_1654, 27, Tmp_1665, deviceExtension_5, Tmp_1676, Irp_20);
    goto L117;

  L117:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1649;
    assume {:nonnull} Tmp_1649 != 0;
    assume Tmp_1649 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    havoc Tmp_1651;
    havoc Tmp_1683;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1656;
    call {:si_unique_call 2794} WPP_SF_qd(Tmp_1656, 28, Tmp_1683, deviceExtension_5, Tmp_1651);
    goto L130;

  L130:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    havoc vslice_dummy_var_4345;
    call {:si_unique_call 2795} status_48 := PoRequestPowerIrp#1(vslice_dummy_var_4345, 2, state_1, 0, 0, 0);
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} yogi_error != 1;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} status_48 < 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1679;
    assume {:nonnull} Tmp_1679 != 0;
    assume Tmp_1679 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    havoc Tmp_1646;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1667;
    call {:si_unique_call 2796} WPP_SF_qD(Tmp_1667, 29, Tmp_1646, deviceExtension_5, status_48);
    goto L148;

  L148:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2797} sdv_530 := _InlineInterlockedCompareExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), 0, Irp_20);
    deferredIrp_2 := sdv_530;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} deferredIrp_2 != Irp_20;
    Irp_20 := 0;
    goto L181;

  L181:
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Irp_20 == 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1647;
    assume {:nonnull} Tmp_1647 != 0;
    assume Tmp_1647 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    havoc Tmp_1671;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1639;
    call {:si_unique_call 2798} WPP_SF_q(Tmp_1639, 30, Tmp_1671, deviceExtension_5);
    goto L1;

  anon200_Then:
    goto L1;

  anon242_Then:
    goto L1;

  anon199_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon198_Then:
    assume {:partition} Irp_20 != 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 2799} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2800} Sbp2StartNextPacketByKey#0(DeviceObject_34, 0);
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2801} vslice_dummy_var_442 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon240_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon243_Then:
    assume {:partition} deferredIrp_2 == Irp_20;
    goto L181;

  anon194_Then:
    assume {:partition} queued != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_34);
    call {:si_unique_call 2802} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry_3;
    goto L166;

  L166:
    call {:si_unique_call 2803} qIrp, sdv_535, entry_3 := Sbp2StartIo#1_loop_L166(qIrp, sdv_535, entry_3, Irp_20);
    goto L166_last;

  L166_last:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    call {:si_unique_call 2804} sdv_535 := sdv_containing_record(entry_3, 64);
    qIrp := sdv_535;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} qIrp == Irp_20;
    call {:si_unique_call 2805} vslice_dummy_var_441 := sdv_RemoveEntryList(0);
    goto L167;

  L167:
    call {:si_unique_call 2806} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} qIrp != Irp_20;
    Irp_20 := 0;
    goto L181;

  anon197_Then:
    assume {:partition} qIrp == Irp_20;
    goto L181;

  anon239_Then:
    assume {:partition} qIrp != Irp_20;
    assume {:nonnull} entry_3 != 0;
    assume entry_3 > 0;
    havoc entry_3;
    goto anon239_Then_dummy;

  anon239_Then_dummy:
    assume false;
    return;

  anon196_Then:
    goto L167;

  anon195_Then:
    goto L148;

  anon238_Then:
    goto L148;

  anon193_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon192_Then:
    assume {:partition} 0 <= status_48;
    goto L1;

  anon237_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon191_Then:
    goto L130;

  anon236_Then:
    goto L130;

  anon235_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L130;

  anon190_Then:
    goto L117;

  anon234_Then:
    goto L117;

  anon189_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L117;

  anon202_Then:
    goto L215;

  anon244_Then:
    goto L215;

  anon201_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L215;

  anon188_Then:
    assume {:partition} queued != 0;
    goto L116;

  anon187_Then:
    goto L103;

  L103:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    call {:si_unique_call 2807} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4346;
    call {:si_unique_call 2808} sdv_524 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4346);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} sdv_524 != 0;
    goto L238;

  L238:
    call {:si_unique_call 2809} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1678;
    assume {:nonnull} Tmp_1678 != 0;
    assume Tmp_1678 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    havoc Tmp_1635;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1669;
    call {:si_unique_call 2810} WPP_SF_qq(Tmp_1669, 31, Tmp_1635, deviceExtension_5, Irp_20);
    goto L1;

  anon206_Then:
    goto L1;

  anon245_Then:
    goto L1;

  anon205_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon204_Then:
    assume {:partition} sdv_524 == 0;
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4347;
    call {:si_unique_call 2811} sdv_536 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4347);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} sdv_536 == 0;
    call {:si_unique_call 2812} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1661;
    assume {:nonnull} Tmp_1661 != 0;
    assume Tmp_1661 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_1653;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1655;
    call {:si_unique_call 2813} WPP_SF_qq(Tmp_1655, 32, Tmp_1653, deviceExtension_5, Irp_20);
    goto L261;

  L261:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2814} vslice_dummy_var_444 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2815} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon247_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon209_Then:
    goto L261;

  anon246_Then:
    goto L261;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L261;

  anon207_Then:
    assume {:partition} sdv_536 != 0;
    goto L238;

  anon186_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto L279;

  L279:
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4348;
    call {:si_unique_call 2816} sdv_534 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4348);
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} sdv_534 == 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2817} sdv_531 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1650;
    assume {:nonnull} Tmp_1650 != 0;
    assume Tmp_1650 > 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    havoc Tmp_1645;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1652;
    call {:si_unique_call 2818} WPP_SF_q(Tmp_1652, 33, Tmp_1645, Irp_20);
    goto L1;

  anon215_Then:
    goto L1;

  anon250_Then:
    goto L1;

  anon249_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon212_Then:
    assume {:partition} sdv_534 != 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1681;
    assume {:nonnull} Tmp_1681 != 0;
    assume Tmp_1681 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    havoc Tmp_1668;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1663;
    call {:si_unique_call 2819} WPP_SF_q(Tmp_1663, 34, Tmp_1668, Irp_20);
    goto L1;

  anon214_Then:
    goto L1;

  anon248_Then:
    goto L1;

  anon213_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon211_Then:
    goto L277;

  L277:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L279;

  anon210_Then:
    goto L67;

  anon203_Then:
    goto L277;

  anon185_Then:
    goto L103;

  anon171_Then:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2820} sdv_528 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    oldIrp_1 := sdv_528;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1659;
    assume {:nonnull} Tmp_1659 != 0;
    assume Tmp_1659 > 0;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    havoc Tmp_1662;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1634;
    call {:si_unique_call 2821} WPP_SF_qqq(Tmp_1634, 20, Tmp_1662, deviceExtension_5, Irp_20, oldIrp_1);
    goto L327;

  L327:
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    goto L338;

  L338:
    call {:si_unique_call 2822} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon219_Then:
    call {:si_unique_call 2823} Sbp2SetDeferLoginTimer(deviceExtension_5);
    goto L338;

  anon220_Then:
    goto L327;

  anon252_Then:
    goto L327;

  anon251_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L327;

  anon218_Then:
    goto L314;

  L314:
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4349;
    call {:si_unique_call 2824} sdv_522 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4349);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} sdv_522 != 0;
    goto L346;

  L346:
    call {:si_unique_call 2825} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1677;
    assume {:nonnull} Tmp_1677 != 0;
    assume Tmp_1677 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    havoc Tmp_1670;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1658;
    call {:si_unique_call 2826} WPP_SF_qq(Tmp_1658, 21, Tmp_1670, deviceExtension_5, Irp_20);
    goto L1;

  anon223_Then:
    goto L1;

  anon253_Then:
    goto L1;

  anon222_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon221_Then:
    assume {:partition} sdv_522 == 0;
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_4350;
    call {:si_unique_call 2827} sdv_529 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_34), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_20))), vslice_dummy_var_4350);
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} sdv_529 == 0;
    call {:si_unique_call 2828} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1672;
    assume {:nonnull} Tmp_1672 != 0;
    assume Tmp_1672 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    havoc Tmp_1641;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1643;
    call {:si_unique_call 2829} WPP_SF_qq(Tmp_1643, 22, Tmp_1641, deviceExtension_5, Irp_20);
    goto L369;

  L369:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 2830} vslice_dummy_var_445 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), Irp_20);
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2831} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon255_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon226_Then:
    goto L369;

  anon254_Then:
    goto L369;

  anon225_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L369;

  anon224_Then:
    assume {:partition} sdv_529 != 0;
    goto L346;

  anon217_Then:
    goto L314;

  anon216_Then:
    goto L24;

  anon172_Then:
    goto L24;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_34: int, actual_Irp_20: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.PVOID, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int)
{
  var {:pointer} Tmp_1615: int;
  var {:pointer} Tmp_1616: int;
  var {:pointer} Tmp_1617: int;
  var {:pointer} Tmp_1618: int;
  var {:pointer} Tmp_1619: int;
  var {:pointer} sdv_513: int;
  var {:scalar} orbLock_7: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_1620: int;
  var {:scalar} Tmp_1621: int;
  var {:pointer} callbackContext: int;
  var {:scalar} Tmp_1622: int;
  var {:pointer} Tmp_1623: int;
  var {:pointer} sdv_517: int;
  var {:pointer} Tmp_1624: int;
  var {:scalar} sdv_518: int;
  var {:pointer} Tmp_1625: int;
  var {:scalar} Tmp_1626: int;
  var {:pointer} Tmp_1627: int;
  var {:pointer} irp_6: int;
  var {:scalar} Tmp_1628: int;
  var {:scalar} Tmp_1629: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_1630: int;
  var {:scalar} status_47: int;
  var {:pointer} Tmp_1631: int;
  var {:pointer} Tmp_1632: int;
  var {:pointer} Tmp_1633: int;
  var {:pointer} PdoExtension_20: int;
  var {:pointer} Srb_1: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_4351: int;
  var vslice_dummy_var_4352: int;
  var vslice_dummy_var_4353: int;

  anon0:
    call {:si_unique_call 2832} vslice_dummy_var_446 := __HAVOC_malloc(4);
    call {:si_unique_call 2833} orbLock_7 := __HAVOC_malloc(12);
    PdoExtension_20 := actual_PdoExtension_20;
    Srb_1 := actual_Srb_1;
    RequestContext := actual_RequestContext;
    call {:si_unique_call 2834} Tmp_1619 := __HAVOC_malloc(4);
    call {:si_unique_call 2835} Tmp_1623 := __HAVOC_malloc(4);
    call {:si_unique_call 2836} Tmp_1624 := __HAVOC_malloc(4);
    call {:si_unique_call 2837} Tmp_1625 := __HAVOC_malloc(4);
    call {:si_unique_call 2838} Tmp_1630 := __HAVOC_malloc(4);
    status_47 := 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    call {:si_unique_call 2839} sdv_513 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_513;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} callbackContext == 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1625;
    assume {:nonnull} Tmp_1625 != 0;
    assume Tmp_1625 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    havoc Tmp_1627;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1621;
    call {:si_unique_call 2840} WPP_SF_q(Tmp_1621, 35, Tmp_1627, PdoExtension_20);
    goto L179;

  L179:
    status_47 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_4351;
    call {:si_unique_call 2841} Sbp2CreateRequestErrorLog(vslice_dummy_var_4351, 0, 1053, status_47);
    goto L124;

  L124:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_47 != 259;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} status_47 != 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2842} vslice_dummy_var_450 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto L131;

  L131:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_6;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    call {:si_unique_call 2843} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume false;
    return;

  anon78_Then:
    assume {:partition} callbackContext == 0;
    goto L131;

  anon77_Then:
    assume {:partition} status_47 == 0;
    call {:si_unique_call 2844} Sbp2InsertTailList#0(PdoExtension_20, callbackContext);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon95_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:partition} status_47 == 259;
    goto L1;

  anon84_Then:
    goto L179;

  anon99_Then:
    goto L179;

  anon83_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L179;

  anon85_Then:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 2845} sdv_517 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_517;
    call {:si_unique_call 2846} AcquireOrbListLock(PdoExtension_20, orbLock_7, 1);
    call {:si_unique_call 2847} Tmp_1617 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1617 != 0;
    assume Tmp_1617 > 0;
    call {:si_unique_call 2848} sdv_518 := sdv_InterlockedIncrement(Tmp_1617);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1617 != 0;
    assume Tmp_1617 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2849} ReleaseOrbListLock(PdoExtension_20, orbLock_7, 1);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(callbackContext)] := 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2850} status_47 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} status_47 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2851} vslice_dummy_var_449 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} status_47 < 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1630;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_1632;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1629;
    call {:si_unique_call 2852} WPP_SF_(Tmp_1629, 37, Tmp_1632);
    goto L72;

  L72:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1620;
    assume {:nonnull} Tmp_1620 != 0;
    assume Tmp_1620 > 0;
    goto L59;

  L59:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_6;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    call {:si_unique_call 2853} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume false;
    return;

  anon70_Then:
    goto L72;

  anon88_Then:
    goto L72;

  anon69_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L72;

  anon68_Then:
    assume {:partition} 0 <= status_47;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1615;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Tmp_1615 != 0;
    assume Tmp_1615 > 0;
    goto L59;

  anon67_Then:
    assume {:partition} status_47 == 259;
    status_47 := 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1616;
    assume {:nonnull} Tmp_1616 != 0;
    assume Tmp_1616 > 0;
    havoc requestMdl;
    call {:si_unique_call 2854} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_4352;
    call {:si_unique_call 2855} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_4352, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc vslice_dummy_var_4353;
    call {:si_unique_call 2856} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_4353);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1624;
    assume {:nonnull} Tmp_1624 != 0;
    assume Tmp_1624 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_1631;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1626;
    call {:si_unique_call 2857} WPP_SF_q(Tmp_1626, 39, Tmp_1631, requestMdl);
    goto L108;

  L108:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2858} status_47 := Sbp2BusMapTransfer#0(PdoExtension_20, callbackContext);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} yogi_error != 1;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} status_47 < 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1623;
    assume {:nonnull} Tmp_1623 != 0;
    assume Tmp_1623 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    havoc Tmp_1618;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1628;
    call {:si_unique_call 2859} WPP_SF_D(Tmp_1628, 40, Tmp_1618, status_47);
    goto L152;

  L152:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 2860} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L124;

  anon80_Then:
    goto L124;

  anon81_Then:
    goto L152;

  anon96_Then:
    goto L152;

  anon79_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon75_Then:
    assume {:partition} 0 <= status_47;
    goto L124;

  anon92_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    goto L108;

  anon91_Then:
    goto L108;

  anon90_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L108;

  anon73_Then:
    status_47 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1619;
    assume {:nonnull} Tmp_1619 != 0;
    assume Tmp_1619 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    havoc Tmp_1633;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1622;
    call {:si_unique_call 2861} WPP_SF_(Tmp_1622, 38, Tmp_1633);
    goto L124;

  anon82_Then:
    goto L124;

  anon98_Then:
    goto L124;

  anon97_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L124;

  anon72_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L108;

  anon71_Then:
    goto L83;

  L83:
    call {:si_unique_call 2862} Sbp2InitializeOrb(PdoExtension_20, callbackContext);
    goto L124;

  anon89_Then:
    goto L83;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int);
  modifies alloc, Mem_T.PVOID, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int)
{
  var {:pointer} Tmp_1615: int;
  var {:pointer} Tmp_1616: int;
  var {:pointer} Tmp_1617: int;
  var {:pointer} Tmp_1618: int;
  var {:pointer} Tmp_1619: int;
  var {:pointer} sdv_513: int;
  var {:scalar} orbLock_7: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_1620: int;
  var {:scalar} Tmp_1621: int;
  var {:pointer} callbackContext: int;
  var {:scalar} Tmp_1622: int;
  var {:pointer} Tmp_1623: int;
  var {:pointer} sdv_517: int;
  var {:pointer} Tmp_1624: int;
  var {:scalar} sdv_518: int;
  var {:pointer} Tmp_1625: int;
  var {:scalar} Tmp_1626: int;
  var {:pointer} Tmp_1627: int;
  var {:pointer} irp_6: int;
  var {:scalar} Tmp_1628: int;
  var {:scalar} Tmp_1629: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_1630: int;
  var {:scalar} status_47: int;
  var {:pointer} Tmp_1631: int;
  var {:pointer} Tmp_1632: int;
  var {:pointer} Tmp_1633: int;
  var {:pointer} PdoExtension_20: int;
  var {:pointer} Srb_1: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_4354: int;
  var vslice_dummy_var_4355: int;
  var vslice_dummy_var_4356: int;
  var vslice_dummy_var_4357: int;
  var vslice_dummy_var_4358: int;
  var vslice_dummy_var_4359: int;

  anon0:
    call {:si_unique_call 2863} vslice_dummy_var_451 := __HAVOC_malloc(4);
    call {:si_unique_call 2864} orbLock_7 := __HAVOC_malloc(12);
    PdoExtension_20 := actual_PdoExtension_20;
    Srb_1 := actual_Srb_1;
    RequestContext := actual_RequestContext;
    call {:si_unique_call 2865} Tmp_1619 := __HAVOC_malloc(4);
    call {:si_unique_call 2866} Tmp_1623 := __HAVOC_malloc(4);
    call {:si_unique_call 2867} Tmp_1624 := __HAVOC_malloc(4);
    call {:si_unique_call 2868} Tmp_1625 := __HAVOC_malloc(4);
    call {:si_unique_call 2869} Tmp_1630 := __HAVOC_malloc(4);
    status_47 := 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    call {:si_unique_call 2870} sdv_513 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_513;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} callbackContext == 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1625;
    assume {:nonnull} Tmp_1625 != 0;
    assume Tmp_1625 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    havoc Tmp_1627;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1621;
    call {:si_unique_call 2871} WPP_SF_q(Tmp_1621, 35, Tmp_1627, PdoExtension_20);
    goto L179;

  L179:
    status_47 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_4354;
    call {:si_unique_call 2872} Sbp2CreateRequestErrorLog(vslice_dummy_var_4354, 0, 1053, status_47);
    goto L124;

  L124:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_47 != 259;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} status_47 != 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2873} vslice_dummy_var_455 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto L131;

  L131:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_6;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    call {:si_unique_call 2874} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_4355;
    call {:si_unique_call 2875} Sbp2StartNextPacketByKey#0(vslice_dummy_var_4355, 0);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 2876} vslice_dummy_var_453 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_20), irp_6);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon94_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon93_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    assume {:partition} callbackContext == 0;
    goto L131;

  anon77_Then:
    assume {:partition} status_47 == 0;
    call {:si_unique_call 2877} Sbp2InsertTailList#1(PdoExtension_20, callbackContext);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon95_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:partition} status_47 == 259;
    goto L1;

  anon84_Then:
    goto L179;

  anon99_Then:
    goto L179;

  anon83_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L179;

  anon85_Then:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 2878} sdv_517 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_517;
    call {:si_unique_call 2879} AcquireOrbListLock(PdoExtension_20, orbLock_7, 1);
    call {:si_unique_call 2880} Tmp_1617 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1617 != 0;
    assume Tmp_1617 > 0;
    call {:si_unique_call 2881} sdv_518 := sdv_InterlockedIncrement(Tmp_1617);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1617 != 0;
    assume Tmp_1617 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2882} ReleaseOrbListLock(PdoExtension_20, orbLock_7, 1);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(callbackContext)] := 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2883} status_47 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} status_47 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2884} vslice_dummy_var_454 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} status_47 < 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1630;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_1632;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1629;
    call {:si_unique_call 2885} WPP_SF_(Tmp_1629, 37, Tmp_1632);
    goto L72;

  L72:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1620;
    assume {:nonnull} Tmp_1620 != 0;
    assume Tmp_1620 > 0;
    goto L59;

  L59:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_6;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    call {:si_unique_call 2886} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_4356;
    havoc vslice_dummy_var_4357;
    call {:si_unique_call 2887} Sbp2StartNextPacketByKey#0(vslice_dummy_var_4356, vslice_dummy_var_4357);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 2888} vslice_dummy_var_452 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_20), irp_6);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    goto L72;

  anon88_Then:
    goto L72;

  anon69_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L72;

  anon68_Then:
    assume {:partition} 0 <= status_47;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1615;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Tmp_1615 != 0;
    assume Tmp_1615 > 0;
    goto L59;

  anon67_Then:
    assume {:partition} status_47 == 259;
    status_47 := 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1616;
    assume {:nonnull} Tmp_1616 != 0;
    assume Tmp_1616 > 0;
    havoc requestMdl;
    call {:si_unique_call 2889} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_4358;
    call {:si_unique_call 2890} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_4358, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc vslice_dummy_var_4359;
    call {:si_unique_call 2891} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_4359);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1624;
    assume {:nonnull} Tmp_1624 != 0;
    assume Tmp_1624 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_1631;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1626;
    call {:si_unique_call 2892} WPP_SF_q(Tmp_1626, 39, Tmp_1631, requestMdl);
    goto L108;

  L108:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2893} status_47 := Sbp2BusMapTransfer#1(PdoExtension_20, callbackContext);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} yogi_error != 1;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} status_47 < 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1623;
    assume {:nonnull} Tmp_1623 != 0;
    assume Tmp_1623 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    havoc Tmp_1618;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1628;
    call {:si_unique_call 2894} WPP_SF_D(Tmp_1628, 40, Tmp_1618, status_47);
    goto L152;

  L152:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    call {:si_unique_call 2895} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L124;

  anon80_Then:
    goto L124;

  anon81_Then:
    goto L152;

  anon96_Then:
    goto L152;

  anon79_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon75_Then:
    assume {:partition} 0 <= status_47;
    goto L124;

  anon92_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    goto L108;

  anon91_Then:
    goto L108;

  anon90_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L108;

  anon73_Then:
    status_47 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1619;
    assume {:nonnull} Tmp_1619 != 0;
    assume Tmp_1619 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    havoc Tmp_1633;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1622;
    call {:si_unique_call 2896} WPP_SF_(Tmp_1622, 38, Tmp_1633);
    goto L124;

  anon82_Then:
    goto L124;

  anon98_Then:
    goto L124;

  anon97_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L124;

  anon72_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L108;

  anon71_Then:
    goto L83;

  L83:
    call {:si_unique_call 2897} Sbp2InitializeOrb(PdoExtension_20, callbackContext);
    goto L124;

  anon89_Then:
    goto L83;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_PdoExtension_21: int, actual_Context_19: int)
{
  var {:pointer} Tmp_1838: int;
  var {:pointer} Tmp_1839: int;
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_1840: int;
  var {:pointer} Tmp_1841: int;
  var {:pointer} Tmp_1842: int;
  var {:scalar} Tmp_1843: int;
  var {:pointer} Tmp_1844: int;
  var {:scalar} sdv_561: int;
  var {:scalar} orbLock_9: int;
  var {:pointer} Tmp_1845: int;
  var {:pointer} Tmp_1846: int;
  var {:pointer} Tmp_1847: int;
  var {:pointer} Tmp_1848: int;
  var {:pointer} Tmp_1849: int;
  var {:pointer} Tmp_1850: int;
  var {:pointer} Tmp_1851: int;
  var {:scalar} Tmp_1852: int;
  var {:scalar} sdv_563: int;
  var {:scalar} sdv_567: int;
  var {:scalar} sdv_569: int;
  var {:scalar} Tmp_1853: int;
  var {:scalar} dueTime_3: int;
  var {:pointer} Tmp_1854: int;
  var {:pointer} Tmp_1855: int;
  var {:scalar} Tmp_1856: int;
  var {:scalar} dueTime_4: int;
  var {:pointer} Tmp_1857: int;
  var {:pointer} Tmp_1859: int;
  var {:pointer} Tmp_1860: int;
  var {:scalar} status_52: int;
  var {:pointer} Tmp_1861: int;
  var {:scalar} newAddr: int;
  var {:pointer} Tmp_1862: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_1863: int;
  var {:scalar} sdv_571: int;
  var {:pointer} Tmp_1864: int;
  var {:pointer} PdoExtension_21: int;
  var {:pointer} Context_19: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_457: int;
  var vslice_dummy_var_458: int;
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_461: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_4360: int;

  anon0:
    call {:si_unique_call 2898} orbLock_9 := __HAVOC_malloc(12);
    call {:si_unique_call 2899} dueTime_3 := __HAVOC_malloc(20);
    call {:si_unique_call 2900} dueTime_4 := __HAVOC_malloc(20);
    call {:si_unique_call 2901} newAddr := __HAVOC_malloc(76);
    call {:si_unique_call 2902} vslice_dummy_var_456 := __HAVOC_malloc(4);
    PdoExtension_21 := actual_PdoExtension_21;
    Context_19 := actual_Context_19;
    call {:si_unique_call 2903} Tmp_1840 := __HAVOC_malloc(4);
    call {:si_unique_call 2904} Tmp_1841 := __HAVOC_malloc(4);
    call {:si_unique_call 2905} Tmp_1860 := __HAVOC_malloc(4);
    call {:si_unique_call 2906} Tmp_1862 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1863;
    assume {:nonnull} Tmp_1863 != 0;
    assume Tmp_1863 > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    havoc orbListDepth;
    call {:si_unique_call 2907} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    havoc Tmp_1844;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} Tmp_1844 != 0;
    assume Tmp_1844 > 0;
    call {:si_unique_call 2908} sdv_561 := sdv_IsListEmpty(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_561 != 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    havoc Tmp_1842;
    assume {:nonnull} Tmp_1842 != 0;
    assume Tmp_1842 > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    havoc Tmp_1845;
    assume {:nonnull} Tmp_1845 != 0;
    assume Tmp_1845 > 0;
    havoc timeOutValue;
    assume {:nonnull} dueTime_3 != 0;
    assume dueTime_3 > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    call {:si_unique_call 2909} vslice_dummy_var_460 := KeSetTimer(0, dueTime_3, 0);
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2910} vslice_dummy_var_457 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_19));
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1851;
    assume {:nonnull} Tmp_1851 != 0;
    assume Tmp_1851 > 0;
    havoc Tmp_1859;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1855;
    assume {:nonnull} Tmp_1855 != 0;
    assume Tmp_1855 > 0;
    havoc Tmp_1850;
    assume {:nonnull} Tmp_1850 != 0;
    assume Tmp_1850 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1849;
    assume {:nonnull} Tmp_1849 != 0;
    assume Tmp_1849 > 0;
    havoc Tmp_1857;
    assume {:nonnull} Tmp_1857 != 0;
    assume Tmp_1857 > 0;
    call {:si_unique_call 2911} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1841;
    assume {:nonnull} Tmp_1841 != 0;
    assume Tmp_1841 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_1854;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1843;
    call {:si_unique_call 2912} WPP_SF_q(Tmp_1843, 47, Tmp_1854, Context_19);
    goto L60;

  L60:
    call {:si_unique_call 2913} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2914} status_52 := Sbp2AccessRegister#0(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2915} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2916} Sbp2AddLog(PdoExtension_21, 16, -999144852, Reserved__DEVICE_EXTENSION(PdoExtension_21), 0);
    goto L80;

  L80:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_52 == -1072562032;
    call {:si_unique_call 2917} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 2918} vslice_dummy_var_458 := KeCancelTimer(0);
    assume {:nonnull} dueTime_4 != 0;
    assume dueTime_4 > 0;
    call {:si_unique_call 2919} vslice_dummy_var_461 := KeSetTimer(0, dueTime_4, 0);
    goto L86;

  L86:
    call {:si_unique_call 2920} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} timeOutValue != 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1840;
    assume {:nonnull} Tmp_1840 != 0;
    assume Tmp_1840 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_1848;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1852;
    call {:si_unique_call 2921} WPP_SF_q(Tmp_1852, 49, Tmp_1848, PdoExtension_21);
    goto L99;

  L99:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon63_Then:
    goto L99;

  anon72_Then:
    goto L99;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L99;

  anon61_Then:
    assume {:partition} timeOutValue == 0;
    goto L99;

  anon60_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L86;

  anon59_Then:
    goto L86;

  anon57_Then:
    assume {:partition} status_52 != -1072562032;
    goto L81;

  L81:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume false;
    return;

  anon58_Then:
    goto L1;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    goto L60;

  anon70_Then:
    goto L60;

  anon55_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon54_Then:
    goto L37;

  L37:
    call {:si_unique_call 2922} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1862;
    assume {:nonnull} Tmp_1862 != 0;
    assume Tmp_1862 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_1864;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1853;
    call {:si_unique_call 2923} WPP_SF_q(Tmp_1853, 48, Tmp_1864, Context_19);
    goto L119;

  L119:
    call {:si_unique_call 2924} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2925} status_52 := Sbp2AccessRegister#0(PdoExtension_21, newAddr, 1028);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2926} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 2927} Sbp2AddLog(PdoExtension_21, 32, -814587312, newAddr, Context_19);
    goto L80;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    goto L119;

  anon74_Then:
    goto L119;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L119;

  anon69_Then:
    goto L37;

  anon53_Then:
    assume {:partition} sdv_561 == 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    havoc Tmp_1839;
    assume {:nonnull} Tmp_1839 != 0;
    assume Tmp_1839 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L153;

  L153:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1846;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1847;
    assume {:nonnull} Tmp_1847 != 0;
    assume Tmp_1847 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1861;
    assume {:nonnull} Tmp_1861 != 0;
    assume Tmp_1861 > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2928} vslice_dummy_var_462 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_19));
    call {:si_unique_call 2929} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1860;
    assume {:nonnull} Tmp_1860 != 0;
    assume Tmp_1860 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1838;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1856;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_4360;
    call {:si_unique_call 2930} WPP_SF_dq(Tmp_1856, 50, Tmp_1838, vslice_dummy_var_4360, Context_19);
    goto L166;

  L166:
    call {:si_unique_call 2931} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2932} vslice_dummy_var_459 := Sbp2AccessRegister#0(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2933} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L81;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    goto L166;

  anon77_Then:
    goto L166;

  anon67_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L166;

  anon66_Then:
    goto L149;

  L149:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    goto L153;

  anon76_Then:
    goto L149;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_PdoExtension_21: int, actual_Context_19: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_PdoExtension_21: int, actual_Context_19: int)
{
  var {:pointer} Tmp_1838: int;
  var {:pointer} Tmp_1839: int;
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_1840: int;
  var {:pointer} Tmp_1841: int;
  var {:pointer} Tmp_1842: int;
  var {:scalar} Tmp_1843: int;
  var {:pointer} Tmp_1844: int;
  var {:scalar} sdv_561: int;
  var {:scalar} orbLock_9: int;
  var {:pointer} Tmp_1845: int;
  var {:pointer} Tmp_1846: int;
  var {:pointer} Tmp_1847: int;
  var {:pointer} Tmp_1848: int;
  var {:pointer} Tmp_1849: int;
  var {:pointer} Tmp_1850: int;
  var {:pointer} Tmp_1851: int;
  var {:scalar} Tmp_1852: int;
  var {:scalar} sdv_563: int;
  var {:scalar} sdv_567: int;
  var {:scalar} sdv_569: int;
  var {:scalar} Tmp_1853: int;
  var {:scalar} dueTime_3: int;
  var {:pointer} Tmp_1854: int;
  var {:pointer} Tmp_1855: int;
  var {:scalar} Tmp_1856: int;
  var {:scalar} dueTime_4: int;
  var {:pointer} Tmp_1857: int;
  var {:pointer} Tmp_1859: int;
  var {:pointer} Tmp_1860: int;
  var {:scalar} status_52: int;
  var {:pointer} Tmp_1861: int;
  var {:scalar} newAddr: int;
  var {:pointer} Tmp_1862: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_1863: int;
  var {:scalar} sdv_571: int;
  var {:pointer} Tmp_1864: int;
  var {:pointer} PdoExtension_21: int;
  var {:pointer} Context_19: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_466: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_4361: int;
  var vslice_dummy_var_4362: int;
  var vslice_dummy_var_4363: int;

  anon0:
    call {:si_unique_call 2934} orbLock_9 := __HAVOC_malloc(12);
    call {:si_unique_call 2935} dueTime_3 := __HAVOC_malloc(20);
    call {:si_unique_call 2936} dueTime_4 := __HAVOC_malloc(20);
    call {:si_unique_call 2937} newAddr := __HAVOC_malloc(76);
    call {:si_unique_call 2938} vslice_dummy_var_463 := __HAVOC_malloc(4);
    PdoExtension_21 := actual_PdoExtension_21;
    Context_19 := actual_Context_19;
    call {:si_unique_call 2939} Tmp_1840 := __HAVOC_malloc(4);
    call {:si_unique_call 2940} Tmp_1841 := __HAVOC_malloc(4);
    call {:si_unique_call 2941} Tmp_1860 := __HAVOC_malloc(4);
    call {:si_unique_call 2942} Tmp_1862 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1863;
    assume {:nonnull} Tmp_1863 != 0;
    assume Tmp_1863 > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    havoc orbListDepth;
    call {:si_unique_call 2943} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    havoc Tmp_1844;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} Tmp_1844 != 0;
    assume Tmp_1844 > 0;
    call {:si_unique_call 2944} sdv_561 := sdv_IsListEmpty(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_561 != 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    havoc Tmp_1842;
    assume {:nonnull} Tmp_1842 != 0;
    assume Tmp_1842 > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    havoc Tmp_1845;
    assume {:nonnull} Tmp_1845 != 0;
    assume Tmp_1845 > 0;
    havoc timeOutValue;
    assume {:nonnull} dueTime_3 != 0;
    assume dueTime_3 > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    call {:si_unique_call 2945} vslice_dummy_var_467 := KeSetTimer(0, dueTime_3, 0);
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2946} vslice_dummy_var_464 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_19));
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1851;
    assume {:nonnull} Tmp_1851 != 0;
    assume Tmp_1851 > 0;
    havoc Tmp_1859;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1859 != 0;
    assume Tmp_1859 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1855;
    assume {:nonnull} Tmp_1855 != 0;
    assume Tmp_1855 > 0;
    havoc Tmp_1850;
    assume {:nonnull} Tmp_1850 != 0;
    assume Tmp_1850 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1849;
    assume {:nonnull} Tmp_1849 != 0;
    assume Tmp_1849 > 0;
    havoc Tmp_1857;
    assume {:nonnull} Tmp_1857 != 0;
    assume Tmp_1857 > 0;
    call {:si_unique_call 2947} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1841;
    assume {:nonnull} Tmp_1841 != 0;
    assume Tmp_1841 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_1854;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1843;
    call {:si_unique_call 2948} WPP_SF_q(Tmp_1843, 47, Tmp_1854, Context_19);
    goto L60;

  L60:
    call {:si_unique_call 2949} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2950} status_52 := Sbp2AccessRegister#1(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2951} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2952} Sbp2AddLog(PdoExtension_21, 16, -999144852, Reserved__DEVICE_EXTENSION(PdoExtension_21), 0);
    goto L80;

  L80:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_52 == -1072562032;
    call {:si_unique_call 2953} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 2954} vslice_dummy_var_465 := KeCancelTimer(0);
    assume {:nonnull} dueTime_4 != 0;
    assume dueTime_4 > 0;
    call {:si_unique_call 2955} vslice_dummy_var_468 := KeSetTimer(0, dueTime_4, 0);
    goto L86;

  L86:
    call {:si_unique_call 2956} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} timeOutValue != 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1840;
    assume {:nonnull} Tmp_1840 != 0;
    assume Tmp_1840 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_1848;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1852;
    call {:si_unique_call 2957} WPP_SF_q(Tmp_1852, 49, Tmp_1848, PdoExtension_21);
    goto L99;

  L99:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon63_Then:
    goto L99;

  anon72_Then:
    goto L99;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L99;

  anon61_Then:
    assume {:partition} timeOutValue == 0;
    goto L99;

  anon60_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L86;

  anon59_Then:
    goto L86;

  anon57_Then:
    assume {:partition} status_52 != -1072562032;
    goto L81;

  L81:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_4361;
    havoc vslice_dummy_var_4362;
    call {:si_unique_call 2958} Sbp2StartNextPacketByKey#0(vslice_dummy_var_4361, vslice_dummy_var_4362);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto L1;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    goto L60;

  anon70_Then:
    goto L60;

  anon55_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon54_Then:
    goto L37;

  L37:
    call {:si_unique_call 2959} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1862;
    assume {:nonnull} Tmp_1862 != 0;
    assume Tmp_1862 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_1864;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1853;
    call {:si_unique_call 2960} WPP_SF_q(Tmp_1853, 48, Tmp_1864, Context_19);
    goto L119;

  L119:
    call {:si_unique_call 2961} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2962} status_52 := Sbp2AccessRegister#1(PdoExtension_21, newAddr, 1028);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2963} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 2964} Sbp2AddLog(PdoExtension_21, 32, -814587312, newAddr, Context_19);
    goto L80;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    goto L119;

  anon74_Then:
    goto L119;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L119;

  anon69_Then:
    goto L37;

  anon53_Then:
    assume {:partition} sdv_561 == 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    havoc Tmp_1839;
    assume {:nonnull} Tmp_1839 != 0;
    assume Tmp_1839 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L153;

  L153:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1846;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1847;
    assume {:nonnull} Tmp_1847 != 0;
    assume Tmp_1847 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1861;
    assume {:nonnull} Tmp_1861 != 0;
    assume Tmp_1861 > 0;
    assume {:nonnull} Context_19 != 0;
    assume Context_19 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2965} vslice_dummy_var_469 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_19));
    call {:si_unique_call 2966} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1860;
    assume {:nonnull} Tmp_1860 != 0;
    assume Tmp_1860 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1838;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1856;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_4363;
    call {:si_unique_call 2967} WPP_SF_dq(Tmp_1856, 50, Tmp_1838, vslice_dummy_var_4363, Context_19);
    goto L166;

  L166:
    call {:si_unique_call 2968} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2969} vslice_dummy_var_466 := Sbp2AccessRegister#1(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2970} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L81;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    goto L166;

  anon77_Then:
    goto L166;

  anon67_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L166;

  anon66_Then:
    goto L149;

  L149:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    goto L153;

  anon76_Then:
    goto L149;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_PdoExtension_21: int, actual_Context_19: int);
  modifies alloc, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#0(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_636: int)
{
  var {:pointer} PdoExtension_9: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    call {:si_unique_call 2971} Tmp_636 := Sbp2AccessRegisterEx#0(PdoExtension_9, Data, RegisterAndDirection, -1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#0(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_636: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} Tmp_636 == -1073741632 || Tmp_636 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#1(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_636: int)
{
  var {:pointer} PdoExtension_9: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    call {:si_unique_call 2972} Tmp_636 := Sbp2AccessRegisterEx#1(PdoExtension_9, Data, RegisterAndDirection, -1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#1(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_636: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#0(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_663: int)
{
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:pointer} Tmp_667: int;
  var {:pointer} Tmp_668: int;
  var {:pointer} Tmp_669: int;
  var {:pointer} Tmp_670: int;
  var {:pointer} Tmp_671: int;
  var {:pointer} Tmp_672: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} Tmp_674: int;
  var {:scalar} sdv_212: int;
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_676: int;
  var {:pointer} Tmp_677: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_679: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:pointer} sdv_213: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:pointer} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:scalar} sdv_214: int;
  var {:pointer} Tmp_690: int;
  var {:scalar} sdv_216: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:scalar} sdv_217: int;
  var {:pointer} Tmp_693: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:scalar} sdv_218: int;
  var {:pointer} sdv_219: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} Tmp_701: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:pointer} Tmp_704: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} Tmp_706: int;
  var {:pointer} Tmp_708: int;
  var {:pointer} Tmp_709: int;
  var {:scalar} status_19: int;
  var {:pointer} packet_6: int;
  var {:pointer} Tmp_710: int;
  var {:pointer} Tmp_711: int;
  var {:pointer} Tmp_712: int;
  var {:scalar} generation: int;
  var {:pointer} Tmp_713: int;
  var {:pointer} Tmp_714: int;
  var {:pointer} Tmp_715: int;
  var {:pointer} Tmp_716: int;
  var {:pointer} Tmp_717: int;
  var {:scalar} sdv_221: int;
  var {:pointer} Tmp_719: int;
  var {:pointer} Tmp_720: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Data_1: int;
  var {:scalar} RegisterAndDirection_1: int;
  var {:scalar} Generation_4: int;

  anon0:
    call {:si_unique_call 2973} packet_6 := __HAVOC_malloc(4);
    PdoExtension_12 := actual_PdoExtension_12;
    Data_1 := actual_Data_1;
    RegisterAndDirection_1 := actual_RegisterAndDirection_1;
    Generation_4 := actual_Generation_4;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    Mem_T.P_IRBIRP[packet_6] := 0;
    bFreeMdl := 0;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_663 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon96_Then:
    call {:si_unique_call 2974} AllocateIrpAndIrb(PdoExtension_12, packet_6);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_6] != 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc generation;
    goto L19;

  L19:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    goto L23;

  L23:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_698;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_693;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_697;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_719;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    Tmp_668 := Data_1;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    goto L27;

  L27:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_710;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_706;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_692;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    goto L21;

  L21:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume false;
    return;

  anon74_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume false;
    return;

  anon91_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L27;

  anon92_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_714;
    assume {:nonnull} Tmp_714 != 0;
    assume Tmp_714 > 0;
    Tmp_669 := Data_1;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    goto L27;

  anon93_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_720;
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    goto L27;

  anon94_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_670;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_672;
    assume {:nonnull} Tmp_670 != 0;
    assume Tmp_670 > 0;
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    goto L27;

  anon95_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_680;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_665;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_701;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    goto L27;

  anon105_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_671;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_667;
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    assume {:nonnull} Tmp_671 != 0;
    assume Tmp_671 > 0;
    goto L27;

  anon83_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L21;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    goto L23;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    goto L23;

  anon86_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    goto L23;

  anon87_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    goto L23;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L22;

  L22:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 256) != 0;
    goto L56;

  L56:
    Tmp_666 := Data_1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_675;
    assume {:nonnull} Tmp_675 != 0;
    assume Tmp_675 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_717;
    assume {:nonnull} Tmp_717 != 0;
    assume Tmp_717 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_705;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_713;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    assume {:nonnull} Tmp_713 != 0;
    assume Tmp_713 > 0;
    goto L70;

  L70:
    call {:si_unique_call 2975} sdv_219 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_709;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_694;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    bFreeMdl := 1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_702;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_677;
    assume {:nonnull} Tmp_677 != 0;
    assume Tmp_677 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_695;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon99_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2976} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    Tmp_663 := -1073741670;
    goto L1;

  anon98_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_699;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_673;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    goto L70;

  anon75_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 256) == 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_689;
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_712;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_715;
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} Tmp_715 != 0;
    assume Tmp_715 > 0;
    goto L92;

  L92:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_679;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_685;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    call {:si_unique_call 2977} sdv_213 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_688;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_711;
    assume {:nonnull} Tmp_711 != 0;
    assume Tmp_711 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    bFreeMdl := 1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_686;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_674;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_690;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon104_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2978} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    Tmp_663 := -1073741670;
    goto L1;

  anon103_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_676;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_716;
    assume {:nonnull} Tmp_676 != 0;
    assume Tmp_676 > 0;
    assume {:nonnull} Tmp_716 != 0;
    assume Tmp_716 > 0;
    goto L92;

  anon76_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    goto L56;

  anon89_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    goto L23;

  anon97_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L22;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Generation_4 != -1;
    generation := Generation_4;
    goto L19;

  anon73_Then:
    assume {:partition} Generation_4 == -1;
    goto L18;

  anon71_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_6] == 0;
    Tmp_663 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#0(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_663: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} Tmp_663 == -1073741632 || Tmp_663 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#1(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_663: int)
{
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:pointer} Tmp_667: int;
  var {:pointer} Tmp_668: int;
  var {:pointer} Tmp_669: int;
  var {:pointer} Tmp_670: int;
  var {:pointer} Tmp_671: int;
  var {:pointer} Tmp_672: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} Tmp_674: int;
  var {:scalar} sdv_212: int;
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_676: int;
  var {:pointer} Tmp_677: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_679: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:pointer} sdv_213: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:pointer} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:scalar} sdv_214: int;
  var {:pointer} Tmp_690: int;
  var {:scalar} sdv_216: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:scalar} sdv_217: int;
  var {:pointer} Tmp_693: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:scalar} sdv_218: int;
  var {:pointer} sdv_219: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} Tmp_701: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:pointer} Tmp_704: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} Tmp_706: int;
  var {:pointer} Tmp_708: int;
  var {:pointer} Tmp_709: int;
  var {:scalar} status_19: int;
  var {:pointer} packet_6: int;
  var {:pointer} Tmp_710: int;
  var {:pointer} Tmp_711: int;
  var {:pointer} Tmp_712: int;
  var {:scalar} generation: int;
  var {:pointer} Tmp_713: int;
  var {:pointer} Tmp_714: int;
  var {:pointer} Tmp_715: int;
  var {:pointer} Tmp_716: int;
  var {:pointer} Tmp_717: int;
  var {:scalar} sdv_221: int;
  var {:pointer} Tmp_719: int;
  var {:pointer} Tmp_720: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Data_1: int;
  var {:scalar} RegisterAndDirection_1: int;
  var {:scalar} Generation_4: int;

  anon0:
    call {:si_unique_call 2979} packet_6 := __HAVOC_malloc(4);
    PdoExtension_12 := actual_PdoExtension_12;
    Data_1 := actual_Data_1;
    RegisterAndDirection_1 := actual_RegisterAndDirection_1;
    Generation_4 := actual_Generation_4;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    Mem_T.P_IRBIRP[packet_6] := 0;
    bFreeMdl := 0;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_663 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon96_Then:
    call {:si_unique_call 2980} AllocateIrpAndIrb(PdoExtension_12, packet_6);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_6] != 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc generation;
    goto L19;

  L19:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    goto L23;

  L23:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_698;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_693;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_697;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_719;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    Tmp_668 := Data_1;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    goto L27;

  L27:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_710;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    assume {:nonnull} Tmp_710 != 0;
    assume Tmp_710 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_706;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_692;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    goto L21;

  L21:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2981} status_19 := Sbp2SendRequest#0(PdoExtension_12, Mem_T.P_IRBIRP[packet_6], 1);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} yogi_error != 1;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} status_19 >= 0;
    goto L119;

  L119:
    Tmp_663 := status_19;
    goto L1;

  anon77_Then:
    assume {:partition} 0 > status_19;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} 259 != status_19;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_700;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2982} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    goto L119;

  anon101_Then:
    goto L119;

  anon78_Then:
    assume {:partition} 259 == status_19;
    goto L119;

  anon100_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2983} status_19 := Sbp2SendRequest#0(PdoExtension_12, Mem_T.P_IRBIRP[packet_6], 2);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} bFreeMdl != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2984} IoFreeMdl(0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    goto L126;

  L126:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} status_19 >= 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 512) != 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L136;

  L136:
    Tmp_691 := Data_1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    Tmp_708 := Data_1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L131;

  L131:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2985} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    goto L119;

  anon90_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto L131;

  anon82_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L136;

  anon81_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 512) == 0;
    goto L131;

  anon80_Then:
    assume {:partition} 0 > status_19;
    goto L131;

  anon79_Then:
    assume {:partition} bFreeMdl == 0;
    goto L126;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon91_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L27;

  anon92_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_714;
    assume {:nonnull} Tmp_714 != 0;
    assume Tmp_714 > 0;
    Tmp_669 := Data_1;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    goto L27;

  anon93_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_720;
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    goto L27;

  anon94_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_670;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_672;
    assume {:nonnull} Tmp_670 != 0;
    assume Tmp_670 > 0;
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    goto L27;

  anon95_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_680;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_665;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_701;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    goto L27;

  anon105_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_671;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_667;
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    assume {:nonnull} Tmp_671 != 0;
    assume Tmp_671 > 0;
    goto L27;

  anon83_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L21;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    goto L23;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    goto L23;

  anon86_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    goto L23;

  anon87_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    goto L23;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L22;

  L22:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 256) != 0;
    goto L56;

  L56:
    Tmp_666 := Data_1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_675;
    assume {:nonnull} Tmp_675 != 0;
    assume Tmp_675 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_717;
    assume {:nonnull} Tmp_717 != 0;
    assume Tmp_717 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_705;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_713;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    assume {:nonnull} Tmp_713 != 0;
    assume Tmp_713 > 0;
    goto L70;

  L70:
    call {:si_unique_call 2986} sdv_219 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_709;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_694;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    bFreeMdl := 1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_702;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_677;
    assume {:nonnull} Tmp_677 != 0;
    assume Tmp_677 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_695;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon99_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2987} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    Tmp_663 := -1073741670;
    goto L1;

  anon98_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_699;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_673;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    goto L70;

  anon75_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 256) == 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_689;
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_712;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_715;
    assume {:nonnull} Tmp_712 != 0;
    assume Tmp_712 > 0;
    assume {:nonnull} Tmp_715 != 0;
    assume Tmp_715 > 0;
    goto L92;

  L92:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_679;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_685;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    call {:si_unique_call 2988} sdv_213 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_688;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_711;
    assume {:nonnull} Tmp_711 != 0;
    assume Tmp_711 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    bFreeMdl := 1;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_686;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_674;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_690;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon104_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2989} DeAllocateIrpAndIrb(PdoExtension_12, Mem_T.P_IRBIRP[packet_6]);
    Tmp_663 := -1073741670;
    goto L1;

  anon103_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_6] != 0;
    assume Mem_T.P_IRBIRP[packet_6] > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_676;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_716;
    assume {:nonnull} Tmp_676 != 0;
    assume Tmp_676 > 0;
    assume {:nonnull} Tmp_716 != 0;
    assume Tmp_716 > 0;
    goto L92;

  anon76_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    goto L56;

  anon89_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    goto L23;

  anon97_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L22;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Generation_4 != -1;
    generation := Generation_4;
    goto L19;

  anon73_Then:
    assume {:partition} Generation_4 == -1;
    goto L18;

  anon71_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_6] == 0;
    Tmp_663 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#1(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_663: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1866: int)
{
  var {:pointer} Tmp_1867: int;
  var {:scalar} Tmp_1868: int;
  var {:pointer} Tmp_1869: int;
  var {:pointer} Tmp_1870: int;
  var {:scalar} Tmp_1871: int;
  var {:pointer} Tmp_1873: int;
  var {:pointer} CallbackContext_2: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    call {:si_unique_call 2990} Tmp_1869 := __HAVOC_malloc(4);
    call {:si_unique_call 2991} Tmp_1870 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 2992} Sbp2AllocComplete#0(CallbackContext_2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1870;
    assume {:nonnull} Tmp_1870 != 0;
    assume Tmp_1870 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1873;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1871;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 2993} WPP_SF_qq(Tmp_1871, 43, Tmp_1873, CallbackContext_2, Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(CallbackContext_2)]);
    goto L13;

  L13:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1869;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1867;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1868;
    call {:si_unique_call 2994} WPP_SF_q(Tmp_1868, 44, Tmp_1867, CallbackContext_2);
    goto L28;

  L28:
    Tmp_1866 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon20_Then:
    goto L28;

  anon24_Then:
    goto L28;

  anon23_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L28;

  anon18_Then:
    Tmp_1866 := 259;
    goto L1;

  anon19_Then:
    goto L13;

  anon22_Then:
    goto L13;

  anon17_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L13;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1866: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1866: int)
{
  var {:pointer} Tmp_1867: int;
  var {:scalar} Tmp_1868: int;
  var {:pointer} Tmp_1869: int;
  var {:pointer} Tmp_1870: int;
  var {:scalar} Tmp_1871: int;
  var {:pointer} Tmp_1873: int;
  var {:pointer} CallbackContext_2: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    call {:si_unique_call 2995} Tmp_1869 := __HAVOC_malloc(4);
    call {:si_unique_call 2996} Tmp_1870 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 2997} Sbp2AllocComplete#1(CallbackContext_2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1870;
    assume {:nonnull} Tmp_1870 != 0;
    assume Tmp_1870 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1873;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1871;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 2998} WPP_SF_qq(Tmp_1871, 43, Tmp_1873, CallbackContext_2, Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(CallbackContext_2)]);
    goto L13;

  L13:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1869;
    assume {:nonnull} Tmp_1869 != 0;
    assume Tmp_1869 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1867;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1868;
    call {:si_unique_call 2999} WPP_SF_q(Tmp_1868, 44, Tmp_1867, CallbackContext_2);
    goto L28;

  L28:
    Tmp_1866 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon20_Then:
    goto L28;

  anon24_Then:
    goto L28;

  anon23_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L28;

  anon18_Then:
    Tmp_1866 := 259;
    goto L1;

  anon19_Then:
    goto L13;

  anon22_Then:
    goto L13;

  anon17_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L13;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1866: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int)
{
  var {:pointer} Tmp_1513: int;
  var {:pointer} Tmp_1514: int;
  var {:pointer} Tmp_1515: int;
  var {:pointer} Tmp_1516: int;
  var {:pointer} Tmp_1517: int;
  var {:pointer} Tmp_1518: int;
  var {:pointer} Tmp_1519: int;
  var {:pointer} Tmp_1521: int;
  var {:pointer} Tmp_1522: int;
  var {:pointer} Tmp_1523: int;
  var {:pointer} Tmp_1524: int;
  var {:pointer} Tmp_1525: int;
  var {:scalar} Tmp_1526: int;
  var {:pointer} Tmp_1527: int;
  var {:scalar} Tmp_1528: int;
  var {:pointer} Tmp_1529: int;
  var {:pointer} Tmp_1530: int;
  var {:pointer} Tmp_1531: int;
  var {:pointer} Tmp_1532: int;
  var {:pointer} Tmp_1533: int;
  var {:pointer} Tmp_1534: int;
  var {:pointer} Tmp_1535: int;
  var {:pointer} irp_5: int;
  var {:pointer} Tmp_1537: int;
  var {:pointer} Tmp_1538: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_1539: int;
  var {:pointer} Tmp_1540: int;
  var {:pointer} Tmp_1541: int;
  var {:pointer} srb_3: int;
  var {:pointer} packet_12: int;
  var {:scalar} status_45: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_1542: int;
  var {:scalar} Tmp_1543: int;
  var {:pointer} Tmp_1544: int;
  var {:pointer} Tmp_1545: int;
  var {:pointer} deviceExtension_4: int;
  var {:pointer} Tmp_1546: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_4364: int;
  var vslice_dummy_var_4365: int;
  var vslice_dummy_var_4366: int;
  var vslice_dummy_var_4367: int;

  anon0:
    call {:si_unique_call 3000} vslice_dummy_var_470 := __HAVOC_malloc(4);
    call {:si_unique_call 3001} packet_12 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    call {:si_unique_call 3002} Tmp_1529 := __HAVOC_malloc(4);
    call {:si_unique_call 3003} Tmp_1535 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_4364;
    Mem_T.P_IRBIRP[packet_12] := vslice_dummy_var_4364;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1517;
    assume {:nonnull} Tmp_1517 != 0;
    assume Tmp_1517 > 0;
    deviceExtension_4 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1517)];
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc routine_2;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1529;
    assume {:nonnull} Tmp_1529 != 0;
    assume Tmp_1529 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_1539;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1528;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_4365;
    call {:si_unique_call 3004} WPP_SF_qD(Tmp_1528, 45, Tmp_1539, CallbackContext, vslice_dummy_var_4365);
    goto L18;

  L18:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L32;

  L32:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1540;
    assume {:nonnull} Tmp_1540 != 0;
    assume Tmp_1540 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1538;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1518;
    assume {:nonnull} Tmp_1518 != 0;
    assume Tmp_1518 > 0;
    assume {:nonnull} Tmp_1538 != 0;
    assume Tmp_1538 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1544;
    assume {:nonnull} Tmp_1544 != 0;
    assume Tmp_1544 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1516;
    assume {:nonnull} Tmp_1516 != 0;
    assume Tmp_1516 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1524;
    assume {:nonnull} Tmp_1524 != 0;
    assume Tmp_1524 > 0;
    goto L39;

  L39:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1525;
    assume {:nonnull} Tmp_1525 != 0;
    assume Tmp_1525 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1533;
    assume {:nonnull} Tmp_1533 != 0;
    assume Tmp_1533 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1542;
    assume {:nonnull} Tmp_1542 != 0;
    assume Tmp_1542 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1530;
    assume {:nonnull} Tmp_1530 != 0;
    assume Tmp_1530 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1546;
    assume {:nonnull} Tmp_1546 != 0;
    assume Tmp_1546 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1534;
    assume {:nonnull} Tmp_1534 != 0;
    assume Tmp_1534 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1519;
    assume {:nonnull} Tmp_1519 != 0;
    assume Tmp_1519 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1521;
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1541;
    assume {:nonnull} Tmp_1541 != 0;
    assume Tmp_1541 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1513;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1514;
    assume {:nonnull} Tmp_1513 != 0;
    assume Tmp_1513 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1522;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1522 != 0;
    assume Tmp_1522 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1523;
    assume {:nonnull} Tmp_1523 != 0;
    assume Tmp_1523 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    assume routine_2 == 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} status_45 != 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1535;
    assume {:nonnull} Tmp_1535 != 0;
    assume Tmp_1535 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    Tmp_1543 := bDirectCall;
    havoc Tmp_1537;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1526;
    call {:si_unique_call 3005} WPP_SF_qD(Tmp_1526, 46, Tmp_1537, CallbackContext, Tmp_1543);
    goto L62;

  L62:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    call {:si_unique_call 3006} DeAllocateIrpAndIrb(deviceExtension_4, Mem_T.P_IRBIRP[packet_12]);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(CallbackContext)] := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb_3;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 3007} vslice_dummy_var_472 := FreeAsyncRequestContext(deviceExtension_4, CallbackContext);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    havoc irp_5;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    call {:si_unique_call 3008} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    assume false;
    return;

  anon45_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon38_Then:
    goto L62;

  anon44_Then:
    goto L62;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L62;

  anon36_Then:
    assume {:partition} status_45 == 0;
    goto L1;

  anon43_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1515;
    assume {:nonnull} Tmp_1515 != 0;
    assume Tmp_1515 > 0;
    goto L39;

  anon42_Then:
    call {:si_unique_call 3009} AllocateIrpAndIrb(deviceExtension_4, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_12] != 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 1;
    goto L32;

  anon39_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_12] == 0;
    goto L1;

  anon33_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1527;
    assume {:nonnull} Tmp_1527 != 0;
    assume Tmp_1527 > 0;
    havoc Tmp_1531;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1531 != 0;
    assume Tmp_1531 > 0;
    havoc vslice_dummy_var_4366;
    Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(CallbackContext)] := vslice_dummy_var_4366;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1532;
    assume {:nonnull} Tmp_1532 != 0;
    assume Tmp_1532 > 0;
    havoc Tmp_1545;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1545 != 0;
    assume Tmp_1545 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_4367;
    call {:si_unique_call 3010} DeAllocateIrpAndIrb(deviceExtension_4, vslice_dummy_var_4367);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 3011} Sbp2InitializeOrb(deviceExtension_4, CallbackContext);
    call {:si_unique_call 3012} Sbp2InsertTailList#0(deviceExtension_4, CallbackContext);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon35_Then:
    goto L1;

  anon34_Then:
    goto L18;

  anon41_Then:
    goto L18;

  anon40_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int)
{
  var {:pointer} Tmp_1513: int;
  var {:pointer} Tmp_1514: int;
  var {:pointer} Tmp_1515: int;
  var {:pointer} Tmp_1516: int;
  var {:pointer} Tmp_1517: int;
  var {:pointer} Tmp_1518: int;
  var {:pointer} Tmp_1519: int;
  var {:pointer} Tmp_1521: int;
  var {:pointer} Tmp_1522: int;
  var {:pointer} Tmp_1523: int;
  var {:pointer} Tmp_1524: int;
  var {:pointer} Tmp_1525: int;
  var {:scalar} Tmp_1526: int;
  var {:pointer} Tmp_1527: int;
  var {:scalar} Tmp_1528: int;
  var {:pointer} Tmp_1529: int;
  var {:pointer} Tmp_1530: int;
  var {:pointer} Tmp_1531: int;
  var {:pointer} Tmp_1532: int;
  var {:pointer} Tmp_1533: int;
  var {:pointer} Tmp_1534: int;
  var {:pointer} Tmp_1535: int;
  var {:pointer} irp_5: int;
  var {:pointer} Tmp_1537: int;
  var {:pointer} Tmp_1538: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_1539: int;
  var {:pointer} Tmp_1540: int;
  var {:pointer} Tmp_1541: int;
  var {:pointer} srb_3: int;
  var {:pointer} packet_12: int;
  var {:scalar} status_45: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_1542: int;
  var {:scalar} Tmp_1543: int;
  var {:pointer} Tmp_1544: int;
  var {:pointer} Tmp_1545: int;
  var {:pointer} deviceExtension_4: int;
  var {:pointer} Tmp_1546: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_4368: int;
  var vslice_dummy_var_4369: int;
  var vslice_dummy_var_4370: int;
  var vslice_dummy_var_4371: int;
  var vslice_dummy_var_4372: int;

  anon0:
    call {:si_unique_call 3013} vslice_dummy_var_473 := __HAVOC_malloc(4);
    call {:si_unique_call 3014} packet_12 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    call {:si_unique_call 3015} Tmp_1529 := __HAVOC_malloc(4);
    call {:si_unique_call 3016} Tmp_1535 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_4368;
    Mem_T.P_IRBIRP[packet_12] := vslice_dummy_var_4368;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1517;
    assume {:nonnull} Tmp_1517 != 0;
    assume Tmp_1517 > 0;
    deviceExtension_4 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1517)];
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc routine_2;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1529;
    assume {:nonnull} Tmp_1529 != 0;
    assume Tmp_1529 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_1539;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1528;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_4369;
    call {:si_unique_call 3017} WPP_SF_qD(Tmp_1528, 45, Tmp_1539, CallbackContext, vslice_dummy_var_4369);
    goto L18;

  L18:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L32;

  L32:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1540;
    assume {:nonnull} Tmp_1540 != 0;
    assume Tmp_1540 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1538;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1518;
    assume {:nonnull} Tmp_1518 != 0;
    assume Tmp_1518 > 0;
    assume {:nonnull} Tmp_1538 != 0;
    assume Tmp_1538 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1544;
    assume {:nonnull} Tmp_1544 != 0;
    assume Tmp_1544 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1516;
    assume {:nonnull} Tmp_1516 != 0;
    assume Tmp_1516 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1524;
    assume {:nonnull} Tmp_1524 != 0;
    assume Tmp_1524 > 0;
    goto L39;

  L39:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1525;
    assume {:nonnull} Tmp_1525 != 0;
    assume Tmp_1525 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1533;
    assume {:nonnull} Tmp_1533 != 0;
    assume Tmp_1533 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1542;
    assume {:nonnull} Tmp_1542 != 0;
    assume Tmp_1542 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1530;
    assume {:nonnull} Tmp_1530 != 0;
    assume Tmp_1530 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1546;
    assume {:nonnull} Tmp_1546 != 0;
    assume Tmp_1546 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1534;
    assume {:nonnull} Tmp_1534 != 0;
    assume Tmp_1534 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1519;
    assume {:nonnull} Tmp_1519 != 0;
    assume Tmp_1519 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1521;
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1541;
    assume {:nonnull} Tmp_1541 != 0;
    assume Tmp_1541 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1513;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1514;
    assume {:nonnull} Tmp_1513 != 0;
    assume Tmp_1513 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1522;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1522 != 0;
    assume Tmp_1522 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1523;
    assume {:nonnull} Tmp_1523 != 0;
    assume Tmp_1523 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    assume routine_2 == 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} status_45 != 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1535;
    assume {:nonnull} Tmp_1535 != 0;
    assume Tmp_1535 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    Tmp_1543 := bDirectCall;
    havoc Tmp_1537;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1526;
    call {:si_unique_call 3018} WPP_SF_qD(Tmp_1526, 46, Tmp_1537, CallbackContext, Tmp_1543);
    goto L62;

  L62:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    call {:si_unique_call 3019} DeAllocateIrpAndIrb(deviceExtension_4, Mem_T.P_IRBIRP[packet_12]);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(CallbackContext)] := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb_3;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 3020} vslice_dummy_var_475 := FreeAsyncRequestContext(deviceExtension_4, CallbackContext);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    havoc irp_5;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    assume {:nonnull} irp_5 != 0;
    assume irp_5 > 0;
    call {:si_unique_call 3021} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc vslice_dummy_var_4370;
    call {:si_unique_call 3022} Sbp2StartNextPacketByKey#0(vslice_dummy_var_4370, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 3023} vslice_dummy_var_474 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), irp_5);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  anon38_Then:
    goto L62;

  anon44_Then:
    goto L62;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L62;

  anon36_Then:
    assume {:partition} status_45 == 0;
    goto L1;

  anon43_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_12] != 0;
    assume Mem_T.P_IRBIRP[packet_12] > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1515;
    assume {:nonnull} Tmp_1515 != 0;
    assume Tmp_1515 > 0;
    goto L39;

  anon42_Then:
    call {:si_unique_call 3024} AllocateIrpAndIrb(deviceExtension_4, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_12] != 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 1;
    goto L32;

  anon39_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_12] == 0;
    goto L1;

  anon33_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1527;
    assume {:nonnull} Tmp_1527 != 0;
    assume Tmp_1527 > 0;
    havoc Tmp_1531;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1531 != 0;
    assume Tmp_1531 > 0;
    havoc vslice_dummy_var_4371;
    Mem_T.PVOID[DataMappingHandle__ASYNC_REQUEST_CONTEXT(CallbackContext)] := vslice_dummy_var_4371;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1532;
    assume {:nonnull} Tmp_1532 != 0;
    assume Tmp_1532 > 0;
    havoc Tmp_1545;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1545 != 0;
    assume Tmp_1545 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_4372;
    call {:si_unique_call 3025} DeAllocateIrpAndIrb(deviceExtension_4, vslice_dummy_var_4372);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 3026} Sbp2InitializeOrb(deviceExtension_4, CallbackContext);
    call {:si_unique_call 3027} Sbp2InsertTailList#1(deviceExtension_4, CallbackContext);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon35_Then:
    goto L1;

  anon34_Then:
    goto L18;

  anon41_Then:
    goto L18;

  anon40_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#0(actual_PdoExtension_26: int) returns (Tmp_2524: int)
{
  var {:scalar} i_8: int;
  var {:pointer} Tmp_2525: int;
  var {:pointer} Tmp_2527: int;
  var {:pointer} Tmp_2528: int;
  var {:pointer} deviceObject_4: int;
  var {:scalar} Tmp_2529: int;
  var {:pointer} Tmp_2530: int;
  var {:scalar} orbLock_10: int;
  var {:pointer} context_4: int;
  var {:scalar} Tmp_2531: int;
  var {:scalar} Tmp_2532: int;
  var {:pointer} Tmp_2533: int;
  var {:pointer} oldContext: int;
  var {:pointer} Tmp_2534: int;
  var {:pointer} sdv_818: int;
  var {:pointer} sdv_819: int;
  var {:pointer} Tmp_2535: int;
  var {:pointer} Tmp_2536: int;
  var {:scalar} status_80: int;
  var {:pointer} Tmp_2537: int;
  var {:pointer} Tmp_2538: int;
  var {:pointer} Tmp_2539: int;
  var {:pointer} PdoExtension_26: int;
  var vslice_dummy_var_476: int;

  anon0:
    call {:si_unique_call 3028} orbLock_10 := __HAVOC_malloc(12);
    PdoExtension_26 := actual_PdoExtension_26;
    call {:si_unique_call 3029} Tmp_2527 := __HAVOC_malloc(1856);
    call {:si_unique_call 3030} Tmp_2530 := __HAVOC_malloc(4);
    call {:si_unique_call 3031} Tmp_2537 := __HAVOC_malloc(1856);
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc deviceObject_4;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    Tmp_2524 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon77_Then:
    assume false;
    return;
}



procedure {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#0(actual_PdoExtension_26: int) returns (Tmp_2524: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2524 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#1(actual_PdoExtension_26: int) returns (Tmp_2524: int)
{
  var {:scalar} i_8: int;
  var {:pointer} Tmp_2525: int;
  var {:pointer} Tmp_2527: int;
  var {:pointer} Tmp_2528: int;
  var {:pointer} deviceObject_4: int;
  var {:scalar} Tmp_2529: int;
  var {:pointer} Tmp_2530: int;
  var {:scalar} orbLock_10: int;
  var {:pointer} context_4: int;
  var {:scalar} Tmp_2531: int;
  var {:scalar} Tmp_2532: int;
  var {:pointer} Tmp_2533: int;
  var {:pointer} oldContext: int;
  var {:pointer} Tmp_2534: int;
  var {:pointer} sdv_818: int;
  var {:pointer} sdv_819: int;
  var {:pointer} Tmp_2535: int;
  var {:pointer} Tmp_2536: int;
  var {:scalar} status_80: int;
  var {:pointer} Tmp_2537: int;
  var {:pointer} Tmp_2538: int;
  var {:pointer} Tmp_2539: int;
  var {:pointer} PdoExtension_26: int;
  var vslice_dummy_var_477: int;

  anon0:
    call {:si_unique_call 3032} orbLock_10 := __HAVOC_malloc(12);
    PdoExtension_26 := actual_PdoExtension_26;
    call {:si_unique_call 3033} Tmp_2527 := __HAVOC_malloc(1856);
    call {:si_unique_call 3034} Tmp_2530 := __HAVOC_malloc(4);
    call {:si_unique_call 3035} Tmp_2537 := __HAVOC_malloc(1856);
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc deviceObject_4;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    Tmp_2524 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon77_Then:
    call {:si_unique_call 3036} CleanupOrbList#0(PdoExtension_26, -1073741248);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3037} status_80 := Sbp2UpdateNodeInformation#1(PdoExtension_26);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_80 < 0;
    goto L70;

  L70:
    Tmp_2524 := status_80;
    goto L1;

  anon61_Then:
    assume {:partition} 0 <= status_80;
    call {:si_unique_call 3038} status_80 := Sbp2GetControllerInfo#1(PdoExtension_26);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} status_80 < 0;
    goto L70;

  anon62_Then:
    assume {:partition} 0 <= status_80;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(TaskOrbStatusContext__DEVICE_EXTENSION(PdoExtension_26))] != 0;
    goto L37;

  L37:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(ManagementOrbStatusContext__DEVICE_EXTENSION(PdoExtension_26))] != 0;
    goto L41;

  L41:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(GlobalStatusContext__DEVICE_EXTENSION(PdoExtension_26))] != 0;
    goto L45;

  L45:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(CommonBufferContext__DEVICE_EXTENSION(PdoExtension_26))] != 0;
    goto L53;

  L53:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    i_8 := 0;
    goto L56;

  L56:
    call {:si_unique_call 3039} i_8, context_4 := Sbp2InitializeDeviceExtension#1_loop_L56(i_8, context_4, PdoExtension_26);
    goto L56_last;

  L56_last:
    assume {:CounterLoop 8} {:Counter "i_8"} true;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} 8 > i_8;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc context_4;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    i_8 := i_8 + 1;
    goto anon67_Else_dummy;

  anon67_Else_dummy:
    assume false;
    return;

  anon67_Then:
    assume {:partition} i_8 >= 8;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(DummyContext__DEVICE_EXTENSION(PdoExtension_26))] != 0;
    goto L69;

  L69:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2530;
    assume {:nonnull} Tmp_2530 != 0;
    assume Tmp_2530 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_2534;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2531;
    call {:si_unique_call 3040} WPP_SF_q(Tmp_2531, 30, Tmp_2534, PdoExtension_26);
    goto L70;

  anon69_Then:
    goto L70;

  anon83_Then:
    goto L70;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L70;

  anon82_Then:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(DummyContext__DEVICE_EXTENSION(PdoExtension_26))] == 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3041} status_80 := AllocateSingle1394Address#1(deviceObject_4, Dummy__DEVICE_EXTENSION(PdoExtension_26), 40, 3, DummyContext__DEVICE_EXTENSION(PdoExtension_26));
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} status_80 < 0;
    goto L70;

  anon70_Then:
    assume {:partition} 0 <= status_80;
    goto L69;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    status_80 := -1073741670;
    goto L70;

  anon81_Then:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(CommonBufferContext__DEVICE_EXTENSION(PdoExtension_26))] == 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3042} status_80 := AllocateSingle1394Address#1(deviceObject_4, 0, 536, 3, CommonBufferContext__DEVICE_EXTENSION(PdoExtension_26));
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} yogi_error != 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_80 >= 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2528;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2528 != 0;
    assume Tmp_2528 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2535;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2535 != 0;
    assume Tmp_2535 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2539;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2539 != 0;
    assume Tmp_2539 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2533;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2533 != 0;
    assume Tmp_2533 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2536;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2536 != 0;
    assume Tmp_2536 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3043} AcquireOrbListLock(PdoExtension_26, orbLock_10, 0);
    i_8 := 0;
    context_4 := 0;
    goto L105;

  L105:
    call {:si_unique_call 3044} i_8, Tmp_2525, Tmp_2527, Tmp_2529, context_4, Tmp_2532, oldContext, sdv_818, sdv_819, Tmp_2537, Tmp_2538 := Sbp2InitializeDeviceExtension#1_loop_L105(i_8, Tmp_2525, Tmp_2527, Tmp_2529, context_4, Tmp_2532, oldContext, sdv_818, sdv_819, Tmp_2537, Tmp_2538, PdoExtension_26);
    goto L105_last;

  L105_last:
    assume {:CounterLoop 8} {:Counter "i_8"} true;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} 8 > i_8;
    oldContext := context_4;
    call {:si_unique_call 3045} sdv_819 := sdv_ExInterlockedPopEntrySList(0, 0);
    context_4 := sdv_819;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} context_4 != 0;
    call {:si_unique_call 3046} sdv_818 := sdv_containing_record(context_4, 8);
    context_4 := sdv_818;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} context_4 != 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    Tmp_2532 := i_8;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2538;
    assume {:nonnull} Tmp_2538 != 0;
    assume Tmp_2538 > 0;
    havoc Tmp_2537;
    assume {:nonnull} Tmp_2537 != 0;
    assume Tmp_2537 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    Tmp_2529 := i_8;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2525;
    assume {:nonnull} Tmp_2525 != 0;
    assume Tmp_2525 > 0;
    havoc Tmp_2527;
    assume {:nonnull} Tmp_2527 != 0;
    assume Tmp_2527 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    i_8 := i_8 + 1;
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    assume false;
    return;

  anon87_Then:
    assume {:partition} context_4 == 0;
    status_80 := -1073741670;
    call {:si_unique_call 3047} ReleaseOrbListLock(PdoExtension_26, orbLock_10, 0);
    goto L70;

  anon86_Then:
    assume {:partition} context_4 == 0;
    status_80 := -1073741670;
    call {:si_unique_call 3048} ReleaseOrbListLock(PdoExtension_26, orbLock_10, 0);
    goto L70;

  anon72_Then:
    assume {:partition} i_8 >= 8;
    goto L106;

  L106:
    call {:si_unique_call 3049} context_4, oldContext, vslice_dummy_var_477 := Sbp2InitializeDeviceExtension#1_loop_L106(context_4, oldContext, vslice_dummy_var_477);
    goto L106_last;

  L106_last:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} context_4 != 0;
    oldContext := context_4;
    call {:si_unique_call 3050} vslice_dummy_var_477 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    havoc context_4;
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    goto anon73_Else_dummy;

  anon73_Else_dummy:
    assume false;
    return;

  anon73_Then:
    assume {:partition} context_4 == 0;
    call {:si_unique_call 3051} ReleaseOrbListLock(PdoExtension_26, orbLock_10, 0);
    goto L53;

  anon71_Then:
    assume {:partition} 0 > status_80;
    goto L70;

  anon85_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(GlobalStatusContext__DEVICE_EXTENSION(PdoExtension_26))] == 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3052} status_80 := AllocateAddressForStatus#1(deviceObject_4, GlobalStatusContext__DEVICE_EXTENSION(PdoExtension_26), 8);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} status_80 < 0;
    goto L70;

  anon74_Then:
    assume {:partition} 0 <= status_80;
    goto L45;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(ManagementOrbStatusContext__DEVICE_EXTENSION(PdoExtension_26))] == 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3053} status_80 := AllocateAddressForStatus#1(deviceObject_4, ManagementOrbStatusContext__DEVICE_EXTENSION(PdoExtension_26), 4);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} status_80 < 0;
    goto L70;

  anon75_Then:
    assume {:partition} 0 <= status_80;
    goto L41;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:partition} Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(TaskOrbStatusContext__DEVICE_EXTENSION(PdoExtension_26))] == 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 3054} status_80 := AllocateAddressForStatus#1(deviceObject_4, TaskOrbStatusContext__DEVICE_EXTENSION(PdoExtension_26), 2);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_80 < 0;
    goto L70;

  anon76_Then:
    assume {:partition} 0 <= status_80;
    goto L37;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#1(actual_PdoExtension_26: int) returns (Tmp_2524: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#0(actual_DeviceObject_29: int, actual_Context_16: int, actual_StatusType: int) returns (Tmp_1455: int)
{
  var {:pointer} Tmp_1456: int;
  var {:pointer} Tmp_1457: int;
  var {:pointer} Tmp_1458: int;
  var {:pointer} Tmp_1459: int;
  var {:pointer} Tmp_1460: int;
  var {:pointer} Tmp_1461: int;
  var {:pointer} Tmp_1463: int;
  var {:pointer} Tmp_1464: int;
  var {:pointer} Tmp_1465: int;
  var {:pointer} Tmp_1466: int;
  var {:pointer} Tmp_1467: int;
  var {:pointer} Tmp_1468: int;
  var {:pointer} Tmp_1469: int;
  var {:pointer} Tmp_1470: int;
  var {:pointer} Tmp_1471: int;
  var {:pointer} Tmp_1472: int;
  var {:pointer} Tmp_1473: int;
  var {:scalar} status_43: int;
  var {:pointer} packet_11: int;
  var {:pointer} Tmp_1474: int;
  var {:pointer} Tmp_1475: int;
  var {:pointer} Tmp_1476: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_1477: int;
  var {:pointer} Tmp_1478: int;
  var {:pointer} Tmp_1479: int;
  var {:pointer} DeviceObject_29: int;
  var {:pointer} Context_16: int;
  var {:scalar} StatusType: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 3055} packet_11 := __HAVOC_malloc(4);
    DeviceObject_29 := actual_DeviceObject_29;
    Context_16 := actual_Context_16;
    StatusType := actual_StatusType;
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    deviceExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_29)];
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    Mem_T.P_IRBIRP[packet_11] := 0;
    call {:si_unique_call 3056} AllocateIrpAndIrb(deviceExtension_3, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_11] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1471;
    assume {:nonnull} Tmp_1471 != 0;
    assume Tmp_1471 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1465;
    assume {:nonnull} Tmp_1465 != 0;
    assume Tmp_1465 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1460;
    assume {:nonnull} Tmp_1460 != 0;
    assume Tmp_1460 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1467;
    assume {:nonnull} Tmp_1467 != 0;
    assume Tmp_1467 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1472;
    assume {:nonnull} Tmp_1472 != 0;
    assume Tmp_1472 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1461;
    assume {:nonnull} Tmp_1461 != 0;
    assume Tmp_1461 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1466;
    assume {:nonnull} Tmp_1466 != 0;
    assume Tmp_1466 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1457;
    assume {:nonnull} Tmp_1457 != 0;
    assume Tmp_1457 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1475;
    assume {:nonnull} Tmp_1475 != 0;
    assume Tmp_1475 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1468;
    assume {:nonnull} Tmp_1468 != 0;
    assume Tmp_1468 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1464;
    assume {:nonnull} Tmp_1464 != 0;
    assume Tmp_1464 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1470;
    assume {:nonnull} Tmp_1470 != 0;
    assume Tmp_1470 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1458;
    assume {:nonnull} Tmp_1458 != 0;
    assume Tmp_1458 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} StatusType != 2;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} StatusType != 4;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusType == 8;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1459;
    assume {:nonnull} Tmp_1459 != 0;
    assume Tmp_1459 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1469;
    assume {:nonnull} Tmp_1469 != 0;
    assume Tmp_1469 > 0;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    assume {:nonnull} Tmp_1469 != 0;
    assume Tmp_1469 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1456;
    assume {:nonnull} Tmp_1456 != 0;
    assume Tmp_1456 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1478;
    assume {:nonnull} Tmp_1478 != 0;
    assume Tmp_1478 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L27;

  L27:
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L55;

  L55:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1479;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    assume {:nonnull} Tmp_1479 != 0;
    assume Tmp_1479 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1477;
    assume {:nonnull} Tmp_1477 != 0;
    assume Tmp_1477 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1463;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    assume {:nonnull} Tmp_1463 != 0;
    assume Tmp_1463 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    assume false;
    return;

  anon20_Then:
    goto L55;

  anon24_Then:
    assume {:partition} StatusType != 8;
    goto L27;

  anon25_Then:
    assume {:partition} StatusType == 4;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1473;
    assume {:nonnull} Tmp_1473 != 0;
    assume Tmp_1473 > 0;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    call {:si_unique_call 3057} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    status_43 := -1073741670;
    goto L43;

  L43:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    call {:si_unique_call 3058} DeAllocateIrpAndIrb(deviceExtension_3, Mem_T.P_IRBIRP[packet_11]);
    Tmp_1455 := status_43;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon21_Then:
    goto L27;

  anon26_Then:
    assume {:partition} StatusType == 2;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1476;
    assume {:nonnull} Tmp_1476 != 0;
    assume Tmp_1476 > 0;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    call {:si_unique_call 3059} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    status_43 := -1073741670;
    goto L43;

  anon22_Then:
    goto L27;

  anon19_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_11] == 0;
    Tmp_1455 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#0(actual_DeviceObject_29: int, actual_Context_16: int, actual_StatusType: int) returns (Tmp_1455: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} Tmp_1455 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#1(actual_DeviceObject_29: int, actual_Context_16: int, actual_StatusType: int) returns (Tmp_1455: int)
{
  var {:pointer} Tmp_1456: int;
  var {:pointer} Tmp_1457: int;
  var {:pointer} Tmp_1458: int;
  var {:pointer} Tmp_1459: int;
  var {:pointer} Tmp_1460: int;
  var {:pointer} Tmp_1461: int;
  var {:pointer} Tmp_1463: int;
  var {:pointer} Tmp_1464: int;
  var {:pointer} Tmp_1465: int;
  var {:pointer} Tmp_1466: int;
  var {:pointer} Tmp_1467: int;
  var {:pointer} Tmp_1468: int;
  var {:pointer} Tmp_1469: int;
  var {:pointer} Tmp_1470: int;
  var {:pointer} Tmp_1471: int;
  var {:pointer} Tmp_1472: int;
  var {:pointer} Tmp_1473: int;
  var {:scalar} status_43: int;
  var {:pointer} packet_11: int;
  var {:pointer} Tmp_1474: int;
  var {:pointer} Tmp_1475: int;
  var {:pointer} Tmp_1476: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_1477: int;
  var {:pointer} Tmp_1478: int;
  var {:pointer} Tmp_1479: int;
  var {:pointer} DeviceObject_29: int;
  var {:pointer} Context_16: int;
  var {:scalar} StatusType: int;
  var boogieTmp: int;
  var vslice_dummy_var_4373: int;

  anon0:
    call {:si_unique_call 3060} packet_11 := __HAVOC_malloc(4);
    DeviceObject_29 := actual_DeviceObject_29;
    Context_16 := actual_Context_16;
    StatusType := actual_StatusType;
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    deviceExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_29)];
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    Mem_T.P_IRBIRP[packet_11] := 0;
    call {:si_unique_call 3061} AllocateIrpAndIrb(deviceExtension_3, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_11] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1471;
    assume {:nonnull} Tmp_1471 != 0;
    assume Tmp_1471 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1465;
    assume {:nonnull} Tmp_1465 != 0;
    assume Tmp_1465 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1460;
    assume {:nonnull} Tmp_1460 != 0;
    assume Tmp_1460 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1467;
    assume {:nonnull} Tmp_1467 != 0;
    assume Tmp_1467 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1472;
    assume {:nonnull} Tmp_1472 != 0;
    assume Tmp_1472 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1461;
    assume {:nonnull} Tmp_1461 != 0;
    assume Tmp_1461 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1466;
    assume {:nonnull} Tmp_1466 != 0;
    assume Tmp_1466 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1457;
    assume {:nonnull} Tmp_1457 != 0;
    assume Tmp_1457 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1475;
    assume {:nonnull} Tmp_1475 != 0;
    assume Tmp_1475 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1468;
    assume {:nonnull} Tmp_1468 != 0;
    assume Tmp_1468 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1464;
    assume {:nonnull} Tmp_1464 != 0;
    assume Tmp_1464 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1470;
    assume {:nonnull} Tmp_1470 != 0;
    assume Tmp_1470 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1458;
    assume {:nonnull} Tmp_1458 != 0;
    assume Tmp_1458 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} StatusType != 2;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} StatusType != 4;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusType == 8;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1459;
    assume {:nonnull} Tmp_1459 != 0;
    assume Tmp_1459 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1469;
    assume {:nonnull} Tmp_1469 != 0;
    assume Tmp_1469 > 0;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    assume {:nonnull} Tmp_1469 != 0;
    assume Tmp_1469 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1456;
    assume {:nonnull} Tmp_1456 != 0;
    assume Tmp_1456 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1478;
    assume {:nonnull} Tmp_1478 != 0;
    assume Tmp_1478 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L27;

  L27:
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L55;

  L55:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1479;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    assume {:nonnull} Tmp_1479 != 0;
    assume Tmp_1479 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1477;
    assume {:nonnull} Tmp_1477 != 0;
    assume Tmp_1477 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1463;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    assume {:nonnull} Tmp_1463 != 0;
    assume Tmp_1463 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    call {:si_unique_call 3062} status_43 := Sbp2SendRequest#0(deviceExtension_3, Mem_T.P_IRBIRP[packet_11], 2);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_43 >= 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1474;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    assume {:nonnull} Tmp_1474 != 0;
    assume Tmp_1474 > 0;
    havoc vslice_dummy_var_4373;
    Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_16)] := vslice_dummy_var_4373;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    call {:si_unique_call 3063} DeAllocateIrpAndIrb(deviceExtension_3, Mem_T.P_IRBIRP[packet_11]);
    Tmp_1455 := status_43;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon23_Then:
    assume {:partition} 0 > status_43;
    goto L43;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    goto L55;

  anon24_Then:
    assume {:partition} StatusType != 8;
    goto L27;

  anon25_Then:
    assume {:partition} StatusType == 4;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1473;
    assume {:nonnull} Tmp_1473 != 0;
    assume Tmp_1473 > 0;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    call {:si_unique_call 3064} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    status_43 := -1073741670;
    goto L43;

  anon21_Then:
    goto L27;

  anon26_Then:
    assume {:partition} StatusType == 2;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_11] != 0;
    assume Mem_T.P_IRBIRP[packet_11] > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1476;
    assume {:nonnull} Tmp_1476 != 0;
    assume Tmp_1476 > 0;
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    call {:si_unique_call 3065} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_16 != 0;
    assume Context_16 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    status_43 := -1073741670;
    goto L43;

  anon22_Then:
    goto L27;

  anon19_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_11] == 0;
    Tmp_1455 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#1(actual_DeviceObject_29: int, actual_Context_16: int, actual_StatusType: int) returns (Tmp_1455: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#0(actual_DeviceObject_28: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_14: int) returns (Tmp_1363: int)
{
  var {:pointer} Tmp_1364: int;
  var {:pointer} Tmp_1365: int;
  var {:pointer} Tmp_1366: int;
  var {:pointer} Tmp_1367: int;
  var {:pointer} Tmp_1368: int;
  var {:pointer} Tmp_1369: int;
  var {:pointer} Tmp_1370: int;
  var {:pointer} Tmp_1371: int;
  var {:pointer} Tmp_1372: int;
  var {:pointer} Tmp_1373: int;
  var {:pointer} Tmp_1374: int;
  var {:pointer} Tmp_1375: int;
  var {:pointer} Tmp_1376: int;
  var {:pointer} Tmp_1377: int;
  var {:pointer} Tmp_1378: int;
  var {:pointer} Tmp_1379: int;
  var {:pointer} Tmp_1380: int;
  var {:pointer} packet_9: int;
  var {:scalar} status_39: int;
  var {:pointer} Tmp_1381: int;
  var {:pointer} Tmp_1382: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} Tmp_1384: int;
  var {:pointer} Tmp_1385: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} Buffer: int;
  var {:scalar} Length_6: int;
  var {:scalar} AccessType: int;
  var {:pointer} Context_14: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 3066} packet_9 := __HAVOC_malloc(4);
    DeviceObject_28 := actual_DeviceObject_28;
    Buffer := actual_Buffer;
    Length_6 := actual_Length_6;
    AccessType := actual_AccessType;
    Context_14 := actual_Context_14;
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    deviceExtension_2 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_28)];
    call {:si_unique_call 3067} AllocateIrpAndIrb(deviceExtension_2, packet_9);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_9] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1365;
    assume {:nonnull} Tmp_1365 != 0;
    assume Tmp_1365 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1374;
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1364;
    assume {:nonnull} Tmp_1364 != 0;
    assume Tmp_1364 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1382;
    assume {:nonnull} Tmp_1382 != 0;
    assume Tmp_1382 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1375;
    assume {:nonnull} Tmp_1375 != 0;
    assume Tmp_1375 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1373;
    assume {:nonnull} Tmp_1373 != 0;
    assume Tmp_1373 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1376;
    assume {:nonnull} Tmp_1376 != 0;
    assume Tmp_1376 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1378;
    assume {:nonnull} Tmp_1378 != 0;
    assume Tmp_1378 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1366;
    assume {:nonnull} Tmp_1366 != 0;
    assume Tmp_1366 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1380;
    assume {:nonnull} Tmp_1380 != 0;
    assume Tmp_1380 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1384;
    assume {:nonnull} Tmp_1384 != 0;
    assume Tmp_1384 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1367;
    assume {:nonnull} Tmp_1367 != 0;
    assume Tmp_1367 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1377;
    assume {:nonnull} Tmp_1377 != 0;
    assume Tmp_1377 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1369;
    assume {:nonnull} Tmp_1369 != 0;
    assume Tmp_1369 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1368;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Tmp_1368 != 0;
    assume Tmp_1368 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Buffer != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1379;
    assume {:nonnull} Tmp_1379 != 0;
    assume Tmp_1379 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    call {:si_unique_call 3068} boogieTmp := IoAllocateMdl(0, Length_6, 0, 0, 0);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1372;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Tmp_1372 != 0;
    assume Tmp_1372 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    assume false;
    return;

  anon14_Then:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    call {:si_unique_call 3069} DeAllocateIrpAndIrb(deviceExtension_2, Mem_T.P_IRBIRP[packet_9]);
    Tmp_1363 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    assume {:partition} Buffer == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1385;
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1371;
    assume {:nonnull} Tmp_1371 != 0;
    assume Tmp_1371 > 0;
    goto L43;

  anon13_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_9] == 0;
    Tmp_1363 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#0(actual_DeviceObject_28: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_14: int) returns (Tmp_1363: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} Tmp_1363 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#1(actual_DeviceObject_28: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_14: int) returns (Tmp_1363: int)
{
  var {:pointer} Tmp_1364: int;
  var {:pointer} Tmp_1365: int;
  var {:pointer} Tmp_1366: int;
  var {:pointer} Tmp_1367: int;
  var {:pointer} Tmp_1368: int;
  var {:pointer} Tmp_1369: int;
  var {:pointer} Tmp_1370: int;
  var {:pointer} Tmp_1371: int;
  var {:pointer} Tmp_1372: int;
  var {:pointer} Tmp_1373: int;
  var {:pointer} Tmp_1374: int;
  var {:pointer} Tmp_1375: int;
  var {:pointer} Tmp_1376: int;
  var {:pointer} Tmp_1377: int;
  var {:pointer} Tmp_1378: int;
  var {:pointer} Tmp_1379: int;
  var {:pointer} Tmp_1380: int;
  var {:pointer} packet_9: int;
  var {:scalar} status_39: int;
  var {:pointer} Tmp_1381: int;
  var {:pointer} Tmp_1382: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} Tmp_1384: int;
  var {:pointer} Tmp_1385: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} Buffer: int;
  var {:scalar} Length_6: int;
  var {:scalar} AccessType: int;
  var {:pointer} Context_14: int;
  var boogieTmp: int;
  var vslice_dummy_var_4374: int;

  anon0:
    call {:si_unique_call 3070} packet_9 := __HAVOC_malloc(4);
    DeviceObject_28 := actual_DeviceObject_28;
    Buffer := actual_Buffer;
    Length_6 := actual_Length_6;
    AccessType := actual_AccessType;
    Context_14 := actual_Context_14;
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    deviceExtension_2 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_28)];
    call {:si_unique_call 3071} AllocateIrpAndIrb(deviceExtension_2, packet_9);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_9] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1365;
    assume {:nonnull} Tmp_1365 != 0;
    assume Tmp_1365 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1374;
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1364;
    assume {:nonnull} Tmp_1364 != 0;
    assume Tmp_1364 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1382;
    assume {:nonnull} Tmp_1382 != 0;
    assume Tmp_1382 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1375;
    assume {:nonnull} Tmp_1375 != 0;
    assume Tmp_1375 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1373;
    assume {:nonnull} Tmp_1373 != 0;
    assume Tmp_1373 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1376;
    assume {:nonnull} Tmp_1376 != 0;
    assume Tmp_1376 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1378;
    assume {:nonnull} Tmp_1378 != 0;
    assume Tmp_1378 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1366;
    assume {:nonnull} Tmp_1366 != 0;
    assume Tmp_1366 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1380;
    assume {:nonnull} Tmp_1380 != 0;
    assume Tmp_1380 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1384;
    assume {:nonnull} Tmp_1384 != 0;
    assume Tmp_1384 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1367;
    assume {:nonnull} Tmp_1367 != 0;
    assume Tmp_1367 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1377;
    assume {:nonnull} Tmp_1377 != 0;
    assume Tmp_1377 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1369;
    assume {:nonnull} Tmp_1369 != 0;
    assume Tmp_1369 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1368;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Tmp_1368 != 0;
    assume Tmp_1368 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Buffer != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1379;
    assume {:nonnull} Tmp_1379 != 0;
    assume Tmp_1379 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    call {:si_unique_call 3072} boogieTmp := IoAllocateMdl(0, Length_6, 0, 0, 0);
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1372;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Tmp_1372 != 0;
    assume Tmp_1372 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    call {:si_unique_call 3073} status_39 := Sbp2SendRequest#0(deviceExtension_2, Mem_T.P_IRBIRP[packet_9], 2);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_39 >= 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1370;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Tmp_1370 != 0;
    assume Tmp_1370 > 0;
    havoc vslice_dummy_var_4374;
    Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(Context_14)] := vslice_dummy_var_4374;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Buffer == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1381;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    assume {:nonnull} Tmp_1381 != 0;
    assume Tmp_1381 > 0;
    assume {:nonnull} Context_14 != 0;
    assume Context_14 > 0;
    call {:si_unique_call 3074} boogieTmp := sdv_MmGetMdlVirtualAddress(0);
    goto L48;

  L48:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    call {:si_unique_call 3075} DeAllocateIrpAndIrb(deviceExtension_2, Mem_T.P_IRBIRP[packet_9]);
    Tmp_1363 := status_39;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} Buffer != 0;
    goto L48;

  anon15_Then:
    assume {:partition} 0 > status_39;
    goto L48;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    call {:si_unique_call 3076} DeAllocateIrpAndIrb(deviceExtension_2, Mem_T.P_IRBIRP[packet_9]);
    Tmp_1363 := -1073741670;
    goto L1;

  anon16_Then:
    assume {:partition} Buffer == 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1385;
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_9] != 0;
    assume Mem_T.P_IRBIRP[packet_9] > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1371;
    assume {:nonnull} Tmp_1371 != 0;
    assume Tmp_1371 > 0;
    goto L43;

  anon13_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_9] == 0;
    Tmp_1363 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#1(actual_DeviceObject_28: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_14: int) returns (Tmp_1363: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#0(actual_PdoExtension_10: int) returns (Tmp_638: int)
{
  var {:pointer} Tmp_639: int;
  var {:pointer} nextListItem_1: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:pointer} Tmp_642: int;
  var {:pointer} Tmp_643: int;
  var {:scalar} orbLock_2: int;
  var {:pointer} Tmp_644: int;
  var {:scalar} Tmp_645: int;
  var {:scalar} sdv_201: int;
  var {:pointer} Tmp_646: int;
  var {:scalar} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:pointer} sdv_202: int;
  var {:scalar} sdv_203: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_205: int;
  var {:pointer} sdv_206: int;
  var {:scalar} sdv_207: int;
  var {:pointer} Tmp_649: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_650: int;
  var {:scalar} sdv_208: int;
  var {:scalar} status_17: int;
  var {:pointer} packet_4: int;
  var {:pointer} Tmp_651: int;
  var {:pointer} Tmp_652: int;
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} PdoExtension_10: int;

  anon0:
    call {:si_unique_call 3077} orbLock_2 := __HAVOC_malloc(12);
    call {:si_unique_call 3078} packet_4 := __HAVOC_malloc(4);
    PdoExtension_10 := actual_PdoExtension_10;
    call {:si_unique_call 3079} Tmp_646 := __HAVOC_malloc(4);
    call {:si_unique_call 3080} Tmp_648 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    Mem_T.P_IRBIRP[packet_4] := 0;
    call {:si_unique_call 3081} status_17 := Sbp2GetGenerationCount#0(PdoExtension_10);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_17 < 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_640;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_645;
    call {:si_unique_call 3082} WPP_SF_qD(Tmp_645, 61, Tmp_640, PdoExtension_10, status_17);
    goto L95;

  L95:
    Tmp_638 := status_17;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon35_Then:
    goto L95;

  anon39_Then:
    goto L95;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon27_Then:
    assume {:partition} 0 <= status_17;
    call {:si_unique_call 3083} AllocateIrpAndIrb(PdoExtension_10, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_4] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_642;
    assume {:nonnull} Tmp_642 != 0;
    assume Tmp_642 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_641;
    assume {:nonnull} Tmp_641 != 0;
    assume Tmp_641 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume false;
    return;

  anon28_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_4] == 0;
    Tmp_638 := -1073741670;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#0(actual_PdoExtension_10: int) returns (Tmp_638: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#1(actual_PdoExtension_10: int) returns (Tmp_638: int)
{
  var {:pointer} Tmp_639: int;
  var {:pointer} nextListItem_1: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:pointer} Tmp_642: int;
  var {:pointer} Tmp_643: int;
  var {:scalar} orbLock_2: int;
  var {:pointer} Tmp_644: int;
  var {:scalar} Tmp_645: int;
  var {:scalar} sdv_201: int;
  var {:pointer} Tmp_646: int;
  var {:scalar} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:pointer} sdv_202: int;
  var {:scalar} sdv_203: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_205: int;
  var {:pointer} sdv_206: int;
  var {:scalar} sdv_207: int;
  var {:pointer} Tmp_649: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_650: int;
  var {:scalar} sdv_208: int;
  var {:scalar} status_17: int;
  var {:pointer} packet_4: int;
  var {:pointer} Tmp_651: int;
  var {:pointer} Tmp_652: int;
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} PdoExtension_10: int;
  var vslice_dummy_var_4375: int;
  var vslice_dummy_var_4376: int;

  anon0:
    call {:si_unique_call 3084} orbLock_2 := __HAVOC_malloc(12);
    call {:si_unique_call 3085} packet_4 := __HAVOC_malloc(4);
    PdoExtension_10 := actual_PdoExtension_10;
    call {:si_unique_call 3086} Tmp_646 := __HAVOC_malloc(4);
    call {:si_unique_call 3087} Tmp_648 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    Mem_T.P_IRBIRP[packet_4] := 0;
    call {:si_unique_call 3088} status_17 := Sbp2GetGenerationCount#1(PdoExtension_10);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_17 < 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_640;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_645;
    call {:si_unique_call 3089} WPP_SF_qD(Tmp_645, 61, Tmp_640, PdoExtension_10, status_17);
    goto L95;

  L95:
    Tmp_638 := status_17;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon35_Then:
    goto L95;

  anon39_Then:
    goto L95;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon27_Then:
    assume {:partition} 0 <= status_17;
    call {:si_unique_call 3090} AllocateIrpAndIrb(PdoExtension_10, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_4] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_642;
    assume {:nonnull} Tmp_642 != 0;
    assume Tmp_642 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_641;
    assume {:nonnull} Tmp_641 != 0;
    assume Tmp_641 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 3091} status_17 := Sbp2SendRequest#0(PdoExtension_10, Mem_T.P_IRBIRP[packet_4], 2);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_17 < 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_648;
    assume {:nonnull} Tmp_648 != 0;
    assume Tmp_648 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_649;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_647;
    call {:si_unique_call 3092} WPP_SF_qD(Tmp_647, 62, Tmp_649, PdoExtension_10, status_17);
    goto L57;

  L57:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 3093} DeAllocateIrpAndIrb(PdoExtension_10, Mem_T.P_IRBIRP[packet_4]);
    Tmp_638 := status_17;
    goto L1;

  anon33_Then:
    goto L57;

  anon38_Then:
    goto L57;

  anon32_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L57;

  anon29_Then:
    assume {:partition} 0 <= status_17;
    call {:si_unique_call 3094} Tmp_639 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    call {:si_unique_call 3095} sdv_KeAcquireSpinLock(0, Tmp_639);
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    havoc oldIrql_2;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_4] != 0;
    assume Mem_T.P_IRBIRP[packet_4] > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_644;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    call {:si_unique_call 3096} sdv_KeReleaseSpinLock(0, oldIrql_2);
    call {:si_unique_call 3097} AcquireOrbListLock(PdoExtension_10, orbLock_2, 0);
    call {:si_unique_call 3098} sdv_205 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_205 != 0;
    goto L54;

  L54:
    call {:si_unique_call 3099} ReleaseOrbListLock(PdoExtension_10, orbLock_2, 0);
    goto L57;

  anon30_Then:
    assume {:partition} sdv_205 == 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    havoc vslice_dummy_var_4375;
    call {:si_unique_call 3100} sdv_206 := sdv_containing_record(vslice_dummy_var_4375, 0);
    nextListItem_1 := sdv_206;
    goto L62;

  L62:
    call {:si_unique_call 3101} nextListItem_1, Tmp_643, sdv_202, currentListItem, Tmp_650, Tmp_651, Tmp_652, Tmp_654 := Sbp2UpdateNodeInformation#1_loop_L62(nextListItem_1, Tmp_643, sdv_201, sdv_202, sdv_203, sdv_207, currentListItem, Tmp_650, sdv_208, Tmp_651, Tmp_652, Tmp_654, PdoExtension_10);
    goto L62_last;

  L62_last:
    currentListItem := nextListItem_1;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_651;
    assume {:nonnull} Tmp_651 != 0;
    assume Tmp_651 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_643;
    assume {:nonnull} Tmp_643 != 0;
    assume Tmp_643 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_650;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_650 != 0;
    assume Tmp_650 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_650 != 0;
    assume Tmp_650 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_654;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_652;
    assume {:nonnull} Tmp_652 != 0;
    assume Tmp_652 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc nextListItem_1;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    havoc vslice_dummy_var_4376;
    call {:si_unique_call 3102} sdv_202 := sdv_containing_record(vslice_dummy_var_4376, 0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} currentListItem != sdv_202;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    assume false;
    return;

  anon31_Then:
    assume {:partition} currentListItem == sdv_202;
    goto L54;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_4] == 0;
    Tmp_638 := -1073741670;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#1(actual_PdoExtension_10: int) returns (Tmp_638: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#0(actual_PdoExtension_11: int) returns (Tmp_655: int)
{
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} packet_5: int;
  var {:scalar} status_18: int;
  var {:pointer} PdoExtension_11: int;
  var vslice_dummy_var_478: int;

  anon0:
    call {:si_unique_call 3103} packet_5 := __HAVOC_malloc(4);
    PdoExtension_11 := actual_PdoExtension_11;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    Mem_T.P_IRBIRP[packet_5] := 0;
    status_18 := 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 3104} Tmp_656 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    call {:si_unique_call 3105} sdv_KeAcquireSpinLock(0, Tmp_656);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    havoc oldIrql_3;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    call {:si_unique_call 3106} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_655 := status_18;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    call {:si_unique_call 3107} AllocateIrpAndIrb(PdoExtension_11, packet_5);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_5] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_5] != 0;
    assume Mem_T.P_IRBIRP[packet_5] > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_657;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_5] != 0;
    assume Mem_T.P_IRBIRP[packet_5] > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_658;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    assume false;
    return;

  anon11_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_5] == 0;
    Tmp_655 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#0(actual_PdoExtension_11: int) returns (Tmp_655: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} Tmp_655 == 0 || Tmp_655 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#1(actual_PdoExtension_11: int) returns (Tmp_655: int)
{
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} packet_5: int;
  var {:scalar} status_18: int;
  var {:pointer} PdoExtension_11: int;
  var vslice_dummy_var_479: int;

  anon0:
    call {:si_unique_call 3108} packet_5 := __HAVOC_malloc(4);
    PdoExtension_11 := actual_PdoExtension_11;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    Mem_T.P_IRBIRP[packet_5] := 0;
    status_18 := 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 3109} Tmp_656 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    call {:si_unique_call 3110} sdv_KeAcquireSpinLock(0, Tmp_656);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    havoc oldIrql_3;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    call {:si_unique_call 3111} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_655 := status_18;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    call {:si_unique_call 3112} AllocateIrpAndIrb(PdoExtension_11, packet_5);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_5] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_5] != 0;
    assume Mem_T.P_IRBIRP[packet_5] > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_657;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_5] != 0;
    assume Mem_T.P_IRBIRP[packet_5] > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_658;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    call {:si_unique_call 3113} status_18 := Sbp2SendRequest#0(PdoExtension_11, Mem_T.P_IRBIRP[packet_5], 2);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_18 >= 0;
    call {:si_unique_call 3114} Tmp_656 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    call {:si_unique_call 3115} sdv_KeAcquireSpinLock(0, Tmp_656);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    havoc oldIrql_3;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_5] != 0;
    assume Mem_T.P_IRBIRP[packet_5] > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_659;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    assume {:nonnull} Tmp_659 != 0;
    assume Tmp_659 > 0;
    call {:si_unique_call 3116} sdv_KeReleaseSpinLock(0, oldIrql_3);
    goto L39;

  L39:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    call {:si_unique_call 3117} DeAllocateIrpAndIrb(PdoExtension_11, Mem_T.P_IRBIRP[packet_5]);
    Tmp_655 := status_18;
    goto L1;

  anon12_Then:
    assume {:partition} 0 > status_18;
    call {:si_unique_call 3118} vslice_dummy_var_479 := IsDeviceGone#1(PdoExtension_11, status_18);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_5] == 0;
    Tmp_655 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#1(actual_PdoExtension_11: int) returns (Tmp_655: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IsDeviceGone"} IsDeviceGone#0(actual_PdoExtension_17: int, actual_status_38: int) returns (Tmp_1358: int)
{
  var {:scalar} bInvalidate: int;
  var {:pointer} PdoExtension_17: int;
  var {:scalar} status_38: int;

  anon0:
    PdoExtension_17 := actual_PdoExtension_17;
    status_38 := actual_status_38;
    bInvalidate := 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_38 == -1073741810;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L11;

  L11:
    assume false;
    return;

  anon14_Then:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    bInvalidate := 1;
    goto L11;

  anon13_Then:
    goto L7;

  L7:
    Tmp_1358 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    assume {:partition} status_38 != -1073741810;
    goto L7;
}



procedure {:origName "IsDeviceGone"} IsDeviceGone#0(actual_PdoExtension_17: int, actual_status_38: int) returns (Tmp_1358: int);
  free ensures {:va_keep} Tmp_1358 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IsDeviceGone"} IsDeviceGone#1(actual_PdoExtension_17: int, actual_status_38: int) returns (Tmp_1358: int)
{
  var {:scalar} bInvalidate: int;
  var {:pointer} PdoExtension_17: int;
  var {:scalar} status_38: int;

  anon0:
    PdoExtension_17 := actual_PdoExtension_17;
    status_38 := actual_status_38;
    bInvalidate := 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_38 == -1073741810;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L11;

  L11:
    call {:si_unique_call 3119} CleanupOrbList#0(PdoExtension_17, status_38);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3120} Sbp2StartQueue#1(PdoExtension_17);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} bInvalidate != 0;
    call {:si_unique_call 3121} IoInvalidateDeviceState(0);
    call {:si_unique_call 3122} Sbp2AddLog(PdoExtension_17, 1, -914985884, PdoExtension_17, status_38);
    goto L18;

  L18:
    Tmp_1358 := 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} bInvalidate == 0;
    goto L18;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    bInvalidate := 1;
    goto L11;

  anon13_Then:
    goto L7;

  L7:
    Tmp_1358 := 0;
    goto L1;

  anon16_Then:
    assume {:partition} status_38 != -1073741810;
    goto L7;
}



procedure {:origName "IsDeviceGone"} IsDeviceGone#1(actual_PdoExtension_17: int, actual_status_38: int) returns (Tmp_1358: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartQueue"} Sbp2StartQueue#0(actual_PdoExtension_16: int)
{
  var {:pointer} Tmp_1351: int;
  var {:pointer} sdv_451: int;
  var {:pointer} pIrp: int;
  var {:scalar} irql_5: int;
  var {:pointer} PdoExtension_16: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_4377: int;
  var vslice_dummy_var_4378: int;
  var vslice_dummy_var_4379: int;
  var vslice_dummy_var_4380: int;
  var vslice_dummy_var_4381: int;

  anon0:
    call {:si_unique_call 3123} vslice_dummy_var_480 := __HAVOC_malloc(4);
    PdoExtension_16 := actual_PdoExtension_16;
    call {:si_unique_call 3124} Tmp_1351 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    call {:si_unique_call 3125} sdv_KeAcquireSpinLock(0, Tmp_1351);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    havoc irql_5;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 3126} sdv_KeReleaseSpinLock(0, irql_5);
    assume false;
    return;

  anon15_Then:
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 3127} sdv_KeReleaseSpinLock(0, irql_5);
    call {:si_unique_call 3128} Tmp_1351 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    call {:si_unique_call 3129} sdv_KeRaiseIrql(2, Tmp_1351);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    havoc irql_5;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    call {:si_unique_call 3130} sdv_451 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_16), 0);
    pIrp := sdv_451;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} pIrp != 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_4377;
    call {:si_unique_call 3131} Sbp2StartIo#0(vslice_dummy_var_4377, pIrp);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  L37:
    call {:si_unique_call 3132} sdv_KeLowerIrql(irql_5);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} pIrp == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_4378;
    havoc vslice_dummy_var_4379;
    call {:si_unique_call 3133} Sbp2StartNextPacketByKey#0(vslice_dummy_var_4378, vslice_dummy_var_4379);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    call {:si_unique_call 3134} sdv_KeReleaseSpinLock(0, irql_5);
    call {:si_unique_call 3135} Tmp_1351 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    call {:si_unique_call 3136} sdv_KeRaiseIrql(2, Tmp_1351);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    havoc irql_5;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_4380;
    havoc vslice_dummy_var_4381;
    call {:si_unique_call 3137} Sbp2StartNextPacketByKey#0(vslice_dummy_var_4380, vslice_dummy_var_4381);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2StartQueue"} Sbp2StartQueue#0(actual_PdoExtension_16: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartQueue"} Sbp2StartQueue#1(actual_PdoExtension_16: int)
{
  var {:pointer} Tmp_1351: int;
  var {:pointer} sdv_451: int;
  var {:pointer} pIrp: int;
  var {:scalar} irql_5: int;
  var {:pointer} PdoExtension_16: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_4382: int;
  var vslice_dummy_var_4383: int;
  var vslice_dummy_var_4384: int;
  var vslice_dummy_var_4385: int;
  var vslice_dummy_var_4386: int;

  anon0:
    call {:si_unique_call 3138} vslice_dummy_var_481 := __HAVOC_malloc(4);
    PdoExtension_16 := actual_PdoExtension_16;
    call {:si_unique_call 3139} Tmp_1351 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    call {:si_unique_call 3140} sdv_KeAcquireSpinLock(0, Tmp_1351);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    havoc irql_5;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 3141} sdv_KeReleaseSpinLock(0, irql_5);
    call {:si_unique_call 3142} vslice_dummy_var_482 := Sbp2RestartPendingPowerIrp#0(PdoExtension_16);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 3143} sdv_KeReleaseSpinLock(0, irql_5);
    call {:si_unique_call 3144} Tmp_1351 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    call {:si_unique_call 3145} sdv_KeRaiseIrql(2, Tmp_1351);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    havoc irql_5;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    call {:si_unique_call 3146} sdv_451 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_16), 0);
    pIrp := sdv_451;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} pIrp != 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_4382;
    call {:si_unique_call 3147} Sbp2StartIo#1(vslice_dummy_var_4382, pIrp);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  L37:
    call {:si_unique_call 3148} sdv_KeLowerIrql(irql_5);
    goto L1;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} pIrp == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_4383;
    havoc vslice_dummy_var_4384;
    call {:si_unique_call 3149} Sbp2StartNextPacketByKey#1(vslice_dummy_var_4383, vslice_dummy_var_4384);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    call {:si_unique_call 3150} sdv_KeReleaseSpinLock(0, irql_5);
    call {:si_unique_call 3151} Tmp_1351 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    call {:si_unique_call 3152} sdv_KeRaiseIrql(2, Tmp_1351);
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    havoc irql_5;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_4385;
    havoc vslice_dummy_var_4386;
    call {:si_unique_call 3153} Sbp2StartNextPacketByKey#1(vslice_dummy_var_4385, vslice_dummy_var_4386);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2StartQueue"} Sbp2StartQueue#1(actual_PdoExtension_16: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#0(actual_PdoExtension_5: int) returns (Tmp_560: int)
{
  var {:scalar} Tmp_561: int;
  var {:pointer} Tmp_562: int;
  var {:pointer} Tmp_563: int;
  var {:pointer} Tmp_564: int;
  var {:pointer} Tmp_565: int;
  var {:pointer} Tmp_567: int;
  var {:scalar} Tmp_568: int;
  var {:pointer} packet_3: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_569: int;
  var {:pointer} Tmp_570: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_483: int;

  anon0:
    call {:si_unique_call 3154} packet_3 := __HAVOC_malloc(4);
    PdoExtension_5 := actual_PdoExtension_5;
    call {:si_unique_call 3155} Tmp_567 := __HAVOC_malloc(4);
    call {:si_unique_call 3156} Tmp_570 := __HAVOC_malloc(4);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    Mem_T.P_IRBIRP[packet_3] := 0;
    call {:si_unique_call 3157} AllocateIrpAndIrb(PdoExtension_5, packet_3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_3] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_562;
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_565;
    assume {:nonnull} Tmp_565 != 0;
    assume Tmp_565 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_563;
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_567;
    assume {:nonnull} Tmp_567 != 0;
    assume Tmp_567 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_569;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_561;
    call {:si_unique_call 3158} WPP_SF_q(Tmp_561, 10, Tmp_569, PdoExtension_5);
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 3159} Sbp2SetManagementTimer(PdoExtension_5, 3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume false;
    return;

  anon24_Then:
    goto L18;

  anon29_Then:
    goto L18;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon23_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_3] == 0;
    Tmp_560 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;
}



procedure {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#0(actual_PdoExtension_5: int) returns (Tmp_560: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} Tmp_560 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#1(actual_PdoExtension_5: int) returns (Tmp_560: int)
{
  var {:scalar} Tmp_561: int;
  var {:pointer} Tmp_562: int;
  var {:pointer} Tmp_563: int;
  var {:pointer} Tmp_564: int;
  var {:pointer} Tmp_565: int;
  var {:pointer} Tmp_567: int;
  var {:scalar} Tmp_568: int;
  var {:pointer} packet_3: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_569: int;
  var {:pointer} Tmp_570: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_484: int;

  anon0:
    call {:si_unique_call 3160} packet_3 := __HAVOC_malloc(4);
    PdoExtension_5 := actual_PdoExtension_5;
    call {:si_unique_call 3161} Tmp_567 := __HAVOC_malloc(4);
    call {:si_unique_call 3162} Tmp_570 := __HAVOC_malloc(4);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    Mem_T.P_IRBIRP[packet_3] := 0;
    call {:si_unique_call 3163} AllocateIrpAndIrb(PdoExtension_5, packet_3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.P_IRBIRP[packet_3] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_562;
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_565;
    assume {:nonnull} Tmp_565 != 0;
    assume Tmp_565 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[packet_3] != 0;
    assume Mem_T.P_IRBIRP[packet_3] > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_563;
    assume {:nonnull} Tmp_563 != 0;
    assume Tmp_563 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_567;
    assume {:nonnull} Tmp_567 != 0;
    assume Tmp_567 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_569;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_561;
    call {:si_unique_call 3164} WPP_SF_q(Tmp_561, 10, Tmp_569, PdoExtension_5);
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 3165} Sbp2SetManagementTimer(PdoExtension_5, 3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    call {:si_unique_call 3166} status_13 := Sbp2SendRequest#0(PdoExtension_5, Mem_T.P_IRBIRP[packet_3], 2);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_13 >= 0;
    goto L37;

  L37:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    call {:si_unique_call 3167} DeAllocateIrpAndIrb(PdoExtension_5, Mem_T.P_IRBIRP[packet_3]);
    Tmp_560 := status_13;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} 0 > status_13;
    call {:si_unique_call 3168} vslice_dummy_var_484 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_570;
    assume {:nonnull} Tmp_570 != 0;
    assume Tmp_570 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_564;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_568;
    call {:si_unique_call 3169} WPP_SF_qD(Tmp_568, 11, Tmp_564, PdoExtension_5, status_13);
    goto L46;

  L46:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 3170} Sbp2StartQueue#1(PdoExtension_5);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    goto L37;

  anon27_Then:
    goto L46;

  anon32_Then:
    goto L46;

  anon31_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    goto L18;

  anon29_Then:
    goto L18;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon23_Then:
    assume {:partition} Mem_T.P_IRBIRP[packet_3] == 0;
    Tmp_560 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#1(actual_PdoExtension_5: int) returns (Tmp_560: int);
  modifies alloc, Mem_T.P_IRBIRP, LockDepth, yogi_error, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#0(actual_PdoExtension_22: int, actual_Status_2: int, actual_ErrorId_1: int)
{
  var {:scalar} flags: int;
  var {:pointer} Tmp_1909: int;
  var {:pointer} Tmp_1910: int;
  var {:pointer} Tmp_1911: int;
  var {:scalar} Tmp_1912: int;
  var {:pointer} Tmp_1914: int;
  var {:scalar} irql_6: int;
  var {:pointer} PdoExtension_22: int;
  var {:scalar} Status_2: int;
  var {:scalar} ErrorId_1: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_4387: int;

  anon0:
    call {:si_unique_call 3171} vslice_dummy_var_485 := __HAVOC_malloc(4);
    PdoExtension_22 := actual_PdoExtension_22;
    Status_2 := actual_Status_2;
    ErrorId_1 := actual_ErrorId_1;
    call {:si_unique_call 3172} Tmp_1914 := __HAVOC_malloc(4);
    call {:si_unique_call 3173} Tmp_1910 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1910 != 0;
    assume Tmp_1910 > 0;
    call {:si_unique_call 3174} sdv_KeAcquireSpinLock(0, Tmp_1910);
    assume {:nonnull} Tmp_1910 != 0;
    assume Tmp_1910 > 0;
    havoc irql_6;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc flags;
    call {:si_unique_call 3175} Sbp2AddLog(PdoExtension_22, 1, -764185530, Status_2, ErrorId_1);
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc Tmp_1909;
    assume {:nonnull} Tmp_1909 != 0;
    assume Tmp_1909 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L17;

  L17:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} BAND(flags, 8192) != 0;
    goto L22;

  L22:
    call {:si_unique_call 3176} sdv_KeReleaseSpinLock(0, irql_6);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1914;
    assume {:nonnull} Tmp_1914 != 0;
    assume Tmp_1914 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_1911;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1912;
    call {:si_unique_call 3177} WPP_SF_qDD(Tmp_1912, 42, Tmp_1911, PdoExtension_22, flags, Status_2);
    goto L29;

  L29:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} BAND(flags, 2) != 0;
    goto L38;

  L38:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(flags, 2) != 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3178} vslice_dummy_var_487 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L39;

  L39:
    call {:si_unique_call 3179} Sbp2StartQueue#0(PdoExtension_22);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3180} IoInvalidateDeviceState(0);
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto L39;

  anon20_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status_2 != -1073741810;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc vslice_dummy_var_4387;
    call {:si_unique_call 3181} Sbp2CreateRequestErrorLog(vslice_dummy_var_4387, 0, ErrorId_1, Status_2);
    goto L38;

  anon22_Then:
    assume {:partition} Status_2 == -1073741810;
    goto L38;

  anon21_Then:
    goto L29;

  anon26_Then:
    goto L29;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L29;

  anon25_Then:
    assume {:partition} BAND(flags, 8192) == 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3182} vslice_dummy_var_486 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L22;

  anon24_Then:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto L17;
}



procedure {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#0(actual_PdoExtension_22: int, actual_Status_2: int, actual_ErrorId_1: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#1(actual_PdoExtension_22: int, actual_Status_2: int, actual_ErrorId_1: int)
{
  var {:scalar} flags: int;
  var {:pointer} Tmp_1909: int;
  var {:pointer} Tmp_1910: int;
  var {:pointer} Tmp_1911: int;
  var {:scalar} Tmp_1912: int;
  var {:pointer} Tmp_1914: int;
  var {:scalar} irql_6: int;
  var {:pointer} PdoExtension_22: int;
  var {:scalar} Status_2: int;
  var {:scalar} ErrorId_1: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_4388: int;

  anon0:
    call {:si_unique_call 3183} vslice_dummy_var_488 := __HAVOC_malloc(4);
    PdoExtension_22 := actual_PdoExtension_22;
    Status_2 := actual_Status_2;
    ErrorId_1 := actual_ErrorId_1;
    call {:si_unique_call 3184} Tmp_1914 := __HAVOC_malloc(4);
    call {:si_unique_call 3185} Tmp_1910 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1910 != 0;
    assume Tmp_1910 > 0;
    call {:si_unique_call 3186} sdv_KeAcquireSpinLock(0, Tmp_1910);
    assume {:nonnull} Tmp_1910 != 0;
    assume Tmp_1910 > 0;
    havoc irql_6;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc flags;
    call {:si_unique_call 3187} Sbp2AddLog(PdoExtension_22, 1, -764185530, Status_2, ErrorId_1);
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc Tmp_1909;
    assume {:nonnull} Tmp_1909 != 0;
    assume Tmp_1909 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L17;

  L17:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} BAND(flags, 8192) != 0;
    goto L22;

  L22:
    call {:si_unique_call 3188} sdv_KeReleaseSpinLock(0, irql_6);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1914;
    assume {:nonnull} Tmp_1914 != 0;
    assume Tmp_1914 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_1911;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1912;
    call {:si_unique_call 3189} WPP_SF_qDD(Tmp_1912, 42, Tmp_1911, PdoExtension_22, flags, Status_2);
    goto L29;

  L29:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} BAND(flags, 2) != 0;
    goto L38;

  L38:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(flags, 2) != 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3190} vslice_dummy_var_490 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L39;

  L39:
    call {:si_unique_call 3191} Sbp2StartQueue#1(PdoExtension_22);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3192} IoInvalidateDeviceState(0);
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto L39;

  anon20_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status_2 != -1073741810;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc vslice_dummy_var_4388;
    call {:si_unique_call 3193} Sbp2CreateRequestErrorLog(vslice_dummy_var_4388, 0, ErrorId_1, Status_2);
    goto L38;

  anon22_Then:
    assume {:partition} Status_2 == -1073741810;
    goto L38;

  anon21_Then:
    goto L29;

  anon26_Then:
    goto L29;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L29;

  anon25_Then:
    assume {:partition} BAND(flags, 8192) == 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3194} vslice_dummy_var_489 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L22;

  anon24_Then:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto L17;
}



procedure {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#1(actual_PdoExtension_22: int, actual_Status_2: int, actual_ErrorId_1: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#0(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_413: int)
{
  var {:pointer} Tmp_414: int;
  var {:scalar} Tmp_415: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} Tmp_417: int;
  var {:pointer} Tmp_419: int;
  var {:scalar} Tmp_420: int;
  var {:pointer} Tmp_421: int;
  var {:scalar} sdv_112: int;
  var {:scalar} sdv_115: int;
  var {:pointer} Tmp_422: int;
  var {:pointer} Tmp_423: int;
  var {:pointer} Tmp_424: int;
  var {:pointer} Tmp_425: int;
  var {:scalar} sdv_116: int;
  var {:pointer} Tmp_426: int;
  var {:scalar} sdv_118: int;
  var {:scalar} Tmp_427: int;
  var {:pointer} Tmp_428: int;
  var {:scalar} sdv_119: int;
  var {:scalar} Tmp_429: int;
  var {:scalar} status_9: int;
  var {:scalar} Tmp_430: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} PdoExtension_3: int;
  var {:scalar} Generation_2: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_4389: int;
  var vslice_dummy_var_4390: int;

  anon0:
    PdoExtension_3 := actual_PdoExtension_3;
    Generation_2 := actual_Generation_2;
    call {:si_unique_call 3195} Tmp_417 := __HAVOC_malloc(4);
    call {:si_unique_call 3196} Tmp_419 := __HAVOC_malloc(4);
    call {:si_unique_call 3197} Tmp_421 := __HAVOC_malloc(4);
    call {:si_unique_call 3198} Tmp_422 := __HAVOC_malloc(4);
    call {:si_unique_call 3199} Tmp_424 := __HAVOC_malloc(4);
    status_9 := -1073741811;
    call {:si_unique_call 3200} vslice_dummy_var_492 := sdv_KeGetCurrentIrql();
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_422;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 3201} sdv_115 := GET_LUN(PdoExtension_3);
    havoc Tmp_428;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_427;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_4389;
    call {:si_unique_call 3202} WPP_SF_qdD(Tmp_427, 80, Tmp_428, PdoExtension_3, sdv_115, vslice_dummy_var_4389);
    goto L15;

  L15:
    call {:si_unique_call 3203} Sbp2AddLog(PdoExtension_3, 1, -767212738, 0, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_4390;
    call {:si_unique_call 3204} sdv_116 := Sbp2CleanDeviceExtension#0(vslice_dummy_var_4390, 0, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} yogi_error != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_116 == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_424;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_423;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_429;
    call {:si_unique_call 3205} WPP_SF_q(Tmp_429, 81, Tmp_423, PdoExtension_3);
    goto L35;

  L35:
    call {:si_unique_call 3206} status_9 := Sbp2InitializeDeviceExtension#0(PdoExtension_3);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_9 < 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_419;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_426;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_415;
    call {:si_unique_call 3207} WPP_SF_qD(Tmp_415, 82, Tmp_426, PdoExtension_3, status_9);
    goto L105;

  L105:
    Tmp_413 := status_9;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L105;

  anon65_Then:
    goto L105;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L105;

  anon48_Then:
    assume {:partition} 0 <= status_9;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc Tmp_414;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 3208} Sbp2SetManagementTimer(PdoExtension_3, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3209} vslice_dummy_var_491 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_3));
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3210} status_9 := Sbp2AccessRegisterEx#0(PdoExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_3)), 256, Generation_2);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_417;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_425;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_430;
    call {:si_unique_call 3211} WPP_SF_qD(Tmp_430, 83, Tmp_425, PdoExtension_3, status_9);
    goto L75;

  L75:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_9 < 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_421;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_416;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_420;
    call {:si_unique_call 3212} WPP_SF_qD(Tmp_420, 84, Tmp_416, PdoExtension_3, status_9);
    goto L91;

  L91:
    call {:si_unique_call 3213} Sbp2AddLog(PdoExtension_3, 1, -765107407, status_9, 0);
    call {:si_unique_call 3214} Sbp2ReconnectCompletion#0(PdoExtension_3, status_9);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L86;

  L86:
    call {:si_unique_call 3215} Sbp2AddLog(PdoExtension_3, 1, -767212740, status_9, 0);
    Tmp_413 := status_9;
    goto L1;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    goto L91;

  anon63_Then:
    goto L91;

  anon52_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L91;

  anon50_Then:
    assume {:partition} 0 <= status_9;
    goto L86;

  anon51_Then:
    goto L75;

  anon62_Then:
    goto L75;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L75;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L35;

  anon66_Then:
    goto L35;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L35;

  anon47_Then:
    assume {:partition} sdv_116 != 0;
    goto L35;

  anon59_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    goto L15;

  anon58_Then:
    goto L15;

  anon45_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L15;
}



procedure {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#0(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_413: int);
  modifies alloc, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.PVOID, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#1(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_413: int)
{
  var {:pointer} Tmp_414: int;
  var {:scalar} Tmp_415: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} Tmp_417: int;
  var {:pointer} Tmp_419: int;
  var {:scalar} Tmp_420: int;
  var {:pointer} Tmp_421: int;
  var {:scalar} sdv_112: int;
  var {:scalar} sdv_115: int;
  var {:pointer} Tmp_422: int;
  var {:pointer} Tmp_423: int;
  var {:pointer} Tmp_424: int;
  var {:pointer} Tmp_425: int;
  var {:scalar} sdv_116: int;
  var {:pointer} Tmp_426: int;
  var {:scalar} sdv_118: int;
  var {:scalar} Tmp_427: int;
  var {:pointer} Tmp_428: int;
  var {:scalar} sdv_119: int;
  var {:scalar} Tmp_429: int;
  var {:scalar} status_9: int;
  var {:scalar} Tmp_430: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} PdoExtension_3: int;
  var {:scalar} Generation_2: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_4391: int;
  var vslice_dummy_var_4392: int;

  anon0:
    PdoExtension_3 := actual_PdoExtension_3;
    Generation_2 := actual_Generation_2;
    call {:si_unique_call 3216} Tmp_417 := __HAVOC_malloc(4);
    call {:si_unique_call 3217} Tmp_419 := __HAVOC_malloc(4);
    call {:si_unique_call 3218} Tmp_421 := __HAVOC_malloc(4);
    call {:si_unique_call 3219} Tmp_422 := __HAVOC_malloc(4);
    call {:si_unique_call 3220} Tmp_424 := __HAVOC_malloc(4);
    status_9 := -1073741811;
    call {:si_unique_call 3221} vslice_dummy_var_494 := sdv_KeGetCurrentIrql();
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_422;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 3222} sdv_115 := GET_LUN(PdoExtension_3);
    havoc Tmp_428;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_427;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_4391;
    call {:si_unique_call 3223} WPP_SF_qdD(Tmp_427, 80, Tmp_428, PdoExtension_3, sdv_115, vslice_dummy_var_4391);
    goto L15;

  L15:
    call {:si_unique_call 3224} Sbp2AddLog(PdoExtension_3, 1, -767212738, 0, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_4392;
    call {:si_unique_call 3225} sdv_116 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_4392, 0, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} yogi_error != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_116 == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_424;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_423;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_429;
    call {:si_unique_call 3226} WPP_SF_q(Tmp_429, 81, Tmp_423, PdoExtension_3);
    goto L35;

  L35:
    call {:si_unique_call 3227} status_9 := Sbp2InitializeDeviceExtension#1(PdoExtension_3);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_9 < 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_419;
    assume {:nonnull} Tmp_419 != 0;
    assume Tmp_419 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_426;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_415;
    call {:si_unique_call 3228} WPP_SF_qD(Tmp_415, 82, Tmp_426, PdoExtension_3, status_9);
    goto L105;

  L105:
    Tmp_413 := status_9;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L105;

  anon65_Then:
    goto L105;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L105;

  anon48_Then:
    assume {:partition} 0 <= status_9;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc Tmp_414;
    assume {:nonnull} Tmp_414 != 0;
    assume Tmp_414 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 3229} Sbp2SetManagementTimer(PdoExtension_3, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3230} vslice_dummy_var_493 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_3));
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3231} status_9 := Sbp2AccessRegisterEx#1(PdoExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_3)), 256, Generation_2);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_417;
    assume {:nonnull} Tmp_417 != 0;
    assume Tmp_417 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_425;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_430;
    call {:si_unique_call 3232} WPP_SF_qD(Tmp_430, 83, Tmp_425, PdoExtension_3, status_9);
    goto L75;

  L75:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_9 < 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_421;
    assume {:nonnull} Tmp_421 != 0;
    assume Tmp_421 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_416;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_420;
    call {:si_unique_call 3233} WPP_SF_qD(Tmp_420, 84, Tmp_416, PdoExtension_3, status_9);
    goto L91;

  L91:
    call {:si_unique_call 3234} Sbp2AddLog(PdoExtension_3, 1, -765107407, status_9, 0);
    call {:si_unique_call 3235} Sbp2ReconnectCompletion#1(PdoExtension_3, status_9);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L86;

  L86:
    call {:si_unique_call 3236} Sbp2AddLog(PdoExtension_3, 1, -767212740, status_9, 0);
    Tmp_413 := status_9;
    goto L1;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    goto L91;

  anon63_Then:
    goto L91;

  anon52_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L91;

  anon50_Then:
    assume {:partition} 0 <= status_9;
    goto L86;

  anon51_Then:
    goto L75;

  anon62_Then:
    goto L75;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L75;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L35;

  anon66_Then:
    goto L35;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L35;

  anon47_Then:
    assume {:partition} sdv_116 != 0;
    goto L35;

  anon59_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    goto L15;

  anon58_Then:
    goto L15;

  anon45_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L15;
}



procedure {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#1(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_413: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#0(actual_PdoExtension_4: int, actual_NtStatus_1: int)
{
  var {:scalar} Tmp_552: int;
  var {:pointer} Tmp_553: int;
  var {:pointer} Tmp_554: int;
  var {:pointer} Tmp_555: int;
  var {:scalar} Tmp_556: int;
  var {:scalar} sdv_156: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_558: int;
  var {:scalar} irql_1: int;
  var {:pointer} Tmp_559: int;
  var {:pointer} PdoExtension_4: int;
  var {:scalar} NtStatus_1: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_4393: int;
  var vslice_dummy_var_4394: int;

  anon0:
    call {:si_unique_call 3237} vslice_dummy_var_495 := __HAVOC_malloc(4);
    PdoExtension_4 := actual_PdoExtension_4;
    NtStatus_1 := actual_NtStatus_1;
    call {:si_unique_call 3238} Tmp_555 := __HAVOC_malloc(4);
    call {:si_unique_call 3239} Tmp_558 := __HAVOC_malloc(4);
    call {:si_unique_call 3240} Tmp_553 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    call {:si_unique_call 3241} sdv_KeAcquireSpinLock(0, Tmp_553);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    havoc irql_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 3242} Sbp2AddLog(PdoExtension_4, 1, -765107396, NtStatus_1, 0);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_558;
    assume {:nonnull} Tmp_558 != 0;
    assume Tmp_558 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    havoc Tmp_554;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_552;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_4393;
    call {:si_unique_call 3243} WPP_SF_qDD(Tmp_552, 78, Tmp_554, PdoExtension_4, NtStatus_1, vslice_dummy_var_4393);
    goto L18;

  L18:
    call {:si_unique_call 3244} vslice_dummy_var_496 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} NtStatus_1 < 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_555;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_559;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_556;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_4394;
    call {:si_unique_call 3245} WPP_SF_qDD(Tmp_556, 79, Tmp_559, PdoExtension_4, NtStatus_1, vslice_dummy_var_4394);
    goto L48;

  L48:
    call {:si_unique_call 3246} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3247} sdv_156 := IsDeviceGone#0(PdoExtension_4, NtStatus_1);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_156 == 0;
    call {:si_unique_call 3248} Tmp_553 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    call {:si_unique_call 3249} sdv_KeAcquireSpinLock(0, Tmp_553);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    havoc irql_1;
    call {:si_unique_call 3250} status_12 := Sbp2QueueManagementWorkItem#0(PdoExtension_4, 2, -1);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_12 >= 0;
    goto L74;

  L74:
    call {:si_unique_call 3251} sdv_KeReleaseSpinLock(0, irql_1);
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3252} vslice_dummy_var_497 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_4), 0, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon33_Then:
    assume {:partition} 0 > status_12;
    call {:si_unique_call 3253} Sbp2SetDeferLoginTimer(PdoExtension_4);
    goto L74;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:partition} sdv_156 != 0;
    goto L43;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    goto L48;

  anon37_Then:
    goto L48;

  anon30_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L48;

  anon35_Then:
    assume {:partition} 0 <= NtStatus_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3254} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3255} Sbp2StartQueue#0(PdoExtension_4);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto L43;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    goto L18;

  anon34_Then:
    goto L18;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon27_Then:
    call {:si_unique_call 3256} sdv_KeReleaseSpinLock(0, irql_1);
    goto L1;
}



procedure {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#0(actual_PdoExtension_4: int, actual_NtStatus_1: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#1(actual_PdoExtension_4: int, actual_NtStatus_1: int)
{
  var {:scalar} Tmp_552: int;
  var {:pointer} Tmp_553: int;
  var {:pointer} Tmp_554: int;
  var {:pointer} Tmp_555: int;
  var {:scalar} Tmp_556: int;
  var {:scalar} sdv_156: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_558: int;
  var {:scalar} irql_1: int;
  var {:pointer} Tmp_559: int;
  var {:pointer} PdoExtension_4: int;
  var {:scalar} NtStatus_1: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;
  var vslice_dummy_var_4395: int;
  var vslice_dummy_var_4396: int;

  anon0:
    call {:si_unique_call 3257} vslice_dummy_var_498 := __HAVOC_malloc(4);
    PdoExtension_4 := actual_PdoExtension_4;
    NtStatus_1 := actual_NtStatus_1;
    call {:si_unique_call 3258} Tmp_555 := __HAVOC_malloc(4);
    call {:si_unique_call 3259} Tmp_558 := __HAVOC_malloc(4);
    call {:si_unique_call 3260} Tmp_553 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    call {:si_unique_call 3261} sdv_KeAcquireSpinLock(0, Tmp_553);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    havoc irql_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 3262} Sbp2AddLog(PdoExtension_4, 1, -765107396, NtStatus_1, 0);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_558;
    assume {:nonnull} Tmp_558 != 0;
    assume Tmp_558 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    havoc Tmp_554;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_552;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_4395;
    call {:si_unique_call 3263} WPP_SF_qDD(Tmp_552, 78, Tmp_554, PdoExtension_4, NtStatus_1, vslice_dummy_var_4395);
    goto L18;

  L18:
    call {:si_unique_call 3264} vslice_dummy_var_499 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} NtStatus_1 < 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_555;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_559;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_556;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_4396;
    call {:si_unique_call 3265} WPP_SF_qDD(Tmp_556, 79, Tmp_559, PdoExtension_4, NtStatus_1, vslice_dummy_var_4396);
    goto L48;

  L48:
    call {:si_unique_call 3266} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3267} sdv_156 := IsDeviceGone#1(PdoExtension_4, NtStatus_1);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_156 == 0;
    call {:si_unique_call 3268} Tmp_553 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    call {:si_unique_call 3269} sdv_KeAcquireSpinLock(0, Tmp_553);
    assume {:nonnull} Tmp_553 != 0;
    assume Tmp_553 > 0;
    havoc irql_1;
    call {:si_unique_call 3270} status_12 := Sbp2QueueManagementWorkItem#1(PdoExtension_4, 2, -1);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_12 >= 0;
    goto L74;

  L74:
    call {:si_unique_call 3271} sdv_KeReleaseSpinLock(0, irql_1);
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3272} vslice_dummy_var_500 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_4), 0, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon33_Then:
    assume {:partition} 0 > status_12;
    call {:si_unique_call 3273} Sbp2SetDeferLoginTimer(PdoExtension_4);
    goto L74;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:partition} sdv_156 != 0;
    goto L43;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    goto L48;

  anon37_Then:
    goto L48;

  anon30_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L48;

  anon35_Then:
    assume {:partition} 0 <= NtStatus_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3274} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3275} Sbp2StartQueue#1(PdoExtension_4);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto L43;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    goto L18;

  anon34_Then:
    goto L18;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon27_Then:
    call {:si_unique_call 3276} sdv_KeReleaseSpinLock(0, irql_1);
    goto L1;
}



procedure {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#1(actual_PdoExtension_4: int, actual_NtStatus_1: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2QueueManagementWorkItem"} Sbp2QueueManagementWorkItem#0(actual_PdoExtension_18: int, actual_Action: int, actual_Generation_5: int) returns (Tmp_1415: int)
{
  var {:pointer} Tmp_1416: int;
  var {:pointer} workItem: int;
  var {:scalar} Tmp_1418: int;
  var {:scalar} Tmp_1419: int;
  var {:pointer} sdv_471: int;
  var {:scalar} sdv_472: int;
  var {:pointer} Tmp_1420: int;
  var {:pointer} Tmp_1421: int;
  var {:scalar} status_41: int;
  var {:pointer} entry_2: int;
  var {:pointer} Tmp_1422: int;
  var {:pointer} PdoExtension_18: int;
  var {:scalar} Action: int;
  var {:scalar} Generation_5: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_504: int;
  var vslice_dummy_var_4397: int;
  var vslice_dummy_var_4398: int;

  anon0:
    PdoExtension_18 := actual_PdoExtension_18;
    Action := actual_Action;
    Generation_5 := actual_Generation_5;
    call {:si_unique_call 3277} Tmp_1416 := __HAVOC_malloc(4);
    call {:si_unique_call 3278} Tmp_1421 := __HAVOC_malloc(4);
    call {:si_unique_call 3279} status_41 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_41 >= 0;
    call {:si_unique_call 3280} sdv_471 := ExAllocatePoolWithTag(512, 16, -344497581);
    entry_2 := sdv_471;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} entry_2 != 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    call {:si_unique_call 3281} InitializeListHead(Link__BUS_RESET_ENTRY(entry_2));
    call {:si_unique_call 3282} sdv_472 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_472 == 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1421;
    assume {:nonnull} Tmp_1421 != 0;
    assume Tmp_1421 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_1420;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1419;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    havoc vslice_dummy_var_4397;
    call {:si_unique_call 3283} WPP_SF_qD(Tmp_1419, 29, Tmp_1420, PdoExtension_18, vslice_dummy_var_4397);
    goto L60;

  L60:
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    call {:si_unique_call 3284} vslice_dummy_var_501 := sdv_InsertTailList(BusResetEntry__DEVICE_EXTENSION(PdoExtension_18), Link__BUS_RESET_ENTRY(entry_2));
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 3285} vslice_dummy_var_502 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto L54;

  L54:
    Tmp_1415 := status_41;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon35_Then:
    goto L60;

  anon40_Then:
    goto L60;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon30_Then:
    assume {:partition} sdv_472 != 0;
    call {:si_unique_call 3286} workItem := IoAllocateWorkItem(0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} workItem != 0;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    call {:si_unique_call 3287} InsertHeadList(BusResetEntry__DEVICE_EXTENSION(PdoExtension_18), Link__BUS_RESET_ENTRY(entry_2));
    call {:si_unique_call 3288} IoQueueWorkItem#0(workItem, li2bplFunctionConstant461, 1, workItem);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1416;
    assume {:nonnull} Tmp_1416 != 0;
    assume Tmp_1416 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_1422;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1418;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    havoc vslice_dummy_var_4398;
    call {:si_unique_call 3289} WPP_SF_qDd(Tmp_1418, 28, Tmp_1422, PdoExtension_18, vslice_dummy_var_4398, Generation_5);
    goto L46;

  L46:
    status_41 := 0;
    goto L54;

  anon33_Then:
    goto L46;

  anon38_Then:
    goto L46;

  anon32_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:partition} workItem == 0;
    status_41 := -1073741670;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 3290} vslice_dummy_var_503 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1415 := status_41;
    goto L1;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:partition} entry_2 == 0;
    status_41 := -1073741670;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 3291} vslice_dummy_var_504 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1415 := status_41;
    goto L1;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:partition} 0 > status_41;
    Tmp_1415 := status_41;
    goto L1;
}



procedure {:origName "Sbp2QueueManagementWorkItem"} Sbp2QueueManagementWorkItem#0(actual_PdoExtension_18: int, actual_Action: int, actual_Generation_5: int) returns (Tmp_1415: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2QueueManagementWorkItem"} Sbp2QueueManagementWorkItem#1(actual_PdoExtension_18: int, actual_Action: int, actual_Generation_5: int) returns (Tmp_1415: int)
{
  var {:pointer} Tmp_1416: int;
  var {:pointer} workItem: int;
  var {:scalar} Tmp_1418: int;
  var {:scalar} Tmp_1419: int;
  var {:pointer} sdv_471: int;
  var {:scalar} sdv_472: int;
  var {:pointer} Tmp_1420: int;
  var {:pointer} Tmp_1421: int;
  var {:scalar} status_41: int;
  var {:pointer} entry_2: int;
  var {:pointer} Tmp_1422: int;
  var {:pointer} PdoExtension_18: int;
  var {:scalar} Action: int;
  var {:scalar} Generation_5: int;
  var vslice_dummy_var_505: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_4399: int;
  var vslice_dummy_var_4400: int;

  anon0:
    PdoExtension_18 := actual_PdoExtension_18;
    Action := actual_Action;
    Generation_5 := actual_Generation_5;
    call {:si_unique_call 3292} Tmp_1416 := __HAVOC_malloc(4);
    call {:si_unique_call 3293} Tmp_1421 := __HAVOC_malloc(4);
    call {:si_unique_call 3294} status_41 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_41 >= 0;
    call {:si_unique_call 3295} sdv_471 := ExAllocatePoolWithTag(512, 16, -344497581);
    entry_2 := sdv_471;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} entry_2 != 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    call {:si_unique_call 3296} InitializeListHead(Link__BUS_RESET_ENTRY(entry_2));
    call {:si_unique_call 3297} sdv_472 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_472 == 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1421;
    assume {:nonnull} Tmp_1421 != 0;
    assume Tmp_1421 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_1420;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1419;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    havoc vslice_dummy_var_4399;
    call {:si_unique_call 3298} WPP_SF_qD(Tmp_1419, 29, Tmp_1420, PdoExtension_18, vslice_dummy_var_4399);
    goto L60;

  L60:
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    call {:si_unique_call 3299} vslice_dummy_var_505 := sdv_InsertTailList(BusResetEntry__DEVICE_EXTENSION(PdoExtension_18), Link__BUS_RESET_ENTRY(entry_2));
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 3300} vslice_dummy_var_506 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto L54;

  L54:
    Tmp_1415 := status_41;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon35_Then:
    goto L60;

  anon40_Then:
    goto L60;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon30_Then:
    assume {:partition} sdv_472 != 0;
    call {:si_unique_call 3301} workItem := IoAllocateWorkItem(0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} workItem != 0;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    call {:si_unique_call 3302} InsertHeadList(BusResetEntry__DEVICE_EXTENSION(PdoExtension_18), Link__BUS_RESET_ENTRY(entry_2));
    call {:si_unique_call 3303} IoQueueWorkItem#1(workItem, li2bplFunctionConstant461, 1, workItem);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1416;
    assume {:nonnull} Tmp_1416 != 0;
    assume Tmp_1416 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_1422;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1418;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    havoc vslice_dummy_var_4400;
    call {:si_unique_call 3304} WPP_SF_qDd(Tmp_1418, 28, Tmp_1422, PdoExtension_18, vslice_dummy_var_4400, Generation_5);
    goto L46;

  L46:
    status_41 := 0;
    goto L54;

  anon33_Then:
    goto L46;

  anon38_Then:
    goto L46;

  anon32_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    assume {:partition} workItem == 0;
    status_41 := -1073741670;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 3305} vslice_dummy_var_507 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1415 := status_41;
    goto L1;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:partition} entry_2 == 0;
    status_41 := -1073741670;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 3306} vslice_dummy_var_508 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1415 := status_41;
    goto L1;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:partition} 0 > status_41;
    Tmp_1415 := status_41;
    goto L1;
}



procedure {:origName "Sbp2QueueManagementWorkItem"} Sbp2QueueManagementWorkItem#1(actual_PdoExtension_18: int, actual_Action: int, actual_Generation_5: int) returns (Tmp_1415: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.PVOID, Mem_T.P_IRBIRP, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem#0(actual_IoWorkItem_1: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int)
{
  var {:scalar} WorkerRoutine: int;
  var {:scalar} QueueType: int;
  var {:pointer} Context: int;
  var vslice_dummy_var_509: int;

  anon0:
    call {:si_unique_call 3307} vslice_dummy_var_509 := __HAVOC_malloc(4);
    WorkerRoutine := actual_WorkerRoutine;
    QueueType := actual_QueueType;
    Context := actual_Context;
    call {:si_unique_call 3308} sdv_RunIoQueueWorkItems#0(0, WorkerRoutine, QueueType, Context);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem#0(actual_IoWorkItem_1: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem#1(actual_IoWorkItem_1: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int)
{
  var {:scalar} WorkerRoutine: int;
  var {:scalar} QueueType: int;
  var {:pointer} Context: int;
  var vslice_dummy_var_510: int;

  anon0:
    call {:si_unique_call 3309} vslice_dummy_var_510 := __HAVOC_malloc(4);
    WorkerRoutine := actual_WorkerRoutine;
    QueueType := actual_QueueType;
    Context := actual_Context;
    call {:si_unique_call 3310} sdv_RunIoQueueWorkItems#1(0, WorkerRoutine, QueueType, Context);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem#1(actual_IoWorkItem_1: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.PVOID, Mem_T.P_IRBIRP, yogi_error, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunIoQueueWorkItems"} {:osmodel} sdv_RunIoQueueWorkItems#0(actual_IoWorkItem_2: int, actual_WorkerRoutine_1: int, actual_QueueType_1: int, actual_Context_1: int)
{
  var {:scalar} WorkerRoutine_1: int;
  var {:pointer} Context_1: int;
  var vslice_dummy_var_511: int;

  anon0:
    call {:si_unique_call 3311} vslice_dummy_var_511 := __HAVOC_malloc(4);
    WorkerRoutine_1 := actual_WorkerRoutine_1;
    Context_1 := actual_Context_1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} WorkerRoutine_1 == li2bplFunctionConstant389;
    call {:si_unique_call 3312} Sbp2BusResetNotificationWorker#0(sdv_p_devobj_fdo, Context_1);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto L4;

  L4:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} WorkerRoutine_1 == li2bplFunctionConstant461;
    call {:si_unique_call 3313} Sbp2ManagementTransactionWorker#0(sdv_p_devobj_fdo, Context_1);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} WorkerRoutine_1 != li2bplFunctionConstant461;
    goto L1;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} WorkerRoutine_1 != li2bplFunctionConstant389;
    goto L4;
}



procedure {:origName "sdv_RunIoQueueWorkItems"} {:osmodel} sdv_RunIoQueueWorkItems#0(actual_IoWorkItem_2: int, actual_WorkerRoutine_1: int, actual_QueueType_1: int, actual_Context_1: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "sdv_RunIoQueueWorkItems"} {:osmodel} sdv_RunIoQueueWorkItems#1(actual_IoWorkItem_2: int, actual_WorkerRoutine_1: int, actual_QueueType_1: int, actual_Context_1: int)
{
  var {:scalar} WorkerRoutine_1: int;
  var {:pointer} Context_1: int;
  var vslice_dummy_var_512: int;

  anon0:
    call {:si_unique_call 3314} vslice_dummy_var_512 := __HAVOC_malloc(4);
    WorkerRoutine_1 := actual_WorkerRoutine_1;
    Context_1 := actual_Context_1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} WorkerRoutine_1 == li2bplFunctionConstant389;
    call {:si_unique_call 3315} Sbp2BusResetNotificationWorker#1(sdv_p_devobj_fdo, Context_1);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto L4;

  L4:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} WorkerRoutine_1 == li2bplFunctionConstant461;
    call {:si_unique_call 3316} Sbp2ManagementTransactionWorker#1(sdv_p_devobj_fdo, Context_1);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} WorkerRoutine_1 != li2bplFunctionConstant461;
    goto L1;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} WorkerRoutine_1 != li2bplFunctionConstant389;
    goto L4;
}



procedure {:origName "sdv_RunIoQueueWorkItems"} {:osmodel} sdv_RunIoQueueWorkItems#1(actual_IoWorkItem_2: int, actual_WorkerRoutine_1: int, actual_QueueType_1: int, actual_Context_1: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.PVOID, Mem_T.P_IRBIRP, yogi_error, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BusResetNotificationWorker"} Sbp2BusResetNotificationWorker#0(actual_DeviceObject_1: int, actual_BusResetItemIn: int)
{
  var {:scalar} i_3: int;
  var {:scalar} Tmp_721: int;
  var {:pointer} Tmp_722: int;
  var {:pointer} BusResetItem: int;
  var {:scalar} Tmp_723: int;
  var {:pointer} pdoExtension_6: int;
  var {:pointer} Tmp_724: int;
  var {:pointer} Tmp_725: int;
  var {:pointer} Tmp_726: int;
  var {:pointer} Tmp_727: int;
  var {:pointer} Tmp_728: int;
  var {:pointer} Tmp_729: int;
  var {:scalar} mgmtAction: int;
  var {:pointer} Tmp_730: int;
  var {:scalar} Tmp_731: int;
  var {:scalar} Tmp_732: int;
  var {:scalar} Tmp_733: int;
  var {:scalar} Tmp_734: int;
  var {:pointer} Tmp_735: int;
  var {:scalar} Tmp_736: int;
  var {:pointer} Tmp_737: int;
  var {:pointer} Tmp_738: int;
  var {:scalar} Tmp_740: int;
  var {:pointer} Tmp_741: int;
  var {:pointer} fdoExtension_1: int;
  var {:pointer} Tmp_742: int;
  var {:scalar} sdv_228: int;
  var {:pointer} Tmp_743: int;
  var {:pointer} Tmp_744: int;
  var {:pointer} Tmp_745: int;
  var {:scalar} Tmp_746: int;
  var {:scalar} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} Tmp_749: int;
  var {:scalar} sdv_230: int;
  var {:scalar} status_20: int;
  var {:scalar} Tmp_750: int;
  var {:scalar} irql_3: int;
  var {:pointer} Tmp_751: int;
  var {:pointer} Tmp_752: int;
  var {:pointer} Tmp_753: int;
  var {:pointer} Tmp_754: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} BusResetItemIn: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_4401: int;
  var vslice_dummy_var_4402: int;
  var vslice_dummy_var_4403: int;
  var vslice_dummy_var_4404: int;
  var vslice_dummy_var_4405: int;
  var vslice_dummy_var_4406: int;

  anon0:
    call {:si_unique_call 3317} vslice_dummy_var_513 := __HAVOC_malloc(4);
    DeviceObject_1 := actual_DeviceObject_1;
    BusResetItemIn := actual_BusResetItemIn;
    call {:si_unique_call 3318} Tmp_728 := __HAVOC_malloc(4);
    call {:si_unique_call 3319} Tmp_729 := __HAVOC_malloc(2680);
    call {:si_unique_call 3320} Tmp_730 := __HAVOC_malloc(2680);
    call {:si_unique_call 3321} Tmp_738 := __HAVOC_malloc(4);
    call {:si_unique_call 3322} Tmp_742 := __HAVOC_malloc(4);
    call {:si_unique_call 3323} Tmp_745 := __HAVOC_malloc(4);
    call {:si_unique_call 3324} Tmp_749 := __HAVOC_malloc(4);
    call {:si_unique_call 3325} Tmp_751 := __HAVOC_malloc(4);
    call {:si_unique_call 3326} Tmp_752 := __HAVOC_malloc(4);
    BusResetItem := BusResetItemIn;
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    fdoExtension_1 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_1)];
    i_3 := 0;
    mgmtAction := 0;
    call {:si_unique_call 3327} ExAcquireFastMutex(0);
    call {:si_unique_call 3328} Tmp_748 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    call {:si_unique_call 3329} sdv_KeAcquireSpinLock(0, Tmp_748);
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    havoc irql_3;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_1)] := BOR(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_1)], 8192);
    i_3 := 0;
    goto L22;

  L22:
    call {:si_unique_call 3330} i_3, Tmp_721, Tmp_722, Tmp_723, pdoExtension_6, Tmp_725, Tmp_726, Tmp_727, Tmp_728, Tmp_729, mgmtAction, Tmp_730, Tmp_732, Tmp_733, Tmp_735, Tmp_736, Tmp_737, Tmp_738, Tmp_740, Tmp_741, Tmp_744, Tmp_746, Tmp_747, Tmp_749, status_20, Tmp_751, Tmp_752, Tmp_754, vslice_dummy_var_514, vslice_dummy_var_515, vslice_dummy_var_517, vslice_dummy_var_518, vslice_dummy_var_519 := Sbp2BusResetNotificationWorker#0_loop_L22(i_3, Tmp_721, Tmp_722, BusResetItem, Tmp_723, pdoExtension_6, Tmp_725, Tmp_726, Tmp_727, Tmp_728, Tmp_729, mgmtAction, Tmp_730, Tmp_732, Tmp_733, Tmp_735, Tmp_736, Tmp_737, Tmp_738, Tmp_740, Tmp_741, fdoExtension_1, Tmp_744, Tmp_746, Tmp_747, Tmp_749, status_20, Tmp_751, Tmp_752, Tmp_754, vslice_dummy_var_514, vslice_dummy_var_515, vslice_dummy_var_517, vslice_dummy_var_518, vslice_dummy_var_519);
    goto L22_last;

  L22_last:
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    Tmp_746 := i_3;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc Tmp_730;
    assume {:nonnull} Tmp_730 != 0;
    assume Tmp_730 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_730 + Tmp_746 * 268)] == 0;
    goto L82;

  L82:
    i_3 := i_3 + 1;
    goto L82_dummy;

  L82_dummy:
    assume false;
    return;

  anon141_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_730 + Tmp_746 * 268)] != 0;
    Tmp_733 := i_3;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc Tmp_729;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    Tmp_741 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_729 + Tmp_733 * 268)];
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    pdoExtension_6 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_741)];
    call {:si_unique_call 3331} status_20 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} status_20 < 0;
    goto L82;

  anon108_Then:
    assume {:partition} 0 <= status_20;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_728;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_726;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_721;
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4401;
    havoc vslice_dummy_var_4402;
    call {:si_unique_call 3332} WPP_SF_qDd(Tmp_721, 20, Tmp_726, pdoExtension_6, vslice_dummy_var_4401, vslice_dummy_var_4402);
    goto L37;

  L37:
    call {:si_unique_call 3333} Sbp2AddLog(pdoExtension_6, 1, -764185538, fdoExtension_1, i_3);
    call {:si_unique_call 3334} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 3335} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto L54;

  L54:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    call {:si_unique_call 3336} vslice_dummy_var_514 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto L56;

  L56:
    call {:si_unique_call 3337} Sbp2AddLog(pdoExtension_6, 1, -764185551, 0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 3338} vslice_dummy_var_517 := KeSetEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_6), 0, 0);
    goto L72;

  L72:
    call {:si_unique_call 3339} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 3340} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 3341} vslice_dummy_var_515 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_6), 0);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} yogi_error != 1;
    mgmtAction := 0;
    goto L82;

  anon143_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon115_Then:
    mgmtAction := 2;
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    goto L86;

  L86:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_738;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    havoc Tmp_735;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_723;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4403;
    call {:si_unique_call 3342} WPP_SF_qD(Tmp_723, 22, Tmp_735, pdoExtension_6, vslice_dummy_var_4403);
    goto L92;

  L92:
    call {:si_unique_call 3343} Sbp2AddLog(pdoExtension_6, 1, -764185550, 0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    mgmtAction := 1;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_727;
    assume {:nonnull} Tmp_727 != 0;
    assume Tmp_727 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    mgmtAction := 2;
    goto L106;

  L106:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} mgmtAction == 1;
    call {:si_unique_call 3344} Sbp2AddLog(pdoExtension_6, 1, -764185549, 0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 3345} sdv_KeReleaseSpinLock(0, irql_3);
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    assume false;
    return;

  anon148_Then:
    assume {:partition} mgmtAction != 1;
    goto L110;

  L110:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} mgmtAction == 2;
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    assume false;
    return;

  anon119_Then:
    assume {:partition} mgmtAction != 2;
    goto L146;

  L146:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} mgmtAction == 3;
    call {:si_unique_call 3346} Sbp2AddLog(pdoExtension_6, 1, -764185547, mgmtAction, 0);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_749;
    assume {:nonnull} Tmp_749 != 0;
    assume Tmp_749 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_722;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    havoc Tmp_740;
    havoc Tmp_737;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_736;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4404;
    call {:si_unique_call 3347} WPP_SF_qDDd(Tmp_736, 26, Tmp_737, pdoExtension_6, status_20, vslice_dummy_var_4404, Tmp_740);
    goto L175;

  L175:
    call {:si_unique_call 3348} Sbp2SetDeferLoginTimer(pdoExtension_6);
    goto L72;

  anon130_Then:
    goto L175;

  anon151_Then:
    goto L175;

  anon129_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;

  anon124_Then:
    assume {:partition} mgmtAction != 3;
    goto L72;

  anon147_Then:
    goto L106;

  anon117_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_752;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    havoc Tmp_725;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_732;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4405;
    call {:si_unique_call 3349} WPP_SF_qD(Tmp_732, 23, Tmp_725, pdoExtension_6, vslice_dummy_var_4405);
    goto L191;

  L191:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 3350} vslice_dummy_var_518 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 3351} vslice_dummy_var_519 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_6), 0, 0);
    mgmtAction := 2;
    goto L108;

  anon133_Then:
    goto L191;

  anon156_Then:
    goto L191;

  anon132_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L191;

  anon118_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    mgmtAction := 2;
    goto L108;

  anon131_Then:
    mgmtAction := 2;
    goto L108;

  anon116_Then:
    goto L92;

  anon146_Then:
    goto L92;

  anon145_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L92;

  anon144_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_754;
    assume {:nonnull} Tmp_754 != 0;
    assume Tmp_754 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    goto L92;

  anon136_Then:
    goto L86;

  anon135_Then:
    goto L92;

  anon134_Then:
    goto L92;

  anon157_Then:
    goto L92;

  anon113_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    goto L216;

  L216:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_751;
    assume {:nonnull} Tmp_751 != 0;
    assume Tmp_751 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc Tmp_744;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_747;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4406;
    call {:si_unique_call 3352} WPP_SF_qD(Tmp_747, 21, Tmp_744, pdoExtension_6, vslice_dummy_var_4406);
    goto L72;

  anon139_Then:
    goto L72;

  anon158_Then:
    goto L72;

  anon138_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L72;

  anon114_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L216;

  anon140_Then:
    goto L83;

  anon137_Then:
    goto L216;

  anon112_Then:
    goto L56;

  anon111_Then:
    goto L54;

  anon110_Then:
    goto L37;

  anon142_Then:
    goto L37;

  anon109_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L37;

  anon107_Then:
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_1)] := BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_1)], BNOT(8192));
    call {:si_unique_call 3353} sdv_KeReleaseSpinLock(0, irql_3);
    call {:si_unique_call 3354} ExReleaseFastMutex(0);
    call {:si_unique_call 3355} IoFreeWorkItem(0);
    call {:si_unique_call 3356} ExFreePoolWithTag(0, -344497581);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 3357} vslice_dummy_var_516 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  anon159_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2BusResetNotificationWorker"} Sbp2BusResetNotificationWorker#0(actual_DeviceObject_1: int, actual_BusResetItemIn: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, yogi_error;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BusResetNotificationWorker"} Sbp2BusResetNotificationWorker#1(actual_DeviceObject_1: int, actual_BusResetItemIn: int)
{
  var {:scalar} i_3: int;
  var {:scalar} Tmp_721: int;
  var {:pointer} Tmp_722: int;
  var {:pointer} BusResetItem: int;
  var {:scalar} Tmp_723: int;
  var {:pointer} pdoExtension_6: int;
  var {:pointer} Tmp_724: int;
  var {:pointer} Tmp_725: int;
  var {:pointer} Tmp_726: int;
  var {:pointer} Tmp_727: int;
  var {:pointer} Tmp_728: int;
  var {:pointer} Tmp_729: int;
  var {:scalar} mgmtAction: int;
  var {:pointer} Tmp_730: int;
  var {:scalar} Tmp_731: int;
  var {:scalar} Tmp_732: int;
  var {:scalar} Tmp_733: int;
  var {:scalar} Tmp_734: int;
  var {:pointer} Tmp_735: int;
  var {:scalar} Tmp_736: int;
  var {:pointer} Tmp_737: int;
  var {:pointer} Tmp_738: int;
  var {:scalar} Tmp_740: int;
  var {:pointer} Tmp_741: int;
  var {:pointer} fdoExtension_1: int;
  var {:pointer} Tmp_742: int;
  var {:scalar} sdv_228: int;
  var {:pointer} Tmp_743: int;
  var {:pointer} Tmp_744: int;
  var {:pointer} Tmp_745: int;
  var {:scalar} Tmp_746: int;
  var {:scalar} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} Tmp_749: int;
  var {:scalar} sdv_230: int;
  var {:scalar} status_20: int;
  var {:scalar} Tmp_750: int;
  var {:scalar} irql_3: int;
  var {:pointer} Tmp_751: int;
  var {:pointer} Tmp_752: int;
  var {:pointer} Tmp_753: int;
  var {:pointer} Tmp_754: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} BusResetItemIn: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_525: int;
  var vslice_dummy_var_526: int;
  var vslice_dummy_var_4407: int;
  var vslice_dummy_var_4408: int;
  var vslice_dummy_var_4409: int;
  var vslice_dummy_var_4410: int;
  var vslice_dummy_var_4411: int;
  var vslice_dummy_var_4412: int;
  var vslice_dummy_var_4413: int;
  var vslice_dummy_var_4414: int;
  var vslice_dummy_var_4415: int;
  var vslice_dummy_var_4416: int;

  anon0:
    call {:si_unique_call 3358} vslice_dummy_var_520 := __HAVOC_malloc(4);
    DeviceObject_1 := actual_DeviceObject_1;
    BusResetItemIn := actual_BusResetItemIn;
    call {:si_unique_call 3359} Tmp_728 := __HAVOC_malloc(4);
    call {:si_unique_call 3360} Tmp_729 := __HAVOC_malloc(2680);
    call {:si_unique_call 3361} Tmp_730 := __HAVOC_malloc(2680);
    call {:si_unique_call 3362} Tmp_738 := __HAVOC_malloc(4);
    call {:si_unique_call 3363} Tmp_742 := __HAVOC_malloc(4);
    call {:si_unique_call 3364} Tmp_745 := __HAVOC_malloc(4);
    call {:si_unique_call 3365} Tmp_749 := __HAVOC_malloc(4);
    call {:si_unique_call 3366} Tmp_751 := __HAVOC_malloc(4);
    call {:si_unique_call 3367} Tmp_752 := __HAVOC_malloc(4);
    BusResetItem := BusResetItemIn;
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    fdoExtension_1 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_1)];
    i_3 := 0;
    mgmtAction := 0;
    call {:si_unique_call 3368} ExAcquireFastMutex(0);
    call {:si_unique_call 3369} Tmp_748 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    call {:si_unique_call 3370} sdv_KeAcquireSpinLock(0, Tmp_748);
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    havoc irql_3;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_1)] := BOR(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_1)], 8192);
    i_3 := 0;
    goto L22;

  L22:
    call {:si_unique_call 3371} i_3, Tmp_721, Tmp_722, Tmp_723, pdoExtension_6, Tmp_724, Tmp_725, Tmp_726, Tmp_727, Tmp_728, Tmp_729, mgmtAction, Tmp_730, Tmp_731, Tmp_732, Tmp_733, Tmp_734, Tmp_735, Tmp_736, Tmp_737, Tmp_738, Tmp_740, Tmp_741, Tmp_742, sdv_228, Tmp_743, Tmp_744, Tmp_745, Tmp_746, Tmp_747, Tmp_748, Tmp_749, sdv_230, status_20, Tmp_750, irql_3, Tmp_751, Tmp_752, Tmp_753, Tmp_754, vslice_dummy_var_521, vslice_dummy_var_522, vslice_dummy_var_524, vslice_dummy_var_525, vslice_dummy_var_526 := Sbp2BusResetNotificationWorker#1_loop_L22(i_3, Tmp_721, Tmp_722, BusResetItem, Tmp_723, pdoExtension_6, Tmp_724, Tmp_725, Tmp_726, Tmp_727, Tmp_728, Tmp_729, mgmtAction, Tmp_730, Tmp_731, Tmp_732, Tmp_733, Tmp_734, Tmp_735, Tmp_736, Tmp_737, Tmp_738, Tmp_740, Tmp_741, fdoExtension_1, Tmp_742, sdv_228, Tmp_743, Tmp_744, Tmp_745, Tmp_746, Tmp_747, Tmp_748, Tmp_749, sdv_230, status_20, Tmp_750, irql_3, Tmp_751, Tmp_752, Tmp_753, Tmp_754, vslice_dummy_var_521, vslice_dummy_var_522, vslice_dummy_var_524, vslice_dummy_var_525, vslice_dummy_var_526);
    goto L22_last;

  L22_last:
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    Tmp_746 := i_3;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc Tmp_730;
    assume {:nonnull} Tmp_730 != 0;
    assume Tmp_730 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_730 + Tmp_746 * 268)] == 0;
    goto L82;

  L82:
    i_3 := i_3 + 1;
    goto L82_dummy;

  L82_dummy:
    assume false;
    return;

  anon141_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_730 + Tmp_746 * 268)] != 0;
    Tmp_733 := i_3;
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    havoc Tmp_729;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    Tmp_741 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(Tmp_729 + Tmp_733 * 268)];
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    pdoExtension_6 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_741)];
    call {:si_unique_call 3372} status_20 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} status_20 < 0;
    goto L82;

  anon108_Then:
    assume {:partition} 0 <= status_20;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_728;
    assume {:nonnull} Tmp_728 != 0;
    assume Tmp_728 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_726;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_721;
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4407;
    havoc vslice_dummy_var_4408;
    call {:si_unique_call 3373} WPP_SF_qDd(Tmp_721, 20, Tmp_726, pdoExtension_6, vslice_dummy_var_4407, vslice_dummy_var_4408);
    goto L37;

  L37:
    call {:si_unique_call 3374} Sbp2AddLog(pdoExtension_6, 1, -764185538, fdoExtension_1, i_3);
    call {:si_unique_call 3375} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 3376} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto L54;

  L54:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    call {:si_unique_call 3377} vslice_dummy_var_521 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto L56;

  L56:
    call {:si_unique_call 3378} Sbp2AddLog(pdoExtension_6, 1, -764185551, 0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 3379} vslice_dummy_var_524 := KeSetEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_6), 0, 0);
    goto L72;

  L72:
    call {:si_unique_call 3380} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 3381} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 3382} vslice_dummy_var_522 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_6), 0);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} yogi_error != 1;
    mgmtAction := 0;
    goto L82;

  anon143_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon115_Then:
    mgmtAction := 2;
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    goto L86;

  L86:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_738;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    havoc Tmp_735;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_723;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4409;
    call {:si_unique_call 3383} WPP_SF_qD(Tmp_723, 22, Tmp_735, pdoExtension_6, vslice_dummy_var_4409);
    goto L92;

  L92:
    call {:si_unique_call 3384} Sbp2AddLog(pdoExtension_6, 1, -764185550, 0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    mgmtAction := 1;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_727;
    assume {:nonnull} Tmp_727 != 0;
    assume Tmp_727 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    mgmtAction := 2;
    goto L106;

  L106:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} mgmtAction == 1;
    call {:si_unique_call 3385} Sbp2AddLog(pdoExtension_6, 1, -764185549, 0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 3386} sdv_KeReleaseSpinLock(0, irql_3);
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    havoc vslice_dummy_var_4410;
    call {:si_unique_call 3387} status_20 := Sbp2ManagementTransaction#0(pdoExtension_6, 3, vslice_dummy_var_4410);
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3388} Tmp_748 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    call {:si_unique_call 3389} sdv_KeAcquireSpinLock(0, Tmp_748);
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    havoc irql_3;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} status_20 < 0;
    call {:si_unique_call 3390} sdv_228 := IsDeviceGone#1(pdoExtension_6, status_20);
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} yogi_error != 1;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} sdv_228 != 0;
    goto L134;

  L134:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_745;
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_724;
    assume {:nonnull} Tmp_724 != 0;
    assume Tmp_724 > 0;
    havoc Tmp_734;
    havoc Tmp_743;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_750;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4411;
    call {:si_unique_call 3391} WPP_SF_qDDd(Tmp_750, 24, Tmp_743, pdoExtension_6, status_20, vslice_dummy_var_4411, Tmp_734);
    goto L135;

  L135:
    call {:si_unique_call 3392} Sbp2AddLog(pdoExtension_6, 1, -764185548, status_20, 0);
    goto L110;

  L110:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} mgmtAction == 2;
    assume {:nonnull} BusResetItem != 0;
    assume BusResetItem > 0;
    havoc vslice_dummy_var_4412;
    call {:si_unique_call 3393} status_20 := Sbp2QueueManagementWorkItem#0(pdoExtension_6, 2, vslice_dummy_var_4412);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} yogi_error != 1;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} status_20 < 0;
    call {:si_unique_call 3394} sdv_230 := IsDeviceGone#1(pdoExtension_6, status_20);
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} yogi_error != 1;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} sdv_230 == 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_742;
    assume {:nonnull} Tmp_742 != 0;
    assume Tmp_742 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    havoc Tmp_753;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_731;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4413;
    call {:si_unique_call 3395} WPP_SF_qDD(Tmp_731, 25, Tmp_753, pdoExtension_6, status_20, vslice_dummy_var_4413);
    goto L160;

  L160:
    mgmtAction := 3;
    goto L146;

  L146:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} mgmtAction == 3;
    call {:si_unique_call 3396} Sbp2AddLog(pdoExtension_6, 1, -764185547, mgmtAction, 0);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_749;
    assume {:nonnull} Tmp_749 != 0;
    assume Tmp_749 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_722;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    havoc Tmp_740;
    havoc Tmp_737;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_736;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4414;
    call {:si_unique_call 3397} WPP_SF_qDDd(Tmp_736, 26, Tmp_737, pdoExtension_6, status_20, vslice_dummy_var_4414, Tmp_740);
    goto L175;

  L175:
    call {:si_unique_call 3398} Sbp2SetDeferLoginTimer(pdoExtension_6);
    goto L72;

  anon130_Then:
    goto L175;

  anon151_Then:
    goto L175;

  anon129_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;

  anon124_Then:
    assume {:partition} mgmtAction != 3;
    goto L72;

  anon128_Then:
    goto L160;

  anon153_Then:
    goto L160;

  anon127_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L160;

  anon126_Then:
    assume {:partition} sdv_230 != 0;
    goto L146;

  anon152_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon125_Then:
    assume {:partition} 0 <= status_20;
    goto L146;

  anon150_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon119_Then:
    assume {:partition} mgmtAction != 2;
    goto L146;

  anon123_Then:
    goto L135;

  anon155_Then:
    goto L135;

  anon122_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L135;

  anon121_Then:
    assume {:partition} sdv_228 == 0;
    mgmtAction := 2;
    goto L134;

  anon154_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon120_Then:
    assume {:partition} 0 <= status_20;
    goto L110;

  anon149_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon148_Then:
    assume {:partition} mgmtAction != 1;
    goto L110;

  anon147_Then:
    goto L106;

  anon117_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_752;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    havoc Tmp_725;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_732;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4415;
    call {:si_unique_call 3399} WPP_SF_qD(Tmp_732, 23, Tmp_725, pdoExtension_6, vslice_dummy_var_4415);
    goto L191;

  L191:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 3400} vslice_dummy_var_525 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 3401} vslice_dummy_var_526 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_6), 0, 0);
    mgmtAction := 2;
    goto L108;

  anon133_Then:
    goto L191;

  anon156_Then:
    goto L191;

  anon132_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L191;

  anon118_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    mgmtAction := 2;
    goto L108;

  anon131_Then:
    mgmtAction := 2;
    goto L108;

  anon116_Then:
    goto L92;

  anon146_Then:
    goto L92;

  anon145_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L92;

  anon144_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc Tmp_754;
    assume {:nonnull} Tmp_754 != 0;
    assume Tmp_754 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    goto L92;

  anon136_Then:
    goto L86;

  anon135_Then:
    goto L92;

  anon134_Then:
    goto L92;

  anon157_Then:
    goto L92;

  anon113_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    goto L216;

  L216:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_751;
    assume {:nonnull} Tmp_751 != 0;
    assume Tmp_751 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc Tmp_744;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_747;
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    havoc vslice_dummy_var_4416;
    call {:si_unique_call 3402} WPP_SF_qD(Tmp_747, 21, Tmp_744, pdoExtension_6, vslice_dummy_var_4416);
    goto L72;

  anon139_Then:
    goto L72;

  anon158_Then:
    goto L72;

  anon138_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L72;

  anon114_Then:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L216;

  anon140_Then:
    goto L83;

  anon137_Then:
    goto L216;

  anon112_Then:
    goto L56;

  anon111_Then:
    goto L54;

  anon110_Then:
    goto L37;

  anon142_Then:
    goto L37;

  anon109_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L37;

  anon107_Then:
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_1)] := BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(fdoExtension_1)], BNOT(8192));
    call {:si_unique_call 3403} sdv_KeReleaseSpinLock(0, irql_3);
    call {:si_unique_call 3404} ExReleaseFastMutex(0);
    call {:si_unique_call 3405} IoFreeWorkItem(0);
    call {:si_unique_call 3406} ExFreePoolWithTag(0, -344497581);
    assume {:nonnull} fdoExtension_1 != 0;
    assume fdoExtension_1 > 0;
    call {:si_unique_call 3407} vslice_dummy_var_523 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_1), 0);
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  anon159_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2BusResetNotificationWorker"} Sbp2BusResetNotificationWorker#1(actual_DeviceObject_1: int, actual_BusResetItemIn: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ManagementTransactionWorker"} Sbp2ManagementTransactionWorker#0(actual_DeviceObject: int, actual_WorkItemIn: int)
{
  var {:pointer} Tmp_624: int;
  var {:pointer} pdoExtension_5: int;
  var {:pointer} Tmp_625: int;
  var {:scalar} sdv_188: int;
  var {:scalar} sdv_190: int;
  var {:pointer} Tmp_627: int;
  var {:scalar} sdv_193: int;
  var {:pointer} WorkItem: int;
  var {:pointer} sdv_195: int;
  var {:scalar} status_16: int;
  var {:scalar} Tmp_628: int;
  var {:pointer} entry_1: int;
  var {:scalar} irql_2: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} WorkItemIn: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_528: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;
  var vslice_dummy_var_4417: int;
  var vslice_dummy_var_4418: int;
  var vslice_dummy_var_4419: int;

  anon0:
    call {:si_unique_call 3408} vslice_dummy_var_527 := __HAVOC_malloc(4);
    DeviceObject := actual_DeviceObject;
    WorkItemIn := actual_WorkItemIn;
    call {:si_unique_call 3409} Tmp_625 := __HAVOC_malloc(4);
    WorkItem := WorkItemIn;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    pdoExtension_5 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject)];
    status_16 := -1073741810;
    call {:si_unique_call 3410} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    call {:si_unique_call 3411} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    havoc irql_2;
    call {:si_unique_call 3412} Sbp2AddLog(pdoExtension_5, 1, -848865463, WorkItem, 0);
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L20;

  L20:
    call {:si_unique_call 3413} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3414} sdv_188 := IsDeviceGone#0(pdoExtension_5, status_16);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_188 != 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 3415} vslice_dummy_var_531 := KeSetEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_5), 0, 0);
    goto L31;

  L31:
    call {:si_unique_call 3416} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    call {:si_unique_call 3417} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    havoc irql_2;
    goto L38;

  L38:
    call {:si_unique_call 3418} sdv_193, sdv_195, entry_1 := Sbp2ManagementTransactionWorker#0_loop_L38(pdoExtension_5, sdv_193, sdv_195, entry_1);
    goto L38_last;

  L38_last:
    call {:si_unique_call 3440} sdv_193 := sdv_IsListEmpty(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_193 != 0;
    call {:si_unique_call 3419} sdv_KeReleaseSpinLock(0, irql_2);
    goto L27;

  L27:
    call {:si_unique_call 3420} IoFreeWorkItem(0);
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 3421} vslice_dummy_var_528 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_5), 0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    assume {:partition} sdv_193 == 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 3422} sdv_195 := RemoveHeadList(BusResetEntry__DEVICE_EXTENSION(pdoExtension_5));
    entry_1 := sdv_195;
    call {:si_unique_call 3423} sdv_ExFreePool(0);
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    assume false;
    return;

  anon36_Then:
    goto L31;

  anon35_Then:
    assume {:partition} sdv_188 == 0;
    goto L27;

  anon43_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    goto L18;

  L18:
    call {:si_unique_call 3424} Tmp_627, irql_2, vslice_dummy_var_529 := Sbp2ManagementTransactionWorker#0_loop_L18(pdoExtension_5, Tmp_627, irql_2, vslice_dummy_var_529);
    goto L18_last;

  L18_last:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 3425} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3426} vslice_dummy_var_529 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 3427} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    call {:si_unique_call 3428} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    havoc irql_2;
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    assume false;
    return;

  anon34_Then:
    goto L55;

  L55:
    call {:si_unique_call 3429} Tmp_624, Tmp_625, sdv_190, Tmp_627, status_16, Tmp_628, entry_1, irql_2, vslice_dummy_var_530 := Sbp2ManagementTransactionWorker#0_loop_L55(Tmp_624, pdoExtension_5, Tmp_625, sdv_190, Tmp_627, status_16, Tmp_628, entry_1, irql_2, vslice_dummy_var_530);
    goto L55_last;

  L55_last:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    havoc entry_1;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L97;

  L97:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_625;
    assume {:nonnull} Tmp_625 != 0;
    assume Tmp_625 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_624;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_628;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    havoc vslice_dummy_var_4417;
    havoc vslice_dummy_var_4418;
    havoc vslice_dummy_var_4419;
    call {:si_unique_call 3430} WPP_SF_qDddD(Tmp_628, 85, Tmp_624, pdoExtension_5, vslice_dummy_var_4417, vslice_dummy_var_4418, vslice_dummy_var_4419, status_16);
    goto L98;

  L98:
    call {:si_unique_call 3431} vslice_dummy_var_530 := sdv_RemoveEntryList(0);
    call {:si_unique_call 3432} sdv_ExFreePool(0);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_16 != -1073741810;
    call {:si_unique_call 3433} sdv_190 := sdv_IsListEmpty(0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} sdv_190 == 0;
    goto anon41_Else_dummy;

  anon41_Else_dummy:
    assume false;
    return;

  anon41_Then:
    assume {:partition} sdv_190 != 0;
    goto L20;

  anon40_Then:
    assume {:partition} status_16 == -1073741810;
    goto L20;

  anon39_Then:
    goto L98;

  anon47_Then:
    goto L98;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L98;

  anon42_Then:
    call {:si_unique_call 3434} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3435} status_16 := Sbp2Issue1394BusReset#0(pdoExtension_5);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3436} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    call {:si_unique_call 3437} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    havoc irql_2;
    call {:si_unique_call 3438} Sbp2AddLog(pdoExtension_5, 1, -848865486, status_16, 0);
    goto L97;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    call {:si_unique_call 3439} sdv_KeReleaseSpinLock(0, irql_2);
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    assume false;
    return;
}



procedure {:origName "Sbp2ManagementTransactionWorker"} Sbp2ManagementTransactionWorker#0(actual_DeviceObject: int, actual_WorkItemIn: int);
  modifies alloc, LockDepth, Mem_T.P_IRBIRP, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> LockDepth == old(LockDepth) - 1;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ManagementTransactionWorker"} Sbp2ManagementTransactionWorker#1(actual_DeviceObject: int, actual_WorkItemIn: int)
{
  var {:pointer} Tmp_624: int;
  var {:pointer} pdoExtension_5: int;
  var {:pointer} Tmp_625: int;
  var {:scalar} sdv_188: int;
  var {:scalar} sdv_190: int;
  var {:pointer} Tmp_627: int;
  var {:scalar} sdv_193: int;
  var {:pointer} WorkItem: int;
  var {:pointer} sdv_195: int;
  var {:scalar} status_16: int;
  var {:scalar} Tmp_628: int;
  var {:pointer} entry_1: int;
  var {:scalar} irql_2: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} WorkItemIn: int;
  var vslice_dummy_var_532: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_534: int;
  var vslice_dummy_var_535: int;
  var vslice_dummy_var_536: int;
  var vslice_dummy_var_4420: int;
  var vslice_dummy_var_4421: int;
  var vslice_dummy_var_4422: int;
  var vslice_dummy_var_4423: int;

  anon0:
    call {:si_unique_call 3441} vslice_dummy_var_532 := __HAVOC_malloc(4);
    DeviceObject := actual_DeviceObject;
    WorkItemIn := actual_WorkItemIn;
    call {:si_unique_call 3442} Tmp_625 := __HAVOC_malloc(4);
    WorkItem := WorkItemIn;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    pdoExtension_5 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject)];
    status_16 := -1073741810;
    call {:si_unique_call 3443} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    call {:si_unique_call 3444} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    havoc irql_2;
    call {:si_unique_call 3445} Sbp2AddLog(pdoExtension_5, 1, -848865463, WorkItem, 0);
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L20;

  L20:
    call {:si_unique_call 3446} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3447} sdv_188 := IsDeviceGone#1(pdoExtension_5, status_16);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_188 != 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 3448} vslice_dummy_var_536 := KeSetEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_5), 0, 0);
    goto L31;

  L31:
    call {:si_unique_call 3449} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    call {:si_unique_call 3450} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    havoc irql_2;
    goto L38;

  L38:
    call {:si_unique_call 3451} sdv_193, sdv_195, entry_1 := Sbp2ManagementTransactionWorker#1_loop_L38(pdoExtension_5, sdv_193, sdv_195, entry_1);
    goto L38_last;

  L38_last:
    call {:si_unique_call 3477} sdv_193 := sdv_IsListEmpty(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_193 != 0;
    call {:si_unique_call 3452} sdv_KeReleaseSpinLock(0, irql_2);
    goto L27;

  L27:
    call {:si_unique_call 3453} IoFreeWorkItem(0);
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 3454} vslice_dummy_var_533 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_5), 0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    assume {:partition} sdv_193 == 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 3455} sdv_195 := RemoveHeadList(BusResetEntry__DEVICE_EXTENSION(pdoExtension_5));
    entry_1 := sdv_195;
    call {:si_unique_call 3456} sdv_ExFreePool(0);
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    assume false;
    return;

  anon36_Then:
    goto L31;

  anon35_Then:
    assume {:partition} sdv_188 == 0;
    goto L27;

  anon43_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    goto L18;

  L18:
    call {:si_unique_call 3457} Tmp_627, irql_2, vslice_dummy_var_534 := Sbp2ManagementTransactionWorker#1_loop_L18(pdoExtension_5, Tmp_627, irql_2, vslice_dummy_var_534);
    goto L18_last;

  L18_last:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 3458} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3459} vslice_dummy_var_534 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 3460} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    call {:si_unique_call 3461} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    havoc irql_2;
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    assume false;
    return;

  anon34_Then:
    goto L55;

  L55:
    call {:si_unique_call 3462} Tmp_624, Tmp_625, sdv_190, Tmp_627, status_16, Tmp_628, entry_1, irql_2, vslice_dummy_var_535 := Sbp2ManagementTransactionWorker#1_loop_L55(Tmp_624, pdoExtension_5, Tmp_625, sdv_190, Tmp_627, status_16, Tmp_628, entry_1, irql_2, vslice_dummy_var_535);
    goto L55_last;

  L55_last:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    havoc entry_1;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L97;

  L97:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_625;
    assume {:nonnull} Tmp_625 != 0;
    assume Tmp_625 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_624;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_628;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    havoc vslice_dummy_var_4420;
    havoc vslice_dummy_var_4421;
    havoc vslice_dummy_var_4422;
    call {:si_unique_call 3463} WPP_SF_qDddD(Tmp_628, 85, Tmp_624, pdoExtension_5, vslice_dummy_var_4420, vslice_dummy_var_4421, vslice_dummy_var_4422, status_16);
    goto L98;

  L98:
    call {:si_unique_call 3464} vslice_dummy_var_535 := sdv_RemoveEntryList(0);
    call {:si_unique_call 3465} sdv_ExFreePool(0);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_16 != -1073741810;
    call {:si_unique_call 3466} sdv_190 := sdv_IsListEmpty(0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} sdv_190 == 0;
    goto anon41_Else_dummy;

  anon41_Else_dummy:
    assume false;
    return;

  anon41_Then:
    assume {:partition} sdv_190 != 0;
    goto L20;

  anon40_Then:
    assume {:partition} status_16 == -1073741810;
    goto L20;

  anon39_Then:
    goto L98;

  anon47_Then:
    goto L98;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L98;

  anon42_Then:
    call {:si_unique_call 3467} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3468} status_16 := Sbp2Issue1394BusReset#1(pdoExtension_5);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3469} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    call {:si_unique_call 3470} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    havoc irql_2;
    call {:si_unique_call 3471} Sbp2AddLog(pdoExtension_5, 1, -848865486, status_16, 0);
    goto L97;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    call {:si_unique_call 3472} sdv_KeReleaseSpinLock(0, irql_2);
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    havoc vslice_dummy_var_4423;
    call {:si_unique_call 3473} status_16 := Sbp2ManagementTransaction#0(pdoExtension_5, 0, vslice_dummy_var_4423);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3474} Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    call {:si_unique_call 3475} sdv_KeAcquireSpinLock(0, Tmp_627);
    assume {:nonnull} Tmp_627 != 0;
    assume Tmp_627 > 0;
    havoc irql_2;
    call {:si_unique_call 3476} Sbp2AddLog(pdoExtension_5, 1, -848865487, status_16, 0);
    goto L97;

  anon46_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2ManagementTransactionWorker"} Sbp2ManagementTransactionWorker#1(actual_DeviceObject: int, actual_WorkItemIn: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket#0(actual_DeviceObject_31: int, actual_Irp_18: int, actual_Key_1: int)
{
  var {:pointer} irpStack_11: int;
  var {:scalar} inserted_1: int;
  var {:pointer} nextEntry_2: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} queueEntry2_1: int;
  var {:pointer} sdv_502: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} Tmp_1498: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_31: int;
  var {:pointer} Irp_18: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_537: int;
  var vslice_dummy_var_538: int;

  anon0:
    call {:si_unique_call 3478} vslice_dummy_var_537 := __HAVOC_malloc(4);
    DeviceObject_31 := actual_DeviceObject_31;
    Irp_18 := actual_Irp_18;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_31);
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_18)));
    call {:si_unique_call 3479} Tmp_1498 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1498 != 0;
    assume Tmp_1498 > 0;
    call {:si_unique_call 3480} sdv_KeRaiseIrql(2, Tmp_1498);
    assume {:nonnull} Tmp_1498 != 0;
    assume Tmp_1498 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 3481} irpStack_11 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    call {:si_unique_call 3482} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L31;

  L31:
    call {:si_unique_call 3483} nextEntry_2, queueEntry2_1, sdv_502 := Sbp2StartPacket#0_loop_L31(nextEntry_2, queueEntry2_1, sdv_502, Key_1);
    goto L31_last;

  L31_last:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 3484} sdv_502 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_502;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    assume false;
    return;

  anon20_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3485} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  L43:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3486} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} inserted_1 != 0;
    goto L51;

  L51:
    call {:si_unique_call 3487} sdv_KeLowerIrql(oldIrql_4);
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} inserted_1 == 0;
    call {:si_unique_call 3488} Sbp2StartIo#0(DeviceObject_31, Irp_18);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L51;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    goto L32;

  anon19_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;

  anon15_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 3489} vslice_dummy_var_538 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  anon16_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket#0(actual_DeviceObject_31: int, actual_Irp_18: int, actual_Key_1: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket#1(actual_DeviceObject_31: int, actual_Irp_18: int, actual_Key_1: int)
{
  var {:pointer} irpStack_11: int;
  var {:scalar} inserted_1: int;
  var {:pointer} nextEntry_2: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} queueEntry2_1: int;
  var {:pointer} sdv_502: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} Tmp_1498: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_31: int;
  var {:pointer} Irp_18: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;

  anon0:
    call {:si_unique_call 3490} vslice_dummy_var_539 := __HAVOC_malloc(4);
    DeviceObject_31 := actual_DeviceObject_31;
    Irp_18 := actual_Irp_18;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_31);
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_18)));
    call {:si_unique_call 3491} Tmp_1498 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1498 != 0;
    assume Tmp_1498 > 0;
    call {:si_unique_call 3492} sdv_KeRaiseIrql(2, Tmp_1498);
    assume {:nonnull} Tmp_1498 != 0;
    assume Tmp_1498 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 3493} irpStack_11 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    call {:si_unique_call 3494} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L31;

  L31:
    call {:si_unique_call 3495} nextEntry_2, queueEntry2_1, sdv_502 := Sbp2StartPacket#1_loop_L31(nextEntry_2, queueEntry2_1, sdv_502, Key_1);
    goto L31_last;

  L31_last:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 3496} sdv_502 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_502;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    assume false;
    return;

  anon20_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3497} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  L43:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3498} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} inserted_1 != 0;
    goto L51;

  L51:
    call {:si_unique_call 3499} sdv_KeLowerIrql(oldIrql_4);
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} inserted_1 == 0;
    call {:si_unique_call 3500} Sbp2StartIo#1(DeviceObject_31, Irp_18);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L51;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    goto L32;

  anon19_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;

  anon15_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 3501} vslice_dummy_var_540 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  anon16_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket#1(actual_DeviceObject_31: int, actual_Irp_18: int, actual_Key_1: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.PVOID, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#0(actual_NotificationInfo_1: int) returns (Tmp_115: int)
{
  var {:pointer} Tmp_116: int;
  var {:pointer} Tmp_117: int;
  var {:pointer} Tmp_118: int;
  var {:scalar} Tmp_119: int;
  var {:pointer} deviceObject_1: int;
  var {:pointer} Tmp_120: int;
  var {:pointer} Tmp_121: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} Tmp_122: int;
  var {:pointer} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_126: int;
  var {:scalar} sdv_24: int;
  var {:scalar} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} sdv_25: int;
  var {:pointer} Tmp_130: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} sdv_27: int;
  var {:pointer} Tmp_132: int;
  var {:scalar} sdv_28: int;
  var {:scalar} Tmp_133: int;
  var {:pointer} Tmp_134: int;
  var {:scalar} cIrql: int;
  var {:pointer} Tmp_135: int;
  var {:pointer} Tmp_136: int;
  var {:pointer} Tmp_137: int;
  var {:scalar} sdv_31: int;
  var {:scalar} status_3: int;
  var {:pointer} Tmp_138: int;
  var {:scalar} Tmp_139: int;
  var {:pointer} Tmp_140: int;
  var {:pointer} Tmp_141: int;
  var {:pointer} Tmp_142: int;
  var {:pointer} Tmp_143: int;
  var {:scalar} Tmp_144: int;
  var {:scalar} Tmp_145: int;
  var {:pointer} NotificationInfo_1: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_542: int;
  var vslice_dummy_var_543: int;
  var vslice_dummy_var_4424: int;
  var vslice_dummy_var_4425: int;
  var vslice_dummy_var_4426: int;

  anon0:
    NotificationInfo_1 := actual_NotificationInfo_1;
    call {:si_unique_call 3502} Tmp_117 := __HAVOC_malloc(4);
    call {:si_unique_call 3503} vslice_dummy_var_543 := __HAVOC_malloc(352);
    call {:si_unique_call 3504} Tmp_125 := __HAVOC_malloc(4);
    call {:si_unique_call 3505} Tmp_131 := __HAVOC_malloc(352);
    call {:si_unique_call 3506} Tmp_134 := __HAVOC_malloc(4);
    call {:si_unique_call 3507} Tmp_137 := __HAVOC_malloc(4);
    call {:si_unique_call 3508} Tmp_141 := __HAVOC_malloc(352);
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_132 != 0;
    assume Tmp_132 > 0;
    havoc deviceObject_1;
    assume {:nonnull} deviceObject_1 != 0;
    assume deviceObject_1 > 0;
    pdoExtension_2 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject_1)];
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_135;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3509} status_3 := CheckStatusResponseValue(ManagementOrbStatusBlock__DEVICE_EXTENSION(pdoExtension_2));
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    havoc Tmp_139;
    call {:si_unique_call 3510} Sbp2AddLog(pdoExtension_2, 1, -850965188, status_3, Tmp_139);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_124;
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L106;

  L106:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_137;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    havoc Tmp_119;
    havoc Tmp_116;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_133;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_4424;
    call {:si_unique_call 3511} WPP_SF_qdDD(Tmp_133, 112, Tmp_116, pdoExtension_2, Tmp_119, status_3, vslice_dummy_var_4424);
    goto L107;

  L107:
    call {:si_unique_call 3512} Sbp2AddLog(pdoExtension_2, 1, -850965199, status_3, 0);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3513} vslice_dummy_var_542 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  L54:
    Tmp_115 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L107;

  anon69_Then:
    goto L107;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon56_Then:
    call {:si_unique_call 3514} Tmp_138 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    call {:si_unique_call 3515} sdv_KeAcquireSpinLock(0, Tmp_138);
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    havoc cIrql;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3516} sdv_KeReleaseSpinLock(0, cIrql);
    goto L106;

  anon57_Then:
    call {:si_unique_call 3517} Sbp2ReconnectCompletion#0(pdoExtension_2, status_3);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L54;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_143;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_127;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_4425;
    call {:si_unique_call 3518} WPP_SF_qDD(Tmp_127, 110, Tmp_143, pdoExtension_2, status_3, vslice_dummy_var_4425);
    goto L56;

  L56:
    call {:si_unique_call 3519} Sbp2AddLog(pdoExtension_2, 1, -783530180, status_3, 0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_129;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_120;
    assume {:nonnull} Tmp_120 != 0;
    assume Tmp_120 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_140;
    assume {:nonnull} Tmp_140 != 0;
    assume Tmp_140 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_128;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_136;
    assume {:nonnull} Tmp_136 != 0;
    assume Tmp_136 > 0;
    havoc Tmp_141;
    assume {:nonnull} Tmp_141 != 0;
    assume Tmp_141 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_142;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_130;
    assume {:nonnull} Tmp_130 != 0;
    assume Tmp_130 > 0;
    havoc Tmp_131;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_117;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_122;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_145;
    call {:si_unique_call 3520} WPP_SF_q(Tmp_145, 111, Tmp_122, pdoExtension_2);
    goto L67;

  L67:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3521} vslice_dummy_var_541 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  anon51_Then:
    goto L67;

  anon67_Then:
    goto L67;

  anon66_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon65_Then:
    goto L67;

  anon64_Then:
    goto L67;

  anon50_Then:
    assume {:partition} 0 > status_3;
    goto L67;

  anon49_Then:
    goto L56;

  anon63_Then:
    goto L56;

  anon48_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon60_Then:
    call {:si_unique_call 3522} Sbp2LoginCompletion#0(pdoExtension_2, status_3);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_134;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_126;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_144;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_4426;
    call {:si_unique_call 3523} WPP_SF_qDD(Tmp_144, 109, Tmp_126, pdoExtension_2, status_3, vslice_dummy_var_4426);
    goto L54;

  anon53_Then:
    goto L54;

  anon62_Then:
    goto L54;

  anon52_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    Tmp_115 := 6;
    goto L1;

  anon47_Then:
    Tmp_115 := 0;
    goto L1;
}



procedure {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#0(actual_NotificationInfo_1: int) returns (Tmp_115: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#1(actual_NotificationInfo_1: int) returns (Tmp_115: int)
{
  var {:pointer} Tmp_116: int;
  var {:pointer} Tmp_117: int;
  var {:pointer} Tmp_118: int;
  var {:scalar} Tmp_119: int;
  var {:pointer} deviceObject_1: int;
  var {:pointer} Tmp_120: int;
  var {:pointer} Tmp_121: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} Tmp_122: int;
  var {:pointer} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_126: int;
  var {:scalar} sdv_24: int;
  var {:scalar} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} sdv_25: int;
  var {:pointer} Tmp_130: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} sdv_27: int;
  var {:pointer} Tmp_132: int;
  var {:scalar} sdv_28: int;
  var {:scalar} Tmp_133: int;
  var {:pointer} Tmp_134: int;
  var {:scalar} cIrql: int;
  var {:pointer} Tmp_135: int;
  var {:pointer} Tmp_136: int;
  var {:pointer} Tmp_137: int;
  var {:scalar} sdv_31: int;
  var {:scalar} status_3: int;
  var {:pointer} Tmp_138: int;
  var {:scalar} Tmp_139: int;
  var {:pointer} Tmp_140: int;
  var {:pointer} Tmp_141: int;
  var {:pointer} Tmp_142: int;
  var {:pointer} Tmp_143: int;
  var {:scalar} Tmp_144: int;
  var {:scalar} Tmp_145: int;
  var {:pointer} NotificationInfo_1: int;
  var vslice_dummy_var_544: int;
  var vslice_dummy_var_545: int;
  var vslice_dummy_var_546: int;
  var vslice_dummy_var_4427: int;
  var vslice_dummy_var_4428: int;
  var vslice_dummy_var_4429: int;

  anon0:
    NotificationInfo_1 := actual_NotificationInfo_1;
    call {:si_unique_call 3524} Tmp_117 := __HAVOC_malloc(4);
    call {:si_unique_call 3525} vslice_dummy_var_546 := __HAVOC_malloc(352);
    call {:si_unique_call 3526} Tmp_125 := __HAVOC_malloc(4);
    call {:si_unique_call 3527} Tmp_131 := __HAVOC_malloc(352);
    call {:si_unique_call 3528} Tmp_134 := __HAVOC_malloc(4);
    call {:si_unique_call 3529} Tmp_137 := __HAVOC_malloc(4);
    call {:si_unique_call 3530} Tmp_141 := __HAVOC_malloc(352);
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_132 != 0;
    assume Tmp_132 > 0;
    havoc deviceObject_1;
    assume {:nonnull} deviceObject_1 != 0;
    assume deviceObject_1 > 0;
    pdoExtension_2 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject_1)];
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_135;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3531} status_3 := CheckStatusResponseValue(ManagementOrbStatusBlock__DEVICE_EXTENSION(pdoExtension_2));
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    havoc Tmp_139;
    call {:si_unique_call 3532} Sbp2AddLog(pdoExtension_2, 1, -850965188, status_3, Tmp_139);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_124;
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L106;

  L106:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_137;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    havoc Tmp_119;
    havoc Tmp_116;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_133;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_4427;
    call {:si_unique_call 3533} WPP_SF_qdDD(Tmp_133, 112, Tmp_116, pdoExtension_2, Tmp_119, status_3, vslice_dummy_var_4427);
    goto L107;

  L107:
    call {:si_unique_call 3534} Sbp2AddLog(pdoExtension_2, 1, -850965199, status_3, 0);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3535} vslice_dummy_var_545 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  L54:
    Tmp_115 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L107;

  anon69_Then:
    goto L107;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon56_Then:
    call {:si_unique_call 3536} Tmp_138 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    call {:si_unique_call 3537} sdv_KeAcquireSpinLock(0, Tmp_138);
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    havoc cIrql;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3538} sdv_KeReleaseSpinLock(0, cIrql);
    goto L106;

  anon57_Then:
    call {:si_unique_call 3539} Sbp2ReconnectCompletion#1(pdoExtension_2, status_3);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L54;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_143;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_127;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_4428;
    call {:si_unique_call 3540} WPP_SF_qDD(Tmp_127, 110, Tmp_143, pdoExtension_2, status_3, vslice_dummy_var_4428);
    goto L56;

  L56:
    call {:si_unique_call 3541} Sbp2AddLog(pdoExtension_2, 1, -783530180, status_3, 0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_129;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_120;
    assume {:nonnull} Tmp_120 != 0;
    assume Tmp_120 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_140;
    assume {:nonnull} Tmp_140 != 0;
    assume Tmp_140 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_128;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_136;
    assume {:nonnull} Tmp_136 != 0;
    assume Tmp_136 > 0;
    havoc Tmp_141;
    assume {:nonnull} Tmp_141 != 0;
    assume Tmp_141 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_142;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_130;
    assume {:nonnull} Tmp_130 != 0;
    assume Tmp_130 > 0;
    havoc Tmp_131;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_117;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_122;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_145;
    call {:si_unique_call 3542} WPP_SF_q(Tmp_145, 111, Tmp_122, pdoExtension_2);
    goto L67;

  L67:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3543} vslice_dummy_var_544 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  anon51_Then:
    goto L67;

  anon67_Then:
    goto L67;

  anon66_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon65_Then:
    goto L67;

  anon64_Then:
    goto L67;

  anon50_Then:
    assume {:partition} 0 > status_3;
    goto L67;

  anon49_Then:
    goto L56;

  anon63_Then:
    goto L56;

  anon48_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon60_Then:
    call {:si_unique_call 3544} Sbp2LoginCompletion#1(pdoExtension_2, status_3);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_134;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_126;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_144;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_4429;
    call {:si_unique_call 3545} WPP_SF_qDD(Tmp_144, 109, Tmp_126, pdoExtension_2, status_3, vslice_dummy_var_4429);
    goto L54;

  anon53_Then:
    goto L54;

  anon62_Then:
    goto L54;

  anon52_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    Tmp_115 := 6;
    goto L1;

  anon47_Then:
    Tmp_115 := 0;
    goto L1;
}



procedure {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#1(actual_NotificationInfo_1: int) returns (Tmp_115: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#0(actual_PdoExtension: int, actual_NtStatus: int)
{
  var {:pointer} Tmp_146: int;
  var {:scalar} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:pointer} Tmp_156: int;
  var {:pointer} Tmp_157: int;
  var {:pointer} Tmp_158: int;
  var {:scalar} Tmp_159: int;
  var {:scalar} Tmp_160: int;
  var {:pointer} Tmp_161: int;
  var {:pointer} Tmp_162: int;
  var {:pointer} Tmp_163: int;
  var {:pointer} Tmp_164: int;
  var {:scalar} sdv_35: int;
  var {:scalar} sdv_36: int;
  var {:scalar} sdv_37: int;
  var {:scalar} Tmp_165: int;
  var {:scalar} irql: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} NtStatus: int;
  var vslice_dummy_var_547: int;
  var vslice_dummy_var_548: int;
  var vslice_dummy_var_549: int;
  var vslice_dummy_var_550: int;
  var vslice_dummy_var_4430: int;
  var vslice_dummy_var_4431: int;
  var vslice_dummy_var_4432: int;
  var vslice_dummy_var_4433: int;
  var vslice_dummy_var_4434: int;

  anon0:
    call {:si_unique_call 3546} vslice_dummy_var_547 := __HAVOC_malloc(4);
    PdoExtension := actual_PdoExtension;
    NtStatus := actual_NtStatus;
    call {:si_unique_call 3547} Tmp_151 := __HAVOC_malloc(4);
    call {:si_unique_call 3548} Tmp_156 := __HAVOC_malloc(4);
    call {:si_unique_call 3549} Tmp_161 := __HAVOC_malloc(4);
    call {:si_unique_call 3550} Tmp_163 := __HAVOC_malloc(4);
    call {:si_unique_call 3551} Tmp_167 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    call {:si_unique_call 3552} sdv_KeAcquireSpinLock(0, Tmp_167);
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    havoc irql;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_151;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_150;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_160;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_4430;
    call {:si_unique_call 3553} WPP_SF_qDD(Tmp_160, 64, Tmp_150, PdoExtension, NtStatus, vslice_dummy_var_4430);
    goto L107;

  L107:
    call {:si_unique_call 3554} sdv_KeReleaseSpinLock(0, irql);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon58_Then:
    goto L107;

  anon66_Then:
    goto L107;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon45_Then:
    call {:si_unique_call 3555} Sbp2AddLog(PdoExtension, 1, -867219652, NtStatus, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_161;
    assume {:nonnull} Tmp_161 != 0;
    assume Tmp_161 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_164;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_165;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_4431;
    call {:si_unique_call 3556} WPP_SF_qDD(Tmp_165, 65, Tmp_164, PdoExtension, vslice_dummy_var_4431, NtStatus);
    goto L20;

  L20:
    call {:si_unique_call 3557} vslice_dummy_var_548 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} NtStatus == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L77;

  L77:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_158;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_146;
    assume {:nonnull} Tmp_146 != 0;
    assume Tmp_146 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_154;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_149;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_155;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_162;
    assume {:nonnull} Tmp_162 != 0;
    assume Tmp_162 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3558} sdv_KeReleaseSpinLock(0, irql);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_4432;
    call {:si_unique_call 3559} vslice_dummy_var_550 := Sbp2Reset#0(vslice_dummy_var_4432, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3560} Sbp2StartQueue#0(PdoExtension);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto L62;

  L62:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3561} vslice_dummy_var_549 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension), 0, 0);
    goto L1;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L36;

  L36:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} NtStatus != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_163;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_157;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_159;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_4433;
    call {:si_unique_call 3562} WPP_SF_qDD(Tmp_159, 67, Tmp_157, PdoExtension, vslice_dummy_var_4433, NtStatus);
    goto L44;

  L44:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} NtStatus == -1073741790;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L56;

  L56:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L37;

  L37:
    call {:si_unique_call 3563} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon54_Then:
    goto L37;

  anon53_Then:
    goto L52;

  L52:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} NtStatus == 16384;
    call {:si_unique_call 3564} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon52_Then:
    assume {:partition} NtStatus != 16384;
    goto L56;

  anon50_Then:
    assume {:partition} NtStatus != -1073741790;
    goto L52;

  anon51_Then:
    goto L44;

  anon61_Then:
    goto L44;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L44;

  anon48_Then:
    assume {:partition} NtStatus == 0;
    goto L37;

  anon55_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_156;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L77;

  anon62_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L77;

  anon56_Then:
    havoc Tmp_148;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_147;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_4434;
    call {:si_unique_call 3565} WPP_SF_qD(Tmp_147, 66, Tmp_148, PdoExtension, vslice_dummy_var_4434);
    goto L77;

  anon60_Then:
    assume {:partition} NtStatus != 0;
    goto L36;

  anon47_Then:
    goto L20;

  anon59_Then:
    goto L20;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L20;
}



procedure {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#0(actual_PdoExtension: int, actual_NtStatus: int);
  modifies alloc, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#1(actual_PdoExtension: int, actual_NtStatus: int)
{
  var {:pointer} Tmp_146: int;
  var {:scalar} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:pointer} Tmp_156: int;
  var {:pointer} Tmp_157: int;
  var {:pointer} Tmp_158: int;
  var {:scalar} Tmp_159: int;
  var {:scalar} Tmp_160: int;
  var {:pointer} Tmp_161: int;
  var {:pointer} Tmp_162: int;
  var {:pointer} Tmp_163: int;
  var {:pointer} Tmp_164: int;
  var {:scalar} sdv_35: int;
  var {:scalar} sdv_36: int;
  var {:scalar} sdv_37: int;
  var {:scalar} Tmp_165: int;
  var {:scalar} irql: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} NtStatus: int;
  var vslice_dummy_var_551: int;
  var vslice_dummy_var_552: int;
  var vslice_dummy_var_553: int;
  var vslice_dummy_var_554: int;
  var vslice_dummy_var_4435: int;
  var vslice_dummy_var_4436: int;
  var vslice_dummy_var_4437: int;
  var vslice_dummy_var_4438: int;
  var vslice_dummy_var_4439: int;

  anon0:
    call {:si_unique_call 3566} vslice_dummy_var_551 := __HAVOC_malloc(4);
    PdoExtension := actual_PdoExtension;
    NtStatus := actual_NtStatus;
    call {:si_unique_call 3567} Tmp_151 := __HAVOC_malloc(4);
    call {:si_unique_call 3568} Tmp_156 := __HAVOC_malloc(4);
    call {:si_unique_call 3569} Tmp_161 := __HAVOC_malloc(4);
    call {:si_unique_call 3570} Tmp_163 := __HAVOC_malloc(4);
    call {:si_unique_call 3571} Tmp_167 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    call {:si_unique_call 3572} sdv_KeAcquireSpinLock(0, Tmp_167);
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    havoc irql;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_151;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_150;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_160;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_4435;
    call {:si_unique_call 3573} WPP_SF_qDD(Tmp_160, 64, Tmp_150, PdoExtension, NtStatus, vslice_dummy_var_4435);
    goto L107;

  L107:
    call {:si_unique_call 3574} sdv_KeReleaseSpinLock(0, irql);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon58_Then:
    goto L107;

  anon66_Then:
    goto L107;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon45_Then:
    call {:si_unique_call 3575} Sbp2AddLog(PdoExtension, 1, -867219652, NtStatus, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_161;
    assume {:nonnull} Tmp_161 != 0;
    assume Tmp_161 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_164;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_165;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_4436;
    call {:si_unique_call 3576} WPP_SF_qDD(Tmp_165, 65, Tmp_164, PdoExtension, vslice_dummy_var_4436, NtStatus);
    goto L20;

  L20:
    call {:si_unique_call 3577} vslice_dummy_var_552 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} NtStatus == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L77;

  L77:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_158;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_146;
    assume {:nonnull} Tmp_146 != 0;
    assume Tmp_146 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_154;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_149;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_155;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_162;
    assume {:nonnull} Tmp_162 != 0;
    assume Tmp_162 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3578} sdv_KeReleaseSpinLock(0, irql);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_4437;
    call {:si_unique_call 3579} vslice_dummy_var_554 := Sbp2Reset#1(vslice_dummy_var_4437, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3580} Sbp2StartQueue#1(PdoExtension);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto L62;

  L62:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3581} vslice_dummy_var_553 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension), 0, 0);
    goto L1;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L36;

  L36:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} NtStatus != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_163;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_157;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_159;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_4438;
    call {:si_unique_call 3582} WPP_SF_qDD(Tmp_159, 67, Tmp_157, PdoExtension, vslice_dummy_var_4438, NtStatus);
    goto L44;

  L44:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} NtStatus == -1073741790;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L56;

  L56:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L37;

  L37:
    call {:si_unique_call 3583} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon54_Then:
    goto L37;

  anon53_Then:
    goto L52;

  L52:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} NtStatus == 16384;
    call {:si_unique_call 3584} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon52_Then:
    assume {:partition} NtStatus != 16384;
    goto L56;

  anon50_Then:
    assume {:partition} NtStatus != -1073741790;
    goto L52;

  anon51_Then:
    goto L44;

  anon61_Then:
    goto L44;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L44;

  anon48_Then:
    assume {:partition} NtStatus == 0;
    goto L37;

  anon55_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_156;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L77;

  anon62_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L77;

  anon56_Then:
    havoc Tmp_148;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_147;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_4439;
    call {:si_unique_call 3585} WPP_SF_qD(Tmp_147, 66, Tmp_148, PdoExtension, vslice_dummy_var_4439);
    goto L77;

  anon60_Then:
    assume {:partition} NtStatus != 0;
    goto L36;

  anon47_Then:
    goto L20;

  anon59_Then:
    goto L20;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L20;
}



procedure {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#1(actual_PdoExtension: int, actual_NtStatus: int);
  modifies alloc, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#0(actual_NotificationInfo_2: int) returns (Tmp_431: int)
{
  var {:pointer} nextListItem: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:scalar} Tmp_434: int;
  var {:pointer} Tmp_435: int;
  var {:scalar} Tmp_436: int;
  var {:pointer} Tmp_437: int;
  var {:scalar} Tmp_438: int;
  var {:pointer} Tmp_439: int;
  var {:scalar} sdv_120: int;
  var {:pointer} tempPointer: int;
  var {:scalar} Tmp_440: int;
  var {:pointer} requestIrp: int;
  var {:pointer} senseBuffer: int;
  var {:scalar} initialOrbListDepth: int;
  var {:scalar} Tmp_441: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:pointer} Tmp_444: int;
  var {:pointer} orbContext: int;
  var {:scalar} sdv_123: int;
  var {:scalar} src: int;
  var {:pointer} Tmp_445: int;
  var {:pointer} Tmp_446: int;
  var {:scalar} Tmp_447: int;
  var {:pointer} srb: int;
  var {:scalar} Tmp_448: int;
  var {:pointer} deviceObject_2: int;
  var {:pointer} Tmp_450: int;
  var {:scalar} currentOrbListDepth: int;
  var {:scalar} Tmp_451: int;
  var {:scalar} Tmp_452: int;
  var {:pointer} Tmp_453: int;
  var {:pointer} Tmp_454: int;
  var {:scalar} Tmp_455: int;
  var {:scalar} Tmp_456: int;
  var {:scalar} Tmp_457: int;
  var {:pointer} Tmp_458: int;
  var {:scalar} sdv_127: int;
  var {:scalar} Tmp_459: int;
  var {:scalar} Tmp_460: int;
  var {:scalar} temp: int;
  var {:scalar} dueTime: int;
  var {:pointer} Tmp_461: int;
  var {:pointer} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:scalar} sdv_129: int;
  var {:scalar} status_10: int;
  var {:pointer} entry: int;
  var {:pointer} Tmp_465: int;
  var {:scalar} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:scalar} Tmp_468: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} sdv_131: int;
  var {:pointer} pdoExtension_3: int;
  var {:pointer} Tmp_470: int;
  var {:pointer} Tmp_471: int;
  var {:scalar} orbLock: int;
  var {:pointer} Tmp_472: int;
  var {:scalar} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:scalar} Tmp_475: int;
  var {:scalar} Tmp_476: int;
  var {:pointer} statusBlock: int;
  var {:pointer} Tmp_477: int;
  var {:pointer} sdv_134: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} Tmp_478: int;
  var {:pointer} Tmp_479: int;
  var {:pointer} Tmp_480: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:scalar} Tmp_484: int;
  var {:scalar} Tmp_485: int;
  var {:scalar} Tmp_486: int;
  var {:scalar} Tmp_487: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:scalar} rcode: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_491: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} Tmp_494: int;
  var {:pointer} Tmp_495: int;
  var {:pointer} sdv_140: int;
  var {:pointer} Tmp_496: int;
  var {:pointer} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:scalar} sdv_143: int;
  var {:pointer} Tmp_500: int;
  var {:scalar} Tmp_502: int;
  var {:scalar} Tmp_503: int;
  var {:scalar} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:pointer} NotificationInfo_2: int;
  var vslice_dummy_var_555: int;
  var vslice_dummy_var_556: int;
  var vslice_dummy_var_557: int;
  var vslice_dummy_var_558: int;
  var vslice_dummy_var_559: int;
  var vslice_dummy_var_560: int;
  var vslice_dummy_var_561: int;
  var vslice_dummy_var_562: int;
  var vslice_dummy_var_563: int;
  var vslice_dummy_var_564: int;
  var vslice_dummy_var_565: int;
  var vslice_dummy_var_566: int;
  var vslice_dummy_var_567: int;
  var vslice_dummy_var_568: int;
  var vslice_dummy_var_569: int;
  var vslice_dummy_var_570: int;
  var vslice_dummy_var_571: int;
  var vslice_dummy_var_4440: int;
  var vslice_dummy_var_4441: int;
  var vslice_dummy_var_4442: int;
  var vslice_dummy_var_4443: int;
  var vslice_dummy_var_4444: int;
  var vslice_dummy_var_4445: int;
  var vslice_dummy_var_4446: int;
  var vslice_dummy_var_4447: int;
  var vslice_dummy_var_4448: int;
  var vslice_dummy_var_4449: int;
  var vslice_dummy_var_4450: int;
  var vslice_dummy_var_4451: int;
  var vslice_dummy_var_4452: int;
  var vslice_dummy_var_4453: int;
  var vslice_dummy_var_4454: int;
  var vslice_dummy_var_4455: int;
  var vslice_dummy_var_4456: int;
  var vslice_dummy_var_4457: int;
  var vslice_dummy_var_4458: int;
  var vslice_dummy_var_4459: int;
  var vslice_dummy_var_4460: int;

  anon0:
    call {:si_unique_call 3586} dueTime := __HAVOC_malloc(20);
    call {:si_unique_call 3587} orbLock := __HAVOC_malloc(12);
    NotificationInfo_2 := actual_NotificationInfo_2;
    call {:si_unique_call 3588} Tmp_435 := __HAVOC_malloc(4);
    call {:si_unique_call 3589} Tmp_439 := __HAVOC_malloc(4);
    call {:si_unique_call 3590} Tmp_442 := __HAVOC_malloc(4);
    call {:si_unique_call 3591} Tmp_443 := __HAVOC_malloc(64);
    call {:si_unique_call 3592} Tmp_446 := __HAVOC_malloc(4);
    call {:si_unique_call 3593} Tmp_453 := __HAVOC_malloc(4);
    call {:si_unique_call 3594} Tmp_454 := __HAVOC_malloc(4);
    call {:si_unique_call 3595} Tmp_458 := __HAVOC_malloc(4);
    call {:si_unique_call 3596} Tmp_461 := __HAVOC_malloc(64);
    call {:si_unique_call 3597} Tmp_462 := __HAVOC_malloc(4);
    call {:si_unique_call 3598} Tmp_465 := __HAVOC_malloc(64);
    call {:si_unique_call 3599} Tmp_471 := __HAVOC_malloc(4);
    call {:si_unique_call 3600} Tmp_477 := __HAVOC_malloc(4);
    call {:si_unique_call 3601} Tmp_480 := __HAVOC_malloc(4);
    call {:si_unique_call 3602} Tmp_491 := __HAVOC_malloc(64);
    call {:si_unique_call 3603} Tmp_493 := __HAVOC_malloc(4);
    call {:si_unique_call 3604} Tmp_495 := __HAVOC_malloc(64);
    call {:si_unique_call 3605} Tmp_496 := __HAVOC_malloc(4);
    call {:si_unique_call 3606} Tmp_498 := __HAVOC_malloc(4);
    call {:si_unique_call 3607} Tmp_499 := __HAVOC_malloc(4);
    call {:si_unique_call 3608} Tmp_505 := __HAVOC_malloc(4);
    srb := 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_480;
    assume {:nonnull} Tmp_480 != 0;
    assume Tmp_480 > 0;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    havoc Tmp_490;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_467;
    call {:si_unique_call 3609} WPP_SF_q(Tmp_467, 92, Tmp_490, NotificationInfo_2);
    goto L446;

  L446:
    Tmp_431 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon242_Then:
    goto L446;

  anon279_Then:
    goto L446;

  anon241_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L446;

  anon243_Then:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    havoc Tmp_472;
    assume {:nonnull} Tmp_472 != 0;
    assume Tmp_472 > 0;
    havoc deviceObject_2;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    pdoExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject_2)];
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3610} sdv_140 := sdv_MmGetMdlVirtualAddress(0);
    statusBlock := sdv_140;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3611} status_10 := CheckStatusResponseValue(statusBlock);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_439;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_445;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_484;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4440;
    call {:si_unique_call 3612} WPP_SF_qDD(Tmp_484, 93, Tmp_445, pdoExtension_3, status_10, vslice_dummy_var_4440);
    goto L55;

  L55:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3613} vslice_dummy_var_564 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := 0;
    goto L1;

  anon190_Then:
    goto L55;

  anon244_Then:
    goto L55;

  anon189_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L55;

  anon187_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    call {:si_unique_call 3614} Sbp2LoginCompletion#0(pdoExtension_3, status_10);
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    rcode := 0;
    goto L73;

  L73:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3615} vslice_dummy_var_565 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := rcode;
    goto L1;

  anon245_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon191_Then:
    goto L66;

  L66:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc src;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} 32768 == src;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_496;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    havoc Tmp_492;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_504;
    call {:si_unique_call 3616} WPP_SF_q(Tmp_504, 94, Tmp_492, pdoExtension_3);
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3617} vslice_dummy_var_555 := Sbp2AccessRegister#0(pdoExtension_3, Reserved__DEVICE_EXTENSION(pdoExtension_3), 1040);
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3618} Sbp2HandleUnsolicited#0(pdoExtension_3, statusBlock);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} yogi_error != 1;
    rcode := 0;
    goto L73;

  anon249_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon248_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon194_Then:
    goto L83;

  anon247_Then:
    goto L83;

  anon193_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon246_Then:
    assume {:partition} 32768 != src;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} 49152 == src;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_505;
    assume {:nonnull} Tmp_505 != 0;
    assume Tmp_505 > 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_494;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_434;
    call {:si_unique_call 3619} WPP_SF_q(Tmp_434, 95, Tmp_494, pdoExtension_3);
    goto L103;

  L103:
    rcode := 0;
    goto L73;

  anon197_Then:
    goto L103;

  anon250_Then:
    goto L103;

  anon196_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon192_Then:
    assume {:partition} 49152 != src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    havoc Tmp_474;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_440;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4441;
    call {:si_unique_call 3620} WPP_SF_qDD(Tmp_440, 96, Tmp_474, pdoExtension_3, status_10, vslice_dummy_var_4441);
    goto L434;

  L434:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3621} vslice_dummy_var_571 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := 0;
    goto L1;

  anon240_Then:
    goto L434;

  anon278_Then:
    goto L434;

  anon239_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L434;

  anon195_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc temp;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} temp > 384;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  L132:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc Tmp_437;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_432;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_4442;
    havoc vslice_dummy_var_4443;
    havoc vslice_dummy_var_4444;
    havoc vslice_dummy_var_4445;
    call {:si_unique_call 3622} WPP_SF_qDDDD(Tmp_432, 98, Tmp_437, pdoExtension_3, vslice_dummy_var_4442, vslice_dummy_var_4443, vslice_dummy_var_4444, vslice_dummy_var_4445);
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4446;
    call {:si_unique_call 3623} Sbp2CreateRequestErrorLog(vslice_dummy_var_4446, 0, 3699, -1073741434);
    rcode := 7;
    goto L73;

  anon201_Then:
    goto L133;

  anon253_Then:
    goto L133;

  anon200_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L133;

  anon198_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_498;
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto L132;

  anon252_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto L132;

  anon199_Then:
    havoc Tmp_444;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_452;
    call {:si_unique_call 3624} WPP_SF_qD(Tmp_452, 97, Tmp_444, pdoExtension_3, temp);
    goto L132;

  anon251_Then:
    assume {:partition} 384 >= temp;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc tempPointer;
    call {:si_unique_call 3625} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    assume {:nonnull} tempPointer != 0;
    assume tempPointer > 0;
    orbContext := Mem_T.PVOID[tempPointer];
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:partition} orbContext != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_435;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    havoc Tmp_483;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_503;
    call {:si_unique_call 3626} WPP_SF_qq(Tmp_503, 100, Tmp_483, pdoExtension_3, orbContext);
    goto L158;

  L158:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    call {:si_unique_call 3627} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_453;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    havoc Tmp_433;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_487;
    call {:si_unique_call 3628} WPP_SF_qq(Tmp_487, 101, Tmp_433, pdoExtension_3, orbContext);
    goto L174;

  L174:
    rcode := 0;
    goto L73;

  anon207_Then:
    goto L174;

  anon257_Then:
    goto L174;

  anon206_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L174;

  anon204_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_479;
    assume {:nonnull} Tmp_479 != 0;
    assume Tmp_479 > 0;
    havoc requestIrp;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3629} vslice_dummy_var_566 := KeCancelTimer(0);
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_454;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_489;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_447;
    call {:si_unique_call 3630} WPP_SF_qq(Tmp_447, 102, Tmp_489, pdoExtension_3, orbContext);
    goto L196;

  L196:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc entry;
    goto L204;

  L204:
    call {:si_unique_call 3631} nextListItem, entry, sdv_134 := Sbp2GlobalStatusCallback#0_loop_L204(nextListItem, entry, sdv_134);
    goto L204_last;

  L204_last:
    goto anon210_Then, anon210_Else;

  anon210_Else:
    call {:si_unique_call 3632} sdv_134 := sdv_containing_record(entry, 0);
    nextListItem := sdv_134;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon260_Else_dummy;

  anon260_Else_dummy:
    assume false;
    return;

  anon260_Then:
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_482;
    assume {:nonnull} Tmp_482 != 0;
    assume Tmp_482 > 0;
    assume {:nonnull} dueTime != 0;
    assume dueTime > 0;
    call {:si_unique_call 3633} vslice_dummy_var_567 := KeSetTimer(0, dueTime, 0);
    goto L185;

  L185:
    call {:si_unique_call 3634} Free1394DataMapping(pdoExtension_3, orbContext);
    call {:si_unique_call 3635} vslice_dummy_var_556 := Sbp2_SCSI_RBC_Conversion(orbContext);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc srb;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc initialOrbListDepth;
    call {:si_unique_call 3636} vslice_dummy_var_568 := sdv_RemoveEntryList(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3637} InitializeListHead(OrbList__ASYNC_REQUEST_CONTEXT(orbContext));
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_4447;
    havoc vslice_dummy_var_4448;
    call {:si_unique_call 3638} Sbp2AddLog(pdoExtension_3, 64, -915451291, vslice_dummy_var_4447, vslice_dummy_var_4448);
    call {:si_unique_call 3639} vslice_dummy_var_557 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4449;
    call {:si_unique_call 3640} vslice_dummy_var_559 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_4449);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L238;

  L238:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4450;
    call {:si_unique_call 3641} vslice_dummy_var_558 := Sbp2Reset#0(vslice_dummy_var_4450, 1);
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3642} sdv_129 := sdv_IsListEmpty(0);
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} sdv_129 != 0;
    goto L252;

  L252:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc currentOrbListDepth;
    call {:si_unique_call 3643} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3644} Tmp_507 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_507 != 0;
    assume Tmp_507 > 0;
    call {:si_unique_call 3645} sdv_KeAcquireSpinLock(0, Tmp_507);
    assume {:nonnull} Tmp_507 != 0;
    assume Tmp_507 > 0;
    havoc oldIrql_1;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3646} sdv_KeReleaseSpinLock(0, oldIrql_1);
    call {:si_unique_call 3647} Tmp_468 := corral_nondet();
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} Tmp_468 > 1;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    goto L367;

  L367:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_458;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_491;
    assume {:nonnull} Tmp_491 != 0;
    assume Tmp_491 > 0;
    havoc Tmp_486;
    havoc Tmp_469;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_441;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_4451;
    call {:si_unique_call 3648} WPP_SF_qDD(Tmp_441, 106, Tmp_469, pdoExtension_3, Tmp_486, vslice_dummy_var_4451);
    goto L291;

  L291:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3649} Sbp2AddLog(pdoExtension_3, 64, -915455121, status_10, requestIrp);
    call {:si_unique_call 3650} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3651} sdv_143 := sdv_IsListEmpty(0);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} sdv_143 != 0;
    call {:si_unique_call 3652} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3653} vslice_dummy_var_560 := Sbp2RestartPendingPowerIrp#0(pdoExtension_3);
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} yogi_error != 1;
    goto L322;

  L322:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_478;
    goto L326;

  L326:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3654} vslice_dummy_var_569 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_3), requestIrp);
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3655} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    goto L341;

  L341:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_462;
    assume {:nonnull} Tmp_462 != 0;
    assume Tmp_462 > 0;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    havoc Tmp_450;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_456;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4452;
    call {:si_unique_call 3656} WPP_SF_qd(Tmp_456, 108, Tmp_450, pdoExtension_3, vslice_dummy_var_4452);
    goto L342;

  L342:
    rcode := 0;
    goto L73;

  anon225_Then:
    goto L342;

  anon269_Then:
    goto L342;

  anon224_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L342;

  anon222_Then:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} initialOrbListDepth <= currentOrbListDepth;
    goto L341;

  anon223_Then:
    assume {:partition} currentOrbListDepth < initialOrbListDepth;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4453;
    call {:si_unique_call 3657} Sbp2StartNextPacketByKey#0(deviceObject_2, vslice_dummy_var_4453);
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:partition} yogi_error != 1;
    goto L341;

  anon268_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon267_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon266_Then:
    Tmp_478 := 0;
    goto L326;

  anon265_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon221_Then:
    assume {:partition} sdv_143 == 0;
    call {:si_unique_call 3658} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto L322;

  anon232_Then:
    goto L291;

  anon264_Then:
    goto L291;

  anon231_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon263_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    goto L367;

  anon215_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_446;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_461;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    havoc Tmp_473;
    havoc Tmp_488;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_448;
    call {:si_unique_call 3659} WPP_SF_qD(Tmp_448, 105, Tmp_488, pdoExtension_3, Tmp_473);
    goto L352;

  L352:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    Tmp_436 := 32;
    goto L364;

  L364:
    call {:si_unique_call 3660} sdv_RtlCopyMemory(0, 0, Tmp_436);
    goto L291;

  anon230_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_436;
    goto L364;

  anon228_Then:
    goto L291;

  anon229_Then:
    goto L352;

  anon272_Then:
    goto L352;

  anon227_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L352;

  anon216_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_459;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_4454;
    call {:si_unique_call 3661} sdv_120 := ConvertSbp2SenseDataToScsi(statusBlock, vslice_dummy_var_4454, Tmp_459);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} sdv_120 != 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L283;

  L283:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc senseBuffer;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_495;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    goto L290;

  L290:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_477;
    assume {:nonnull} Tmp_477 != 0;
    assume Tmp_477 > 0;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_455;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_466;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_438;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_443;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    havoc Tmp_502;
    havoc Tmp_470;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_481;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_4455;
    havoc vslice_dummy_var_4456;
    call {:si_unique_call 3662} WPP_SF_qDDDDDd(Tmp_481, 103, Tmp_470, pdoExtension_3, Tmp_502, Tmp_438, Tmp_466, Tmp_455, vslice_dummy_var_4455, vslice_dummy_var_4456);
    goto L291;

  anon220_Then:
    goto L291;

  anon271_Then:
    goto L291;

  anon219_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon270_Then:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    goto L291;

  anon226_Then:
    goto L290;

  anon218_Then:
    goto L290;

  anon217_Then:
    assume {:partition} sdv_120 == 0;
    goto L283;

  anon262_Then:
    assume {:partition} 1 >= Tmp_468;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_460;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} Tmp_460 == 4096;
    goto L381;

  L381:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_485;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_465;
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    havoc Tmp_475;
    havoc Tmp_463;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_451;
    call {:si_unique_call 3663} WPP_SF_qDD(Tmp_451, 107, Tmp_463, pdoExtension_3, Tmp_475, Tmp_485);
    goto L382;

  L382:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon234_Then:
    goto L382;

  anon274_Then:
    goto L382;

  anon233_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L382;

  anon273_Then:
    assume {:partition} Tmp_460 != 4096;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_476;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:partition} Tmp_476 != 8192;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon275_Then:
    assume {:partition} Tmp_476 == 8192;
    goto L381;

  anon214_Then:
    assume {:partition} sdv_129 == 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4457;
    call {:si_unique_call 3664} sdv_131 := sdv_containing_record(vslice_dummy_var_4457, 0);
    nextListItem := sdv_131;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    call {:si_unique_call 3665} vslice_dummy_var_570 := Sbp2AccessRegister#0(pdoExtension_3, CmdOrbAddress__ASYNC_REQUEST_CONTEXT(nextListItem), 1028);
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} yogi_error != 1;
    goto L252;

  anon276_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon261_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon213_Then:
    goto L238;

  anon211_Then:
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} 16384 == src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4458;
    call {:si_unique_call 3666} vslice_dummy_var_562 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_4458);
    goto L405;

  L405:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_500;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon277_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon235_Then:
    goto L405;

  anon212_Then:
    assume {:partition} 16384 != src;
    call {:si_unique_call 3667} vslice_dummy_var_561 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4459;
    call {:si_unique_call 3668} vslice_dummy_var_563 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_4459);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon236_Then:
    goto L252;

  anon210_Then:
    goto L185;

  anon209_Then:
    goto L196;

  anon259_Then:
    goto L196;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon258_Then:
    goto L185;

  anon205_Then:
    goto L158;

  anon256_Then:
    goto L158;

  anon203_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L158;

  anon202_Then:
    goto L150;

  L150:
    call {:si_unique_call 3669} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_442;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    havoc Tmp_506;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_457;
    call {:si_unique_call 3670} WPP_SF_qD(Tmp_457, 99, Tmp_506, pdoExtension_3, temp);
    goto L421;

  L421:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4460;
    call {:si_unique_call 3671} Sbp2CreateRequestErrorLog(vslice_dummy_var_4460, 0, 3729, -1073741434);
    rcode := 7;
    goto L73;

  anon238_Then:
    goto L421;

  anon255_Then:
    goto L421;

  anon237_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L421;

  anon254_Then:
    assume {:partition} orbContext == 0;
    goto L150;

  anon188_Then:
    goto L66;
}



procedure {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#0(actual_NotificationInfo_2: int) returns (Tmp_431: int);
  modifies alloc, LockDepth, Mem_T.PVOID, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#1(actual_NotificationInfo_2: int) returns (Tmp_431: int)
{
  var {:pointer} nextListItem: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:scalar} Tmp_434: int;
  var {:pointer} Tmp_435: int;
  var {:scalar} Tmp_436: int;
  var {:pointer} Tmp_437: int;
  var {:scalar} Tmp_438: int;
  var {:pointer} Tmp_439: int;
  var {:scalar} sdv_120: int;
  var {:pointer} tempPointer: int;
  var {:scalar} Tmp_440: int;
  var {:pointer} requestIrp: int;
  var {:pointer} senseBuffer: int;
  var {:scalar} initialOrbListDepth: int;
  var {:scalar} Tmp_441: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:pointer} Tmp_444: int;
  var {:pointer} orbContext: int;
  var {:scalar} sdv_123: int;
  var {:scalar} src: int;
  var {:pointer} Tmp_445: int;
  var {:pointer} Tmp_446: int;
  var {:scalar} Tmp_447: int;
  var {:pointer} srb: int;
  var {:scalar} Tmp_448: int;
  var {:pointer} deviceObject_2: int;
  var {:pointer} Tmp_450: int;
  var {:scalar} currentOrbListDepth: int;
  var {:scalar} Tmp_451: int;
  var {:scalar} Tmp_452: int;
  var {:pointer} Tmp_453: int;
  var {:pointer} Tmp_454: int;
  var {:scalar} Tmp_455: int;
  var {:scalar} Tmp_456: int;
  var {:scalar} Tmp_457: int;
  var {:pointer} Tmp_458: int;
  var {:scalar} sdv_127: int;
  var {:scalar} Tmp_459: int;
  var {:scalar} Tmp_460: int;
  var {:scalar} temp: int;
  var {:scalar} dueTime: int;
  var {:pointer} Tmp_461: int;
  var {:pointer} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:scalar} sdv_129: int;
  var {:scalar} status_10: int;
  var {:pointer} entry: int;
  var {:pointer} Tmp_465: int;
  var {:scalar} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:scalar} Tmp_468: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} sdv_131: int;
  var {:pointer} pdoExtension_3: int;
  var {:pointer} Tmp_470: int;
  var {:pointer} Tmp_471: int;
  var {:scalar} orbLock: int;
  var {:pointer} Tmp_472: int;
  var {:scalar} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:scalar} Tmp_475: int;
  var {:scalar} Tmp_476: int;
  var {:pointer} statusBlock: int;
  var {:pointer} Tmp_477: int;
  var {:pointer} sdv_134: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} Tmp_478: int;
  var {:pointer} Tmp_479: int;
  var {:pointer} Tmp_480: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:scalar} Tmp_484: int;
  var {:scalar} Tmp_485: int;
  var {:scalar} Tmp_486: int;
  var {:scalar} Tmp_487: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:scalar} rcode: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_491: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} Tmp_494: int;
  var {:pointer} Tmp_495: int;
  var {:pointer} sdv_140: int;
  var {:pointer} Tmp_496: int;
  var {:pointer} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:scalar} sdv_143: int;
  var {:pointer} Tmp_500: int;
  var {:scalar} Tmp_502: int;
  var {:scalar} Tmp_503: int;
  var {:scalar} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:pointer} NotificationInfo_2: int;
  var vslice_dummy_var_572: int;
  var vslice_dummy_var_573: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_575: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_577: int;
  var vslice_dummy_var_578: int;
  var vslice_dummy_var_579: int;
  var vslice_dummy_var_580: int;
  var vslice_dummy_var_581: int;
  var vslice_dummy_var_582: int;
  var vslice_dummy_var_583: int;
  var vslice_dummy_var_584: int;
  var vslice_dummy_var_585: int;
  var vslice_dummy_var_586: int;
  var vslice_dummy_var_587: int;
  var vslice_dummy_var_588: int;
  var vslice_dummy_var_4461: int;
  var vslice_dummy_var_4462: int;
  var vslice_dummy_var_4463: int;
  var vslice_dummy_var_4464: int;
  var vslice_dummy_var_4465: int;
  var vslice_dummy_var_4466: int;
  var vslice_dummy_var_4467: int;
  var vslice_dummy_var_4468: int;
  var vslice_dummy_var_4469: int;
  var vslice_dummy_var_4470: int;
  var vslice_dummy_var_4471: int;
  var vslice_dummy_var_4472: int;
  var vslice_dummy_var_4473: int;
  var vslice_dummy_var_4474: int;
  var vslice_dummy_var_4475: int;
  var vslice_dummy_var_4476: int;
  var vslice_dummy_var_4477: int;
  var vslice_dummy_var_4478: int;
  var vslice_dummy_var_4479: int;
  var vslice_dummy_var_4480: int;
  var vslice_dummy_var_4481: int;

  anon0:
    call {:si_unique_call 3672} dueTime := __HAVOC_malloc(20);
    call {:si_unique_call 3673} orbLock := __HAVOC_malloc(12);
    NotificationInfo_2 := actual_NotificationInfo_2;
    call {:si_unique_call 3674} Tmp_435 := __HAVOC_malloc(4);
    call {:si_unique_call 3675} Tmp_439 := __HAVOC_malloc(4);
    call {:si_unique_call 3676} Tmp_442 := __HAVOC_malloc(4);
    call {:si_unique_call 3677} Tmp_443 := __HAVOC_malloc(64);
    call {:si_unique_call 3678} Tmp_446 := __HAVOC_malloc(4);
    call {:si_unique_call 3679} Tmp_453 := __HAVOC_malloc(4);
    call {:si_unique_call 3680} Tmp_454 := __HAVOC_malloc(4);
    call {:si_unique_call 3681} Tmp_458 := __HAVOC_malloc(4);
    call {:si_unique_call 3682} Tmp_461 := __HAVOC_malloc(64);
    call {:si_unique_call 3683} Tmp_462 := __HAVOC_malloc(4);
    call {:si_unique_call 3684} Tmp_465 := __HAVOC_malloc(64);
    call {:si_unique_call 3685} Tmp_471 := __HAVOC_malloc(4);
    call {:si_unique_call 3686} Tmp_477 := __HAVOC_malloc(4);
    call {:si_unique_call 3687} Tmp_480 := __HAVOC_malloc(4);
    call {:si_unique_call 3688} Tmp_491 := __HAVOC_malloc(64);
    call {:si_unique_call 3689} Tmp_493 := __HAVOC_malloc(4);
    call {:si_unique_call 3690} Tmp_495 := __HAVOC_malloc(64);
    call {:si_unique_call 3691} Tmp_496 := __HAVOC_malloc(4);
    call {:si_unique_call 3692} Tmp_498 := __HAVOC_malloc(4);
    call {:si_unique_call 3693} Tmp_499 := __HAVOC_malloc(4);
    call {:si_unique_call 3694} Tmp_505 := __HAVOC_malloc(4);
    srb := 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_480;
    assume {:nonnull} Tmp_480 != 0;
    assume Tmp_480 > 0;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    havoc Tmp_490;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_467;
    call {:si_unique_call 3695} WPP_SF_q(Tmp_467, 92, Tmp_490, NotificationInfo_2);
    goto L446;

  L446:
    Tmp_431 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon242_Then:
    goto L446;

  anon279_Then:
    goto L446;

  anon241_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L446;

  anon243_Then:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    havoc Tmp_472;
    assume {:nonnull} Tmp_472 != 0;
    assume Tmp_472 > 0;
    havoc deviceObject_2;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    pdoExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject_2)];
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3696} sdv_140 := sdv_MmGetMdlVirtualAddress(0);
    statusBlock := sdv_140;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3697} status_10 := CheckStatusResponseValue(statusBlock);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_439;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_445;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_484;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4461;
    call {:si_unique_call 3698} WPP_SF_qDD(Tmp_484, 93, Tmp_445, pdoExtension_3, status_10, vslice_dummy_var_4461);
    goto L55;

  L55:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3699} vslice_dummy_var_581 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := 0;
    goto L1;

  anon190_Then:
    goto L55;

  anon244_Then:
    goto L55;

  anon189_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L55;

  anon187_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    call {:si_unique_call 3700} Sbp2LoginCompletion#1(pdoExtension_3, status_10);
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    rcode := 0;
    goto L73;

  L73:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3701} vslice_dummy_var_582 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := rcode;
    goto L1;

  anon245_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon191_Then:
    goto L66;

  L66:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc src;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} 32768 == src;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_496;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    havoc Tmp_492;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_504;
    call {:si_unique_call 3702} WPP_SF_q(Tmp_504, 94, Tmp_492, pdoExtension_3);
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3703} vslice_dummy_var_572 := Sbp2AccessRegister#1(pdoExtension_3, Reserved__DEVICE_EXTENSION(pdoExtension_3), 1040);
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3704} Sbp2HandleUnsolicited#1(pdoExtension_3, statusBlock);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} yogi_error != 1;
    rcode := 0;
    goto L73;

  anon249_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon248_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon194_Then:
    goto L83;

  anon247_Then:
    goto L83;

  anon193_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon246_Then:
    assume {:partition} 32768 != src;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} 49152 == src;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_505;
    assume {:nonnull} Tmp_505 != 0;
    assume Tmp_505 > 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_494;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_434;
    call {:si_unique_call 3705} WPP_SF_q(Tmp_434, 95, Tmp_494, pdoExtension_3);
    goto L103;

  L103:
    rcode := 0;
    goto L73;

  anon197_Then:
    goto L103;

  anon250_Then:
    goto L103;

  anon196_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon192_Then:
    assume {:partition} 49152 != src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    havoc Tmp_474;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_440;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4462;
    call {:si_unique_call 3706} WPP_SF_qDD(Tmp_440, 96, Tmp_474, pdoExtension_3, status_10, vslice_dummy_var_4462);
    goto L434;

  L434:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3707} vslice_dummy_var_588 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_431 := 0;
    goto L1;

  anon240_Then:
    goto L434;

  anon278_Then:
    goto L434;

  anon239_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L434;

  anon195_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc temp;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} temp > 384;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  L132:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc Tmp_437;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_432;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_4463;
    havoc vslice_dummy_var_4464;
    havoc vslice_dummy_var_4465;
    havoc vslice_dummy_var_4466;
    call {:si_unique_call 3708} WPP_SF_qDDDD(Tmp_432, 98, Tmp_437, pdoExtension_3, vslice_dummy_var_4463, vslice_dummy_var_4464, vslice_dummy_var_4465, vslice_dummy_var_4466);
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4467;
    call {:si_unique_call 3709} Sbp2CreateRequestErrorLog(vslice_dummy_var_4467, 0, 3699, -1073741434);
    rcode := 7;
    goto L73;

  anon201_Then:
    goto L133;

  anon253_Then:
    goto L133;

  anon200_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L133;

  anon198_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_498;
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto L132;

  anon252_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto L132;

  anon199_Then:
    havoc Tmp_444;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_452;
    call {:si_unique_call 3710} WPP_SF_qD(Tmp_452, 97, Tmp_444, pdoExtension_3, temp);
    goto L132;

  anon251_Then:
    assume {:partition} 384 >= temp;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc tempPointer;
    call {:si_unique_call 3711} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    assume {:nonnull} tempPointer != 0;
    assume tempPointer > 0;
    orbContext := Mem_T.PVOID[tempPointer];
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:partition} orbContext != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_435;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    havoc Tmp_483;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_503;
    call {:si_unique_call 3712} WPP_SF_qq(Tmp_503, 100, Tmp_483, pdoExtension_3, orbContext);
    goto L158;

  L158:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    call {:si_unique_call 3713} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_453;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    havoc Tmp_433;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_487;
    call {:si_unique_call 3714} WPP_SF_qq(Tmp_487, 101, Tmp_433, pdoExtension_3, orbContext);
    goto L174;

  L174:
    rcode := 0;
    goto L73;

  anon207_Then:
    goto L174;

  anon257_Then:
    goto L174;

  anon206_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L174;

  anon204_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_479;
    assume {:nonnull} Tmp_479 != 0;
    assume Tmp_479 > 0;
    havoc requestIrp;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3715} vslice_dummy_var_583 := KeCancelTimer(0);
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_454;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_489;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_447;
    call {:si_unique_call 3716} WPP_SF_qq(Tmp_447, 102, Tmp_489, pdoExtension_3, orbContext);
    goto L196;

  L196:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc entry;
    goto L204;

  L204:
    call {:si_unique_call 3717} nextListItem, entry, sdv_134 := Sbp2GlobalStatusCallback#1_loop_L204(nextListItem, entry, sdv_134);
    goto L204_last;

  L204_last:
    goto anon210_Then, anon210_Else;

  anon210_Else:
    call {:si_unique_call 3718} sdv_134 := sdv_containing_record(entry, 0);
    nextListItem := sdv_134;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon260_Else_dummy;

  anon260_Else_dummy:
    assume false;
    return;

  anon260_Then:
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_482;
    assume {:nonnull} Tmp_482 != 0;
    assume Tmp_482 > 0;
    assume {:nonnull} dueTime != 0;
    assume dueTime > 0;
    call {:si_unique_call 3719} vslice_dummy_var_584 := KeSetTimer(0, dueTime, 0);
    goto L185;

  L185:
    call {:si_unique_call 3720} Free1394DataMapping(pdoExtension_3, orbContext);
    call {:si_unique_call 3721} vslice_dummy_var_573 := Sbp2_SCSI_RBC_Conversion(orbContext);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc srb;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc initialOrbListDepth;
    call {:si_unique_call 3722} vslice_dummy_var_585 := sdv_RemoveEntryList(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3723} InitializeListHead(OrbList__ASYNC_REQUEST_CONTEXT(orbContext));
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_4468;
    havoc vslice_dummy_var_4469;
    call {:si_unique_call 3724} Sbp2AddLog(pdoExtension_3, 64, -915451291, vslice_dummy_var_4468, vslice_dummy_var_4469);
    call {:si_unique_call 3725} vslice_dummy_var_574 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4470;
    call {:si_unique_call 3726} vslice_dummy_var_576 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_4470);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L238;

  L238:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4471;
    call {:si_unique_call 3727} vslice_dummy_var_575 := Sbp2Reset#1(vslice_dummy_var_4471, 1);
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3728} sdv_129 := sdv_IsListEmpty(0);
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} sdv_129 != 0;
    goto L252;

  L252:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc currentOrbListDepth;
    call {:si_unique_call 3729} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3730} Tmp_507 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_507 != 0;
    assume Tmp_507 > 0;
    call {:si_unique_call 3731} sdv_KeAcquireSpinLock(0, Tmp_507);
    assume {:nonnull} Tmp_507 != 0;
    assume Tmp_507 > 0;
    havoc oldIrql_1;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3732} sdv_KeReleaseSpinLock(0, oldIrql_1);
    call {:si_unique_call 3733} Tmp_468 := corral_nondet();
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} Tmp_468 > 1;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    goto L367;

  L367:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_458;
    assume {:nonnull} Tmp_458 != 0;
    assume Tmp_458 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_491;
    assume {:nonnull} Tmp_491 != 0;
    assume Tmp_491 > 0;
    havoc Tmp_486;
    havoc Tmp_469;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_441;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_4472;
    call {:si_unique_call 3734} WPP_SF_qDD(Tmp_441, 106, Tmp_469, pdoExtension_3, Tmp_486, vslice_dummy_var_4472);
    goto L291;

  L291:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3735} Sbp2AddLog(pdoExtension_3, 64, -915455121, status_10, requestIrp);
    call {:si_unique_call 3736} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3737} sdv_143 := sdv_IsListEmpty(0);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} sdv_143 != 0;
    call {:si_unique_call 3738} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3739} vslice_dummy_var_577 := Sbp2RestartPendingPowerIrp#1(pdoExtension_3);
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} yogi_error != 1;
    goto L322;

  L322:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_478;
    goto L326;

  L326:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3740} vslice_dummy_var_586 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_3), requestIrp);
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3741} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    goto L341;

  L341:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_462;
    assume {:nonnull} Tmp_462 != 0;
    assume Tmp_462 > 0;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    havoc Tmp_450;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_456;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4473;
    call {:si_unique_call 3742} WPP_SF_qd(Tmp_456, 108, Tmp_450, pdoExtension_3, vslice_dummy_var_4473);
    goto L342;

  L342:
    rcode := 0;
    goto L73;

  anon225_Then:
    goto L342;

  anon269_Then:
    goto L342;

  anon224_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L342;

  anon222_Then:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} initialOrbListDepth <= currentOrbListDepth;
    goto L341;

  anon223_Then:
    assume {:partition} currentOrbListDepth < initialOrbListDepth;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4474;
    call {:si_unique_call 3743} Sbp2StartNextPacketByKey#1(deviceObject_2, vslice_dummy_var_4474);
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:partition} yogi_error != 1;
    goto L341;

  anon268_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon267_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon266_Then:
    Tmp_478 := 0;
    goto L326;

  anon265_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon221_Then:
    assume {:partition} sdv_143 == 0;
    call {:si_unique_call 3744} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto L322;

  anon232_Then:
    goto L291;

  anon264_Then:
    goto L291;

  anon231_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon263_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    goto L367;

  anon215_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_446;
    assume {:nonnull} Tmp_446 != 0;
    assume Tmp_446 > 0;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_461;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    havoc Tmp_473;
    havoc Tmp_488;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_448;
    call {:si_unique_call 3745} WPP_SF_qD(Tmp_448, 105, Tmp_488, pdoExtension_3, Tmp_473);
    goto L352;

  L352:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    Tmp_436 := 32;
    goto L364;

  L364:
    call {:si_unique_call 3746} sdv_RtlCopyMemory(0, 0, Tmp_436);
    goto L291;

  anon230_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_436;
    goto L364;

  anon228_Then:
    goto L291;

  anon229_Then:
    goto L352;

  anon272_Then:
    goto L352;

  anon227_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L352;

  anon216_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_459;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_4475;
    call {:si_unique_call 3747} sdv_120 := ConvertSbp2SenseDataToScsi(statusBlock, vslice_dummy_var_4475, Tmp_459);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} sdv_120 != 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L283;

  L283:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc senseBuffer;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_495;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    goto L290;

  L290:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_477;
    assume {:nonnull} Tmp_477 != 0;
    assume Tmp_477 > 0;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_455;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_466;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_438;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_443;
    assume {:nonnull} Tmp_443 != 0;
    assume Tmp_443 > 0;
    havoc Tmp_502;
    havoc Tmp_470;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_481;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_4476;
    havoc vslice_dummy_var_4477;
    call {:si_unique_call 3748} WPP_SF_qDDDDDd(Tmp_481, 103, Tmp_470, pdoExtension_3, Tmp_502, Tmp_438, Tmp_466, Tmp_455, vslice_dummy_var_4476, vslice_dummy_var_4477);
    goto L291;

  anon220_Then:
    goto L291;

  anon271_Then:
    goto L291;

  anon219_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon270_Then:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    goto L291;

  anon226_Then:
    goto L290;

  anon218_Then:
    goto L290;

  anon217_Then:
    assume {:partition} sdv_120 == 0;
    goto L283;

  anon262_Then:
    assume {:partition} 1 >= Tmp_468;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_460;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} Tmp_460 == 4096;
    goto L381;

  L381:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_485;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_465;
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    havoc Tmp_475;
    havoc Tmp_463;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_451;
    call {:si_unique_call 3749} WPP_SF_qDD(Tmp_451, 107, Tmp_463, pdoExtension_3, Tmp_475, Tmp_485);
    goto L382;

  L382:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon234_Then:
    goto L382;

  anon274_Then:
    goto L382;

  anon233_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L382;

  anon273_Then:
    assume {:partition} Tmp_460 != 4096;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_476;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:partition} Tmp_476 != 8192;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon275_Then:
    assume {:partition} Tmp_476 == 8192;
    goto L381;

  anon214_Then:
    assume {:partition} sdv_129 == 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4478;
    call {:si_unique_call 3750} sdv_131 := sdv_containing_record(vslice_dummy_var_4478, 0);
    nextListItem := sdv_131;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    call {:si_unique_call 3751} vslice_dummy_var_587 := Sbp2AccessRegister#1(pdoExtension_3, CmdOrbAddress__ASYNC_REQUEST_CONTEXT(nextListItem), 1028);
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} yogi_error != 1;
    goto L252;

  anon276_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon261_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon213_Then:
    goto L238;

  anon211_Then:
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} 16384 == src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4479;
    call {:si_unique_call 3752} vslice_dummy_var_579 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_4479);
    goto L405;

  L405:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_500;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon277_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon235_Then:
    goto L405;

  anon212_Then:
    assume {:partition} 16384 != src;
    call {:si_unique_call 3753} vslice_dummy_var_578 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4480;
    call {:si_unique_call 3754} vslice_dummy_var_580 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_4480);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon236_Then:
    goto L252;

  anon210_Then:
    goto L185;

  anon209_Then:
    goto L196;

  anon259_Then:
    goto L196;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon258_Then:
    goto L185;

  anon205_Then:
    goto L158;

  anon256_Then:
    goto L158;

  anon203_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L158;

  anon202_Then:
    goto L150;

  L150:
    call {:si_unique_call 3755} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_442;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    havoc Tmp_506;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_457;
    call {:si_unique_call 3756} WPP_SF_qD(Tmp_457, 99, Tmp_506, pdoExtension_3, temp);
    goto L421;

  L421:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_4481;
    call {:si_unique_call 3757} Sbp2CreateRequestErrorLog(vslice_dummy_var_4481, 0, 3729, -1073741434);
    rcode := 7;
    goto L73;

  anon238_Then:
    goto L421;

  anon255_Then:
    goto L421;

  anon237_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L421;

  anon254_Then:
    assume {:partition} orbContext == 0;
    goto L150;

  anon188_Then:
    goto L66;
}



procedure {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#1(actual_NotificationInfo_2: int) returns (Tmp_431: int);
  modifies alloc, LockDepth, Mem_T.PVOID, Mem_T.P_IRBIRP, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited#0(actual_PdoExtension_8: int, actual_StatusFifo: int)
{
  var {:pointer} Tmp_616: int;
  var {:pointer} Tmp_617: int;
  var {:scalar} sdv_186: int;
  var {:pointer} Tmp_618: int;
  var {:pointer} senseBuffer_1: int;
  var {:pointer} Tmp_619: int;
  var {:scalar} Tmp_620: int;
  var {:scalar} Tmp_621: int;
  var {:pointer} Tmp_622: int;
  var {:scalar} status_15: int;
  var {:scalar} state: int;
  var {:pointer} PdoExtension_8: int;
  var {:pointer} StatusFifo: int;
  var boogieTmp: int;
  var vslice_dummy_var_589: int;
  var vslice_dummy_var_4482: int;
  var vslice_dummy_var_4483: int;

  anon0:
    call {:si_unique_call 3758} senseBuffer_1 := __HAVOC_malloc(4);
    call {:si_unique_call 3759} vslice_dummy_var_589 := __HAVOC_malloc(4);
    call {:si_unique_call 3760} state := __HAVOC_malloc(8);
    PdoExtension_8 := actual_PdoExtension_8;
    StatusFifo := actual_StatusFifo;
    call {:si_unique_call 3761} Tmp_616 := __HAVOC_malloc(4);
    call {:si_unique_call 3762} Tmp_617 := __HAVOC_malloc(4);
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    call {:si_unique_call 3763} boogieTmp := __HAVOC_malloc(72);
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_618;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 3764} sdv_186 := ConvertSbp2SenseDataToScsi(StatusFifo, senseBuffer_1, 18);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_186 != 0;
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon33_Then:
    assume {:nonnull} state != 0;
    assume state > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_616;
    assume {:nonnull} Tmp_616 != 0;
    assume Tmp_616 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_622;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_620;
    assume {:nonnull} state != 0;
    assume state > 0;
    havoc vslice_dummy_var_4482;
    call {:si_unique_call 3765} WPP_SF_D(Tmp_620, 117, Tmp_622, vslice_dummy_var_4482);
    goto L22;

  L22:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc vslice_dummy_var_4483;
    call {:si_unique_call 3766} status_15 := PoRequestPowerIrp#0(vslice_dummy_var_4483, 2, state, 0, 0, 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_15 < 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_617;
    assume {:nonnull} Tmp_617 != 0;
    assume Tmp_617 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    havoc Tmp_619;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_621;
    call {:si_unique_call 3767} WPP_SF_D(Tmp_621, 118, Tmp_619, status_15);
    goto L1;

  anon37_Then:
    goto L1;

  anon42_Then:
    goto L1;

  anon36_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon35_Then:
    assume {:partition} 0 <= status_15;
    goto L1;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    goto L22;

  anon40_Then:
    goto L22;

  anon39_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L22;

  anon32_Then:
    goto L1;

  anon31_Then:
    goto L1;

  anon30_Then:
    assume {:partition} sdv_186 == 0;
    goto L1;

  anon38_Then:
    goto L1;

  anon29_Then:
    goto L1;
}



procedure {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited#0(actual_PdoExtension_8: int, actual_StatusFifo: int);
  modifies alloc, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited#1(actual_PdoExtension_8: int, actual_StatusFifo: int)
{
  var {:pointer} Tmp_616: int;
  var {:pointer} Tmp_617: int;
  var {:scalar} sdv_186: int;
  var {:pointer} Tmp_618: int;
  var {:pointer} senseBuffer_1: int;
  var {:pointer} Tmp_619: int;
  var {:scalar} Tmp_620: int;
  var {:scalar} Tmp_621: int;
  var {:pointer} Tmp_622: int;
  var {:scalar} status_15: int;
  var {:scalar} state: int;
  var {:pointer} PdoExtension_8: int;
  var {:pointer} StatusFifo: int;
  var boogieTmp: int;
  var vslice_dummy_var_590: int;
  var vslice_dummy_var_4484: int;
  var vslice_dummy_var_4485: int;

  anon0:
    call {:si_unique_call 3768} senseBuffer_1 := __HAVOC_malloc(4);
    call {:si_unique_call 3769} vslice_dummy_var_590 := __HAVOC_malloc(4);
    call {:si_unique_call 3770} state := __HAVOC_malloc(8);
    PdoExtension_8 := actual_PdoExtension_8;
    StatusFifo := actual_StatusFifo;
    call {:si_unique_call 3771} Tmp_616 := __HAVOC_malloc(4);
    call {:si_unique_call 3772} Tmp_617 := __HAVOC_malloc(4);
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    call {:si_unique_call 3773} boogieTmp := __HAVOC_malloc(72);
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_618;
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 3774} sdv_186 := ConvertSbp2SenseDataToScsi(StatusFifo, senseBuffer_1, 18);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_186 != 0;
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon33_Then:
    assume {:nonnull} state != 0;
    assume state > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_616;
    assume {:nonnull} Tmp_616 != 0;
    assume Tmp_616 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_622;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_620;
    assume {:nonnull} state != 0;
    assume state > 0;
    havoc vslice_dummy_var_4484;
    call {:si_unique_call 3775} WPP_SF_D(Tmp_620, 117, Tmp_622, vslice_dummy_var_4484);
    goto L22;

  L22:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc vslice_dummy_var_4485;
    call {:si_unique_call 3776} status_15 := PoRequestPowerIrp#1(vslice_dummy_var_4485, 2, state, 0, 0, 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_15 < 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_617;
    assume {:nonnull} Tmp_617 != 0;
    assume Tmp_617 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    havoc Tmp_619;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_621;
    call {:si_unique_call 3777} WPP_SF_D(Tmp_621, 118, Tmp_619, status_15);
    goto L1;

  anon37_Then:
    goto L1;

  anon42_Then:
    goto L1;

  anon36_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon35_Then:
    assume {:partition} 0 <= status_15;
    goto L1;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    goto L22;

  anon40_Then:
    goto L22;

  anon39_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L22;

  anon32_Then:
    goto L1;

  anon31_Then:
    goto L1;

  anon30_Then:
    assume {:partition} sdv_186 == 0;
    goto L1;

  anon38_Then:
    goto L1;

  anon29_Then:
    goto L1;
}



procedure {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited#1(actual_PdoExtension_8: int, actual_StatusFifo: int);
  modifies alloc, LockDepth, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BusResetNotificationEx"} Sbp2BusResetNotificationEx#0(actual_BusResetData: int)
{
  var {:pointer} Tmp_355: int;
  var {:pointer} Tmp_357: int;
  var {:scalar} Tmp_358: int;
  var {:pointer} busResetItem_1: int;
  var {:pointer} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} Tmp_361: int;
  var {:scalar} Tmp_362: int;
  var {:pointer} Tmp_363: int;
  var {:pointer} sdv_85: int;
  var {:scalar} Tmp_364: int;
  var {:pointer} fdoExtension: int;
  var {:pointer} Tmp_365: int;
  var {:scalar} status_7: int;
  var {:pointer} Tmp_367: int;
  var {:scalar} Tmp_368: int;
  var {:pointer} BusResetData: int;
  var boogieTmp: int;
  var vslice_dummy_var_591: int;
  var vslice_dummy_var_592: int;
  var vslice_dummy_var_4486: int;

  anon0:
    call {:si_unique_call 3778} vslice_dummy_var_591 := __HAVOC_malloc(4);
    BusResetData := actual_BusResetData;
    call {:si_unique_call 3779} Tmp_357 := __HAVOC_malloc(4);
    call {:si_unique_call 3780} Tmp_359 := __HAVOC_malloc(4);
    call {:si_unique_call 3781} Tmp_363 := __HAVOC_malloc(4);
    call {:si_unique_call 3782} Tmp_365 := __HAVOC_malloc(4);
    assume {:nonnull} BusResetData != 0;
    assume BusResetData > 0;
    havoc fdoExtension;
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_365;
    assume {:nonnull} Tmp_365 != 0;
    assume Tmp_365 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_367;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_364;
    call {:si_unique_call 3783} WPP_SF_q(Tmp_364, 12, Tmp_367, fdoExtension);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon38_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon47_Then:
    call {:si_unique_call 3784} status_7 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_7 < 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_359;
    assume {:nonnull} Tmp_359 != 0;
    assume Tmp_359 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    havoc Tmp_360;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_368;
    call {:si_unique_call 3785} WPP_SF_q(Tmp_368, 15, Tmp_360, fdoExtension);
    goto L1;

  anon46_Then:
    goto L1;

  anon54_Then:
    goto L1;

  anon45_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon39_Then:
    assume {:partition} 0 <= status_7;
    call {:si_unique_call 3786} sdv_85 := ExAllocatePoolWithTag(512, 8, -344497581);
    busResetItem_1 := sdv_85;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} busResetItem_1 == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_363;
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc Tmp_361;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_362;
    call {:si_unique_call 3787} WPP_SF_q(Tmp_362, 13, Tmp_361, fdoExtension);
    goto L61;

  L61:
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    call {:si_unique_call 3788} vslice_dummy_var_592 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension), 0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    goto L61;

  anon53_Then:
    goto L61;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L61;

  anon49_Then:
    assume {:partition} busResetItem_1 != 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    call {:si_unique_call 3789} boogieTmp := IoAllocateWorkItem(0);
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} BusResetData != 0;
    assume BusResetData > 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    havoc vslice_dummy_var_4486;
    call {:si_unique_call 3790} IoQueueWorkItem#0(vslice_dummy_var_4486, li2bplFunctionConstant389, 0, busResetItem_1);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon50_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon40_Then:
    call {:si_unique_call 3791} ExFreePoolWithTag(0, -344497581);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L61;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_357;
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L61;

  anon51_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L61;

  anon42_Then:
    havoc Tmp_355;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_358;
    call {:si_unique_call 3792} WPP_SF_q(Tmp_358, 14, Tmp_355, fdoExtension);
    goto L61;
}



procedure {:origName "Sbp2BusResetNotificationEx"} Sbp2BusResetNotificationEx#0(actual_BusResetData: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BusResetNotificationEx"} Sbp2BusResetNotificationEx#1(actual_BusResetData: int)
{
  var {:pointer} Tmp_355: int;
  var {:pointer} Tmp_357: int;
  var {:scalar} Tmp_358: int;
  var {:pointer} busResetItem_1: int;
  var {:pointer} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} Tmp_361: int;
  var {:scalar} Tmp_362: int;
  var {:pointer} Tmp_363: int;
  var {:pointer} sdv_85: int;
  var {:scalar} Tmp_364: int;
  var {:pointer} fdoExtension: int;
  var {:pointer} Tmp_365: int;
  var {:scalar} status_7: int;
  var {:pointer} Tmp_367: int;
  var {:scalar} Tmp_368: int;
  var {:pointer} BusResetData: int;
  var boogieTmp: int;
  var vslice_dummy_var_593: int;
  var vslice_dummy_var_594: int;
  var vslice_dummy_var_4487: int;

  anon0:
    call {:si_unique_call 3793} vslice_dummy_var_593 := __HAVOC_malloc(4);
    BusResetData := actual_BusResetData;
    call {:si_unique_call 3794} Tmp_357 := __HAVOC_malloc(4);
    call {:si_unique_call 3795} Tmp_359 := __HAVOC_malloc(4);
    call {:si_unique_call 3796} Tmp_363 := __HAVOC_malloc(4);
    call {:si_unique_call 3797} Tmp_365 := __HAVOC_malloc(4);
    assume {:nonnull} BusResetData != 0;
    assume BusResetData > 0;
    havoc fdoExtension;
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_365;
    assume {:nonnull} Tmp_365 != 0;
    assume Tmp_365 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_367;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_364;
    call {:si_unique_call 3798} WPP_SF_q(Tmp_364, 12, Tmp_367, fdoExtension);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon38_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon47_Then:
    call {:si_unique_call 3799} status_7 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_7 < 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_359;
    assume {:nonnull} Tmp_359 != 0;
    assume Tmp_359 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    havoc Tmp_360;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_368;
    call {:si_unique_call 3800} WPP_SF_q(Tmp_368, 15, Tmp_360, fdoExtension);
    goto L1;

  anon46_Then:
    goto L1;

  anon54_Then:
    goto L1;

  anon45_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon39_Then:
    assume {:partition} 0 <= status_7;
    call {:si_unique_call 3801} sdv_85 := ExAllocatePoolWithTag(512, 8, -344497581);
    busResetItem_1 := sdv_85;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} busResetItem_1 == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_363;
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc Tmp_361;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_362;
    call {:si_unique_call 3802} WPP_SF_q(Tmp_362, 13, Tmp_361, fdoExtension);
    goto L61;

  L61:
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    call {:si_unique_call 3803} vslice_dummy_var_594 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension), 0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    goto L61;

  anon53_Then:
    goto L61;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L61;

  anon49_Then:
    assume {:partition} busResetItem_1 != 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    call {:si_unique_call 3804} boogieTmp := IoAllocateWorkItem(0);
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} BusResetData != 0;
    assume BusResetData > 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    havoc vslice_dummy_var_4487;
    call {:si_unique_call 3805} IoQueueWorkItem#1(vslice_dummy_var_4487, li2bplFunctionConstant389, 0, busResetItem_1);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon50_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon40_Then:
    call {:si_unique_call 3806} ExFreePoolWithTag(0, -344497581);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L61;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_357;
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L61;

  anon51_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L61;

  anon42_Then:
    havoc Tmp_355;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_358;
    call {:si_unique_call 3807} WPP_SF_q(Tmp_358, 14, Tmp_355, fdoExtension);
    goto L61;
}



procedure {:origName "Sbp2BusResetNotificationEx"} Sbp2BusResetNotificationEx#1(actual_BusResetData: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.PVOID, Mem_T.P_IRBIRP, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BusResetNotification"} Sbp2BusResetNotification#0(actual_FdoExtension_1: int)
{
  var {:pointer} Tmp_216: int;
  var {:pointer} busResetItem: int;
  var {:scalar} Tmp_219: int;
  var {:scalar} Tmp_220: int;
  var {:pointer} Tmp_221: int;
  var {:scalar} Tmp_222: int;
  var {:pointer} sdv_44: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} Tmp_224: int;
  var {:scalar} status_5: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} Tmp_226: int;
  var {:pointer} Tmp_227: int;
  var {:pointer} Tmp_228: int;
  var {:scalar} Tmp_229: int;
  var {:pointer} FdoExtension_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_595: int;
  var vslice_dummy_var_596: int;
  var vslice_dummy_var_4488: int;

  anon0:
    call {:si_unique_call 3808} vslice_dummy_var_595 := __HAVOC_malloc(4);
    FdoExtension_1 := actual_FdoExtension_1;
    call {:si_unique_call 3809} Tmp_224 := __HAVOC_malloc(4);
    call {:si_unique_call 3810} Tmp_225 := __HAVOC_malloc(4);
    call {:si_unique_call 3811} Tmp_226 := __HAVOC_malloc(4);
    call {:si_unique_call 3812} Tmp_227 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_226;
    assume {:nonnull} Tmp_226 != 0;
    assume Tmp_226 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_223;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_229;
    call {:si_unique_call 3813} WPP_SF_q(Tmp_229, 16, Tmp_223, FdoExtension_1);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon37_Then:
    call {:si_unique_call 3814} status_5 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_5 < 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_227;
    assume {:nonnull} Tmp_227 != 0;
    assume Tmp_227 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_216;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_220;
    call {:si_unique_call 3815} WPP_SF_q(Tmp_220, 19, Tmp_216, FdoExtension_1);
    goto L1;

  anon47_Then:
    goto L1;

  anon54_Then:
    goto L1;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon40_Then:
    assume {:partition} 0 <= status_5;
    call {:si_unique_call 3816} sdv_44 := ExAllocatePoolWithTag(512, 8, -344497581);
    busResetItem := sdv_44;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} busResetItem == 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_228;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_219;
    call {:si_unique_call 3817} WPP_SF_q(Tmp_219, 17, Tmp_228, FdoExtension_1);
    goto L59;

  L59:
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    call {:si_unique_call 3818} vslice_dummy_var_596 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(FdoExtension_1), 0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    goto L59;

  anon53_Then:
    goto L59;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon49_Then:
    assume {:partition} busResetItem != 0;
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    call {:si_unique_call 3819} boogieTmp := IoAllocateWorkItem(0);
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    havoc vslice_dummy_var_4488;
    call {:si_unique_call 3820} IoQueueWorkItem#0(vslice_dummy_var_4488, li2bplFunctionConstant389, 0, busResetItem);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon50_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    call {:si_unique_call 3821} ExFreePoolWithTag(0, -344497581);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_225;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L59;

  anon51_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto L59;

  anon43_Then:
    havoc Tmp_221;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_222;
    call {:si_unique_call 3822} WPP_SF_q(Tmp_222, 18, Tmp_221, FdoExtension_1);
    goto L59;
}



procedure {:origName "Sbp2BusResetNotification"} Sbp2BusResetNotification#0(actual_FdoExtension_1: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:origName "Sbp2BusResetNotification"} Sbp2BusResetNotification#1(actual_FdoExtension_1: int)
{
  var {:pointer} Tmp_216: int;
  var {:pointer} busResetItem: int;
  var {:scalar} Tmp_219: int;
  var {:scalar} Tmp_220: int;
  var {:pointer} Tmp_221: int;
  var {:scalar} Tmp_222: int;
  var {:pointer} sdv_44: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} Tmp_224: int;
  var {:scalar} status_5: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} Tmp_226: int;
  var {:pointer} Tmp_227: int;
  var {:pointer} Tmp_228: int;
  var {:scalar} Tmp_229: int;
  var {:pointer} FdoExtension_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_597: int;
  var vslice_dummy_var_598: int;
  var vslice_dummy_var_4489: int;

  anon0:
    call {:si_unique_call 3823} vslice_dummy_var_597 := __HAVOC_malloc(4);
    FdoExtension_1 := actual_FdoExtension_1;
    call {:si_unique_call 3824} Tmp_224 := __HAVOC_malloc(4);
    call {:si_unique_call 3825} Tmp_225 := __HAVOC_malloc(4);
    call {:si_unique_call 3826} Tmp_226 := __HAVOC_malloc(4);
    call {:si_unique_call 3827} Tmp_227 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_226;
    assume {:nonnull} Tmp_226 != 0;
    assume Tmp_226 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_223;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_229;
    call {:si_unique_call 3828} WPP_SF_q(Tmp_229, 16, Tmp_223, FdoExtension_1);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon37_Then:
    call {:si_unique_call 3829} status_5 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} status_5 < 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_227;
    assume {:nonnull} Tmp_227 != 0;
    assume Tmp_227 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_216;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_220;
    call {:si_unique_call 3830} WPP_SF_q(Tmp_220, 19, Tmp_216, FdoExtension_1);
    goto L1;

  anon47_Then:
    goto L1;

  anon54_Then:
    goto L1;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon40_Then:
    assume {:partition} 0 <= status_5;
    call {:si_unique_call 3831} sdv_44 := ExAllocatePoolWithTag(512, 8, -344497581);
    busResetItem := sdv_44;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} busResetItem == 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc Tmp_228;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_219;
    call {:si_unique_call 3832} WPP_SF_q(Tmp_219, 17, Tmp_228, FdoExtension_1);
    goto L59;

  L59:
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    call {:si_unique_call 3833} vslice_dummy_var_598 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(FdoExtension_1), 0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    goto L59;

  anon53_Then:
    goto L59;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon49_Then:
    assume {:partition} busResetItem != 0;
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    call {:si_unique_call 3834} boogieTmp := IoAllocateWorkItem(0);
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    havoc vslice_dummy_var_4489;
    call {:si_unique_call 3835} IoQueueWorkItem#1(vslice_dummy_var_4489, li2bplFunctionConstant389, 0, busResetItem);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon50_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    call {:si_unique_call 3836} ExFreePoolWithTag(0, -344497581);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_225;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto L59;

  anon51_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto L59;

  anon43_Then:
    havoc Tmp_221;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_222;
    call {:si_unique_call 3837} WPP_SF_q(Tmp_222, 18, Tmp_221, FdoExtension_1);
    goto L59;
}



procedure {:origName "Sbp2BusResetNotification"} Sbp2BusResetNotification#1(actual_FdoExtension_1: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.PVOID, Mem_T.P_IRBIRP, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(t) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation Sbp2_ProcessTextualDescriptor_loop_L60(in_i: int, in_Tmp_14: int, in_Tmp_16: int, in_Tmp_20: int, in_Tmp_21: int, in_pData: int, in_ulUnicode: int, in_Tmp_26: int, in_Tmp_27: int, in_dataLength: int, in_uChar: int) returns (out_i: int, out_Tmp_14: int, out_Tmp_16: int, out_Tmp_20: int, out_Tmp_21: int, out_Tmp_26: int, out_Tmp_27: int, out_uChar: int)
{

  entry:
    out_i, out_Tmp_14, out_Tmp_16, out_Tmp_20, out_Tmp_21, out_Tmp_26, out_Tmp_27, out_uChar := in_i, in_Tmp_14, in_Tmp_16, in_Tmp_20, in_Tmp_21, in_Tmp_26, in_Tmp_27, in_uChar;
    goto L60, exit;

  exit:
    return;

  L60:
    goto anon60_Else;

  anon60_Else:
    assume {:partition} in_dataLength * 4 > out_i;
    out_Tmp_16 := in_pData;
    assume {:nonnull} out_Tmp_16 != 0;
    assume out_Tmp_16 > 0;
    havoc out_uChar;
    goto anon79_Else;

  anon79_Else:
    assume {:partition} out_uChar != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} out_uChar == 44;
    goto L70;

  L70:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_20;
    assume {:nonnull} out_Tmp_20 != 0;
    assume out_Tmp_20 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_Tmp_27 := out_uChar;
    havoc out_Tmp_21;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_26;
    call {:si_unique_call 3838} WPP_SF_D(out_Tmp_26, 124, out_Tmp_21, out_Tmp_27);
    goto L71;

  L71:
    out_Tmp_14 := in_pData;
    assume {:nonnull} out_Tmp_14 != 0;
    assume out_Tmp_14 > 0;
    goto L80;

  L80:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(in_ulUnicode, 0) != 0;
    out_i := out_i + 1;
    goto L81;

  L81:
    out_i := out_i + 1;
    goto L81_dummy;

  L81_dummy:
    havoc out_i;
    return;

  anon65_Then:
    assume {:partition} BAND(in_ulUnicode, 0) == 0;
    goto L81;

  anon64_Then:
    goto L71;

  anon80_Then:
    goto L71;

  anon63_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L71;

  anon61_Then:
    assume {:partition} out_uChar != 44;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} 32 <= out_uChar;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_uChar <= 127;
    goto L80;

  anon66_Then:
    assume {:partition} 127 < out_uChar;
    goto L70;

  anon62_Then:
    assume {:partition} out_uChar < 32;
    goto L70;
}



procedure {:LoopProcedure} Sbp2_ProcessTextualDescriptor_loop_L60(in_i: int, in_Tmp_14: int, in_Tmp_16: int, in_Tmp_20: int, in_Tmp_21: int, in_pData: int, in_ulUnicode: int, in_Tmp_26: int, in_Tmp_27: int, in_dataLength: int, in_uChar: int) returns (out_i: int, out_Tmp_14: int, out_Tmp_16: int, out_Tmp_20: int, out_Tmp_21: int, out_Tmp_26: int, out_Tmp_27: int, out_uChar: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_14 == in_Tmp_14 || out_Tmp_14 == in_pData;
  free ensures {:va_keep} out_Tmp_16 == in_pData || out_Tmp_16 == in_Tmp_16;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength: int, in_Tmp_253: int, in_Tmp_262: int, in_Tmp_263: int, in_sdv_55: int, in_Tmp_280: int, in_Tmp_281: int, in_j: int, in_Tmp_284: int, in_Tmp_285: int, in_unitDirEntries: int, in_Tmp_295: int, in_vendorLeaf_1: int, in_status_6: int, in_sdv_61: int, in_offset: int, in_unitDependentDirectory_1: int, in_sdv_67: int, in_cromOffset: int, in_Tmp_308: int, in_Tmp_309: int, in_Tmp_313: int, in_Tmp_314: int, in_modelIdCount: int, in_Tmp_317: int, in_devListSize: int, in_firstDevInfo: int, in_Tmp_329: int, in_devInfo: int, in_sdv_80: int, in_ModelLeaf_2: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_253: int, out_Tmp_262: int, out_Tmp_263: int, out_Tmp_280: int, out_Tmp_281: int, out_j: int, out_Tmp_284: int, out_Tmp_285: int, out_unitDirEntries: int, out_Tmp_295: int, out_status_6: int, out_Tmp_308: int, out_Tmp_309: int, out_Tmp_313: int, out_Tmp_314: int, out_modelIdCount: int, out_Tmp_317: int, out_devListSize: int, out_Tmp_329: int)
{
  var vslice_dummy_var_4490: int;

  entry:
    out_Tmp_253, out_Tmp_262, out_Tmp_263, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_unitDirEntries, out_Tmp_295, out_status_6, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_Tmp_314, out_modelIdCount, out_Tmp_317, out_devListSize, out_Tmp_329 := in_Tmp_253, in_Tmp_262, in_Tmp_263, in_Tmp_280, in_Tmp_281, in_j, in_Tmp_284, in_Tmp_285, in_unitDirEntries, in_Tmp_295, in_status_6, in_Tmp_308, in_Tmp_309, in_Tmp_313, in_Tmp_314, in_modelIdCount, in_Tmp_317, in_devListSize, in_Tmp_329;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_262;
    assume {:nonnull} out_Tmp_262 != 0;
    assume out_Tmp_262 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_263;
    assume {:nonnull} out_Tmp_263 != 0;
    assume out_Tmp_263 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_281;
    assume {:nonnull} out_Tmp_281 != 0;
    assume out_Tmp_281 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_329;
    assume {:nonnull} out_Tmp_329 != 0;
    assume out_Tmp_329 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_314;
    assume {:nonnull} out_Tmp_314 != 0;
    assume out_Tmp_314 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3839} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_packet_1], 2);
    goto anon418_Else;

  anon418_Else:
    assume {:partition} yogi_error != 1;
    goto anon328_Then;

  anon328_Then:
    assume {:partition} 0 <= out_status_6;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_253;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} out_Tmp_253 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_313;
    assume {:nonnull} out_Tmp_313 != 0;
    assume out_Tmp_313 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc out_Tmp_295;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_284;
    call {:si_unique_call 3841} WPP_SF_q(out_Tmp_284, 47, out_Tmp_295, in_FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3840} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L311;

  L311:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    goto L316;

  L316:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto L318;

  L318:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L320;

  L320:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L322;

  L322:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L286;

  L286:
    out_Tmp_308 := in_unitDependentDirectory_1;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} out_Tmp_308 != 0;
    assume out_Tmp_308 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} out_Tmp_308 != 0;
    assume out_Tmp_308 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    goto L364;

  L364:
    out_j := out_j + 1;
    goto anon424_Then;

  anon424_Then:
    assume {:partition} out_j <= INTDIV(in_dependentLength, 4);
    goto anon424_Then_dummy;

  anon424_Then_dummy:
    call {:si_unique_call 3846} {:si_old_unique_call 1} out_Tmp_253, out_Tmp_262, out_Tmp_263, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_unitDirEntries, out_Tmp_295, out_status_6, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_Tmp_314, out_modelIdCount, out_Tmp_317, out_devListSize, out_Tmp_329 := Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength, out_Tmp_253, out_Tmp_262, out_Tmp_263, in_sdv_55, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_unitDirEntries, out_Tmp_295, in_vendorLeaf_1, out_status_6, in_sdv_61, in_offset, in_unitDependentDirectory_1, in_sdv_67, in_cromOffset, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_Tmp_314, out_modelIdCount, out_Tmp_317, out_devListSize, in_firstDevInfo, out_Tmp_329, in_devInfo, in_sdv_80, in_ModelLeaf_2, in_packet_1, in_FdoExtension_2);
    return;

  anon386_Then:
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_280;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} out_Tmp_280 != 23;
    goto L364;

  anon425_Then:
    assume {:partition} out_Tmp_280 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3844} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_2);
    goto anon426_Else;

  anon426_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_309;
    assume {:nonnull} out_Tmp_309 != 0;
    assume out_Tmp_309 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc out_Tmp_285;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_317;
    call {:si_unique_call 3845} WPP_SF_q(out_Tmp_317, 48, out_Tmp_285, in_FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_4490;
    call {:si_unique_call 3842} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_4490, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 3843} sdv_ExFreePool(0);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto L344;

  L344:
    out_modelIdCount := out_modelIdCount + 1;
    goto L364;

  anon336_Then:
    goto L349;

  anon427_Then:
    goto L349;

  anon335_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L349;

  anon334_Then:
    goto L344;

  anon387_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon423_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon333_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L322;

  anon332_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L320;

  anon331_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L318;

  anon422_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L316;

  anon330_Then:
    goto L300;

  anon421_Then:
    goto L300;

  anon329_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon420_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L311;

  anon419_Then:
    assume {:partition} out_Tmp_253 != 20;
    goto L286;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength: int, in_Tmp_253: int, in_Tmp_262: int, in_Tmp_263: int, in_sdv_55: int, in_Tmp_280: int, in_Tmp_281: int, in_j: int, in_Tmp_284: int, in_Tmp_285: int, in_unitDirEntries: int, in_Tmp_295: int, in_vendorLeaf_1: int, in_status_6: int, in_sdv_61: int, in_offset: int, in_unitDependentDirectory_1: int, in_sdv_67: int, in_cromOffset: int, in_Tmp_308: int, in_Tmp_309: int, in_Tmp_313: int, in_Tmp_314: int, in_modelIdCount: int, in_Tmp_317: int, in_devListSize: int, in_firstDevInfo: int, in_Tmp_329: int, in_devInfo: int, in_sdv_80: int, in_ModelLeaf_2: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_253: int, out_Tmp_262: int, out_Tmp_263: int, out_Tmp_280: int, out_Tmp_281: int, out_j: int, out_Tmp_284: int, out_Tmp_285: int, out_unitDirEntries: int, out_Tmp_295: int, out_status_6: int, out_Tmp_308: int, out_Tmp_309: int, out_Tmp_313: int, out_Tmp_314: int, out_modelIdCount: int, out_Tmp_317: int, out_devListSize: int, out_Tmp_329: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_308 == in_Tmp_308 || out_Tmp_308 == in_unitDependentDirectory_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Get1394ConfigInfo_loop_L214(in_Tmp_246: int, in_Tmp_252: int, in_Tmp_258: int, in_Tmp_268: int, in_Tmp_274: int, in_genPacket: int, in_Tmp_289: int, in_currentGeneration: int, in_status_6: int, in_Tmp_306: int, in_Tmp_323: int, in_Tmp_326: int, in_Tmp_342: int, in_retries: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_246: int, out_Tmp_252: int, out_Tmp_258: int, out_Tmp_268: int, out_Tmp_274: int, out_Tmp_289: int, out_status_6: int, out_Tmp_306: int, out_Tmp_323: int, out_Tmp_326: int, out_Tmp_342: int, out_retries: int)
{

  entry:
    out_Tmp_246, out_Tmp_252, out_Tmp_258, out_Tmp_268, out_Tmp_274, out_Tmp_289, out_status_6, out_Tmp_306, out_Tmp_323, out_Tmp_326, out_Tmp_342, out_retries := in_Tmp_246, in_Tmp_252, in_Tmp_258, in_Tmp_268, in_Tmp_274, in_Tmp_289, in_status_6, in_Tmp_306, in_Tmp_323, in_Tmp_326, in_Tmp_342, in_retries;
    goto L214, exit;

  exit:
    return;

  L214:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_274;
    assume {:nonnull} out_Tmp_274 != 0;
    assume out_Tmp_274 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3847} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_packet_1], 2);
    goto anon413_Else;

  anon413_Else:
    assume {:partition} yogi_error != 1;
    goto anon322_Then;

  anon322_Then:
    assume {:partition} 0 > out_status_6;
    goto anon323_Else;

  anon323_Else:
    assume {:partition} out_retries > 1;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_252;
    assume {:nonnull} out_Tmp_252 != 0;
    assume out_Tmp_252 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc out_Tmp_289;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_326;
    call {:si_unique_call 3849} WPP_SF_qD(out_Tmp_326, 43, out_Tmp_289, in_FdoExtension_2, out_status_6);
    goto L401;

  L401:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] != 0;
    goto L412;

  L412:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_323;
    assume {:nonnull} out_Tmp_323 != 0;
    assume out_Tmp_323 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_268;
    assume {:nonnull} out_Tmp_268 != 0;
    assume out_Tmp_268 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    call {:si_unique_call 3851} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_genPacket], 2);
    goto anon430_Else;

  anon430_Else:
    assume {:partition} yogi_error != 1;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} out_status_6 < 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_246;
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc out_Tmp_258;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_342;
    call {:si_unique_call 3850} WPP_SF_qD(out_Tmp_342, 44, out_Tmp_258, in_FdoExtension_2, out_status_6);
    goto L424;

  L424:
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_306;
    assume {:nonnull} out_Tmp_306 != 0;
    assume out_Tmp_306 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    goto L413;

  L413:
    out_retries := out_retries - 1;
    goto anon431_Then;

  anon431_Then:
    assume {:partition} out_retries != 0;
    goto anon431_Then_dummy;

  anon431_Then_dummy:
    call {:si_unique_call 3852} {:si_old_unique_call 1} out_Tmp_246, out_Tmp_252, out_Tmp_258, out_Tmp_268, out_Tmp_274, out_Tmp_289, out_status_6, out_Tmp_306, out_Tmp_323, out_Tmp_326, out_Tmp_342, out_retries := Sbp2Get1394ConfigInfo_loop_L214(out_Tmp_246, out_Tmp_252, out_Tmp_258, out_Tmp_268, out_Tmp_274, in_genPacket, out_Tmp_289, in_currentGeneration, out_status_6, out_Tmp_306, out_Tmp_323, out_Tmp_326, out_Tmp_342, out_retries, in_packet_1, in_FdoExtension_2);
    return;

  anon345_Then:
    goto L424;

  anon432_Then:
    goto L424;

  anon344_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L424;

  anon343_Then:
    assume {:partition} 0 <= out_status_6;
    goto L424;

  anon342_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] == 0;
    goto L413;

  anon340_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] == 0;
    call {:si_unique_call 3848} AllocateIrpAndIrb(in_FdoExtension_2, in_genPacket);
    goto L412;

  anon341_Then:
    goto L401;

  anon429_Then:
    goto L401;

  anon339_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L401;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L214(in_Tmp_246: int, in_Tmp_252: int, in_Tmp_258: int, in_Tmp_268: int, in_Tmp_274: int, in_genPacket: int, in_Tmp_289: int, in_currentGeneration: int, in_status_6: int, in_Tmp_306: int, in_Tmp_323: int, in_Tmp_326: int, in_Tmp_342: int, in_retries: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_246: int, out_Tmp_252: int, out_Tmp_258: int, out_Tmp_268: int, out_Tmp_274: int, out_Tmp_289: int, out_status_6: int, out_Tmp_306: int, out_Tmp_323: int, out_Tmp_326: int, out_Tmp_342: int, out_retries: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Get1394ConfigInfo_loop_L445(in_Tmp_239: int, in_sdv_49: int, in_dependentLength: int, in_Tmp_271: int, in_sdv_56: int, in_Tmp_278: int, in_Tmp_279: int, in_j: int, in_unitDirEntries: int, in_Tmp_290: int, in_Tmp_294: int, in_vendorLeaf_1: int, in_status_6: int, in_modelLeaf_1: int, in_Tmp_302: int, in_unitDependentDirectory_1: int, in_Tmp_304: int, in_Tmp_305: int, in_sdv_68: int, in_cromOffset: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_321: int, in_firstDevInfo: int, in_Tmp_330: int, in_ModelLeaf_1: int, in_sdv_77: int, in_Tmp_332: int, in_devInfo: int, in_dependentLocation: int, in_FdoExtension_2: int) returns (out_Tmp_239: int, out_Tmp_271: int, out_Tmp_278: int, out_Tmp_279: int, out_j: int, out_unitDirEntries: int, out_Tmp_290: int, out_Tmp_294: int, out_status_6: int, out_Tmp_302: int, out_Tmp_304: int, out_Tmp_305: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_321: int, out_Tmp_330: int, out_Tmp_332: int)
{
  var vslice_dummy_var_4491: int;
  var vslice_dummy_var_4492: int;

  entry:
    out_Tmp_239, out_Tmp_271, out_Tmp_278, out_Tmp_279, out_j, out_unitDirEntries, out_Tmp_290, out_Tmp_294, out_status_6, out_Tmp_302, out_Tmp_304, out_Tmp_305, out_modelIdCount, out_devListSize, out_Tmp_321, out_Tmp_330, out_Tmp_332 := in_Tmp_239, in_Tmp_271, in_Tmp_278, in_Tmp_279, in_j, in_unitDirEntries, in_Tmp_290, in_Tmp_294, in_status_6, in_Tmp_302, in_Tmp_304, in_Tmp_305, in_modelIdCount, in_devListSize, in_Tmp_321, in_Tmp_330, in_Tmp_332;
    goto L445, exit;

  exit:
    return;

  L445:
    goto anon348_Else;

  anon348_Else:
    assume {:partition} in_dependentLength > out_j;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_278;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} out_Tmp_278 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L459;

  L459:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_321;
    assume {:nonnull} out_Tmp_321 != 0;
    assume out_Tmp_321 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc out_Tmp_302;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_279;
    call {:si_unique_call 3856} WPP_SF_q(out_Tmp_279, 40, out_Tmp_302, in_FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3853} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L476;

  L476:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    goto L480;

  L480:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    goto L482;

  L482:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L484;

  L484:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L486;

  L486:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L448;

  L448:
    out_Tmp_294 := in_unitDependentDirectory_1;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} out_Tmp_294 != 0;
    assume out_Tmp_294 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} out_Tmp_294 != 0;
    assume out_Tmp_294 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    goto L542;

  L542:
    out_j := out_j + 1;
    goto L542_dummy;

  L542_dummy:
    call {:si_unique_call 3861} {:si_old_unique_call 1} out_Tmp_239, out_Tmp_271, out_Tmp_278, out_Tmp_279, out_j, out_unitDirEntries, out_Tmp_290, out_Tmp_294, out_status_6, out_Tmp_302, out_Tmp_304, out_Tmp_305, out_modelIdCount, out_devListSize, out_Tmp_321, out_Tmp_330, out_Tmp_332 := Sbp2Get1394ConfigInfo_loop_L445(out_Tmp_239, in_sdv_49, in_dependentLength, out_Tmp_271, in_sdv_56, out_Tmp_278, out_Tmp_279, out_j, out_unitDirEntries, out_Tmp_290, out_Tmp_294, in_vendorLeaf_1, out_status_6, in_modelLeaf_1, out_Tmp_302, in_unitDependentDirectory_1, out_Tmp_304, out_Tmp_305, in_sdv_68, in_cromOffset, out_modelIdCount, out_devListSize, out_Tmp_321, in_firstDevInfo, out_Tmp_330, in_ModelLeaf_1, in_sdv_77, out_Tmp_332, in_devInfo, in_dependentLocation, in_FdoExtension_2);
    return;

  anon388_Then:
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_271;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} out_Tmp_271 != 23;
    goto L542;

  anon439_Then:
    assume {:partition} out_Tmp_271 == 23;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3858} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_1);
    goto anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_4492;
    call {:si_unique_call 3859} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_4492, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 3860} sdv_ExFreePool(0);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_290;
    assume {:nonnull} out_Tmp_290 != 0;
    assume out_Tmp_290 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc out_Tmp_330;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_305;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_4491;
    call {:si_unique_call 3857} WPP_SF_S(out_Tmp_305, 41, out_Tmp_330, vslice_dummy_var_4491);
    goto L512;

  L512:
    out_modelIdCount := out_modelIdCount + 1;
    goto L542;

  anon361_Then:
    goto L512;

  anon441_Then:
    goto L512;

  anon360_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L512;

  anon359_Then:
    goto L512;

  anon358_Then:
    goto L512;

  anon389_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon438_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon355_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L486;

  anon354_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L484;

  anon353_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L482;

  anon437_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L480;

  anon352_Then:
    goto L465;

  anon436_Then:
    goto L465;

  anon351_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L465;

  anon350_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L476;

  anon435_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_304;
    assume {:nonnull} out_Tmp_304 != 0;
    assume out_Tmp_304 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc out_Tmp_239;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_332;
    call {:si_unique_call 3855} WPP_SF_q(out_Tmp_332, 39, out_Tmp_239, in_FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3854} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(in_devInfo));
    goto L459;

  anon357_Then:
    goto L493;

  anon442_Then:
    goto L493;

  anon356_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L493;

  anon349_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L459;

  anon434_Then:
    assume {:partition} out_Tmp_278 != 20;
    goto L448;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L445(in_Tmp_239: int, in_sdv_49: int, in_dependentLength: int, in_Tmp_271: int, in_sdv_56: int, in_Tmp_278: int, in_Tmp_279: int, in_j: int, in_unitDirEntries: int, in_Tmp_290: int, in_Tmp_294: int, in_vendorLeaf_1: int, in_status_6: int, in_modelLeaf_1: int, in_Tmp_302: int, in_unitDependentDirectory_1: int, in_Tmp_304: int, in_Tmp_305: int, in_sdv_68: int, in_cromOffset: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_321: int, in_firstDevInfo: int, in_Tmp_330: int, in_ModelLeaf_1: int, in_sdv_77: int, in_Tmp_332: int, in_devInfo: int, in_dependentLocation: int, in_FdoExtension_2: int) returns (out_Tmp_239: int, out_Tmp_271: int, out_Tmp_278: int, out_Tmp_279: int, out_j: int, out_unitDirEntries: int, out_Tmp_290: int, out_Tmp_294: int, out_status_6: int, out_Tmp_302: int, out_Tmp_304: int, out_Tmp_305: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_321: int, out_Tmp_330: int, out_Tmp_332: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_294 == in_Tmp_294 || out_Tmp_294 == in_unitDependentDirectory_1;
  free ensures {:va_keep} out_status_6 == -1073741670 || out_status_6 == 0 || out_status_6 == -1073741823 || out_status_6 == in_status_6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Get1394ConfigInfo_loop_L132(in_Tmp_237: int, in_Tmp_238: int, in_Tmp_239: int, in_Tmp_243: int, in_Tmp_244: int, in_Tmp_246: int, in_Tmp_247: int, in_sdv_49: int, in_Tmp_250: int, in_Tmp_251: int, in_Tmp_252: int, in_dependentLength: int, in_sdv_51: int, in_Tmp_253: int, in_Tmp_256: int, in_Tmp_258: int, in_Tmp_259: int, in_Tmp_260: int, in_sdv_53: int, in_Tmp_262: int, in_Tmp_263: int, in_Tmp_267: int, in_sdv_55: int, in_Tmp_268: int, in_Tmp_269: int, in_Tmp_271: int, in_tmp: int, in_Tmp_273: int, in_Tmp_274: int, in_sdv_56: int, in_i_1: int, in_Tmp_275: int, in_genPacket: int, in_Tmp_276: int, in_Tmp_278: int, in_Tmp_279: int, in_Tmp_280: int, in_Tmp_281: int, in_j: int, in_Tmp_284: int, in_sdv_57: int, in_Tmp_285: int, in_Tmp_286: int, in_Tmp_287: int, in_unitDirEntries: int, in_Tmp_289: int, in_Tmp_290: int, in_currentGeneration: int, in_Tmp_293: int, in_sdv_59: int, in_Tmp_294: int, in_Tmp_295: int, in_vendorLeaf_1: int, in_Tmp_296: int, in_sdv_60: int, in_status_6: int, in_sdv_61: int, in_Tmp_301: int, in_offset: int, in_modelLeaf_1: int, in_Tmp_302: int, in_unitDependentDirectory_1: int, in_sdv_64: int, in_sdv_65: int, in_Tmp_304: int, in_Tmp_305: int, in_sdv_67: int, in_Tmp_306: int, in_sdv_68: int, in_Tmp_307: int, in_cromOffset: int, in_Tmp_308: int, in_Tmp_309: int, in_Tmp_313: int, in_directoryLength: int, in_sdv_69: int, in_Tmp_314: int, in_Tmp_315: int, in_Tmp_316: int, in_modelIdCount: int, in_Tmp_317: int, in_dirInfoQuad: int, in_Tmp_318: int, in_devListSize: int, in_firstOne: int, in_Tmp_319: int, in_sdv_71: int, in_Tmp_320: int, in_Tmp_321: int, in_Tmp_322: int, in_sdv_72: int, in_Tmp_323: int, in_directoryLocation: int, in_sbp2Device: int, in_firstDevInfo: int, in_Tmp_326: int, in_Tmp_327: int, in_Tmp_329: int, in_sdv_76: int, in_ModelLeaf: int, in_Tmp_330: int, in_ModelLeaf_1: int, in_sdv_77: int, in_Tmp_332: int, in_Tmp_337: int, in_Tmp_339: int, in_Tmp_342: int, in_Tmp_343: int, in_devInfo: int, in_sdv_80: int, in_sdv_81: int, in_Tmp_345: int, in_Tmp_346: int, in_retries: int, in_dependentLocation: int, in_Tmp_349: int, in_unitDirectory_1: int, in_ModelLeaf_2: int, in_packet_1: int, in_Tmp_350: int, in_info: int, in_Tmp_352: int, in_Tmp_353: int, in_Tmp_354: int, in_FdoExtension_2: int, in_Sbp2Req: int) returns (out_Tmp_237: int, out_Tmp_238: int, out_Tmp_239: int, out_Tmp_243: int, out_Tmp_244: int, out_Tmp_246: int, out_Tmp_247: int, out_Tmp_250: int, out_Tmp_251: int, out_Tmp_252: int, out_dependentLength: int, out_sdv_51: int, out_Tmp_253: int, out_Tmp_256: int, out_Tmp_258: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_262: int, out_Tmp_263: int, out_Tmp_267: int, out_Tmp_268: int, out_Tmp_269: int, out_Tmp_271: int, out_tmp: int, out_Tmp_273: int, out_Tmp_274: int, out_i_1: int, out_Tmp_275: int, out_Tmp_276: int, out_Tmp_278: int, out_Tmp_279: int, out_Tmp_280: int, out_Tmp_281: int, out_j: int, out_Tmp_284: int, out_Tmp_285: int, out_Tmp_286: int, out_Tmp_287: int, out_unitDirEntries: int, out_Tmp_289: int, out_Tmp_290: int, out_Tmp_293: int, out_sdv_59: int, out_Tmp_294: int, out_Tmp_295: int, out_Tmp_296: int, out_status_6: int, out_Tmp_301: int, out_offset: int, out_Tmp_302: int, out_unitDependentDirectory_1: int, out_Tmp_304: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_307: int, out_Tmp_308: int, out_Tmp_309: int, out_Tmp_313: int, out_sdv_69: int, out_Tmp_314: int, out_Tmp_315: int, out_Tmp_316: int, out_modelIdCount: int, out_Tmp_317: int, out_dirInfoQuad: int, out_Tmp_318: int, out_devListSize: int, out_firstOne: int, out_Tmp_319: int, out_Tmp_320: int, out_Tmp_321: int, out_Tmp_322: int, out_Tmp_323: int, out_sbp2Device: int, out_Tmp_326: int, out_Tmp_327: int, out_Tmp_329: int, out_Tmp_330: int, out_Tmp_332: int, out_Tmp_337: int, out_Tmp_339: int, out_Tmp_342: int, out_Tmp_343: int, out_devInfo: int, out_Tmp_345: int, out_Tmp_346: int, out_retries: int, out_Tmp_349: int, out_Tmp_350: int, out_info: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int)
{
  var vslice_dummy_var_4493: int;
  var vslice_dummy_var_4494: int;
  var vslice_dummy_var_4495: int;
  var vslice_dummy_var_4496: int;
  var vslice_dummy_var_4497: int;
  var vslice_dummy_var_4498: int;

  entry:
    out_Tmp_237, out_Tmp_238, out_Tmp_239, out_Tmp_243, out_Tmp_244, out_Tmp_246, out_Tmp_247, out_Tmp_250, out_Tmp_251, out_Tmp_252, out_dependentLength, out_sdv_51, out_Tmp_253, out_Tmp_256, out_Tmp_258, out_Tmp_259, out_Tmp_260, out_Tmp_262, out_Tmp_263, out_Tmp_267, out_Tmp_268, out_Tmp_269, out_Tmp_271, out_tmp, out_Tmp_273, out_Tmp_274, out_i_1, out_Tmp_275, out_Tmp_276, out_Tmp_278, out_Tmp_279, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_Tmp_286, out_Tmp_287, out_unitDirEntries, out_Tmp_289, out_Tmp_290, out_Tmp_293, out_sdv_59, out_Tmp_294, out_Tmp_295, out_Tmp_296, out_status_6, out_Tmp_301, out_offset, out_Tmp_302, out_unitDependentDirectory_1, out_Tmp_304, out_Tmp_305, out_Tmp_306, out_Tmp_307, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_sdv_69, out_Tmp_314, out_Tmp_315, out_Tmp_316, out_modelIdCount, out_Tmp_317, out_dirInfoQuad, out_Tmp_318, out_devListSize, out_firstOne, out_Tmp_319, out_Tmp_320, out_Tmp_321, out_Tmp_322, out_Tmp_323, out_sbp2Device, out_Tmp_326, out_Tmp_327, out_Tmp_329, out_Tmp_330, out_Tmp_332, out_Tmp_337, out_Tmp_339, out_Tmp_342, out_Tmp_343, out_devInfo, out_Tmp_345, out_Tmp_346, out_retries, out_Tmp_349, out_Tmp_350, out_info, out_Tmp_352, out_Tmp_353, out_Tmp_354 := in_Tmp_237, in_Tmp_238, in_Tmp_239, in_Tmp_243, in_Tmp_244, in_Tmp_246, in_Tmp_247, in_Tmp_250, in_Tmp_251, in_Tmp_252, in_dependentLength, in_sdv_51, in_Tmp_253, in_Tmp_256, in_Tmp_258, in_Tmp_259, in_Tmp_260, in_Tmp_262, in_Tmp_263, in_Tmp_267, in_Tmp_268, in_Tmp_269, in_Tmp_271, in_tmp, in_Tmp_273, in_Tmp_274, in_i_1, in_Tmp_275, in_Tmp_276, in_Tmp_278, in_Tmp_279, in_Tmp_280, in_Tmp_281, in_j, in_Tmp_284, in_Tmp_285, in_Tmp_286, in_Tmp_287, in_unitDirEntries, in_Tmp_289, in_Tmp_290, in_Tmp_293, in_sdv_59, in_Tmp_294, in_Tmp_295, in_Tmp_296, in_status_6, in_Tmp_301, in_offset, in_Tmp_302, in_unitDependentDirectory_1, in_Tmp_304, in_Tmp_305, in_Tmp_306, in_Tmp_307, in_Tmp_308, in_Tmp_309, in_Tmp_313, in_sdv_69, in_Tmp_314, in_Tmp_315, in_Tmp_316, in_modelIdCount, in_Tmp_317, in_dirInfoQuad, in_Tmp_318, in_devListSize, in_firstOne, in_Tmp_319, in_Tmp_320, in_Tmp_321, in_Tmp_322, in_Tmp_323, in_sbp2Device, in_Tmp_326, in_Tmp_327, in_Tmp_329, in_Tmp_330, in_Tmp_332, in_Tmp_337, in_Tmp_339, in_Tmp_342, in_Tmp_343, in_devInfo, in_Tmp_345, in_Tmp_346, in_retries, in_Tmp_349, in_Tmp_350, in_info, in_Tmp_352, in_Tmp_353, in_Tmp_354;
    goto L132, exit;

  exit:
    return;

  L132:
    goto anon308_Then;

  anon308_Then:
    assume {:partition} in_Sbp2Req == 0;
    goto anon309_Else;

  anon309_Else:
    assume {:partition} in_directoryLength > out_i_1;
    out_Tmp_346 := out_devListSize;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_259;
    out_devInfo := out_Tmp_259 + out_Tmp_346 * 268;
    out_Tmp_319 := in_unitDirectory_1;
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    goto L371;

  L371:
    out_i_1 := out_i_1 + 1;
    goto L371_dummy;

  L371_dummy:
    call {:si_unique_call 3903} {:si_old_unique_call 1} out_Tmp_237, out_Tmp_238, out_Tmp_239, out_Tmp_243, out_Tmp_244, out_Tmp_246, out_Tmp_247, out_Tmp_250, out_Tmp_251, out_Tmp_252, out_dependentLength, out_sdv_51, out_Tmp_253, out_Tmp_256, out_Tmp_258, out_Tmp_259, out_Tmp_260, out_Tmp_262, out_Tmp_263, out_Tmp_267, out_Tmp_268, out_Tmp_269, out_Tmp_271, out_tmp, out_Tmp_273, out_Tmp_274, out_i_1, out_Tmp_275, out_Tmp_276, out_Tmp_278, out_Tmp_279, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_Tmp_286, out_Tmp_287, out_unitDirEntries, out_Tmp_289, out_Tmp_290, out_Tmp_293, out_sdv_59, out_Tmp_294, out_Tmp_295, out_Tmp_296, out_status_6, out_Tmp_301, out_offset, out_Tmp_302, out_unitDependentDirectory_1, out_Tmp_304, out_Tmp_305, out_Tmp_306, out_Tmp_307, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_sdv_69, out_Tmp_314, out_Tmp_315, out_Tmp_316, out_modelIdCount, out_Tmp_317, out_dirInfoQuad, out_Tmp_318, out_devListSize, out_firstOne, out_Tmp_319, out_Tmp_320, out_Tmp_321, out_Tmp_322, out_Tmp_323, out_sbp2Device, out_Tmp_326, out_Tmp_327, out_Tmp_329, out_Tmp_330, out_Tmp_332, out_Tmp_337, out_Tmp_339, out_Tmp_342, out_Tmp_343, out_devInfo, out_Tmp_345, out_Tmp_346, out_retries, out_Tmp_349, out_Tmp_350, out_info, out_Tmp_352, out_Tmp_353, out_Tmp_354 := Sbp2Get1394ConfigInfo_loop_L132(out_Tmp_237, out_Tmp_238, out_Tmp_239, out_Tmp_243, out_Tmp_244, out_Tmp_246, out_Tmp_247, in_sdv_49, out_Tmp_250, out_Tmp_251, out_Tmp_252, out_dependentLength, out_sdv_51, out_Tmp_253, out_Tmp_256, out_Tmp_258, out_Tmp_259, out_Tmp_260, in_sdv_53, out_Tmp_262, out_Tmp_263, out_Tmp_267, in_sdv_55, out_Tmp_268, out_Tmp_269, out_Tmp_271, out_tmp, out_Tmp_273, out_Tmp_274, in_sdv_56, out_i_1, out_Tmp_275, in_genPacket, out_Tmp_276, out_Tmp_278, out_Tmp_279, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, in_sdv_57, out_Tmp_285, out_Tmp_286, out_Tmp_287, out_unitDirEntries, out_Tmp_289, out_Tmp_290, in_currentGeneration, out_Tmp_293, out_sdv_59, out_Tmp_294, out_Tmp_295, in_vendorLeaf_1, out_Tmp_296, in_sdv_60, out_status_6, in_sdv_61, out_Tmp_301, out_offset, in_modelLeaf_1, out_Tmp_302, out_unitDependentDirectory_1, in_sdv_64, in_sdv_65, out_Tmp_304, out_Tmp_305, in_sdv_67, out_Tmp_306, in_sdv_68, out_Tmp_307, in_cromOffset, out_Tmp_308, out_Tmp_309, out_Tmp_313, in_directoryLength, out_sdv_69, out_Tmp_314, out_Tmp_315, out_Tmp_316, out_modelIdCount, out_Tmp_317, out_dirInfoQuad, out_Tmp_318, out_devListSize, out_firstOne, out_Tmp_319, in_sdv_71, out_Tmp_320, out_Tmp_321, out_Tmp_322, in_sdv_72, out_Tmp_323, in_directoryLocation, out_sbp2Device, in_firstDevInfo, out_Tmp_326, out_Tmp_327, out_Tmp_329, in_sdv_76, in_ModelLeaf, out_Tmp_330, in_ModelLeaf_1, in_sdv_77, out_Tmp_332, out_Tmp_337, out_Tmp_339, out_Tmp_342, out_Tmp_343, out_devInfo, in_sdv_80, in_sdv_81, out_Tmp_345, out_Tmp_346, out_retries, in_dependentLocation, out_Tmp_349, in_unitDirectory_1, in_ModelLeaf_2, in_packet_1, out_Tmp_350, out_info, out_Tmp_352, out_Tmp_353, out_Tmp_354, in_FdoExtension_2, in_Sbp2Req);
    return;

  anon378_Then:
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} out_firstOne != 0;
    out_retries := 3;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    Mem_T.P_IRBIRP[in_genPacket] := 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    havoc out_offset;
    call {:si_unique_call 3896} out_sdv_59 := IoAllocateMdl(0, out_dependentLength, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_286;
    assume {:nonnull} out_Tmp_286 != 0;
    assume out_Tmp_286 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_353;
    assume {:nonnull} out_Tmp_353 != 0;
    assume out_Tmp_353 > 0;
    goto anon412_Then;

  anon412_Then:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_247;
    assume {:nonnull} out_Tmp_247 != 0;
    assume out_Tmp_247 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_250;
    assume {:nonnull} out_Tmp_250 != 0;
    assume out_Tmp_250 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_318;
    assume {:nonnull} out_Tmp_318 != 0;
    assume out_Tmp_318 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_273;
    assume {:nonnull} out_Tmp_273 != 0;
    assume out_Tmp_273 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_238;
    assume {:nonnull} out_Tmp_238 != 0;
    assume out_Tmp_238 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_320;
    assume {:nonnull} out_Tmp_320 != 0;
    assume out_Tmp_320 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_322;
    assume {:nonnull} out_Tmp_322 != 0;
    assume out_Tmp_322 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_237;
    assume {:nonnull} out_Tmp_237 != 0;
    assume out_Tmp_237 > 0;
    goto L214;

  L214:
    call {:si_unique_call 3890} out_Tmp_246, out_Tmp_252, out_Tmp_258, out_Tmp_268, out_Tmp_274, out_Tmp_289, out_status_6, out_Tmp_306, out_Tmp_323, out_Tmp_326, out_Tmp_342, out_retries := Sbp2Get1394ConfigInfo_loop_L214(out_Tmp_246, out_Tmp_252, out_Tmp_258, out_Tmp_268, out_Tmp_274, in_genPacket, out_Tmp_289, in_currentGeneration, out_status_6, out_Tmp_306, out_Tmp_323, out_Tmp_326, out_Tmp_342, out_retries, in_packet_1, in_FdoExtension_2);
    goto L214_last;

  L214_last:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_274;
    assume {:nonnull} out_Tmp_274 != 0;
    assume out_Tmp_274 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3891} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_packet_1], 2);
    goto anon413_Else;

  anon413_Else:
    assume {:partition} yogi_error != 1;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume {:partition} out_status_6 >= 0;
    goto L222;

  L222:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    call {:si_unique_call 3889} DeAllocateIrpAndIrb(in_FdoExtension_2, Mem_T.P_IRBIRP[in_genPacket]);
    goto L223;

  L223:
    goto anon325_Else;

  anon325_Else:
    assume {:partition} out_status_6 >= 0;
    call {:si_unique_call 3887} out_dirInfoQuad := corral_nondet();
    out_dependentLength := out_dirInfoQuad * 4;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3888} IoFreeMdl(0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_301;
    assume {:nonnull} out_Tmp_301 != 0;
    assume out_Tmp_301 > 0;
    goto anon414_Then;

  anon414_Then:
    assume {:partition} 256 >= out_dependentLength;
    call {:si_unique_call 3885} sdv_ExFreePool(0);
    out_Tmp_337 := out_dependentLength + 4;
    call {:si_unique_call 3886} out_sdv_51 := ExAllocatePoolWithTag(512, out_Tmp_337, -464166317);
    out_unitDependentDirectory_1 := out_sdv_51;
    goto anon416_Else;

  anon416_Else:
    assume {:partition} out_unitDependentDirectory_1 != 0;
    out_Tmp_256 := out_dependentLength + 4;
    call {:si_unique_call 3884} out_sdv_69 := IoAllocateMdl(0, out_Tmp_256, 0, 0, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_275;
    assume {:nonnull} out_Tmp_275 != 0;
    assume out_Tmp_275 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_251;
    assume {:nonnull} out_Tmp_251 != 0;
    assume out_Tmp_251 > 0;
    goto anon417_Else;

  anon417_Else:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    out_j := 1;
    goto L273;

  L273:
    call {:si_unique_call 3882} out_Tmp_253, out_Tmp_262, out_Tmp_263, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_unitDirEntries, out_Tmp_295, out_status_6, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_Tmp_314, out_modelIdCount, out_Tmp_317, out_devListSize, out_Tmp_329 := Sbp2Get1394ConfigInfo_loop_L273(out_dependentLength, out_Tmp_253, out_Tmp_262, out_Tmp_263, in_sdv_55, out_Tmp_280, out_Tmp_281, out_j, out_Tmp_284, out_Tmp_285, out_unitDirEntries, out_Tmp_295, in_vendorLeaf_1, out_status_6, in_sdv_61, out_offset, out_unitDependentDirectory_1, in_sdv_67, in_cromOffset, out_Tmp_308, out_Tmp_309, out_Tmp_313, out_Tmp_314, out_modelIdCount, out_Tmp_317, out_devListSize, in_firstDevInfo, out_Tmp_329, out_devInfo, in_sdv_80, in_ModelLeaf_2, in_packet_1, in_FdoExtension_2);
    goto L273_last;

  L273_last:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_262;
    assume {:nonnull} out_Tmp_262 != 0;
    assume out_Tmp_262 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_263;
    assume {:nonnull} out_Tmp_263 != 0;
    assume out_Tmp_263 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_281;
    assume {:nonnull} out_Tmp_281 != 0;
    assume out_Tmp_281 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_329;
    assume {:nonnull} out_Tmp_329 != 0;
    assume out_Tmp_329 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_314;
    assume {:nonnull} out_Tmp_314 != 0;
    assume out_Tmp_314 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3883} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_packet_1], 2);
    goto anon418_Else;

  anon418_Else:
    assume {:partition} yogi_error != 1;
    goto anon328_Then;

  anon328_Then:
    assume {:partition} 0 <= out_status_6;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_253;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} out_Tmp_253 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_313;
    assume {:nonnull} out_Tmp_313 != 0;
    assume out_Tmp_313 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc out_Tmp_295;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_284;
    call {:si_unique_call 3898} WPP_SF_q(out_Tmp_284, 47, out_Tmp_295, in_FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3897} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L311;

  L311:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    goto L316;

  L316:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto L318;

  L318:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L320;

  L320:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L322;

  L322:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L286;

  L286:
    out_Tmp_308 := out_unitDependentDirectory_1;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} out_Tmp_308 != 0;
    assume out_Tmp_308 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} out_Tmp_308 != 0;
    assume out_Tmp_308 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    goto L364;

  L364:
    out_j := out_j + 1;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} INTDIV(out_dependentLength, 4) < out_j;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3862} IoFreeMdl(0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_1] != 0;
    assume Mem_T.P_IRBIRP[in_packet_1] > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_244;
    assume {:nonnull} out_Tmp_244 != 0;
    assume out_Tmp_244 > 0;
    goto L371;

  anon424_Then:
    assume {:partition} out_j <= INTDIV(out_dependentLength, 4);
    assume false;
    return;

  anon386_Then:
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_280;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} out_Tmp_280 != 23;
    goto L364;

  anon425_Then:
    assume {:partition} out_Tmp_280 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3901} Sbp2ParseTextLeaf(in_FdoExtension_2, out_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_2);
    goto anon426_Else;

  anon426_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_309;
    assume {:nonnull} out_Tmp_309 != 0;
    assume out_Tmp_309 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc out_Tmp_285;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_317;
    call {:si_unique_call 3902} WPP_SF_q(out_Tmp_317, 48, out_Tmp_285, in_FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_4498;
    call {:si_unique_call 3899} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_4498, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 3900} sdv_ExFreePool(0);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto L344;

  L344:
    out_modelIdCount := out_modelIdCount + 1;
    goto L364;

  anon336_Then:
    goto L349;

  anon427_Then:
    goto L349;

  anon335_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L349;

  anon334_Then:
    goto L344;

  anon387_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon423_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon333_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L322;

  anon332_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L320;

  anon331_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L318;

  anon422_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L316;

  anon330_Then:
    goto L300;

  anon421_Then:
    goto L300;

  anon329_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon420_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L311;

  anon419_Then:
    assume {:partition} out_Tmp_253 != 20;
    goto L286;

  anon324_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] == 0;
    goto L223;

  anon322_Then:
    assume {:partition} 0 > out_status_6;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} out_retries > 1;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_252;
    assume {:nonnull} out_Tmp_252 != 0;
    assume out_Tmp_252 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc out_Tmp_289;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_326;
    call {:si_unique_call 3893} WPP_SF_qD(out_Tmp_326, 43, out_Tmp_289, in_FdoExtension_2, out_status_6);
    goto L401;

  L401:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] != 0;
    goto L412;

  L412:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_323;
    assume {:nonnull} out_Tmp_323 != 0;
    assume out_Tmp_323 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_268;
    assume {:nonnull} out_Tmp_268 != 0;
    assume out_Tmp_268 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    call {:si_unique_call 3895} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, Mem_T.P_IRBIRP[in_genPacket], 2);
    goto anon430_Else;

  anon430_Else:
    assume {:partition} yogi_error != 1;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} out_status_6 < 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_246;
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc out_Tmp_258;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_342;
    call {:si_unique_call 3894} WPP_SF_qD(out_Tmp_342, 44, out_Tmp_258, in_FdoExtension_2, out_status_6);
    goto L424;

  L424:
    assume {:nonnull} Mem_T.P_IRBIRP[in_genPacket] != 0;
    assume Mem_T.P_IRBIRP[in_genPacket] > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_306;
    assume {:nonnull} out_Tmp_306 != 0;
    assume out_Tmp_306 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    goto L413;

  L413:
    out_retries := out_retries - 1;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} out_retries == 0;
    goto L222;

  anon431_Then:
    assume {:partition} out_retries != 0;
    assume false;
    return;

  anon345_Then:
    goto L424;

  anon432_Then:
    goto L424;

  anon344_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L424;

  anon343_Then:
    assume {:partition} 0 <= out_status_6;
    goto L424;

  anon342_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] == 0;
    goto L413;

  anon340_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_genPacket] == 0;
    call {:si_unique_call 3892} AllocateIrpAndIrb(in_FdoExtension_2, in_genPacket);
    goto L412;

  anon341_Then:
    goto L401;

  anon429_Then:
    goto L401;

  anon339_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L401;

  anon323_Then:
    assume {:partition} 1 >= out_retries;
    goto L222;

  anon321_Then:
    assume {:partition} out_firstOne == 0;
    out_firstOne := 1;
    out_j := 0;
    goto L445;

  L445:
    call {:si_unique_call 3873} out_Tmp_239, out_Tmp_271, out_Tmp_278, out_Tmp_279, out_j, out_unitDirEntries, out_Tmp_290, out_Tmp_294, out_status_6, out_Tmp_302, out_Tmp_304, out_Tmp_305, out_modelIdCount, out_devListSize, out_Tmp_321, out_Tmp_330, out_Tmp_332 := Sbp2Get1394ConfigInfo_loop_L445(out_Tmp_239, in_sdv_49, out_dependentLength, out_Tmp_271, in_sdv_56, out_Tmp_278, out_Tmp_279, out_j, out_unitDirEntries, out_Tmp_290, out_Tmp_294, in_vendorLeaf_1, out_status_6, in_modelLeaf_1, out_Tmp_302, out_unitDependentDirectory_1, out_Tmp_304, out_Tmp_305, in_sdv_68, in_cromOffset, out_modelIdCount, out_devListSize, out_Tmp_321, in_firstDevInfo, out_Tmp_330, in_ModelLeaf_1, in_sdv_77, out_Tmp_332, out_devInfo, in_dependentLocation, in_FdoExtension_2);
    goto L445_last;

  L445_last:
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:partition} out_dependentLength > out_j;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_278;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} out_Tmp_278 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L459;

  L459:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_321;
    assume {:nonnull} out_Tmp_321 != 0;
    assume out_Tmp_321 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc out_Tmp_302;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_279;
    call {:si_unique_call 3877} WPP_SF_q(out_Tmp_279, 40, out_Tmp_302, in_FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3874} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L476;

  L476:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    goto L480;

  L480:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    goto L482;

  L482:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L484;

  L484:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L486;

  L486:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L448;

  L448:
    out_Tmp_294 := out_unitDependentDirectory_1;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} out_Tmp_294 != 0;
    assume out_Tmp_294 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} out_Tmp_294 != 0;
    assume out_Tmp_294 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    goto L542;

  L542:
    out_j := out_j + 1;
    assume false;
    return;

  anon388_Then:
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_271;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} out_Tmp_271 != 23;
    goto L542;

  anon439_Then:
    assume {:partition} out_Tmp_271 == 23;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3879} Sbp2ParseTextLeaf(in_FdoExtension_2, out_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_1);
    goto anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_4497;
    call {:si_unique_call 3880} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_4497, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 3881} sdv_ExFreePool(0);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_290;
    assume {:nonnull} out_Tmp_290 != 0;
    assume out_Tmp_290 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc out_Tmp_330;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_305;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_4496;
    call {:si_unique_call 3878} WPP_SF_S(out_Tmp_305, 41, out_Tmp_330, vslice_dummy_var_4496);
    goto L512;

  L512:
    out_modelIdCount := out_modelIdCount + 1;
    goto L542;

  anon361_Then:
    goto L512;

  anon441_Then:
    goto L512;

  anon360_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L512;

  anon359_Then:
    goto L512;

  anon358_Then:
    goto L512;

  anon389_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon438_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon355_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L486;

  anon354_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L484;

  anon353_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L482;

  anon437_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L480;

  anon352_Then:
    goto L465;

  anon436_Then:
    goto L465;

  anon351_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L465;

  anon350_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L476;

  anon435_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_304;
    assume {:nonnull} out_Tmp_304 != 0;
    assume out_Tmp_304 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc out_Tmp_239;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_332;
    call {:si_unique_call 3876} WPP_SF_q(out_Tmp_332, 39, out_Tmp_239, in_FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3875} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L459;

  anon357_Then:
    goto L493;

  anon442_Then:
    goto L493;

  anon356_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L493;

  anon349_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L459;

  anon434_Then:
    assume {:partition} out_Tmp_278 != 20;
    goto L448;

  anon348_Then:
    assume {:partition} out_j >= out_dependentLength;
    goto L371;

  anon379_Then:
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    havoc out_Tmp_293;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:partition} out_Tmp_293 == 23;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:partition} out_devListSize >= out_modelIdCount;
    out_Tmp_267 := out_modelIdCount;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_316;
    out_info := out_Tmp_316 + out_Tmp_267 * 268;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3870} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDirectory_1, in_cromOffset, in_ModelLeaf);
    goto anon410_Else;

  anon410_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    havoc vslice_dummy_var_4495;
    call {:si_unique_call 3871} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_4495, uniModelId__DEVICE_INFORMATION(out_info));
    call {:si_unique_call 3872} sdv_ExFreePool(0);
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_296;
    assume {:nonnull} out_Tmp_296 != 0;
    assume out_Tmp_296 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    havoc out_Tmp_260;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_269;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    havoc vslice_dummy_var_4494;
    call {:si_unique_call 3869} WPP_SF_S(out_Tmp_269, 38, out_Tmp_260, vslice_dummy_var_4494);
    goto L562;

  L562:
    out_modelIdCount := out_modelIdCount + 1;
    goto L371;

  anon365_Then:
    goto L562;

  anon411_Then:
    goto L562;

  anon364_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L562;

  anon363_Then:
    goto L562;

  anon409_Then:
    goto L562;

  anon362_Then:
    assume {:partition} out_modelIdCount > out_devListSize;
    goto L371;

  anon408_Then:
    assume {:partition} out_Tmp_293 != 23;
    goto L371;

  anon380_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_sbp2Device := 1;
    goto L371;

  anon381_Then:
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} in_sdv_64 != 0;
    out_Tmp_345 := 1;
    goto L605;

  L605:
    out_tmp := out_Tmp_345;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:partition} out_tmp != 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L371;

  anon407_Then:
    assume {:partition} out_tmp == 0;
    goto L371;

  anon366_Then:
    assume {:partition} in_sdv_64 == 0;
    out_Tmp_345 := 0;
    goto L605;

  anon382_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_315;
    assume {:nonnull} out_Tmp_315 != 0;
    assume out_Tmp_315 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    havoc out_Tmp_343;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_243;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc vslice_dummy_var_4493;
    call {:si_unique_call 3863} WPP_SF_qD(out_Tmp_243, 35, out_Tmp_343, in_FdoExtension_2, vslice_dummy_var_4493);
    goto L371;

  anon367_Then:
    goto L371;

  anon406_Then:
    goto L371;

  anon405_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L371;

  anon383_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc out_Tmp_354;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:partition} 8 > out_Tmp_354;
    out_Tmp_287 := 8;
    goto L633;

  L633:
    out_tmp := out_Tmp_287;
    out_tmp := out_tmp * 4;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} 16 > out_tmp - 20;
    out_Tmp_352 := out_tmp - 20;
    goto L638;

  L638:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    call {:si_unique_call 3864} out_tmp := corral_nondet();
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon404_Then:
    assume {:partition} out_tmp - 20 >= 16;
    out_Tmp_352 := 16;
    goto L638;

  anon403_Then:
    assume {:partition} out_Tmp_354 >= 8;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc out_Tmp_287;
    goto L633;

  anon384_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon385_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon399_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:partition} out_devListSize != 0;
    goto L661;

  L661:
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_349;
    assume {:nonnull} out_Tmp_349 != 0;
    assume out_Tmp_349 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    havoc out_Tmp_327;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_307;
    call {:si_unique_call 3868} WPP_SF_q(out_Tmp_307, 37, out_Tmp_327, in_FdoExtension_2);
    goto L667;

  L667:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3865} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L678;

  L678:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon371_Then:
    goto L667;

  anon401_Then:
    goto L667;

  anon370_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L667;

  anon369_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L678;

  anon400_Then:
    assume {:partition} out_devListSize == 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_276;
    assume {:nonnull} out_Tmp_276 != 0;
    assume out_Tmp_276 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    havoc out_Tmp_350;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_339;
    call {:si_unique_call 3867} WPP_SF_q(out_Tmp_339, 36, out_Tmp_350, in_FdoExtension_2);
    goto L693;

  L693:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3866} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L661;

  anon373_Then:
    goto L693;

  anon402_Then:
    goto L693;

  anon372_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L693;

  anon368_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L661;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L132(in_Tmp_237: int, in_Tmp_238: int, in_Tmp_239: int, in_Tmp_243: int, in_Tmp_244: int, in_Tmp_246: int, in_Tmp_247: int, in_sdv_49: int, in_Tmp_250: int, in_Tmp_251: int, in_Tmp_252: int, in_dependentLength: int, in_sdv_51: int, in_Tmp_253: int, in_Tmp_256: int, in_Tmp_258: int, in_Tmp_259: int, in_Tmp_260: int, in_sdv_53: int, in_Tmp_262: int, in_Tmp_263: int, in_Tmp_267: int, in_sdv_55: int, in_Tmp_268: int, in_Tmp_269: int, in_Tmp_271: int, in_tmp: int, in_Tmp_273: int, in_Tmp_274: int, in_sdv_56: int, in_i_1: int, in_Tmp_275: int, in_genPacket: int, in_Tmp_276: int, in_Tmp_278: int, in_Tmp_279: int, in_Tmp_280: int, in_Tmp_281: int, in_j: int, in_Tmp_284: int, in_sdv_57: int, in_Tmp_285: int, in_Tmp_286: int, in_Tmp_287: int, in_unitDirEntries: int, in_Tmp_289: int, in_Tmp_290: int, in_currentGeneration: int, in_Tmp_293: int, in_sdv_59: int, in_Tmp_294: int, in_Tmp_295: int, in_vendorLeaf_1: int, in_Tmp_296: int, in_sdv_60: int, in_status_6: int, in_sdv_61: int, in_Tmp_301: int, in_offset: int, in_modelLeaf_1: int, in_Tmp_302: int, in_unitDependentDirectory_1: int, in_sdv_64: int, in_sdv_65: int, in_Tmp_304: int, in_Tmp_305: int, in_sdv_67: int, in_Tmp_306: int, in_sdv_68: int, in_Tmp_307: int, in_cromOffset: int, in_Tmp_308: int, in_Tmp_309: int, in_Tmp_313: int, in_directoryLength: int, in_sdv_69: int, in_Tmp_314: int, in_Tmp_315: int, in_Tmp_316: int, in_modelIdCount: int, in_Tmp_317: int, in_dirInfoQuad: int, in_Tmp_318: int, in_devListSize: int, in_firstOne: int, in_Tmp_319: int, in_sdv_71: int, in_Tmp_320: int, in_Tmp_321: int, in_Tmp_322: int, in_sdv_72: int, in_Tmp_323: int, in_directoryLocation: int, in_sbp2Device: int, in_firstDevInfo: int, in_Tmp_326: int, in_Tmp_327: int, in_Tmp_329: int, in_sdv_76: int, in_ModelLeaf: int, in_Tmp_330: int, in_ModelLeaf_1: int, in_sdv_77: int, in_Tmp_332: int, in_Tmp_337: int, in_Tmp_339: int, in_Tmp_342: int, in_Tmp_343: int, in_devInfo: int, in_sdv_80: int, in_sdv_81: int, in_Tmp_345: int, in_Tmp_346: int, in_retries: int, in_dependentLocation: int, in_Tmp_349: int, in_unitDirectory_1: int, in_ModelLeaf_2: int, in_packet_1: int, in_Tmp_350: int, in_info: int, in_Tmp_352: int, in_Tmp_353: int, in_Tmp_354: int, in_FdoExtension_2: int, in_Sbp2Req: int) returns (out_Tmp_237: int, out_Tmp_238: int, out_Tmp_239: int, out_Tmp_243: int, out_Tmp_244: int, out_Tmp_246: int, out_Tmp_247: int, out_Tmp_250: int, out_Tmp_251: int, out_Tmp_252: int, out_dependentLength: int, out_sdv_51: int, out_Tmp_253: int, out_Tmp_256: int, out_Tmp_258: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_262: int, out_Tmp_263: int, out_Tmp_267: int, out_Tmp_268: int, out_Tmp_269: int, out_Tmp_271: int, out_tmp: int, out_Tmp_273: int, out_Tmp_274: int, out_i_1: int, out_Tmp_275: int, out_Tmp_276: int, out_Tmp_278: int, out_Tmp_279: int, out_Tmp_280: int, out_Tmp_281: int, out_j: int, out_Tmp_284: int, out_Tmp_285: int, out_Tmp_286: int, out_Tmp_287: int, out_unitDirEntries: int, out_Tmp_289: int, out_Tmp_290: int, out_Tmp_293: int, out_sdv_59: int, out_Tmp_294: int, out_Tmp_295: int, out_Tmp_296: int, out_status_6: int, out_Tmp_301: int, out_offset: int, out_Tmp_302: int, out_unitDependentDirectory_1: int, out_Tmp_304: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_307: int, out_Tmp_308: int, out_Tmp_309: int, out_Tmp_313: int, out_sdv_69: int, out_Tmp_314: int, out_Tmp_315: int, out_Tmp_316: int, out_modelIdCount: int, out_Tmp_317: int, out_dirInfoQuad: int, out_Tmp_318: int, out_devListSize: int, out_firstOne: int, out_Tmp_319: int, out_Tmp_320: int, out_Tmp_321: int, out_Tmp_322: int, out_Tmp_323: int, out_sbp2Device: int, out_Tmp_326: int, out_Tmp_327: int, out_Tmp_329: int, out_Tmp_330: int, out_Tmp_332: int, out_Tmp_337: int, out_Tmp_339: int, out_Tmp_342: int, out_Tmp_343: int, out_devInfo: int, out_Tmp_345: int, out_Tmp_346: int, out_retries: int, out_Tmp_349: int, out_Tmp_350: int, out_info: int, out_Tmp_352: int, out_Tmp_353: int, out_Tmp_354: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_firstOne == 1 || out_firstOne == in_firstOne;
  free ensures {:va_keep} out_Tmp_319 == in_Tmp_319 || out_Tmp_319 == in_unitDirectory_1;
  free ensures {:va_keep} out_sbp2Device == 1 || out_sbp2Device == in_sbp2Device;
  free ensures {:va_keep} out_Tmp_345 == 1 || out_Tmp_345 == 0 || out_Tmp_345 == in_Tmp_345;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Get1394ConfigInfo_loop_L71(in_Tmp_241: int, in_i_1: int, in_directoryLength: int, in_Tmp_347: int, in_unitDirectory_1: int, in_Sbp2Req: int) returns (out_Tmp_241: int, out_i_1: int, out_Tmp_347: int)
{

  entry:
    out_Tmp_241, out_i_1, out_Tmp_347 := in_Tmp_241, in_i_1, in_Tmp_347;
    goto L71, exit;

  exit:
    return;

  L71:
    goto anon299_Else;

  anon299_Else:
    assume {:partition} in_Sbp2Req != 0;
    goto anon300_Else;

  anon300_Else:
    assume {:partition} in_directoryLength > out_i_1;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    havoc out_Tmp_347;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:partition} out_Tmp_347 == 129;
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    havoc out_Tmp_241;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon393_Then;

  anon393_Then:
    goto L75;

  L75:
    out_i_1 := out_i_1 + 1;
    goto L75_dummy;

  L75_dummy:
    havoc out_i_1;
    return;

  anon392_Then:
    assume {:partition} out_Tmp_347 != 129;
    goto L75;

  anon301_Then:
    goto L75;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L71(in_Tmp_241: int, in_i_1: int, in_directoryLength: int, in_Tmp_347: int, in_unitDirectory_1: int, in_Sbp2Req: int) returns (out_Tmp_241: int, out_i_1: int, out_Tmp_347: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Get1394ConfigInfo_loop_L705(in_Tmp_270: int, in_i_1: int, in_Tmp_298: int, in_Tmp_324: int, in_devInfo: int, in_buffer: int, in_FdoExtension_2: int) returns (out_Tmp_270: int, out_i_1: int, out_Tmp_298: int, out_Tmp_324: int, out_devInfo: int, out_buffer: int)
{

  entry:
    out_Tmp_270, out_i_1, out_Tmp_298, out_Tmp_324, out_devInfo, out_buffer := in_Tmp_270, in_i_1, in_Tmp_298, in_Tmp_324, in_devInfo, in_buffer;
    goto L705, exit;

  exit:
    return;

  L705:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    goto anon374_Else;

  anon374_Else:
    out_Tmp_270 := out_i_1;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_298;
    out_devInfo := out_Tmp_298 + out_Tmp_270 * 268;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_Tmp_324 := uniModelId__DEVICE_INFORMATION(out_devInfo);
    assume {:nonnull} out_Tmp_324 != 0;
    assume out_Tmp_324 > 0;
    call {:si_unique_call 3905} out_buffer := _InlineInterlockedExchangePointer(Buffer__STRING(out_Tmp_324), 0);
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:partition} out_buffer != 0;
    call {:si_unique_call 3904} sdv_ExFreePool(0);
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L715;

  L715:
    out_i_1 := out_i_1 + 1;
    goto L715_dummy;

  L715_dummy:
    call {:si_unique_call 3906} {:si_old_unique_call 1} out_Tmp_270, out_i_1, out_Tmp_298, out_Tmp_324, out_devInfo, out_buffer := Sbp2Get1394ConfigInfo_loop_L705(out_Tmp_270, out_i_1, out_Tmp_298, out_Tmp_324, out_devInfo, out_buffer, in_FdoExtension_2);
    return;

  anon375_Then:
    assume {:partition} out_buffer == 0;
    goto L715;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L705(in_Tmp_270: int, in_i_1: int, in_Tmp_298: int, in_Tmp_324: int, in_devInfo: int, in_buffer: int, in_FdoExtension_2: int) returns (out_Tmp_270: int, out_i_1: int, out_Tmp_298: int, out_Tmp_324: int, out_devInfo: int, out_buffer: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2ParseTextLeaf_loop_L136(in_i_2: int, in_Tmp_509: int, in_Tmp_511: int, in_Tmp_514: int, in_pdoExtension_4: int, in_leafLength: int, in_Tmp_540: int, in_Tmp_542: int, in_status_11: int, in_packet_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_509: int, out_Tmp_511: int, out_Tmp_514: int, out_Tmp_540: int, out_Tmp_542: int, out_status_11: int)
{

  entry:
    out_i_2, out_Tmp_509, out_Tmp_511, out_Tmp_514, out_Tmp_540, out_Tmp_542, out_status_11 := in_i_2, in_Tmp_509, in_Tmp_511, in_Tmp_514, in_Tmp_540, in_Tmp_542, in_status_11;
    goto L136, exit;

  exit:
    return;

  L136:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_511;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_511 != 0;
    assume out_Tmp_511 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_509;
    assume {:nonnull} out_Tmp_509 != 0;
    assume out_Tmp_509 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_540;
    assume {:nonnull} out_Tmp_540 != 0;
    assume out_Tmp_540 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_514;
    assume {:nonnull} out_Tmp_514 != 0;
    assume out_Tmp_514 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_542;
    assume {:nonnull} out_Tmp_542 != 0;
    assume out_Tmp_542 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    call {:si_unique_call 3907} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, Mem_T.P_IRBIRP[in_packet_2], 2);
    goto anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto anon59_Then;

  anon59_Then:
    assume {:partition} 0 <= out_status_11;
    out_i_2 := out_i_2 + 1;
    goto anon69_Then;

  anon69_Then:
    assume {:partition} out_i_2 <= INTDIV(in_leafLength, 4);
    goto anon69_Then_dummy;

  anon69_Then_dummy:
    call {:si_unique_call 3908} {:si_old_unique_call 1} out_i_2, out_Tmp_509, out_Tmp_511, out_Tmp_514, out_Tmp_540, out_Tmp_542, out_status_11 := Sbp2ParseTextLeaf_loop_L136(out_i_2, out_Tmp_509, out_Tmp_511, out_Tmp_514, in_pdoExtension_4, in_leafLength, out_Tmp_540, out_Tmp_542, out_status_11, in_packet_2, in_ModelLeafLocation);
    return;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L136(in_i_2: int, in_Tmp_509: int, in_Tmp_511: int, in_Tmp_514: int, in_pdoExtension_4: int, in_leafLength: int, in_Tmp_540: int, in_Tmp_542: int, in_status_11: int, in_packet_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_509: int, out_Tmp_511: int, out_Tmp_514: int, out_Tmp_540: int, out_Tmp_542: int, out_status_11: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2ParseTextLeaf_loop_L44(in_Tmp_510: int, in_waitValue_1: int, in_pdoExtension_4: int, in_Tmp_515: int, in_Tmp_519: int, in_Tmp_524: int, in_Tmp_525: int, in_Tmp_528: int, in_Tmp_531: int, in_Tmp_532: int, in_currentGeneration_1: int, in_retries_1: int, in_Tmp_534: int, in_Tmp_536: int, in_tModelLeafMdl: int, in_Tmp_537: int, in_Tmp_538: int, in_Tmp_539: int, in_Tmp_545: int, in_status_11: int, in_packet_2: int, in_Tmp_546: int, in_event: int, in_Tmp_550: int, in_ModelLeafLocation: int, in_vslice_dummy_var_12: int) returns (out_Tmp_510: int, out_Tmp_515: int, out_Tmp_519: int, out_Tmp_524: int, out_Tmp_525: int, out_Tmp_528: int, out_Tmp_531: int, out_Tmp_532: int, out_currentGeneration_1: int, out_retries_1: int, out_Tmp_534: int, out_Tmp_536: int, out_Tmp_537: int, out_Tmp_538: int, out_Tmp_539: int, out_Tmp_545: int, out_status_11: int, out_Tmp_546: int, out_Tmp_550: int, out_vslice_dummy_var_12: int)
{

  entry:
    out_Tmp_510, out_Tmp_515, out_Tmp_519, out_Tmp_524, out_Tmp_525, out_Tmp_528, out_Tmp_531, out_Tmp_532, out_currentGeneration_1, out_retries_1, out_Tmp_534, out_Tmp_536, out_Tmp_537, out_Tmp_538, out_Tmp_539, out_Tmp_545, out_status_11, out_Tmp_546, out_Tmp_550, out_vslice_dummy_var_12 := in_Tmp_510, in_Tmp_515, in_Tmp_519, in_Tmp_524, in_Tmp_525, in_Tmp_528, in_Tmp_531, in_Tmp_532, in_currentGeneration_1, in_retries_1, in_Tmp_534, in_Tmp_536, in_Tmp_537, in_Tmp_538, in_Tmp_539, in_Tmp_545, in_status_11, in_Tmp_546, in_Tmp_550, in_vslice_dummy_var_12;
    goto L44, exit;

  exit:
    return;

  L44:
    assume {:CounterLoop 3} {:Counter "retries_1"} true;
    goto anon52_Else;

  anon52_Else:
    assume {:partition} out_retries_1 != 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_536;
    assume {:nonnull} out_Tmp_536 != 0;
    assume out_Tmp_536 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_537;
    assume {:nonnull} out_Tmp_537 != 0;
    assume out_Tmp_537 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    call {:si_unique_call 3913} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, Mem_T.P_IRBIRP[in_packet_2], 2);
    goto anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} out_status_11 < 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_538;
    assume {:nonnull} out_Tmp_538 != 0;
    assume out_Tmp_538 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc out_Tmp_519;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_528;
    call {:si_unique_call 3912} WPP_SF_qD(out_Tmp_528, 58, out_Tmp_519, in_pdoExtension_4, out_status_11);
    goto L56;

  L56:
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_534;
    assume {:nonnull} out_Tmp_534 != 0;
    assume out_Tmp_534 > 0;
    havoc out_currentGeneration_1;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_515;
    assume {:nonnull} out_Tmp_515 != 0;
    assume out_Tmp_515 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_532;
    assume {:nonnull} out_Tmp_532 != 0;
    assume out_Tmp_532 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_539;
    assume {:nonnull} out_Tmp_539 != 0;
    assume out_Tmp_539 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_531;
    assume {:nonnull} out_Tmp_531 != 0;
    assume out_Tmp_531 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_550;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_550 != 0;
    assume out_Tmp_550 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_545;
    assume {:nonnull} out_Tmp_545 != 0;
    assume out_Tmp_545 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_510;
    assume {:nonnull} out_Tmp_510 != 0;
    assume out_Tmp_510 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_525;
    assume {:nonnull} out_Tmp_525 != 0;
    assume out_Tmp_525 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_524;
    assume {:nonnull} out_Tmp_524 != 0;
    assume out_Tmp_524 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_2] != 0;
    assume Mem_T.P_IRBIRP[in_packet_2] > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_546;
    assume {:nonnull} out_Tmp_546 != 0;
    assume out_Tmp_546 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    call {:si_unique_call 3911} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, Mem_T.P_IRBIRP[in_packet_2], 2);
    goto anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon55_Else;

  anon55_Else:
    assume {:partition} out_status_11 < 0;
    call {:si_unique_call 3909} KeInitializeEvent(in_event, 0, 0);
    assume {:nonnull} in_waitValue_1 != 0;
    assume in_waitValue_1 > 0;
    call {:si_unique_call 3910} out_vslice_dummy_var_12 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_1);
    out_retries_1 := out_retries_1 - 1;
    goto anon55_Else_dummy;

  anon55_Else_dummy:
    call {:si_unique_call 3914} {:si_old_unique_call 1} out_Tmp_510, out_Tmp_515, out_Tmp_519, out_Tmp_524, out_Tmp_525, out_Tmp_528, out_Tmp_531, out_Tmp_532, out_currentGeneration_1, out_retries_1, out_Tmp_534, out_Tmp_536, out_Tmp_537, out_Tmp_538, out_Tmp_539, out_Tmp_545, out_status_11, out_Tmp_546, out_Tmp_550, out_vslice_dummy_var_12 := Sbp2ParseTextLeaf_loop_L44(out_Tmp_510, in_waitValue_1, in_pdoExtension_4, out_Tmp_515, out_Tmp_519, out_Tmp_524, out_Tmp_525, out_Tmp_528, out_Tmp_531, out_Tmp_532, out_currentGeneration_1, out_retries_1, out_Tmp_534, out_Tmp_536, in_tModelLeafMdl, out_Tmp_537, out_Tmp_538, out_Tmp_539, out_Tmp_545, out_status_11, in_packet_2, out_Tmp_546, in_event, out_Tmp_550, in_ModelLeafLocation, out_vslice_dummy_var_12);
    return;

  anon57_Then:
    goto L56;

  anon72_Then:
    goto L56;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon54_Then:
    assume {:partition} 0 <= out_status_11;
    goto L56;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L44(in_Tmp_510: int, in_waitValue_1: int, in_pdoExtension_4: int, in_Tmp_515: int, in_Tmp_519: int, in_Tmp_524: int, in_Tmp_525: int, in_Tmp_528: int, in_Tmp_531: int, in_Tmp_532: int, in_currentGeneration_1: int, in_retries_1: int, in_Tmp_534: int, in_Tmp_536: int, in_tModelLeafMdl: int, in_Tmp_537: int, in_Tmp_538: int, in_Tmp_539: int, in_Tmp_545: int, in_status_11: int, in_packet_2: int, in_Tmp_546: int, in_event: int, in_Tmp_550: int, in_ModelLeafLocation: int, in_vslice_dummy_var_12: int) returns (out_Tmp_510: int, out_Tmp_515: int, out_Tmp_519: int, out_Tmp_524: int, out_Tmp_525: int, out_Tmp_528: int, out_Tmp_531: int, out_Tmp_532: int, out_currentGeneration_1: int, out_retries_1: int, out_Tmp_534: int, out_Tmp_536: int, out_Tmp_537: int, out_Tmp_538: int, out_Tmp_539: int, out_Tmp_545: int, out_status_11: int, out_Tmp_546: int, out_Tmp_550: int, out_vslice_dummy_var_12: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_vslice_dummy_var_12 == 258 || out_vslice_dummy_var_12 == 0 || out_vslice_dummy_var_12 == in_vslice_dummy_var_12;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(in_nextEntry: int, in_queueEntry: int, in_sdv_419: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_419: int)
{

  entry:
    out_nextEntry, out_queueEntry, out_sdv_419 := in_nextEntry, in_queueEntry, in_sdv_419;
    goto L22, exit;

  exit:
    return;

  L22:
    goto anon13_Else;

  anon13_Else:
    call {:si_unique_call 3915} out_sdv_419 := sdv_containing_record(out_nextEntry, 0);
    out_queueEntry := out_sdv_419;
    assume {:nonnull} out_queueEntry != 0;
    assume out_queueEntry > 0;
    goto anon15_Else;

  anon15_Else:
    assume {:nonnull} out_nextEntry != 0;
    assume out_nextEntry > 0;
    havoc out_nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    havoc out_nextEntry;
    return;
}



procedure {:LoopProcedure} Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(in_nextEntry: int, in_queueEntry: int, in_sdv_419: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_419: int);
  free ensures {:va_keep} out_nextEntry == in_nextEntry;
  free ensures {:va_keep} out_queueEntry == in_queueEntry;
  free ensures {:va_keep} out_sdv_419 == in_sdv_419;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation AcquireOrbListLock_loop_L12(in_currThread_1: int, in_prevOwner: int, in_sdv_436: int, in_sdv_437: int, in_DeviceExtension_3: int, in_fFromDpcLevel_1: int) returns (out_prevOwner: int, out_sdv_436: int, out_sdv_437: int)
{
  var vslice_dummy_var_4499: int;

  entry:
    out_prevOwner, out_sdv_436, out_sdv_437 := in_prevOwner, in_sdv_436, in_sdv_437;
    goto L12, exit;

  exit:
    return;

  L12:
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    call {:si_unique_call 3916} out_sdv_436 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(in_DeviceExtension_3), in_currThread_1, 0);
    out_prevOwner := out_sdv_436;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} out_prevOwner == in_currThread_1;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    havoc vslice_dummy_var_4499;
    call {:si_unique_call 3917} Sbp2AddLog(in_DeviceExtension_3, 256, 544301889, in_currThread_1, vslice_dummy_var_4499);
    goto L22;

  L22:
    goto anon14_Then;

  anon14_Then:
    assume {:partition} out_prevOwner != in_currThread_1;
    goto anon14_Then_dummy;

  anon14_Then_dummy:
    call {:si_unique_call 3923} {:si_old_unique_call 1} out_prevOwner, out_sdv_436, out_sdv_437 := AcquireOrbListLock_loop_L12(in_currThread_1, out_prevOwner, out_sdv_436, out_sdv_437, in_DeviceExtension_3, in_fFromDpcLevel_1);
    return;

  anon17_Then:
    assume {:partition} out_prevOwner != in_currThread_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} in_fFromDpcLevel_1 != 0;
    call {:si_unique_call 3920} KeAcquireInStackQueuedSpinLockAtDpcLevel(0, 0);
    goto L32;

  L32:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} out_prevOwner != 0;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    call {:si_unique_call 3922} out_sdv_437 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(in_DeviceExtension_3), in_currThread_1, 0);
    out_prevOwner := out_sdv_437;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} out_prevOwner != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} in_fFromDpcLevel_1 != 0;
    call {:si_unique_call 3918} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L22;

  anon16_Then:
    assume {:partition} in_fFromDpcLevel_1 == 0;
    call {:si_unique_call 3919} KeReleaseInStackQueuedSpinLock(0);
    goto L22;

  anon18_Then:
    assume {:partition} out_prevOwner == 0;
    goto L22;

  anon15_Then:
    assume {:partition} out_prevOwner == 0;
    goto L22;

  anon13_Then:
    assume {:partition} in_fFromDpcLevel_1 == 0;
    call {:si_unique_call 3921} KeAcquireInStackQueuedSpinLock(0, 0);
    goto L32;
}



procedure {:LoopProcedure} AcquireOrbListLock_loop_L12(in_currThread_1: int, in_prevOwner: int, in_sdv_436: int, in_sdv_437: int, in_DeviceExtension_3: int, in_fFromDpcLevel_1: int) returns (out_prevOwner: int, out_sdv_436: int, out_sdv_437: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2InsertByKeyDeviceQueue_loop_L31(in_nextEntry_1: int, in_queueEntry2: int, in_sdv_476: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_queueEntry2: int, out_sdv_476: int)
{

  entry:
    out_nextEntry_1, out_queueEntry2, out_sdv_476 := in_nextEntry_1, in_queueEntry2, in_sdv_476;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon7_Else;

  anon7_Else:
    call {:si_unique_call 3924} out_sdv_476 := sdv_containing_record(out_nextEntry_1, 0);
    out_queueEntry2 := out_sdv_476;
    assume {:nonnull} out_queueEntry2 != 0;
    assume out_queueEntry2 > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:nonnull} out_nextEntry_1 != 0;
    assume out_nextEntry_1 > 0;
    havoc out_nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    havoc out_nextEntry_1;
    return;
}



procedure {:LoopProcedure} Sbp2InsertByKeyDeviceQueue_loop_L31(in_nextEntry_1: int, in_queueEntry2: int, in_sdv_476: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_queueEntry2: int, out_sdv_476: int);
  free ensures {:va_keep} out_nextEntry_1 == in_nextEntry_1;
  free ensures {:va_keep} out_queueEntry2 == in_queueEntry2;
  free ensures {:va_keep} out_sdv_476 == in_sdv_476;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2InitializeOrb_loop_L46(in_i_4: int, in_Tmp_1731: int, in_Tmp_1742: int, in_Tmp_1744: int, in_sdv_546: int, in_sdv_547: int, in_Tmp_1763: int, in_CallbackContext_1: int) returns (out_i_4: int, out_Tmp_1731: int, out_Tmp_1742: int, out_Tmp_1744: int, out_Tmp_1763: int)
{

  entry:
    out_i_4, out_Tmp_1731, out_Tmp_1742, out_Tmp_1744, out_Tmp_1763 := in_i_4, in_Tmp_1731, in_Tmp_1742, in_Tmp_1744, in_Tmp_1763;
    goto L46, exit;

  exit:
    return;

  L46:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    goto anon21_Else;

  anon21_Else:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_1731 := out_i_4;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_1763;
    assume {:nonnull} out_Tmp_1763 != 0;
    assume out_Tmp_1763 > 0;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_1742 := out_i_4;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_1744;
    assume {:nonnull} out_Tmp_1744 != 0;
    assume out_Tmp_1744 > 0;
    out_i_4 := out_i_4 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 3925} {:si_old_unique_call 1} out_i_4, out_Tmp_1731, out_Tmp_1742, out_Tmp_1744, out_Tmp_1763 := Sbp2InitializeOrb_loop_L46(out_i_4, out_Tmp_1731, out_Tmp_1742, out_Tmp_1744, in_sdv_546, in_sdv_547, out_Tmp_1763, in_CallbackContext_1);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeOrb_loop_L46(in_i_4: int, in_Tmp_1731: int, in_Tmp_1742: int, in_Tmp_1744: int, in_sdv_546: int, in_sdv_547: int, in_Tmp_1763: int, in_CallbackContext_1: int) returns (out_i_4: int, out_Tmp_1731: int, out_Tmp_1742: int, out_Tmp_1744: int, out_Tmp_1763: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2IssueInternalCommand_loop_L221(in_waitValue_3: int, in_event_1: int, in_i_5: int, in_DeviceExtension_10: int, in_vslice_dummy_var_132: int) returns (out_i_5: int, out_vslice_dummy_var_132: int)
{

  entry:
    out_i_5, out_vslice_dummy_var_132 := in_i_5, in_vslice_dummy_var_132;
    goto L221, exit;

  exit:
    return;

  L221:
    assume {:CounterLoop 6} {:Counter "i_5"} true;
    goto anon137_Else;

  anon137_Else:
    assume {:partition} 6 > out_i_5;
    call {:si_unique_call 3926} KeInitializeEvent(in_event_1, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 3927} out_vslice_dummy_var_132 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon138_Else;

  anon138_Else:
    out_i_5 := out_i_5 + 1;
    goto anon138_Else_dummy;

  anon138_Else_dummy:
    call {:si_unique_call 3928} {:si_old_unique_call 1} out_i_5, out_vslice_dummy_var_132 := Sbp2IssueInternalCommand_loop_L221(in_waitValue_3, in_event_1, out_i_5, in_DeviceExtension_10, out_vslice_dummy_var_132);
    return;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L221(in_waitValue_3: int, in_event_1: int, in_i_5: int, in_DeviceExtension_10: int, in_vslice_dummy_var_132: int) returns (out_i_5: int, out_vslice_dummy_var_132: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_132 == 258 || out_vslice_dummy_var_132 == 0 || out_vslice_dummy_var_132 == in_vslice_dummy_var_132;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2IssueInternalCommand_loop_L63(in_Tmp_1771: int, in_waitValue_3: int, in_cdb_2: int, in_modeMdl: int, in_Tmp_1774: int, in_Tmp_1776: int, in_Tmp_1779: int, in_Tmp_1780: int, in_Tmp_1781: int, in_Tmp_1782: int, in_Tmp_1784: int, in_Tmp_1785: int, in_Tmp_1786: int, in_irp_7: int, in_senseInfoBuffer: int, in_Tmp_1787: int, in_Tmp_1789: int, in_srb_6: int, in_Tmp_1791: int, in_event_1: int, in_Tmp_1794: int, in_Tmp_1795: int, in_i_5: int, in_Tmp_1798: int, in_Tmp_1799: int, in_irpStack_16: int, in_Tmp_1801: int, in_inquiryMdl: int, in_context_1: int, in_Tmp_1803: int, in_Tmp_1805: int, in_status_51: int, in_Tmp_1809: int, in_retryCount: int, in_Tmp_1810: int, in_DeviceExtension_10: int, in_Scsiop: int, in_vslice_dummy_var_131: int, in_vslice_dummy_var_132: int) returns (out_Tmp_1771: int, out_cdb_2: int, out_modeMdl: int, out_Tmp_1774: int, out_Tmp_1776: int, out_Tmp_1779: int, out_Tmp_1780: int, out_Tmp_1781: int, out_Tmp_1782: int, out_Tmp_1784: int, out_Tmp_1785: int, out_Tmp_1786: int, out_Tmp_1787: int, out_Tmp_1789: int, out_Tmp_1791: int, out_Tmp_1794: int, out_Tmp_1795: int, out_i_5: int, out_Tmp_1798: int, out_Tmp_1799: int, out_irpStack_16: int, out_Tmp_1801: int, out_inquiryMdl: int, out_Tmp_1803: int, out_Tmp_1805: int, out_status_51: int, out_Tmp_1809: int, out_retryCount: int, out_Tmp_1810: int, out_vslice_dummy_var_131: int, out_vslice_dummy_var_132: int)
{
  var vslice_dummy_var_4500: int;

  entry:
    out_Tmp_1771, out_cdb_2, out_modeMdl, out_Tmp_1774, out_Tmp_1776, out_Tmp_1779, out_Tmp_1780, out_Tmp_1781, out_Tmp_1782, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, out_Tmp_1787, out_Tmp_1789, out_Tmp_1791, out_Tmp_1794, out_Tmp_1795, out_i_5, out_Tmp_1798, out_Tmp_1799, out_irpStack_16, out_Tmp_1801, out_inquiryMdl, out_Tmp_1803, out_Tmp_1805, out_status_51, out_Tmp_1809, out_retryCount, out_Tmp_1810, out_vslice_dummy_var_131, out_vslice_dummy_var_132 := in_Tmp_1771, in_cdb_2, in_modeMdl, in_Tmp_1774, in_Tmp_1776, in_Tmp_1779, in_Tmp_1780, in_Tmp_1781, in_Tmp_1782, in_Tmp_1784, in_Tmp_1785, in_Tmp_1786, in_Tmp_1787, in_Tmp_1789, in_Tmp_1791, in_Tmp_1794, in_Tmp_1795, in_i_5, in_Tmp_1798, in_Tmp_1799, in_irpStack_16, in_Tmp_1801, in_inquiryMdl, in_Tmp_1803, in_Tmp_1805, in_status_51, in_Tmp_1809, in_retryCount, in_Tmp_1810, in_vslice_dummy_var_131, in_vslice_dummy_var_132;
    goto L63, exit;

  exit:
    return;

  L63:
    call {:si_unique_call 3929} out_irpStack_16 := sdv_IoGetNextIrpStackLocation(in_irp_7);
    assume {:nonnull} out_irpStack_16 != 0;
    assume out_irpStack_16 > 0;
    assume {:nonnull} out_irpStack_16 != 0;
    assume out_irpStack_16 > 0;
    assume {:nonnull} out_irpStack_16 != 0;
    assume out_irpStack_16 > 0;
    call {:si_unique_call 3930} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    out_cdb_2 := Cdb__SCSI_REQUEST_BLOCK(in_srb_6);
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} in_Scsiop != 18;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} in_Scsiop == 26;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} out_retryCount != 0;
    goto L96;

  L96:
    assume {:nonnull} in_irp_7 != 0;
    assume in_irp_7 > 0;
    goto L84;

  L84:
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_context_1 != 0;
    assume in_context_1 > 0;
    call {:si_unique_call 3934} KeInitializeEvent(Event__REQUEST_CONTEXT(in_context_1), 0, 0);
    call {:si_unique_call 3935} sdv_IoSetCompletionRoutine(in_irp_7, li2bplFunctionConstant523, in_context_1, 1, 1, 1);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1779;
    assume {:nonnull} out_Tmp_1779 != 0;
    assume out_Tmp_1779 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    out_Tmp_1810 := in_Scsiop;
    havoc out_Tmp_1798;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1771;
    call {:si_unique_call 3933} WPP_SF_qDq(out_Tmp_1771, 55, out_Tmp_1798, in_DeviceExtension_10, out_Tmp_1810, in_irp_7);
    goto L157;

  L157:
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    havoc vslice_dummy_var_4500;
    call {:si_unique_call 3932} out_status_51 := sdv_IoCallDriver#1(vslice_dummy_var_4500, in_irp_7);
    goto anon157_Else;

  anon157_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_irp_7 != 0;
    assume in_irp_7 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    goto L171;

  L171:
    call {:si_unique_call 3931} out_vslice_dummy_var_131 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1809;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} out_Tmp_1809 != 1;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1801;
    assume {:nonnull} out_Tmp_1801 != 0;
    assume out_Tmp_1801 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1781;
    out_Tmp_1782 := in_Scsiop;
    havoc out_Tmp_1799;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1795;
    call {:si_unique_call 3939} WPP_SF_qDD(out_Tmp_1795, 57, out_Tmp_1799, in_DeviceExtension_10, out_Tmp_1782, out_Tmp_1781);
    goto L181;

  L181:
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1805;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} out_Tmp_1805 == 18;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1803;
    assume {:nonnull} out_Tmp_1803 != 0;
    assume out_Tmp_1803 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    havoc out_Tmp_1785;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1794;
    call {:si_unique_call 3940} WPP_SF_q(out_Tmp_1794, 58, out_Tmp_1785, in_DeviceExtension_10);
    goto L197;

  L197:
    out_status_51 := 0;
    goto L205;

  L205:
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} out_status_51 != 0;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} 5 > out_retryCount;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1789;
    assume {:nonnull} out_Tmp_1789 != 0;
    assume out_Tmp_1789 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    havoc out_Tmp_1774;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1791;
    call {:si_unique_call 3944} WPP_SF_q(out_Tmp_1791, 60, out_Tmp_1774, in_DeviceExtension_10);
    goto L213;

  L213:
    out_i_5 := 0;
    goto L221;

  L221:
    call {:si_unique_call 3941} out_i_5, out_vslice_dummy_var_132 := Sbp2IssueInternalCommand_loop_L221(in_waitValue_3, in_event_1, out_i_5, in_DeviceExtension_10, out_vslice_dummy_var_132);
    goto L221_last;

  L221_last:
    assume {:CounterLoop 6} {:Counter "i_5"} true;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} 6 > out_i_5;
    call {:si_unique_call 3942} KeInitializeEvent(in_event_1, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 3943} out_vslice_dummy_var_132 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    out_i_5 := out_i_5 + 1;
    assume false;
    return;

  anon138_Then:
    goto L206;

  L206:
    goto anon132_Else;

  anon132_Else:
    assume {:partition} 3 > out_retryCount;
    goto anon139_Then;

  anon139_Then:
    assume {:partition} out_status_51 != 0;
    goto anon139_Then_dummy;

  anon139_Then_dummy:
    call {:si_unique_call 3945} {:si_old_unique_call 1} out_Tmp_1771, out_cdb_2, out_modeMdl, out_Tmp_1774, out_Tmp_1776, out_Tmp_1779, out_Tmp_1780, out_Tmp_1781, out_Tmp_1782, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, out_Tmp_1787, out_Tmp_1789, out_Tmp_1791, out_Tmp_1794, out_Tmp_1795, out_i_5, out_Tmp_1798, out_Tmp_1799, out_irpStack_16, out_Tmp_1801, out_inquiryMdl, out_Tmp_1803, out_Tmp_1805, out_status_51, out_Tmp_1809, out_retryCount, out_Tmp_1810, out_vslice_dummy_var_131, out_vslice_dummy_var_132 := Sbp2IssueInternalCommand_loop_L63(out_Tmp_1771, in_waitValue_3, out_cdb_2, out_modeMdl, out_Tmp_1774, out_Tmp_1776, out_Tmp_1779, out_Tmp_1780, out_Tmp_1781, out_Tmp_1782, out_Tmp_1784, out_Tmp_1785, out_Tmp_1786, in_irp_7, in_senseInfoBuffer, out_Tmp_1787, out_Tmp_1789, in_srb_6, out_Tmp_1791, in_event_1, out_Tmp_1794, out_Tmp_1795, out_i_5, out_Tmp_1798, out_Tmp_1799, out_irpStack_16, out_Tmp_1801, out_inquiryMdl, in_context_1, out_Tmp_1803, out_Tmp_1805, out_status_51, out_Tmp_1809, out_retryCount, out_Tmp_1810, in_DeviceExtension_10, in_Scsiop, out_vslice_dummy_var_131, out_vslice_dummy_var_132);
    return;

  anon137_Then:
    assume {:partition} out_i_5 >= 6;
    goto L206;

  anon136_Then:
    goto L213;

  anon162_Then:
    goto L213;

  anon135_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L213;

  anon134_Then:
    assume {:partition} out_retryCount >= 5;
    goto L206;

  anon133_Then:
    goto L206;

  anon131_Then:
    assume {:partition} out_status_51 == 0;
    goto L206;

  anon130_Then:
    goto L197;

  anon161_Then:
    goto L197;

  anon129_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L197;

  anon160_Then:
    assume {:partition} out_Tmp_1805 != 18;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} in_senseInfoBuffer != 0;
    assume in_senseInfoBuffer > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    out_status_51 := -1073741808;
    out_retryCount := out_retryCount + 1;
    goto L205;

  anon140_Then:
    goto L233;

  L233:
    out_retryCount := out_retryCount + 1;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1787;
    assume {:nonnull} out_Tmp_1787 != 0;
    assume out_Tmp_1787 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    out_Tmp_1786 := in_Scsiop;
    havoc out_Tmp_1784;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1780;
    call {:si_unique_call 3938} WPP_SF_qDd(out_Tmp_1780, 59, out_Tmp_1784, in_DeviceExtension_10, out_Tmp_1786, out_retryCount);
    goto L241;

  L241:
    out_status_51 := -1073741823;
    goto L205;

  anon141_Then:
    goto L241;

  anon165_Then:
    goto L241;

  anon164_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L241;

  anon128_Then:
    goto L233;

  anon127_Then:
    goto L181;

  anon159_Then:
    goto L181;

  anon126_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L181;

  anon158_Then:
    assume {:partition} out_Tmp_1809 == 1;
    out_status_51 := 0;
    goto L206;

  anon124_Then:
    goto anon125_Then;

  anon125_Then:
    assume {:partition} out_status_51 == 259;
    goto L171;

  anon123_Then:
    goto L157;

  anon156_Then:
    goto L157;

  anon122_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L157;

  anon168_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 3937} out_modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon119_Then;

  anon119_Then:
    assume {:partition} out_modeMdl != 0;
    goto L96;

  anon151_Then:
    assume {:partition} in_Scsiop != 26;
    goto L84;

  anon154_Then:
    assume {:partition} in_Scsiop == 18;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    havoc out_Tmp_1776;
    assume {:nonnull} out_Tmp_1776 != 0;
    assume out_Tmp_1776 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} out_retryCount != 0;
    goto L138;

  L138:
    assume {:nonnull} in_irp_7 != 0;
    assume in_irp_7 > 0;
    goto L84;

  anon155_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 3936} out_inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon121_Else;

  anon121_Else:
    assume {:partition} out_inquiryMdl != 0;
    goto L138;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L63(in_Tmp_1771: int, in_waitValue_3: int, in_cdb_2: int, in_modeMdl: int, in_Tmp_1774: int, in_Tmp_1776: int, in_Tmp_1779: int, in_Tmp_1780: int, in_Tmp_1781: int, in_Tmp_1782: int, in_Tmp_1784: int, in_Tmp_1785: int, in_Tmp_1786: int, in_irp_7: int, in_senseInfoBuffer: int, in_Tmp_1787: int, in_Tmp_1789: int, in_srb_6: int, in_Tmp_1791: int, in_event_1: int, in_Tmp_1794: int, in_Tmp_1795: int, in_i_5: int, in_Tmp_1798: int, in_Tmp_1799: int, in_irpStack_16: int, in_Tmp_1801: int, in_inquiryMdl: int, in_context_1: int, in_Tmp_1803: int, in_Tmp_1805: int, in_status_51: int, in_Tmp_1809: int, in_retryCount: int, in_Tmp_1810: int, in_DeviceExtension_10: int, in_Scsiop: int, in_vslice_dummy_var_131: int, in_vslice_dummy_var_132: int) returns (out_Tmp_1771: int, out_cdb_2: int, out_modeMdl: int, out_Tmp_1774: int, out_Tmp_1776: int, out_Tmp_1779: int, out_Tmp_1780: int, out_Tmp_1781: int, out_Tmp_1782: int, out_Tmp_1784: int, out_Tmp_1785: int, out_Tmp_1786: int, out_Tmp_1787: int, out_Tmp_1789: int, out_Tmp_1791: int, out_Tmp_1794: int, out_Tmp_1795: int, out_i_5: int, out_Tmp_1798: int, out_Tmp_1799: int, out_irpStack_16: int, out_Tmp_1801: int, out_inquiryMdl: int, out_Tmp_1803: int, out_Tmp_1805: int, out_status_51: int, out_Tmp_1809: int, out_retryCount: int, out_Tmp_1810: int, out_vslice_dummy_var_131: int, out_vslice_dummy_var_132: int);
  modifies alloc, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, LockDepth, Mem_T.P_IRBIRP, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION, yogi_error, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_cdb_2 == in_cdb_2 || out_cdb_2 == Cdb__SCSI_REQUEST_BLOCK(in_srb_6);
  free ensures {:va_keep} out_Tmp_1782 == in_Tmp_1782 || out_Tmp_1782 == in_Scsiop;
  free ensures {:va_keep} out_Tmp_1786 == in_Tmp_1786 || out_Tmp_1786 == in_Scsiop;
  free ensures {:va_keep} out_status_51 == 0 || out_status_51 == -1073741808 || out_status_51 == -1073741823 || out_status_51 == in_status_51;
  free ensures {:va_keep} out_Tmp_1810 == in_Tmp_1810 || out_Tmp_1810 == in_Scsiop;
  free ensures {:va_keep} out_vslice_dummy_var_131 == 258 || out_vslice_dummy_var_131 == 0 || out_vslice_dummy_var_131 == in_vslice_dummy_var_131;
  free ensures {:va_keep} out_vslice_dummy_var_132 == 258 || out_vslice_dummy_var_132 == 0 || out_vslice_dummy_var_132 == in_vslice_dummy_var_132;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CreateDevObject_loop_L17(in_NextId: int, in_deviceObject_3: int, in_uniDeviceName_1: int, in_buffer_1: int, in_Tmp_2057: int, in_status_66: int) returns (out_NextId: int, out_Tmp_2057: int, out_status_66: int)
{

  entry:
    out_NextId, out_Tmp_2057, out_status_66 := in_NextId, in_Tmp_2057, in_status_66;
    goto L17, exit;

  exit:
    return;

  L17:
    out_Tmp_2057 := strConst__li2bpl37;
    call {:si_unique_call 3946} out_status_66 := RtlStringCbPrintfW(in_buffer_1, 128, out_Tmp_2057);
    goto anon17_Else;

  anon17_Else:
    assume {:partition} out_status_66 >= 0;
    call {:si_unique_call 3947} RtlInitUnicodeString(in_uniDeviceName_1, in_buffer_1);
    call {:si_unique_call 3948} out_status_66 := IoCreateDevice(0, 5144, 0, 42, 256, 0, in_deviceObject_3);
    out_NextId := out_NextId + 1;
    goto anon23_Then;

  anon23_Then:
    assume {:partition} out_status_66 == -1073741771;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    call {:si_unique_call 3949} {:si_old_unique_call 1} out_NextId, out_Tmp_2057, out_status_66 := Sbp2CreateDevObject_loop_L17(out_NextId, in_deviceObject_3, in_uniDeviceName_1, in_buffer_1, out_Tmp_2057, out_status_66);
    return;
}



procedure {:LoopProcedure} Sbp2CreateDevObject_loop_L17(in_NextId: int, in_deviceObject_3: int, in_uniDeviceName_1: int, in_buffer_1: int, in_Tmp_2057: int, in_status_66: int) returns (out_NextId: int, out_Tmp_2057: int, out_status_66: int);
  modifies alloc, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} out_status_66 == -1073741824 || out_status_66 == -1073741771 || out_status_66 == -1073741670 || out_status_66 == -1073741823 || out_status_66 == 0 || out_status_66 == in_status_66;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2PnpDeviceControl_loop_L584(in_i_7: int, in_Tmp_2280: int, in_fdoExtension_14: int, in_Tmp_2319: int, in_Tmp_2345: int, in_Tmp_2360: int, in_DeviceObject_49: int) returns (out_i_7: int, out_Tmp_2280: int, out_Tmp_2319: int, out_Tmp_2345: int, out_Tmp_2360: int)
{

  entry:
    out_i_7, out_Tmp_2280, out_Tmp_2319, out_Tmp_2345, out_Tmp_2360 := in_i_7, in_Tmp_2280, in_Tmp_2319, in_Tmp_2345, in_Tmp_2360;
    goto L584, exit;

  exit:
    return;

  L584:
    out_Tmp_2360 := out_i_7;
    assume {:nonnull} in_fdoExtension_14 != 0;
    assume in_fdoExtension_14 > 0;
    havoc out_Tmp_2280;
    assume {:nonnull} out_Tmp_2280 != 0;
    assume out_Tmp_2280 > 0;
    goto anon425_Else;

  anon425_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2280 + out_Tmp_2360 * 268)] != 0;
    out_Tmp_2345 := out_i_7;
    assume {:nonnull} in_fdoExtension_14 != 0;
    assume in_fdoExtension_14 > 0;
    havoc out_Tmp_2319;
    assume {:nonnull} out_Tmp_2319 != 0;
    assume out_Tmp_2319 > 0;
    goto anon426_Then;

  anon426_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2319 + out_Tmp_2345 * 268)] != in_DeviceObject_49;
    out_i_7 := out_i_7 + 1;
    goto anon426_Then_dummy;

  anon426_Then_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2PnpDeviceControl_loop_L584(in_i_7: int, in_Tmp_2280: int, in_fdoExtension_14: int, in_Tmp_2319: int, in_Tmp_2345: int, in_Tmp_2360: int, in_DeviceObject_49: int) returns (out_i_7: int, out_Tmp_2280: int, out_Tmp_2319: int, out_Tmp_2345: int, out_Tmp_2360: int);
  free ensures {:va_keep} out_Tmp_2345 == in_i_7 || out_Tmp_2345 == in_Tmp_2345;
  free ensures {:va_keep} out_Tmp_2360 == in_i_7 || out_Tmp_2360 == in_Tmp_2360;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2PnpDeviceControl_loop_L517(in_Tmp_2251: int, in_i_7: int, in_Tmp_2287: int, in_fdoExtension_14: int, in_DeviceObject_49: int) returns (out_Tmp_2251: int, out_i_7: int, out_Tmp_2287: int)
{

  entry:
    out_Tmp_2251, out_i_7, out_Tmp_2287 := in_Tmp_2251, in_i_7, in_Tmp_2287;
    goto L517, exit;

  exit:
    return;

  L517:
    assume {:nonnull} in_fdoExtension_14 != 0;
    assume in_fdoExtension_14 > 0;
    goto anon370_Else;

  anon370_Else:
    out_Tmp_2287 := out_i_7;
    assume {:nonnull} in_fdoExtension_14 != 0;
    assume in_fdoExtension_14 > 0;
    havoc out_Tmp_2251;
    assume {:nonnull} out_Tmp_2251 != 0;
    assume out_Tmp_2251 > 0;
    goto anon418_Then;

  anon418_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2251 + out_Tmp_2287 * 268)] != in_DeviceObject_49;
    out_i_7 := out_i_7 + 1;
    goto anon418_Then_dummy;

  anon418_Then_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2PnpDeviceControl_loop_L517(in_Tmp_2251: int, in_i_7: int, in_Tmp_2287: int, in_fdoExtension_14: int, in_DeviceObject_49: int) returns (out_Tmp_2251: int, out_i_7: int, out_Tmp_2287: int);
  free ensures {:va_keep} out_Tmp_2287 == in_i_7 || out_Tmp_2287 == in_Tmp_2287;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2PreAllocateLists_loop_L120(in_Tmp_2478: int, in_Tmp_2479: int, in_cnt: int, in_Tmp_2480: int, in_context_3: int, in_Tmp_2481: int, in_Tmp_2483: int, in_Tmp_2484: int, in_Tmp_2485: int, in_Tmp_2486: int, in_Tmp_2488: int, in_sdv_803: int, in_Tmp_2490: int, in_Tmp_2491: int, in_Tmp_2492: int, in_Tmp_2493: int, in_Tmp_2494: int, in_packet_15: int, in_status_79: int, in_Tmp_2495: int, in_Tmp_2496: int, in_Tmp_2497: int, in_Tmp_2498: int, in_PdoExtension_24: int, in_vslice_dummy_var_300: int) returns (out_Tmp_2478: int, out_Tmp_2479: int, out_cnt: int, out_Tmp_2480: int, out_context_3: int, out_Tmp_2481: int, out_Tmp_2483: int, out_Tmp_2484: int, out_Tmp_2485: int, out_Tmp_2486: int, out_Tmp_2488: int, out_sdv_803: int, out_Tmp_2490: int, out_Tmp_2491: int, out_Tmp_2492: int, out_Tmp_2493: int, out_Tmp_2494: int, out_status_79: int, out_Tmp_2495: int, out_Tmp_2496: int, out_Tmp_2497: int, out_Tmp_2498: int, out_vslice_dummy_var_300: int)
{
  var vslice_dummy_var_4501: int;

  entry:
    out_Tmp_2478, out_Tmp_2479, out_cnt, out_Tmp_2480, out_context_3, out_Tmp_2481, out_Tmp_2483, out_Tmp_2484, out_Tmp_2485, out_Tmp_2486, out_Tmp_2488, out_sdv_803, out_Tmp_2490, out_Tmp_2491, out_Tmp_2492, out_Tmp_2493, out_Tmp_2494, out_status_79, out_Tmp_2495, out_Tmp_2496, out_Tmp_2497, out_Tmp_2498, out_vslice_dummy_var_300 := in_Tmp_2478, in_Tmp_2479, in_cnt, in_Tmp_2480, in_context_3, in_Tmp_2481, in_Tmp_2483, in_Tmp_2484, in_Tmp_2485, in_Tmp_2486, in_Tmp_2488, in_sdv_803, in_Tmp_2490, in_Tmp_2491, in_Tmp_2492, in_Tmp_2493, in_Tmp_2494, in_status_79, in_Tmp_2495, in_Tmp_2496, in_Tmp_2497, in_Tmp_2498, in_vslice_dummy_var_300;
    goto L120, exit;

  exit:
    return;

  L120:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon34_Else;

  anon34_Else:
    assume {:partition} 8 > out_cnt;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    havoc out_context_3;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    call {:si_unique_call 3952} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(out_context_3), li2bplFunctionConstant378, 0);
    call {:si_unique_call 3953} KeInitializeTimer(0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2497;
    assume {:nonnull} out_Tmp_2497 != 0;
    assume out_Tmp_2497 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2484;
    assume {:nonnull} out_Tmp_2484 != 0;
    assume out_Tmp_2484 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2490;
    assume {:nonnull} out_Tmp_2490 != 0;
    assume out_Tmp_2490 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2480;
    assume {:nonnull} out_Tmp_2480 != 0;
    assume out_Tmp_2480 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2481;
    assume {:nonnull} out_Tmp_2481 != 0;
    assume out_Tmp_2481 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2492;
    assume {:nonnull} out_Tmp_2492 != 0;
    assume out_Tmp_2492 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2485;
    assume {:nonnull} out_Tmp_2485 != 0;
    assume out_Tmp_2485 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2479;
    assume {:nonnull} out_Tmp_2479 != 0;
    assume out_Tmp_2479 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2483;
    assume {:nonnull} out_Tmp_2483 != 0;
    assume out_Tmp_2483 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2486;
    assume {:nonnull} out_Tmp_2486 != 0;
    assume out_Tmp_2486 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2493;
    assume {:nonnull} out_Tmp_2493 != 0;
    assume out_Tmp_2493 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2491;
    assume {:nonnull} out_Tmp_2491 != 0;
    assume out_Tmp_2491 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2495;
    assume {:nonnull} out_Tmp_2495 != 0;
    assume out_Tmp_2495 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2496;
    assume {:nonnull} out_Tmp_2496 != 0;
    assume out_Tmp_2496 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2488;
    assume {:nonnull} out_Tmp_2488 != 0;
    assume out_Tmp_2488 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2498;
    assume {:nonnull} out_Tmp_2498 != 0;
    assume out_Tmp_2498 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    call {:si_unique_call 3954} out_status_79 := Sbp2SendRequest#1(in_PdoExtension_24, Mem_T.P_IRBIRP[in_packet_15], 2);
    goto anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Else;

  anon35_Else:
    assume {:partition} out_status_79 >= 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2494;
    assume {:nonnull} out_Tmp_2494 != 0;
    assume out_Tmp_2494 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    call {:si_unique_call 3950} out_sdv_803 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2478;
    assume {:nonnull} out_Tmp_2478 != 0;
    assume out_Tmp_2478 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    havoc vslice_dummy_var_4501;
    Mem_T.PVOID[AddressHandle__ADDRESS_CONTEXT(AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_3)))] := vslice_dummy_var_4501;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    call {:si_unique_call 3951} out_vslice_dummy_var_300 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    call {:si_unique_call 3955} {:si_old_unique_call 1} out_Tmp_2478, out_Tmp_2479, out_cnt, out_Tmp_2480, out_context_3, out_Tmp_2481, out_Tmp_2483, out_Tmp_2484, out_Tmp_2485, out_Tmp_2486, out_Tmp_2488, out_sdv_803, out_Tmp_2490, out_Tmp_2491, out_Tmp_2492, out_Tmp_2493, out_Tmp_2494, out_status_79, out_Tmp_2495, out_Tmp_2496, out_Tmp_2497, out_Tmp_2498, out_vslice_dummy_var_300 := Sbp2PreAllocateLists_loop_L120(out_Tmp_2478, out_Tmp_2479, out_cnt, out_Tmp_2480, out_context_3, out_Tmp_2481, out_Tmp_2483, out_Tmp_2484, out_Tmp_2485, out_Tmp_2486, out_Tmp_2488, out_sdv_803, out_Tmp_2490, out_Tmp_2491, out_Tmp_2492, out_Tmp_2493, out_Tmp_2494, in_packet_15, out_status_79, out_Tmp_2495, out_Tmp_2496, out_Tmp_2497, out_Tmp_2498, in_PdoExtension_24, out_vslice_dummy_var_300);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L120(in_Tmp_2478: int, in_Tmp_2479: int, in_cnt: int, in_Tmp_2480: int, in_context_3: int, in_Tmp_2481: int, in_Tmp_2483: int, in_Tmp_2484: int, in_Tmp_2485: int, in_Tmp_2486: int, in_Tmp_2488: int, in_sdv_803: int, in_Tmp_2490: int, in_Tmp_2491: int, in_Tmp_2492: int, in_Tmp_2493: int, in_Tmp_2494: int, in_packet_15: int, in_status_79: int, in_Tmp_2495: int, in_Tmp_2496: int, in_Tmp_2497: int, in_Tmp_2498: int, in_PdoExtension_24: int, in_vslice_dummy_var_300: int) returns (out_Tmp_2478: int, out_Tmp_2479: int, out_cnt: int, out_Tmp_2480: int, out_context_3: int, out_Tmp_2481: int, out_Tmp_2483: int, out_Tmp_2484: int, out_Tmp_2485: int, out_Tmp_2486: int, out_Tmp_2488: int, out_sdv_803: int, out_Tmp_2490: int, out_Tmp_2491: int, out_Tmp_2492: int, out_Tmp_2493: int, out_Tmp_2494: int, out_status_79: int, out_Tmp_2495: int, out_Tmp_2496: int, out_Tmp_2497: int, out_Tmp_2498: int, out_vslice_dummy_var_300: int);
  modifies alloc, Mem_T.PVOID, Mem_T.P_IRBIRP, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2PreAllocateLists_loop_L88(in_cnt: int, in_statusFifoElement_1: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_298: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_298: int)
{

  entry:
    out_cnt, out_statusFifoElement_1, out_boogieTmp, out_vslice_dummy_var_298 := in_cnt, in_statusFifoElement_1, in_boogieTmp, in_vslice_dummy_var_298;
    goto L88, exit;

  exit:
    return;

  L88:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon31_Else;

  anon31_Else:
    assume {:partition} 15 > out_cnt;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    havoc out_statusFifoElement_1;
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    call {:si_unique_call 3957} out_boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    goto anon32_Else;

  anon32_Else:
    call {:si_unique_call 3956} out_vslice_dummy_var_298 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    havoc out_cnt;
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L88(in_cnt: int, in_statusFifoElement_1: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_298: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_298: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:SIextraRecBound 8} Sbp2PreAllocateLists_loop_L41(in_cnt: int, in_sdv_798: int, in_sdv_802: int, in_Tmp_2487: int, in_packet_15: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_297: int) returns (out_cnt: int, out_sdv_798: int, out_sdv_802: int, out_Tmp_2487: int, out_boogieTmp: int, out_vslice_dummy_var_297: int)
{
  var vslice_dummy_var_4502: int;

  entry:
    out_cnt, out_sdv_798, out_sdv_802, out_Tmp_2487, out_boogieTmp, out_vslice_dummy_var_297 := in_cnt, in_sdv_798, in_sdv_802, in_Tmp_2487, in_boogieTmp, in_vslice_dummy_var_297;
    goto L41, exit;

  exit:
    return;

  L41:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon29_Else;

  anon29_Else:
    assume {:partition} 8 > out_cnt;
    call {:si_unique_call 3961} out_sdv_798 := ExAllocatePoolWithTag(512, 24, -347053485);
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    Mem_T.P_IRBIRP[in_packet_15] := out_sdv_798;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon37_Then;

  anon37_Then:
    assume {:partition} Mem_T.P_IRBIRP[in_packet_15] != 0;
    call {:si_unique_call 3960} out_sdv_802 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon38_Else;

  anon38_Else:
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    havoc out_Tmp_2487;
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} out_Tmp_2487 != 0;
    assume out_Tmp_2487 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc vslice_dummy_var_4502;
    call {:si_unique_call 3959} out_boogieTmp := IoAllocateIrp(vslice_dummy_var_4502, 0);
    assume {:nonnull} Mem_T.P_IRBIRP[in_packet_15] != 0;
    assume Mem_T.P_IRBIRP[in_packet_15] > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon30_Else;

  anon30_Else:
    call {:si_unique_call 3958} out_vslice_dummy_var_297 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    call {:si_unique_call 3962} {:si_old_unique_call 1} out_cnt, out_sdv_798, out_sdv_802, out_Tmp_2487, out_boogieTmp, out_vslice_dummy_var_297 := Sbp2PreAllocateLists_loop_L41(out_cnt, out_sdv_798, out_sdv_802, out_Tmp_2487, in_packet_15, in_PdoExtension_24, out_boogieTmp, out_vslice_dummy_var_297);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L41(in_cnt: int, in_sdv_798: int, in_sdv_802: int, in_Tmp_2487: int, in_packet_15: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_297: int) returns (out_cnt: int, out_sdv_798: int, out_sdv_802: int, out_Tmp_2487: int, out_boogieTmp: int, out_vslice_dummy_var_297: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CreateDeviceRelations_loop_L35(in_i_9: int, in_Tmp_2581: int, in_Tmp_2586: int, in_OrgLUNCount: int, in_FdoExtension_8: int) returns (out_i_9: int, out_Tmp_2581: int, out_Tmp_2586: int)
{

  entry:
    out_i_9, out_Tmp_2581, out_Tmp_2586 := in_i_9, in_Tmp_2581, in_Tmp_2586;
    goto L35, exit;

  exit:
    return;

  L35:
    goto anon52_Else;

  anon52_Else:
    assume {:partition} in_OrgLUNCount > out_i_9;
    out_Tmp_2581 := out_i_9;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2586;
    assume {:nonnull} out_Tmp_2586 != 0;
    assume out_Tmp_2586 > 0;
    goto anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2586 + out_Tmp_2581 * 268)] != 0;
    out_i_9 := out_i_9 + 1;
    goto anon64_Else_dummy;

  anon64_Else_dummy:
    havoc out_i_9;
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L35(in_i_9: int, in_Tmp_2581: int, in_Tmp_2586: int, in_OrgLUNCount: int, in_FdoExtension_8: int) returns (out_i_9: int, out_Tmp_2581: int, out_Tmp_2586: int);
  free ensures {:va_keep} out_Tmp_2581 == in_i_9 || out_Tmp_2581 == in_Tmp_2581;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CreateDeviceRelations_loop_L80(in_i_9: int, in_Tmp_2560: int, in_Tmp_2568: int, in_Tmp_2576: int, in_Tmp_2578: int, in_Tmp_2588: int, in_status_81: int, in_instanceNum: int, in_FdoExtension_8: int) returns (out_Tmp_2560: int, out_Tmp_2568: int, out_Tmp_2576: int, out_Tmp_2578: int, out_Tmp_2588: int, out_status_81: int, out_instanceNum: int)
{

  entry:
    out_Tmp_2560, out_Tmp_2568, out_Tmp_2576, out_Tmp_2578, out_Tmp_2588, out_status_81, out_instanceNum := in_Tmp_2560, in_Tmp_2568, in_Tmp_2576, in_Tmp_2578, in_Tmp_2588, in_status_81, in_instanceNum;
    goto L80, exit;

  exit:
    return;

  L80:
    out_Tmp_2568 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2578 := out_Tmp_2568;
    out_Tmp_2560 := in_i_9;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2576;
    out_Tmp_2588 := out_Tmp_2576 + out_Tmp_2560 * 268;
    call {:si_unique_call 3963} out_status_81 := Sbp2CreatePdo(in_FdoExtension_8, out_Tmp_2588, out_Tmp_2578);
    goto anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto anon57_Then;

  anon57_Then:
    assume {:partition} out_status_81 == -1073741771;
    goto anon57_Then_dummy;

  anon57_Then_dummy:
    call {:si_unique_call 3964} {:si_old_unique_call 1} out_Tmp_2560, out_Tmp_2568, out_Tmp_2576, out_Tmp_2578, out_Tmp_2588, out_status_81, out_instanceNum := Sbp2CreateDeviceRelations_loop_L80(in_i_9, out_Tmp_2560, out_Tmp_2568, out_Tmp_2576, out_Tmp_2578, out_Tmp_2588, out_status_81, out_instanceNum, in_FdoExtension_8);
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L80(in_i_9: int, in_Tmp_2560: int, in_Tmp_2568: int, in_Tmp_2576: int, in_Tmp_2578: int, in_Tmp_2588: int, in_status_81: int, in_instanceNum: int, in_FdoExtension_8: int) returns (out_Tmp_2560: int, out_Tmp_2568: int, out_Tmp_2576: int, out_Tmp_2578: int, out_Tmp_2588: int, out_status_81: int, out_instanceNum: int);
  modifies alloc, Mem_T.P_DEVICE_OBJECT, Mem_T.LogStart__DEBUG_LOG, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_2560 == in_Tmp_2560 || out_Tmp_2560 == in_i_9;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CreateDeviceRelations_loop_L58(in_i_9: int, in_Tmp_2560: int, in_Tmp_2561: int, in_Tmp_2562: int, in_Tmp_2563: int, in_Tmp_2564: int, in_subStatus: int, in_Tmp_2566: int, in_pdoExtension_24: int, in_Tmp_2568: int, in_Tmp_2569: int, in_Tmp_2571: int, in_Tmp_2572: int, in_Tmp_2573: int, in_Tmp_2574: int, in_Tmp_2576: int, in_Tmp_2577: int, in_Tmp_2578: int, in_Tmp_2580: int, in_Tmp_2582: int, in_Tmp_2583: int, in_Tmp_2584: int, in_Tmp_2588: int, in_Tmp_2589: int, in_Tmp_2590: int, in_Tmp_2591: int, in_status_81: int, in_instanceNum: int, in_Tmp_2592: int, in_Tmp_2594: int, in_Tmp_2595: int, in_Tmp_2596: int, in_FdoExtension_8: int, in_DeviceRelations: int, in_vslice_dummy_var_308: int, in_vslice_dummy_var_309: int) returns (out_i_9: int, out_Tmp_2560: int, out_Tmp_2561: int, out_Tmp_2562: int, out_Tmp_2563: int, out_Tmp_2564: int, out_subStatus: int, out_Tmp_2566: int, out_pdoExtension_24: int, out_Tmp_2568: int, out_Tmp_2569: int, out_Tmp_2571: int, out_Tmp_2572: int, out_Tmp_2573: int, out_Tmp_2574: int, out_Tmp_2576: int, out_Tmp_2577: int, out_Tmp_2578: int, out_Tmp_2580: int, out_Tmp_2582: int, out_Tmp_2583: int, out_Tmp_2584: int, out_Tmp_2588: int, out_Tmp_2589: int, out_Tmp_2590: int, out_Tmp_2591: int, out_status_81: int, out_instanceNum: int, out_Tmp_2592: int, out_Tmp_2594: int, out_Tmp_2595: int, out_Tmp_2596: int, out_vslice_dummy_var_308: int, out_vslice_dummy_var_309: int)
{

  entry:
    out_i_9, out_Tmp_2560, out_Tmp_2561, out_Tmp_2562, out_Tmp_2563, out_Tmp_2564, out_subStatus, out_Tmp_2566, out_pdoExtension_24, out_Tmp_2568, out_Tmp_2569, out_Tmp_2571, out_Tmp_2572, out_Tmp_2573, out_Tmp_2574, out_Tmp_2576, out_Tmp_2577, out_Tmp_2578, out_Tmp_2580, out_Tmp_2582, out_Tmp_2583, out_Tmp_2584, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_Tmp_2591, out_status_81, out_instanceNum, out_Tmp_2592, out_Tmp_2594, out_Tmp_2595, out_Tmp_2596, out_vslice_dummy_var_308, out_vslice_dummy_var_309 := in_i_9, in_Tmp_2560, in_Tmp_2561, in_Tmp_2562, in_Tmp_2563, in_Tmp_2564, in_subStatus, in_Tmp_2566, in_pdoExtension_24, in_Tmp_2568, in_Tmp_2569, in_Tmp_2571, in_Tmp_2572, in_Tmp_2573, in_Tmp_2574, in_Tmp_2576, in_Tmp_2577, in_Tmp_2578, in_Tmp_2580, in_Tmp_2582, in_Tmp_2583, in_Tmp_2584, in_Tmp_2588, in_Tmp_2589, in_Tmp_2590, in_Tmp_2591, in_status_81, in_instanceNum, in_Tmp_2592, in_Tmp_2594, in_Tmp_2595, in_Tmp_2596, in_vslice_dummy_var_308, in_vslice_dummy_var_309;
    goto L58, exit;

  exit:
    return;

  L58:
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    goto anon55_Else;

  anon55_Else:
    out_Tmp_2595 := out_i_9;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2580;
    assume {:nonnull} out_Tmp_2580 != 0;
    assume out_Tmp_2580 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2580 + out_Tmp_2595 * 268)] != 0;
    out_subStatus := 0;
    out_Tmp_2564 := out_i_9;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2572;
    assume {:nonnull} out_Tmp_2572 != 0;
    assume out_Tmp_2572 > 0;
    out_Tmp_2571 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2572 + out_Tmp_2564 * 268)];
    assume {:nonnull} out_Tmp_2571 != 0;
    assume out_Tmp_2571 > 0;
    out_pdoExtension_24 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(out_Tmp_2571)];
    assume {:nonnull} out_pdoExtension_24 != 0;
    assume out_pdoExtension_24 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    out_Tmp_2582 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2569 := out_Tmp_2582;
    out_Tmp_2590 := out_i_9;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2589;
    out_Tmp_2574 := out_Tmp_2589 + out_Tmp_2590 * 268;
    call {:si_unique_call 3969} out_subStatus := Sbp2ReInitializePdo(in_FdoExtension_8, out_Tmp_2574, out_Tmp_2569);
    goto anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto L66;

  L66:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} out_subStatus >= 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2596;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2591;
    out_Tmp_2563 := out_i_9;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2584;
    assume {:nonnull} out_Tmp_2584 != 0;
    assume out_Tmp_2584 > 0;
    assume {:nonnull} out_Tmp_2591 != 0;
    assume out_Tmp_2591 > 0;
    Mem_T.P_DEVICE_OBJECT[out_Tmp_2591 + out_Tmp_2596 * 4] := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2584 + out_Tmp_2563 * 268)];
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_2594 := out_i_9;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2561;
    assume {:nonnull} out_Tmp_2561 != 0;
    assume out_Tmp_2561 > 0;
    call {:si_unique_call 3965} out_vslice_dummy_var_308 := sdv_ObReferenceObject(0);
    goto L73;

  L73:
    out_i_9 := out_i_9 + 1;
    goto L73_dummy;

  L73_dummy:
    call {:si_unique_call 3970} {:si_old_unique_call 1} out_i_9, out_Tmp_2560, out_Tmp_2561, out_Tmp_2562, out_Tmp_2563, out_Tmp_2564, out_subStatus, out_Tmp_2566, out_pdoExtension_24, out_Tmp_2568, out_Tmp_2569, out_Tmp_2571, out_Tmp_2572, out_Tmp_2573, out_Tmp_2574, out_Tmp_2576, out_Tmp_2577, out_Tmp_2578, out_Tmp_2580, out_Tmp_2582, out_Tmp_2583, out_Tmp_2584, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_Tmp_2591, out_status_81, out_instanceNum, out_Tmp_2592, out_Tmp_2594, out_Tmp_2595, out_Tmp_2596, out_vslice_dummy_var_308, out_vslice_dummy_var_309 := Sbp2CreateDeviceRelations_loop_L58(out_i_9, out_Tmp_2560, out_Tmp_2561, out_Tmp_2562, out_Tmp_2563, out_Tmp_2564, out_subStatus, out_Tmp_2566, out_pdoExtension_24, out_Tmp_2568, out_Tmp_2569, out_Tmp_2571, out_Tmp_2572, out_Tmp_2573, out_Tmp_2574, out_Tmp_2576, out_Tmp_2577, out_Tmp_2578, out_Tmp_2580, out_Tmp_2582, out_Tmp_2583, out_Tmp_2584, out_Tmp_2588, out_Tmp_2589, out_Tmp_2590, out_Tmp_2591, out_status_81, out_instanceNum, out_Tmp_2592, out_Tmp_2594, out_Tmp_2595, out_Tmp_2596, in_FdoExtension_8, in_DeviceRelations, out_vslice_dummy_var_308, out_vslice_dummy_var_309);
    return;

  anon56_Then:
    assume {:partition} 0 > out_subStatus;
    goto L73;

  anon69_Then:
    goto L66;

  anon68_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2580 + out_Tmp_2595 * 268)] == 0;
    out_instanceNum := 0;
    goto L80;

  L80:
    call {:si_unique_call 3967} out_Tmp_2560, out_Tmp_2568, out_Tmp_2576, out_Tmp_2578, out_Tmp_2588, out_status_81, out_instanceNum := Sbp2CreateDeviceRelations_loop_L80(out_i_9, out_Tmp_2560, out_Tmp_2568, out_Tmp_2576, out_Tmp_2578, out_Tmp_2588, out_status_81, out_instanceNum, in_FdoExtension_8);
    goto L80_last;

  L80_last:
    out_Tmp_2568 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2578 := out_Tmp_2568;
    out_Tmp_2560 := out_i_9;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2576;
    out_Tmp_2588 := out_Tmp_2576 + out_Tmp_2560 * 268;
    call {:si_unique_call 3968} out_status_81 := Sbp2CreatePdo(in_FdoExtension_8, out_Tmp_2588, out_Tmp_2578);
    goto anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} out_status_81 != -1073741771;
    goto anon58_Then;

  anon58_Then:
    assume {:partition} 0 <= out_status_81;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2577;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2566;
    out_Tmp_2573 := out_i_9;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2592;
    assume {:nonnull} out_Tmp_2566 != 0;
    assume out_Tmp_2566 > 0;
    assume {:nonnull} out_Tmp_2592 != 0;
    assume out_Tmp_2592 > 0;
    Mem_T.P_DEVICE_OBJECT[out_Tmp_2566 + out_Tmp_2577 * 4] := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2592 + out_Tmp_2573 * 268)];
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_2562 := out_i_9;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2583;
    assume {:nonnull} out_Tmp_2583 != 0;
    assume out_Tmp_2583 > 0;
    call {:si_unique_call 3966} out_vslice_dummy_var_309 := sdv_ObReferenceObject(0);
    goto L73;

  anon57_Then:
    assume {:partition} out_status_81 == -1073741771;
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L58(in_i_9: int, in_Tmp_2560: int, in_Tmp_2561: int, in_Tmp_2562: int, in_Tmp_2563: int, in_Tmp_2564: int, in_subStatus: int, in_Tmp_2566: int, in_pdoExtension_24: int, in_Tmp_2568: int, in_Tmp_2569: int, in_Tmp_2571: int, in_Tmp_2572: int, in_Tmp_2573: int, in_Tmp_2574: int, in_Tmp_2576: int, in_Tmp_2577: int, in_Tmp_2578: int, in_Tmp_2580: int, in_Tmp_2582: int, in_Tmp_2583: int, in_Tmp_2584: int, in_Tmp_2588: int, in_Tmp_2589: int, in_Tmp_2590: int, in_Tmp_2591: int, in_status_81: int, in_instanceNum: int, in_Tmp_2592: int, in_Tmp_2594: int, in_Tmp_2595: int, in_Tmp_2596: int, in_FdoExtension_8: int, in_DeviceRelations: int, in_vslice_dummy_var_308: int, in_vslice_dummy_var_309: int) returns (out_i_9: int, out_Tmp_2560: int, out_Tmp_2561: int, out_Tmp_2562: int, out_Tmp_2563: int, out_Tmp_2564: int, out_subStatus: int, out_Tmp_2566: int, out_pdoExtension_24: int, out_Tmp_2568: int, out_Tmp_2569: int, out_Tmp_2571: int, out_Tmp_2572: int, out_Tmp_2573: int, out_Tmp_2574: int, out_Tmp_2576: int, out_Tmp_2577: int, out_Tmp_2578: int, out_Tmp_2580: int, out_Tmp_2582: int, out_Tmp_2583: int, out_Tmp_2584: int, out_Tmp_2588: int, out_Tmp_2589: int, out_Tmp_2590: int, out_Tmp_2591: int, out_status_81: int, out_instanceNum: int, out_Tmp_2592: int, out_Tmp_2594: int, out_Tmp_2595: int, out_Tmp_2596: int, out_vslice_dummy_var_308: int, out_vslice_dummy_var_309: int);
  modifies Mem_T.P_DEVICE_OBJECT, alloc, Mem_T.LogStart__DEBUG_LOG, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2SendRequest#0_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_75: int)
{

  entry:
    goto L142, exit;

  exit:
    return;

  L142:
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon89_Then;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    call {:si_unique_call 3971} {:si_old_unique_call 1} Sbp2SendRequest#0_loop_L142(in_tick, in_s_p_e_c_i_a_l_75);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_75: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2SendRequest#0_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1396: int, in_s_p_e_c_i_a_l_75: int, in_delay: int) returns (out_Tmp_1396: int, out_s_p_e_c_i_a_l_75: int)
{

  entry:
    out_Tmp_1396, out_s_p_e_c_i_a_l_75 := in_Tmp_1396, in_s_p_e_c_i_a_l_75;
    goto L132, exit;

  exit:
    return;

  L132:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon74_Else;

  anon74_Else:
    out_Tmp_1396 := KeTickCount;
    assume {:nonnull} out_Tmp_1396 != 0;
    assume out_Tmp_1396 > 0;
    havoc out_s_p_e_c_i_a_l_75;
    goto L142;

  L142:
    call {:si_unique_call 3972} Sbp2SendRequest#0_loop_L142(in_tick, out_s_p_e_c_i_a_l_75);
    goto L142_last;

  L142_last:
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon75_Then;

  anon75_Then:
    goto anon75_Then_dummy;

  anon75_Then_dummy:
    call {:si_unique_call 3973} {:si_old_unique_call 1} out_Tmp_1396, out_s_p_e_c_i_a_l_75 := Sbp2SendRequest#0_loop_L132(in_tick, in_pComplete, out_Tmp_1396, out_s_p_e_c_i_a_l_75, in_delay);
    return;

  anon89_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1396: int, in_s_p_e_c_i_a_l_75: int, in_delay: int) returns (out_Tmp_1396: int, out_s_p_e_c_i_a_l_75: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_74: int, in_delay: int)
{

  entry:
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    goto anon87_Then;

  anon87_Then:
    goto anon87_Then_dummy;

  anon87_Then_dummy:
    call {:si_unique_call 3974} {:si_old_unique_call 1} Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_74, in_delay);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_74: int, in_delay: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2SendRequest#1_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_75: int)
{

  entry:
    goto L142, exit;

  exit:
    return;

  L142:
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_75 != 0;
    assume in_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon89_Then;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    call {:si_unique_call 3975} {:si_old_unique_call 1} Sbp2SendRequest#1_loop_L142(in_tick, in_s_p_e_c_i_a_l_75);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_75: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2SendRequest#1_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1396: int, in_s_p_e_c_i_a_l_75: int, in_delay: int) returns (out_Tmp_1396: int, out_s_p_e_c_i_a_l_75: int)
{

  entry:
    out_Tmp_1396, out_s_p_e_c_i_a_l_75 := in_Tmp_1396, in_s_p_e_c_i_a_l_75;
    goto L132, exit;

  exit:
    return;

  L132:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon74_Else;

  anon74_Else:
    out_Tmp_1396 := KeTickCount;
    assume {:nonnull} out_Tmp_1396 != 0;
    assume out_Tmp_1396 > 0;
    havoc out_s_p_e_c_i_a_l_75;
    goto L142;

  L142:
    call {:si_unique_call 3976} Sbp2SendRequest#1_loop_L142(in_tick, out_s_p_e_c_i_a_l_75);
    goto L142_last;

  L142_last:
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_75 != 0;
    assume out_s_p_e_c_i_a_l_75 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon75_Then;

  anon75_Then:
    goto anon75_Then_dummy;

  anon75_Then_dummy:
    call {:si_unique_call 3977} {:si_old_unique_call 1} out_Tmp_1396, out_s_p_e_c_i_a_l_75 := Sbp2SendRequest#1_loop_L132(in_tick, in_pComplete, out_Tmp_1396, out_s_p_e_c_i_a_l_75, in_delay);
    return;

  anon89_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1396: int, in_s_p_e_c_i_a_l_75: int, in_delay: int) returns (out_Tmp_1396: int, out_s_p_e_c_i_a_l_75: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_74: int, in_delay: int)
{

  entry:
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_74 != 0;
    assume in_s_p_e_c_i_a_l_74 > 0;
    goto anon87_Then;

  anon87_Then:
    goto anon87_Then_dummy;

  anon87_Then_dummy:
    call {:si_unique_call 3978} {:si_old_unique_call 1} Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_74, in_delay);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_74: int, in_delay: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Reset#0_loop_L26(in_Tmp_2013: int, in_Tmp_2014: int, in_Tmp_2015: int, in_transTimeout: int, in_retry: int, in_pdoExtension_19: int, in_Tmp_2016: int, in_Tmp_2017: int, in_Tmp_2018: int, in_Tmp_2019: int, in_Tmp_2020: int, in_sdv_620: int, in_Tmp_2022: int, in_Tmp_2023: int, in_transType: int, in_sdv_622: int, in_Tmp_2024: int, in_sdv_624: int, in_Tmp_2025: int, in_Tmp_2026: int, in_Tmp_2027: int, in_oldIrql_5: int, in_Tmp_2028: int, in_Tmp_2029: int, in_fdoExtension_10: int, in_sdv_626: int, in_Tmp_2030: int, in_Tmp_2031: int, in_Tmp_2032: int, in_Tmp_2033: int, in_Tmp_2034: int, in_Tmp_2035: int, in_Tmp_2036: int, in_status_64: int, in_Tmp_2037: int, in_Tmp_2038: int, in_Tmp_2039: int, in_Tmp_2040: int, in_ResetLevel: int, in_vslice_dummy_var_361: int, in_vslice_dummy_var_363: int, in_vslice_dummy_var_364: int) returns (out_Tmp_2013: int, out_Tmp_2014: int, out_Tmp_2015: int, out_transTimeout: int, out_retry: int, out_Tmp_2016: int, out_Tmp_2017: int, out_Tmp_2018: int, out_Tmp_2019: int, out_Tmp_2020: int, out_Tmp_2022: int, out_Tmp_2023: int, out_transType: int, out_sdv_622: int, out_Tmp_2024: int, out_Tmp_2025: int, out_Tmp_2026: int, out_Tmp_2027: int, out_oldIrql_5: int, out_Tmp_2028: int, out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2031: int, out_Tmp_2032: int, out_Tmp_2033: int, out_Tmp_2034: int, out_Tmp_2035: int, out_Tmp_2036: int, out_status_64: int, out_Tmp_2037: int, out_Tmp_2038: int, out_Tmp_2039: int, out_Tmp_2040: int, out_vslice_dummy_var_361: int, out_vslice_dummy_var_363: int, out_vslice_dummy_var_364: int)
{
  var vslice_dummy_var_4503: int;

  entry:
    out_Tmp_2013, out_Tmp_2014, out_Tmp_2015, out_transTimeout, out_retry, out_Tmp_2016, out_Tmp_2017, out_Tmp_2018, out_Tmp_2019, out_Tmp_2020, out_Tmp_2022, out_Tmp_2023, out_transType, out_sdv_622, out_Tmp_2024, out_Tmp_2025, out_Tmp_2026, out_Tmp_2027, out_oldIrql_5, out_Tmp_2028, out_Tmp_2029, out_Tmp_2030, out_Tmp_2031, out_Tmp_2032, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_status_64, out_Tmp_2037, out_Tmp_2038, out_Tmp_2039, out_Tmp_2040, out_vslice_dummy_var_361, out_vslice_dummy_var_363, out_vslice_dummy_var_364 := in_Tmp_2013, in_Tmp_2014, in_Tmp_2015, in_transTimeout, in_retry, in_Tmp_2016, in_Tmp_2017, in_Tmp_2018, in_Tmp_2019, in_Tmp_2020, in_Tmp_2022, in_Tmp_2023, in_transType, in_sdv_622, in_Tmp_2024, in_Tmp_2025, in_Tmp_2026, in_Tmp_2027, in_oldIrql_5, in_Tmp_2028, in_Tmp_2029, in_Tmp_2030, in_Tmp_2031, in_Tmp_2032, in_Tmp_2033, in_Tmp_2034, in_Tmp_2035, in_Tmp_2036, in_status_64, in_Tmp_2037, in_Tmp_2038, in_Tmp_2039, in_Tmp_2040, in_vslice_dummy_var_361, in_vslice_dummy_var_363, in_vslice_dummy_var_364;
    goto L26, exit;

  exit:
    return;

  L26:
    goto anon82_Then;

  anon82_Then:
    assume {:partition} out_retry > 0;
    out_retry := out_retry - 1;
    call {:si_unique_call 3984} Sbp2AddLog(in_pdoExtension_19, 1, -227314626, in_ResetLevel, 0);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} in_ResetLevel != 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} in_ResetLevel != 1;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} in_ResetLevel != 2;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} in_ResetLevel != 3;
    goto L187;

  L187:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2023;
    assume {:nonnull} out_Tmp_2023 != 0;
    assume out_Tmp_2023 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc out_Tmp_2028;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2036;
    call {:si_unique_call 4003} WPP_SF_q(out_Tmp_2036, 64, out_Tmp_2028, in_pdoExtension_19);
    goto L188;

  L188:
    call {:si_unique_call 4001} out_Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2032 != 0;
    assume out_Tmp_2032 > 0;
    call {:si_unique_call 4002} sdv_KeAcquireSpinLock(0, out_Tmp_2032);
    assume {:nonnull} out_Tmp_2032 != 0;
    assume out_Tmp_2032 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_fdoExtension_10 != 0;
    assume in_fdoExtension_10 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(in_fdoExtension_10)], 16777216) != 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    goto L201;

  L201:
    call {:si_unique_call 3999} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 4000} CleanupOrbList#0(in_pdoExtension_19, -1073741248);
    goto anon119_Else;

  anon119_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3998} out_status_64 := Sbp2QueueManagementWorkItem#0(in_pdoExtension_19, 4, -1);
    goto anon120_Else;

  anon120_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  L92:
    call {:si_unique_call 3982} Sbp2AddLog(in_pdoExtension_19, 1, -227314639, out_status_64, out_retry);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} out_status_64 == -1072562032;
    goto L98;

  L98:
    goto anon88_Else;

  anon88_Else:
    assume {:partition} out_retry != 0;
    call {:si_unique_call 3980} out_vslice_dummy_var_361 := KeCancelTimer(0);
    call {:si_unique_call 3981} out_status_64 := Sbp2UpdateNodeInformation#0(in_pdoExtension_19);
    goto anon104_Else;

  anon104_Else:
    assume {:partition} yogi_error != 1;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2039;
    assume {:nonnull} out_Tmp_2039 != 0;
    assume out_Tmp_2039 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc out_Tmp_2033;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2027;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc vslice_dummy_var_4503;
    call {:si_unique_call 3979} WPP_SF_qDD(out_Tmp_2027, 65, out_Tmp_2033, in_pdoExtension_19, out_status_64, vslice_dummy_var_4503);
    goto anon91_Else_dummy;

  anon91_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 4004} {:si_old_unique_call 1} out_Tmp_2013, out_Tmp_2014, out_Tmp_2015, out_transTimeout, out_retry, out_Tmp_2016, out_Tmp_2017, out_Tmp_2018, out_Tmp_2019, out_Tmp_2020, out_Tmp_2022, out_Tmp_2023, out_transType, out_sdv_622, out_Tmp_2024, out_Tmp_2025, out_Tmp_2026, out_Tmp_2027, out_oldIrql_5, out_Tmp_2028, out_Tmp_2029, out_Tmp_2030, out_Tmp_2031, out_Tmp_2032, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_status_64, out_Tmp_2037, out_Tmp_2038, out_Tmp_2039, out_Tmp_2040, out_vslice_dummy_var_361, out_vslice_dummy_var_363, out_vslice_dummy_var_364 := Sbp2Reset#0_loop_L26(out_Tmp_2013, out_Tmp_2014, out_Tmp_2015, out_transTimeout, out_retry, in_pdoExtension_19, out_Tmp_2016, out_Tmp_2017, out_Tmp_2018, out_Tmp_2019, out_Tmp_2020, in_sdv_620, out_Tmp_2022, out_Tmp_2023, out_transType, out_sdv_622, out_Tmp_2024, in_sdv_624, out_Tmp_2025, out_Tmp_2026, out_Tmp_2027, out_oldIrql_5, out_Tmp_2028, out_Tmp_2029, in_fdoExtension_10, in_sdv_626, out_Tmp_2030, out_Tmp_2031, out_Tmp_2032, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_status_64, out_Tmp_2037, out_Tmp_2038, out_Tmp_2039, out_Tmp_2040, in_ResetLevel, out_vslice_dummy_var_361, out_vslice_dummy_var_363, out_vslice_dummy_var_364);
    return;

  anon91_Then:
    goto anon91_Then_dummy;

  anon91_Then_dummy:
    goto L_BAF_0;

  anon105_Then:
    goto anon105_Then_dummy;

  anon105_Then_dummy:
    goto L_BAF_0;

  anon90_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon90_Then_dummy;

  anon90_Then_dummy:
    goto L_BAF_0;

  anon86_Then:
    assume {:partition} out_status_64 != -1072562032;
    goto anon87_Then;

  anon87_Then:
    assume {:partition} out_status_64 == -1073741248;
    goto L98;

  anon118_Then:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(in_fdoExtension_10)], 16777216) == 0;
    goto L201;

  anon99_Then:
    goto L188;

  anon117_Then:
    goto L188;

  anon98_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon100_Then:
    assume {:partition} in_ResetLevel == 3;
    goto L187;

  anon101_Then:
    assume {:partition} in_ResetLevel == 2;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2024;
    assume {:nonnull} out_Tmp_2024 != 0;
    assume out_Tmp_2024 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc out_Tmp_2031;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2025;
    call {:si_unique_call 3997} WPP_SF_q(out_Tmp_2025, 63, out_Tmp_2031, in_pdoExtension_19);
    goto L46;

  L46:
    out_transType := 12;
    out_transTimeout := 2;
    out_retry := 0;
    call {:si_unique_call 3992} out_Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2032 != 0;
    assume out_Tmp_2032 > 0;
    call {:si_unique_call 3993} sdv_KeAcquireSpinLock(0, out_Tmp_2032);
    assume {:nonnull} out_Tmp_2032 != 0;
    assume out_Tmp_2032 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2018;
    assume {:nonnull} out_Tmp_2018 != 0;
    assume out_Tmp_2018 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2017;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2040;
    assume {:nonnull} out_Tmp_2017 != 0;
    assume out_Tmp_2017 > 0;
    assume {:nonnull} out_Tmp_2040 != 0;
    assume out_Tmp_2040 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2037;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2016;
    assume {:nonnull} out_Tmp_2016 != 0;
    assume out_Tmp_2016 > 0;
    assume {:nonnull} out_Tmp_2037 != 0;
    assume out_Tmp_2037 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2014;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2030;
    assume {:nonnull} out_Tmp_2014 != 0;
    assume out_Tmp_2014 > 0;
    assume {:nonnull} out_Tmp_2030 != 0;
    assume out_Tmp_2030 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2035;
    assume {:nonnull} out_Tmp_2035 != 0;
    assume out_Tmp_2035 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} out_Tmp_2035 != 0;
    assume out_Tmp_2035 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} out_Tmp_2035 != 0;
    assume out_Tmp_2035 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} out_Tmp_2035 != 0;
    assume out_Tmp_2035 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2013;
    assume {:nonnull} out_Tmp_2013 != 0;
    assume out_Tmp_2013 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2038;
    assume {:nonnull} out_Tmp_2038 != 0;
    assume out_Tmp_2038 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2026;
    assume {:nonnull} out_Tmp_2026 != 0;
    assume out_Tmp_2026 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 3994} Sbp2SetManagementTimer(in_pdoExtension_19, out_transTimeout);
    call {:si_unique_call 3995} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3996} CleanupOrbList#0(in_pdoExtension_19, -1073741248);
    goto anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 3991} out_status_64 := Sbp2AccessRegister#0(in_pdoExtension_19, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(in_pdoExtension_19)), 1024);
    goto anon116_Else;

  anon116_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon85_Then:
    goto L46;

  anon114_Then:
    goto L46;

  anon84_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon102_Then:
    assume {:partition} in_ResetLevel == 1;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2019;
    assume {:nonnull} out_Tmp_2019 != 0;
    assume out_Tmp_2019 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    havoc out_Tmp_2022;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2034;
    call {:si_unique_call 3988} WPP_SF_q(out_Tmp_2034, 62, out_Tmp_2022, in_pdoExtension_19);
    goto L149;

  L149:
    call {:si_unique_call 3987} out_sdv_622 := sdv_KeGetCurrentIrql();
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} 2 > out_sdv_622;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 3990} out_vslice_dummy_var_363 := Sbp2AccessRegister#0(in_pdoExtension_19, Reserved__DEVICE_EXTENSION(in_pdoExtension_19), 320);
    goto anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 3989} out_status_64 := Sbp2AccessRegister#0(in_pdoExtension_19, Reserved__DEVICE_EXTENSION(in_pdoExtension_19), 258);
    goto anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon95_Then:
    assume {:partition} out_sdv_622 >= 2;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 3986} out_vslice_dummy_var_364 := Sbp2AccessRegister#0(in_pdoExtension_19, Reserved__DEVICE_EXTENSION(in_pdoExtension_19), 1088);
    goto anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 3985} out_status_64 := Sbp2AccessRegister#0(in_pdoExtension_19, Reserved__DEVICE_EXTENSION(in_pdoExtension_19), 1026);
    goto anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon94_Then:
    goto L149;

  anon109_Then:
    goto L149;

  anon93_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon83_Then:
    assume {:partition} in_ResetLevel == 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2029;
    assume {:nonnull} out_Tmp_2029 != 0;
    assume out_Tmp_2029 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc out_Tmp_2015;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2020;
    call {:si_unique_call 3983} WPP_SF_q(out_Tmp_2020, 61, out_Tmp_2015, in_pdoExtension_19);
    goto L178;

  L178:
    out_retry := 0;
    goto L92;

  anon97_Then:
    goto L178;

  anon103_Then:
    goto L178;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:LoopProcedure} Sbp2Reset#0_loop_L26(in_Tmp_2013: int, in_Tmp_2014: int, in_Tmp_2015: int, in_transTimeout: int, in_retry: int, in_pdoExtension_19: int, in_Tmp_2016: int, in_Tmp_2017: int, in_Tmp_2018: int, in_Tmp_2019: int, in_Tmp_2020: int, in_sdv_620: int, in_Tmp_2022: int, in_Tmp_2023: int, in_transType: int, in_sdv_622: int, in_Tmp_2024: int, in_sdv_624: int, in_Tmp_2025: int, in_Tmp_2026: int, in_Tmp_2027: int, in_oldIrql_5: int, in_Tmp_2028: int, in_Tmp_2029: int, in_fdoExtension_10: int, in_sdv_626: int, in_Tmp_2030: int, in_Tmp_2031: int, in_Tmp_2032: int, in_Tmp_2033: int, in_Tmp_2034: int, in_Tmp_2035: int, in_Tmp_2036: int, in_status_64: int, in_Tmp_2037: int, in_Tmp_2038: int, in_Tmp_2039: int, in_Tmp_2040: int, in_ResetLevel: int, in_vslice_dummy_var_361: int, in_vslice_dummy_var_363: int, in_vslice_dummy_var_364: int) returns (out_Tmp_2013: int, out_Tmp_2014: int, out_Tmp_2015: int, out_transTimeout: int, out_retry: int, out_Tmp_2016: int, out_Tmp_2017: int, out_Tmp_2018: int, out_Tmp_2019: int, out_Tmp_2020: int, out_Tmp_2022: int, out_Tmp_2023: int, out_transType: int, out_sdv_622: int, out_Tmp_2024: int, out_Tmp_2025: int, out_Tmp_2026: int, out_Tmp_2027: int, out_oldIrql_5: int, out_Tmp_2028: int, out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2031: int, out_Tmp_2032: int, out_Tmp_2033: int, out_Tmp_2034: int, out_Tmp_2035: int, out_Tmp_2036: int, out_status_64: int, out_Tmp_2037: int, out_Tmp_2038: int, out_Tmp_2039: int, out_Tmp_2040: int, out_vslice_dummy_var_361: int, out_vslice_dummy_var_363: int, out_vslice_dummy_var_364: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_transTimeout == 2 || out_transTimeout == in_transTimeout;
  free ensures {:va_keep} out_transType == 12 || out_transType == in_transType;
  free ensures {:va_keep} out_vslice_dummy_var_361 == 1 || out_vslice_dummy_var_361 == 0 || out_vslice_dummy_var_361 == in_vslice_dummy_var_361;
  free ensures {:va_keep} out_vslice_dummy_var_363 == -1073741632 || out_vslice_dummy_var_363 == -1073741670 || out_vslice_dummy_var_363 == in_vslice_dummy_var_363;
  free ensures {:va_keep} out_vslice_dummy_var_364 == -1073741632 || out_vslice_dummy_var_364 == -1073741670 || out_vslice_dummy_var_364 == in_vslice_dummy_var_364;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2Reset#1_loop_L26(in_Tmp_2013: int, in_Tmp_2014: int, in_Tmp_2015: int, in_transTimeout: int, in_retry: int, in_pdoExtension_19: int, in_Tmp_2016: int, in_Tmp_2017: int, in_Tmp_2018: int, in_Tmp_2019: int, in_Tmp_2020: int, in_sdv_620: int, in_Tmp_2022: int, in_Tmp_2023: int, in_transType: int, in_sdv_622: int, in_Tmp_2024: int, in_sdv_624: int, in_Tmp_2025: int, in_Tmp_2026: int, in_Tmp_2027: int, in_oldIrql_5: int, in_Tmp_2028: int, in_Tmp_2029: int, in_fdoExtension_10: int, in_sdv_626: int, in_Tmp_2030: int, in_Tmp_2031: int, in_Tmp_2032: int, in_Tmp_2033: int, in_Tmp_2034: int, in_Tmp_2035: int, in_Tmp_2036: int, in_status_64: int, in_Tmp_2037: int, in_Tmp_2038: int, in_Tmp_2039: int, in_Tmp_2040: int, in_ResetLevel: int, in_vslice_dummy_var_365: int, in_vslice_dummy_var_367: int, in_vslice_dummy_var_368: int) returns (out_Tmp_2013: int, out_Tmp_2014: int, out_Tmp_2015: int, out_transTimeout: int, out_retry: int, out_Tmp_2016: int, out_Tmp_2017: int, out_Tmp_2018: int, out_Tmp_2019: int, out_Tmp_2020: int, out_Tmp_2022: int, out_Tmp_2023: int, out_transType: int, out_sdv_622: int, out_Tmp_2024: int, out_Tmp_2025: int, out_Tmp_2026: int, out_Tmp_2027: int, out_oldIrql_5: int, out_Tmp_2028: int, out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2031: int, out_Tmp_2032: int, out_Tmp_2033: int, out_Tmp_2034: int, out_Tmp_2035: int, out_Tmp_2036: int, out_status_64: int, out_Tmp_2037: int, out_Tmp_2038: int, out_Tmp_2039: int, out_Tmp_2040: int, out_vslice_dummy_var_365: int, out_vslice_dummy_var_367: int, out_vslice_dummy_var_368: int)
{
  var vslice_dummy_var_4504: int;

  entry:
    out_Tmp_2013, out_Tmp_2014, out_Tmp_2015, out_transTimeout, out_retry, out_Tmp_2016, out_Tmp_2017, out_Tmp_2018, out_Tmp_2019, out_Tmp_2020, out_Tmp_2022, out_Tmp_2023, out_transType, out_sdv_622, out_Tmp_2024, out_Tmp_2025, out_Tmp_2026, out_Tmp_2027, out_oldIrql_5, out_Tmp_2028, out_Tmp_2029, out_Tmp_2030, out_Tmp_2031, out_Tmp_2032, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_status_64, out_Tmp_2037, out_Tmp_2038, out_Tmp_2039, out_Tmp_2040, out_vslice_dummy_var_365, out_vslice_dummy_var_367, out_vslice_dummy_var_368 := in_Tmp_2013, in_Tmp_2014, in_Tmp_2015, in_transTimeout, in_retry, in_Tmp_2016, in_Tmp_2017, in_Tmp_2018, in_Tmp_2019, in_Tmp_2020, in_Tmp_2022, in_Tmp_2023, in_transType, in_sdv_622, in_Tmp_2024, in_Tmp_2025, in_Tmp_2026, in_Tmp_2027, in_oldIrql_5, in_Tmp_2028, in_Tmp_2029, in_Tmp_2030, in_Tmp_2031, in_Tmp_2032, in_Tmp_2033, in_Tmp_2034, in_Tmp_2035, in_Tmp_2036, in_status_64, in_Tmp_2037, in_Tmp_2038, in_Tmp_2039, in_Tmp_2040, in_vslice_dummy_var_365, in_vslice_dummy_var_367, in_vslice_dummy_var_368;
    goto L26, exit;

  exit:
    return;

  L26:
    goto anon82_Then;

  anon82_Then:
    assume {:partition} out_retry > 0;
    out_retry := out_retry - 1;
    call {:si_unique_call 4010} Sbp2AddLog(in_pdoExtension_19, 1, -227314626, in_ResetLevel, 0);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} in_ResetLevel != 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} in_ResetLevel != 1;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} in_ResetLevel != 2;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} in_ResetLevel != 3;
    goto L187;

  L187:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2023;
    assume {:nonnull} out_Tmp_2023 != 0;
    assume out_Tmp_2023 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc out_Tmp_2028;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2036;
    call {:si_unique_call 4029} WPP_SF_q(out_Tmp_2036, 64, out_Tmp_2028, in_pdoExtension_19);
    goto L188;

  L188:
    call {:si_unique_call 4027} out_Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2032 != 0;
    assume out_Tmp_2032 > 0;
    call {:si_unique_call 4028} sdv_KeAcquireSpinLock(0, out_Tmp_2032);
    assume {:nonnull} out_Tmp_2032 != 0;
    assume out_Tmp_2032 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_fdoExtension_10 != 0;
    assume in_fdoExtension_10 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(in_fdoExtension_10)], 16777216) != 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    goto L201;

  L201:
    call {:si_unique_call 4025} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 4026} CleanupOrbList#1(in_pdoExtension_19, -1073741248);
    goto anon119_Else;

  anon119_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4024} out_status_64 := Sbp2QueueManagementWorkItem#1(in_pdoExtension_19, 4, -1);
    goto anon120_Else;

  anon120_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  L92:
    call {:si_unique_call 4008} Sbp2AddLog(in_pdoExtension_19, 1, -227314639, out_status_64, out_retry);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} out_status_64 == -1072562032;
    goto L98;

  L98:
    goto anon88_Else;

  anon88_Else:
    assume {:partition} out_retry != 0;
    call {:si_unique_call 4006} out_vslice_dummy_var_365 := KeCancelTimer(0);
    call {:si_unique_call 4007} out_status_64 := Sbp2UpdateNodeInformation#1(in_pdoExtension_19);
    goto anon104_Else;

  anon104_Else:
    assume {:partition} yogi_error != 1;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2039;
    assume {:nonnull} out_Tmp_2039 != 0;
    assume out_Tmp_2039 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc out_Tmp_2033;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2027;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc vslice_dummy_var_4504;
    call {:si_unique_call 4005} WPP_SF_qDD(out_Tmp_2027, 65, out_Tmp_2033, in_pdoExtension_19, out_status_64, vslice_dummy_var_4504);
    goto anon91_Else_dummy;

  anon91_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 4030} {:si_old_unique_call 1} out_Tmp_2013, out_Tmp_2014, out_Tmp_2015, out_transTimeout, out_retry, out_Tmp_2016, out_Tmp_2017, out_Tmp_2018, out_Tmp_2019, out_Tmp_2020, out_Tmp_2022, out_Tmp_2023, out_transType, out_sdv_622, out_Tmp_2024, out_Tmp_2025, out_Tmp_2026, out_Tmp_2027, out_oldIrql_5, out_Tmp_2028, out_Tmp_2029, out_Tmp_2030, out_Tmp_2031, out_Tmp_2032, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_status_64, out_Tmp_2037, out_Tmp_2038, out_Tmp_2039, out_Tmp_2040, out_vslice_dummy_var_365, out_vslice_dummy_var_367, out_vslice_dummy_var_368 := Sbp2Reset#1_loop_L26(out_Tmp_2013, out_Tmp_2014, out_Tmp_2015, out_transTimeout, out_retry, in_pdoExtension_19, out_Tmp_2016, out_Tmp_2017, out_Tmp_2018, out_Tmp_2019, out_Tmp_2020, in_sdv_620, out_Tmp_2022, out_Tmp_2023, out_transType, out_sdv_622, out_Tmp_2024, in_sdv_624, out_Tmp_2025, out_Tmp_2026, out_Tmp_2027, out_oldIrql_5, out_Tmp_2028, out_Tmp_2029, in_fdoExtension_10, in_sdv_626, out_Tmp_2030, out_Tmp_2031, out_Tmp_2032, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_status_64, out_Tmp_2037, out_Tmp_2038, out_Tmp_2039, out_Tmp_2040, in_ResetLevel, out_vslice_dummy_var_365, out_vslice_dummy_var_367, out_vslice_dummy_var_368);
    return;

  anon91_Then:
    goto anon91_Then_dummy;

  anon91_Then_dummy:
    goto L_BAF_1;

  anon105_Then:
    goto anon105_Then_dummy;

  anon105_Then_dummy:
    goto L_BAF_1;

  anon90_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon90_Then_dummy;

  anon90_Then_dummy:
    goto L_BAF_1;

  anon86_Then:
    assume {:partition} out_status_64 != -1072562032;
    goto anon87_Then;

  anon87_Then:
    assume {:partition} out_status_64 == -1073741248;
    goto L98;

  anon118_Then:
    assume {:partition} BAND(Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION[DeviceFlags__FDO_DEVICE_EXTENSION(in_fdoExtension_10)], 16777216) == 0;
    goto L201;

  anon99_Then:
    goto L188;

  anon117_Then:
    goto L188;

  anon98_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon100_Then:
    assume {:partition} in_ResetLevel == 3;
    goto L187;

  anon101_Then:
    assume {:partition} in_ResetLevel == 2;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2024;
    assume {:nonnull} out_Tmp_2024 != 0;
    assume out_Tmp_2024 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc out_Tmp_2031;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2025;
    call {:si_unique_call 4023} WPP_SF_q(out_Tmp_2025, 63, out_Tmp_2031, in_pdoExtension_19);
    goto L46;

  L46:
    out_transType := 12;
    out_transTimeout := 2;
    out_retry := 0;
    call {:si_unique_call 4018} out_Tmp_2032 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2032 != 0;
    assume out_Tmp_2032 > 0;
    call {:si_unique_call 4019} sdv_KeAcquireSpinLock(0, out_Tmp_2032);
    assume {:nonnull} out_Tmp_2032 != 0;
    assume out_Tmp_2032 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2018;
    assume {:nonnull} out_Tmp_2018 != 0;
    assume out_Tmp_2018 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2017;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2040;
    assume {:nonnull} out_Tmp_2017 != 0;
    assume out_Tmp_2017 > 0;
    assume {:nonnull} out_Tmp_2040 != 0;
    assume out_Tmp_2040 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2037;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2016;
    assume {:nonnull} out_Tmp_2016 != 0;
    assume out_Tmp_2016 > 0;
    assume {:nonnull} out_Tmp_2037 != 0;
    assume out_Tmp_2037 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2014;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2030;
    assume {:nonnull} out_Tmp_2014 != 0;
    assume out_Tmp_2014 > 0;
    assume {:nonnull} out_Tmp_2030 != 0;
    assume out_Tmp_2030 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2035;
    assume {:nonnull} out_Tmp_2035 != 0;
    assume out_Tmp_2035 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} out_Tmp_2035 != 0;
    assume out_Tmp_2035 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} out_Tmp_2035 != 0;
    assume out_Tmp_2035 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} out_Tmp_2035 != 0;
    assume out_Tmp_2035 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2013;
    assume {:nonnull} out_Tmp_2013 != 0;
    assume out_Tmp_2013 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2038;
    assume {:nonnull} out_Tmp_2038 != 0;
    assume out_Tmp_2038 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    havoc out_Tmp_2026;
    assume {:nonnull} out_Tmp_2026 != 0;
    assume out_Tmp_2026 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 4020} Sbp2SetManagementTimer(in_pdoExtension_19, out_transTimeout);
    call {:si_unique_call 4021} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 4022} CleanupOrbList#1(in_pdoExtension_19, -1073741248);
    goto anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 4017} out_status_64 := Sbp2AccessRegister#1(in_pdoExtension_19, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(in_pdoExtension_19)), 1024);
    goto anon116_Else;

  anon116_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon85_Then:
    goto L46;

  anon114_Then:
    goto L46;

  anon84_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon102_Then:
    assume {:partition} in_ResetLevel == 1;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2019;
    assume {:nonnull} out_Tmp_2019 != 0;
    assume out_Tmp_2019 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    havoc out_Tmp_2022;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2034;
    call {:si_unique_call 4014} WPP_SF_q(out_Tmp_2034, 62, out_Tmp_2022, in_pdoExtension_19);
    goto L149;

  L149:
    call {:si_unique_call 4013} out_sdv_622 := sdv_KeGetCurrentIrql();
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} 2 > out_sdv_622;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 4016} out_vslice_dummy_var_367 := Sbp2AccessRegister#1(in_pdoExtension_19, Reserved__DEVICE_EXTENSION(in_pdoExtension_19), 320);
    goto anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 4015} out_status_64 := Sbp2AccessRegister#1(in_pdoExtension_19, Reserved__DEVICE_EXTENSION(in_pdoExtension_19), 258);
    goto anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon95_Then:
    assume {:partition} out_sdv_622 >= 2;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 4012} out_vslice_dummy_var_368 := Sbp2AccessRegister#1(in_pdoExtension_19, Reserved__DEVICE_EXTENSION(in_pdoExtension_19), 1088);
    goto anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_19 != 0;
    assume in_pdoExtension_19 > 0;
    call {:si_unique_call 4011} out_status_64 := Sbp2AccessRegister#1(in_pdoExtension_19, Reserved__DEVICE_EXTENSION(in_pdoExtension_19), 1026);
    goto anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon94_Then:
    goto L149;

  anon109_Then:
    goto L149;

  anon93_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon83_Then:
    assume {:partition} in_ResetLevel == 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2029;
    assume {:nonnull} out_Tmp_2029 != 0;
    assume out_Tmp_2029 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc out_Tmp_2015;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2020;
    call {:si_unique_call 4009} WPP_SF_q(out_Tmp_2020, 61, out_Tmp_2015, in_pdoExtension_19);
    goto L178;

  L178:
    out_retry := 0;
    goto L92;

  anon97_Then:
    goto L178;

  anon103_Then:
    goto L178;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:LoopProcedure} Sbp2Reset#1_loop_L26(in_Tmp_2013: int, in_Tmp_2014: int, in_Tmp_2015: int, in_transTimeout: int, in_retry: int, in_pdoExtension_19: int, in_Tmp_2016: int, in_Tmp_2017: int, in_Tmp_2018: int, in_Tmp_2019: int, in_Tmp_2020: int, in_sdv_620: int, in_Tmp_2022: int, in_Tmp_2023: int, in_transType: int, in_sdv_622: int, in_Tmp_2024: int, in_sdv_624: int, in_Tmp_2025: int, in_Tmp_2026: int, in_Tmp_2027: int, in_oldIrql_5: int, in_Tmp_2028: int, in_Tmp_2029: int, in_fdoExtension_10: int, in_sdv_626: int, in_Tmp_2030: int, in_Tmp_2031: int, in_Tmp_2032: int, in_Tmp_2033: int, in_Tmp_2034: int, in_Tmp_2035: int, in_Tmp_2036: int, in_status_64: int, in_Tmp_2037: int, in_Tmp_2038: int, in_Tmp_2039: int, in_Tmp_2040: int, in_ResetLevel: int, in_vslice_dummy_var_365: int, in_vslice_dummy_var_367: int, in_vslice_dummy_var_368: int) returns (out_Tmp_2013: int, out_Tmp_2014: int, out_Tmp_2015: int, out_transTimeout: int, out_retry: int, out_Tmp_2016: int, out_Tmp_2017: int, out_Tmp_2018: int, out_Tmp_2019: int, out_Tmp_2020: int, out_Tmp_2022: int, out_Tmp_2023: int, out_transType: int, out_sdv_622: int, out_Tmp_2024: int, out_Tmp_2025: int, out_Tmp_2026: int, out_Tmp_2027: int, out_oldIrql_5: int, out_Tmp_2028: int, out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2031: int, out_Tmp_2032: int, out_Tmp_2033: int, out_Tmp_2034: int, out_Tmp_2035: int, out_Tmp_2036: int, out_status_64: int, out_Tmp_2037: int, out_Tmp_2038: int, out_Tmp_2039: int, out_Tmp_2040: int, out_vslice_dummy_var_365: int, out_vslice_dummy_var_367: int, out_vslice_dummy_var_368: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_transTimeout == 2 || out_transTimeout == in_transTimeout;
  free ensures {:va_keep} out_transType == 12 || out_transType == in_transType;
  free ensures {:va_keep} out_vslice_dummy_var_365 == 1 || out_vslice_dummy_var_365 == 0 || out_vslice_dummy_var_365 == in_vslice_dummy_var_365;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation CleanupOrbList#0_loop_L42(in_Tmp_1336: int, in_Tmp_1338: int, in_Tmp_1339: int, in_pendingOrbListHead: int, in_Tmp_1340: int, in_Tmp_1341: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1343: int, in_Tmp_1344: int, in_Tmp_1345: int, in_requestIrp_1: int, in_Tmp_1346: int, in_Tmp_1347: int, in_sdv_446: int, in_Tmp_1348: int, in_currentListItem_1: int, in_Tmp_1349: int, in_sdv_448: int, in_Tmp_1350: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_373: int, in_vslice_dummy_var_375: int, in_vslice_dummy_var_376: int, in_vslice_dummy_var_377: int, in_vslice_dummy_var_378: int, in_vslice_dummy_var_379: int) returns (out_Tmp_1336: int, out_Tmp_1338: int, out_Tmp_1339: int, out_Tmp_1340: int, out_Tmp_1341: int, out_pEntry: int, out_Tmp_1343: int, out_Tmp_1344: int, out_Tmp_1345: int, out_requestIrp_1: int, out_Tmp_1346: int, out_Tmp_1347: int, out_sdv_446: int, out_Tmp_1348: int, out_currentListItem_1: int, out_Tmp_1349: int, out_sdv_448: int, out_Tmp_1350: int, out_vslice_dummy_var_373: int, out_vslice_dummy_var_375: int, out_vslice_dummy_var_376: int, out_vslice_dummy_var_377: int, out_vslice_dummy_var_378: int, out_vslice_dummy_var_379: int)
{
  var vslice_dummy_var_4505: int;

  entry:
    out_Tmp_1336, out_Tmp_1338, out_Tmp_1339, out_Tmp_1340, out_Tmp_1341, out_pEntry, out_Tmp_1343, out_Tmp_1344, out_Tmp_1345, out_requestIrp_1, out_Tmp_1346, out_Tmp_1347, out_sdv_446, out_Tmp_1348, out_currentListItem_1, out_Tmp_1349, out_sdv_448, out_Tmp_1350, out_vslice_dummy_var_373, out_vslice_dummy_var_375, out_vslice_dummy_var_376, out_vslice_dummy_var_377, out_vslice_dummy_var_378, out_vslice_dummy_var_379 := in_Tmp_1336, in_Tmp_1338, in_Tmp_1339, in_Tmp_1340, in_Tmp_1341, in_pEntry, in_Tmp_1343, in_Tmp_1344, in_Tmp_1345, in_requestIrp_1, in_Tmp_1346, in_Tmp_1347, in_sdv_446, in_Tmp_1348, in_currentListItem_1, in_Tmp_1349, in_sdv_448, in_Tmp_1350, in_vslice_dummy_var_373, in_vslice_dummy_var_375, in_vslice_dummy_var_376, in_vslice_dummy_var_377, in_vslice_dummy_var_378, in_vslice_dummy_var_379;
    goto L42, exit;

  exit:
    return;

  L42:
    call {:si_unique_call 4031} out_pEntry := RemoveHeadList(in_pendingOrbListHead);
    call {:si_unique_call 4032} InitializeListHead(out_pEntry);
    call {:si_unique_call 4033} out_sdv_446 := sdv_containing_record(out_pEntry, 0);
    out_currentListItem_1 := out_sdv_446;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    call {:si_unique_call 4035} out_vslice_dummy_var_373 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 4034} out_sdv_448 := sdv_IsListEmpty(0);
    goto anon43_Then;

  anon43_Then:
    assume {:partition} out_sdv_448 == 0;
    goto anon43_Then_dummy;

  anon43_Then_dummy:
    call {:si_unique_call 4048} {:si_old_unique_call 1} out_Tmp_1336, out_Tmp_1338, out_Tmp_1339, out_Tmp_1340, out_Tmp_1341, out_pEntry, out_Tmp_1343, out_Tmp_1344, out_Tmp_1345, out_requestIrp_1, out_Tmp_1346, out_Tmp_1347, out_sdv_446, out_Tmp_1348, out_currentListItem_1, out_Tmp_1349, out_sdv_448, out_Tmp_1350, out_vslice_dummy_var_373, out_vslice_dummy_var_375, out_vslice_dummy_var_376, out_vslice_dummy_var_377, out_vslice_dummy_var_378, out_vslice_dummy_var_379 := CleanupOrbList#0_loop_L42(out_Tmp_1336, out_Tmp_1338, out_Tmp_1339, in_pendingOrbListHead, out_Tmp_1340, out_Tmp_1341, in_orbLock_6, out_pEntry, out_Tmp_1343, out_Tmp_1344, out_Tmp_1345, out_requestIrp_1, out_Tmp_1346, out_Tmp_1347, out_sdv_446, out_Tmp_1348, out_currentListItem_1, out_Tmp_1349, out_sdv_448, out_Tmp_1350, in_DeviceExtension_4, in_CompletionStatus, out_vslice_dummy_var_373, out_vslice_dummy_var_375, out_vslice_dummy_var_376, out_vslice_dummy_var_377, out_vslice_dummy_var_378, out_vslice_dummy_var_379);
    return;

  anon53_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 4040} out_vslice_dummy_var_377 := KeCancelTimer(0);
    call {:si_unique_call 4041} ReleaseOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    call {:si_unique_call 4042} out_vslice_dummy_var_375 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1348;
    assume {:nonnull} out_Tmp_1348 != 0;
    assume out_Tmp_1348 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc out_Tmp_1344;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1341;
    call {:si_unique_call 4039} WPP_SF_q(out_Tmp_1341, 11, out_Tmp_1344, out_currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1349;
    assume {:nonnull} out_Tmp_1349 != 0;
    assume out_Tmp_1349 > 0;
    havoc out_requestIrp_1;
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1350;
    assume {:nonnull} out_Tmp_1350 != 0;
    assume out_Tmp_1350 > 0;
    goto L98;

  L98:
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1338;
    assume {:nonnull} out_Tmp_1338 != 0;
    assume out_Tmp_1338 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    call {:si_unique_call 4046} Sbp2DeferPendingRequest(in_DeviceExtension_4, out_requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 4037} out_vslice_dummy_var_378 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 4036} AcquireOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    goto L58;

  anon57_Then:
    goto L105;

  L105:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1336;
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    assume {:nonnull} out_Tmp_1336 != 0;
    assume out_Tmp_1336 > 0;
    havoc vslice_dummy_var_4505;
    call {:si_unique_call 4047} Sbp2StartPacket#0(vslice_dummy_var_4505, out_requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_1336));
    goto anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon48_Then:
    goto L105;

  anon47_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 4045} out_vslice_dummy_var_379 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1339;
    assume {:nonnull} out_Tmp_1339 != 0;
    assume out_Tmp_1339 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    havoc out_Tmp_1345;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1343;
    call {:si_unique_call 4044} WPP_SF_qq(out_Tmp_1343, 12, out_Tmp_1345, in_DeviceExtension_4, out_requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    call {:si_unique_call 4043} out_vslice_dummy_var_376 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_4), out_requestIrp_1);
    goto anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4038} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon50_Then:
    goto L123;

  anon59_Then:
    goto L123;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon46_Then:
    goto L99;

  anon51_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1340;
    assume {:nonnull} out_Tmp_1340 != 0;
    assume out_Tmp_1340 > 0;
    goto L98;

  anon52_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1347;
    assume {:nonnull} out_Tmp_1347 != 0;
    assume out_Tmp_1347 > 0;
    goto L98;

  anon56_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1346;
    assume {:nonnull} out_Tmp_1346 != 0;
    assume out_Tmp_1346 > 0;
    goto L98;

  anon45_Then:
    goto L83;

  anon55_Then:
    goto L83;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;
}



procedure {:LoopProcedure} CleanupOrbList#0_loop_L42(in_Tmp_1336: int, in_Tmp_1338: int, in_Tmp_1339: int, in_pendingOrbListHead: int, in_Tmp_1340: int, in_Tmp_1341: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1343: int, in_Tmp_1344: int, in_Tmp_1345: int, in_requestIrp_1: int, in_Tmp_1346: int, in_Tmp_1347: int, in_sdv_446: int, in_Tmp_1348: int, in_currentListItem_1: int, in_Tmp_1349: int, in_sdv_448: int, in_Tmp_1350: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_373: int, in_vslice_dummy_var_375: int, in_vslice_dummy_var_376: int, in_vslice_dummy_var_377: int, in_vslice_dummy_var_378: int, in_vslice_dummy_var_379: int) returns (out_Tmp_1336: int, out_Tmp_1338: int, out_Tmp_1339: int, out_Tmp_1340: int, out_Tmp_1341: int, out_pEntry: int, out_Tmp_1343: int, out_Tmp_1344: int, out_Tmp_1345: int, out_requestIrp_1: int, out_Tmp_1346: int, out_Tmp_1347: int, out_sdv_446: int, out_Tmp_1348: int, out_currentListItem_1: int, out_Tmp_1349: int, out_sdv_448: int, out_Tmp_1350: int, out_vslice_dummy_var_373: int, out_vslice_dummy_var_375: int, out_vslice_dummy_var_376: int, out_vslice_dummy_var_377: int, out_vslice_dummy_var_378: int, out_vslice_dummy_var_379: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_1336 == in_Tmp_1336;
  free ensures {:va_keep} out_Tmp_1338 == in_Tmp_1338;
  free ensures {:va_keep} out_Tmp_1339 == in_Tmp_1339;
  free ensures {:va_keep} out_Tmp_1340 == in_Tmp_1340;
  free ensures {:va_keep} out_Tmp_1341 == in_Tmp_1341;
  free ensures {:va_keep} out_pEntry == in_pEntry;
  free ensures {:va_keep} out_Tmp_1343 == in_Tmp_1343;
  free ensures {:va_keep} out_Tmp_1344 == in_Tmp_1344;
  free ensures {:va_keep} out_Tmp_1345 == in_Tmp_1345;
  free ensures {:va_keep} out_requestIrp_1 == in_requestIrp_1;
  free ensures {:va_keep} out_Tmp_1346 == in_Tmp_1346;
  free ensures {:va_keep} out_Tmp_1347 == in_Tmp_1347;
  free ensures {:va_keep} out_sdv_446 == in_sdv_446;
  free ensures {:va_keep} out_Tmp_1348 == in_Tmp_1348;
  free ensures {:va_keep} out_currentListItem_1 == in_currentListItem_1;
  free ensures {:va_keep} out_Tmp_1349 == in_Tmp_1349;
  free ensures {:va_keep} out_sdv_448 == in_sdv_448;
  free ensures {:va_keep} out_Tmp_1350 == in_Tmp_1350;
  free ensures {:va_keep} out_vslice_dummy_var_373 == in_vslice_dummy_var_373;
  free ensures {:va_keep} out_vslice_dummy_var_375 == in_vslice_dummy_var_375;
  free ensures {:va_keep} out_vslice_dummy_var_376 == in_vslice_dummy_var_376;
  free ensures {:va_keep} out_vslice_dummy_var_377 == in_vslice_dummy_var_377;
  free ensures {:va_keep} out_vslice_dummy_var_378 == in_vslice_dummy_var_378;
  free ensures {:va_keep} out_vslice_dummy_var_379 == in_vslice_dummy_var_379;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation CleanupOrbList#1_loop_L42(in_Tmp_1336: int, in_Tmp_1338: int, in_Tmp_1339: int, in_pendingOrbListHead: int, in_Tmp_1340: int, in_Tmp_1341: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1343: int, in_Tmp_1344: int, in_Tmp_1345: int, in_requestIrp_1: int, in_Tmp_1346: int, in_Tmp_1347: int, in_sdv_446: int, in_Tmp_1348: int, in_currentListItem_1: int, in_Tmp_1349: int, in_sdv_448: int, in_Tmp_1350: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_384: int, in_vslice_dummy_var_386: int, in_vslice_dummy_var_387: int, in_vslice_dummy_var_388: int, in_vslice_dummy_var_389: int, in_vslice_dummy_var_390: int) returns (out_Tmp_1336: int, out_Tmp_1338: int, out_Tmp_1339: int, out_Tmp_1340: int, out_Tmp_1341: int, out_pEntry: int, out_Tmp_1343: int, out_Tmp_1344: int, out_Tmp_1345: int, out_requestIrp_1: int, out_Tmp_1346: int, out_Tmp_1347: int, out_sdv_446: int, out_Tmp_1348: int, out_currentListItem_1: int, out_Tmp_1349: int, out_sdv_448: int, out_Tmp_1350: int, out_vslice_dummy_var_384: int, out_vslice_dummy_var_386: int, out_vslice_dummy_var_387: int, out_vslice_dummy_var_388: int, out_vslice_dummy_var_389: int, out_vslice_dummy_var_390: int)
{
  var vslice_dummy_var_4506: int;

  entry:
    out_Tmp_1336, out_Tmp_1338, out_Tmp_1339, out_Tmp_1340, out_Tmp_1341, out_pEntry, out_Tmp_1343, out_Tmp_1344, out_Tmp_1345, out_requestIrp_1, out_Tmp_1346, out_Tmp_1347, out_sdv_446, out_Tmp_1348, out_currentListItem_1, out_Tmp_1349, out_sdv_448, out_Tmp_1350, out_vslice_dummy_var_384, out_vslice_dummy_var_386, out_vslice_dummy_var_387, out_vslice_dummy_var_388, out_vslice_dummy_var_389, out_vslice_dummy_var_390 := in_Tmp_1336, in_Tmp_1338, in_Tmp_1339, in_Tmp_1340, in_Tmp_1341, in_pEntry, in_Tmp_1343, in_Tmp_1344, in_Tmp_1345, in_requestIrp_1, in_Tmp_1346, in_Tmp_1347, in_sdv_446, in_Tmp_1348, in_currentListItem_1, in_Tmp_1349, in_sdv_448, in_Tmp_1350, in_vslice_dummy_var_384, in_vslice_dummy_var_386, in_vslice_dummy_var_387, in_vslice_dummy_var_388, in_vslice_dummy_var_389, in_vslice_dummy_var_390;
    goto L42, exit;

  exit:
    return;

  L42:
    call {:si_unique_call 4049} out_pEntry := RemoveHeadList(in_pendingOrbListHead);
    call {:si_unique_call 4050} InitializeListHead(out_pEntry);
    call {:si_unique_call 4051} out_sdv_446 := sdv_containing_record(out_pEntry, 0);
    out_currentListItem_1 := out_sdv_446;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    call {:si_unique_call 4053} out_vslice_dummy_var_384 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 4052} out_sdv_448 := sdv_IsListEmpty(0);
    goto anon43_Then;

  anon43_Then:
    assume {:partition} out_sdv_448 == 0;
    goto anon43_Then_dummy;

  anon43_Then_dummy:
    call {:si_unique_call 4066} {:si_old_unique_call 1} out_Tmp_1336, out_Tmp_1338, out_Tmp_1339, out_Tmp_1340, out_Tmp_1341, out_pEntry, out_Tmp_1343, out_Tmp_1344, out_Tmp_1345, out_requestIrp_1, out_Tmp_1346, out_Tmp_1347, out_sdv_446, out_Tmp_1348, out_currentListItem_1, out_Tmp_1349, out_sdv_448, out_Tmp_1350, out_vslice_dummy_var_384, out_vslice_dummy_var_386, out_vslice_dummy_var_387, out_vslice_dummy_var_388, out_vslice_dummy_var_389, out_vslice_dummy_var_390 := CleanupOrbList#1_loop_L42(out_Tmp_1336, out_Tmp_1338, out_Tmp_1339, in_pendingOrbListHead, out_Tmp_1340, out_Tmp_1341, in_orbLock_6, out_pEntry, out_Tmp_1343, out_Tmp_1344, out_Tmp_1345, out_requestIrp_1, out_Tmp_1346, out_Tmp_1347, out_sdv_446, out_Tmp_1348, out_currentListItem_1, out_Tmp_1349, out_sdv_448, out_Tmp_1350, in_DeviceExtension_4, in_CompletionStatus, out_vslice_dummy_var_384, out_vslice_dummy_var_386, out_vslice_dummy_var_387, out_vslice_dummy_var_388, out_vslice_dummy_var_389, out_vslice_dummy_var_390);
    return;

  anon53_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 4058} out_vslice_dummy_var_388 := KeCancelTimer(0);
    call {:si_unique_call 4059} ReleaseOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    call {:si_unique_call 4060} out_vslice_dummy_var_386 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1348;
    assume {:nonnull} out_Tmp_1348 != 0;
    assume out_Tmp_1348 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    havoc out_Tmp_1344;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1341;
    call {:si_unique_call 4057} WPP_SF_q(out_Tmp_1341, 11, out_Tmp_1344, out_currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1349;
    assume {:nonnull} out_Tmp_1349 != 0;
    assume out_Tmp_1349 > 0;
    havoc out_requestIrp_1;
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1350;
    assume {:nonnull} out_Tmp_1350 != 0;
    assume out_Tmp_1350 > 0;
    goto L98;

  L98:
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1338;
    assume {:nonnull} out_Tmp_1338 != 0;
    assume out_Tmp_1338 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    call {:si_unique_call 4064} Sbp2DeferPendingRequest(in_DeviceExtension_4, out_requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 4055} out_vslice_dummy_var_389 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 4054} AcquireOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    goto L58;

  anon57_Then:
    goto L105;

  L105:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1336;
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    assume {:nonnull} out_Tmp_1336 != 0;
    assume out_Tmp_1336 > 0;
    havoc vslice_dummy_var_4506;
    call {:si_unique_call 4065} Sbp2StartPacket#1(vslice_dummy_var_4506, out_requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_1336));
    goto anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon48_Then:
    goto L105;

  anon47_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 4063} out_vslice_dummy_var_390 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1339;
    assume {:nonnull} out_Tmp_1339 != 0;
    assume out_Tmp_1339 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    havoc out_Tmp_1345;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1343;
    call {:si_unique_call 4062} WPP_SF_qq(out_Tmp_1343, 12, out_Tmp_1345, in_DeviceExtension_4, out_requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    call {:si_unique_call 4061} out_vslice_dummy_var_387 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_4), out_requestIrp_1);
    goto anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4056} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon50_Then:
    goto L123;

  anon59_Then:
    goto L123;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon46_Then:
    goto L99;

  anon51_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1340;
    assume {:nonnull} out_Tmp_1340 != 0;
    assume out_Tmp_1340 > 0;
    goto L98;

  anon52_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1347;
    assume {:nonnull} out_Tmp_1347 != 0;
    assume out_Tmp_1347 > 0;
    goto L98;

  anon56_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1346;
    assume {:nonnull} out_Tmp_1346 != 0;
    assume out_Tmp_1346 > 0;
    goto L98;

  anon45_Then:
    goto L83;

  anon55_Then:
    goto L83;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;
}



procedure {:LoopProcedure} CleanupOrbList#1_loop_L42(in_Tmp_1336: int, in_Tmp_1338: int, in_Tmp_1339: int, in_pendingOrbListHead: int, in_Tmp_1340: int, in_Tmp_1341: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1343: int, in_Tmp_1344: int, in_Tmp_1345: int, in_requestIrp_1: int, in_Tmp_1346: int, in_Tmp_1347: int, in_sdv_446: int, in_Tmp_1348: int, in_currentListItem_1: int, in_Tmp_1349: int, in_sdv_448: int, in_Tmp_1350: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_384: int, in_vslice_dummy_var_386: int, in_vslice_dummy_var_387: int, in_vslice_dummy_var_388: int, in_vslice_dummy_var_389: int, in_vslice_dummy_var_390: int) returns (out_Tmp_1336: int, out_Tmp_1338: int, out_Tmp_1339: int, out_Tmp_1340: int, out_Tmp_1341: int, out_pEntry: int, out_Tmp_1343: int, out_Tmp_1344: int, out_Tmp_1345: int, out_requestIrp_1: int, out_Tmp_1346: int, out_Tmp_1347: int, out_sdv_446: int, out_Tmp_1348: int, out_currentListItem_1: int, out_Tmp_1349: int, out_sdv_448: int, out_Tmp_1350: int, out_vslice_dummy_var_384: int, out_vslice_dummy_var_386: int, out_vslice_dummy_var_387: int, out_vslice_dummy_var_388: int, out_vslice_dummy_var_389: int, out_vslice_dummy_var_390: int);
  modifies alloc, Mem_T.PVOID, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} out_Tmp_1336 == in_Tmp_1336;
  free ensures {:va_keep} out_Tmp_1338 == in_Tmp_1338;
  free ensures {:va_keep} out_Tmp_1339 == in_Tmp_1339;
  free ensures {:va_keep} out_Tmp_1340 == in_Tmp_1340;
  free ensures {:va_keep} out_Tmp_1341 == in_Tmp_1341;
  free ensures {:va_keep} out_pEntry == in_pEntry;
  free ensures {:va_keep} out_Tmp_1343 == in_Tmp_1343;
  free ensures {:va_keep} out_Tmp_1344 == in_Tmp_1344;
  free ensures {:va_keep} out_Tmp_1345 == in_Tmp_1345;
  free ensures {:va_keep} out_requestIrp_1 == in_requestIrp_1;
  free ensures {:va_keep} out_Tmp_1346 == in_Tmp_1346;
  free ensures {:va_keep} out_Tmp_1347 == in_Tmp_1347;
  free ensures {:va_keep} out_sdv_446 == in_sdv_446;
  free ensures {:va_keep} out_Tmp_1348 == in_Tmp_1348;
  free ensures {:va_keep} out_currentListItem_1 == in_currentListItem_1;
  free ensures {:va_keep} out_Tmp_1349 == in_Tmp_1349;
  free ensures {:va_keep} out_sdv_448 == in_sdv_448;
  free ensures {:va_keep} out_Tmp_1350 == in_Tmp_1350;
  free ensures {:va_keep} out_vslice_dummy_var_384 == in_vslice_dummy_var_384;
  free ensures {:va_keep} out_vslice_dummy_var_386 == in_vslice_dummy_var_386;
  free ensures {:va_keep} out_vslice_dummy_var_387 == in_vslice_dummy_var_387;
  free ensures {:va_keep} out_vslice_dummy_var_388 == in_vslice_dummy_var_388;
  free ensures {:va_keep} out_vslice_dummy_var_389 == in_vslice_dummy_var_389;
  free ensures {:va_keep} out_vslice_dummy_var_390 == in_vslice_dummy_var_390;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:SIextraRecBound 8} Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_20: int, in_i_6: int, in_context_2: int) returns (out_i_6: int, out_context_2: int)
{

  entry:
    out_i_6, out_context_2 := in_i_6, in_context_2;
    goto L147, exit;

  exit:
    return;

  L147:
    assume {:CounterLoop 8} {:Counter "i_6"} true;
    goto anon187_Else;

  anon187_Else:
    assume {:partition} 8 > out_i_6;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_context_2;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    call {:si_unique_call 4067} FreeAddressRange#0(in_pdoExtension_20, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_2)));
    goto anon232_Else;

  anon232_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    out_i_6 := out_i_6 + 1;
    goto L154_dummy;

  L154_dummy:
    call {:si_unique_call 4068} {:si_old_unique_call 1} out_i_6, out_context_2 := Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_20, out_i_6, out_context_2);
    return;

  anon231_Then:
    goto L154;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_20: int, in_i_6: int, in_context_2: int) returns (out_i_6: int, out_context_2: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L167(in_Tmp_2123: int, in_pdoExtension_20: int, in_sdv_702: int, in_statusFifoElement: int, in_Tmp_2188: int, in_Tmp_2228: int) returns (out_Tmp_2123: int, out_sdv_702: int, out_statusFifoElement: int, out_Tmp_2188: int, out_Tmp_2228: int)
{
  var vslice_dummy_var_4507: int;

  entry:
    out_Tmp_2123, out_sdv_702, out_statusFifoElement, out_Tmp_2188, out_Tmp_2228 := in_Tmp_2123, in_sdv_702, in_statusFifoElement, in_Tmp_2188, in_Tmp_2228;
    goto L167, exit;

  exit:
    return;

  L167:
    goto anon188_Else;

  anon188_Else:
    assume {:partition} out_statusFifoElement != 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2188;
    assume {:nonnull} out_Tmp_2188 != 0;
    assume out_Tmp_2188 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc out_Tmp_2228;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2123;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc vslice_dummy_var_4507;
    call {:si_unique_call 4071} WPP_SF_qqq(out_Tmp_2123, 35, out_Tmp_2228, in_pdoExtension_20, out_statusFifoElement, vslice_dummy_var_4507);
    goto L175;

  L175:
    call {:si_unique_call 4069} IoFreeMdl(0);
    call {:si_unique_call 4070} out_sdv_702 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_702;
    goto L175_dummy;

  L175_dummy:
    call {:si_unique_call 4072} {:si_old_unique_call 1} out_Tmp_2123, out_sdv_702, out_statusFifoElement, out_Tmp_2188, out_Tmp_2228 := Sbp2CleanDeviceExtension#0_loop_L167(out_Tmp_2123, in_pdoExtension_20, out_sdv_702, out_statusFifoElement, out_Tmp_2188, out_Tmp_2228);
    return;

  anon190_Then:
    goto L175;

  anon233_Then:
    goto L175;

  anon189_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L167(in_Tmp_2123: int, in_pdoExtension_20: int, in_sdv_702: int, in_statusFifoElement: int, in_Tmp_2188: int, in_Tmp_2228: int) returns (out_Tmp_2123: int, out_sdv_702: int, out_statusFifoElement: int, out_Tmp_2188: int, out_Tmp_2228: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L191(in_sdv_701: int, in_Tmp_2222: int, in_packet_13: int) returns (out_sdv_701: int, out_Tmp_2222: int, out_packet_13: int)
{

  entry:
    out_sdv_701, out_Tmp_2222, out_packet_13 := in_sdv_701, in_Tmp_2222, in_packet_13;
    goto L191, exit;

  exit:
    return;

  L191:
    goto anon191_Else;

  anon191_Else:
    assume {:partition} out_packet_13 != 0;
    call {:si_unique_call 4076} sdv_ExFreePool(0);
    assume {:nonnull} out_packet_13 != 0;
    assume out_packet_13 > 0;
    havoc out_Tmp_2222;
    assume {:nonnull} out_Tmp_2222 != 0;
    assume out_Tmp_2222 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    call {:si_unique_call 4075} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 4073} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 4074} out_sdv_701 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_packet_13 := out_sdv_701;
    goto L199_dummy;

  L199_dummy:
    call {:si_unique_call 4077} {:si_old_unique_call 1} out_sdv_701, out_Tmp_2222, out_packet_13 := Sbp2CleanDeviceExtension#0_loop_L191(out_sdv_701, out_Tmp_2222, out_packet_13);
    return;

  anon234_Then:
    goto L199;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L191(in_sdv_701: int, in_Tmp_2222: int, in_packet_13: int) returns (out_sdv_701: int, out_Tmp_2222: int, out_packet_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L33(in_Tmp_2131: int, in_i_6: int, in_Tmp_2202: int, in_Tmp_2212: int, in_Tmp_2217: int, in_fdoExtension_13: int, in_DeviceObject_48: int) returns (out_Tmp_2131: int, out_i_6: int, out_Tmp_2202: int, out_Tmp_2212: int, out_Tmp_2217: int)
{

  entry:
    out_Tmp_2131, out_i_6, out_Tmp_2202, out_Tmp_2212, out_Tmp_2217 := in_Tmp_2131, in_i_6, in_Tmp_2202, in_Tmp_2212, in_Tmp_2217;
    goto L33, exit;

  exit:
    return;

  L33:
    out_Tmp_2202 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2217;
    assume {:nonnull} out_Tmp_2217 != 0;
    assume out_Tmp_2217 > 0;
    goto anon214_Else;

  anon214_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2217 + out_Tmp_2202 * 268)] != 0;
    out_Tmp_2131 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2212;
    assume {:nonnull} out_Tmp_2212 != 0;
    assume out_Tmp_2212 > 0;
    goto anon215_Then;

  anon215_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2212 + out_Tmp_2131 * 268)] != in_DeviceObject_48;
    out_i_6 := out_i_6 + 1;
    goto anon215_Then_dummy;

  anon215_Then_dummy:
    havoc out_i_6;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L33(in_Tmp_2131: int, in_i_6: int, in_Tmp_2202: int, in_Tmp_2212: int, in_Tmp_2217: int, in_fdoExtension_13: int, in_DeviceObject_48: int) returns (out_Tmp_2131: int, out_i_6: int, out_Tmp_2202: int, out_Tmp_2212: int, out_Tmp_2217: int);
  free ensures {:va_keep} out_Tmp_2131 == in_i_6 || out_Tmp_2131 == in_Tmp_2131;
  free ensures {:va_keep} out_Tmp_2202 == in_i_6 || out_Tmp_2202 == in_Tmp_2202;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L273(in_Tmp_2119: int, in_Tmp_2120: int, in_Tmp_2122: int, in_Tmp_2126: int, in_pdoExtension_20: int, in_Tmp_2132: int, in_Tmp_2134: int, in_Tmp_2135: int, in_Tmp_2136: int, in_Tmp_2137: int, in_Tmp_2138: int, in_Tmp_2139: int, in_Tmp_2141: int, in_Tmp_2142: int, in_Tmp_2143: int, in_Tmp_2146: int, in_Tmp_2147: int, in_Tmp_2148: int, in_Tmp_2149: int, in_Tmp_2151: int, in_Tmp_2153: int, in_Tmp_2155: int, in_Tmp_2156: int, in_Tmp_2157: int, in_Tmp_2160: int, in_Tmp_2163: int, in_Tmp_2164: int, in_Tmp_2166: int, in_Tmp_2167: int, in_Tmp_2168: int, in_Tmp_2169: int, in_Tmp_2174: int, in_Tmp_2176: int, in_Tmp_2177: int, in_Tmp_2179: int, in_Tmp_2180: int, in_Tmp_2181: int, in_i_6: int, in_Tmp_2184: int, in_Tmp_2186: int, in_Tmp_2187: int, in_Tmp_2192: int, in_Tmp_2194: int, in_Tmp_2196: int, in_Tmp_2200: int, in_Tmp_2201: int, in_Tmp_2203: int, in_Tmp_2204: int, in_Tmp_2206: int, in_Tmp_2207: int, in_Tmp_2209: int, in_Tmp_2215: int, in_Tmp_2216: int, in_fdoExtension_13: int, in_Tmp_2221: int, in_Tmp_2224: int, in_Tmp_2226: int, in_Tmp_2227: int, in_Tmp_2229: int, in_cIrql_11: int, in_Tmp_2230: int, in_Tmp_2234: int, in_Tmp_2235: int, in_Tmp_2240: int, in_Tmp_2242: int, in_DeviceObject_48: int) returns (out_Tmp_2119: int, out_Tmp_2120: int, out_Tmp_2122: int, out_Tmp_2126: int, out_pdoExtension_20: int, out_Tmp_2132: int, out_Tmp_2134: int, out_Tmp_2135: int, out_Tmp_2136: int, out_Tmp_2137: int, out_Tmp_2138: int, out_Tmp_2139: int, out_Tmp_2141: int, out_Tmp_2142: int, out_Tmp_2143: int, out_Tmp_2146: int, out_Tmp_2147: int, out_Tmp_2148: int, out_Tmp_2149: int, out_Tmp_2151: int, out_Tmp_2153: int, out_Tmp_2155: int, out_Tmp_2156: int, out_Tmp_2157: int, out_Tmp_2160: int, out_Tmp_2163: int, out_Tmp_2164: int, out_Tmp_2166: int, out_Tmp_2167: int, out_Tmp_2168: int, out_Tmp_2169: int, out_Tmp_2174: int, out_Tmp_2176: int, out_Tmp_2177: int, out_Tmp_2179: int, out_Tmp_2180: int, out_Tmp_2181: int, out_i_6: int, out_Tmp_2184: int, out_Tmp_2186: int, out_Tmp_2187: int, out_Tmp_2192: int, out_Tmp_2194: int, out_Tmp_2196: int, out_Tmp_2200: int, out_Tmp_2201: int, out_Tmp_2203: int, out_Tmp_2204: int, out_Tmp_2206: int, out_Tmp_2207: int, out_Tmp_2209: int, out_Tmp_2215: int, out_Tmp_2216: int, out_Tmp_2221: int, out_Tmp_2224: int, out_Tmp_2226: int, out_Tmp_2227: int, out_Tmp_2229: int, out_cIrql_11: int, out_Tmp_2230: int, out_Tmp_2234: int, out_Tmp_2235: int, out_Tmp_2240: int, out_Tmp_2242: int, out_DeviceObject_48: int)
{

  entry:
    out_Tmp_2119, out_Tmp_2120, out_Tmp_2122, out_Tmp_2126, out_pdoExtension_20, out_Tmp_2132, out_Tmp_2134, out_Tmp_2135, out_Tmp_2136, out_Tmp_2137, out_Tmp_2138, out_Tmp_2139, out_Tmp_2141, out_Tmp_2142, out_Tmp_2143, out_Tmp_2146, out_Tmp_2147, out_Tmp_2148, out_Tmp_2149, out_Tmp_2151, out_Tmp_2153, out_Tmp_2155, out_Tmp_2156, out_Tmp_2157, out_Tmp_2160, out_Tmp_2163, out_Tmp_2164, out_Tmp_2166, out_Tmp_2167, out_Tmp_2168, out_Tmp_2169, out_Tmp_2174, out_Tmp_2176, out_Tmp_2177, out_Tmp_2179, out_Tmp_2180, out_Tmp_2181, out_i_6, out_Tmp_2184, out_Tmp_2186, out_Tmp_2187, out_Tmp_2192, out_Tmp_2194, out_Tmp_2196, out_Tmp_2200, out_Tmp_2201, out_Tmp_2203, out_Tmp_2204, out_Tmp_2206, out_Tmp_2207, out_Tmp_2209, out_Tmp_2215, out_Tmp_2216, out_Tmp_2221, out_Tmp_2224, out_Tmp_2226, out_Tmp_2227, out_Tmp_2229, out_cIrql_11, out_Tmp_2230, out_Tmp_2234, out_Tmp_2235, out_Tmp_2240, out_Tmp_2242, out_DeviceObject_48 := in_Tmp_2119, in_Tmp_2120, in_Tmp_2122, in_Tmp_2126, in_pdoExtension_20, in_Tmp_2132, in_Tmp_2134, in_Tmp_2135, in_Tmp_2136, in_Tmp_2137, in_Tmp_2138, in_Tmp_2139, in_Tmp_2141, in_Tmp_2142, in_Tmp_2143, in_Tmp_2146, in_Tmp_2147, in_Tmp_2148, in_Tmp_2149, in_Tmp_2151, in_Tmp_2153, in_Tmp_2155, in_Tmp_2156, in_Tmp_2157, in_Tmp_2160, in_Tmp_2163, in_Tmp_2164, in_Tmp_2166, in_Tmp_2167, in_Tmp_2168, in_Tmp_2169, in_Tmp_2174, in_Tmp_2176, in_Tmp_2177, in_Tmp_2179, in_Tmp_2180, in_Tmp_2181, in_i_6, in_Tmp_2184, in_Tmp_2186, in_Tmp_2187, in_Tmp_2192, in_Tmp_2194, in_Tmp_2196, in_Tmp_2200, in_Tmp_2201, in_Tmp_2203, in_Tmp_2204, in_Tmp_2206, in_Tmp_2207, in_Tmp_2209, in_Tmp_2215, in_Tmp_2216, in_Tmp_2221, in_Tmp_2224, in_Tmp_2226, in_Tmp_2227, in_Tmp_2229, in_cIrql_11, in_Tmp_2230, in_Tmp_2234, in_Tmp_2235, in_Tmp_2240, in_Tmp_2242, in_DeviceObject_48;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    goto anon199_Else;

  anon199_Else:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_i_6;
    out_Tmp_2166 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2135;
    assume {:nonnull} out_Tmp_2135 != 0;
    assume out_Tmp_2135 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2135 + out_Tmp_2166 * 268)] != 0;
    out_Tmp_2119 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2151;
    assume {:nonnull} out_Tmp_2151 != 0;
    assume out_Tmp_2151 > 0;
    out_Tmp_2142 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2151 + out_Tmp_2119 * 268)];
    assume {:nonnull} out_Tmp_2142 != 0;
    assume out_Tmp_2142 > 0;
    out_pdoExtension_20 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(out_Tmp_2142)];
    assume {:nonnull} out_pdoExtension_20 != 0;
    assume out_pdoExtension_20 > 0;
    goto anon243_Else;

  anon243_Else:
    out_Tmp_2201 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2184;
    assume {:nonnull} out_Tmp_2184 != 0;
    assume out_Tmp_2184 > 0;
    out_DeviceObject_48 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2184 + out_Tmp_2201 * 268)];
    out_Tmp_2192 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2230;
    assume {:nonnull} out_Tmp_2230 != 0;
    assume out_Tmp_2230 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    out_Tmp_2181 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2215;
    assume {:nonnull} out_Tmp_2215 != 0;
    assume out_Tmp_2215 > 0;
    call {:si_unique_call 4089} sdv_ExFreePool(0);
    out_Tmp_2176 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2194;
    assume {:nonnull} out_Tmp_2194 != 0;
    assume out_Tmp_2194 > 0;
    out_Tmp_2120 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2240;
    assume {:nonnull} out_Tmp_2240 != 0;
    assume out_Tmp_2240 > 0;
    goto L283;

  L283:
    out_Tmp_2200 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2157;
    assume {:nonnull} out_Tmp_2157 != 0;
    assume out_Tmp_2157 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    out_Tmp_2148 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2242;
    assume {:nonnull} out_Tmp_2242 != 0;
    assume out_Tmp_2242 > 0;
    call {:si_unique_call 4088} sdv_ExFreePool(0);
    out_Tmp_2227 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2196;
    assume {:nonnull} out_Tmp_2196 != 0;
    assume out_Tmp_2196 > 0;
    out_Tmp_2206 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2235;
    assume {:nonnull} out_Tmp_2235 != 0;
    assume out_Tmp_2235 > 0;
    goto L290;

  L290:
    out_Tmp_2143 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2153;
    assume {:nonnull} out_Tmp_2153 != 0;
    assume out_Tmp_2153 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    out_Tmp_2216 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2167;
    assume {:nonnull} out_Tmp_2167 != 0;
    assume out_Tmp_2167 > 0;
    call {:si_unique_call 4087} sdv_ExFreePool(0);
    out_Tmp_2179 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2138;
    assume {:nonnull} out_Tmp_2138 != 0;
    assume out_Tmp_2138 > 0;
    out_Tmp_2203 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2126;
    assume {:nonnull} out_Tmp_2126 != 0;
    assume out_Tmp_2126 > 0;
    goto L297;

  L297:
    out_Tmp_2186 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2141;
    assume {:nonnull} out_Tmp_2141 != 0;
    assume out_Tmp_2141 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2141 + out_Tmp_2186 * 268)] := 0;
    call {:si_unique_call 4085} sdv_KeReleaseSpinLock(0, out_cIrql_11);
    call {:si_unique_call 4086} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto anon247_Else;

  anon247_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4084} IoDeleteDevice(0);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2160;
    assume {:nonnull} out_Tmp_2160 != 0;
    assume out_Tmp_2160 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc out_Tmp_2169;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2155;
    call {:si_unique_call 4083} WPP_SF_q(out_Tmp_2155, 37, out_Tmp_2169, out_pdoExtension_20);
    goto L317;

  L317:
    call {:si_unique_call 4078} out_Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    call {:si_unique_call 4079} sdv_KeAcquireSpinLock(0, out_Tmp_2180);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    havoc out_cIrql_11;
    goto L328;

  L328:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    goto L328_dummy;

  L328_dummy:
    call {:si_unique_call 4090} {:si_old_unique_call 1} out_Tmp_2119, out_Tmp_2120, out_Tmp_2122, out_Tmp_2126, out_pdoExtension_20, out_Tmp_2132, out_Tmp_2134, out_Tmp_2135, out_Tmp_2136, out_Tmp_2137, out_Tmp_2138, out_Tmp_2139, out_Tmp_2141, out_Tmp_2142, out_Tmp_2143, out_Tmp_2146, out_Tmp_2147, out_Tmp_2148, out_Tmp_2149, out_Tmp_2151, out_Tmp_2153, out_Tmp_2155, out_Tmp_2156, out_Tmp_2157, out_Tmp_2160, out_Tmp_2163, out_Tmp_2164, out_Tmp_2166, out_Tmp_2167, out_Tmp_2168, out_Tmp_2169, out_Tmp_2174, out_Tmp_2176, out_Tmp_2177, out_Tmp_2179, out_Tmp_2180, out_Tmp_2181, out_i_6, out_Tmp_2184, out_Tmp_2186, out_Tmp_2187, out_Tmp_2192, out_Tmp_2194, out_Tmp_2196, out_Tmp_2200, out_Tmp_2201, out_Tmp_2203, out_Tmp_2204, out_Tmp_2206, out_Tmp_2207, out_Tmp_2209, out_Tmp_2215, out_Tmp_2216, out_Tmp_2221, out_Tmp_2224, out_Tmp_2226, out_Tmp_2227, out_Tmp_2229, out_cIrql_11, out_Tmp_2230, out_Tmp_2234, out_Tmp_2235, out_Tmp_2240, out_Tmp_2242, out_DeviceObject_48 := Sbp2CleanDeviceExtension#0_loop_L273(out_Tmp_2119, out_Tmp_2120, out_Tmp_2122, out_Tmp_2126, out_pdoExtension_20, out_Tmp_2132, out_Tmp_2134, out_Tmp_2135, out_Tmp_2136, out_Tmp_2137, out_Tmp_2138, out_Tmp_2139, out_Tmp_2141, out_Tmp_2142, out_Tmp_2143, out_Tmp_2146, out_Tmp_2147, out_Tmp_2148, out_Tmp_2149, out_Tmp_2151, out_Tmp_2153, out_Tmp_2155, out_Tmp_2156, out_Tmp_2157, out_Tmp_2160, out_Tmp_2163, out_Tmp_2164, out_Tmp_2166, out_Tmp_2167, out_Tmp_2168, out_Tmp_2169, out_Tmp_2174, out_Tmp_2176, out_Tmp_2177, out_Tmp_2179, out_Tmp_2180, out_Tmp_2181, out_i_6, out_Tmp_2184, out_Tmp_2186, out_Tmp_2187, out_Tmp_2192, out_Tmp_2194, out_Tmp_2196, out_Tmp_2200, out_Tmp_2201, out_Tmp_2203, out_Tmp_2204, out_Tmp_2206, out_Tmp_2207, out_Tmp_2209, out_Tmp_2215, out_Tmp_2216, in_fdoExtension_13, out_Tmp_2221, out_Tmp_2224, out_Tmp_2226, out_Tmp_2227, out_Tmp_2229, out_cIrql_11, out_Tmp_2230, out_Tmp_2234, out_Tmp_2235, out_Tmp_2240, out_Tmp_2242, out_DeviceObject_48);
    return;

  anon202_Then:
    goto L317;

  anon248_Then:
    goto L317;

  anon201_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon246_Then:
    goto L297;

  anon245_Then:
    goto L290;

  anon244_Then:
    goto L283;

  anon242_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2135 + out_Tmp_2166 * 268)] == 0;
    goto L277;

  L277:
    out_Tmp_2164 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2137;
    assume {:nonnull} out_Tmp_2137 != 0;
    assume out_Tmp_2137 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    out_Tmp_2187 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2163;
    assume {:nonnull} out_Tmp_2163 != 0;
    assume out_Tmp_2163 > 0;
    call {:si_unique_call 4082} sdv_ExFreePool(0);
    out_Tmp_2132 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2139;
    assume {:nonnull} out_Tmp_2139 != 0;
    assume out_Tmp_2139 > 0;
    out_Tmp_2174 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2221;
    assume {:nonnull} out_Tmp_2221 != 0;
    assume out_Tmp_2221 > 0;
    goto L423;

  L423:
    out_Tmp_2234 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2168;
    assume {:nonnull} out_Tmp_2168 != 0;
    assume out_Tmp_2168 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    out_Tmp_2149 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2224;
    assume {:nonnull} out_Tmp_2224 != 0;
    assume out_Tmp_2224 > 0;
    call {:si_unique_call 4081} sdv_ExFreePool(0);
    out_Tmp_2147 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2177;
    assume {:nonnull} out_Tmp_2177 != 0;
    assume out_Tmp_2177 > 0;
    out_Tmp_2204 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2156;
    assume {:nonnull} out_Tmp_2156 != 0;
    assume out_Tmp_2156 > 0;
    goto L430;

  L430:
    out_Tmp_2209 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2146;
    assume {:nonnull} out_Tmp_2146 != 0;
    assume out_Tmp_2146 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    out_Tmp_2136 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2207;
    assume {:nonnull} out_Tmp_2207 != 0;
    assume out_Tmp_2207 > 0;
    call {:si_unique_call 4080} sdv_ExFreePool(0);
    out_Tmp_2226 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2134;
    assume {:nonnull} out_Tmp_2134 != 0;
    assume out_Tmp_2134 > 0;
    out_Tmp_2229 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2122;
    assume {:nonnull} out_Tmp_2122 != 0;
    assume out_Tmp_2122 > 0;
    goto L328;

  anon256_Then:
    goto L328;

  anon255_Then:
    goto L430;

  anon254_Then:
    goto L423;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L273(in_Tmp_2119: int, in_Tmp_2120: int, in_Tmp_2122: int, in_Tmp_2126: int, in_pdoExtension_20: int, in_Tmp_2132: int, in_Tmp_2134: int, in_Tmp_2135: int, in_Tmp_2136: int, in_Tmp_2137: int, in_Tmp_2138: int, in_Tmp_2139: int, in_Tmp_2141: int, in_Tmp_2142: int, in_Tmp_2143: int, in_Tmp_2146: int, in_Tmp_2147: int, in_Tmp_2148: int, in_Tmp_2149: int, in_Tmp_2151: int, in_Tmp_2153: int, in_Tmp_2155: int, in_Tmp_2156: int, in_Tmp_2157: int, in_Tmp_2160: int, in_Tmp_2163: int, in_Tmp_2164: int, in_Tmp_2166: int, in_Tmp_2167: int, in_Tmp_2168: int, in_Tmp_2169: int, in_Tmp_2174: int, in_Tmp_2176: int, in_Tmp_2177: int, in_Tmp_2179: int, in_Tmp_2180: int, in_Tmp_2181: int, in_i_6: int, in_Tmp_2184: int, in_Tmp_2186: int, in_Tmp_2187: int, in_Tmp_2192: int, in_Tmp_2194: int, in_Tmp_2196: int, in_Tmp_2200: int, in_Tmp_2201: int, in_Tmp_2203: int, in_Tmp_2204: int, in_Tmp_2206: int, in_Tmp_2207: int, in_Tmp_2209: int, in_Tmp_2215: int, in_Tmp_2216: int, in_fdoExtension_13: int, in_Tmp_2221: int, in_Tmp_2224: int, in_Tmp_2226: int, in_Tmp_2227: int, in_Tmp_2229: int, in_cIrql_11: int, in_Tmp_2230: int, in_Tmp_2234: int, in_Tmp_2235: int, in_Tmp_2240: int, in_Tmp_2242: int, in_DeviceObject_48: int) returns (out_Tmp_2119: int, out_Tmp_2120: int, out_Tmp_2122: int, out_Tmp_2126: int, out_pdoExtension_20: int, out_Tmp_2132: int, out_Tmp_2134: int, out_Tmp_2135: int, out_Tmp_2136: int, out_Tmp_2137: int, out_Tmp_2138: int, out_Tmp_2139: int, out_Tmp_2141: int, out_Tmp_2142: int, out_Tmp_2143: int, out_Tmp_2146: int, out_Tmp_2147: int, out_Tmp_2148: int, out_Tmp_2149: int, out_Tmp_2151: int, out_Tmp_2153: int, out_Tmp_2155: int, out_Tmp_2156: int, out_Tmp_2157: int, out_Tmp_2160: int, out_Tmp_2163: int, out_Tmp_2164: int, out_Tmp_2166: int, out_Tmp_2167: int, out_Tmp_2168: int, out_Tmp_2169: int, out_Tmp_2174: int, out_Tmp_2176: int, out_Tmp_2177: int, out_Tmp_2179: int, out_Tmp_2180: int, out_Tmp_2181: int, out_i_6: int, out_Tmp_2184: int, out_Tmp_2186: int, out_Tmp_2187: int, out_Tmp_2192: int, out_Tmp_2194: int, out_Tmp_2196: int, out_Tmp_2200: int, out_Tmp_2201: int, out_Tmp_2203: int, out_Tmp_2204: int, out_Tmp_2206: int, out_Tmp_2207: int, out_Tmp_2209: int, out_Tmp_2215: int, out_Tmp_2216: int, out_Tmp_2221: int, out_Tmp_2224: int, out_Tmp_2226: int, out_Tmp_2227: int, out_Tmp_2229: int, out_cIrql_11: int, out_Tmp_2230: int, out_Tmp_2234: int, out_Tmp_2235: int, out_Tmp_2240: int, out_Tmp_2242: int, out_DeviceObject_48: int);
  modifies alloc, Mem_T.P_DEVICE_OBJECT, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_20: int, in_i_6: int, in_context_2: int) returns (out_i_6: int, out_context_2: int)
{

  entry:
    out_i_6, out_context_2 := in_i_6, in_context_2;
    goto L147, exit;

  exit:
    return;

  L147:
    assume {:CounterLoop 8} {:Counter "i_6"} true;
    goto anon187_Else;

  anon187_Else:
    assume {:partition} 8 > out_i_6;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc out_context_2;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    call {:si_unique_call 4091} FreeAddressRange#1(in_pdoExtension_20, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_2)));
    goto anon232_Else;

  anon232_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    out_i_6 := out_i_6 + 1;
    goto L154_dummy;

  L154_dummy:
    call {:si_unique_call 4092} {:si_old_unique_call 1} out_i_6, out_context_2 := Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_20, out_i_6, out_context_2);
    return;

  anon231_Then:
    goto L154;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_20: int, in_i_6: int, in_context_2: int) returns (out_i_6: int, out_context_2: int);
  modifies alloc, Mem_T.P_IRBIRP, Mem_T.PVOID, LockDepth, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L167(in_Tmp_2123: int, in_pdoExtension_20: int, in_sdv_702: int, in_statusFifoElement: int, in_Tmp_2188: int, in_Tmp_2228: int) returns (out_Tmp_2123: int, out_sdv_702: int, out_statusFifoElement: int, out_Tmp_2188: int, out_Tmp_2228: int)
{
  var vslice_dummy_var_4508: int;

  entry:
    out_Tmp_2123, out_sdv_702, out_statusFifoElement, out_Tmp_2188, out_Tmp_2228 := in_Tmp_2123, in_sdv_702, in_statusFifoElement, in_Tmp_2188, in_Tmp_2228;
    goto L167, exit;

  exit:
    return;

  L167:
    goto anon188_Else;

  anon188_Else:
    assume {:partition} out_statusFifoElement != 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2188;
    assume {:nonnull} out_Tmp_2188 != 0;
    assume out_Tmp_2188 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc out_Tmp_2228;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2123;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    havoc vslice_dummy_var_4508;
    call {:si_unique_call 4095} WPP_SF_qqq(out_Tmp_2123, 35, out_Tmp_2228, in_pdoExtension_20, out_statusFifoElement, vslice_dummy_var_4508);
    goto L175;

  L175:
    call {:si_unique_call 4093} IoFreeMdl(0);
    call {:si_unique_call 4094} out_sdv_702 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_702;
    goto L175_dummy;

  L175_dummy:
    call {:si_unique_call 4096} {:si_old_unique_call 1} out_Tmp_2123, out_sdv_702, out_statusFifoElement, out_Tmp_2188, out_Tmp_2228 := Sbp2CleanDeviceExtension#1_loop_L167(out_Tmp_2123, in_pdoExtension_20, out_sdv_702, out_statusFifoElement, out_Tmp_2188, out_Tmp_2228);
    return;

  anon190_Then:
    goto L175;

  anon233_Then:
    goto L175;

  anon189_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L167(in_Tmp_2123: int, in_pdoExtension_20: int, in_sdv_702: int, in_statusFifoElement: int, in_Tmp_2188: int, in_Tmp_2228: int) returns (out_Tmp_2123: int, out_sdv_702: int, out_statusFifoElement: int, out_Tmp_2188: int, out_Tmp_2228: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L191(in_sdv_701: int, in_Tmp_2222: int, in_packet_13: int) returns (out_sdv_701: int, out_Tmp_2222: int, out_packet_13: int)
{

  entry:
    out_sdv_701, out_Tmp_2222, out_packet_13 := in_sdv_701, in_Tmp_2222, in_packet_13;
    goto L191, exit;

  exit:
    return;

  L191:
    goto anon191_Else;

  anon191_Else:
    assume {:partition} out_packet_13 != 0;
    call {:si_unique_call 4100} sdv_ExFreePool(0);
    assume {:nonnull} out_packet_13 != 0;
    assume out_packet_13 > 0;
    havoc out_Tmp_2222;
    assume {:nonnull} out_Tmp_2222 != 0;
    assume out_Tmp_2222 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    call {:si_unique_call 4099} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 4097} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 4098} out_sdv_701 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_packet_13 := out_sdv_701;
    goto L199_dummy;

  L199_dummy:
    call {:si_unique_call 4101} {:si_old_unique_call 1} out_sdv_701, out_Tmp_2222, out_packet_13 := Sbp2CleanDeviceExtension#1_loop_L191(out_sdv_701, out_Tmp_2222, out_packet_13);
    return;

  anon234_Then:
    goto L199;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L191(in_sdv_701: int, in_Tmp_2222: int, in_packet_13: int) returns (out_sdv_701: int, out_Tmp_2222: int, out_packet_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L33(in_Tmp_2131: int, in_i_6: int, in_Tmp_2202: int, in_Tmp_2212: int, in_Tmp_2217: int, in_fdoExtension_13: int, in_DeviceObject_48: int) returns (out_Tmp_2131: int, out_i_6: int, out_Tmp_2202: int, out_Tmp_2212: int, out_Tmp_2217: int)
{

  entry:
    out_Tmp_2131, out_i_6, out_Tmp_2202, out_Tmp_2212, out_Tmp_2217 := in_Tmp_2131, in_i_6, in_Tmp_2202, in_Tmp_2212, in_Tmp_2217;
    goto L33, exit;

  exit:
    return;

  L33:
    out_Tmp_2202 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2217;
    assume {:nonnull} out_Tmp_2217 != 0;
    assume out_Tmp_2217 > 0;
    goto anon214_Else;

  anon214_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2217 + out_Tmp_2202 * 268)] != 0;
    out_Tmp_2131 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2212;
    assume {:nonnull} out_Tmp_2212 != 0;
    assume out_Tmp_2212 > 0;
    goto anon215_Then;

  anon215_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2212 + out_Tmp_2131 * 268)] != in_DeviceObject_48;
    out_i_6 := out_i_6 + 1;
    goto anon215_Then_dummy;

  anon215_Then_dummy:
    havoc out_i_6;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L33(in_Tmp_2131: int, in_i_6: int, in_Tmp_2202: int, in_Tmp_2212: int, in_Tmp_2217: int, in_fdoExtension_13: int, in_DeviceObject_48: int) returns (out_Tmp_2131: int, out_i_6: int, out_Tmp_2202: int, out_Tmp_2212: int, out_Tmp_2217: int);
  free ensures {:va_keep} out_Tmp_2131 == in_i_6 || out_Tmp_2131 == in_Tmp_2131;
  free ensures {:va_keep} out_Tmp_2202 == in_i_6 || out_Tmp_2202 == in_Tmp_2202;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_20: int, in_sdv_706: int, in_vslice_dummy_var_421: int) returns (out_sdv_706: int, out_vslice_dummy_var_421: int)
{

  entry:
    out_sdv_706, out_vslice_dummy_var_421 := in_sdv_706, in_vslice_dummy_var_421;
    goto L379, exit;

  exit:
    return;

  L379:
    call {:si_unique_call 4102} out_sdv_706 := sdv_IsListEmpty(0);
    goto anon207_Else;

  anon207_Else:
    assume {:partition} out_sdv_706 == 0;
    assume {:nonnull} in_pdoExtension_20 != 0;
    assume in_pdoExtension_20 > 0;
    call {:si_unique_call 4103} out_vslice_dummy_var_421 := sdv_RemoveEntryList(0);
    call {:si_unique_call 4104} sdv_ExFreePool(0);
    goto anon207_Else_dummy;

  anon207_Else_dummy:
    call {:si_unique_call 4105} {:si_old_unique_call 1} out_sdv_706, out_vslice_dummy_var_421 := Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_20, out_sdv_706, out_vslice_dummy_var_421);
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_20: int, in_sdv_706: int, in_vslice_dummy_var_421: int) returns (out_sdv_706: int, out_vslice_dummy_var_421: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_706 == 1 || out_sdv_706 == 0 || out_sdv_706 == in_sdv_706;
  free ensures {:va_keep} out_vslice_dummy_var_421 == 1 || out_vslice_dummy_var_421 == 0 || out_vslice_dummy_var_421 == in_vslice_dummy_var_421;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L273(in_Tmp_2119: int, in_Tmp_2120: int, in_Tmp_2122: int, in_Tmp_2124: int, in_Tmp_2126: int, in_Tmp_2127: int, in_pdoExtension_20: int, in_Tmp_2132: int, in_Tmp_2134: int, in_Tmp_2135: int, in_Tmp_2136: int, in_Tmp_2137: int, in_Tmp_2138: int, in_Tmp_2139: int, in_Tmp_2141: int, in_Tmp_2142: int, in_Tmp_2143: int, in_Tmp_2146: int, in_Tmp_2147: int, in_Tmp_2148: int, in_Tmp_2149: int, in_Tmp_2151: int, in_Tmp_2153: int, in_Tmp_2155: int, in_Tmp_2156: int, in_Tmp_2157: int, in_Tmp_2158: int, in_Tmp_2160: int, in_sdv_706: int, in_Tmp_2162: int, in_Tmp_2163: int, in_Tmp_2164: int, in_Tmp_2166: int, in_Tmp_2167: int, in_Tmp_2168: int, in_Tmp_2169: int, in_status_70: int, in_Tmp_2174: int, in_Tmp_2175: int, in_Tmp_2176: int, in_Tmp_2177: int, in_Tmp_2179: int, in_Tmp_2180: int, in_Tmp_2181: int, in_i_6: int, in_Tmp_2182: int, in_Tmp_2184: int, in_Tmp_2186: int, in_Tmp_2187: int, in_Tmp_2189: int, in_Tmp_2192: int, in_Tmp_2194: int, in_Tmp_2195: int, in_Tmp_2196: int, in_Tmp_2197: int, in_Tmp_2200: int, in_Tmp_2201: int, in_Tmp_2203: int, in_Tmp_2204: int, in_Tmp_2206: int, in_Tmp_2207: int, in_Tmp_2209: int, in_Tmp_2210: int, in_Tmp_2215: int, in_Tmp_2216: int, in_sdv_711: int, in_fdoExtension_13: int, in_Tmp_2219: int, in_Tmp_2221: int, in_Tmp_2224: int, in_Tmp_2226: int, in_Tmp_2227: int, in_Tmp_2229: int, in_cIrql_11: int, in_Tmp_2230: int, in_Tmp_2234: int, in_Tmp_2235: int, in_Tmp_2236: int, in_Tmp_2239: int, in_Tmp_2240: int, in_Tmp_2242: int, in_DeviceObject_48: int, in_vslice_dummy_var_416: int, in_vslice_dummy_var_420: int, in_vslice_dummy_var_421: int) returns (out_Tmp_2119: int, out_Tmp_2120: int, out_Tmp_2122: int, out_Tmp_2124: int, out_Tmp_2126: int, out_Tmp_2127: int, out_pdoExtension_20: int, out_Tmp_2132: int, out_Tmp_2134: int, out_Tmp_2135: int, out_Tmp_2136: int, out_Tmp_2137: int, out_Tmp_2138: int, out_Tmp_2139: int, out_Tmp_2141: int, out_Tmp_2142: int, out_Tmp_2143: int, out_Tmp_2146: int, out_Tmp_2147: int, out_Tmp_2148: int, out_Tmp_2149: int, out_Tmp_2151: int, out_Tmp_2153: int, out_Tmp_2155: int, out_Tmp_2156: int, out_Tmp_2157: int, out_Tmp_2158: int, out_Tmp_2160: int, out_sdv_706: int, out_Tmp_2162: int, out_Tmp_2163: int, out_Tmp_2164: int, out_Tmp_2166: int, out_Tmp_2167: int, out_Tmp_2168: int, out_Tmp_2169: int, out_status_70: int, out_Tmp_2174: int, out_Tmp_2175: int, out_Tmp_2176: int, out_Tmp_2177: int, out_Tmp_2179: int, out_Tmp_2180: int, out_Tmp_2181: int, out_i_6: int, out_Tmp_2182: int, out_Tmp_2184: int, out_Tmp_2186: int, out_Tmp_2187: int, out_Tmp_2189: int, out_Tmp_2192: int, out_Tmp_2194: int, out_Tmp_2195: int, out_Tmp_2196: int, out_Tmp_2197: int, out_Tmp_2200: int, out_Tmp_2201: int, out_Tmp_2203: int, out_Tmp_2204: int, out_Tmp_2206: int, out_Tmp_2207: int, out_Tmp_2209: int, out_Tmp_2210: int, out_Tmp_2215: int, out_Tmp_2216: int, out_sdv_711: int, out_Tmp_2219: int, out_Tmp_2221: int, out_Tmp_2224: int, out_Tmp_2226: int, out_Tmp_2227: int, out_Tmp_2229: int, out_cIrql_11: int, out_Tmp_2230: int, out_Tmp_2234: int, out_Tmp_2235: int, out_Tmp_2236: int, out_Tmp_2239: int, out_Tmp_2240: int, out_Tmp_2242: int, out_DeviceObject_48: int, out_vslice_dummy_var_416: int, out_vslice_dummy_var_420: int, out_vslice_dummy_var_421: int)
{

  entry:
    out_Tmp_2119, out_Tmp_2120, out_Tmp_2122, out_Tmp_2124, out_Tmp_2126, out_Tmp_2127, out_pdoExtension_20, out_Tmp_2132, out_Tmp_2134, out_Tmp_2135, out_Tmp_2136, out_Tmp_2137, out_Tmp_2138, out_Tmp_2139, out_Tmp_2141, out_Tmp_2142, out_Tmp_2143, out_Tmp_2146, out_Tmp_2147, out_Tmp_2148, out_Tmp_2149, out_Tmp_2151, out_Tmp_2153, out_Tmp_2155, out_Tmp_2156, out_Tmp_2157, out_Tmp_2158, out_Tmp_2160, out_sdv_706, out_Tmp_2162, out_Tmp_2163, out_Tmp_2164, out_Tmp_2166, out_Tmp_2167, out_Tmp_2168, out_Tmp_2169, out_status_70, out_Tmp_2174, out_Tmp_2175, out_Tmp_2176, out_Tmp_2177, out_Tmp_2179, out_Tmp_2180, out_Tmp_2181, out_i_6, out_Tmp_2182, out_Tmp_2184, out_Tmp_2186, out_Tmp_2187, out_Tmp_2189, out_Tmp_2192, out_Tmp_2194, out_Tmp_2195, out_Tmp_2196, out_Tmp_2197, out_Tmp_2200, out_Tmp_2201, out_Tmp_2203, out_Tmp_2204, out_Tmp_2206, out_Tmp_2207, out_Tmp_2209, out_Tmp_2210, out_Tmp_2215, out_Tmp_2216, out_sdv_711, out_Tmp_2219, out_Tmp_2221, out_Tmp_2224, out_Tmp_2226, out_Tmp_2227, out_Tmp_2229, out_cIrql_11, out_Tmp_2230, out_Tmp_2234, out_Tmp_2235, out_Tmp_2236, out_Tmp_2239, out_Tmp_2240, out_Tmp_2242, out_DeviceObject_48, out_vslice_dummy_var_416, out_vslice_dummy_var_420, out_vslice_dummy_var_421 := in_Tmp_2119, in_Tmp_2120, in_Tmp_2122, in_Tmp_2124, in_Tmp_2126, in_Tmp_2127, in_pdoExtension_20, in_Tmp_2132, in_Tmp_2134, in_Tmp_2135, in_Tmp_2136, in_Tmp_2137, in_Tmp_2138, in_Tmp_2139, in_Tmp_2141, in_Tmp_2142, in_Tmp_2143, in_Tmp_2146, in_Tmp_2147, in_Tmp_2148, in_Tmp_2149, in_Tmp_2151, in_Tmp_2153, in_Tmp_2155, in_Tmp_2156, in_Tmp_2157, in_Tmp_2158, in_Tmp_2160, in_sdv_706, in_Tmp_2162, in_Tmp_2163, in_Tmp_2164, in_Tmp_2166, in_Tmp_2167, in_Tmp_2168, in_Tmp_2169, in_status_70, in_Tmp_2174, in_Tmp_2175, in_Tmp_2176, in_Tmp_2177, in_Tmp_2179, in_Tmp_2180, in_Tmp_2181, in_i_6, in_Tmp_2182, in_Tmp_2184, in_Tmp_2186, in_Tmp_2187, in_Tmp_2189, in_Tmp_2192, in_Tmp_2194, in_Tmp_2195, in_Tmp_2196, in_Tmp_2197, in_Tmp_2200, in_Tmp_2201, in_Tmp_2203, in_Tmp_2204, in_Tmp_2206, in_Tmp_2207, in_Tmp_2209, in_Tmp_2210, in_Tmp_2215, in_Tmp_2216, in_sdv_711, in_Tmp_2219, in_Tmp_2221, in_Tmp_2224, in_Tmp_2226, in_Tmp_2227, in_Tmp_2229, in_cIrql_11, in_Tmp_2230, in_Tmp_2234, in_Tmp_2235, in_Tmp_2236, in_Tmp_2239, in_Tmp_2240, in_Tmp_2242, in_DeviceObject_48, in_vslice_dummy_var_416, in_vslice_dummy_var_420, in_vslice_dummy_var_421;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    goto anon199_Else;

  anon199_Else:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_i_6;
    out_Tmp_2166 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2135;
    assume {:nonnull} out_Tmp_2135 != 0;
    assume out_Tmp_2135 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2135 + out_Tmp_2166 * 268)] != 0;
    out_Tmp_2119 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2151;
    assume {:nonnull} out_Tmp_2151 != 0;
    assume out_Tmp_2151 > 0;
    out_Tmp_2142 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2151 + out_Tmp_2119 * 268)];
    assume {:nonnull} out_Tmp_2142 != 0;
    assume out_Tmp_2142 > 0;
    out_pdoExtension_20 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(out_Tmp_2142)];
    assume {:nonnull} out_pdoExtension_20 != 0;
    assume out_pdoExtension_20 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    out_Tmp_2201 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2184;
    assume {:nonnull} out_Tmp_2184 != 0;
    assume out_Tmp_2184 > 0;
    out_DeviceObject_48 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2184 + out_Tmp_2201 * 268)];
    out_Tmp_2192 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2230;
    assume {:nonnull} out_Tmp_2230 != 0;
    assume out_Tmp_2230 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    out_Tmp_2181 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2215;
    assume {:nonnull} out_Tmp_2215 != 0;
    assume out_Tmp_2215 > 0;
    call {:si_unique_call 4142} sdv_ExFreePool(0);
    out_Tmp_2176 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2194;
    assume {:nonnull} out_Tmp_2194 != 0;
    assume out_Tmp_2194 > 0;
    out_Tmp_2120 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2240;
    assume {:nonnull} out_Tmp_2240 != 0;
    assume out_Tmp_2240 > 0;
    goto L283;

  L283:
    out_Tmp_2200 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2157;
    assume {:nonnull} out_Tmp_2157 != 0;
    assume out_Tmp_2157 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    out_Tmp_2148 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2242;
    assume {:nonnull} out_Tmp_2242 != 0;
    assume out_Tmp_2242 > 0;
    call {:si_unique_call 4141} sdv_ExFreePool(0);
    out_Tmp_2227 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2196;
    assume {:nonnull} out_Tmp_2196 != 0;
    assume out_Tmp_2196 > 0;
    out_Tmp_2206 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2235;
    assume {:nonnull} out_Tmp_2235 != 0;
    assume out_Tmp_2235 > 0;
    goto L290;

  L290:
    out_Tmp_2143 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2153;
    assume {:nonnull} out_Tmp_2153 != 0;
    assume out_Tmp_2153 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    out_Tmp_2216 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2167;
    assume {:nonnull} out_Tmp_2167 != 0;
    assume out_Tmp_2167 > 0;
    call {:si_unique_call 4140} sdv_ExFreePool(0);
    out_Tmp_2179 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2138;
    assume {:nonnull} out_Tmp_2138 != 0;
    assume out_Tmp_2138 > 0;
    out_Tmp_2203 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2126;
    assume {:nonnull} out_Tmp_2126 != 0;
    assume out_Tmp_2126 > 0;
    goto L297;

  L297:
    out_Tmp_2186 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2141;
    assume {:nonnull} out_Tmp_2141 != 0;
    assume out_Tmp_2141 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2141 + out_Tmp_2186 * 268)] := 0;
    call {:si_unique_call 4138} sdv_KeReleaseSpinLock(0, out_cIrql_11);
    call {:si_unique_call 4139} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto anon247_Else;

  anon247_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4137} IoDeleteDevice(0);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2160;
    assume {:nonnull} out_Tmp_2160 != 0;
    assume out_Tmp_2160 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc out_Tmp_2169;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2155;
    call {:si_unique_call 4136} WPP_SF_q(out_Tmp_2155, 37, out_Tmp_2169, out_pdoExtension_20);
    goto L317;

  L317:
    call {:si_unique_call 4106} out_Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    call {:si_unique_call 4107} sdv_KeAcquireSpinLock(0, out_Tmp_2180);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    havoc out_cIrql_11;
    goto L328;

  L328:
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    goto L328_dummy;

  L328_dummy:
    call {:si_unique_call 4143} {:si_old_unique_call 1} out_Tmp_2119, out_Tmp_2120, out_Tmp_2122, out_Tmp_2124, out_Tmp_2126, out_Tmp_2127, out_pdoExtension_20, out_Tmp_2132, out_Tmp_2134, out_Tmp_2135, out_Tmp_2136, out_Tmp_2137, out_Tmp_2138, out_Tmp_2139, out_Tmp_2141, out_Tmp_2142, out_Tmp_2143, out_Tmp_2146, out_Tmp_2147, out_Tmp_2148, out_Tmp_2149, out_Tmp_2151, out_Tmp_2153, out_Tmp_2155, out_Tmp_2156, out_Tmp_2157, out_Tmp_2158, out_Tmp_2160, out_sdv_706, out_Tmp_2162, out_Tmp_2163, out_Tmp_2164, out_Tmp_2166, out_Tmp_2167, out_Tmp_2168, out_Tmp_2169, out_status_70, out_Tmp_2174, out_Tmp_2175, out_Tmp_2176, out_Tmp_2177, out_Tmp_2179, out_Tmp_2180, out_Tmp_2181, out_i_6, out_Tmp_2182, out_Tmp_2184, out_Tmp_2186, out_Tmp_2187, out_Tmp_2189, out_Tmp_2192, out_Tmp_2194, out_Tmp_2195, out_Tmp_2196, out_Tmp_2197, out_Tmp_2200, out_Tmp_2201, out_Tmp_2203, out_Tmp_2204, out_Tmp_2206, out_Tmp_2207, out_Tmp_2209, out_Tmp_2210, out_Tmp_2215, out_Tmp_2216, out_sdv_711, out_Tmp_2219, out_Tmp_2221, out_Tmp_2224, out_Tmp_2226, out_Tmp_2227, out_Tmp_2229, out_cIrql_11, out_Tmp_2230, out_Tmp_2234, out_Tmp_2235, out_Tmp_2236, out_Tmp_2239, out_Tmp_2240, out_Tmp_2242, out_DeviceObject_48, out_vslice_dummy_var_416, out_vslice_dummy_var_420, out_vslice_dummy_var_421 := Sbp2CleanDeviceExtension#1_loop_L273(out_Tmp_2119, out_Tmp_2120, out_Tmp_2122, out_Tmp_2124, out_Tmp_2126, out_Tmp_2127, out_pdoExtension_20, out_Tmp_2132, out_Tmp_2134, out_Tmp_2135, out_Tmp_2136, out_Tmp_2137, out_Tmp_2138, out_Tmp_2139, out_Tmp_2141, out_Tmp_2142, out_Tmp_2143, out_Tmp_2146, out_Tmp_2147, out_Tmp_2148, out_Tmp_2149, out_Tmp_2151, out_Tmp_2153, out_Tmp_2155, out_Tmp_2156, out_Tmp_2157, out_Tmp_2158, out_Tmp_2160, out_sdv_706, out_Tmp_2162, out_Tmp_2163, out_Tmp_2164, out_Tmp_2166, out_Tmp_2167, out_Tmp_2168, out_Tmp_2169, out_status_70, out_Tmp_2174, out_Tmp_2175, out_Tmp_2176, out_Tmp_2177, out_Tmp_2179, out_Tmp_2180, out_Tmp_2181, out_i_6, out_Tmp_2182, out_Tmp_2184, out_Tmp_2186, out_Tmp_2187, out_Tmp_2189, out_Tmp_2192, out_Tmp_2194, out_Tmp_2195, out_Tmp_2196, out_Tmp_2197, out_Tmp_2200, out_Tmp_2201, out_Tmp_2203, out_Tmp_2204, out_Tmp_2206, out_Tmp_2207, out_Tmp_2209, out_Tmp_2210, out_Tmp_2215, out_Tmp_2216, out_sdv_711, in_fdoExtension_13, out_Tmp_2219, out_Tmp_2221, out_Tmp_2224, out_Tmp_2226, out_Tmp_2227, out_Tmp_2229, out_cIrql_11, out_Tmp_2230, out_Tmp_2234, out_Tmp_2235, out_Tmp_2236, out_Tmp_2239, out_Tmp_2240, out_Tmp_2242, out_DeviceObject_48, out_vslice_dummy_var_416, out_vslice_dummy_var_420, out_vslice_dummy_var_421);
    return;

  anon202_Then:
    goto L317;

  anon248_Then:
    goto L317;

  anon201_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon246_Then:
    goto L297;

  anon245_Then:
    goto L290;

  anon244_Then:
    goto L283;

  anon243_Then:
    assume {:nonnull} out_pdoExtension_20 != 0;
    assume out_pdoExtension_20 > 0;
    out_Tmp_2127 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2175;
    assume {:nonnull} out_Tmp_2175 != 0;
    assume out_Tmp_2175 > 0;
    out_DeviceObject_48 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2175 + out_Tmp_2127 * 268)];
    call {:si_unique_call 4115} sdv_KeReleaseSpinLock(0, out_cIrql_11);
    call {:si_unique_call 4116} out_sdv_711 := Sbp2CleanDeviceExtension#0(out_DeviceObject_48, 1, 0);
    goto anon249_Else;

  anon249_Else:
    assume {:partition} yogi_error != 1;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} out_sdv_711 != 0;
    call {:si_unique_call 4135} out_status_70 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} out_status_70 < 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2210;
    assume {:nonnull} out_Tmp_2210 != 0;
    assume out_Tmp_2210 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    havoc out_Tmp_2195;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2236;
    call {:si_unique_call 4134} WPP_SF_qD(out_Tmp_2236, 38, out_Tmp_2195, out_DeviceObject_48, out_status_70);
    goto L348;

  L348:
    call {:si_unique_call 4131} out_Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    call {:si_unique_call 4132} sdv_KeRaiseIrql(2, out_Tmp_2180);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    havoc out_cIrql_11;
    call {:si_unique_call 4133} Sbp2StartNextPacketByKey#1(out_DeviceObject_48, 0);
    goto anon250_Else;

  anon250_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4130} sdv_KeLowerIrql(out_cIrql_11);
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2182;
    assume {:nonnull} out_Tmp_2182 != 0;
    assume out_Tmp_2182 > 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    havoc out_Tmp_2162;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2124;
    call {:si_unique_call 4129} WPP_SF_qq(out_Tmp_2124, 39, out_Tmp_2162, out_pdoExtension_20, out_DeviceObject_48);
    goto L361;

  L361:
    assume {:nonnull} out_pdoExtension_20 != 0;
    assume out_pdoExtension_20 > 0;
    assume {:nonnull} out_pdoExtension_20 != 0;
    assume out_pdoExtension_20 > 0;
    assume {:nonnull} out_pdoExtension_20 != 0;
    assume out_pdoExtension_20 > 0;
    call {:si_unique_call 4126} out_vslice_dummy_var_420 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(out_pdoExtension_20), 0, 0);
    call {:si_unique_call 4127} out_vslice_dummy_var_416 := KeCancelTimer(0);
    call {:si_unique_call 4128} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto anon252_Else;

  anon252_Else:
    assume {:partition} yogi_error != 1;
    goto L379;

  L379:
    call {:si_unique_call 4122} out_sdv_706, out_vslice_dummy_var_421 := Sbp2CleanDeviceExtension#1_loop_L379(out_pdoExtension_20, out_sdv_706, out_vslice_dummy_var_421);
    goto L379_last;

  L379_last:
    call {:si_unique_call 4123} out_sdv_706 := sdv_IsListEmpty(0);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} out_sdv_706 == 0;
    assume {:nonnull} out_pdoExtension_20 != 0;
    assume out_pdoExtension_20 > 0;
    call {:si_unique_call 4124} out_vslice_dummy_var_421 := sdv_RemoveEntryList(0);
    call {:si_unique_call 4125} sdv_ExFreePool(0);
    assume false;
    return;

  anon207_Then:
    assume {:partition} out_sdv_706 != 0;
    call {:si_unique_call 4118} out_Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    call {:si_unique_call 4119} sdv_KeAcquireSpinLock(0, out_Tmp_2180);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    havoc out_cIrql_11;
    out_Tmp_2189 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2219;
    assume {:nonnull} out_Tmp_2219 != 0;
    assume out_Tmp_2219 > 0;
    Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2219 + out_Tmp_2189 * 268)] := 0;
    call {:si_unique_call 4120} sdv_KeReleaseSpinLock(0, out_cIrql_11);
    call {:si_unique_call 4121} IoDeleteDevice(0);
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2239;
    assume {:nonnull} out_Tmp_2239 != 0;
    assume out_Tmp_2239 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc out_Tmp_2158;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2197;
    call {:si_unique_call 4117} WPP_SF_q(out_Tmp_2197, 40, out_Tmp_2158, out_pdoExtension_20);
    goto L398;

  L398:
    call {:si_unique_call 4111} out_Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    call {:si_unique_call 4112} sdv_KeAcquireSpinLock(0, out_Tmp_2180);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    havoc out_cIrql_11;
    goto L277;

  L277:
    out_Tmp_2164 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2137;
    assume {:nonnull} out_Tmp_2137 != 0;
    assume out_Tmp_2137 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    out_Tmp_2187 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2163;
    assume {:nonnull} out_Tmp_2163 != 0;
    assume out_Tmp_2163 > 0;
    call {:si_unique_call 4110} sdv_ExFreePool(0);
    out_Tmp_2132 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2139;
    assume {:nonnull} out_Tmp_2139 != 0;
    assume out_Tmp_2139 > 0;
    out_Tmp_2174 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2221;
    assume {:nonnull} out_Tmp_2221 != 0;
    assume out_Tmp_2221 > 0;
    goto L423;

  L423:
    out_Tmp_2234 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2168;
    assume {:nonnull} out_Tmp_2168 != 0;
    assume out_Tmp_2168 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    out_Tmp_2149 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2224;
    assume {:nonnull} out_Tmp_2224 != 0;
    assume out_Tmp_2224 > 0;
    call {:si_unique_call 4109} sdv_ExFreePool(0);
    out_Tmp_2147 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2177;
    assume {:nonnull} out_Tmp_2177 != 0;
    assume out_Tmp_2177 > 0;
    out_Tmp_2204 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2156;
    assume {:nonnull} out_Tmp_2156 != 0;
    assume out_Tmp_2156 > 0;
    goto L430;

  L430:
    out_Tmp_2209 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2146;
    assume {:nonnull} out_Tmp_2146 != 0;
    assume out_Tmp_2146 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    out_Tmp_2136 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2207;
    assume {:nonnull} out_Tmp_2207 != 0;
    assume out_Tmp_2207 > 0;
    call {:si_unique_call 4108} sdv_ExFreePool(0);
    out_Tmp_2226 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2134;
    assume {:nonnull} out_Tmp_2134 != 0;
    assume out_Tmp_2134 > 0;
    out_Tmp_2229 := out_i_6;
    assume {:nonnull} in_fdoExtension_13 != 0;
    assume in_fdoExtension_13 > 0;
    havoc out_Tmp_2122;
    assume {:nonnull} out_Tmp_2122 != 0;
    assume out_Tmp_2122 > 0;
    goto L328;

  anon256_Then:
    goto L328;

  anon255_Then:
    goto L430;

  anon254_Then:
    goto L423;

  anon209_Then:
    goto L398;

  anon253_Then:
    goto L398;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L398;

  anon206_Then:
    goto L361;

  anon251_Then:
    goto L361;

  anon205_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L361;

  anon211_Then:
    goto L348;

  anon257_Then:
    goto L348;

  anon210_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L348;

  anon204_Then:
    assume {:partition} 0 <= out_status_70;
    goto L348;

  anon203_Then:
    assume {:partition} out_sdv_711 == 0;
    call {:si_unique_call 4113} out_Tmp_2180 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    call {:si_unique_call 4114} sdv_KeAcquireSpinLock(0, out_Tmp_2180);
    assume {:nonnull} out_Tmp_2180 != 0;
    assume out_Tmp_2180 > 0;
    havoc out_cIrql_11;
    goto L277;

  anon242_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_2135 + out_Tmp_2166 * 268)] == 0;
    goto L277;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L273(in_Tmp_2119: int, in_Tmp_2120: int, in_Tmp_2122: int, in_Tmp_2124: int, in_Tmp_2126: int, in_Tmp_2127: int, in_pdoExtension_20: int, in_Tmp_2132: int, in_Tmp_2134: int, in_Tmp_2135: int, in_Tmp_2136: int, in_Tmp_2137: int, in_Tmp_2138: int, in_Tmp_2139: int, in_Tmp_2141: int, in_Tmp_2142: int, in_Tmp_2143: int, in_Tmp_2146: int, in_Tmp_2147: int, in_Tmp_2148: int, in_Tmp_2149: int, in_Tmp_2151: int, in_Tmp_2153: int, in_Tmp_2155: int, in_Tmp_2156: int, in_Tmp_2157: int, in_Tmp_2158: int, in_Tmp_2160: int, in_sdv_706: int, in_Tmp_2162: int, in_Tmp_2163: int, in_Tmp_2164: int, in_Tmp_2166: int, in_Tmp_2167: int, in_Tmp_2168: int, in_Tmp_2169: int, in_status_70: int, in_Tmp_2174: int, in_Tmp_2175: int, in_Tmp_2176: int, in_Tmp_2177: int, in_Tmp_2179: int, in_Tmp_2180: int, in_Tmp_2181: int, in_i_6: int, in_Tmp_2182: int, in_Tmp_2184: int, in_Tmp_2186: int, in_Tmp_2187: int, in_Tmp_2189: int, in_Tmp_2192: int, in_Tmp_2194: int, in_Tmp_2195: int, in_Tmp_2196: int, in_Tmp_2197: int, in_Tmp_2200: int, in_Tmp_2201: int, in_Tmp_2203: int, in_Tmp_2204: int, in_Tmp_2206: int, in_Tmp_2207: int, in_Tmp_2209: int, in_Tmp_2210: int, in_Tmp_2215: int, in_Tmp_2216: int, in_sdv_711: int, in_fdoExtension_13: int, in_Tmp_2219: int, in_Tmp_2221: int, in_Tmp_2224: int, in_Tmp_2226: int, in_Tmp_2227: int, in_Tmp_2229: int, in_cIrql_11: int, in_Tmp_2230: int, in_Tmp_2234: int, in_Tmp_2235: int, in_Tmp_2236: int, in_Tmp_2239: int, in_Tmp_2240: int, in_Tmp_2242: int, in_DeviceObject_48: int, in_vslice_dummy_var_416: int, in_vslice_dummy_var_420: int, in_vslice_dummy_var_421: int) returns (out_Tmp_2119: int, out_Tmp_2120: int, out_Tmp_2122: int, out_Tmp_2124: int, out_Tmp_2126: int, out_Tmp_2127: int, out_pdoExtension_20: int, out_Tmp_2132: int, out_Tmp_2134: int, out_Tmp_2135: int, out_Tmp_2136: int, out_Tmp_2137: int, out_Tmp_2138: int, out_Tmp_2139: int, out_Tmp_2141: int, out_Tmp_2142: int, out_Tmp_2143: int, out_Tmp_2146: int, out_Tmp_2147: int, out_Tmp_2148: int, out_Tmp_2149: int, out_Tmp_2151: int, out_Tmp_2153: int, out_Tmp_2155: int, out_Tmp_2156: int, out_Tmp_2157: int, out_Tmp_2158: int, out_Tmp_2160: int, out_sdv_706: int, out_Tmp_2162: int, out_Tmp_2163: int, out_Tmp_2164: int, out_Tmp_2166: int, out_Tmp_2167: int, out_Tmp_2168: int, out_Tmp_2169: int, out_status_70: int, out_Tmp_2174: int, out_Tmp_2175: int, out_Tmp_2176: int, out_Tmp_2177: int, out_Tmp_2179: int, out_Tmp_2180: int, out_Tmp_2181: int, out_i_6: int, out_Tmp_2182: int, out_Tmp_2184: int, out_Tmp_2186: int, out_Tmp_2187: int, out_Tmp_2189: int, out_Tmp_2192: int, out_Tmp_2194: int, out_Tmp_2195: int, out_Tmp_2196: int, out_Tmp_2197: int, out_Tmp_2200: int, out_Tmp_2201: int, out_Tmp_2203: int, out_Tmp_2204: int, out_Tmp_2206: int, out_Tmp_2207: int, out_Tmp_2209: int, out_Tmp_2210: int, out_Tmp_2215: int, out_Tmp_2216: int, out_sdv_711: int, out_Tmp_2219: int, out_Tmp_2221: int, out_Tmp_2224: int, out_Tmp_2226: int, out_Tmp_2227: int, out_Tmp_2229: int, out_cIrql_11: int, out_Tmp_2230: int, out_Tmp_2234: int, out_Tmp_2235: int, out_Tmp_2236: int, out_Tmp_2239: int, out_Tmp_2240: int, out_Tmp_2242: int, out_DeviceObject_48: int, out_vslice_dummy_var_416: int, out_vslice_dummy_var_420: int, out_vslice_dummy_var_421: int);
  modifies alloc, LockDepth, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.PVOID, yogi_error, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_706 == 1 || out_sdv_706 == 0 || out_sdv_706 == in_sdv_706;
  free ensures {:va_keep} out_status_70 == -1073741823 || out_status_70 == -1073741738 || out_status_70 == 0 || out_status_70 == in_status_70;
  free ensures {:va_keep} out_vslice_dummy_var_416 == 1 || out_vslice_dummy_var_416 == 0 || out_vslice_dummy_var_416 == in_vslice_dummy_var_416;
  free ensures {:va_keep} out_vslice_dummy_var_421 == 1 || out_vslice_dummy_var_421 == 0 || out_vslice_dummy_var_421 == in_vslice_dummy_var_421;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_1270: int, in_sdv_415: int, in_sdv_416: int, in_irp_3: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_26: int, in_Key: int) returns (out_Tmp_1270: int, out_sdv_415: int, out_sdv_416: int, out_irp_3: int, out_packet_7: int)
{

  entry:
    out_Tmp_1270, out_sdv_415, out_sdv_416, out_irp_3, out_packet_7 := in_Tmp_1270, in_sdv_415, in_sdv_416, in_irp_3, in_packet_7;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_26 != 0;
    assume in_DeviceObject_26 > 0;
    call {:si_unique_call 4144} out_packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_26), in_Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} out_packet_7 != 0;
    call {:si_unique_call 4147} out_sdv_416 := sdv_containing_record(out_packet_7, 64);
    out_irp_3 := out_sdv_416;
    call {:si_unique_call 4148} Sbp2StartIo#0(in_DeviceObject_26, out_irp_3);
    goto anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 4145} out_Tmp_1270 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1270 != 0;
    assume out_Tmp_1270 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    call {:si_unique_call 4146} out_sdv_415 := sdv_InterlockedDecrement(out_Tmp_1270);
    assume {:nonnull} out_Tmp_1270 != 0;
    assume out_Tmp_1270 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    goto anon11_Else;

  anon11_Else:
    assume {:partition} out_sdv_415 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    call {:si_unique_call 4149} {:si_old_unique_call 1} out_Tmp_1270, out_sdv_415, out_sdv_416, out_irp_3, out_packet_7 := Sbp2StartNextPacketByKey#0_loop_L11(out_Tmp_1270, out_sdv_415, out_sdv_416, out_irp_3, out_packet_7, in_deviceExtension, in_DeviceObject_26, in_Key);
    return;

  anon10_Then:
    assume {:partition} out_packet_7 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_1270: int, in_sdv_415: int, in_sdv_416: int, in_irp_3: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_26: int, in_Key: int) returns (out_Tmp_1270: int, out_sdv_415: int, out_sdv_416: int, out_irp_3: int, out_packet_7: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_416 == in_sdv_416;
  free ensures {:va_keep} out_irp_3 == in_irp_3;
  free ensures {:va_keep} out_packet_7 == 0 || out_packet_7 == in_packet_7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_1270: int, in_sdv_415: int, in_sdv_416: int, in_irp_3: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_26: int, in_Key: int) returns (out_Tmp_1270: int, out_sdv_415: int, out_sdv_416: int, out_irp_3: int, out_packet_7: int)
{

  entry:
    out_Tmp_1270, out_sdv_415, out_sdv_416, out_irp_3, out_packet_7 := in_Tmp_1270, in_sdv_415, in_sdv_416, in_irp_3, in_packet_7;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_26 != 0;
    assume in_DeviceObject_26 > 0;
    call {:si_unique_call 4150} out_packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_26), in_Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} out_packet_7 != 0;
    call {:si_unique_call 4153} out_sdv_416 := sdv_containing_record(out_packet_7, 64);
    out_irp_3 := out_sdv_416;
    call {:si_unique_call 4154} Sbp2StartIo#1(in_DeviceObject_26, out_irp_3);
    goto anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 4151} out_Tmp_1270 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1270 != 0;
    assume out_Tmp_1270 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    call {:si_unique_call 4152} out_sdv_415 := sdv_InterlockedDecrement(out_Tmp_1270);
    assume {:nonnull} out_Tmp_1270 != 0;
    assume out_Tmp_1270 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    goto anon11_Else;

  anon11_Else:
    assume {:partition} out_sdv_415 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    call {:si_unique_call 4155} {:si_old_unique_call 1} out_Tmp_1270, out_sdv_415, out_sdv_416, out_irp_3, out_packet_7 := Sbp2StartNextPacketByKey#1_loop_L11(out_Tmp_1270, out_sdv_415, out_sdv_416, out_irp_3, out_packet_7, in_deviceExtension, in_DeviceObject_26, in_Key);
    return;

  anon10_Then:
    assume {:partition} out_packet_7 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_1270: int, in_sdv_415: int, in_sdv_416: int, in_irp_3: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_26: int, in_Key: int) returns (out_Tmp_1270: int, out_sdv_415: int, out_sdv_416: int, out_irp_3: int, out_packet_7: int);
  modifies alloc, LockDepth, yogi_error, Mem_T.PVOID, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} LockDepth == old(LockDepth);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_416 == in_sdv_416;
  free ensures {:va_keep} out_irp_3 == in_irp_3;
  free ensures {:va_keep} out_packet_7 == 0 || out_packet_7 == in_packet_7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartIo#0_loop_L166(in_qIrp: int, in_sdv_535: int, in_entry_3: int, in_Irp_20: int) returns (out_qIrp: int, out_sdv_535: int, out_entry_3: int)
{

  entry:
    out_qIrp, out_sdv_535, out_entry_3 := in_qIrp, in_sdv_535, in_entry_3;
    goto L166, exit;

  exit:
    return;

  L166:
    goto anon196_Else;

  anon196_Else:
    call {:si_unique_call 4156} out_sdv_535 := sdv_containing_record(out_entry_3, 64);
    out_qIrp := out_sdv_535;
    goto anon239_Then;

  anon239_Then:
    assume {:partition} out_qIrp != in_Irp_20;
    assume {:nonnull} out_entry_3 != 0;
    assume out_entry_3 > 0;
    havoc out_entry_3;
    goto anon239_Then_dummy;

  anon239_Then_dummy:
    havoc out_entry_3;
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#0_loop_L166(in_qIrp: int, in_sdv_535: int, in_entry_3: int, in_Irp_20: int) returns (out_qIrp: int, out_sdv_535: int, out_entry_3: int);
  free ensures {:va_keep} out_qIrp == in_qIrp;
  free ensures {:va_keep} out_sdv_535 == in_sdv_535;
  free ensures {:va_keep} out_entry_3 == in_entry_3;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartIo#1_loop_L166(in_qIrp: int, in_sdv_535: int, in_entry_3: int, in_Irp_20: int) returns (out_qIrp: int, out_sdv_535: int, out_entry_3: int)
{

  entry:
    out_qIrp, out_sdv_535, out_entry_3 := in_qIrp, in_sdv_535, in_entry_3;
    goto L166, exit;

  exit:
    return;

  L166:
    goto anon196_Else;

  anon196_Else:
    call {:si_unique_call 4157} out_sdv_535 := sdv_containing_record(out_entry_3, 64);
    out_qIrp := out_sdv_535;
    goto anon239_Then;

  anon239_Then:
    assume {:partition} out_qIrp != in_Irp_20;
    assume {:nonnull} out_entry_3 != 0;
    assume out_entry_3 > 0;
    havoc out_entry_3;
    goto anon239_Then_dummy;

  anon239_Then_dummy:
    havoc out_entry_3;
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#1_loop_L166(in_qIrp: int, in_sdv_535: int, in_entry_3: int, in_Irp_20: int) returns (out_qIrp: int, out_sdv_535: int, out_entry_3: int);
  free ensures {:va_keep} out_qIrp == in_qIrp;
  free ensures {:va_keep} out_sdv_535 == in_sdv_535;
  free ensures {:va_keep} out_entry_3 == in_entry_3;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2InitializeDeviceExtension#1_loop_L56(in_i_8: int, in_context_4: int, in_PdoExtension_26: int) returns (out_i_8: int, out_context_4: int)
{

  entry:
    out_i_8, out_context_4 := in_i_8, in_context_4;
    goto L56, exit;

  exit:
    return;

  L56:
    assume {:CounterLoop 8} {:Counter "i_8"} true;
    goto anon67_Else;

  anon67_Else:
    assume {:partition} 8 > out_i_8;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_context_4;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_i_8 := out_i_8 + 1;
    goto anon67_Else_dummy;

  anon67_Else_dummy:
    havoc out_i_8;
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L56(in_i_8: int, in_context_4: int, in_PdoExtension_26: int) returns (out_i_8: int, out_context_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2InitializeDeviceExtension#1_loop_L106(in_context_4: int, in_oldContext: int, in_vslice_dummy_var_477: int) returns (out_context_4: int, out_oldContext: int, out_vslice_dummy_var_477: int)
{

  entry:
    out_context_4, out_oldContext, out_vslice_dummy_var_477 := in_context_4, in_oldContext, in_vslice_dummy_var_477;
    goto L106, exit;

  exit:
    return;

  L106:
    goto anon73_Else;

  anon73_Else:
    assume {:partition} out_context_4 != 0;
    out_oldContext := out_context_4;
    call {:si_unique_call 4158} out_vslice_dummy_var_477 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    havoc out_context_4;
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    goto anon73_Else_dummy;

  anon73_Else_dummy:
    call {:si_unique_call 4159} {:si_old_unique_call 1} out_context_4, out_oldContext, out_vslice_dummy_var_477 := Sbp2InitializeDeviceExtension#1_loop_L106(out_context_4, out_oldContext, out_vslice_dummy_var_477);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L106(in_context_4: int, in_oldContext: int, in_vslice_dummy_var_477: int) returns (out_context_4: int, out_oldContext: int, out_vslice_dummy_var_477: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2InitializeDeviceExtension#1_loop_L105(in_i_8: int, in_Tmp_2525: int, in_Tmp_2527: int, in_Tmp_2529: int, in_context_4: int, in_Tmp_2532: int, in_oldContext: int, in_sdv_818: int, in_sdv_819: int, in_Tmp_2537: int, in_Tmp_2538: int, in_PdoExtension_26: int) returns (out_i_8: int, out_Tmp_2525: int, out_Tmp_2527: int, out_Tmp_2529: int, out_context_4: int, out_Tmp_2532: int, out_oldContext: int, out_sdv_818: int, out_sdv_819: int, out_Tmp_2537: int, out_Tmp_2538: int)
{

  entry:
    out_i_8, out_Tmp_2525, out_Tmp_2527, out_Tmp_2529, out_context_4, out_Tmp_2532, out_oldContext, out_sdv_818, out_sdv_819, out_Tmp_2537, out_Tmp_2538 := in_i_8, in_Tmp_2525, in_Tmp_2527, in_Tmp_2529, in_context_4, in_Tmp_2532, in_oldContext, in_sdv_818, in_sdv_819, in_Tmp_2537, in_Tmp_2538;
    goto L105, exit;

  exit:
    return;

  L105:
    assume {:CounterLoop 8} {:Counter "i_8"} true;
    goto anon72_Else;

  anon72_Else:
    assume {:partition} 8 > out_i_8;
    out_oldContext := out_context_4;
    call {:si_unique_call 4161} out_sdv_819 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_context_4 := out_sdv_819;
    goto anon86_Else;

  anon86_Else:
    assume {:partition} out_context_4 != 0;
    call {:si_unique_call 4160} out_sdv_818 := sdv_containing_record(out_context_4, 8);
    out_context_4 := out_sdv_818;
    goto anon87_Else;

  anon87_Else:
    assume {:partition} out_context_4 != 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_Tmp_2532 := out_i_8;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_Tmp_2538;
    assume {:nonnull} out_Tmp_2538 != 0;
    assume out_Tmp_2538 > 0;
    havoc out_Tmp_2537;
    assume {:nonnull} out_Tmp_2537 != 0;
    assume out_Tmp_2537 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_Tmp_2529 := out_i_8;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_Tmp_2525;
    assume {:nonnull} out_Tmp_2525 != 0;
    assume out_Tmp_2525 > 0;
    havoc out_Tmp_2527;
    assume {:nonnull} out_Tmp_2527 != 0;
    assume out_Tmp_2527 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_i_8 := out_i_8 + 1;
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    havoc out_i_8;
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L105(in_i_8: int, in_Tmp_2525: int, in_Tmp_2527: int, in_Tmp_2529: int, in_context_4: int, in_Tmp_2532: int, in_oldContext: int, in_sdv_818: int, in_sdv_819: int, in_Tmp_2537: int, in_Tmp_2538: int, in_PdoExtension_26: int) returns (out_i_8: int, out_Tmp_2525: int, out_Tmp_2527: int, out_Tmp_2529: int, out_context_4: int, out_Tmp_2532: int, out_oldContext: int, out_sdv_818: int, out_sdv_819: int, out_Tmp_2537: int, out_Tmp_2538: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_i_8 == in_i_8;
  free ensures {:va_keep} out_Tmp_2525 == in_Tmp_2525;
  free ensures {:va_keep} out_Tmp_2527 == in_Tmp_2527;
  free ensures {:va_keep} out_Tmp_2529 == in_Tmp_2529;
  free ensures {:va_keep} out_context_4 == in_context_4;
  free ensures {:va_keep} out_Tmp_2532 == in_Tmp_2532;
  free ensures {:va_keep} out_oldContext == in_oldContext;
  free ensures {:va_keep} out_sdv_818 == in_sdv_818;
  free ensures {:va_keep} out_sdv_819 == in_sdv_819;
  free ensures {:va_keep} out_Tmp_2537 == in_Tmp_2537;
  free ensures {:va_keep} out_Tmp_2538 == in_Tmp_2538;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2UpdateNodeInformation#1_loop_L62(in_nextListItem_1: int, in_Tmp_643: int, in_sdv_201: int, in_sdv_202: int, in_sdv_203: int, in_sdv_207: int, in_currentListItem: int, in_Tmp_650: int, in_sdv_208: int, in_Tmp_651: int, in_Tmp_652: int, in_Tmp_654: int, in_PdoExtension_10: int) returns (out_nextListItem_1: int, out_Tmp_643: int, out_sdv_202: int, out_currentListItem: int, out_Tmp_650: int, out_Tmp_651: int, out_Tmp_652: int, out_Tmp_654: int)
{
  var vslice_dummy_var_4509: int;

  entry:
    out_nextListItem_1, out_Tmp_643, out_sdv_202, out_currentListItem, out_Tmp_650, out_Tmp_651, out_Tmp_652, out_Tmp_654 := in_nextListItem_1, in_Tmp_643, in_sdv_202, in_currentListItem, in_Tmp_650, in_Tmp_651, in_Tmp_652, in_Tmp_654;
    goto L62, exit;

  exit:
    return;

  L62:
    out_currentListItem := out_nextListItem_1;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_651;
    assume {:nonnull} out_Tmp_651 != 0;
    assume out_Tmp_651 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_643;
    assume {:nonnull} out_Tmp_643 != 0;
    assume out_Tmp_643 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_650;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    assume {:nonnull} out_Tmp_650 != 0;
    assume out_Tmp_650 > 0;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    assume {:nonnull} out_Tmp_650 != 0;
    assume out_Tmp_650 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_654;
    assume {:nonnull} out_Tmp_654 != 0;
    assume out_Tmp_654 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_652;
    assume {:nonnull} out_Tmp_652 != 0;
    assume out_Tmp_652 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_nextListItem_1;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    havoc vslice_dummy_var_4509;
    call {:si_unique_call 4162} out_sdv_202 := sdv_containing_record(vslice_dummy_var_4509, 0);
    goto anon31_Else;

  anon31_Else:
    assume {:partition} out_currentListItem != out_sdv_202;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    call {:si_unique_call 4163} {:si_old_unique_call 1} out_nextListItem_1, out_Tmp_643, out_sdv_202, out_currentListItem, out_Tmp_650, out_Tmp_651, out_Tmp_652, out_Tmp_654 := Sbp2UpdateNodeInformation#1_loop_L62(out_nextListItem_1, out_Tmp_643, in_sdv_201, out_sdv_202, in_sdv_203, in_sdv_207, out_currentListItem, out_Tmp_650, in_sdv_208, out_Tmp_651, out_Tmp_652, out_Tmp_654, in_PdoExtension_10);
    return;
}



procedure {:LoopProcedure} Sbp2UpdateNodeInformation#1_loop_L62(in_nextListItem_1: int, in_Tmp_643: int, in_sdv_201: int, in_sdv_202: int, in_sdv_203: int, in_sdv_207: int, in_currentListItem: int, in_Tmp_650: int, in_sdv_208: int, in_Tmp_651: int, in_Tmp_652: int, in_Tmp_654: int, in_PdoExtension_10: int) returns (out_nextListItem_1: int, out_Tmp_643: int, out_sdv_202: int, out_currentListItem: int, out_Tmp_650: int, out_Tmp_651: int, out_Tmp_652: int, out_Tmp_654: int);
  free ensures {:va_keep} out_nextListItem_1 == in_nextListItem_1;
  free ensures {:va_keep} out_Tmp_643 == in_Tmp_643;
  free ensures {:va_keep} out_sdv_202 == in_sdv_202;
  free ensures {:va_keep} out_currentListItem == in_currentListItem;
  free ensures {:va_keep} out_Tmp_650 == in_Tmp_650;
  free ensures {:va_keep} out_Tmp_651 == in_Tmp_651;
  free ensures {:va_keep} out_Tmp_652 == in_Tmp_652;
  free ensures {:va_keep} out_Tmp_654 == in_Tmp_654;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2BusResetNotificationWorker#0_loop_L22(in_i_3: int, in_Tmp_721: int, in_Tmp_722: int, in_BusResetItem: int, in_Tmp_723: int, in_pdoExtension_6: int, in_Tmp_725: int, in_Tmp_726: int, in_Tmp_727: int, in_Tmp_728: int, in_Tmp_729: int, in_mgmtAction: int, in_Tmp_730: int, in_Tmp_732: int, in_Tmp_733: int, in_Tmp_735: int, in_Tmp_736: int, in_Tmp_737: int, in_Tmp_738: int, in_Tmp_740: int, in_Tmp_741: int, in_fdoExtension_1: int, in_Tmp_744: int, in_Tmp_746: int, in_Tmp_747: int, in_Tmp_749: int, in_status_20: int, in_Tmp_751: int, in_Tmp_752: int, in_Tmp_754: int, in_vslice_dummy_var_514: int, in_vslice_dummy_var_515: int, in_vslice_dummy_var_517: int, in_vslice_dummy_var_518: int, in_vslice_dummy_var_519: int) returns (out_i_3: int, out_Tmp_721: int, out_Tmp_722: int, out_Tmp_723: int, out_pdoExtension_6: int, out_Tmp_725: int, out_Tmp_726: int, out_Tmp_727: int, out_Tmp_728: int, out_Tmp_729: int, out_mgmtAction: int, out_Tmp_730: int, out_Tmp_732: int, out_Tmp_733: int, out_Tmp_735: int, out_Tmp_736: int, out_Tmp_737: int, out_Tmp_738: int, out_Tmp_740: int, out_Tmp_741: int, out_Tmp_744: int, out_Tmp_746: int, out_Tmp_747: int, out_Tmp_749: int, out_status_20: int, out_Tmp_751: int, out_Tmp_752: int, out_Tmp_754: int, out_vslice_dummy_var_514: int, out_vslice_dummy_var_515: int, out_vslice_dummy_var_517: int, out_vslice_dummy_var_518: int, out_vslice_dummy_var_519: int)
{
  var vslice_dummy_var_4510: int;
  var vslice_dummy_var_4511: int;
  var vslice_dummy_var_4512: int;
  var vslice_dummy_var_4513: int;
  var vslice_dummy_var_4514: int;
  var vslice_dummy_var_4515: int;

  entry:
    out_i_3, out_Tmp_721, out_Tmp_722, out_Tmp_723, out_pdoExtension_6, out_Tmp_725, out_Tmp_726, out_Tmp_727, out_Tmp_728, out_Tmp_729, out_mgmtAction, out_Tmp_730, out_Tmp_732, out_Tmp_733, out_Tmp_735, out_Tmp_736, out_Tmp_737, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_Tmp_744, out_Tmp_746, out_Tmp_747, out_Tmp_749, out_status_20, out_Tmp_751, out_Tmp_752, out_Tmp_754, out_vslice_dummy_var_514, out_vslice_dummy_var_515, out_vslice_dummy_var_517, out_vslice_dummy_var_518, out_vslice_dummy_var_519 := in_i_3, in_Tmp_721, in_Tmp_722, in_Tmp_723, in_pdoExtension_6, in_Tmp_725, in_Tmp_726, in_Tmp_727, in_Tmp_728, in_Tmp_729, in_mgmtAction, in_Tmp_730, in_Tmp_732, in_Tmp_733, in_Tmp_735, in_Tmp_736, in_Tmp_737, in_Tmp_738, in_Tmp_740, in_Tmp_741, in_Tmp_744, in_Tmp_746, in_Tmp_747, in_Tmp_749, in_status_20, in_Tmp_751, in_Tmp_752, in_Tmp_754, in_vslice_dummy_var_514, in_vslice_dummy_var_515, in_vslice_dummy_var_517, in_vslice_dummy_var_518, in_vslice_dummy_var_519;
    goto L22, exit;

  exit:
    return;

  L22:
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    goto anon107_Else;

  anon107_Else:
    out_Tmp_746 := out_i_3;
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    havoc out_Tmp_730;
    assume {:nonnull} out_Tmp_730 != 0;
    assume out_Tmp_730 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_730 + out_Tmp_746 * 268)] == 0;
    goto L82;

  L82:
    out_i_3 := out_i_3 + 1;
    goto L82_dummy;

  L82_dummy:
    call {:si_unique_call 4184} {:si_old_unique_call 1} out_i_3, out_Tmp_721, out_Tmp_722, out_Tmp_723, out_pdoExtension_6, out_Tmp_725, out_Tmp_726, out_Tmp_727, out_Tmp_728, out_Tmp_729, out_mgmtAction, out_Tmp_730, out_Tmp_732, out_Tmp_733, out_Tmp_735, out_Tmp_736, out_Tmp_737, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_Tmp_744, out_Tmp_746, out_Tmp_747, out_Tmp_749, out_status_20, out_Tmp_751, out_Tmp_752, out_Tmp_754, out_vslice_dummy_var_514, out_vslice_dummy_var_515, out_vslice_dummy_var_517, out_vslice_dummy_var_518, out_vslice_dummy_var_519 := Sbp2BusResetNotificationWorker#0_loop_L22(out_i_3, out_Tmp_721, out_Tmp_722, in_BusResetItem, out_Tmp_723, out_pdoExtension_6, out_Tmp_725, out_Tmp_726, out_Tmp_727, out_Tmp_728, out_Tmp_729, out_mgmtAction, out_Tmp_730, out_Tmp_732, out_Tmp_733, out_Tmp_735, out_Tmp_736, out_Tmp_737, out_Tmp_738, out_Tmp_740, out_Tmp_741, in_fdoExtension_1, out_Tmp_744, out_Tmp_746, out_Tmp_747, out_Tmp_749, out_status_20, out_Tmp_751, out_Tmp_752, out_Tmp_754, out_vslice_dummy_var_514, out_vslice_dummy_var_515, out_vslice_dummy_var_517, out_vslice_dummy_var_518, out_vslice_dummy_var_519);
    return;

  anon141_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_730 + out_Tmp_746 * 268)] != 0;
    out_Tmp_733 := out_i_3;
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    havoc out_Tmp_729;
    assume {:nonnull} out_Tmp_729 != 0;
    assume out_Tmp_729 > 0;
    out_Tmp_741 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_729 + out_Tmp_733 * 268)];
    assume {:nonnull} out_Tmp_741 != 0;
    assume out_Tmp_741 > 0;
    out_pdoExtension_6 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(out_Tmp_741)];
    call {:si_unique_call 4176} out_status_20 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} out_status_20 < 0;
    goto L82;

  anon108_Then:
    assume {:partition} 0 <= out_status_20;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_728;
    assume {:nonnull} out_Tmp_728 != 0;
    assume out_Tmp_728 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc out_Tmp_726;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_721;
    assume {:nonnull} in_BusResetItem != 0;
    assume in_BusResetItem > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4511;
    havoc vslice_dummy_var_4512;
    call {:si_unique_call 4175} WPP_SF_qDd(out_Tmp_721, 20, out_Tmp_726, out_pdoExtension_6, vslice_dummy_var_4511, vslice_dummy_var_4512);
    goto L37;

  L37:
    call {:si_unique_call 4172} Sbp2AddLog(out_pdoExtension_6, 1, -764185538, in_fdoExtension_1, out_i_3);
    call {:si_unique_call 4173} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 4174} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} in_BusResetItem != 0;
    assume in_BusResetItem > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto L54;

  L54:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    call {:si_unique_call 4171} out_vslice_dummy_var_514 := KeCancelTimer(0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto L56;

  L56:
    call {:si_unique_call 4170} Sbp2AddLog(out_pdoExtension_6, 1, -764185551, 0, 0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 4167} out_vslice_dummy_var_517 := KeSetEvent(StartEvent__DEVICE_EXTENSION(out_pdoExtension_6), 0, 0);
    goto L72;

  L72:
    call {:si_unique_call 4164} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 4165} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 4166} out_vslice_dummy_var_515 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(out_pdoExtension_6), 0);
    goto anon143_Else;

  anon143_Else:
    assume {:partition} yogi_error != 1;
    out_mgmtAction := 0;
    goto L82;

  anon115_Then:
    out_mgmtAction := 2;
    goto L83;

  L83:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    goto L86;

  L86:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_738;
    assume {:nonnull} out_Tmp_738 != 0;
    assume out_Tmp_738 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    havoc out_Tmp_735;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_723;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4513;
    call {:si_unique_call 4180} WPP_SF_qD(out_Tmp_723, 22, out_Tmp_735, out_pdoExtension_6, vslice_dummy_var_4513);
    goto L92;

  L92:
    call {:si_unique_call 4179} Sbp2AddLog(out_pdoExtension_6, 1, -764185550, 0, 0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    out_mgmtAction := 1;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_727;
    assume {:nonnull} out_Tmp_727 != 0;
    assume out_Tmp_727 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    out_mgmtAction := 2;
    goto L106;

  L106:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto L108;

  L108:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon148_Then;

  anon148_Then:
    assume {:partition} out_mgmtAction != 1;
    goto L110;

  L110:
    goto anon119_Then;

  anon119_Then:
    assume {:partition} out_mgmtAction != 2;
    goto L146;

  L146:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} out_mgmtAction == 3;
    call {:si_unique_call 4183} Sbp2AddLog(out_pdoExtension_6, 1, -764185547, out_mgmtAction, 0);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_749;
    assume {:nonnull} out_Tmp_749 != 0;
    assume out_Tmp_749 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_722;
    assume {:nonnull} out_Tmp_722 != 0;
    assume out_Tmp_722 > 0;
    havoc out_Tmp_740;
    havoc out_Tmp_737;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_736;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4515;
    call {:si_unique_call 4182} WPP_SF_qDDd(out_Tmp_736, 26, out_Tmp_737, out_pdoExtension_6, out_status_20, vslice_dummy_var_4515, out_Tmp_740);
    goto L175;

  L175:
    call {:si_unique_call 4168} Sbp2SetDeferLoginTimer(out_pdoExtension_6);
    goto L72;

  anon130_Then:
    goto L175;

  anon151_Then:
    goto L175;

  anon129_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;

  anon124_Then:
    assume {:partition} out_mgmtAction != 3;
    goto L72;

  anon147_Then:
    goto L106;

  anon117_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_752;
    assume {:nonnull} out_Tmp_752 != 0;
    assume out_Tmp_752 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    havoc out_Tmp_725;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_732;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4514;
    call {:si_unique_call 4181} WPP_SF_qD(out_Tmp_732, 23, out_Tmp_725, out_pdoExtension_6, vslice_dummy_var_4514);
    goto L191;

  L191:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 4177} out_vslice_dummy_var_518 := KeCancelTimer(0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 4178} out_vslice_dummy_var_519 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(out_pdoExtension_6), 0, 0);
    out_mgmtAction := 2;
    goto L108;

  anon133_Then:
    goto L191;

  anon156_Then:
    goto L191;

  anon132_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L191;

  anon118_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    out_mgmtAction := 2;
    goto L108;

  anon131_Then:
    out_mgmtAction := 2;
    goto L108;

  anon116_Then:
    goto L92;

  anon146_Then:
    goto L92;

  anon145_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L92;

  anon144_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_754;
    assume {:nonnull} out_Tmp_754 != 0;
    assume out_Tmp_754 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    goto L92;

  anon136_Then:
    goto L86;

  anon135_Then:
    goto L92;

  anon134_Then:
    goto L92;

  anon157_Then:
    goto L92;

  anon113_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    goto L216;

  L216:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_751;
    assume {:nonnull} out_Tmp_751 != 0;
    assume out_Tmp_751 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc out_Tmp_744;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_747;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4510;
    call {:si_unique_call 4169} WPP_SF_qD(out_Tmp_747, 21, out_Tmp_744, out_pdoExtension_6, vslice_dummy_var_4510);
    goto L72;

  anon139_Then:
    goto L72;

  anon158_Then:
    goto L72;

  anon138_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L72;

  anon114_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L216;

  anon140_Then:
    goto L83;

  anon137_Then:
    goto L216;

  anon112_Then:
    goto L56;

  anon111_Then:
    goto L54;

  anon110_Then:
    goto L37;

  anon142_Then:
    goto L37;

  anon109_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L37;
}



procedure {:LoopProcedure} Sbp2BusResetNotificationWorker#0_loop_L22(in_i_3: int, in_Tmp_721: int, in_Tmp_722: int, in_BusResetItem: int, in_Tmp_723: int, in_pdoExtension_6: int, in_Tmp_725: int, in_Tmp_726: int, in_Tmp_727: int, in_Tmp_728: int, in_Tmp_729: int, in_mgmtAction: int, in_Tmp_730: int, in_Tmp_732: int, in_Tmp_733: int, in_Tmp_735: int, in_Tmp_736: int, in_Tmp_737: int, in_Tmp_738: int, in_Tmp_740: int, in_Tmp_741: int, in_fdoExtension_1: int, in_Tmp_744: int, in_Tmp_746: int, in_Tmp_747: int, in_Tmp_749: int, in_status_20: int, in_Tmp_751: int, in_Tmp_752: int, in_Tmp_754: int, in_vslice_dummy_var_514: int, in_vslice_dummy_var_515: int, in_vslice_dummy_var_517: int, in_vslice_dummy_var_518: int, in_vslice_dummy_var_519: int) returns (out_i_3: int, out_Tmp_721: int, out_Tmp_722: int, out_Tmp_723: int, out_pdoExtension_6: int, out_Tmp_725: int, out_Tmp_726: int, out_Tmp_727: int, out_Tmp_728: int, out_Tmp_729: int, out_mgmtAction: int, out_Tmp_730: int, out_Tmp_732: int, out_Tmp_733: int, out_Tmp_735: int, out_Tmp_736: int, out_Tmp_737: int, out_Tmp_738: int, out_Tmp_740: int, out_Tmp_741: int, out_Tmp_744: int, out_Tmp_746: int, out_Tmp_747: int, out_Tmp_749: int, out_status_20: int, out_Tmp_751: int, out_Tmp_752: int, out_Tmp_754: int, out_vslice_dummy_var_514: int, out_vslice_dummy_var_515: int, out_vslice_dummy_var_517: int, out_vslice_dummy_var_518: int, out_vslice_dummy_var_519: int);
  modifies alloc, LockDepth, yogi_error;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == LockDepth;
  free ensures {:va_keep} old(LockDepth) >= 0 ==> LockDepth == old(LockDepth);
  free ensures {:va_keep} LockDepth <= old(LockDepth);
  free ensures {:va_keep} LockDepth >= old(LockDepth);
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_mgmtAction == 0 || out_mgmtAction == in_mgmtAction;
  free ensures {:va_keep} out_status_20 == -1073741823 || out_status_20 == -1073741738 || out_status_20 == 0 || out_status_20 == in_status_20;
  free ensures {:va_keep} out_vslice_dummy_var_514 == 1 || out_vslice_dummy_var_514 == 0 || out_vslice_dummy_var_514 == in_vslice_dummy_var_514;
  free ensures {:va_keep} out_vslice_dummy_var_518 == 1 || out_vslice_dummy_var_518 == 0 || out_vslice_dummy_var_518 == in_vslice_dummy_var_518;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2BusResetNotificationWorker#1_loop_L22(in_i_3: int, in_Tmp_721: int, in_Tmp_722: int, in_BusResetItem: int, in_Tmp_723: int, in_pdoExtension_6: int, in_Tmp_724: int, in_Tmp_725: int, in_Tmp_726: int, in_Tmp_727: int, in_Tmp_728: int, in_Tmp_729: int, in_mgmtAction: int, in_Tmp_730: int, in_Tmp_731: int, in_Tmp_732: int, in_Tmp_733: int, in_Tmp_734: int, in_Tmp_735: int, in_Tmp_736: int, in_Tmp_737: int, in_Tmp_738: int, in_Tmp_740: int, in_Tmp_741: int, in_fdoExtension_1: int, in_Tmp_742: int, in_sdv_228: int, in_Tmp_743: int, in_Tmp_744: int, in_Tmp_745: int, in_Tmp_746: int, in_Tmp_747: int, in_Tmp_748: int, in_Tmp_749: int, in_sdv_230: int, in_status_20: int, in_Tmp_750: int, in_irql_3: int, in_Tmp_751: int, in_Tmp_752: int, in_Tmp_753: int, in_Tmp_754: int, in_vslice_dummy_var_521: int, in_vslice_dummy_var_522: int, in_vslice_dummy_var_524: int, in_vslice_dummy_var_525: int, in_vslice_dummy_var_526: int) returns (out_i_3: int, out_Tmp_721: int, out_Tmp_722: int, out_Tmp_723: int, out_pdoExtension_6: int, out_Tmp_724: int, out_Tmp_725: int, out_Tmp_726: int, out_Tmp_727: int, out_Tmp_728: int, out_Tmp_729: int, out_mgmtAction: int, out_Tmp_730: int, out_Tmp_731: int, out_Tmp_732: int, out_Tmp_733: int, out_Tmp_734: int, out_Tmp_735: int, out_Tmp_736: int, out_Tmp_737: int, out_Tmp_738: int, out_Tmp_740: int, out_Tmp_741: int, out_Tmp_742: int, out_sdv_228: int, out_Tmp_743: int, out_Tmp_744: int, out_Tmp_745: int, out_Tmp_746: int, out_Tmp_747: int, out_Tmp_748: int, out_Tmp_749: int, out_sdv_230: int, out_status_20: int, out_Tmp_750: int, out_irql_3: int, out_Tmp_751: int, out_Tmp_752: int, out_Tmp_753: int, out_Tmp_754: int, out_vslice_dummy_var_521: int, out_vslice_dummy_var_522: int, out_vslice_dummy_var_524: int, out_vslice_dummy_var_525: int, out_vslice_dummy_var_526: int)
{
  var vslice_dummy_var_4516: int;
  var vslice_dummy_var_4517: int;
  var vslice_dummy_var_4518: int;
  var vslice_dummy_var_4519: int;
  var vslice_dummy_var_4520: int;
  var vslice_dummy_var_4521: int;
  var vslice_dummy_var_4522: int;
  var vslice_dummy_var_4523: int;
  var vslice_dummy_var_4524: int;
  var vslice_dummy_var_4525: int;

  entry:
    out_i_3, out_Tmp_721, out_Tmp_722, out_Tmp_723, out_pdoExtension_6, out_Tmp_724, out_Tmp_725, out_Tmp_726, out_Tmp_727, out_Tmp_728, out_Tmp_729, out_mgmtAction, out_Tmp_730, out_Tmp_731, out_Tmp_732, out_Tmp_733, out_Tmp_734, out_Tmp_735, out_Tmp_736, out_Tmp_737, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_Tmp_742, out_sdv_228, out_Tmp_743, out_Tmp_744, out_Tmp_745, out_Tmp_746, out_Tmp_747, out_Tmp_748, out_Tmp_749, out_sdv_230, out_status_20, out_Tmp_750, out_irql_3, out_Tmp_751, out_Tmp_752, out_Tmp_753, out_Tmp_754, out_vslice_dummy_var_521, out_vslice_dummy_var_522, out_vslice_dummy_var_524, out_vslice_dummy_var_525, out_vslice_dummy_var_526 := in_i_3, in_Tmp_721, in_Tmp_722, in_Tmp_723, in_pdoExtension_6, in_Tmp_724, in_Tmp_725, in_Tmp_726, in_Tmp_727, in_Tmp_728, in_Tmp_729, in_mgmtAction, in_Tmp_730, in_Tmp_731, in_Tmp_732, in_Tmp_733, in_Tmp_734, in_Tmp_735, in_Tmp_736, in_Tmp_737, in_Tmp_738, in_Tmp_740, in_Tmp_741, in_Tmp_742, in_sdv_228, in_Tmp_743, in_Tmp_744, in_Tmp_745, in_Tmp_746, in_Tmp_747, in_Tmp_748, in_Tmp_749, in_sdv_230, in_status_20, in_Tmp_750, in_irql_3, in_Tmp_751, in_Tmp_752, in_Tmp_753, in_Tmp_754, in_vslice_dummy_var_521, in_vslice_dummy_var_522, in_vslice_dummy_var_524, in_vslice_dummy_var_525, in_vslice_dummy_var_526;
    goto L22, exit;

  exit:
    return;

  L22:
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    goto anon107_Else;

  anon107_Else:
    out_Tmp_746 := out_i_3;
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    havoc out_Tmp_730;
    assume {:nonnull} out_Tmp_730 != 0;
    assume out_Tmp_730 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_730 + out_Tmp_746 * 268)] == 0;
    goto L82;

  L82:
    out_i_3 := out_i_3 + 1;
    goto L82_dummy;

  L82_dummy:
    call {:si_unique_call 4216} {:si_old_unique_call 1} out_i_3, out_Tmp_721, out_Tmp_722, out_Tmp_723, out_pdoExtension_6, out_Tmp_724, out_Tmp_725, out_Tmp_726, out_Tmp_727, out_Tmp_728, out_Tmp_729, out_mgmtAction, out_Tmp_730, out_Tmp_731, out_Tmp_732, out_Tmp_733, out_Tmp_734, out_Tmp_735, out_Tmp_736, out_Tmp_737, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_Tmp_742, out_sdv_228, out_Tmp_743, out_Tmp_744, out_Tmp_745, out_Tmp_746, out_Tmp_747, out_Tmp_748, out_Tmp_749, out_sdv_230, out_status_20, out_Tmp_750, out_irql_3, out_Tmp_751, out_Tmp_752, out_Tmp_753, out_Tmp_754, out_vslice_dummy_var_521, out_vslice_dummy_var_522, out_vslice_dummy_var_524, out_vslice_dummy_var_525, out_vslice_dummy_var_526 := Sbp2BusResetNotificationWorker#1_loop_L22(out_i_3, out_Tmp_721, out_Tmp_722, in_BusResetItem, out_Tmp_723, out_pdoExtension_6, out_Tmp_724, out_Tmp_725, out_Tmp_726, out_Tmp_727, out_Tmp_728, out_Tmp_729, out_mgmtAction, out_Tmp_730, out_Tmp_731, out_Tmp_732, out_Tmp_733, out_Tmp_734, out_Tmp_735, out_Tmp_736, out_Tmp_737, out_Tmp_738, out_Tmp_740, out_Tmp_741, in_fdoExtension_1, out_Tmp_742, out_sdv_228, out_Tmp_743, out_Tmp_744, out_Tmp_745, out_Tmp_746, out_Tmp_747, out_Tmp_748, out_Tmp_749, out_sdv_230, out_status_20, out_Tmp_750, out_irql_3, out_Tmp_751, out_Tmp_752, out_Tmp_753, out_Tmp_754, out_vslice_dummy_var_521, out_vslice_dummy_var_522, out_vslice_dummy_var_524, out_vslice_dummy_var_525, out_vslice_dummy_var_526);
    return;

  anon141_Then:
    assume {:partition} Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_730 + out_Tmp_746 * 268)] != 0;
    out_Tmp_733 := out_i_3;
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    havoc out_Tmp_729;
    assume {:nonnull} out_Tmp_729 != 0;
    assume out_Tmp_729 > 0;
    out_Tmp_741 := Mem_T.P_DEVICE_OBJECT[DeviceObject__DEVICE_INFORMATION(out_Tmp_729 + out_Tmp_733 * 268)];
    assume {:nonnull} out_Tmp_741 != 0;
    assume out_Tmp_741 > 0;
    out_pdoExtension_6 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(out_Tmp_741)];
    call {:si_unique_call 4197} out_status_20 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} out_status_20 < 0;
    goto L82;

  anon108_Then:
    assume {:partition} 0 <= out_status_20;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_728;
    assume {:nonnull} out_Tmp_728 != 0;
    assume out_Tmp_728 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc out_Tmp_726;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_721;
    assume {:nonnull} in_BusResetItem != 0;
    assume in_BusResetItem > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4517;
    havoc vslice_dummy_var_4518;
    call {:si_unique_call 4196} WPP_SF_qDd(out_Tmp_721, 20, out_Tmp_726, out_pdoExtension_6, vslice_dummy_var_4517, vslice_dummy_var_4518);
    goto L37;

  L37:
    call {:si_unique_call 4193} Sbp2AddLog(out_pdoExtension_6, 1, -764185538, in_fdoExtension_1, out_i_3);
    call {:si_unique_call 4194} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 4195} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} in_fdoExtension_1 != 0;
    assume in_fdoExtension_1 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} in_BusResetItem != 0;
    assume in_BusResetItem > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto L54;

  L54:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    call {:si_unique_call 4192} out_vslice_dummy_var_521 := KeCancelTimer(0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto L56;

  L56:
    call {:si_unique_call 4191} Sbp2AddLog(out_pdoExtension_6, 1, -764185551, 0, 0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 4188} out_vslice_dummy_var_524 := KeSetEvent(StartEvent__DEVICE_EXTENSION(out_pdoExtension_6), 0, 0);
    goto L72;

  L72:
    call {:si_unique_call 4185} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 4186} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 4187} out_vslice_dummy_var_522 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(out_pdoExtension_6), 0);
    goto anon143_Else;

  anon143_Else:
    assume {:partition} yogi_error != 1;
    out_mgmtAction := 0;
    goto L82;

  anon115_Then:
    out_mgmtAction := 2;
    goto L83;

  L83:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    goto L86;

  L86:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_738;
    assume {:nonnull} out_Tmp_738 != 0;
    assume out_Tmp_738 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    havoc out_Tmp_735;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_723;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4519;
    call {:si_unique_call 4202} WPP_SF_qD(out_Tmp_723, 22, out_Tmp_735, out_pdoExtension_6, vslice_dummy_var_4519);
    goto L92;

  L92:
    call {:si_unique_call 4201} Sbp2AddLog(out_pdoExtension_6, 1, -764185550, 0, 0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    out_mgmtAction := 1;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_727;
    assume {:nonnull} out_Tmp_727 != 0;
    assume out_Tmp_727 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    out_mgmtAction := 2;
    goto L106;

  L106:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto L108;

  L108:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} out_mgmtAction == 1;
    call {:si_unique_call 4206} Sbp2AddLog(out_pdoExtension_6, 1, -764185549, 0, 0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 4207} sdv_KeReleaseSpinLock(0, out_irql_3);
    assume {:nonnull} in_BusResetItem != 0;
    assume in_BusResetItem > 0;
    havoc vslice_dummy_var_4521;
    call {:si_unique_call 4208} out_status_20 := Sbp2ManagementTransaction#0(out_pdoExtension_6, 3, vslice_dummy_var_4521);
    goto anon149_Else;

  anon149_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4204} out_Tmp_748 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_748 != 0;
    assume out_Tmp_748 > 0;
    call {:si_unique_call 4205} sdv_KeAcquireSpinLock(0, out_Tmp_748);
    assume {:nonnull} out_Tmp_748 != 0;
    assume out_Tmp_748 > 0;
    havoc out_irql_3;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} out_status_20 < 0;
    call {:si_unique_call 4210} out_sdv_228 := IsDeviceGone#1(out_pdoExtension_6, out_status_20);
    goto anon154_Else;

  anon154_Else:
    assume {:partition} yogi_error != 1;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} out_sdv_228 != 0;
    goto L134;

  L134:
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_745;
    assume {:nonnull} out_Tmp_745 != 0;
    assume out_Tmp_745 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_724;
    assume {:nonnull} out_Tmp_724 != 0;
    assume out_Tmp_724 > 0;
    havoc out_Tmp_734;
    havoc out_Tmp_743;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_750;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4522;
    call {:si_unique_call 4209} WPP_SF_qDDd(out_Tmp_750, 24, out_Tmp_743, out_pdoExtension_6, out_status_20, vslice_dummy_var_4522, out_Tmp_734);
    goto L135;

  L135:
    call {:si_unique_call 4198} Sbp2AddLog(out_pdoExtension_6, 1, -764185548, out_status_20, 0);
    goto L110;

  L110:
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} out_mgmtAction == 2;
    assume {:nonnull} in_BusResetItem != 0;
    assume in_BusResetItem > 0;
    havoc vslice_dummy_var_4523;
    call {:si_unique_call 4211} out_status_20 := Sbp2QueueManagementWorkItem#0(out_pdoExtension_6, 2, vslice_dummy_var_4523);
    goto anon150_Else;

  anon150_Else:
    assume {:partition} yogi_error != 1;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} out_status_20 < 0;
    call {:si_unique_call 4212} out_sdv_230 := IsDeviceGone#1(out_pdoExtension_6, out_status_20);
    goto anon152_Else;

  anon152_Else:
    assume {:partition} yogi_error != 1;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} out_sdv_230 == 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_742;
    assume {:nonnull} out_Tmp_742 != 0;
    assume out_Tmp_742 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    havoc out_Tmp_753;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_731;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4524;
    call {:si_unique_call 4213} WPP_SF_qDD(out_Tmp_731, 25, out_Tmp_753, out_pdoExtension_6, out_status_20, vslice_dummy_var_4524);
    goto L160;

  L160:
    out_mgmtAction := 3;
    goto L146;

  L146:
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} out_mgmtAction == 3;
    call {:si_unique_call 4215} Sbp2AddLog(out_pdoExtension_6, 1, -764185547, out_mgmtAction, 0);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_749;
    assume {:nonnull} out_Tmp_749 != 0;
    assume out_Tmp_749 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_722;
    assume {:nonnull} out_Tmp_722 != 0;
    assume out_Tmp_722 > 0;
    havoc out_Tmp_740;
    havoc out_Tmp_737;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_736;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4525;
    call {:si_unique_call 4214} WPP_SF_qDDd(out_Tmp_736, 26, out_Tmp_737, out_pdoExtension_6, out_status_20, vslice_dummy_var_4525, out_Tmp_740);
    goto L175;

  L175:
    call {:si_unique_call 4189} Sbp2SetDeferLoginTimer(out_pdoExtension_6);
    goto L72;

  anon130_Then:
    goto L175;

  anon151_Then:
    goto L175;

  anon129_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;

  anon124_Then:
    assume {:partition} out_mgmtAction != 3;
    goto L72;

  anon128_Then:
    goto L160;

  anon153_Then:
    goto L160;

  anon127_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L160;

  anon126_Then:
    assume {:partition} out_sdv_230 != 0;
    goto L146;

  anon125_Then:
    assume {:partition} 0 <= out_status_20;
    goto L146;

  anon119_Then:
    assume {:partition} out_mgmtAction != 2;
    goto L146;

  anon123_Then:
    goto L135;

  anon155_Then:
    goto L135;

  anon122_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L135;

  anon121_Then:
    assume {:partition} out_sdv_228 == 0;
    out_mgmtAction := 2;
    goto L134;

  anon120_Then:
    assume {:partition} 0 <= out_status_20;
    goto L110;

  anon148_Then:
    assume {:partition} out_mgmtAction != 1;
    goto L110;

  anon147_Then:
    goto L106;

  anon117_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_752;
    assume {:nonnull} out_Tmp_752 != 0;
    assume out_Tmp_752 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    havoc out_Tmp_725;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_732;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4520;
    call {:si_unique_call 4203} WPP_SF_qD(out_Tmp_732, 23, out_Tmp_725, out_pdoExtension_6, vslice_dummy_var_4520);
    goto L191;

  L191:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 4199} out_vslice_dummy_var_525 := KeCancelTimer(0);
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    call {:si_unique_call 4200} out_vslice_dummy_var_526 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(out_pdoExtension_6), 0, 0);
    out_mgmtAction := 2;
    goto L108;

  anon133_Then:
    goto L191;

  anon156_Then:
    goto L191;

  anon132_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L191;

  anon118_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    out_mgmtAction := 2;
    goto L108;

  anon131_Then:
    out_mgmtAction := 2;
    goto L108;

  anon116_Then:
    goto L92;

  anon146_Then:
    goto L92;

  anon145_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L92;

  anon144_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc out_Tmp_754;
    assume {:nonnull} out_Tmp_754 != 0;
    assume out_Tmp_754 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    goto L92;

  anon136_Then:
    goto L86;

  anon135_Then:
    goto L92;

  anon134_Then:
    goto L92;

  anon157_Then:
    goto L92;

  anon113_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    goto L216;

  L216:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_751;
    assume {:nonnull} out_Tmp_751 != 0;
    assume out_Tmp_751 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc out_Tmp_744;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_747;
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    havoc vslice_dummy_var_4516;
    call {:si_unique_call 4190} WPP_SF_qD(out_Tmp_747, 21, out_Tmp_744, out_pdoExtension_6, vslice_dummy_var_4516);
    goto L72;

  anon139_Then:
    goto L72;

  anon158_Then:
    goto L72;

  anon138_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L72;

  anon114_Then:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} out_pdoExtension_6 != 0;
    assume out_pdoExtension_6 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L216;

  anon140_Then:
    goto L83;

  anon137_Then:
    goto L216;

  anon112_Then:
    goto L56;

  anon111_Then:
    goto L54;

  anon110_Then:
    goto L37;

  anon142_Then:
    goto L37;

  anon109_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L37;
}



procedure {:LoopProcedure} Sbp2BusResetNotificationWorker#1_loop_L22(in_i_3: int, in_Tmp_721: int, in_Tmp_722: int, in_BusResetItem: int, in_Tmp_723: int, in_pdoExtension_6: int, in_Tmp_724: int, in_Tmp_725: int, in_Tmp_726: int, in_Tmp_727: int, in_Tmp_728: int, in_Tmp_729: int, in_mgmtAction: int, in_Tmp_730: int, in_Tmp_731: int, in_Tmp_732: int, in_Tmp_733: int, in_Tmp_734: int, in_Tmp_735: int, in_Tmp_736: int, in_Tmp_737: int, in_Tmp_738: int, in_Tmp_740: int, in_Tmp_741: int, in_fdoExtension_1: int, in_Tmp_742: int, in_sdv_228: int, in_Tmp_743: int, in_Tmp_744: int, in_Tmp_745: int, in_Tmp_746: int, in_Tmp_747: int, in_Tmp_748: int, in_Tmp_749: int, in_sdv_230: int, in_status_20: int, in_Tmp_750: int, in_irql_3: int, in_Tmp_751: int, in_Tmp_752: int, in_Tmp_753: int, in_Tmp_754: int, in_vslice_dummy_var_521: int, in_vslice_dummy_var_522: int, in_vslice_dummy_var_524: int, in_vslice_dummy_var_525: int, in_vslice_dummy_var_526: int) returns (out_i_3: int, out_Tmp_721: int, out_Tmp_722: int, out_Tmp_723: int, out_pdoExtension_6: int, out_Tmp_724: int, out_Tmp_725: int, out_Tmp_726: int, out_Tmp_727: int, out_Tmp_728: int, out_Tmp_729: int, out_mgmtAction: int, out_Tmp_730: int, out_Tmp_731: int, out_Tmp_732: int, out_Tmp_733: int, out_Tmp_734: int, out_Tmp_735: int, out_Tmp_736: int, out_Tmp_737: int, out_Tmp_738: int, out_Tmp_740: int, out_Tmp_741: int, out_Tmp_742: int, out_sdv_228: int, out_Tmp_743: int, out_Tmp_744: int, out_Tmp_745: int, out_Tmp_746: int, out_Tmp_747: int, out_Tmp_748: int, out_Tmp_749: int, out_sdv_230: int, out_status_20: int, out_Tmp_750: int, out_irql_3: int, out_Tmp_751: int, out_Tmp_752: int, out_Tmp_753: int, out_Tmp_754: int, out_vslice_dummy_var_521: int, out_vslice_dummy_var_522: int, out_vslice_dummy_var_524: int, out_vslice_dummy_var_525: int, out_vslice_dummy_var_526: int);
  modifies alloc, LockDepth, Mem_T.PVOID, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.P_IRBIRP, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_mgmtAction == 0 || out_mgmtAction == in_mgmtAction;
  free ensures {:va_keep} out_vslice_dummy_var_521 == 1 || out_vslice_dummy_var_521 == 0 || out_vslice_dummy_var_521 == in_vslice_dummy_var_521;
  free ensures {:va_keep} out_vslice_dummy_var_525 == 1 || out_vslice_dummy_var_525 == 0 || out_vslice_dummy_var_525 == in_vslice_dummy_var_525;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2ManagementTransactionWorker#0_loop_L38(in_pdoExtension_5: int, in_sdv_193: int, in_sdv_195: int, in_entry_1: int) returns (out_sdv_193: int, out_sdv_195: int, out_entry_1: int)
{

  entry:
    out_sdv_193, out_sdv_195, out_entry_1 := in_sdv_193, in_sdv_195, in_entry_1;
    goto L38, exit;

  exit:
    return;

  L38:
    call {:si_unique_call 4217} out_sdv_193 := sdv_IsListEmpty(0);
    goto anon37_Then;

  anon37_Then:
    assume {:partition} out_sdv_193 == 0;
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    call {:si_unique_call 4218} out_sdv_195 := RemoveHeadList(BusResetEntry__DEVICE_EXTENSION(in_pdoExtension_5));
    out_entry_1 := out_sdv_195;
    call {:si_unique_call 4219} sdv_ExFreePool(0);
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    call {:si_unique_call 4220} {:si_old_unique_call 1} out_sdv_193, out_sdv_195, out_entry_1 := Sbp2ManagementTransactionWorker#0_loop_L38(in_pdoExtension_5, out_sdv_193, out_sdv_195, out_entry_1);
    return;
}



procedure {:LoopProcedure} Sbp2ManagementTransactionWorker#0_loop_L38(in_pdoExtension_5: int, in_sdv_193: int, in_sdv_195: int, in_entry_1: int) returns (out_sdv_193: int, out_sdv_195: int, out_entry_1: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_sdv_193 == in_sdv_193;
  free ensures {:va_keep} out_sdv_195 == in_sdv_195;
  free ensures {:va_keep} out_entry_1 == in_entry_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2ManagementTransactionWorker#0_loop_L55(in_Tmp_624: int, in_pdoExtension_5: int, in_Tmp_625: int, in_sdv_190: int, in_Tmp_627: int, in_status_16: int, in_Tmp_628: int, in_entry_1: int, in_irql_2: int, in_vslice_dummy_var_530: int) returns (out_Tmp_624: int, out_Tmp_625: int, out_sdv_190: int, out_Tmp_627: int, out_status_16: int, out_Tmp_628: int, out_entry_1: int, out_irql_2: int, out_vslice_dummy_var_530: int)
{
  var vslice_dummy_var_4526: int;
  var vslice_dummy_var_4527: int;
  var vslice_dummy_var_4528: int;

  entry:
    out_Tmp_624, out_Tmp_625, out_sdv_190, out_Tmp_627, out_status_16, out_Tmp_628, out_entry_1, out_irql_2, out_vslice_dummy_var_530 := in_Tmp_624, in_Tmp_625, in_sdv_190, in_Tmp_627, in_status_16, in_Tmp_628, in_entry_1, in_irql_2, in_vslice_dummy_var_530;
    goto L55, exit;

  exit:
    return;

  L55:
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    havoc out_entry_1;
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    goto anon45_Else;

  anon45_Else:
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L97;

  L97:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_625;
    assume {:nonnull} out_Tmp_625 != 0;
    assume out_Tmp_625 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc out_Tmp_624;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_628;
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    havoc vslice_dummy_var_4526;
    havoc vslice_dummy_var_4527;
    havoc vslice_dummy_var_4528;
    call {:si_unique_call 4224} WPP_SF_qDddD(out_Tmp_628, 85, out_Tmp_624, in_pdoExtension_5, vslice_dummy_var_4526, vslice_dummy_var_4527, vslice_dummy_var_4528, out_status_16);
    goto L98;

  L98:
    call {:si_unique_call 4222} out_vslice_dummy_var_530 := sdv_RemoveEntryList(0);
    call {:si_unique_call 4223} sdv_ExFreePool(0);
    goto anon40_Else;

  anon40_Else:
    assume {:partition} out_status_16 != -1073741810;
    call {:si_unique_call 4221} out_sdv_190 := sdv_IsListEmpty(0);
    goto anon41_Else;

  anon41_Else:
    assume {:partition} out_sdv_190 == 0;
    goto anon41_Else_dummy;

  anon41_Else_dummy:
    call {:si_unique_call 4230} {:si_old_unique_call 1} out_Tmp_624, out_Tmp_625, out_sdv_190, out_Tmp_627, out_status_16, out_Tmp_628, out_entry_1, out_irql_2, out_vslice_dummy_var_530 := Sbp2ManagementTransactionWorker#0_loop_L55(out_Tmp_624, in_pdoExtension_5, out_Tmp_625, out_sdv_190, out_Tmp_627, out_status_16, out_Tmp_628, out_entry_1, out_irql_2, out_vslice_dummy_var_530);
    return;

  anon39_Then:
    goto L98;

  anon47_Then:
    goto L98;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L98;

  anon42_Then:
    call {:si_unique_call 4228} sdv_KeReleaseSpinLock(0, out_irql_2);
    call {:si_unique_call 4229} out_status_16 := Sbp2Issue1394BusReset#0(in_pdoExtension_5);
    goto anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4225} out_Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    call {:si_unique_call 4226} sdv_KeAcquireSpinLock(0, out_Tmp_627);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    havoc out_irql_2;
    call {:si_unique_call 4227} Sbp2AddLog(in_pdoExtension_5, 1, -848865486, out_status_16, 0);
    goto L97;
}



procedure {:LoopProcedure} Sbp2ManagementTransactionWorker#0_loop_L55(in_Tmp_624: int, in_pdoExtension_5: int, in_Tmp_625: int, in_sdv_190: int, in_Tmp_627: int, in_status_16: int, in_Tmp_628: int, in_entry_1: int, in_irql_2: int, in_vslice_dummy_var_530: int) returns (out_Tmp_624: int, out_Tmp_625: int, out_sdv_190: int, out_Tmp_627: int, out_status_16: int, out_Tmp_628: int, out_entry_1: int, out_irql_2: int, out_vslice_dummy_var_530: int);
  modifies alloc, Mem_T.P_IRBIRP;
  free ensures {:va_keep} out_sdv_190 == 1 || out_sdv_190 == 0 || out_sdv_190 == in_sdv_190;
  free ensures {:va_keep} out_status_16 == -1073741670 || out_status_16 == in_status_16;
  free ensures {:va_keep} out_vslice_dummy_var_530 == 1 || out_vslice_dummy_var_530 == 0 || out_vslice_dummy_var_530 == in_vslice_dummy_var_530;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2ManagementTransactionWorker#0_loop_L18(in_pdoExtension_5: int, in_Tmp_627: int, in_irql_2: int, in_vslice_dummy_var_529: int) returns (out_Tmp_627: int, out_irql_2: int, out_vslice_dummy_var_529: int)
{

  entry:
    out_Tmp_627, out_irql_2, out_vslice_dummy_var_529 := in_Tmp_627, in_irql_2, in_vslice_dummy_var_529;
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    goto anon34_Else;

  anon34_Else:
    call {:si_unique_call 4231} sdv_KeReleaseSpinLock(0, out_irql_2);
    call {:si_unique_call 4232} out_vslice_dummy_var_529 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 4233} out_Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    call {:si_unique_call 4234} sdv_KeAcquireSpinLock(0, out_Tmp_627);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    havoc out_irql_2;
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    call {:si_unique_call 4235} {:si_old_unique_call 1} out_Tmp_627, out_irql_2, out_vslice_dummy_var_529 := Sbp2ManagementTransactionWorker#0_loop_L18(in_pdoExtension_5, out_Tmp_627, out_irql_2, out_vslice_dummy_var_529);
    return;
}



procedure {:LoopProcedure} Sbp2ManagementTransactionWorker#0_loop_L18(in_pdoExtension_5: int, in_Tmp_627: int, in_irql_2: int, in_vslice_dummy_var_529: int) returns (out_Tmp_627: int, out_irql_2: int, out_vslice_dummy_var_529: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_529 == 258 || out_vslice_dummy_var_529 == 0 || out_vslice_dummy_var_529 == in_vslice_dummy_var_529;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2ManagementTransactionWorker#1_loop_L38(in_pdoExtension_5: int, in_sdv_193: int, in_sdv_195: int, in_entry_1: int) returns (out_sdv_193: int, out_sdv_195: int, out_entry_1: int)
{

  entry:
    out_sdv_193, out_sdv_195, out_entry_1 := in_sdv_193, in_sdv_195, in_entry_1;
    goto L38, exit;

  exit:
    return;

  L38:
    call {:si_unique_call 4236} out_sdv_193 := sdv_IsListEmpty(0);
    goto anon37_Then;

  anon37_Then:
    assume {:partition} out_sdv_193 == 0;
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    call {:si_unique_call 4237} out_sdv_195 := RemoveHeadList(BusResetEntry__DEVICE_EXTENSION(in_pdoExtension_5));
    out_entry_1 := out_sdv_195;
    call {:si_unique_call 4238} sdv_ExFreePool(0);
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    call {:si_unique_call 4239} {:si_old_unique_call 1} out_sdv_193, out_sdv_195, out_entry_1 := Sbp2ManagementTransactionWorker#1_loop_L38(in_pdoExtension_5, out_sdv_193, out_sdv_195, out_entry_1);
    return;
}



procedure {:LoopProcedure} Sbp2ManagementTransactionWorker#1_loop_L38(in_pdoExtension_5: int, in_sdv_193: int, in_sdv_195: int, in_entry_1: int) returns (out_sdv_193: int, out_sdv_195: int, out_entry_1: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_sdv_193 == in_sdv_193;
  free ensures {:va_keep} out_sdv_195 == in_sdv_195;
  free ensures {:va_keep} out_entry_1 == in_entry_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2ManagementTransactionWorker#1_loop_L55(in_Tmp_624: int, in_pdoExtension_5: int, in_Tmp_625: int, in_sdv_190: int, in_Tmp_627: int, in_status_16: int, in_Tmp_628: int, in_entry_1: int, in_irql_2: int, in_vslice_dummy_var_535: int) returns (out_Tmp_624: int, out_Tmp_625: int, out_sdv_190: int, out_Tmp_627: int, out_status_16: int, out_Tmp_628: int, out_entry_1: int, out_irql_2: int, out_vslice_dummy_var_535: int)
{
  var vslice_dummy_var_4529: int;
  var vslice_dummy_var_4530: int;
  var vslice_dummy_var_4531: int;
  var vslice_dummy_var_4532: int;

  entry:
    out_Tmp_624, out_Tmp_625, out_sdv_190, out_Tmp_627, out_status_16, out_Tmp_628, out_entry_1, out_irql_2, out_vslice_dummy_var_535 := in_Tmp_624, in_Tmp_625, in_sdv_190, in_Tmp_627, in_status_16, in_Tmp_628, in_entry_1, in_irql_2, in_vslice_dummy_var_535;
    goto L55, exit;

  exit:
    return;

  L55:
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    havoc out_entry_1;
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L97;

  L97:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_625;
    assume {:nonnull} out_Tmp_625 != 0;
    assume out_Tmp_625 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc out_Tmp_624;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_628;
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    havoc vslice_dummy_var_4529;
    havoc vslice_dummy_var_4530;
    havoc vslice_dummy_var_4531;
    call {:si_unique_call 4243} WPP_SF_qDddD(out_Tmp_628, 85, out_Tmp_624, in_pdoExtension_5, vslice_dummy_var_4529, vslice_dummy_var_4530, vslice_dummy_var_4531, out_status_16);
    goto L98;

  L98:
    call {:si_unique_call 4241} out_vslice_dummy_var_535 := sdv_RemoveEntryList(0);
    call {:si_unique_call 4242} sdv_ExFreePool(0);
    goto anon40_Else;

  anon40_Else:
    assume {:partition} out_status_16 != -1073741810;
    call {:si_unique_call 4240} out_sdv_190 := sdv_IsListEmpty(0);
    goto anon41_Else;

  anon41_Else:
    assume {:partition} out_sdv_190 == 0;
    goto anon41_Else_dummy;

  anon41_Else_dummy:
    call {:si_unique_call 4254} {:si_old_unique_call 1} out_Tmp_624, out_Tmp_625, out_sdv_190, out_Tmp_627, out_status_16, out_Tmp_628, out_entry_1, out_irql_2, out_vslice_dummy_var_535 := Sbp2ManagementTransactionWorker#1_loop_L55(out_Tmp_624, in_pdoExtension_5, out_Tmp_625, out_sdv_190, out_Tmp_627, out_status_16, out_Tmp_628, out_entry_1, out_irql_2, out_vslice_dummy_var_535);
    return;

  anon39_Then:
    goto L98;

  anon47_Then:
    goto L98;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L98;

  anon42_Then:
    call {:si_unique_call 4252} sdv_KeReleaseSpinLock(0, out_irql_2);
    call {:si_unique_call 4253} out_status_16 := Sbp2Issue1394BusReset#1(in_pdoExtension_5);
    goto anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4244} out_Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    call {:si_unique_call 4245} sdv_KeAcquireSpinLock(0, out_Tmp_627);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    havoc out_irql_2;
    call {:si_unique_call 4246} Sbp2AddLog(in_pdoExtension_5, 1, -848865486, out_status_16, 0);
    goto L97;

  anon45_Then:
    call {:si_unique_call 4250} sdv_KeReleaseSpinLock(0, out_irql_2);
    assume {:nonnull} out_entry_1 != 0;
    assume out_entry_1 > 0;
    havoc vslice_dummy_var_4532;
    call {:si_unique_call 4251} out_status_16 := Sbp2ManagementTransaction#0(in_pdoExtension_5, 0, vslice_dummy_var_4532);
    goto anon46_Else;

  anon46_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 4247} out_Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    call {:si_unique_call 4248} sdv_KeAcquireSpinLock(0, out_Tmp_627);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    havoc out_irql_2;
    call {:si_unique_call 4249} Sbp2AddLog(in_pdoExtension_5, 1, -848865487, out_status_16, 0);
    goto L97;
}



procedure {:LoopProcedure} Sbp2ManagementTransactionWorker#1_loop_L55(in_Tmp_624: int, in_pdoExtension_5: int, in_Tmp_625: int, in_sdv_190: int, in_Tmp_627: int, in_status_16: int, in_Tmp_628: int, in_entry_1: int, in_irql_2: int, in_vslice_dummy_var_535: int) returns (out_Tmp_624: int, out_Tmp_625: int, out_sdv_190: int, out_Tmp_627: int, out_status_16: int, out_Tmp_628: int, out_entry_1: int, out_irql_2: int, out_vslice_dummy_var_535: int);
  modifies alloc, LockDepth, Mem_T.P_IRBIRP, yogi_error, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.P_DEVICE_OBJECT, Mem_T.PVOID, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(LockDepth) != 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(LockDepth) > 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_sdv_190 == 1 || out_sdv_190 == 0 || out_sdv_190 == in_sdv_190;
  free ensures {:va_keep} out_vslice_dummy_var_535 == 1 || out_vslice_dummy_var_535 == 0 || out_vslice_dummy_var_535 == in_vslice_dummy_var_535;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2ManagementTransactionWorker#1_loop_L18(in_pdoExtension_5: int, in_Tmp_627: int, in_irql_2: int, in_vslice_dummy_var_534: int) returns (out_Tmp_627: int, out_irql_2: int, out_vslice_dummy_var_534: int)
{

  entry:
    out_Tmp_627, out_irql_2, out_vslice_dummy_var_534 := in_Tmp_627, in_irql_2, in_vslice_dummy_var_534;
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} in_pdoExtension_5 != 0;
    assume in_pdoExtension_5 > 0;
    goto anon34_Else;

  anon34_Else:
    call {:si_unique_call 4255} sdv_KeReleaseSpinLock(0, out_irql_2);
    call {:si_unique_call 4256} out_vslice_dummy_var_534 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 4257} out_Tmp_627 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    call {:si_unique_call 4258} sdv_KeAcquireSpinLock(0, out_Tmp_627);
    assume {:nonnull} out_Tmp_627 != 0;
    assume out_Tmp_627 > 0;
    havoc out_irql_2;
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    call {:si_unique_call 4259} {:si_old_unique_call 1} out_Tmp_627, out_irql_2, out_vslice_dummy_var_534 := Sbp2ManagementTransactionWorker#1_loop_L18(in_pdoExtension_5, out_Tmp_627, out_irql_2, out_vslice_dummy_var_534);
    return;
}



procedure {:LoopProcedure} Sbp2ManagementTransactionWorker#1_loop_L18(in_pdoExtension_5: int, in_Tmp_627: int, in_irql_2: int, in_vslice_dummy_var_534: int) returns (out_Tmp_627: int, out_irql_2: int, out_vslice_dummy_var_534: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_534 == 258 || out_vslice_dummy_var_534 == 0 || out_vslice_dummy_var_534 == in_vslice_dummy_var_534;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartPacket#0_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_502: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_502: int)
{

  entry:
    out_nextEntry_2, out_queueEntry2_1, out_sdv_502 := in_nextEntry_2, in_queueEntry2_1, in_sdv_502;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon17_Else;

  anon17_Else:
    call {:si_unique_call 4260} out_sdv_502 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_502;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon20_Else;

  anon20_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket#0_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_502: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_502: int);
  free ensures {:va_keep} out_nextEntry_2 == in_nextEntry_2;
  free ensures {:va_keep} out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} out_sdv_502 == in_sdv_502;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2StartPacket#1_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_502: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_502: int)
{

  entry:
    out_nextEntry_2, out_queueEntry2_1, out_sdv_502 := in_nextEntry_2, in_queueEntry2_1, in_sdv_502;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon17_Else;

  anon17_Else:
    call {:si_unique_call 4261} out_sdv_502 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_502;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon20_Else;

  anon20_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket#1_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_502: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_502: int);
  free ensures {:va_keep} out_nextEntry_2 == in_nextEntry_2;
  free ensures {:va_keep} out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} out_sdv_502 == in_sdv_502;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2GlobalStatusCallback#0_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_134: int) returns (out_nextListItem: int, out_entry: int, out_sdv_134: int)
{

  entry:
    out_nextListItem, out_entry, out_sdv_134 := in_nextListItem, in_entry, in_sdv_134;
    goto L204, exit;

  exit:
    return;

  L204:
    goto anon210_Else;

  anon210_Else:
    call {:si_unique_call 4262} out_sdv_134 := sdv_containing_record(out_entry, 0);
    out_nextListItem := out_sdv_134;
    assume {:nonnull} out_nextListItem != 0;
    assume out_nextListItem > 0;
    goto anon260_Else;

  anon260_Else:
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon260_Else_dummy;

  anon260_Else_dummy:
    havoc out_entry;
    return;
}



procedure {:LoopProcedure} Sbp2GlobalStatusCallback#0_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_134: int) returns (out_nextListItem: int, out_entry: int, out_sdv_134: int);
  free ensures {:va_keep} out_nextListItem == in_nextListItem;
  free ensures {:va_keep} out_entry == in_entry;
  free ensures {:va_keep} out_sdv_134 == in_sdv_134;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation Sbp2GlobalStatusCallback#1_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_134: int) returns (out_nextListItem: int, out_entry: int, out_sdv_134: int)
{

  entry:
    out_nextListItem, out_entry, out_sdv_134 := in_nextListItem, in_entry, in_sdv_134;
    goto L204, exit;

  exit:
    return;

  L204:
    goto anon210_Else;

  anon210_Else:
    call {:si_unique_call 4263} out_sdv_134 := sdv_containing_record(out_entry, 0);
    out_nextListItem := out_sdv_134;
    assume {:nonnull} out_nextListItem != 0;
    assume out_nextListItem > 0;
    goto anon260_Else;

  anon260_Else:
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon260_Else_dummy;

  anon260_Else_dummy:
    havoc out_entry;
    return;
}



procedure {:LoopProcedure} Sbp2GlobalStatusCallback#1_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_134: int) returns (out_nextListItem: int, out_entry: int, out_sdv_134: int);
  free ensures {:va_keep} out_nextListItem == in_nextListItem;
  free ensures {:va_keep} out_entry == in_entry;
  free ensures {:va_keep} out_sdv_134 == in_sdv_134;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



procedure fakeMain() returns (Tmp_956: int, dup_assertVar: bool);
  modifies alloc, sdv_inside_init_entrypoint, Mem_T.PWPP_PROJECT_CONTROL_BLOCK, Mem_T.DeviceExtension__DEVICE_OBJECT, Mem_T.CurrentStackLocation_unnamed_tag_6, LockDepth, t, yogi_error, Mem_T.P_DEVICE_OBJECT, Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.PVOID, Mem_T.P_IRBIRP, Mem_T.LogStart__DEBUG_LOG;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(t) == 1 || old(t) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || t == 1 || t == 0;



implementation {:entrypoint} fakeMain() returns (Tmp_956: int, dup_assertVar: bool)
{

  start:
    call Tmp_956, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


