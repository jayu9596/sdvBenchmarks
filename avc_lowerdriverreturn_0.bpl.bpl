var {:scalar} alloc: int;

var {:scalar} return_state: int;

var {:scalar} thread_status: int;

var {:scalar} lowerDriverFailed: int;

var {:scalar} yogi_error: int;

var {:scalar} irp_status: int;

var {:pointer} SLAM_guard_S_0: int;

var {:scalar} irp_copy_next: int;

var {:scalar} sdv_compFset: int;

var {:scalar} sdv_invoke_on_error: int;

var {:scalar} sdv_invoke_on_cancel: int;

var {:scalar} sdv_invoke_on_success: int;

var {:scalar} Mem_T.CompletionRoutine__IO_STACK_LOCATION: [int]int;

var {:scalar} Mem_T.CurrentStackLocation_unnamed_tag_7: [int]int;

var {:scalar} Mem_T.MajorFunction__IO_STACK_LOCATION: [int]int;

var {:scalar} Mem_T.MinorFunction__IO_STACK_LOCATION: [int]int;

var {:scalar} Mem_T.PendingReturned__IRP: [int]int;

var {:scalar} Mem_T.Status__IO_STATUS_BLOCK: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const ClfsContainerInitializing: int;

const ClfsContainerPendingArchiveAndDelete: int;

const KsDstPinDescriptor: int;

const CLFS_SCAN_FORWARD: int;

const CLFS_SCAN_INIT: int;

const ClsContainerPendingArchive: int;

const BUS1394_CLASS_GUID: int;

const CLFS_SCAN_INITIALIZED: int;

const ClsContainerInactive: int;

const ClfsNullRecord: int;

const ClfsContainerActivePendingDelete: int;

const ClfsContainerActive: int;

const GUID_61883_CLASS: int;

const UnitAddr: int;

const ClsContainerActive: int;

const ClfsClientRecord: int;

const ClsContainerPendingArchiveAndDelete: int;

const CLFS_SCAN_BUFFERED: int;

const ClfsDataRecord: int;

const KsSrcPinDescriptor: int;

const ClsContainerInitializing: int;

const ClfsContainerInactive: int;

const CLFS_MAX_CONTAINER_INFO: int;

const GUID_VIRTUAL_AVC_CLASS: int;

const GUID_AVC_CLASS: int;

const ClfsRestartRecord: int;

const ClsContainerActivePendingDelete: int;

const CLFS_SCAN_BACKWARD: int;

const ClfsContainerPendingArchive: int;

const CLFS_SCAN_CLOSE: int;

const GUID_PCMCIA_BUS_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_PCMCIA: int;

const GUID_TRANSLATOR_INTERFACE_STANDARD: int;

const GUID_PCI_VIRTUALIZATION_INTERFACE: int;

const GUID_ARBITER_INTERFACE_STANDARD: int;

const GUID_QUERY_CRASHDUMP_FUNCTIONS: int;

const GUID_ACPI_CMOS_INTERFACE_STANDARD: int;

const AvcPeerInstanceList: int;

const GUID_BUS_TYPE_1394: int;

const GUID_AGP_TARGET_BUS_INTERFACE_STANDARD: int;

const GUID_TARGET_DEVICE_REMOVE_CANCELLED: int;

const GUID_BUS_TYPE_ISAPNP: int;

const AvcAlternateOpcodePool: int;

const GUID_MF_ENUMERATION_INTERFACE: int;

const GUID_LEGACY_DEVICE_DETECTION_STANDARD: int;

const GUID_PCC_INTERFACE_STANDARD: int;

const GUID_BUS_INTERFACE_STANDARD: int;

const GUID_PNP_POWER_SETTING_CHANGE: int;

const GUID_BUS_TYPE_ACPI: int;

const GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE: int;

const GUID_BUS_TYPE_DOT4PRT: int;

const GUID_BUS_TYPE_EISA: int;

const AvcQueryTablePool: int;

const GUID_ACPI_REGS_INTERFACE_STANDARD: int;

const GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED: int;

const GUID_ACPI_INTERFACE_STANDARD2: int;

const GUID_PARTITION_UNIT_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_IRDA: int;

const AvcVirtualInstanceList: int;

const GUID_PCI_BUS_INTERFACE_STANDARD2: int;

const GUID_WUDF_DEVICE_HOST_PROBLEM: int;

const GUID_DEVICE_INTERFACE_REMOVAL: int;

const GUID_BUS_TYPE_SERENUM: int;

const GUID_PCI_DEVICE_PRESENT_INTERFACE: int;

const GUID_BUS_TYPE_MCA: int;

const GUID_POWER_DEVICE_TIMEOUTS: int;

const GUID_THERMAL_COOLING_INTERFACE: int;

const AvcFcpPool: int;

const GUID_HWPROFILE_CHANGE_CANCELLED: int;

const GUID_PNP_LOCATION_INTERFACE: int;

const GUID_MSIX_TABLE_CONFIG_INTERFACE: int;

const GUID_BUS_TYPE_INTERNAL: int;

const GUID_BUS_TYPE_LPTENUM: int;

const GUID_HWPROFILE_CHANGE_COMPLETE: int;

const GUID_DEVICE_INTERFACE_ARRIVAL: int;

const GUID_BUS_TYPE_AVC: int;

const GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_USB: int;

const AvcCommandContextPool: int;

const GUID_INT_ROUTE_INTERFACE_STANDARD: int;

const GUID_PROCESSOR_PCC_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_USBPRINT: int;

const GUID_BUS_TYPE_PCI: int;

const GUID_TARGET_DEVICE_QUERY_REMOVE: int;

const GUID_PCI_BUS_INTERFACE_STANDARD: int;

const GUID_HWPROFILE_QUERY_CHANGE: int;

const GUID_BUS_TYPE_SW_DEVICE: int;

const AvcCommandLinkPool: int;

const GUID_POWER_DEVICE_ENABLE: int;

const GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE: int;

const GUID_PNP_CUSTOM_NOTIFICATION: int;

const GUID_BUS_TYPE_SD: int;

const GUID_PNP_POWER_NOTIFICATION: int;

const GUID_PCC_INTERFACE_INTERNAL: int;

const GUID_D3COLD_SUPPORT_INTERFACE: int;

const GUID_REENUMERATE_SELF_INTERFACE_STANDARD: int;

const GUID_BUS_TYPE_HID: int;

const GUID_TARGET_DEVICE_REMOVE_COMPLETE: int;

const GUID_ACPI_INTERFACE_STANDARD: int;

const GUID_POWER_DEVICE_WAKE_ENABLE: int;

const sdv_cancelFptr: int;

const SLAM_guard_S_0_init: int;

const irpstatus: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const p_sdv_fx_dev_object: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const KdDebuggerNotPresent: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_Io_Removelock_release_wait_returned: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const KdDebuggerEnabled: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_harnessStackLocation: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_fx_dev_object: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const ClfsContainerInitializing_1: int;

const ClfsContainerPendingArchiveAndDelete_1: int;

const CLFS_SCAN_FORWARD_1: int;

const CLFS_SCAN_INIT_1: int;

const ClsContainerPendingArchive_1: int;

const CLFS_SCAN_INITIALIZED_1: int;

const ClsContainerInactive_1: int;

const ClfsNullRecord_1: int;

const ClfsContainerActivePendingDelete_1: int;

const ClfsContainerActive_1: int;

const ClsContainerActive_1: int;

const ClfsClientRecord_1: int;

const ClsContainerPendingArchiveAndDelete_1: int;

const CLFS_SCAN_BUFFERED_1: int;

const ClfsDataRecord_1: int;

const ClsContainerInitializing_1: int;

const ClfsContainerInactive_1: int;

const CLFS_MAX_CONTAINER_INFO_1: int;

const ClfsRestartRecord_1: int;

const ClsContainerActivePendingDelete_1: int;

const CLFS_SCAN_BACKWARD_1: int;

const ClfsContainerPendingArchive_1: int;

const CLFS_SCAN_CLOSE_1: int;

const ClfsContainerInitializing_2: int;

const ClfsContainerPendingArchiveAndDelete_2: int;

const CLFS_SCAN_FORWARD_2: int;

const CLFS_SCAN_INIT_2: int;

const ClsContainerPendingArchive_2: int;

const CLFS_SCAN_INITIALIZED_2: int;

const ClsContainerInactive_2: int;

const ClfsNullRecord_2: int;

const ClfsContainerActivePendingDelete_2: int;

const ClfsContainerActive_2: int;

const UnitAddr_1: int;

const ClsContainerActive_2: int;

const ClfsClientRecord_2: int;

const ClsContainerPendingArchiveAndDelete_2: int;

const CLFS_SCAN_BUFFERED_2: int;

const ClfsDataRecord_2: int;

const ClsContainerInitializing_2: int;

const ClfsContainerInactive_2: int;

const CLFS_MAX_CONTAINER_INFO_2: int;

const ClfsRestartRecord_2: int;

const ClsContainerActivePendingDelete_2: int;

const CLFS_SCAN_BACKWARD_2: int;

const ClfsContainerPendingArchive_2: int;

const CLFS_SCAN_CLOSE_2: int;

procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var {:scalar} Tmp_2: int;
  var {:scalar} Tmp_4: int;
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 0} Tmp_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1} vslice_dummy_var_0 := __HAVOC_malloc(4);
    call {:si_unique_call 2} Tmp_4 := __HAVOC_malloc(4);
    assume ClfsNullRecord == 0;
    assume ClfsDataRecord == 1;
    assume ClfsRestartRecord == 2;
    assume ClfsClientRecord == 3;
    assume ClsContainerInitializing == 1;
    assume ClsContainerInactive == 2;
    assume ClsContainerActive == 4;
    assume ClsContainerActivePendingDelete == 8;
    assume ClsContainerPendingArchive == 16;
    assume ClsContainerPendingArchiveAndDelete == 32;
    assume ClfsContainerInitializing == 1;
    assume ClfsContainerInactive == 2;
    assume ClfsContainerActive == 4;
    assume ClfsContainerActivePendingDelete == 8;
    assume ClfsContainerPendingArchive == 16;
    assume ClfsContainerPendingArchiveAndDelete == 32;
    assume CLFS_MAX_CONTAINER_INFO == 256;
    assume CLFS_SCAN_INIT == 1;
    assume CLFS_SCAN_FORWARD == 2;
    assume CLFS_SCAN_BACKWARD == 4;
    assume CLFS_SCAN_CLOSE == 8;
    assume CLFS_SCAN_INITIALIZED == 16;
    assume CLFS_SCAN_BUFFERED == 32;
    assume UnitAddr == 255;
    assume {:nonnull} Tmp_4 != 0;
    assume Tmp_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    return;
}



procedure {:origName "sdv_hash_330311584_sdv_special_DTOR"} sdv_hash_330311584_sdv_special_DTOR(actual_this: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_330311584_sdv_special_DTOR"} sdv_hash_330311584_sdv_special_DTOR(actual_this: int)
{
  var {:pointer} this: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;

  anon0:
    call {:si_unique_call 3} vslice_dummy_var_1 := __HAVOC_malloc(4);
    this := actual_this;
    call {:si_unique_call 4} sdv_do_paged_code_check();
    call {:si_unique_call 5} vslice_dummy_var_2 := sdv_hash_145490435(this, 0, 0);
    call {:si_unique_call 6} vslice_dummy_var_3 := sdv_hash_174130848(this, 0, 0);
    assume {:nonnull} this != 0;
    assume this > 0;
    call {:si_unique_call 7} sdv_hash_648551832_sdv_special_DTOR(m_DstAddr_CKsPinDescriptor(this));
    assume {:nonnull} this != 0;
    assume this > 0;
    call {:si_unique_call 8} sdv_hash_648551832_sdv_special_DTOR(m_SrcAddr_CKsPinDescriptor(this));
    return;
}



procedure {:origName "sdv_hash_889363889"} sdv_hash_889363889(actual_this_1: int, actual_AvcIrb: int, actual_idx: int, actual_Flags: int, actual_srcAddr: int, actual_srcPlug: int, actual_dstAddr: int, actual_dstPlug: int) returns (Tmp_7: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_7 == 0 || Tmp_7 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_889363889"} sdv_hash_889363889(actual_this_1: int, actual_AvcIrb: int, actual_idx: int, actual_Flags: int, actual_srcAddr: int, actual_srcPlug: int, actual_dstAddr: int, actual_dstPlug: int) returns (Tmp_7: int)
{
  var {:pointer} Tmp_8: int;
  var {:scalar} cbOperands: int;
  var {:pointer} Tmp_9: int;
  var {:scalar} sdv_7: int;
  var {:scalar} Tmp_10: int;
  var {:scalar} sdv_10: int;
  var {:scalar} sdv_11: int;
  var {:pointer} Operands: int;
  var {:scalar} sdv_12: int;
  var {:scalar} Tmp_12: int;
  var {:pointer} AvcIrb: int;
  var {:pointer} idx: int;
  var {:pointer} Flags: int;
  var {:pointer} srcAddr: int;
  var {:pointer} srcPlug: int;
  var {:pointer} dstAddr: int;
  var {:pointer} dstPlug: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;

  anon0:
    AvcIrb := actual_AvcIrb;
    idx := actual_idx;
    Flags := actual_Flags;
    srcAddr := actual_srcAddr;
    srcPlug := actual_srcPlug;
    dstAddr := actual_dstAddr;
    dstPlug := actual_dstPlug;
    call {:si_unique_call 9} sdv_do_paged_code_check();
    call {:si_unique_call 10} Operands := sdv_hash_901487196(AvcIrb);
    call {:si_unique_call 11} cbOperands := sdv_hash_850420247(AvcIrb);
    assume {:nonnull} idx != 0;
    assume idx > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_7 := 0;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:nonnull} Flags != 0;
    assume Flags > 0;
    assume {:nonnull} Operands != 0;
    assume Operands > 0;
    assume {:nonnull} idx != 0;
    assume idx > 0;
    assume {:nonnull} idx != 0;
    assume idx > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    Tmp_7 := 0;
    goto L1;

  anon14_Then:
    Tmp_9 := Operands;
    assume {:nonnull} idx != 0;
    assume idx > 0;
    havoc Tmp_10;
    call {:si_unique_call 12} vslice_dummy_var_4 := sdv_hash_332631937(srcAddr, Tmp_10, Tmp_9);
    call {:si_unique_call 13} sdv_10 := sdv_hash_330049800(srcAddr);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_10 != 0;
    call {:si_unique_call 14} sdv_11 := sdv_hash_330049800(srcAddr);
    assume {:nonnull} idx != 0;
    assume idx > 0;
    assume {:nonnull} Operands != 0;
    assume Operands > 0;
    assume {:nonnull} srcPlug != 0;
    assume srcPlug > 0;
    assume {:nonnull} idx != 0;
    assume idx > 0;
    assume {:nonnull} idx != 0;
    assume idx > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Tmp_7 := 0;
    goto L1;

  anon15_Then:
    Tmp_8 := Operands;
    assume {:nonnull} idx != 0;
    assume idx > 0;
    havoc Tmp_12;
    call {:si_unique_call 15} vslice_dummy_var_5 := sdv_hash_332631937(dstAddr, Tmp_12, Tmp_8);
    call {:si_unique_call 16} sdv_12 := sdv_hash_330049800(dstAddr);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_12 != 0;
    call {:si_unique_call 17} sdv_7 := sdv_hash_330049800(dstAddr);
    assume {:nonnull} idx != 0;
    assume idx > 0;
    assume {:nonnull} Operands != 0;
    assume Operands > 0;
    assume {:nonnull} dstPlug != 0;
    assume dstPlug > 0;
    assume {:nonnull} idx != 0;
    assume idx > 0;
    Tmp_7 := 1;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_12 == 0;
    Tmp_7 := 0;
    goto L1;

  anon12_Then:
    assume {:partition} sdv_10 == 0;
    Tmp_7 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_955777450"} sdv_hash_955777450(actual_this_2: int, actual_PdoExtension: int, actual_ConnectInfo: int) returns (Tmp_13: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_13 == -1073741436 || Tmp_13 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_955777450"} sdv_hash_955777450(actual_this_2: int, actual_PdoExtension: int, actual_ConnectInfo: int) returns (Tmp_13: int)
{
  var {:pointer} Tmp_14: int;
  var {:scalar} SubunitAddr: int;
  var {:pointer} Tmp_15: int;
  var {:dopa} {:scalar} Tmp_16: int;
  var {:scalar} sdv_13: int;
  var {:pointer} sdv_14: int;
  var {:pointer} sdv_15: int;
  var {:pointer} sdv_16: int;
  var {:scalar} sdv_17: int;
  var {:scalar} ntStatus: int;
  var {:scalar} sdv_18: int;
  var {:pointer} Tmp_17: int;
  var {:dopa} {:scalar} Tmp_18: int;
  var {:scalar} sdv_20: int;
  var {:pointer} sdv_21: int;
  var {:scalar} DeviceID: int;
  var {:pointer} this_2: int;
  var {:pointer} PdoExtension: int;
  var {:pointer} ConnectInfo: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_2554: int;
  var vslice_dummy_var_2555: int;
  var vslice_dummy_var_2556: int;
  var vslice_dummy_var_2557: int;
  var vslice_dummy_var_2558: int;

  anon0:
    call {:si_unique_call 18} SubunitAddr := __HAVOC_malloc(12);
    call {:si_unique_call 19} Tmp_16 := __HAVOC_malloc(4);
    call {:si_unique_call 20} Tmp_18 := __HAVOC_malloc(4);
    call {:si_unique_call 21} DeviceID := __HAVOC_malloc(16);
    this_2 := actual_this_2;
    PdoExtension := actual_PdoExtension;
    ConnectInfo := actual_ConnectInfo;
    call {:si_unique_call 22} sdv_do_paged_code_check();
    ntStatus := 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    ntStatus := -1073741436;
    goto L11;

  L11:
    Tmp_13 := ntStatus;
    return;

  anon24_Then:
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 23} sdv_hash_421197326(PdoExtension, DeviceID);
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    call {:si_unique_call 24} sdv_13 := IsEqualGUID(DeviceID__AVC_UNIQUE_ID(ConnectInfo), DeviceID);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} sdv_13 != 0;
    assume {:nonnull} SubunitAddr != 0;
    assume SubunitAddr > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_14;
    assume {:nonnull} Tmp_14 != 0;
    assume Tmp_14 > 0;
    havoc vslice_dummy_var_2554;
    call {:si_unique_call 25} sdv_hash_567308675_sdv_special_CTOR(SubunitAddr, vslice_dummy_var_2554);
    call {:si_unique_call 26} sdv_17 := sdv_hash_322187731(this_2);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} 1 == sdv_17;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    havoc vslice_dummy_var_2555;
    call {:si_unique_call 27} sdv_20 := sdv_hash_405508819(SubunitAddr, vslice_dummy_var_2555);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_20 != 0;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Tmp_18 != 0;
    assume Tmp_18 > 0;
    Tmp_15 := Tmp_18;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    call {:si_unique_call 28} vslice_dummy_var_6 := sdv_hash_332631937(m_SrcAddr_CKsPinDescriptor(this_2), 1, Tmp_15);
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    call {:si_unique_call 29} sdv_14 := sdv_hash_103855929(SubunitAddr);
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    call {:si_unique_call 30} sdv_hash_13414602(m_DstAddr_CKsPinDescriptor(this_2), sdv_14);
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    goto L42;

  L42:
    call {:si_unique_call 31} sdv_hash_648551832_sdv_special_DTOR(SubunitAddr);
    goto L11;

  anon21_Then:
    goto L42;

  anon20_Then:
    assume {:partition} sdv_20 == 0;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    havoc vslice_dummy_var_2556;
    call {:si_unique_call 32} sdv_hash_13414602(m_SrcAddr_CKsPinDescriptor(this_2), vslice_dummy_var_2556);
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    call {:si_unique_call 33} sdv_21 := sdv_hash_103855929(SubunitAddr);
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    call {:si_unique_call 34} sdv_hash_13414602(m_DstAddr_CKsPinDescriptor(this_2), sdv_21);
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    goto L42;

  anon19_Then:
    assume {:partition} 1 != sdv_17;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    havoc vslice_dummy_var_2557;
    call {:si_unique_call 35} sdv_18 := sdv_hash_405508819(SubunitAddr, vslice_dummy_var_2557);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_18 != 0;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 36} sdv_15 := sdv_hash_103855929(SubunitAddr);
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    call {:si_unique_call 37} sdv_hash_13414602(m_SrcAddr_CKsPinDescriptor(this_2), sdv_15);
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    Tmp_17 := Tmp_16;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    call {:si_unique_call 38} vslice_dummy_var_7 := sdv_hash_332631937(m_DstAddr_CKsPinDescriptor(this_2), 1, Tmp_17);
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    goto L42;

  anon23_Then:
    goto L42;

  anon22_Then:
    assume {:partition} sdv_18 == 0;
    call {:si_unique_call 39} sdv_16 := sdv_hash_103855929(SubunitAddr);
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    call {:si_unique_call 40} sdv_hash_13414602(m_SrcAddr_CKsPinDescriptor(this_2), sdv_16);
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    havoc vslice_dummy_var_2558;
    call {:si_unique_call 41} sdv_hash_13414602(m_DstAddr_CKsPinDescriptor(this_2), vslice_dummy_var_2558);
    assume {:nonnull} ConnectInfo != 0;
    assume ConnectInfo > 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    assume {:nonnull} this_2 != 0;
    assume this_2 > 0;
    goto L42;

  anon18_Then:
    assume {:partition} sdv_13 == 0;
    goto L11;

  anon17_Then:
    goto L11;
}



procedure {:origName "sdv_hash_1062250938"} sdv_hash_1062250938(actual_this_3: int, actual_srcAddr_1: int, actual_srcPlug_1: int, actual_dstAddr_1: int, actual_dstPlug_1: int) returns (Tmp_20: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_1062250938"} sdv_hash_1062250938(actual_this_3: int, actual_srcAddr_1: int, actual_srcPlug_1: int, actual_dstAddr_1: int, actual_dstPlug_1: int) returns (Tmp_20: int)
{
  var {:pointer} Tmp_21: int;
  var {:pointer} Tmp_23: int;
  var {:pointer} sdv_23: int;
  var {:pointer} Tmp_24: int;
  var {:pointer} Tmp_25: int;
  var {:pointer} Tmp_26: int;
  var {:pointer} pMedium: int;
  var {:pointer} Tmp_27: int;
  var {:pointer} Tmp_28: int;
  var {:pointer} Tmp_29: int;
  var {:pointer} Tmp_30: int;
  var {:pointer} Tmp_31: int;
  var {:pointer} this_3: int;
  var {:pointer} srcAddr_1: int;
  var {:scalar} srcPlug_1: int;
  var {:pointer} dstAddr_1: int;
  var {:scalar} dstPlug_1: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_9: int;

  anon0:
    this_3 := actual_this_3;
    srcAddr_1 := actual_srcAddr_1;
    srcPlug_1 := actual_srcPlug_1;
    dstAddr_1 := actual_dstAddr_1;
    dstPlug_1 := actual_dstPlug_1;
    call {:si_unique_call 42} Tmp_26 := __HAVOC_malloc(32);
    call {:si_unique_call 43} Tmp_29 := __HAVOC_malloc(32);
    call {:si_unique_call 44} sdv_do_paged_code_check();
    call {:si_unique_call 45} sdv_23 := ExAllocatePoolWithTag(1, 24, 541283905);
    pMedium := sdv_23;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pMedium != 0;
    assume {:nonnull} this_3 != 0;
    assume this_3 > 0;
    havoc Tmp_31;
    assume {:nonnull} Tmp_31 != 0;
    assume Tmp_31 > 0;
    havoc Tmp_27;
    assume {:nonnull} Tmp_27 != 0;
    assume Tmp_27 > 0;
    havoc Tmp_23;
    assume {:nonnull} Tmp_23 != 0;
    assume Tmp_23 > 0;
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    call {:si_unique_call 46} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    havoc Tmp_26;
    Tmp_30 := Tmp_26;
    call {:si_unique_call 47} vslice_dummy_var_8 := sdv_hash_387797355(srcAddr_1, 4, Tmp_30);
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    havoc Tmp_29;
    Tmp_28 := Tmp_29 + 4 * 4;
    call {:si_unique_call 48} vslice_dummy_var_9 := sdv_hash_387797355(dstAddr_1, 4, Tmp_28);
    assume {:nonnull} this_3 != 0;
    assume this_3 > 0;
    havoc Tmp_24;
    assume {:nonnull} Tmp_24 != 0;
    assume Tmp_24 > 0;
    havoc Tmp_25;
    assume {:nonnull} Tmp_25 != 0;
    assume Tmp_25 > 0;
    havoc Tmp_21;
    assume {:nonnull} Tmp_21 != 0;
    assume Tmp_21 > 0;
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    assume {:nonnull} pMedium != 0;
    assume pMedium > 0;
    goto L12;

  L12:
    Tmp_20 := pMedium;
    return;

  anon3_Then:
    assume {:partition} pMedium == 0;
    goto L12;
}



procedure {:origName "sdv_hash_723703181"} sdv_hash_723703181(actual_this_4: int, actual_PinID: int) returns (Tmp_32: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_723703181"} sdv_hash_723703181(actual_this_4: int, actual_PinID: int) returns (Tmp_32: int)
{
  var {:pointer} Tmp_33: int;
  var {:pointer} Tmp_34: int;
  var {:scalar} Tmp_35: int;
  var {:pointer} this_4: int;
  var {:scalar} PinID: int;
  var vslice_dummy_var_2559: int;

  anon0:
    this_4 := actual_this_4;
    PinID := actual_PinID;
    call {:si_unique_call 49} sdv_do_paged_code_check();
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_35 := PinID;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    havoc Tmp_34;
    Tmp_33 := Tmp_34 + Tmp_35 * 324;
    assume {:nonnull} this_4 != 0;
    assume this_4 > 0;
    havoc vslice_dummy_var_2559;
    call {:si_unique_call 50} Tmp_32 := sdv_hash_132241128(Tmp_33, vslice_dummy_var_2559);
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_32 := -1073741811;
    goto L1;
}



procedure {:origName "sdv_hash_174130848"} sdv_hash_174130848(actual_this_5: int, actual_MediumsCount: int, actual_Mediums: int) returns (Tmp_37: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_37 == actual_this_5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_174130848"} sdv_hash_174130848(actual_this_5: int, actual_MediumsCount: int, actual_Mediums: int) returns (Tmp_37: int)
{
  var {:scalar} cbMediums: int;
  var {:pointer} sdv_27: int;
  var {:pointer} this_5: int;
  var {:scalar} MediumsCount: int;
  var {:pointer} Mediums: int;

  anon0:
    this_5 := actual_this_5;
    MediumsCount := actual_MediumsCount;
    Mediums := actual_Mediums;
    call {:si_unique_call 51} sdv_do_paged_code_check();
    assume {:nonnull} this_5 != 0;
    assume this_5 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 52} sdv_ExFreePool(0);
    assume {:nonnull} this_5 != 0;
    assume this_5 > 0;
    assume {:nonnull} this_5 != 0;
    assume this_5 > 0;
    goto L7;

  L7:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MediumsCount != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mediums != 0;
    cbMediums := MediumsCount * 24;
    call {:si_unique_call 53} sdv_27 := ExAllocatePoolWithTag(1, cbMediums, 541283905);
    assume {:nonnull} this_5 != 0;
    assume this_5 > 0;
    assume {:nonnull} this_5 != 0;
    assume this_5 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} this_5 != 0;
    assume this_5 > 0;
    call {:si_unique_call 54} sdv_RtlCopyMemory(0, 0, cbMediums);
    goto L13;

  L13:
    Tmp_37 := this_5;
    return;

  anon12_Then:
    goto L13;

  anon11_Then:
    assume {:partition} Mediums == 0;
    goto L13;

  anon10_Then:
    assume {:partition} MediumsCount == 0;
    goto L13;

  anon9_Then:
    goto L7;
}



procedure {:origName "sdv_hash_145490435"} sdv_hash_145490435(actual_this_6: int, actual_InterfacesCount: int, actual_Interfaces: int) returns (Tmp_39: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_39 == actual_this_6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_145490435"} sdv_hash_145490435(actual_this_6: int, actual_InterfacesCount: int, actual_Interfaces: int) returns (Tmp_39: int)
{
  var {:pointer} sdv_28: int;
  var {:scalar} cbInterfaces: int;
  var {:pointer} this_6: int;
  var {:scalar} InterfacesCount: int;
  var {:pointer} Interfaces: int;

  anon0:
    this_6 := actual_this_6;
    InterfacesCount := actual_InterfacesCount;
    Interfaces := actual_Interfaces;
    call {:si_unique_call 55} sdv_do_paged_code_check();
    assume {:nonnull} this_6 != 0;
    assume this_6 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 56} sdv_ExFreePool(0);
    assume {:nonnull} this_6 != 0;
    assume this_6 > 0;
    assume {:nonnull} this_6 != 0;
    assume this_6 > 0;
    goto L7;

  L7:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} InterfacesCount != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Interfaces != 0;
    cbInterfaces := InterfacesCount * 24;
    call {:si_unique_call 57} sdv_28 := ExAllocatePoolWithTag(1, cbInterfaces, 541283905);
    assume {:nonnull} this_6 != 0;
    assume this_6 > 0;
    assume {:nonnull} this_6 != 0;
    assume this_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} this_6 != 0;
    assume this_6 > 0;
    call {:si_unique_call 58} sdv_RtlCopyMemory(0, 0, cbInterfaces);
    goto L13;

  L13:
    Tmp_39 := this_6;
    return;

  anon12_Then:
    goto L13;

  anon11_Then:
    assume {:partition} Interfaces == 0;
    goto L13;

  anon10_Then:
    assume {:partition} InterfacesCount == 0;
    goto L13;

  anon9_Then:
    goto L7;
}



procedure {:origName "sdv_hash_380977421"} sdv_hash_380977421(actual_this_7: int) returns (Tmp_41: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_41 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_380977421"} sdv_hash_380977421(actual_this_7: int) returns (Tmp_41: int)
{
  var {:pointer} this_7: int;

  anon0:
    this_7 := actual_this_7;
    call {:si_unique_call 59} sdv_do_paged_code_check();
    assume {:nonnull} this_7 != 0;
    assume this_7 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    goto L8;

  L8:
    Tmp_41 := 0;
    return;

  anon3_Then:
    assume {:nonnull} this_7 != 0;
    assume this_7 > 0;
    goto L8;
}



procedure {:origName "sdv_hash_246154148"} sdv_hash_246154148(actual_s_p_e_c_i_a_l_1: int, actual_s_p_e_c_i_a_l_2: int, actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_246154148"} sdv_hash_246154148(actual_s_p_e_c_i_a_l_1: int, actual_s_p_e_c_i_a_l_2: int, actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int)
{
  var {:pointer} s_p_e_c_i_a_l_1: int;
  var {:scalar} s_p_e_c_i_a_l_3: int;
  var {:scalar} s_p_e_c_i_a_l_4: int;
  var vslice_dummy_var_10: int;

  anon0:
    call {:si_unique_call 60} vslice_dummy_var_10 := __HAVOC_malloc(4);
    s_p_e_c_i_a_l_1 := actual_s_p_e_c_i_a_l_1;
    s_p_e_c_i_a_l_3 := actual_s_p_e_c_i_a_l_3;
    s_p_e_c_i_a_l_4 := actual_s_p_e_c_i_a_l_4;
    goto L3;

  L3:
    call {:si_unique_call 61} s_p_e_c_i_a_l_3 := sdv_hash_246154148_loop_L3(s_p_e_c_i_a_l_1, s_p_e_c_i_a_l_3, s_p_e_c_i_a_l_4);
    goto L3_last;

  L3_last:
    s_p_e_c_i_a_l_3 := s_p_e_c_i_a_l_3 - 1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} s_p_e_c_i_a_l_3 >= 0;
    assume s_p_e_c_i_a_l_4 == 0;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} 0 > s_p_e_c_i_a_l_3;
    return;
}



procedure {:origName "sdv_hash_132241128"} sdv_hash_132241128(actual_this_8: int, actual_PdoExtension_1: int) returns (Tmp_45: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_132241128"} sdv_hash_132241128(actual_this_8: int, actual_PdoExtension_1: int) returns (Tmp_45: int)
{
  var {:pointer} OutputIrb: int;
  var {:scalar} Irp: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} sdv_30: int;
  var {:pointer} AvcIrb_1: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} sdv_33: int;
  var {:scalar} sdv_34: int;
  var {:pointer} Tmp_48: int;
  var {:pointer} Tmp_49: int;
  var {:pointer} this_8: int;
  var {:pointer} PdoExtension_1: int;
  var vslice_dummy_var_2560: int;
  var vslice_dummy_var_2561: int;
  var vslice_dummy_var_2562: int;

  anon0:
    call {:si_unique_call 62} Irp := __HAVOC_malloc(16);
    this_8 := actual_this_8;
    PdoExtension_1 := actual_PdoExtension_1;
    call {:si_unique_call 63} sdv_do_paged_code_check();
    ntStatus_1 := 0;
    assume {:nonnull} this_8 != 0;
    assume this_8 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L10;

  L10:
    Tmp_45 := ntStatus_1;
    return;

  anon21_Then:
    assume {:nonnull} this_8 != 0;
    assume this_8 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 64} sdv_30 := sdv_hash_64962389(560);
    Tmp_46 := sdv_30;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Tmp_46 != 0;
    call {:si_unique_call 65} sdv_hash_265299797_sdv_special_CTOR(Tmp_46);
    goto L17;

  L17:
    AvcIrb_1 := Tmp_46;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} AvcIrb_1 != 0;
    OutputIrb := AvcIrb_1;
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc vslice_dummy_var_2560;
    call {:si_unique_call 66} sdv_hash_1058931133_sdv_special_CTOR(Irp, vslice_dummy_var_2560);
    assume {:nonnull} this_8 != 0;
    assume this_8 > 0;
    havoc vslice_dummy_var_2561;
    havoc vslice_dummy_var_2562;
    call {:si_unique_call 67} ntStatus_1 := sdv_hash_842212107(AvcIrb_1, m_SrcAddr_CKsPinDescriptor(this_8), vslice_dummy_var_2561, m_DstAddr_CKsPinDescriptor(this_8), vslice_dummy_var_2562, OutputIrb);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} ntStatus_1 >= 0;
    call {:si_unique_call 68} sdv_33 := sdv_hash_798100910(OutputIrb);
    call {:si_unique_call 69} ntStatus_1 := sdv_hash_592377359(Irp, sdv_33);
    goto L37;

  L37:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} ntStatus_1 != 0;
    goto L48;

  L48:
    Tmp_48 := AvcIrb_1;
    Tmp_49 := Tmp_48;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Tmp_49 != 0;
    goto L54;

  L54:
    call {:si_unique_call 70} sdv_hash_132241128_loop_L54();
    goto L54_last;

  L54_last:
    goto L54_dummy;

  L54_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:partition} Tmp_49 == 0;
    call {:si_unique_call 71} sdv_hash_428960233_sdv_special_DTOR(Irp);
    goto L10;

  anon19_Then:
    assume {:partition} ntStatus_1 == 0;
    call {:si_unique_call 72} sdv_34 := sdv_hash_390207871(AvcIrb_1);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_34 == 9;
    assume {:nonnull} this_8 != 0;
    assume this_8 > 0;
    goto L48;

  anon20_Then:
    assume {:partition} sdv_34 != 9;
    goto L48;

  anon18_Then:
    assume {:partition} 0 > ntStatus_1;
    goto L37;

  anon23_Then:
    assume {:partition} AvcIrb_1 == 0;
    ntStatus_1 := -1073741670;
    goto L10;

  anon22_Then:
    assume {:partition} Tmp_46 == 0;
    goto L17;

  anon17_Then:
    goto L10;
}



procedure {:origName "sdv_hash_827633206"} sdv_hash_827633206(actual_this_9: int, actual_kspd: int) returns (Tmp_50: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_50 == actual_this_9;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_827633206"} sdv_hash_827633206(actual_this_9: int, actual_kspd: int) returns (Tmp_50: int)
{
  var {:pointer} this_9: int;
  var {:pointer} kspd: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;

  anon0:
    this_9 := actual_this_9;
    kspd := actual_kspd;
    call {:si_unique_call 73} sdv_do_paged_code_check();
    call {:si_unique_call 74} vslice_dummy_var_11 := sdv_hash_145490435(this_9, 0, 0);
    call {:si_unique_call 75} vslice_dummy_var_12 := sdv_hash_174130848(this_9, 0, 0);
    assume {:nonnull} this_9 != 0;
    assume this_9 > 0;
    Tmp_50 := this_9;
    return;
}



procedure {:origName "sdv_hash_45263592"} sdv_hash_45263592(actual_this_10: int, actual_UniqueID: int) returns (Tmp_52: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_52 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_45263592"} sdv_hash_45263592(actual_this_10: int, actual_UniqueID: int) returns (Tmp_52: int)
{
  var {:pointer} this_10: int;
  var {:pointer} UniqueID: int;
  var vslice_dummy_var_2563: int;

  anon0:
    this_10 := actual_this_10;
    UniqueID := actual_UniqueID;
    call {:si_unique_call 76} sdv_do_paged_code_check();
    assume {:nonnull} this_10 != 0;
    assume this_10 > 0;
    havoc vslice_dummy_var_2563;
    call {:si_unique_call 77} sdv_hash_421197326(vslice_dummy_var_2563, UniqueID);
    Tmp_52 := 0;
    return;
}



procedure {:origName "sdv_hash_994092636"} sdv_hash_994092636(actual_this_11: int, actual_AvcIrb_2: int, actual_PinID_1: int) returns (Tmp_54: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_54 == 0 || Tmp_54 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_994092636"} sdv_hash_994092636(actual_this_11: int, actual_AvcIrb_2: int, actual_PinID_1: int) returns (Tmp_54: int)
{
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:dopa} {:scalar} Tmp_57: int;
  var {:pointer} Tmp_58: int;
  var {:pointer} Tmp_59: int;
  var {:scalar} sdv_38: int;
  var {:scalar} Tmp_60: int;
  var {:pointer} Tmp_61: int;
  var {:scalar} Tmp_62: int;
  var {:pointer} Tmp_63: int;
  var {:pointer} sdv_39: int;
  var {:scalar} Tmp_64: int;
  var {:scalar} Tmp_65: int;
  var {:pointer} sdv_40: int;
  var {:scalar} sdv_42: int;
  var {:scalar} Tmp_67: int;
  var {:scalar} ntStatus_2: int;
  var {:pointer} Tmp_68: int;
  var {:scalar} Tmp_69: int;
  var {:pointer} sdv_44: int;
  var {:scalar} sdv_46: int;
  var {:pointer} pMedium_1: int;
  var {:scalar} dstAddr_2: int;
  var {:pointer} Tmp_70: int;
  var {:dopa} {:scalar} srcPlug_2: int;
  var {:pointer} Tmp_71: int;
  var {:pointer} Tmp_72: int;
  var {:dopa} {:scalar} idx_1: int;
  var {:dopa} {:scalar} bFlags: int;
  var {:scalar} srcAddr_2: int;
  var {:dopa} {:scalar} dstPlug_2: int;
  var {:dopa} {:scalar} Tmp_73: int;
  var {:pointer} this_11: int;
  var {:pointer} AvcIrb_2: int;
  var {:scalar} PinID_1: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_2564: int;
  var vslice_dummy_var_2565: int;
  var vslice_dummy_var_2566: int;
  var vslice_dummy_var_2567: int;

  anon0:
    call {:si_unique_call 78} Tmp_57 := __HAVOC_malloc(4);
    call {:si_unique_call 79} dstAddr_2 := __HAVOC_malloc(12);
    call {:si_unique_call 80} srcPlug_2 := __HAVOC_malloc(4);
    call {:si_unique_call 81} idx_1 := __HAVOC_malloc(4);
    call {:si_unique_call 82} bFlags := __HAVOC_malloc(4);
    call {:si_unique_call 83} srcAddr_2 := __HAVOC_malloc(12);
    call {:si_unique_call 84} dstPlug_2 := __HAVOC_malloc(4);
    call {:si_unique_call 85} Tmp_73 := __HAVOC_malloc(4);
    this_11 := actual_this_11;
    AvcIrb_2 := actual_AvcIrb_2;
    PinID_1 := actual_PinID_1;
    call {:si_unique_call 86} sdv_do_paged_code_check();
    ntStatus_2 := 0;
    assume {:nonnull} srcAddr_2 != 0;
    assume srcAddr_2 > 0;
    call {:si_unique_call 87} sdv_hash_948020419_sdv_special_CTOR(srcAddr_2);
    assume {:nonnull} dstAddr_2 != 0;
    assume dstAddr_2 > 0;
    call {:si_unique_call 88} sdv_hash_948020419_sdv_special_CTOR(dstAddr_2);
    assume {:nonnull} idx_1 != 0;
    assume idx_1 > 0;
    call {:si_unique_call 89} sdv_38 := sdv_hash_889363889(this_11, AvcIrb_2, idx_1, bFlags, srcAddr_2, srcPlug_2, dstAddr_2, dstPlug_2);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_38 != 0;
    assume {:nonnull} bFlags != 0;
    assume bFlags > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Tmp_73 != 0;
    assume Tmp_73 > 0;
    Tmp_72 := Tmp_73;
    call {:si_unique_call 90} sdv_42 := sdv_hash_405508819(srcAddr_2, Tmp_72);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_42 != 0;
    Tmp_62 := PinID_1;
    assume {:nonnull} this_11 != 0;
    assume this_11 > 0;
    havoc Tmp_59;
    Tmp_56 := Tmp_59 + Tmp_62 * 324;
    call {:si_unique_call 91} sdv_44 := sdv_hash_677052185(Tmp_56, 8);
    assume {:nonnull} srcPlug_2 != 0;
    assume srcPlug_2 > 0;
    havoc vslice_dummy_var_2564;
    call {:si_unique_call 92} vslice_dummy_var_13 := sdv_hash_859452142(sdv_44, vslice_dummy_var_2564);
    goto L31;

  L31:
    Tmp_64 := ntStatus_2;
    call {:si_unique_call 93} sdv_hash_648551832_sdv_special_DTOR(dstAddr_2);
    call {:si_unique_call 94} sdv_hash_648551832_sdv_special_DTOR(srcAddr_2);
    Tmp_54 := Tmp_64;
    return;

  anon13_Then:
    assume {:partition} sdv_42 == 0;
    assume {:nonnull} Tmp_57 != 0;
    assume Tmp_57 > 0;
    Tmp_68 := Tmp_57;
    call {:si_unique_call 95} sdv_46 := sdv_hash_405508819(dstAddr_2, Tmp_68);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_46 == 0;
    assume {:nonnull} dstPlug_2 != 0;
    assume dstPlug_2 > 0;
    assume {:nonnull} srcPlug_2 != 0;
    assume srcPlug_2 > 0;
    havoc vslice_dummy_var_2565;
    havoc vslice_dummy_var_2566;
    call {:si_unique_call 96} pMedium_1 := sdv_hash_1062250938(this_11, srcAddr_2, vslice_dummy_var_2565, dstAddr_2, vslice_dummy_var_2566);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} pMedium_1 != 0;
    Tmp_69 := PinID_1;
    assume {:nonnull} this_11 != 0;
    assume this_11 > 0;
    havoc Tmp_61;
    Tmp_71 := Tmp_61 + Tmp_69 * 324;
    call {:si_unique_call 97} sdv_40 := sdv_hash_677052185(Tmp_71, 3);
    call {:si_unique_call 98} vslice_dummy_var_15 := sdv_hash_174130848(sdv_40, 1, pMedium_1);
    goto L31;

  anon15_Then:
    assume {:partition} pMedium_1 == 0;
    ntStatus_2 := -1073741670;
    goto L31;

  anon14_Then:
    assume {:partition} sdv_46 != 0;
    Tmp_65 := PinID_1;
    assume {:nonnull} this_11 != 0;
    assume this_11 > 0;
    havoc Tmp_58;
    Tmp_70 := Tmp_58 + Tmp_65 * 324;
    call {:si_unique_call 99} sdv_39 := sdv_hash_677052185(Tmp_70, 8);
    assume {:nonnull} dstPlug_2 != 0;
    assume dstPlug_2 > 0;
    havoc vslice_dummy_var_2567;
    call {:si_unique_call 100} vslice_dummy_var_14 := sdv_hash_859452142(sdv_39, vslice_dummy_var_2567);
    goto L31;

  anon12_Then:
    assume {:nonnull} bFlags != 0;
    assume bFlags > 0;
    havoc Tmp_67;
    Tmp_60 := PinID_1;
    assume {:nonnull} this_11 != 0;
    assume this_11 > 0;
    havoc Tmp_55;
    Tmp_63 := Tmp_55 + Tmp_60 * 324;
    call {:si_unique_call 101} vslice_dummy_var_16 := sdv_hash_677052185(Tmp_63, Tmp_67);
    goto L31;

  anon11_Then:
    assume {:partition} sdv_38 == 0;
    goto L31;
}



procedure {:origName "sdv_hash_517387733"} sdv_hash_517387733(actual_this_12: int, actual_PinID_2: int) returns (Tmp_74: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_74 == 0 || Tmp_74 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_517387733"} sdv_hash_517387733(actual_this_12: int, actual_PinID_2: int) returns (Tmp_74: int)
{
  var {:scalar} Tmp_75: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:pointer} this_12: int;
  var {:scalar} PinID_2: int;

  anon0:
    this_12 := actual_this_12;
    PinID_2 := actual_PinID_2;
    call {:si_unique_call 102} sdv_do_paged_code_check();
    assume {:nonnull} this_12 != 0;
    assume this_12 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_75 := PinID_2;
    assume {:nonnull} this_12 != 0;
    assume this_12 > 0;
    havoc Tmp_76;
    Tmp_77 := Tmp_76 + Tmp_75 * 324;
    call {:si_unique_call 103} Tmp_74 := sdv_hash_380977421(Tmp_77);
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_74 := -1073741811;
    goto L1;
}



procedure {:origName "sdv_hash_526192348"} sdv_hash_526192348(actual_this_13: int, actual_PinID_3: int, actual_ConnectInfo_1: int) returns (Tmp_79: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_79 == -1073741436 || Tmp_79 == 0 || Tmp_79 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_526192348"} sdv_hash_526192348(actual_this_13: int, actual_PinID_3: int, actual_ConnectInfo_1: int) returns (Tmp_79: int)
{
  var {:pointer} Tmp_80: int;
  var {:scalar} Tmp_82: int;
  var {:pointer} Tmp_83: int;
  var {:pointer} this_13: int;
  var {:scalar} PinID_3: int;
  var {:pointer} ConnectInfo_1: int;
  var vslice_dummy_var_2568: int;

  anon0:
    this_13 := actual_this_13;
    PinID_3 := actual_PinID_3;
    ConnectInfo_1 := actual_ConnectInfo_1;
    call {:si_unique_call 104} sdv_do_paged_code_check();
    assume {:nonnull} this_13 != 0;
    assume this_13 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_82 := PinID_3;
    assume {:nonnull} this_13 != 0;
    assume this_13 > 0;
    havoc Tmp_80;
    Tmp_83 := Tmp_80 + Tmp_82 * 324;
    assume {:nonnull} this_13 != 0;
    assume this_13 > 0;
    havoc vslice_dummy_var_2568;
    call {:si_unique_call 105} Tmp_79 := sdv_hash_955777450(Tmp_83, vslice_dummy_var_2568, ConnectInfo_1);
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_79 := -1073741811;
    goto L1;
}



procedure {:origName "sdv_hash_439640722"} sdv_hash_439640722(actual_this_14: int, actual_PinID_4: int, actual_ConnectInfo_2: int) returns (Tmp_84: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_84 == 0 || Tmp_84 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_439640722"} sdv_hash_439640722(actual_this_14: int, actual_PinID_4: int, actual_ConnectInfo_2: int) returns (Tmp_84: int)
{
  var {:pointer} Tmp_85: int;
  var {:pointer} Tmp_86: int;
  var {:scalar} SubunitAddr_1: int;
  var {:scalar} Tmp_87: int;
  var {:pointer} Tmp_88: int;
  var {:pointer} Tmp_89: int;
  var {:pointer} Tmp_90: int;
  var {:pointer} Tmp_91: int;
  var {:scalar} Tmp_92: int;
  var {:scalar} sdv_52: int;
  var {:scalar} ntStatus_3: int;
  var {:pointer} Tmp_93: int;
  var {:scalar} sdv_54: int;
  var {:scalar} sdv_55: int;
  var {:pointer} Tmp_94: int;
  var {:scalar} Tmp_95: int;
  var {:pointer} Tmp_96: int;
  var {:scalar} Tmp_97: int;
  var {:pointer} Tmp_98: int;
  var {:pointer} this_14: int;
  var {:scalar} PinID_4: int;
  var {:pointer} ConnectInfo_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_2569: int;
  var vslice_dummy_var_2570: int;
  var vslice_dummy_var_2571: int;

  anon0:
    call {:si_unique_call 106} SubunitAddr_1 := __HAVOC_malloc(12);
    this_14 := actual_this_14;
    PinID_4 := actual_PinID_4;
    ConnectInfo_2 := actual_ConnectInfo_2;
    call {:si_unique_call 107} sdv_do_paged_code_check();
    ntStatus_3 := 0;
    assume {:nonnull} this_14 != 0;
    assume this_14 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} SubunitAddr_1 != 0;
    assume SubunitAddr_1 > 0;
    assume {:nonnull} this_14 != 0;
    assume this_14 > 0;
    havoc Tmp_98;
    assume {:nonnull} Tmp_98 != 0;
    assume Tmp_98 > 0;
    havoc Tmp_96;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    havoc vslice_dummy_var_2569;
    call {:si_unique_call 108} sdv_hash_567308675_sdv_special_CTOR(SubunitAddr_1, vslice_dummy_var_2569);
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    assume {:nonnull} this_14 != 0;
    assume this_14 > 0;
    havoc vslice_dummy_var_2570;
    call {:si_unique_call 109} sdv_hash_421197326(vslice_dummy_var_2570, DeviceID__AVC_UNIQUE_ID(ConnectInfo_2));
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    havoc vslice_dummy_var_2571;
    call {:si_unique_call 110} vslice_dummy_var_17 := sdv_hash_387797355(SubunitAddr_1, 32, vslice_dummy_var_2571);
    Tmp_95 := PinID_4;
    assume {:nonnull} this_14 != 0;
    assume this_14 > 0;
    havoc Tmp_93;
    Tmp_86 := Tmp_93 + Tmp_95 * 324;
    call {:si_unique_call 111} sdv_52 := sdv_hash_179875575(Tmp_86);
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    Tmp_92 := PinID_4;
    assume {:nonnull} this_14 != 0;
    assume this_14 > 0;
    havoc Tmp_88;
    Tmp_91 := Tmp_88 + Tmp_92 * 324;
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    call {:si_unique_call 112} boogieTmp := sdv_hash_322187731(Tmp_91);
    Tmp_87 := PinID_4;
    assume {:nonnull} this_14 != 0;
    assume this_14 > 0;
    havoc Tmp_90;
    Tmp_85 := Tmp_90 + Tmp_87 * 324;
    call {:si_unique_call 113} sdv_54 := sdv_hash_117005741(Tmp_85);
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_97 := PinID_4;
    assume {:nonnull} this_14 != 0;
    assume this_14 > 0;
    havoc Tmp_89;
    Tmp_94 := Tmp_89 + Tmp_97 * 324;
    call {:si_unique_call 114} sdv_55 := sdv_hash_774347054(Tmp_94);
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    goto L45;

  L45:
    call {:si_unique_call 115} sdv_hash_648551832_sdv_special_DTOR(SubunitAddr_1);
    goto L48;

  L48:
    Tmp_84 := ntStatus_3;
    return;

  anon6_Then:
    assume {:nonnull} ConnectInfo_2 != 0;
    assume ConnectInfo_2 > 0;
    goto L45;

  anon5_Then:
    ntStatus_3 := -1073741811;
    goto L48;
}



procedure {:origName "sdv_hash_421197326"} sdv_hash_421197326(actual_PdoExtension_2: int, actual_Guid: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_421197326"} sdv_hash_421197326(actual_PdoExtension_2: int, actual_Guid: int)
{
  var {:pointer} Tmp_103: int;
  var {:pointer} Tmp_104: int;
  var {:pointer} Tmp_106: int;
  var {:pointer} Tmp_107: int;
  var {:pointer} PdoExtension_2: int;
  var {:pointer} Guid: int;
  var vslice_dummy_var_18: int;

  anon0:
    call {:si_unique_call 116} vslice_dummy_var_18 := __HAVOC_malloc(4);
    PdoExtension_2 := actual_PdoExtension_2;
    Guid := actual_Guid;
    call {:si_unique_call 117} Tmp_106 := __HAVOC_malloc(32);
    call {:si_unique_call 118} Tmp_107 := __HAVOC_malloc(32);
    call {:si_unique_call 119} sdv_do_paged_code_check();
    assume {:nonnull} Guid != 0;
    assume Guid > 0;
    assume {:nonnull} Guid != 0;
    assume Guid > 0;
    assume {:nonnull} Guid != 0;
    assume Guid > 0;
    assume {:nonnull} Guid != 0;
    assume Guid > 0;
    havoc Tmp_107;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_104;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    call {:si_unique_call 120} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} Guid != 0;
    assume Guid > 0;
    havoc Tmp_106;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_103;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    call {:si_unique_call 121} sdv_RtlCopyMemory(0, 0, 4);
    return;
}



procedure {:origName "sdv_hash_673615282"} sdv_hash_673615282(actual_this_15: int, actual_PinID_5: int) returns (Tmp_110: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_673615282"} sdv_hash_673615282(actual_this_15: int, actual_PinID_5: int) returns (Tmp_110: int)
{
  var {:scalar} Tmp_111: int;
  var {:pointer} Tmp_112: int;
  var {:pointer} Tmp_114: int;
  var {:pointer} this_15: int;
  var {:scalar} PinID_5: int;
  var vslice_dummy_var_2572: int;

  anon0:
    this_15 := actual_this_15;
    PinID_5 := actual_PinID_5;
    call {:si_unique_call 122} sdv_do_paged_code_check();
    assume {:nonnull} this_15 != 0;
    assume this_15 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_111 := PinID_5;
    assume {:nonnull} this_15 != 0;
    assume this_15 > 0;
    havoc Tmp_112;
    Tmp_114 := Tmp_112 + Tmp_111 * 324;
    assume {:nonnull} this_15 != 0;
    assume this_15 > 0;
    havoc vslice_dummy_var_2572;
    call {:si_unique_call 123} Tmp_110 := sdv_hash_238556857(Tmp_114, vslice_dummy_var_2572);
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_110 := -1073741811;
    goto L1;
}



procedure {:origName "sdv_hash_890537390"} sdv_hash_890537390(actual_this_16: int) returns (Tmp_115: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_890537390"} sdv_hash_890537390(actual_this_16: int) returns (Tmp_115: int)
{
  var {:scalar} sdv_57: int;
  var {:pointer} sdv_59: int;
  var {:scalar} iDstPlug: int;
  var {:scalar} Tmp_116: int;
  var {:pointer} Tmp_117: int;
  var {:scalar} Tmp_118: int;
  var {:scalar} HaveUnitPlugInfo: int;
  var {:scalar} cSrcPlugs: int;
  var {:pointer} OutputIrb_1: int;
  var {:pointer} sdv_61: int;
  var {:scalar} Tmp_119: int;
  var {:pointer} Tmp_120: int;
  var {:scalar} sdv_63: int;
  var {:scalar} srcAddr_3: int;
  var {:pointer} Tmp_121: int;
  var {:scalar} Irp_1: int;
  var {:scalar} Tmp_122: int;
  var {:scalar} Tmp_123: int;
  var {:dopa} {:scalar} srcPlug_3: int;
  var {:scalar} sdv_65: int;
  var {:pointer} sdv_66: int;
  var {:scalar} HaveSubunitPlugInfo: int;
  var {:scalar} sdv_68: int;
  var {:pointer} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:scalar} Tmp_126: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} sdv_70: int;
  var {:pointer} Tmp_130: int;
  var {:dopa} {:scalar} bFlags_1: int;
  var {:scalar} cConnectedExtOutputPlugs: int;
  var {:pointer} sdv_72: int;
  var {:scalar} cConnectedSrcPlugs: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} Tmp_132: int;
  var {:scalar} Tmp_133: int;
  var {:pointer} Tmp_134: int;
  var {:pointer} sdv_74: int;
  var {:pointer} Tmp_135: int;
  var {:pointer} sdv_75: int;
  var {:pointer} Tmp_136: int;
  var {:scalar} Tmp_137: int;
  var {:scalar} Tmp_138: int;
  var {:dopa} {:scalar} dstPlug_3: int;
  var {:pointer} sdv_77: int;
  var {:pointer} Tmp_139: int;
  var {:pointer} sdv_78: int;
  var {:scalar} c: int;
  var {:scalar} cConnectedExtInputPlugs: int;
  var {:pointer} Tmp_140: int;
  var {:pointer} sdv_79: int;
  var {:scalar} dstAddr_3: int;
  var {:scalar} sdv_80: int;
  var {:pointer} Tmp_141: int;
  var {:scalar} Tmp_142: int;
  var {:pointer} Tmp_143: int;
  var {:dopa} {:scalar} srcPlug_4: int;
  var {:pointer} sdv_84: int;
  var {:scalar} sdv_85: int;
  var {:dopa} {:scalar} bFlags_2: int;
  var {:pointer} Tmp_144: int;
  var {:pointer} Tmp_145: int;
  var {:scalar} sdv_86: int;
  var {:scalar} Tmp_146: int;
  var {:scalar} srcAddr_4: int;
  var {:pointer} Tmp_147: int;
  var {:dopa} {:scalar} dstPlug_4: int;
  var {:scalar} sdv_90: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} sdv_93: int;
  var {:pointer} sdv_94: int;
  var {:pointer} sdv_95: int;
  var {:scalar} c_1: int;
  var {:scalar} SubunitAddr_2: int;
  var {:pointer} pMedium_2: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:scalar} dstAddr_4: int;
  var {:scalar} sdv_96: int;
  var {:pointer} sdv_97: int;
  var {:scalar} iSrcPlug: int;
  var {:pointer} Tmp_153: int;
  var {:scalar} Tmp_154: int;
  var {:scalar} Tmp_155: int;
  var {:scalar} sdv_98: int;
  var {:pointer} Operands_1: int;
  var {:scalar} cConnectedDstPlugs: int;
  var {:scalar} HaveConnectionsInfo: int;
  var {:scalar} sdv_99: int;
  var {:pointer} sdv_100: int;
  var {:dopa} {:scalar} Tmp_156: int;
  var {:scalar} sdv_102: int;
  var {:pointer} Tmp_157: int;
  var {:pointer} Tmp_158: int;
  var {:pointer} sdv_103: int;
  var {:pointer} Tmp_159: int;
  var {:pointer} Tmp_160: int;
  var {:scalar} Tmp_161: int;
  var {:pointer} Tmp_162: int;
  var {:scalar} Tmp_163: int;
  var {:scalar} Tmp_164: int;
  var {:scalar} Tmp_165: int;
  var {:pointer} Tmp_166: int;
  var {:pointer} Tmp_167: int;
  var {:scalar} Tmp_168: int;
  var {:scalar} sdv_105: int;
  var {:pointer} sdv_107: int;
  var {:dopa} {:scalar} idx_2: int;
  var {:scalar} Tmp_169: int;
  var {:scalar} Tmp_170: int;
  var {:pointer} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:pointer} Tmp_173: int;
  var {:pointer} AvcIrb_3: int;
  var {:scalar} sdv_110: int;
  var {:scalar} sdv_111: int;
  var {:scalar} ntStatus_4: int;
  var {:scalar} sdv_113: int;
  var {:pointer} sdv_114: int;
  var {:pointer} pMedium_3: int;
  var {:pointer} sdv_115: int;
  var {:dopa} {:scalar} Tmp_174: int;
  var {:pointer} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:pointer} Tmp_178: int;
  var {:dopa} {:scalar} idx_3: int;
  var {:pointer} Operands_2: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} sdv_118: int;
  var {:pointer} sdv_119: int;
  var {:scalar} sdv_120: int;
  var {:pointer} sdv_122: int;
  var {:scalar} sdv_123: int;
  var {:scalar} cDstPlugs: int;
  var {:pointer} Tmp_182: int;
  var {:scalar} Tmp_183: int;
  var {:scalar} Tmp_184: int;
  var {:pointer} sdv_124: int;
  var {:pointer} sdv_125: int;
  var {:scalar} iPinID: int;
  var {:pointer} this_16: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_2573: int;
  var vslice_dummy_var_2574: int;
  var vslice_dummy_var_2575: int;
  var vslice_dummy_var_2576: int;
  var vslice_dummy_var_2577: int;
  var vslice_dummy_var_2578: int;
  var vslice_dummy_var_2579: int;
  var vslice_dummy_var_2580: int;
  var vslice_dummy_var_2581: int;

  anon0:
    call {:si_unique_call 124} srcAddr_3 := __HAVOC_malloc(12);
    call {:si_unique_call 125} Irp_1 := __HAVOC_malloc(16);
    call {:si_unique_call 126} srcPlug_3 := __HAVOC_malloc(4);
    call {:si_unique_call 127} bFlags_1 := __HAVOC_malloc(4);
    call {:si_unique_call 128} dstPlug_3 := __HAVOC_malloc(4);
    call {:si_unique_call 129} dstAddr_3 := __HAVOC_malloc(12);
    call {:si_unique_call 130} srcPlug_4 := __HAVOC_malloc(4);
    call {:si_unique_call 131} bFlags_2 := __HAVOC_malloc(4);
    call {:si_unique_call 132} srcAddr_4 := __HAVOC_malloc(12);
    call {:si_unique_call 133} dstPlug_4 := __HAVOC_malloc(4);
    call {:si_unique_call 134} SubunitAddr_2 := __HAVOC_malloc(12);
    call {:si_unique_call 135} dstAddr_4 := __HAVOC_malloc(12);
    call {:si_unique_call 136} Tmp_156 := __HAVOC_malloc(4);
    call {:si_unique_call 137} idx_2 := __HAVOC_malloc(4);
    call {:si_unique_call 138} Tmp_169 := __HAVOC_malloc(12);
    call {:si_unique_call 139} Tmp_170 := __HAVOC_malloc(12);
    call {:si_unique_call 140} Tmp_174 := __HAVOC_malloc(4);
    call {:si_unique_call 141} idx_3 := __HAVOC_malloc(4);
    this_16 := actual_this_16;
    Tmp_116 := 0;
    Tmp_155 := 0;
    call {:si_unique_call 142} sdv_do_paged_code_check();
    ntStatus_4 := 0;
    call {:si_unique_call 143} sdv_103 := sdv_hash_64962389(560);
    Tmp_178 := sdv_103;
    assume {:nonnull} Tmp_178 != 0;
    assume Tmp_178 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} Tmp_178 != 0;
    call {:si_unique_call 144} sdv_hash_265299797_sdv_special_CTOR(Tmp_178);
    goto L16;

  L16:
    AvcIrb_3 := Tmp_178;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} AvcIrb_3 != 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_159;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    havoc Tmp_144;
    assume {:nonnull} Tmp_144 != 0;
    assume Tmp_144 > 0;
    havoc Tmp_172;
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    havoc c_1;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    havoc Tmp_180;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    havoc Tmp_148;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    havoc c;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} c_1 != 0;
    goto L28;

  L28:
    assume {:nonnull} SubunitAddr_2 != 0;
    assume SubunitAddr_2 > 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_162;
    assume {:nonnull} Tmp_162 != 0;
    assume Tmp_162 > 0;
    havoc Tmp_120;
    assume {:nonnull} Tmp_120 != 0;
    assume Tmp_120 > 0;
    havoc vslice_dummy_var_2573;
    call {:si_unique_call 145} sdv_hash_567308675_sdv_special_CTOR(SubunitAddr_2, vslice_dummy_var_2573);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_135;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    havoc vslice_dummy_var_2574;
    call {:si_unique_call 146} sdv_hash_1058931133_sdv_special_CTOR(Irp_1, vslice_dummy_var_2574);
    HaveSubunitPlugInfo := 0;
    HaveUnitPlugInfo := 0;
    HaveConnectionsInfo := 0;
    cDstPlugs := c_1;
    cSrcPlugs := c;
    call {:si_unique_call 147} sdv_110 := sdv_hash_330049800(SubunitAddr_2);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} sdv_110 != 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_167;
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    havoc Tmp_182;
    assume {:nonnull} Tmp_182 != 0;
    assume Tmp_182 > 0;
    havoc vslice_dummy_var_2575;
    call {:si_unique_call 148} sdv_77 := sdv_hash_507802687(AvcIrb_3, vslice_dummy_var_2575);
    call {:si_unique_call 149} sdv_78 := sdv_hash_945618448(sdv_77);
    call {:si_unique_call 150} sdv_114 := sdv_hash_291696418(sdv_78);
    call {:si_unique_call 151} ntStatus_4 := sdv_hash_592377359(Irp_1, sdv_114);
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} ntStatus_4 != 0;
    goto L74;

  L74:
    call {:si_unique_call 152} sdv_75 := sdv_hash_507802687(AvcIrb_3, 0);
    call {:si_unique_call 153} sdv_74 := sdv_hash_945618448(sdv_75);
    call {:si_unique_call 154} sdv_124 := sdv_hash_291696418(sdv_74);
    call {:si_unique_call 155} ntStatus_4 := sdv_hash_592377359(Irp_1, sdv_124);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} ntStatus_4 != 0;
    goto L91;

  L91:
    call {:si_unique_call 156} sdv_66 := sdv_hash_376789576(AvcIrb_3);
    call {:si_unique_call 157} sdv_79 := sdv_hash_291696418(sdv_66);
    call {:si_unique_call 158} ntStatus_4 := sdv_hash_592377359(Irp_1, sdv_79);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} ntStatus_4 == 0;
    call {:si_unique_call 159} sdv_120 := sdv_hash_818961282(AvcIrb_3);
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} sdv_120 != 0;
    call {:si_unique_call 160} sdv_63 := sdv_hash_390207871(AvcIrb_3);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} sdv_63 == 12;
    cConnectedExtInputPlugs := 0;
    cConnectedExtOutputPlugs := 0;
    cConnectedDstPlugs := 0;
    cConnectedSrcPlugs := 0;
    assume {:nonnull} idx_3 != 0;
    assume idx_3 > 0;
    goto L121;

  L121:
    call {:si_unique_call 161} Tmp_116, Tmp_123, sdv_68, sdv_70, cConnectedExtOutputPlugs, cConnectedSrcPlugs, Tmp_138, cConnectedExtInputPlugs, Tmp_155, cConnectedDstPlugs, Tmp_164, Tmp_168, sdv_105, sdv_113, sdv_123 := sdv_hash_890537390_loop_L121(Tmp_116, Tmp_123, sdv_68, sdv_70, cConnectedExtOutputPlugs, cConnectedSrcPlugs, Tmp_138, cConnectedExtInputPlugs, dstAddr_3, srcPlug_4, bFlags_2, srcAddr_4, dstPlug_4, SubunitAddr_2, Tmp_155, cConnectedDstPlugs, Tmp_164, Tmp_168, sdv_105, Tmp_169, Tmp_170, AvcIrb_3, sdv_113, idx_3, sdv_123, this_16);
    goto L121_last;

  L121_last:
    assume {:nonnull} srcAddr_4 != 0;
    assume srcAddr_4 > 0;
    call {:si_unique_call 236} sdv_hash_948020419_sdv_special_CTOR(srcAddr_4);
    assume {:nonnull} dstAddr_3 != 0;
    assume dstAddr_3 > 0;
    call {:si_unique_call 237} sdv_hash_948020419_sdv_special_CTOR(dstAddr_3);
    call {:si_unique_call 238} sdv_70 := sdv_hash_889363889(this_16, AvcIrb_3, idx_3, bFlags_2, srcAddr_4, srcPlug_4, dstAddr_3, dstPlug_4);
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} sdv_70 != 0;
    call {:si_unique_call 162} sdv_113 := sdv_hash_986172016(srcAddr_4, SubunitAddr_2);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} sdv_113 != 0;
    cConnectedSrcPlugs := cConnectedSrcPlugs + 1;
    goto L153;

  L153:
    call {:si_unique_call 163} sdv_105 := sdv_hash_986172016(dstAddr_3, SubunitAddr_2);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} sdv_105 != 0;
    cConnectedDstPlugs := cConnectedDstPlugs + 1;
    goto L161;

  L161:
    call {:si_unique_call 164} sdv_hash_648551832_sdv_special_DTOR(dstAddr_3);
    call {:si_unique_call 165} sdv_hash_648551832_sdv_special_DTOR(srcAddr_4);
    goto L161_dummy;

  L161_dummy:
    assume false;
    return;

  anon132_Then:
    assume {:partition} sdv_105 == 0;
    call {:si_unique_call 166} sdv_hash_543516765_sdv_special_CTOR(Tmp_170, 255);
    Tmp_155 := 1;
    call {:si_unique_call 167} sdv_68 := sdv_hash_986172016(dstAddr_3, Tmp_170);
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} sdv_68 != 0;
    assume {:nonnull} dstPlug_4 != 0;
    assume dstPlug_4 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    Tmp_138 := 1;
    goto L180;

  L180:
    Tmp_164 := Tmp_138;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} Tmp_155 != 0;
    Tmp_155 := 0;
    call {:si_unique_call 168} sdv_hash_648551832_sdv_special_DTOR(Tmp_170);
    goto L182;

  L182:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} Tmp_164 != 0;
    cConnectedExtOutputPlugs := cConnectedExtOutputPlugs + 1;
    goto L161;

  anon135_Then:
    assume {:partition} Tmp_164 == 0;
    goto L161;

  anon182_Then:
    assume {:partition} Tmp_155 == 0;
    goto L182;

  anon134_Then:
    goto L177;

  L177:
    Tmp_138 := 0;
    goto L180;

  anon133_Then:
    assume {:partition} sdv_68 == 0;
    goto L177;

  anon131_Then:
    assume {:partition} sdv_113 == 0;
    call {:si_unique_call 169} sdv_hash_543516765_sdv_special_CTOR(Tmp_169, 255);
    Tmp_116 := 1;
    call {:si_unique_call 170} sdv_123 := sdv_hash_986172016(srcAddr_4, Tmp_169);
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} sdv_123 != 0;
    assume {:nonnull} srcPlug_4 != 0;
    assume srcPlug_4 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    Tmp_168 := 1;
    goto L201;

  L201:
    Tmp_123 := Tmp_168;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Tmp_116 != 0;
    Tmp_116 := 0;
    call {:si_unique_call 171} sdv_hash_648551832_sdv_special_DTOR(Tmp_169);
    goto L203;

  L203:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} Tmp_123 != 0;
    cConnectedExtInputPlugs := cConnectedExtInputPlugs + 1;
    goto L153;

  anon138_Then:
    assume {:partition} Tmp_123 == 0;
    goto L153;

  anon183_Then:
    assume {:partition} Tmp_116 == 0;
    goto L203;

  anon137_Then:
    goto L198;

  L198:
    Tmp_168 := 0;
    goto L201;

  anon136_Then:
    assume {:partition} sdv_123 == 0;
    goto L198;

  anon130_Then:
    assume {:partition} sdv_70 == 0;
    call {:si_unique_call 172} sdv_hash_648551832_sdv_special_DTOR(dstAddr_3);
    call {:si_unique_call 173} sdv_hash_648551832_sdv_special_DTOR(srcAddr_4);
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} HaveSubunitPlugInfo != 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} cConnectedDstPlugs > cDstPlugs;
    cDstPlugs := cConnectedDstPlugs;
    goto L216;

  L216:
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} cConnectedSrcPlugs > cSrcPlugs;
    cSrcPlugs := cConnectedSrcPlugs;
    goto L218;

  L218:
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} HaveUnitPlugInfo != 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    goto L222;

  L222:
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    goto L224;

  L224:
    HaveConnectionsInfo := 1;
    goto L56;

  L56:
    Tmp_154 := (cDstPlugs + cSrcPlugs) * 1;
    Tmp_122 := Tmp_154 * 96 + 4;
    call {:si_unique_call 174} sdv_119 := sdv_hash_61407646(Tmp_122);
    Tmp_150 := sdv_119;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} Tmp_150 != 0;
    Tmp_158 := Tmp_150;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    havoc Tmp_163;
    Tmp_125 := 0;
    call {:si_unique_call 175} sdv_hash_246154148(Tmp_125, 96, Tmp_163, li2bplFunctionConstant356);
    Tmp_150 := 0;
    goto L260;

  L260:
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    iDstPlug := 0;
    iSrcPlug := 0;
    iPinID := 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} HaveConnectionsInfo != 0;
    goto L278;

  L278:
    call {:si_unique_call 176} sdv_59, iDstPlug, Tmp_117, Tmp_124, Tmp_132, iPinID, vslice_dummy_var_19 := sdv_hash_890537390_loop_L278(sdv_59, iDstPlug, Tmp_117, Tmp_124, Tmp_132, cDstPlugs, iPinID, this_16, vslice_dummy_var_19);
    goto L278_last;

  L278_last:
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} cDstPlugs > iDstPlug;
    Tmp_132 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_117;
    Tmp_124 := Tmp_117 + Tmp_132 * 324;
    call {:si_unique_call 177} sdv_59 := sdv_hash_827633206(Tmp_124, KsDstPinDescriptor);
    call {:si_unique_call 178} vslice_dummy_var_19 := sdv_hash_265040478(sdv_59, iDstPlug);
    iDstPlug := iDstPlug + 1;
    iPinID := iPinID + 1;
    goto anon150_Else_dummy;

  anon150_Else_dummy:
    assume false;
    return;

  anon150_Then:
    assume {:partition} iDstPlug >= cDstPlugs;
    goto L279;

  L279:
    call {:si_unique_call 179} Tmp_126, sdv_84, iSrcPlug, Tmp_157, Tmp_166, iPinID, vslice_dummy_var_20 := sdv_hash_890537390_loop_L279(cSrcPlugs, Tmp_126, sdv_84, iSrcPlug, Tmp_157, Tmp_166, iPinID, this_16, vslice_dummy_var_20);
    goto L279_last;

  L279_last:
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} cSrcPlugs <= iSrcPlug;
    assume {:nonnull} idx_2 != 0;
    assume idx_2 > 0;
    goto L301;

  L301:
    call {:si_unique_call 180} sdv_57, Tmp_118, Tmp_119, sdv_65, Tmp_127, Tmp_128, Tmp_129, Tmp_136, Tmp_137, Tmp_140, sdv_80, Tmp_143, Tmp_146, Tmp_147, sdv_90, sdv_95, pMedium_2, Tmp_151, sdv_97, Tmp_153, Tmp_173, sdv_111, ntStatus_4, pMedium_3, sdv_115, Tmp_176, Tmp_177, Tmp_179, Tmp_181, sdv_118, Tmp_183, Tmp_184, iPinID, vslice_dummy_var_21, vslice_dummy_var_22, vslice_dummy_var_23, vslice_dummy_var_24, vslice_dummy_var_29, vslice_dummy_var_30 := sdv_hash_890537390_loop_L301(sdv_57, Tmp_118, Tmp_119, srcAddr_3, srcPlug_3, sdv_65, Tmp_127, Tmp_128, Tmp_129, bFlags_1, Tmp_136, Tmp_137, dstPlug_3, Tmp_140, sdv_80, Tmp_143, Tmp_146, Tmp_147, sdv_90, sdv_95, SubunitAddr_2, pMedium_2, Tmp_151, dstAddr_4, sdv_97, Tmp_153, Tmp_156, idx_2, Tmp_173, AvcIrb_3, sdv_111, ntStatus_4, pMedium_3, sdv_115, Tmp_174, Tmp_176, Tmp_177, Tmp_179, Tmp_181, sdv_118, cDstPlugs, Tmp_183, Tmp_184, iPinID, this_16, vslice_dummy_var_21, vslice_dummy_var_22, vslice_dummy_var_23, vslice_dummy_var_24, vslice_dummy_var_29, vslice_dummy_var_30);
    goto L301_last;

  L301_last:
    assume {:nonnull} srcAddr_3 != 0;
    assume srcAddr_3 > 0;
    call {:si_unique_call 239} sdv_hash_948020419_sdv_special_CTOR(srcAddr_3);
    assume {:nonnull} dstAddr_4 != 0;
    assume dstAddr_4 > 0;
    call {:si_unique_call 240} sdv_hash_948020419_sdv_special_CTOR(dstAddr_4);
    call {:si_unique_call 241} sdv_111 := sdv_hash_889363889(this_16, AvcIrb_3, idx_2, bFlags_1, srcAddr_3, srcPlug_3, dstAddr_4, dstPlug_3);
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} sdv_111 != 0;
    call {:si_unique_call 181} sdv_80 := sdv_hash_986172016(dstAddr_4, SubunitAddr_2);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} sdv_80 != 0;
    assume {:nonnull} dstPlug_3 != 0;
    assume dstPlug_3 > 0;
    havoc iPinID;
    assume {:nonnull} bFlags_1 != 0;
    assume bFlags_1 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    Tmp_179 := Tmp_156;
    call {:si_unique_call 182} sdv_65 := sdv_hash_405508819(srcAddr_3, Tmp_179);
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} sdv_65 == 0;
    goto L355;

  L355:
    assume {:nonnull} dstPlug_3 != 0;
    assume dstPlug_3 > 0;
    assume {:nonnull} srcPlug_3 != 0;
    assume srcPlug_3 > 0;
    havoc vslice_dummy_var_2576;
    havoc vslice_dummy_var_2577;
    call {:si_unique_call 183} pMedium_3 := sdv_hash_1062250938(this_16, srcAddr_3, vslice_dummy_var_2576, dstAddr_4, vslice_dummy_var_2577);
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} pMedium_3 != 0;
    Tmp_146 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_177;
    Tmp_128 := Tmp_177 + Tmp_146 * 324;
    call {:si_unique_call 184} sdv_115 := sdv_hash_677052185(Tmp_128, 3);
    call {:si_unique_call 185} vslice_dummy_var_22 := sdv_hash_174130848(sdv_115, 1, pMedium_3);
    goto L349;

  L349:
    call {:si_unique_call 186} sdv_hash_648551832_sdv_special_DTOR(dstAddr_4);
    call {:si_unique_call 187} sdv_hash_648551832_sdv_special_DTOR(srcAddr_3);
    goto L349_dummy;

  L349_dummy:
    assume false;
    return;

  anon156_Then:
    assume {:partition} pMedium_3 == 0;
    ntStatus_4 := -1073741670;
    goto L349;

  anon154_Then:
    assume {:partition} sdv_65 != 0;
    assume {:nonnull} srcPlug_3 != 0;
    assume srcPlug_3 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    goto L355;

  anon155_Then:
    Tmp_184 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_140;
    Tmp_176 := Tmp_140 + Tmp_184 * 324;
    call {:si_unique_call 188} sdv_95 := sdv_hash_677052185(Tmp_176, 8);
    assume {:nonnull} srcPlug_3 != 0;
    assume srcPlug_3 > 0;
    havoc vslice_dummy_var_2578;
    call {:si_unique_call 189} vslice_dummy_var_21 := sdv_hash_859452142(sdv_95, vslice_dummy_var_2578);
    goto L349;

  anon179_Then:
    Tmp_118 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_147;
    Tmp_127 := Tmp_147 + Tmp_118 * 324;
    call {:si_unique_call 190} vslice_dummy_var_29 := sdv_hash_677052185(Tmp_127, 2);
    goto L349;

  anon153_Then:
    assume {:partition} sdv_80 == 0;
    call {:si_unique_call 191} sdv_57 := sdv_hash_986172016(srcAddr_3, SubunitAddr_2);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} sdv_57 != 0;
    assume {:nonnull} srcPlug_3 != 0;
    assume srcPlug_3 > 0;
    havoc iPinID;
    assume {:nonnull} bFlags_1 != 0;
    assume bFlags_1 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} Tmp_174 != 0;
    assume Tmp_174 > 0;
    Tmp_173 := Tmp_174;
    call {:si_unique_call 192} sdv_90 := sdv_hash_405508819(dstAddr_4, Tmp_173);
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} sdv_90 == 0;
    goto L389;

  L389:
    assume {:nonnull} dstPlug_3 != 0;
    assume dstPlug_3 > 0;
    assume {:nonnull} srcPlug_3 != 0;
    assume srcPlug_3 > 0;
    havoc vslice_dummy_var_2579;
    havoc vslice_dummy_var_2580;
    call {:si_unique_call 193} pMedium_2 := sdv_hash_1062250938(this_16, srcAddr_3, vslice_dummy_var_2579, dstAddr_4, vslice_dummy_var_2580);
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} pMedium_2 != 0;
    Tmp_137 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_181;
    Tmp_129 := Tmp_181 + Tmp_137 * 324;
    call {:si_unique_call 194} sdv_118 := sdv_hash_677052185(Tmp_129, 3);
    call {:si_unique_call 195} vslice_dummy_var_24 := sdv_hash_174130848(sdv_118, 1, pMedium_2);
    goto L349;

  anon160_Then:
    assume {:partition} pMedium_2 == 0;
    ntStatus_4 := -1073741670;
    goto L349;

  anon158_Then:
    assume {:partition} sdv_90 != 0;
    assume {:nonnull} dstPlug_3 != 0;
    assume dstPlug_3 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto L389;

  anon159_Then:
    Tmp_119 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_151;
    Tmp_143 := Tmp_151 + Tmp_119 * 324;
    call {:si_unique_call 196} sdv_97 := sdv_hash_677052185(Tmp_143, 8);
    assume {:nonnull} dstPlug_3 != 0;
    assume dstPlug_3 > 0;
    havoc vslice_dummy_var_2581;
    call {:si_unique_call 197} vslice_dummy_var_23 := sdv_hash_859452142(sdv_97, vslice_dummy_var_2581);
    goto L349;

  anon180_Then:
    Tmp_183 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_136;
    Tmp_153 := Tmp_136 + Tmp_183 * 324;
    call {:si_unique_call 198} vslice_dummy_var_30 := sdv_hash_677052185(Tmp_153, 2);
    goto L349;

  anon157_Then:
    assume {:partition} sdv_57 == 0;
    goto L349;

  anon152_Then:
    assume {:partition} sdv_111 == 0;
    call {:si_unique_call 199} sdv_hash_648551832_sdv_special_DTOR(dstAddr_4);
    call {:si_unique_call 200} sdv_hash_648551832_sdv_special_DTOR(srcAddr_3);
    goto L409;

  L409:
    call {:si_unique_call 201} sdv_hash_428960233_sdv_special_DTOR(Irp_1);
    call {:si_unique_call 202} sdv_hash_648551832_sdv_special_DTOR(SubunitAddr_2);
    goto L415;

  L415:
    Tmp_139 := AvcIrb_3;
    Tmp_149 := Tmp_139;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} Tmp_149 != 0;
    goto L419;

  L419:
    call {:si_unique_call 203} sdv_hash_890537390_loop_L419();
    goto L419_last;

  L419_last:
    goto L419_dummy;

  L419_dummy:
    assume false;
    return;

  anon181_Then:
    assume {:partition} Tmp_149 == 0;
    goto L418;

  L418:
    Tmp_115 := ntStatus_4;
    return;

  anon151_Then:
    assume {:partition} iSrcPlug < cSrcPlugs;
    Tmp_126 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_157;
    Tmp_166 := Tmp_157 + Tmp_126 * 324;
    call {:si_unique_call 204} sdv_84 := sdv_hash_827633206(Tmp_166, KsSrcPinDescriptor);
    call {:si_unique_call 205} vslice_dummy_var_20 := sdv_hash_265040478(sdv_84, iSrcPlug);
    iSrcPlug := iSrcPlug + 1;
    iPinID := iPinID + 1;
    goto anon151_Then_dummy;

  anon151_Then_dummy:
    assume false;
    return;

  anon178_Then:
    assume {:partition} HaveConnectionsInfo == 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} HaveSubunitPlugInfo != 0;
    OutputIrb_1 := AvcIrb_3;
    goto L425;

  L425:
    call {:si_unique_call 206} iDstPlug, sdv_61, Tmp_133, Tmp_141, sdv_102, Tmp_160, sdv_107, ntStatus_4, iPinID, vslice_dummy_var_26 := sdv_hash_890537390_loop_L425(iDstPlug, OutputIrb_1, sdv_61, Irp_1, Tmp_133, Tmp_141, SubunitAddr_2, sdv_102, Tmp_160, sdv_107, AvcIrb_3, ntStatus_4, cDstPlugs, iPinID, this_16, vslice_dummy_var_26);
    goto L425_last;

  L425_last:
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} ntStatus_4 != 0;
    goto L427;

  L427:
    call {:si_unique_call 207} Tmp_130, sdv_85, Tmp_145, sdv_94, iSrcPlug, Tmp_161, ntStatus_4, sdv_122, iPinID, vslice_dummy_var_25 := sdv_hash_890537390_loop_L427(cSrcPlugs, OutputIrb_1, Irp_1, Tmp_130, sdv_85, Tmp_145, sdv_94, SubunitAddr_2, iSrcPlug, Tmp_161, AvcIrb_3, ntStatus_4, sdv_122, iPinID, this_16, vslice_dummy_var_25);
    goto L427_last;

  L427_last:
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} ntStatus_4 == 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} cSrcPlugs > iSrcPlug;
    Tmp_161 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_145;
    Tmp_130 := Tmp_145 + Tmp_161 * 324;
    call {:si_unique_call 208} sdv_94 := sdv_hash_827633206(Tmp_130, KsSrcPinDescriptor);
    call {:si_unique_call 209} vslice_dummy_var_25 := sdv_hash_265040478(sdv_94, iSrcPlug);
    call {:si_unique_call 210} ntStatus_4 := sdv_hash_802132520(AvcIrb_3, SubunitAddr_2, iSrcPlug, OutputIrb_1);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} ntStatus_4 >= 0;
    call {:si_unique_call 211} sdv_122 := sdv_hash_291696418(OutputIrb_1);
    call {:si_unique_call 212} ntStatus_4 := sdv_hash_592377359(Irp_1, sdv_122);
    goto L441;

  L441:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} ntStatus_4 != 0;
    goto L452;

  L452:
    iSrcPlug := iSrcPlug + 1;
    iPinID := iPinID + 1;
    goto L452_dummy;

  L452_dummy:
    assume false;
    return;

  anon167_Then:
    assume {:partition} ntStatus_4 == 0;
    call {:si_unique_call 213} sdv_85 := sdv_hash_390207871(AvcIrb_3);
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} sdv_85 == 12;
    call {:si_unique_call 214} ntStatus_4 := sdv_hash_994092636(this_16, AvcIrb_3, iPinID);
    goto L452;

  anon168_Then:
    assume {:partition} sdv_85 != 12;
    goto L452;

  anon166_Then:
    assume {:partition} 0 > ntStatus_4;
    goto L441;

  anon165_Then:
    assume {:partition} iSrcPlug >= cSrcPlugs;
    goto L409;

  anon164_Then:
    assume {:partition} ntStatus_4 != 0;
    goto L409;

  anon162_Then:
    assume {:partition} ntStatus_4 == 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} cDstPlugs > iDstPlug;
    Tmp_133 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_160;
    Tmp_141 := Tmp_160 + Tmp_133 * 324;
    call {:si_unique_call 215} sdv_61 := sdv_hash_827633206(Tmp_141, KsDstPinDescriptor);
    call {:si_unique_call 216} vslice_dummy_var_26 := sdv_hash_265040478(sdv_61, iDstPlug);
    call {:si_unique_call 217} ntStatus_4 := sdv_hash_575386943(AvcIrb_3, SubunitAddr_2, iDstPlug, OutputIrb_1);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} ntStatus_4 >= 0;
    call {:si_unique_call 218} sdv_107 := sdv_hash_291696418(OutputIrb_1);
    call {:si_unique_call 219} ntStatus_4 := sdv_hash_592377359(Irp_1, sdv_107);
    goto L471;

  L471:
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} ntStatus_4 != 0;
    goto L482;

  L482:
    iDstPlug := iDstPlug + 1;
    iPinID := iPinID + 1;
    goto L482_dummy;

  L482_dummy:
    assume false;
    return;

  anon170_Then:
    assume {:partition} ntStatus_4 == 0;
    call {:si_unique_call 220} sdv_102 := sdv_hash_390207871(AvcIrb_3);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} sdv_102 == 12;
    call {:si_unique_call 221} ntStatus_4 := sdv_hash_994092636(this_16, AvcIrb_3, iPinID);
    goto L482;

  anon171_Then:
    assume {:partition} sdv_102 != 12;
    goto L482;

  anon169_Then:
    assume {:partition} 0 > ntStatus_4;
    goto L471;

  anon163_Then:
    assume {:partition} iDstPlug >= cDstPlugs;
    goto L427;

  anon149_Then:
    assume {:partition} HaveSubunitPlugInfo == 0;
    goto L422;

  L422:
    call {:si_unique_call 222} iDstPlug, sdv_72, Tmp_134, sdv_93, Tmp_165, Tmp_175, iPinID, vslice_dummy_var_27 := sdv_hash_890537390_loop_L422(iDstPlug, sdv_72, Tmp_134, sdv_93, Tmp_165, Tmp_175, cDstPlugs, iPinID, this_16, vslice_dummy_var_27);
    goto L422_last;

  L422_last:
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} cDstPlugs > iDstPlug;
    Tmp_165 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_175;
    Tmp_134 := Tmp_175 + Tmp_165 * 324;
    call {:si_unique_call 223} sdv_72 := sdv_hash_827633206(Tmp_134, KsDstPinDescriptor);
    call {:si_unique_call 224} sdv_93 := sdv_hash_859452142(sdv_72, iDstPlug);
    call {:si_unique_call 225} vslice_dummy_var_27 := sdv_hash_677052185(sdv_93, 4);
    iDstPlug := iDstPlug + 1;
    iPinID := iPinID + 1;
    goto anon161_Else_dummy;

  anon161_Else_dummy:
    assume false;
    return;

  anon161_Then:
    assume {:partition} iDstPlug >= cDstPlugs;
    goto L489;

  L489:
    call {:si_unique_call 226} Tmp_131, Tmp_142, iSrcPlug, sdv_100, Tmp_171, sdv_125, iPinID, vslice_dummy_var_28 := sdv_hash_890537390_loop_L489(cSrcPlugs, Tmp_131, Tmp_142, iSrcPlug, sdv_100, Tmp_171, sdv_125, iPinID, this_16, vslice_dummy_var_28);
    goto L489_last;

  L489_last:
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} cSrcPlugs > iSrcPlug;
    Tmp_142 := iPinID;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    havoc Tmp_171;
    Tmp_131 := Tmp_171 + Tmp_142 * 324;
    call {:si_unique_call 227} sdv_100 := sdv_hash_827633206(Tmp_131, KsSrcPinDescriptor);
    call {:si_unique_call 228} sdv_125 := sdv_hash_859452142(sdv_100, iSrcPlug);
    call {:si_unique_call 229} vslice_dummy_var_28 := sdv_hash_677052185(sdv_125, 4);
    iSrcPlug := iSrcPlug + 1;
    iPinID := iPinID + 1;
    goto anon172_Else_dummy;

  anon172_Else_dummy:
    assume false;
    return;

  anon172_Then:
    assume {:partition} iSrcPlug >= cSrcPlugs;
    goto L409;

  anon177_Then:
    ntStatus_4 := -1073741670;
    goto L409;

  anon176_Then:
    assume {:partition} Tmp_150 == 0;
    goto L260;

  anon144_Then:
    goto L224;

  anon143_Then:
    goto L222;

  anon142_Then:
    assume {:partition} HaveUnitPlugInfo == 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    goto L224;

  anon141_Then:
    assume {:partition} cSrcPlugs >= cConnectedSrcPlugs;
    goto L218;

  anon140_Then:
    assume {:partition} cDstPlugs >= cConnectedDstPlugs;
    goto L216;

  anon139_Then:
    assume {:partition} HaveSubunitPlugInfo == 0;
    cDstPlugs := cConnectedDstPlugs;
    cSrcPlugs := cConnectedSrcPlugs;
    goto L218;

  anon129_Then:
    assume {:partition} sdv_63 != 12;
    goto L56;

  anon128_Then:
    assume {:partition} sdv_120 == 0;
    goto L56;

  anon127_Then:
    assume {:partition} ntStatus_4 != 0;
    goto L56;

  anon126_Then:
    assume {:partition} ntStatus_4 == 0;
    call {:si_unique_call 230} sdv_96 := sdv_hash_818961282(AvcIrb_3);
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} sdv_96 != 0;
    call {:si_unique_call 231} sdv_99 := sdv_hash_390207871(AvcIrb_3);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} sdv_99 == 12;
    call {:si_unique_call 232} Operands_2 := sdv_hash_901487196(AvcIrb_3);
    assume {:nonnull} Operands_2 != 0;
    assume Operands_2 > 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    assume {:nonnull} Operands_2 != 0;
    assume Operands_2 > 0;
    assume {:nonnull} this_16 != 0;
    assume this_16 > 0;
    HaveUnitPlugInfo := 1;
    goto L91;

  anon146_Then:
    assume {:partition} sdv_99 != 12;
    goto L91;

  anon145_Then:
    assume {:partition} sdv_96 == 0;
    goto L91;

  anon125_Then:
    assume {:partition} ntStatus_4 == 0;
    call {:si_unique_call 233} sdv_86 := sdv_hash_818961282(AvcIrb_3);
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} sdv_86 != 0;
    call {:si_unique_call 234} sdv_98 := sdv_hash_390207871(AvcIrb_3);
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} sdv_98 == 12;
    call {:si_unique_call 235} Operands_1 := sdv_hash_901487196(AvcIrb_3);
    assume {:nonnull} Operands_1 != 0;
    assume Operands_1 > 0;
    havoc cDstPlugs;
    assume {:nonnull} Operands_1 != 0;
    assume Operands_1 > 0;
    havoc cSrcPlugs;
    HaveSubunitPlugInfo := 1;
    goto L74;

  anon148_Then:
    assume {:partition} sdv_98 != 12;
    goto L74;

  anon147_Then:
    assume {:partition} sdv_86 == 0;
    goto L74;

  anon124_Then:
    assume {:partition} sdv_110 == 0;
    goto L56;

  anon175_Then:
    assume {:partition} c_1 == 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} c == 0;
    goto L415;

  anon123_Then:
    assume {:partition} c != 0;
    goto L28;

  anon174_Then:
    assume {:partition} AvcIrb_3 == 0;
    ntStatus_4 := -1073741670;
    goto L418;

  anon173_Then:
    assume {:partition} Tmp_178 == 0;
    goto L16;
}



procedure {:origName "sdv_hash_464001803"} sdv_hash_464001803(actual_this_17: int, actual_PinID_6: int, actual_PinDescriptor: int) returns (Tmp_185: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_185 == 0 || Tmp_185 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_464001803"} sdv_hash_464001803(actual_this_17: int, actual_PinID_6: int, actual_PinDescriptor: int) returns (Tmp_185: int)
{
  var {:pointer} Tmp_186: int;
  var {:pointer} Tmp_187: int;
  var {:scalar} Tmp_188: int;
  var {:pointer} this_17: int;
  var {:scalar} PinID_6: int;
  var {:pointer} PinDescriptor: int;

  anon0:
    this_17 := actual_this_17;
    PinID_6 := actual_PinID_6;
    PinDescriptor := actual_PinDescriptor;
    call {:si_unique_call 242} sdv_do_paged_code_check();
    assume {:nonnull} this_17 != 0;
    assume this_17 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_188 := PinID_6;
    assume {:nonnull} this_17 != 0;
    assume this_17 > 0;
    havoc Tmp_187;
    Tmp_186 := Tmp_187 + Tmp_188 * 324;
    call {:si_unique_call 243} sdv_hash_94547877(PinDescriptor, Tmp_186);
    Tmp_185 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_185 := -1073741811;
    goto L1;
}



procedure {:origName "sdv_hash_238556857"} sdv_hash_238556857(actual_this_18: int, actual_PdoExtension_3: int) returns (Tmp_190: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_238556857"} sdv_hash_238556857(actual_this_18: int, actual_PdoExtension_3: int) returns (Tmp_190: int)
{
  var {:pointer} OutputIrb_2: int;
  var {:pointer} Tmp_191: int;
  var {:scalar} Irp_2: int;
  var {:pointer} sdv_126: int;
  var {:pointer} Tmp_192: int;
  var {:scalar} sdv_128: int;
  var {:pointer} AvcIrb_4: int;
  var {:scalar} ntStatus_5: int;
  var {:pointer} sdv_129: int;
  var {:scalar} sdv_131: int;
  var {:pointer} Tmp_194: int;
  var {:pointer} this_18: int;
  var {:pointer} PdoExtension_3: int;
  var vslice_dummy_var_2582: int;
  var vslice_dummy_var_2583: int;
  var vslice_dummy_var_2584: int;

  anon0:
    call {:si_unique_call 244} Irp_2 := __HAVOC_malloc(16);
    this_18 := actual_this_18;
    PdoExtension_3 := actual_PdoExtension_3;
    call {:si_unique_call 245} sdv_do_paged_code_check();
    ntStatus_5 := 0;
    assume {:nonnull} this_18 != 0;
    assume this_18 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 246} sdv_126 := sdv_hash_64962389(560);
    Tmp_192 := sdv_126;
    assume {:nonnull} Tmp_192 != 0;
    assume Tmp_192 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Tmp_192 != 0;
    call {:si_unique_call 247} sdv_hash_265299797_sdv_special_CTOR(Tmp_192);
    goto L16;

  L16:
    AvcIrb_4 := Tmp_192;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} AvcIrb_4 != 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_2582;
    call {:si_unique_call 248} sdv_hash_1058931133_sdv_special_CTOR(Irp_2, vslice_dummy_var_2582);
    OutputIrb_2 := AvcIrb_4;
    assume {:nonnull} this_18 != 0;
    assume this_18 > 0;
    havoc vslice_dummy_var_2583;
    havoc vslice_dummy_var_2584;
    call {:si_unique_call 249} sdv_128 := sdv_hash_882477790(AvcIrb_4, m_SrcAddr_CKsPinDescriptor(this_18), vslice_dummy_var_2583, m_DstAddr_CKsPinDescriptor(this_18), vslice_dummy_var_2584, OutputIrb_2);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_128 >= 0;
    call {:si_unique_call 250} sdv_129 := sdv_hash_798100910(OutputIrb_2);
    call {:si_unique_call 251} ntStatus_5 := sdv_hash_592377359(Irp_2, sdv_129);
    goto L35;

  L35:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} ntStatus_5 != 0;
    goto L46;

  L46:
    Tmp_194 := AvcIrb_4;
    Tmp_191 := Tmp_194;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Tmp_191 != 0;
    goto L52;

  L52:
    call {:si_unique_call 252} sdv_hash_238556857_loop_L52();
    goto L52_last;

  L52_last:
    goto L52_dummy;

  L52_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} Tmp_191 == 0;
    call {:si_unique_call 253} sdv_hash_428960233_sdv_special_DTOR(Irp_2);
    goto L9;

  L9:
    Tmp_190 := ntStatus_5;
    return;

  anon16_Then:
    assume {:partition} ntStatus_5 == 0;
    call {:si_unique_call 254} sdv_131 := sdv_hash_390207871(AvcIrb_4);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_131 == 9;
    assume {:nonnull} this_18 != 0;
    assume this_18 > 0;
    goto L46;

  anon17_Then:
    assume {:partition} sdv_131 != 9;
    goto L46;

  anon15_Then:
    assume {:partition} 0 > sdv_128;
    goto L35;

  anon20_Then:
    assume {:partition} AvcIrb_4 == 0;
    ntStatus_5 := -1073741670;
    goto L9;

  anon19_Then:
    assume {:partition} Tmp_192 == 0;
    goto L16;

  anon18_Then:
    goto L9;
}



procedure {:origName "Avc_Close"} Avc_Close(actual_DeviceObject: int, actual_Irp_3: int) returns (Tmp_195: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc;
  free ensures {:va_keep} Tmp_195 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_Close"} Avc_Close(actual_DeviceObject: int, actual_Irp_3: int) returns (Tmp_195: int)
{
  var {:scalar} ntStatus_6: int;
  var {:pointer} CommonExtension: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} Irp_3: int;
  var vslice_dummy_var_31: int;

  anon0:
    DeviceObject := actual_DeviceObject;
    Irp_3 := actual_Irp_3;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    havoc CommonExtension;
    call {:si_unique_call 255} vslice_dummy_var_31 := sdv_IoGetCurrentIrpStackLocation(Irp_3);
    ntStatus_6 := 0;
    call {:si_unique_call 256} sdv_do_paged_code_check();
    assume {:nonnull} CommonExtension != 0;
    assume CommonExtension > 0;
    call {:si_unique_call 257} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension));
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_3))] := ntStatus_6;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    call {:si_unique_call 258} sdv_IoCompleteRequest(0, 0);
    Tmp_195 := ntStatus_6;
    return;
}



procedure {:origName "AvcInitializeRemoveLock"} AvcInitializeRemoveLock(actual_Lock: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcInitializeRemoveLock"} AvcInitializeRemoveLock(actual_Lock: int)
{
  var {:pointer} Lock: int;
  var vslice_dummy_var_32: int;

  anon0:
    call {:si_unique_call 259} vslice_dummy_var_32 := __HAVOC_malloc(4);
    Lock := actual_Lock;
    call {:si_unique_call 260} sdv_do_paged_code_check();
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Lock != 0;
    assume {:nonnull} Lock != 0;
    assume Lock > 0;
    assume {:nonnull} Lock != 0;
    assume Lock > 0;
    assume {:nonnull} Lock != 0;
    assume Lock > 0;
    call {:si_unique_call 261} KeInitializeEvent(RemoveEvent__AVC_REMOVE_LOCK(Lock), 1, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} Lock == 0;
    goto L1;
}



procedure {:origName "AvcReleaseRemoveLock"} AvcReleaseRemoveLock(actual_Lock_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcReleaseRemoveLock"} AvcReleaseRemoveLock(actual_Lock_1: int)
{
  var {:pointer} Tmp_199: int;
  var {:scalar} lockValue: int;
  var {:pointer} Lock_1: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;

  anon0:
    call {:si_unique_call 262} vslice_dummy_var_33 := __HAVOC_malloc(4);
    Lock_1 := actual_Lock_1;
    call {:si_unique_call 263} Tmp_199 := __HAVOC_malloc(4);
    assume {:nonnull} Lock_1 != 0;
    assume Lock_1 > 0;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    call {:si_unique_call 264} lockValue := sdv_InterlockedDecrement(Tmp_199);
    assume {:nonnull} Lock_1 != 0;
    assume Lock_1 > 0;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} lockValue == 0;
    assume {:nonnull} Lock_1 != 0;
    assume Lock_1 > 0;
    call {:si_unique_call 265} vslice_dummy_var_34 := KeSetEvent(RemoveEvent__AVC_REMOVE_LOCK(Lock_1), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} lockValue != 0;
    goto L1;
}



procedure {:origName "Avc_Create"} Avc_Create(actual_DeviceObject_1: int, actual_Irp_4: int) returns (Tmp_201: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc;
  free ensures {:va_keep} Tmp_201 == -1073741738 || Tmp_201 == 0 || Tmp_201 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_Create"} Avc_Create(actual_DeviceObject_1: int, actual_Irp_4: int) returns (Tmp_201: int)
{
  var {:pointer} Tmp_202: int;
  var {:pointer} IrpStack_1: int;
  var {:scalar} ntStatus_7: int;
  var {:pointer} CommonExtension_1: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} Irp_4: int;

  anon0:
    DeviceObject_1 := actual_DeviceObject_1;
    Irp_4 := actual_Irp_4;
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc CommonExtension_1;
    call {:si_unique_call 266} IrpStack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_4);
    ntStatus_7 := 0;
    call {:si_unique_call 267} sdv_do_paged_code_check();
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L17;

  L17:
    ntStatus_7 := -1073741811;
    goto L18;

  L18:
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    ntStatus_7 := -1073741738;
    goto L19;

  L19:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} ntStatus_7 != 0;
    goto L24;

  L24:
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_4))] := ntStatus_7;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    call {:si_unique_call 268} sdv_IoCompleteRequest(0, 0);
    Tmp_201 := ntStatus_7;
    return;

  anon11_Then:
    assume {:partition} ntStatus_7 == 0;
    assume {:nonnull} CommonExtension_1 != 0;
    assume CommonExtension_1 > 0;
    call {:si_unique_call 269} ntStatus_7 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_1));
    goto L24;

  anon10_Then:
    goto L19;

  anon9_Then:
    assume {:nonnull} IrpStack_1 != 0;
    assume IrpStack_1 > 0;
    havoc Tmp_202;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L18;

  anon12_Then:
    goto L17;
}



procedure {:origName "Avc_SynchCompletionRoutine"} Avc_SynchCompletionRoutine(actual_DeviceObject_2: int, actual_Irp_5: int, actual_EventIn: int) returns (Tmp_204: int);
  free ensures {:va_keep} Tmp_204 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_SynchCompletionRoutine"} Avc_SynchCompletionRoutine(actual_DeviceObject_2: int, actual_Irp_5: int, actual_EventIn: int) returns (Tmp_204: int)
{
  var {:pointer} Event: int;
  var {:pointer} EventIn: int;
  var vslice_dummy_var_35: int;

  anon0:
    EventIn := actual_EventIn;
    Event := EventIn;
    call {:si_unique_call 270} vslice_dummy_var_35 := KeSetEvent(Event, 0, 0);
    Tmp_204 := -1073741802;
    return;
}



procedure {:origName "AvcGetDescriptionMessage"} AvcGetDescriptionMessage(actual_MessageNumber: int, actual_description: int) returns (Tmp_206: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_206 == -1073741559 || Tmp_206 == 0 || Tmp_206 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcGetDescriptionMessage"} AvcGetDescriptionMessage(actual_MessageNumber: int, actual_description: int) returns (Tmp_206: int)
{
  var {:scalar} sdv_138: int;
  var {:pointer} sdv_139: int;
  var {:scalar} cBytes: int;
  var {:scalar} MessageNumber: int;
  var {:pointer} description: int;

  anon0:
    MessageNumber := actual_MessageNumber;
    description := actual_description;
    call {:si_unique_call 271} sdv_do_paged_code_check();
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} MessageNumber != 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} MessageNumber != 8;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} MessageNumber != 16;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} MessageNumber != 24;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} MessageNumber != 32;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} MessageNumber != 40;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} MessageNumber != 48;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} MessageNumber != 56;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} MessageNumber != 72;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} MessageNumber != 80;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} MessageNumber != 88;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} MessageNumber != 65536;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} MessageNumber == 65537;
    goto L27;

  L27:
    cBytes := sdv_138 * 2 + 2;
    call {:si_unique_call 272} sdv_139 := ExAllocatePoolWithTag(1, cBytes, 541283905);
    assume {:nonnull} description != 0;
    assume description > 0;
    assume {:nonnull} description != 0;
    assume description > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    call {:si_unique_call 273} sdv_RtlCopyMemory(0, 0, cBytes);
    Tmp_206 := 0;
    goto L1;

  L1:
    return;

  anon42_Then:
    Tmp_206 := -1073741670;
    goto L1;

  anon30_Then:
    assume {:partition} MessageNumber != 65537;
    assume {:nonnull} description != 0;
    assume description > 0;
    Tmp_206 := -1073741559;
    goto L1;

  anon31_Then:
    assume {:partition} MessageNumber == 65536;
    goto L27;

  anon32_Then:
    assume {:partition} MessageNumber == 88;
    goto L27;

  anon33_Then:
    assume {:partition} MessageNumber == 80;
    goto L27;

  anon34_Then:
    assume {:partition} MessageNumber == 72;
    goto L27;

  anon35_Then:
    assume {:partition} MessageNumber == 56;
    goto L27;

  anon36_Then:
    assume {:partition} MessageNumber == 48;
    goto L27;

  anon37_Then:
    assume {:partition} MessageNumber == 40;
    goto L27;

  anon38_Then:
    assume {:partition} MessageNumber == 32;
    goto L27;

  anon39_Then:
    assume {:partition} MessageNumber == 24;
    goto L27;

  anon40_Then:
    assume {:partition} MessageNumber == 16;
    goto L27;

  anon41_Then:
    assume {:partition} MessageNumber == 8;
    goto L27;

  anon29_Then:
    assume {:partition} MessageNumber == 0;
    goto L27;
}



procedure {:origName "Avc_SubmitIrpSynch"} Avc_SubmitIrpSynch(actual_DeviceObject_3: int, actual_Irp_6: int) returns (Tmp_208: int);
  modifies alloc, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_SubmitIrpSynch"} Avc_SubmitIrpSynch(actual_DeviceObject_3: int, actual_Irp_6: int) returns (Tmp_208: int)
{
  var {:scalar} Event_1: int;
  var {:scalar} ntStatus_8: int;
  var {:pointer} DeviceObject_3: int;
  var {:pointer} Irp_6: int;
  var vslice_dummy_var_36: int;

  anon0:
    call {:si_unique_call 274} Event_1 := __HAVOC_malloc(156);
    DeviceObject_3 := actual_DeviceObject_3;
    Irp_6 := actual_Irp_6;
    call {:si_unique_call 275} sdv_do_paged_code_check();
    call {:si_unique_call 276} KeInitializeEvent(Event_1, 1, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume Irp_6 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 277} SLIC_sdv_IoSetCompletionRoutine_entry(0);
    goto L26;

  L26:
    call {:si_unique_call 278} sdv_IoSetCompletionRoutine(Irp_6, li2bplFunctionConstant942, Event_1, 1, 1, 1);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume Irp_6 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 279} SLIC_sdv_IoCallDriver_entry(0);
    goto L29;

  L29:
    call {:si_unique_call 280} ntStatus_8 := sdv_IoCallDriver#1(DeviceObject_3, Irp_6);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume Irp_6 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 281} SLIC_sdv_IoCallDriver_exit(0, Irp_6);
    goto L18;

  L18:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} ntStatus_8 == 259;
    call {:si_unique_call 282} vslice_dummy_var_36 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    ntStatus_8 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_6))];
    goto L19;

  L19:
    Tmp_208 := ntStatus_8;
    return;

  anon11_Then:
    assume {:partition} ntStatus_8 != 259;
    goto L19;

  anon12_Then:
    assume !(Irp_6 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L18;

  anon10_Then:
    assume !(Irp_6 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L29;

  anon9_Then:
    assume !(Irp_6 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L26;
}



procedure {:origName "AvcAcquireRemoveLock"} AvcAcquireRemoveLock(actual_Lock_2: int) returns (Tmp_210: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_210 == -1073741738 || Tmp_210 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcAcquireRemoveLock"} AvcAcquireRemoveLock(actual_Lock_2: int) returns (Tmp_210: int)
{
  var {:scalar} sdv_143: int;
  var {:scalar} ntStatus_9: int;
  var {:pointer} Tmp_211: int;
  var {:pointer} Lock_2: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;

  anon0:
    Lock_2 := actual_Lock_2;
    ntStatus_9 := 0;
    call {:si_unique_call 283} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} Lock_2 != 0;
    assume Lock_2 > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    call {:si_unique_call 284} vslice_dummy_var_38 := sdv_InterlockedIncrement(Tmp_211);
    assume {:nonnull} Lock_2 != 0;
    assume Lock_2 > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} Lock_2 != 0;
    assume Lock_2 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 285} Tmp_211 := __HAVOC_malloc(4);
    assume {:nonnull} Lock_2 != 0;
    assume Lock_2 > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    call {:si_unique_call 286} sdv_143 := sdv_InterlockedDecrement(Tmp_211);
    assume {:nonnull} Lock_2 != 0;
    assume Lock_2 > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} sdv_143 != 0;
    goto L19;

  L19:
    ntStatus_9 := -1073741738;
    goto L11;

  L11:
    Tmp_210 := ntStatus_9;
    return;

  anon6_Then:
    assume {:partition} sdv_143 == 0;
    assume {:nonnull} Lock_2 != 0;
    assume Lock_2 > 0;
    call {:si_unique_call 287} vslice_dummy_var_37 := KeSetEvent(RemoveEvent__AVC_REMOVE_LOCK(Lock_2), 0, 0);
    goto L19;

  anon5_Then:
    goto L11;
}



procedure {:origName "AvcGetDeviceDescriptionMessage"} AvcGetDeviceDescriptionMessage(actual_SubunitAddr_3: int, actual_deviceDescription: int) returns (Tmp_212: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_212 == -1073741559 || Tmp_212 == 0 || Tmp_212 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcGetDeviceDescriptionMessage"} AvcGetDeviceDescriptionMessage(actual_SubunitAddr_3: int, actual_deviceDescription: int) returns (Tmp_212: int)
{
  var {:scalar} messageNumber: int;
  var {:scalar} ntStatus_10: int;
  var {:pointer} SubunitAddr_3: int;
  var {:pointer} deviceDescription: int;

  anon0:
    SubunitAddr_3 := actual_SubunitAddr_3;
    deviceDescription := actual_deviceDescription;
    ntStatus_10 := -1073741559;
    call {:si_unique_call 288} sdv_do_paged_code_check();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} SubunitAddr_3 != 0;
    assume {:nonnull} SubunitAddr_3 != 0;
    assume SubunitAddr_3 > 0;
    havoc messageNumber;
    call {:si_unique_call 289} ntStatus_10 := AvcGetDescriptionMessage(messageNumber, deviceDescription);
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} -1073741559 == ntStatus_10;
    call {:si_unique_call 290} ntStatus_10 := AvcGetDescriptionMessage(65537, deviceDescription);
    goto L16;

  L16:
    Tmp_212 := ntStatus_10;
    return;

  anon6_Then:
    assume {:partition} -1073741559 != ntStatus_10;
    goto L16;

  anon5_Then:
    assume {:partition} SubunitAddr_3 == 0;
    goto L9;
}



procedure {:origName "Avc_Cleanup"} Avc_Cleanup(actual_DeviceObject_4: int, actual_Irp_7: int) returns (Tmp_214: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc;
  free ensures {:va_keep} Tmp_214 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_Cleanup"} Avc_Cleanup(actual_DeviceObject_4: int, actual_Irp_7: int) returns (Tmp_214: int)
{
  var {:pointer} IrpStack_2: int;
  var {:scalar} ntStatus_11: int;
  var {:pointer} CommonExtension_2: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_2585: int;

  anon0:
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_7 := actual_Irp_7;
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc CommonExtension_2;
    call {:si_unique_call 291} IrpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_7);
    ntStatus_11 := 0;
    call {:si_unique_call 292} sdv_do_paged_code_check();
    assume {:nonnull} CommonExtension_2 != 0;
    assume CommonExtension_2 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} IrpStack_2 != 0;
    assume IrpStack_2 > 0;
    havoc vslice_dummy_var_2585;
    call {:si_unique_call 293} AvcStopSelectedFCPProcessing(CommonExtension_2, vslice_dummy_var_2585);
    goto L16;

  L16:
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_7))] := ntStatus_11;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    call {:si_unique_call 294} sdv_IoCompleteRequest(0, 0);
    Tmp_214 := ntStatus_11;
    return;

  anon3_Then:
    goto L16;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 295} vslice_dummy_var_39 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "DriverEntry"} DriverEntry(actual_DriverObject: int, actual_RegistryPath: int) returns (Tmp_218: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_218 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "DriverEntry"} DriverEntry(actual_DriverObject: int, actual_RegistryPath: int) returns (Tmp_218: int)
{
  var {:pointer} Tmp_219: int;
  var {:pointer} Tmp_220: int;
  var {:pointer} Tmp_221: int;
  var {:pointer} Tmp_222: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} Tmp_226: int;
  var {:pointer} Tmp_227: int;
  var {:scalar} ntStatus_12: int;
  var {:pointer} Tmp_228: int;
  var {:pointer} DriverObject: int;

  anon0:
    DriverObject := actual_DriverObject;
    call {:si_unique_call 296} Tmp_219 := __HAVOC_malloc(112);
    call {:si_unique_call 297} Tmp_221 := __HAVOC_malloc(112);
    call {:si_unique_call 298} Tmp_222 := __HAVOC_malloc(112);
    call {:si_unique_call 299} Tmp_223 := __HAVOC_malloc(112);
    call {:si_unique_call 300} Tmp_224 := __HAVOC_malloc(112);
    call {:si_unique_call 301} Tmp_225 := __HAVOC_malloc(112);
    call {:si_unique_call 302} Tmp_226 := __HAVOC_malloc(112);
    call {:si_unique_call 303} Tmp_227 := __HAVOC_malloc(112);
    ntStatus_12 := 0;
    assume {:nonnull} DriverObject != 0;
    assume DriverObject > 0;
    assume {:nonnull} DriverObject != 0;
    assume DriverObject > 0;
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} DriverObject != 0;
    assume DriverObject > 0;
    havoc Tmp_223;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    assume {:nonnull} DriverObject != 0;
    assume DriverObject > 0;
    havoc Tmp_225;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    assume {:nonnull} DriverObject != 0;
    assume DriverObject > 0;
    havoc Tmp_219;
    assume {:nonnull} Tmp_219 != 0;
    assume Tmp_219 > 0;
    assume {:nonnull} DriverObject != 0;
    assume DriverObject > 0;
    havoc Tmp_222;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    assume {:nonnull} DriverObject != 0;
    assume DriverObject > 0;
    havoc Tmp_227;
    assume {:nonnull} Tmp_227 != 0;
    assume Tmp_227 > 0;
    assume {:nonnull} DriverObject != 0;
    assume DriverObject > 0;
    havoc Tmp_226;
    assume {:nonnull} Tmp_226 != 0;
    assume Tmp_226 > 0;
    assume {:nonnull} DriverObject != 0;
    assume DriverObject > 0;
    havoc Tmp_221;
    assume {:nonnull} Tmp_221 != 0;
    assume Tmp_221 > 0;
    assume {:nonnull} DriverObject != 0;
    assume DriverObject > 0;
    havoc Tmp_228;
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    call {:si_unique_call 304} Tmp_220 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    call {:si_unique_call 305} sdv_KeInitializeSpinLock(Tmp_220);
    assume {:nonnull} Tmp_220 != 0;
    assume Tmp_220 > 0;
    call {:si_unique_call 306} InitializeListHead(AvcVirtualInstanceList);
    call {:si_unique_call 307} InitializeListHead(AvcPeerInstanceList);
    call {:si_unique_call 308} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 672, 543389281, 0);
    call {:si_unique_call 309} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 256, 543389281, 0);
    call {:si_unique_call 310} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 16, 543389281, 0);
    call {:si_unique_call 311} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 560, 543389281, 0);
    call {:si_unique_call 312} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 56, 543389281, 0);
    Tmp_218 := ntStatus_12;
    return;
}



procedure {:origName "Avc_Unload"} Avc_Unload(actual_DriverObject_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_Unload"} Avc_Unload(actual_DriverObject_1: int)
{
  var vslice_dummy_var_40: int;

  anon0:
    call {:si_unique_call 313} vslice_dummy_var_40 := __HAVOC_malloc(4);
    call {:si_unique_call 314} sdv_do_paged_code_check();
    call {:si_unique_call 315} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 316} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 317} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 318} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 319} ExDeleteNPagedLookasideList(0);
    return;
}



procedure {:origName "AvcReleaseRemoveLockAndWait"} AvcReleaseRemoveLockAndWait(actual_Lock_3: int);
  modifies alloc, thread_status;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcReleaseRemoveLockAndWait"} AvcReleaseRemoveLockAndWait(actual_Lock_3: int)
{
  var {:scalar} sdv_149: int;
  var {:pointer} Tmp_232: int;
  var {:pointer} Lock_3: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;

  anon0:
    call {:si_unique_call 320} vslice_dummy_var_41 := __HAVOC_malloc(4);
    Lock_3 := actual_Lock_3;
    call {:si_unique_call 321} sdv_do_paged_code_check();
    assume {:nonnull} Lock_3 != 0;
    assume Lock_3 > 0;
    call {:si_unique_call 322} Tmp_232 := __HAVOC_malloc(4);
    assume {:nonnull} Lock_3 != 0;
    assume Lock_3 > 0;
    assume {:nonnull} Tmp_232 != 0;
    assume Tmp_232 > 0;
    call {:si_unique_call 323} vslice_dummy_var_43 := sdv_InterlockedDecrement(Tmp_232);
    assume {:nonnull} Lock_3 != 0;
    assume Lock_3 > 0;
    assume {:nonnull} Tmp_232 != 0;
    assume Tmp_232 > 0;
    call {:si_unique_call 324} Tmp_232 := __HAVOC_malloc(4);
    assume {:nonnull} Lock_3 != 0;
    assume Lock_3 > 0;
    assume {:nonnull} Tmp_232 != 0;
    assume Tmp_232 > 0;
    call {:si_unique_call 325} sdv_149 := sdv_InterlockedDecrement(Tmp_232);
    assume {:nonnull} Lock_3 != 0;
    assume Lock_3 > 0;
    assume {:nonnull} Tmp_232 != 0;
    assume Tmp_232 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_149 > 0;
    call {:si_unique_call 326} vslice_dummy_var_42 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} 0 >= sdv_149;
    goto L1;
}



procedure {:origName "AvcPrepareForResponseCallback"} AvcPrepareForResponseCallback(actual_DevExt: int, actual_Command: int) returns (Tmp_233: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.PendingReturned__IRP, irp_status, thread_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_233 == 0 || Tmp_233 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcPrepareForResponseCallback"} AvcPrepareForResponseCallback(actual_DevExt: int, actual_Command: int) returns (Tmp_233: int)
{
  var {:scalar} Status: int;
  var {:pointer} Tmp_234: int;
  var {:scalar} OldIrql: int;
  var {:pointer} NextIrpStack: int;
  var {:pointer} Tmp_235: int;
  var {:scalar} NeedIrp: int;
  var {:pointer} Tmp_236: int;
  var {:pointer} DevExt: int;
  var {:pointer} Command: int;
  var boogieTmp: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_2586: int;
  var vslice_dummy_var_2587: int;
  var vslice_dummy_var_2588: int;
  var vslice_dummy_var_2589: int;
  var vslice_dummy_var_2590: int;

  anon0:
    DevExt := actual_DevExt;
    Command := actual_Command;
    Status := 0;
    NeedIrp := 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    Tmp_233 := Status;
    goto L1;

  L1:
    return;

  anon18_Then:
    call {:si_unique_call 327} Tmp_236 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    call {:si_unique_call 328} sdv_KeAcquireSpinLock(0, Tmp_236);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    havoc OldIrql;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Command != 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    call {:si_unique_call 329} vslice_dummy_var_44 := sdv_InsertTailList(PendingResponseList__BUS_DEVICE_EXTENSION(DevExt), Command);
    goto L14;

  L14:
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L21;

  L21:
    call {:si_unique_call 330} sdv_KeReleaseSpinLock(0, OldIrql);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} NeedIrp != 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    havoc vslice_dummy_var_2586;
    call {:si_unique_call 331} NextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_2586);
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack)] := 15;
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    assume {:nonnull} NextIrpStack != 0;
    assume NextIrpStack > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    havoc Tmp_234;
    assume {:nonnull} Tmp_234 != 0;
    assume Tmp_234 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_234))] := -1073741637;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    havoc vslice_dummy_var_2587;
    call {:si_unique_call 332} sdv_IoSetCompletionRoutine(vslice_dummy_var_2587, li2bplFunctionConstant842, DevExt, 1, 1, 1);
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    havoc vslice_dummy_var_2588;
    havoc vslice_dummy_var_2589;
    call {:si_unique_call 333} vslice_dummy_var_45 := sdv_IoCallDriver#1(vslice_dummy_var_2588, vslice_dummy_var_2589);
    goto L25;

  L25:
    Tmp_233 := Status;
    goto L1;

  anon16_Then:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Command != 0;
    call {:si_unique_call 334} Tmp_236 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    call {:si_unique_call 335} sdv_KeAcquireSpinLock(0, Tmp_236);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    havoc OldIrql;
    call {:si_unique_call 336} vslice_dummy_var_46 := sdv_RemoveEntryList(0);
    call {:si_unique_call 337} InitializeListHead(Command);
    call {:si_unique_call 338} sdv_KeReleaseSpinLock(0, OldIrql);
    goto L46;

  L46:
    Status := -1073741670;
    goto L25;

  anon17_Then:
    assume {:partition} Command == 0;
    goto L46;

  anon15_Then:
    assume {:partition} NeedIrp == 0;
    goto L25;

  anon14_Then:
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    havoc Tmp_235;
    assume {:nonnull} DevExt != 0;
    assume DevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    havoc vslice_dummy_var_2590;
    call {:si_unique_call 339} boogieTmp := IoAllocateIrp(vslice_dummy_var_2590, 0);
    NeedIrp := 1;
    goto L21;

  anon13_Then:
    assume {:partition} Command == 0;
    goto L14;
}



procedure {:origName "AvcSubunitPackedTypesEqual"} AvcSubunitPackedTypesEqual(actual_SubunitType1: int, actual_SubunitType2: int) returns (Tmp_237: int);
  free ensures {:va_keep} Tmp_237 == 1 || Tmp_237 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcSubunitPackedTypesEqual"} AvcSubunitPackedTypesEqual(actual_SubunitType1: int, actual_SubunitType2: int) returns (Tmp_237: int)
{
  var {:scalar} Tmp_238: int;
  var {:scalar} Tmp_239: int;
  var {:scalar} Tmp_241: int;
  var {:scalar} Tmp_242: int;
  var {:scalar} idx_4: int;
  var {:scalar} Tmp_243: int;
  var {:scalar} Tmp_244: int;
  var {:pointer} SubunitType1: int;
  var {:pointer} SubunitType2: int;

  anon0:
    SubunitType1 := actual_SubunitType1;
    SubunitType2 := actual_SubunitType2;
    idx_4 := 1;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} SubunitType1 == SubunitType2;
    Tmp_237 := 1;
    goto L1;

  L1:
    return;

  anon20_Then:
    assume {:partition} SubunitType1 != SubunitType2;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} SubunitType1 != 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} SubunitType2 != 0;
    assume {:nonnull} SubunitType1 != 0;
    assume SubunitType1 > 0;
    havoc Tmp_243;
    assume {:nonnull} SubunitType2 != 0;
    assume SubunitType2 > 0;
    havoc Tmp_241;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Tmp_243 != Tmp_241;
    Tmp_237 := 0;
    goto L1;

  anon21_Then:
    assume {:partition} Tmp_243 == Tmp_241;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L16;

  L16:
    call {:si_unique_call 340} Tmp_239, Tmp_242, idx_4 := AvcSubunitPackedTypesEqual_loop_L16(Tmp_239, Tmp_242, idx_4, SubunitType1, SubunitType2);
    goto L16_last;

  L16_last:
    Tmp_239 := idx_4;
    assume {:nonnull} SubunitType1 != 0;
    assume SubunitType1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    Tmp_242 := idx_4;
    assume {:nonnull} SubunitType2 != 0;
    assume SubunitType2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_237 := 0;
    goto L1;

  anon23_Then:
    idx_4 := idx_4 + 1;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    assume false;
    return;

  anon22_Then:
    Tmp_244 := idx_4;
    Tmp_238 := idx_4;
    assume {:nonnull} SubunitType1 != 0;
    assume SubunitType1 > 0;
    assume {:nonnull} SubunitType2 != 0;
    assume SubunitType2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_237 := 0;
    goto L1;

  anon24_Then:
    goto L15;

  L15:
    Tmp_237 := 1;
    goto L1;

  anon19_Then:
    goto L15;

  anon18_Then:
    assume {:partition} SubunitType2 == 0;
    goto L8;

  L8:
    Tmp_237 := 0;
    goto L1;

  anon17_Then:
    assume {:partition} SubunitType1 == 0;
    goto L8;
}



procedure {:origName "AvcStopAllFCPProcessing"} AvcStopAllFCPProcessing(actual_DevExt_1: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcStopAllFCPProcessing"} AvcStopAllFCPProcessing(actual_DevExt_1: int)
{
  var {:scalar} sdv_155: int;
  var {:pointer} sdv_156: int;
  var {:scalar} sdv_157: int;
  var {:scalar} OldIrql_1: int;
  var {:pointer} sdv_159: int;
  var {:scalar} sdv_160: int;
  var {:pointer} sdv_161: int;
  var {:scalar} sdv_162: int;
  var {:pointer} Tmp_246: int;
  var {:pointer} Command_1: int;
  var {:pointer} CallbackLink: int;
  var {:pointer} sdv_164: int;
  var {:pointer} DevExt_1: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_2591: int;
  var vslice_dummy_var_2592: int;

  anon0:
    call {:si_unique_call 341} vslice_dummy_var_47 := __HAVOC_malloc(4);
    DevExt_1 := actual_DevExt_1;
    call {:si_unique_call 342} Tmp_246 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    call {:si_unique_call 343} sdv_KeAcquireSpinLock(0, Tmp_246);
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    havoc OldIrql_1;
    goto L8;

  L8:
    call {:si_unique_call 344} sdv_155, sdv_157, OldIrql_1, sdv_159, Tmp_246, Command_1, CallbackLink, sdv_164 := AvcStopAllFCPProcessing_loop_L8(sdv_155, sdv_157, OldIrql_1, sdv_159, Tmp_246, Command_1, CallbackLink, sdv_164, DevExt_1);
    goto L8_last;

  L8_last:
    call {:si_unique_call 378} sdv_155 := sdv_IsListEmpty(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_155 != 0;
    goto L15;

  L15:
    call {:si_unique_call 345} OldIrql_1, sdv_160, sdv_161, Tmp_246, Command_1 := AvcStopAllFCPProcessing_loop_L15(OldIrql_1, sdv_160, sdv_161, Tmp_246, Command_1, DevExt_1);
    goto L15_last;

  L15_last:
    call {:si_unique_call 377} sdv_160 := sdv_IsListEmpty(0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} sdv_160 != 0;
    goto L22;

  L22:
    call {:si_unique_call 346} sdv_156, OldIrql_1, sdv_162, Tmp_246, Command_1 := AvcStopAllFCPProcessing_loop_L22(sdv_156, OldIrql_1, sdv_162, Tmp_246, Command_1, DevExt_1);
    goto L22_last;

  L22_last:
    call {:si_unique_call 376} sdv_162 := sdv_IsListEmpty(0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} sdv_162 != 0;
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 347} vslice_dummy_var_48 := IoCancelIrp(0);
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    goto L30;

  L30:
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 348} vslice_dummy_var_49 := IoCancelIrp(0);
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    goto L35;

  L35:
    call {:si_unique_call 349} sdv_KeReleaseSpinLock(0, OldIrql_1);
    return;

  anon19_Then:
    goto L35;

  anon18_Then:
    goto L30;

  anon17_Then:
    assume {:partition} sdv_162 == 0;
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    call {:si_unique_call 350} sdv_156 := RemoveHeadList(CleanupList__BUS_DEVICE_EXTENSION(DevExt_1));
    Command_1 := sdv_156;
    call {:si_unique_call 351} InitializeListHead(Command_1);
    call {:si_unique_call 352} sdv_KeReleaseSpinLock(0, OldIrql_1);
    call {:si_unique_call 353} AvcPendingIrpCompletion(Command_1);
    call {:si_unique_call 354} AvcFreeCommandContext(Command_1);
    call {:si_unique_call 355} Tmp_246 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    call {:si_unique_call 356} sdv_KeAcquireSpinLock(0, Tmp_246);
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    havoc OldIrql_1;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon16_Then:
    assume {:partition} sdv_160 == 0;
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    call {:si_unique_call 357} sdv_161 := RemoveHeadList(PendingRequestList__BUS_DEVICE_EXTENSION(DevExt_1));
    Command_1 := sdv_161;
    call {:si_unique_call 358} InitializeListHead(Command_1);
    call {:si_unique_call 359} sdv_KeReleaseSpinLock(0, OldIrql_1);
    assume {:nonnull} Command_1 != 0;
    assume Command_1 > 0;
    call {:si_unique_call 360} AvcPendingIrpCompletion(Command_1);
    call {:si_unique_call 361} AvcFreeCommandContext(Command_1);
    Command_1 := 0;
    call {:si_unique_call 362} Tmp_246 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    call {:si_unique_call 363} sdv_KeAcquireSpinLock(0, Tmp_246);
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    havoc OldIrql_1;
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:partition} sdv_155 == 0;
    assume {:nonnull} DevExt_1 != 0;
    assume DevExt_1 > 0;
    call {:si_unique_call 364} sdv_159 := RemoveHeadList(PendingResponseList__BUS_DEVICE_EXTENSION(DevExt_1));
    Command_1 := sdv_159;
    call {:si_unique_call 365} InitializeListHead(Command_1);
    call {:si_unique_call 366} sdv_KeReleaseSpinLock(0, OldIrql_1);
    assume {:nonnull} Command_1 != 0;
    assume Command_1 > 0;
    call {:si_unique_call 367} sdv_157 := sdv_IsListEmpty(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_157 == 0;
    assume {:nonnull} Command_1 != 0;
    assume Command_1 > 0;
    call {:si_unique_call 368} sdv_164 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_1));
    CallbackLink := sdv_164;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} CallbackLink != 0;
    assume CallbackLink > 0;
    assume {:nonnull} CallbackLink != 0;
    assume CallbackLink > 0;
    havoc vslice_dummy_var_2591;
    call {:si_unique_call 369} AvcCommandCallback_sdv_static_function_7(Command_1, vslice_dummy_var_2591);
    goto L107;

  L107:
    call {:si_unique_call 370} ExFreeToNPagedLookasideList(AvcCommandLinkPool, CallbackLink);
    goto L97;

  L97:
    call {:si_unique_call 371} Tmp_246 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    call {:si_unique_call 372} sdv_KeAcquireSpinLock(0, Tmp_246);
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    havoc OldIrql_1;
    goto L97_dummy;

  L97_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} CallbackLink != 0;
    assume CallbackLink > 0;
    assume {:nonnull} CallbackLink != 0;
    assume CallbackLink > 0;
    havoc vslice_dummy_var_2592;
    call {:si_unique_call 373} Avc_BusResetCallback_sdv_static_function_5#1(Command_1, vslice_dummy_var_2592);
    goto L107;

  anon20_Then:
    assume {:partition} sdv_157 != 0;
    call {:si_unique_call 374} AvcPendingIrpCompletion(Command_1);
    call {:si_unique_call 375} AvcFreeCommandContext(Command_1);
    Command_1 := 0;
    goto L97;
}



procedure {:origName "AvcCommandCallback_sdv_static_function_7"} AvcCommandCallback_sdv_static_function_7(actual_CommandContext: int, actual_Event_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcCommandCallback_sdv_static_function_7"} AvcCommandCallback_sdv_static_function_7(actual_CommandContext: int, actual_Event_2: int)
{
  var {:pointer} Event_2: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;

  anon0:
    call {:si_unique_call 379} vslice_dummy_var_50 := __HAVOC_malloc(4);
    Event_2 := actual_Event_2;
    call {:si_unique_call 380} vslice_dummy_var_51 := KeSetEvent(Event_2, 0, 0);
    return;
}



procedure {:origName "AvcLocalResponseCompletion_sdv_static_function_7"} AvcLocalResponseCompletion_sdv_static_function_7(actual_DeviceObject_5: int, actual_Irp_8: int, actual_Context: int) returns (Tmp_249: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_249 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcLocalResponseCompletion_sdv_static_function_7"} AvcLocalResponseCompletion_sdv_static_function_7(actual_DeviceObject_5: int, actual_Irp_8: int, actual_Context: int) returns (Tmp_249: int)
{
  var {:pointer} Response: int;
  var {:pointer} Context: int;

  anon0:
    Context := actual_Context;
    Response := Context;
    call {:si_unique_call 381} ExFreeToNPagedLookasideList(AvcFcpPool, Response);
    call {:si_unique_call 382} IoFreeIrp(0);
    Tmp_249 := -1073741802;
    return;
}



procedure {:origName "AvcEnqueueFCPIrp"} AvcEnqueueFCPIrp(actual_Command_2: int, actual_Irp_9: int) returns (Tmp_251: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_251 == -1073741536 || Tmp_251 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcEnqueueFCPIrp"} AvcEnqueueFCPIrp(actual_Command_2: int, actual_Irp_9: int) returns (Tmp_251: int)
{
  var {:scalar} Status_1: int;
  var {:scalar} oldCancelRoutine: int;
  var {:scalar} oldIrql: int;
  var {:pointer} Tmp_252: int;
  var {:pointer} Command_2: int;
  var {:pointer} Irp_9: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;

  anon0:
    Command_2 := actual_Command_2;
    Irp_9 := actual_Irp_9;
    assume {:nonnull} Command_2 != 0;
    assume Command_2 > 0;
    Status_1 := 259;
    call {:si_unique_call 383} Tmp_252 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_252 != 0;
    assume Tmp_252 > 0;
    call {:si_unique_call 384} sdv_KeAcquireSpinLock(0, Tmp_252);
    assume {:nonnull} Tmp_252 != 0;
    assume Tmp_252 > 0;
    havoc oldIrql;
    assume {:nonnull} Command_2 != 0;
    assume Command_2 > 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 385} vslice_dummy_var_52 := sdv_InsertTailList(PendingIrpList__AVC_COMMAND_CONTEXT(Command_2), ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(Irp_9))));
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume Irp_9 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 386} SLIC_sdv_IoMarkIrpPending_entry(strConst__li2bpl13);
    goto L41;

  L41:
    call {:si_unique_call 387} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 388} oldCancelRoutine := sdv_IoSetCancelRoutine(Irp_9, li2bplFunctionConstant832);
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 389} oldCancelRoutine := sdv_IoSetCancelRoutine(Irp_9, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} oldCancelRoutine != 0;
    call {:si_unique_call 390} vslice_dummy_var_53 := sdv_RemoveEntryList(0);
    Status_1 := -1073741536;
    goto L23;

  L23:
    call {:si_unique_call 391} sdv_KeReleaseSpinLock(0, oldIrql);
    Tmp_251 := Status_1;
    return;

  anon9_Then:
    assume {:partition} oldCancelRoutine == 0;
    goto L23;

  anon8_Then:
    goto L23;

  anon7_Then:
    assume !(Irp_9 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L41;
}



procedure {:origName "AvcProcessSendResponseCR_sdv_static_function_7"} AvcProcessSendResponseCR_sdv_static_function_7(actual_DeviceObject_6: int, actual_Irp_10: int, actual_Context_1: int) returns (Tmp_253: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_253 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcProcessSendResponseCR_sdv_static_function_7"} AvcProcessSendResponseCR_sdv_static_function_7(actual_DeviceObject_6: int, actual_Irp_10: int, actual_Context_1: int) returns (Tmp_253: int)
{
  var {:pointer} Response_1: int;
  var {:pointer} Irp_10: int;
  var {:pointer} Context_1: int;

  anon0:
    Irp_10 := actual_Irp_10;
    Context_1 := actual_Context_1;
    Response_1 := Context_1;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_10)] != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume Irp_10 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 392} SLIC_sdv_IoMarkIrpPending_entry(strConst__li2bpl13);
    goto L15;

  L15:
    call {:si_unique_call 393} sdv_IoMarkIrpPending(0);
    goto L6;

  L6:
    call {:si_unique_call 394} ExFreeToNPagedLookasideList(AvcFcpPool, Response_1);
    Tmp_253 := 0;
    return;

  anon5_Then:
    assume !(Irp_10 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L15;

  anon6_Then:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_10)] == 0;
    goto L6;
}



procedure {:origName "AvcProcessSendResponse"} AvcProcessSendResponse(actual_DeviceObject_7: int, actual_Irp_11: int) returns (Tmp_255: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_255 == 259 || Tmp_255 == -1073741811 || Tmp_255 == 0 || Tmp_255 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcProcessSendResponse"} AvcProcessSendResponse(actual_DeviceObject_7: int, actual_Irp_11: int) returns (Tmp_255: int)
{
  var {:pointer} SubunitAddr_4: int;
  var {:dopa} {:scalar} Offset: int;
  var {:pointer} Tmp_256: int;
  var {:scalar} Tmp_257: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} sdv_169: int;
  var {:pointer} Tmp_259: int;
  var {:scalar} Status_2: int;
  var {:pointer} DevExt_3: int;
  var {:scalar} Padding: int;
  var {:pointer} sdv_170: int;
  var {:pointer} NextIrpStack_1: int;
  var {:pointer} Tmp_262: int;
  var {:scalar} Tmp_263: int;
  var {:pointer} Response_2: int;
  var {:pointer} CmdIrb: int;
  var {:scalar} Tmp_264: int;
  var {:scalar} Tmp_266: int;
  var {:pointer} Tmp_267: int;
  var {:pointer} DeviceObject_7: int;
  var {:pointer} Irp_11: int;
  var vslice_dummy_var_2593: int;
  var vslice_dummy_var_2594: int;
  var vslice_dummy_var_2595: int;

  anon0:
    call {:si_unique_call 395} Offset := __HAVOC_malloc(4);
    DeviceObject_7 := actual_DeviceObject_7;
    Irp_11 := actual_Irp_11;
    call {:si_unique_call 396} Tmp_256 := __HAVOC_malloc(2048);
    call {:si_unique_call 397} Tmp_258 := __HAVOC_malloc(2048);
    call {:si_unique_call 398} Tmp_259 := __HAVOC_malloc(2048);
    call {:si_unique_call 399} Tmp_262 := __HAVOC_malloc(2048);
    call {:si_unique_call 400} Tmp_267 := __HAVOC_malloc(2048);
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    havoc DevExt_3;
    call {:si_unique_call 401} sdv_169 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} sdv_169 != 0;
    assume sdv_169 > 0;
    havoc CmdIrb;
    Status_2 := 0;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L14;

  L14:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} DevExt_3 != 0;
    assume DevExt_3 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L72;

  L72:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_11))] := Status_2;
    call {:si_unique_call 402} sdv_IoCompleteRequest(0, 0);
    Tmp_255 := Status_2;
    goto L1;

  L1:
    return;

  anon31_Then:
    call {:si_unique_call 403} sdv_170 := sdv_ExAllocateFromNPagedLookasideList(0);
    Response_2 := sdv_170;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Response_2 != 0;
    call {:si_unique_call 404} NextIrpStack_1 := sdv_IoGetNextIrpStackLocation(Irp_11);
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    havoc Tmp_262;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} Tmp_262 != 0;
    assume Tmp_262 > 0;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    havoc SubunitAddr_4;
    goto L35;

  L35:
    call {:si_unique_call 405} Status_2 := AvcValidateSubunitAddress(SubunitAddr_4, 32, Offset);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Status_2 != 0;
    goto L72;

  anon32_Then:
    assume {:partition} Status_2 == 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    havoc Tmp_256;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    havoc vslice_dummy_var_2593;
    call {:si_unique_call 406} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2593);
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    havoc Tmp_257;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    havoc Tmp_258;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} Tmp_258 != 0;
    assume Tmp_258 > 0;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    havoc Tmp_264;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    havoc Tmp_259;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    havoc vslice_dummy_var_2594;
    call {:si_unique_call 407} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2594);
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    havoc Padding;
    goto L54;

  L54:
    call {:si_unique_call 408} Padding, Tmp_263, Tmp_266, Tmp_267 := AvcProcessSendResponse_loop_L54(Padding, Tmp_263, Response_2, Tmp_266, Tmp_267);
    goto L54_last;

  L54_last:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} INTMOD(Padding, 4) != 0;
    Tmp_266 := Padding;
    Padding := Padding + 1;
    Tmp_263 := Tmp_266;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    havoc Tmp_267;
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    assume false;
    return;

  anon33_Then:
    assume {:partition} INTMOD(Padding, 4) == 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} CmdIrb != 0;
    assume CmdIrb > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} Offset != 0;
    assume Offset > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} Response_2 != 0;
    assume Response_2 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_1)] := 15;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    assume {:nonnull} NextIrpStack_1 != 0;
    assume NextIrpStack_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume Irp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 409} SLIC_sdv_IoSetCompletionRoutine_entry(0);
    goto L94;

  L94:
    call {:si_unique_call 410} sdv_IoSetCompletionRoutine(Irp_11, li2bplFunctionConstant859, Response_2, 1, 1, 1);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume Irp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 411} SLIC_sdv_IoCallDriver_entry(0);
    goto L97;

  L97:
    assume {:nonnull} DevExt_3 != 0;
    assume DevExt_3 > 0;
    havoc vslice_dummy_var_2595;
    call {:si_unique_call 412} Status_2 := sdv_IoCallDriver#1(vslice_dummy_var_2595, Irp_11);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume Irp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 413} SLIC_sdv_IoCallDriver_exit(0, Irp_11);
    goto L71;

  L71:
    Tmp_255 := Status_2;
    goto L1;

  anon41_Then:
    assume !(Irp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L71;

  anon34_Then:
    assume !(Irp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L97;

  anon45_Then:
    assume !(Irp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L94;

  anon44_Then:
    assume {:nonnull} DevExt_3 != 0;
    assume DevExt_3 > 0;
    SubunitAddr_4 := UnitAddr__BUS_DEVICE_EXTENSION(DevExt_3);
    goto L35;

  anon43_Then:
    assume {:partition} Response_2 == 0;
    Status_2 := -1073741670;
    goto L72;

  anon35_Then:
    Status_2 := -1073741811;
    goto L72;

  anon36_Then:
    goto L14;

  anon37_Then:
    goto L14;

  anon38_Then:
    goto L14;

  anon39_Then:
    goto L14;

  anon40_Then:
    goto L14;

  anon42_Then:
    goto L14;
}



procedure {:origName "AvcStatus"} AvcStatus(actual_Command_3: int) returns (Tmp_268: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcStatus"} AvcStatus(actual_Command_3: int) returns (Tmp_268: int)
{
  var {:scalar} Status_3: int;
  var {:pointer} DevExt_4: int;
  var {:pointer} Command_3: int;

  anon0:
    Command_3 := actual_Command_3;
    assume {:nonnull} Command_3 != 0;
    assume Command_3 > 0;
    havoc DevExt_4;
    assume {:nonnull} Command_3 != 0;
    assume Command_3 > 0;
    assume {:nonnull} Command_3 != 0;
    assume Command_3 > 0;
    call {:si_unique_call 414} Status_3 := AvcCommand_sdv_static_function_7(DevExt_4, Command_3);
    Tmp_268 := Status_3;
    return;
}



procedure {:origName "AvcGetPeerDeviceObjectList"} AvcGetPeerDeviceObjectList(actual_DeviceObject_8: int, actual_Irp_12: int) returns (Tmp_270: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_270 == 0 || Tmp_270 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcGetPeerDeviceObjectList"} AvcGetPeerDeviceObjectList(actual_DeviceObject_8: int, actual_Irp_12: int) returns (Tmp_270: int)
{
  var {:scalar} Tmp_271: int;
  var {:scalar} Count: int;
  var {:scalar} Tmp_272: int;
  var {:pointer} sdv_175: int;
  var {:pointer} DevExt_5: int;
  var {:pointer} AvcIrb_5: int;
  var {:pointer} sdv_176: int;
  var {:scalar} OldIrql_2: int;
  var {:scalar} ntStatus_13: int;
  var {:pointer} sdv_177: int;
  var {:pointer} Tmp_273: int;
  var {:pointer} Entry: int;
  var {:pointer} Objects: int;
  var {:scalar} Tmp_274: int;
  var {:pointer} Irp_12: int;
  var vslice_dummy_var_54: int;

  anon0:
    Irp_12 := actual_Irp_12;
    call {:si_unique_call 415} sdv_175 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    assume {:nonnull} sdv_175 != 0;
    assume sdv_175 > 0;
    havoc AvcIrb_5;
    Count := 0;
    Objects := 0;
    ntStatus_13 := 0;
    assume {:nonnull} AvcIrb_5 != 0;
    assume AvcIrb_5 > 0;
    assume {:nonnull} AvcIrb_5 != 0;
    assume AvcIrb_5 > 0;
    call {:si_unique_call 416} Tmp_273 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    call {:si_unique_call 417} sdv_KeAcquireSpinLock(0, Tmp_273);
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    havoc OldIrql_2;
    havoc Entry;
    goto L22;

  L22:
    call {:si_unique_call 418} Count, Entry := AvcGetPeerDeviceObjectList_loop_L22(Count, Entry);
    goto L22_last;

  L22_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    Count := Count + 1;
    assume {:nonnull} Entry != 0;
    assume Entry > 0;
    havoc Entry;
    goto anon7_Else_dummy;

  anon7_Else_dummy:
    assume false;
    return;

  anon7_Then:
    Tmp_274 := Count * 4;
    call {:si_unique_call 419} sdv_176 := ExAllocatePoolWithTag(512, Tmp_274, 541283905);
    Objects := sdv_176;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Objects != 0;
    Count := 0;
    havoc Entry;
    goto L34;

  L34:
    call {:si_unique_call 420} Tmp_271, Count, Tmp_272, DevExt_5, sdv_177, Entry, vslice_dummy_var_54 := AvcGetPeerDeviceObjectList_loop_L34(Tmp_271, Count, Tmp_272, DevExt_5, sdv_177, Entry, Objects, vslice_dummy_var_54);
    goto L34_last;

  L34_last:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 421} sdv_177 := sdv_containing_record(Entry, 72);
    DevExt_5 := sdv_177;
    call {:si_unique_call 422} vslice_dummy_var_54 := sdv_ObReferenceObject(0);
    Tmp_271 := Count;
    Count := Count + 1;
    Tmp_272 := Tmp_271;
    assume {:nonnull} DevExt_5 != 0;
    assume DevExt_5 > 0;
    assume {:nonnull} Objects != 0;
    assume Objects > 0;
    assume {:nonnull} Entry != 0;
    assume Entry > 0;
    havoc Entry;
    goto anon8_Else_dummy;

  anon8_Else_dummy:
    assume false;
    return;

  anon8_Then:
    assume {:nonnull} AvcIrb_5 != 0;
    assume AvcIrb_5 > 0;
    assume {:nonnull} AvcIrb_5 != 0;
    assume AvcIrb_5 > 0;
    goto L47;

  L47:
    call {:si_unique_call 423} sdv_KeReleaseSpinLock(0, OldIrql_2);
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_12))] := ntStatus_13;
    call {:si_unique_call 424} sdv_IoCompleteRequest(0, 0);
    Tmp_270 := ntStatus_13;
    return;

  anon9_Then:
    assume {:partition} Objects == 0;
    ntStatus_13 := -1073741670;
    goto L47;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_55: int;

  anon0:
    call {:si_unique_call 425} vslice_dummy_var_55 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "AvcPackSubunitInfo"} AvcPackSubunitInfo(actual_BusExtension: int, actual_Length: int, actual_Buffer: int, actual_BytesUsed: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcPackSubunitInfo"} AvcPackSubunitInfo(actual_BusExtension: int, actual_Length: int, actual_Buffer: int, actual_BytesUsed: int)
{
  var {:pointer} PdoData: int;
  var {:dopa} {:scalar} LocalBytesUsed: int;
  var {:scalar} Offset_1: int;
  var {:pointer} InnerPdoData: int;
  var {:scalar} Tmp_278: int;
  var {:scalar} Tmp_279: int;
  var {:pointer} Tmp_280: int;
  var {:dopa} {:scalar} SubunitId: int;
  var {:scalar} Tmp_281: int;
  var {:scalar} sdv_180: int;
  var {:scalar} ntStatus_14: int;
  var {:scalar} Tmp_282: int;
  var {:pointer} SubunitType: int;
  var {:scalar} Tmp_284: int;
  var {:scalar} Tmp_285: int;
  var {:pointer} Tmp_286: int;
  var {:pointer} Tmp_287: int;
  var {:pointer} BusExtension: int;
  var {:scalar} Length: int;
  var {:pointer} Buffer: int;
  var {:pointer} BytesUsed: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_2596: int;
  var vslice_dummy_var_2597: int;
  var vslice_dummy_var_2598: int;
  var vslice_dummy_var_2599: int;

  anon0:
    call {:si_unique_call 426} LocalBytesUsed := __HAVOC_malloc(4);
    call {:si_unique_call 427} SubunitId := __HAVOC_malloc(4);
    call {:si_unique_call 428} vslice_dummy_var_56 := __HAVOC_malloc(4);
    BusExtension := actual_BusExtension;
    Length := actual_Length;
    Buffer := actual_Buffer;
    BytesUsed := actual_BytesUsed;
    call {:si_unique_call 429} SubunitType := __HAVOC_malloc(128);
    Offset_1 := 0;
    assume {:nonnull} BusExtension != 0;
    assume BusExtension > 0;
    havoc PdoData;
    goto L7;

  L7:
    call {:si_unique_call 430} PdoData, Offset_1, InnerPdoData, Tmp_278, Tmp_279, Tmp_280, Tmp_281, sdv_180, ntStatus_14, Tmp_282, Tmp_284, Tmp_285, Tmp_286, Tmp_287 := AvcPackSubunitInfo_loop_L7(PdoData, LocalBytesUsed, Offset_1, InnerPdoData, Tmp_278, Tmp_279, Tmp_280, SubunitId, Tmp_281, sdv_180, ntStatus_14, Tmp_282, SubunitType, Tmp_284, Tmp_285, Tmp_286, Tmp_287, Length, Buffer);
    goto L7_last;

  L7_last:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    havoc vslice_dummy_var_2596;
    call {:si_unique_call 431} ntStatus_14 := AvcUnpackSubunitAddress(vslice_dummy_var_2596, SubunitType, SubunitId, LocalBytesUsed);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} ntStatus_14 == 0;
    assume {:nonnull} SubunitId != 0;
    assume SubunitId > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    havoc InnerPdoData;
    goto L25;

  L25:
    call {:si_unique_call 432} InnerPdoData, sdv_180 := AvcPackSubunitInfo_loop_L25(PdoData, InnerPdoData, SubunitId, sdv_180);
    goto L25_last;

  L25_last:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} InnerPdoData != 0;
    assume InnerPdoData > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} InnerPdoData != 0;
    assume InnerPdoData > 0;
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    havoc vslice_dummy_var_2597;
    havoc vslice_dummy_var_2598;
    call {:si_unique_call 433} sdv_180 := AvcSubunitPackedTypesEqual(vslice_dummy_var_2597, vslice_dummy_var_2598);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_180 != 0;
    assume {:nonnull} SubunitId != 0;
    assume SubunitId > 0;
    goto L28;

  L28:
    assume {:nonnull} InnerPdoData != 0;
    assume InnerPdoData > 0;
    havoc InnerPdoData;
    goto L28_dummy;

  L28_dummy:
    assume false;
    return;

  anon38_Then:
    assume {:partition} sdv_180 == 0;
    goto L28;

  anon37_Then:
    goto L28;

  anon36_Then:
    Tmp_278 := Offset_1;
    Tmp_287 := Buffer + Tmp_278 * 4;
    Tmp_284 := Length - Offset_1;
    assume {:nonnull} SubunitId != 0;
    assume SubunitId > 0;
    havoc vslice_dummy_var_2599;
    call {:si_unique_call 434} ntStatus_14 := AvcPackSubunitAddress(SubunitType, vslice_dummy_var_2599, Tmp_284, Tmp_287, LocalBytesUsed);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} ntStatus_14 == 0;
    assume {:nonnull} LocalBytesUsed != 0;
    assume LocalBytesUsed > 0;
    havoc Offset_1;
    goto L10;

  L10:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    havoc PdoData;
    goto L10_dummy;

  L10_dummy:
    assume false;
    return;

  anon39_Then:
    assume {:partition} ntStatus_14 != 0;
    goto L10;

  anon35_Then:
    goto L10;

  anon34_Then:
    assume {:partition} ntStatus_14 != 0;
    goto L10;

  anon32_Then:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L42;

  L42:
    assume {:nonnull} SubunitType != 0;
    assume SubunitType > 0;
    Tmp_279 := Offset_1;
    Tmp_280 := Buffer + Tmp_279 * 4;
    Tmp_281 := Length - Offset_1;
    call {:si_unique_call 435} ntStatus_14 := AvcPackSubunitAddress(SubunitType, 0, Tmp_281, Tmp_280, LocalBytesUsed);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} ntStatus_14 != 0;
    goto L51;

  L51:
    assume {:nonnull} SubunitType != 0;
    assume SubunitType > 0;
    Tmp_282 := Offset_1;
    Tmp_286 := Buffer + Tmp_282 * 4;
    Tmp_285 := Length - Offset_1;
    call {:si_unique_call 436} ntStatus_14 := AvcPackSubunitAddress(SubunitType, 0, Tmp_285, Tmp_286, LocalBytesUsed);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} ntStatus_14 == 0;
    assume {:nonnull} LocalBytesUsed != 0;
    assume LocalBytesUsed > 0;
    havoc Offset_1;
    goto L10;

  anon42_Then:
    assume {:partition} ntStatus_14 != 0;
    goto L10;

  anon41_Then:
    assume {:partition} ntStatus_14 == 0;
    assume {:nonnull} LocalBytesUsed != 0;
    assume LocalBytesUsed > 0;
    havoc Offset_1;
    goto L51;

  anon33_Then:
    assume {:nonnull} PdoData != 0;
    assume PdoData > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L42;

  anon40_Then:
    goto L10;

  anon31_Then:
    goto L10;

  anon29_Then:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} BytesUsed != 0;
    assume {:nonnull} BytesUsed != 0;
    assume BytesUsed > 0;
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:partition} BytesUsed == 0;
    goto L1;
}



procedure {:origName "AvcUnpackFCPFrame"} AvcUnpackFCPFrame(actual_Command_4: int, actual_Opcode: int, actual_OperandByteCount: int, actual_Operands_3: int) returns (Tmp_288: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_288 == -1073741811 || Tmp_288 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcUnpackFCPFrame"} AvcUnpackFCPFrame(actual_Command_4: int, actual_Opcode: int, actual_OperandByteCount: int, actual_Operands_3: int) returns (Tmp_288: int)
{
  var {:pointer} Tmp_289: int;
  var {:scalar} Tmp_290: int;
  var {:scalar} Tmp_292: int;
  var {:pointer} Tmp_294: int;
  var {:pointer} Command_4: int;
  var {:pointer} Opcode: int;
  var {:scalar} OperandByteCount: int;
  var {:pointer} Operands_3: int;

  anon0:
    Command_4 := actual_Command_4;
    Opcode := actual_Opcode;
    OperandByteCount := actual_OperandByteCount;
    Operands_3 := actual_Operands_3;
    call {:si_unique_call 437} Tmp_289 := __HAVOC_malloc(2048);
    call {:si_unique_call 438} Tmp_294 := __HAVOC_malloc(2048);
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L8;

  L8:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Opcode != 0;
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    havoc Tmp_292;
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    havoc Tmp_294;
    assume {:nonnull} Opcode != 0;
    assume Opcode > 0;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    goto L9;

  L9:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Operands_3 != 0;
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    havoc OperandByteCount;
    goto L13;

  L13:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    havoc Tmp_290;
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    havoc Tmp_289;
    call {:si_unique_call 439} sdv_RtlCopyMemory(0, 0, OperandByteCount);
    goto L11;

  L11:
    Tmp_288 := 0;
    goto L1;

  L1:
    return;

  anon40_Then:
    goto L13;

  anon39_Then:
    assume {:partition} Operands_3 == 0;
    goto L11;

  anon38_Then:
    assume {:partition} Opcode == 0;
    goto L9;

  anon42_Then:
    Tmp_288 := -1073741811;
    goto L1;

  anon43_Then:
    goto L8;

  anon44_Then:
    goto L8;

  anon45_Then:
    goto L8;

  anon37_Then:
    goto L8;

  anon35_Then:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Command_4 != 0;
    assume Command_4 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    Tmp_288 := -1073741811;
    goto L1;

  anon46_Then:
    goto L8;

  anon47_Then:
    goto L8;

  anon48_Then:
    goto L8;

  anon49_Then:
    goto L8;

  anon50_Then:
    goto L8;

  anon51_Then:
    goto L8;

  anon41_Then:
    goto L8;

  anon36_Then:
    Tmp_288 := -1073741811;
    goto L1;
}



procedure {:origName "AvcFindPeerDeviceObject"} AvcFindPeerDeviceObject(actual_DeviceObject_9: int, actual_Irp_13: int) returns (Tmp_295: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_295 == 0 || Tmp_295 == -1073741823 || Tmp_295 == -1072562032;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcFindPeerDeviceObject"} AvcFindPeerDeviceObject(actual_DeviceObject_9: int, actual_Irp_13: int) returns (Tmp_295: int)
{
  var {:pointer} Tmp_296: int;
  var {:pointer} sdv_184: int;
  var {:pointer} DevExt_6: int;
  var {:pointer} AvcIrb_6: int;
  var {:pointer} sdv_185: int;
  var {:scalar} OldIrql_3: int;
  var {:scalar} ntStatus_15: int;
  var {:pointer} Entry_1: int;
  var {:pointer} BusExtension_1: int;
  var {:pointer} DeviceObject_9: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_57: int;

  anon0:
    DeviceObject_9 := actual_DeviceObject_9;
    Irp_13 := actual_Irp_13;
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    havoc BusExtension_1;
    call {:si_unique_call 440} sdv_184 := sdv_IoGetCurrentIrpStackLocation(Irp_13);
    assume {:nonnull} sdv_184 != 0;
    assume sdv_184 > 0;
    havoc AvcIrb_6;
    ntStatus_15 := -1073741823;
    assume {:nonnull} AvcIrb_6 != 0;
    assume AvcIrb_6 > 0;
    assume {:nonnull} AvcIrb_6 != 0;
    assume AvcIrb_6 > 0;
    assume {:nonnull} BusExtension_1 != 0;
    assume BusExtension_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 441} Tmp_296 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_296 != 0;
    assume Tmp_296 > 0;
    call {:si_unique_call 442} sdv_KeAcquireSpinLock(0, Tmp_296);
    assume {:nonnull} Tmp_296 != 0;
    assume Tmp_296 > 0;
    havoc OldIrql_3;
    havoc Entry_1;
    goto L21;

  L21:
    call {:si_unique_call 443} DevExt_6, sdv_185, ntStatus_15, Entry_1, vslice_dummy_var_57 := AvcFindPeerDeviceObject_loop_L21(DevExt_6, AvcIrb_6, sdv_185, ntStatus_15, Entry_1, vslice_dummy_var_57);
    goto L21_last;

  L21_last:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} ntStatus_15 != 0;
    call {:si_unique_call 444} sdv_185 := sdv_containing_record(Entry_1, 72);
    DevExt_6 := sdv_185;
    assume {:nonnull} AvcIrb_6 != 0;
    assume AvcIrb_6 > 0;
    assume {:nonnull} DevExt_6 != 0;
    assume DevExt_6 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} AvcIrb_6 != 0;
    assume AvcIrb_6 > 0;
    assume {:nonnull} DevExt_6 != 0;
    assume DevExt_6 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 445} vslice_dummy_var_57 := sdv_ObReferenceObject(0);
    assume {:nonnull} AvcIrb_6 != 0;
    assume AvcIrb_6 > 0;
    assume {:nonnull} DevExt_6 != 0;
    assume DevExt_6 > 0;
    ntStatus_15 := 0;
    goto L32;

  L32:
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    havoc Entry_1;
    goto L32_dummy;

  L32_dummy:
    assume false;
    return;

  anon13_Then:
    goto L32;

  anon15_Then:
    goto L32;

  anon12_Then:
    assume {:partition} ntStatus_15 == 0;
    goto L22;

  L22:
    call {:si_unique_call 446} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L39;

  L39:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_13))] := ntStatus_15;
    call {:si_unique_call 447} sdv_IoCompleteRequest(0, 0);
    Tmp_295 := ntStatus_15;
    return;

  anon11_Then:
    goto L22;

  anon14_Then:
    ntStatus_15 := -1072562032;
    goto L39;
}



procedure {:origName "AvcStopSelectedFCPProcessing"} AvcStopSelectedFCPProcessing(actual_DevExt_7: int, actual_FileObject: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcStopSelectedFCPProcessing"} AvcStopSelectedFCPProcessing(actual_DevExt_7: int, actual_FileObject: int)
{
  var {:pointer} Irp_14: int;
  var {:scalar} sdv_187: int;
  var {:scalar} OldIrql_4: int;
  var {:pointer} sdv_189: int;
  var {:pointer} IrpEntry: int;
  var {:pointer} Tmp_297: int;
  var {:scalar} PendingIrpList: int;
  var {:pointer} DevExt_7: int;
  var {:pointer} FileObject: int;
  var vslice_dummy_var_58: int;

  anon0:
    call {:si_unique_call 448} PendingIrpList := __HAVOC_malloc(8);
    call {:si_unique_call 449} vslice_dummy_var_58 := __HAVOC_malloc(4);
    DevExt_7 := actual_DevExt_7;
    FileObject := actual_FileObject;
    call {:si_unique_call 450} InitializeListHead(PendingIrpList);
    call {:si_unique_call 451} Tmp_297 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_297 != 0;
    assume Tmp_297 > 0;
    call {:si_unique_call 452} sdv_KeAcquireSpinLock(0, Tmp_297);
    assume {:nonnull} Tmp_297 != 0;
    assume Tmp_297 > 0;
    havoc OldIrql_4;
    assume {:nonnull} DevExt_7 != 0;
    assume DevExt_7 > 0;
    call {:si_unique_call 453} AvcExtractMatchingIrps_sdv_static_function_7(FileObject, PendingResponseList__BUS_DEVICE_EXTENSION(DevExt_7), PendingIrpList);
    assume {:nonnull} DevExt_7 != 0;
    assume DevExt_7 > 0;
    call {:si_unique_call 454} AvcExtractMatchingIrps_sdv_static_function_7(FileObject, PendingRequestList__BUS_DEVICE_EXTENSION(DevExt_7), PendingIrpList);
    assume {:nonnull} DevExt_7 != 0;
    assume DevExt_7 > 0;
    call {:si_unique_call 455} AvcExtractMatchingIrps_sdv_static_function_7(FileObject, CleanupList__BUS_DEVICE_EXTENSION(DevExt_7), PendingIrpList);
    call {:si_unique_call 456} sdv_KeReleaseSpinLock(0, OldIrql_4);
    goto L23;

  L23:
    call {:si_unique_call 457} Irp_14, sdv_187, sdv_189, IrpEntry := AvcStopSelectedFCPProcessing_loop_L23(Irp_14, sdv_187, sdv_189, IrpEntry, PendingIrpList);
    goto L23_last;

  L23_last:
    call {:si_unique_call 461} sdv_187 := sdv_IsListEmpty(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_187 == 0;
    call {:si_unique_call 458} IrpEntry := RemoveHeadList(PendingIrpList);
    call {:si_unique_call 459} sdv_189 := sdv_containing_record(IrpEntry, 88);
    Irp_14 := sdv_189;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_14))] := -1073741536;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    call {:si_unique_call 460} sdv_IoCompleteRequest(0, 0);
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} sdv_187 != 0;
    return;
}



procedure {:origName "AvcSubunitAddrsEqual"} AvcSubunitAddrsEqual(actual_SubunitAddr1: int, actual_SubunitAddr2: int) returns (Tmp_299: int);
  free ensures {:va_keep} Tmp_299 == 1 || Tmp_299 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcSubunitAddrsEqual"} AvcSubunitAddrsEqual(actual_SubunitAddr1: int, actual_SubunitAddr2: int) returns (Tmp_299: int)
{
  var {:scalar} Tmp_300: int;
  var {:scalar} Tmp_301: int;
  var {:scalar} Tmp_302: int;
  var {:scalar} Tmp_303: int;
  var {:scalar} Tmp_304: int;
  var {:scalar} Tmp_305: int;
  var {:scalar} Tmp_306: int;
  var {:scalar} Tmp_307: int;
  var {:scalar} Tmp_308: int;
  var {:scalar} idx_5: int;
  var {:pointer} SubunitAddr1: int;
  var {:pointer} SubunitAddr2: int;

  anon0:
    SubunitAddr1 := actual_SubunitAddr1;
    SubunitAddr2 := actual_SubunitAddr2;
    idx_5 := 1;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SubunitAddr1 == SubunitAddr2;
    Tmp_299 := 1;
    goto L1;

  L1:
    return;

  anon29_Then:
    assume {:partition} SubunitAddr1 != SubunitAddr2;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SubunitAddr1 != 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} SubunitAddr2 != 0;
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    assume {:nonnull} SubunitAddr2 != 0;
    assume SubunitAddr2 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    Tmp_299 := 0;
    goto L1;

  anon27_Then:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L14;

  L14:
    call {:si_unique_call 462} Tmp_307, Tmp_308, idx_5 := AvcSubunitAddrsEqual_loop_L14(Tmp_307, Tmp_308, idx_5, SubunitAddr1, SubunitAddr2);
    goto L14_last;

  L14_last:
    Tmp_308 := idx_5;
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    Tmp_307 := idx_5;
    assume {:nonnull} SubunitAddr2 != 0;
    assume SubunitAddr2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    Tmp_299 := 0;
    goto L1;

  anon31_Then:
    idx_5 := idx_5 + 1;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    assume false;
    return;

  anon30_Then:
    Tmp_300 := idx_5;
    Tmp_306 := idx_5;
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    assume {:nonnull} SubunitAddr2 != 0;
    assume SubunitAddr2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_299 := 0;
    goto L1;

  anon32_Then:
    idx_5 := idx_5 + 1;
    goto L13;

  L13:
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    havoc Tmp_302;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Tmp_302 == 5;
    goto L23;

  L23:
    call {:si_unique_call 463} Tmp_301, Tmp_303, idx_5 := AvcSubunitAddrsEqual_loop_L23(Tmp_301, Tmp_303, idx_5, SubunitAddr1, SubunitAddr2);
    goto L23_last;

  L23_last:
    Tmp_303 := idx_5;
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    Tmp_301 := idx_5;
    assume {:nonnull} SubunitAddr2 != 0;
    assume SubunitAddr2 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    Tmp_299 := 0;
    goto L1;

  anon35_Then:
    idx_5 := idx_5 + 1;
    goto anon35_Then_dummy;

  anon35_Then_dummy:
    assume false;
    return;

  anon34_Then:
    Tmp_305 := idx_5;
    Tmp_304 := idx_5;
    assume {:nonnull} SubunitAddr1 != 0;
    assume SubunitAddr1 > 0;
    assume {:nonnull} SubunitAddr2 != 0;
    assume SubunitAddr2 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_299 := 0;
    goto L1;

  anon36_Then:
    goto L22;

  L22:
    Tmp_299 := 1;
    goto L1;

  anon33_Then:
    assume {:partition} Tmp_302 != 5;
    goto L22;

  anon28_Then:
    goto L13;

  anon26_Then:
    assume {:partition} SubunitAddr2 == 0;
    goto L8;

  L8:
    Tmp_299 := 0;
    goto L1;

  anon25_Then:
    assume {:partition} SubunitAddr1 == 0;
    goto L8;
}



procedure {:origName "AvcProcessCommand"} AvcProcessCommand(actual_DeviceObject_10: int, actual_Irp_15: int) returns (Tmp_310: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcProcessCommand"} AvcProcessCommand(actual_DeviceObject_10: int, actual_Irp_15: int) returns (Tmp_310: int)
{
  var {:pointer} SubunitAddr_5: int;
  var {:scalar} Tmp_311: int;
  var {:scalar} Status_4: int;
  var {:pointer} IrpStack_3: int;
  var {:pointer} DevExt_8: int;
  var {:pointer} sdv_195: int;
  var {:pointer} Tmp_312: int;
  var {:pointer} Command_5: int;
  var {:pointer} CmdIrb_1: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_2600: int;
  var vslice_dummy_var_2601: int;
  var vslice_dummy_var_2602: int;
  var vslice_dummy_var_2603: int;
  var vslice_dummy_var_2604: int;
  var vslice_dummy_var_2605: int;
  var vslice_dummy_var_2606: int;
  var vslice_dummy_var_2607: int;
  var vslice_dummy_var_2608: int;
  var vslice_dummy_var_2609: int;

  anon0:
    call {:si_unique_call 464} Command_5 := __HAVOC_malloc(4);
    DeviceObject_10 := actual_DeviceObject_10;
    Irp_15 := actual_Irp_15;
    assume {:nonnull} DeviceObject_10 != 0;
    assume DeviceObject_10 > 0;
    havoc DevExt_8;
    call {:si_unique_call 465} IrpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_15);
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    havoc CmdIrb_1;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto L17;

  L17:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    havoc SubunitAddr_5;
    goto L20;

  L20:
    call {:si_unique_call 466} Status_4 := AvcAllocateSubunitCommandContext(DevExt_8, SubunitAddr_5, Command_5);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Status_4 != 0;
    goto L29;

  L29:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Irp_15 != 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_15))] := Status_4;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    assume {:nonnull} IrpStack_3 != 0;
    assume IrpStack_3 > 0;
    call {:si_unique_call 467} sdv_IoCompleteRequest(0, 0);
    goto L37;

  L37:
    Tmp_310 := Status_4;
    return;

  anon39_Then:
    assume {:partition} Irp_15 == 0;
    Status_4 := 259;
    goto L37;

  anon38_Then:
    assume {:partition} Status_4 == 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc vslice_dummy_var_2600;
    havoc vslice_dummy_var_2601;
    havoc vslice_dummy_var_2602;
    havoc vslice_dummy_var_2603;
    call {:si_unique_call 468} Status_4 := AvcPackCommandFrame(vslice_dummy_var_2600, vslice_dummy_var_2601, vslice_dummy_var_2602, vslice_dummy_var_2603);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Status_4 != 0;
    goto L43;

  L43:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc vslice_dummy_var_2604;
    call {:si_unique_call 469} AvcFreeCommandContext(vslice_dummy_var_2604);
    goto L29;

  anon40_Then:
    assume {:partition} Status_4 == 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc vslice_dummy_var_2605;
    call {:si_unique_call 470} Status_4 := AvcEnqueueFCPIrp(vslice_dummy_var_2605, Irp_15);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} 259 == Status_4;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    call {:si_unique_call 471} sdv_195 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    havoc Tmp_312;
    assume {:nonnull} Tmp_312 != 0;
    assume Tmp_312 > 0;
    havoc Tmp_311;
    call {:si_unique_call 472} sdv_RtlCopyMemory(0, 0, Tmp_311);
    goto L51;

  L51:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Status_4 >= 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto L67;

  L67:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto L69;

  L69:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc vslice_dummy_var_2606;
    call {:si_unique_call 473} Status_4 := AvcCommand_sdv_static_function_7(DevExt_8, vslice_dummy_var_2606);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Status_4 == 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc vslice_dummy_var_2607;
    havoc vslice_dummy_var_2608;
    call {:si_unique_call 474} Status_4 := AvcUnpackFCPFrame(vslice_dummy_var_2607, Opcode__AVC_COMMAND_IRB(CmdIrb_1), 509, vslice_dummy_var_2608);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Status_4 == 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    assume {:nonnull} CmdIrb_1 != 0;
    assume CmdIrb_1 > 0;
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    goto L63;

  L63:
    assume {:nonnull} Command_5 != 0;
    assume Command_5 > 0;
    havoc vslice_dummy_var_2609;
    call {:si_unique_call 475} Irp_15 := AvcDequeueFCPIrp(vslice_dummy_var_2609);
    goto L43;

  anon47_Then:
    assume {:partition} Status_4 != 0;
    goto L63;

  anon46_Then:
    assume {:partition} Status_4 != 0;
    goto L63;

  anon45_Then:
    goto L69;

  anon44_Then:
    goto L67;

  anon42_Then:
    assume {:partition} 0 > Status_4;
    goto L63;

  anon54_Then:
    Status_4 := -1073741670;
    goto L51;

  anon43_Then:
    goto L51;

  anon53_Then:
    goto L51;

  anon41_Then:
    assume {:partition} 259 != Status_4;
    goto L43;

  anon37_Then:
    assume {:nonnull} DevExt_8 != 0;
    assume DevExt_8 > 0;
    SubunitAddr_5 := UnitAddr__BUS_DEVICE_EXTENSION(DevExt_8);
    goto L20;

  anon48_Then:
    Status_4 := -1073741811;
    goto L29;

  anon49_Then:
    goto L17;

  anon50_Then:
    goto L17;

  anon51_Then:
    goto L17;

  anon52_Then:
    goto L17;
}



procedure {:origName "AvcPrepareForRequestCallback"} AvcPrepareForRequestCallback(actual_DevExt_9: int, actual_Command_6: int) returns (Tmp_314: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.PendingReturned__IRP, irp_status, thread_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_314 == 0 || Tmp_314 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcPrepareForRequestCallback"} AvcPrepareForRequestCallback(actual_DevExt_9: int, actual_Command_6: int) returns (Tmp_314: int)
{
  var {:pointer} Tmp_315: int;
  var {:pointer} Tmp_316: int;
  var {:scalar} Status_5: int;
  var {:scalar} OldIrql_5: int;
  var {:pointer} NextIrpStack_2: int;
  var {:scalar} NeedIrp_1: int;
  var {:pointer} Tmp_317: int;
  var {:pointer} DevExt_9: int;
  var {:pointer} Command_6: int;
  var boogieTmp: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_2610: int;
  var vslice_dummy_var_2611: int;
  var vslice_dummy_var_2612: int;
  var vslice_dummy_var_2613: int;
  var vslice_dummy_var_2614: int;

  anon0:
    DevExt_9 := actual_DevExt_9;
    Command_6 := actual_Command_6;
    Status_5 := 0;
    NeedIrp_1 := 0;
    call {:si_unique_call 476} Tmp_315 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    call {:si_unique_call 477} sdv_KeAcquireSpinLock(0, Tmp_315);
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    havoc OldIrql_5;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Command_6 != 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    call {:si_unique_call 478} vslice_dummy_var_59 := sdv_InsertTailList(PendingRequestList__BUS_DEVICE_EXTENSION(DevExt_9), Command_6);
    goto L12;

  L12:
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L19;

  L19:
    call {:si_unique_call 479} sdv_KeReleaseSpinLock(0, OldIrql_5);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} NeedIrp_1 != 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    havoc vslice_dummy_var_2610;
    call {:si_unique_call 480} NextIrpStack_2 := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_2610);
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_2)] := 15;
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    assume {:nonnull} NextIrpStack_2 != 0;
    assume NextIrpStack_2 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    havoc Tmp_316;
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_316))] := -1073741637;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    havoc vslice_dummy_var_2611;
    call {:si_unique_call 481} sdv_IoSetCompletionRoutine(vslice_dummy_var_2611, li2bplFunctionConstant847, DevExt_9, 1, 1, 1);
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    havoc vslice_dummy_var_2612;
    havoc vslice_dummy_var_2613;
    call {:si_unique_call 482} vslice_dummy_var_60 := sdv_IoCallDriver#1(vslice_dummy_var_2612, vslice_dummy_var_2613);
    goto L23;

  L23:
    Tmp_314 := Status_5;
    return;

  anon14_Then:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Command_6 != 0;
    call {:si_unique_call 483} Tmp_315 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    call {:si_unique_call 484} sdv_KeAcquireSpinLock(0, Tmp_315);
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    havoc OldIrql_5;
    call {:si_unique_call 485} vslice_dummy_var_61 := sdv_RemoveEntryList(0);
    call {:si_unique_call 486} InitializeListHead(Command_6);
    call {:si_unique_call 487} sdv_KeReleaseSpinLock(0, OldIrql_5);
    goto L44;

  L44:
    Status_5 := -1073741670;
    goto L23;

  anon15_Then:
    assume {:partition} Command_6 == 0;
    goto L44;

  anon13_Then:
    assume {:partition} NeedIrp_1 == 0;
    goto L23;

  anon12_Then:
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    havoc Tmp_317;
    assume {:nonnull} DevExt_9 != 0;
    assume DevExt_9 > 0;
    assume {:nonnull} Tmp_317 != 0;
    assume Tmp_317 > 0;
    havoc vslice_dummy_var_2614;
    call {:si_unique_call 488} boogieTmp := IoAllocateIrp(vslice_dummy_var_2614, 0);
    NeedIrp_1 := 1;
    goto L19;

  anon11_Then:
    assume {:partition} Command_6 == 0;
    goto L12;
}



procedure {:origName "AvcPendingIrpCompletion"} AvcPendingIrpCompletion(actual_Command_7: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcPendingIrpCompletion"} AvcPendingIrpCompletion(actual_Command_7: int)
{
  var {:pointer} Irp_16: int;
  var {:scalar} Status_6: int;
  var {:pointer} IrpStack_4: int;
  var {:pointer} CmdIrb_2: int;
  var {:pointer} Command_7: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_2615: int;

  anon0:
    call {:si_unique_call 489} vslice_dummy_var_62 := __HAVOC_malloc(4);
    Command_7 := actual_Command_7;
    call {:si_unique_call 490} Irp_16 := AvcDequeueFCPIrp(Command_7);
    goto L8;

  L8:
    call {:si_unique_call 491} Irp_16, Status_6, IrpStack_4, CmdIrb_2 := AvcPendingIrpCompletion_loop_L8(Irp_16, Status_6, IrpStack_4, CmdIrb_2, Command_7);
    goto L8_last;

  L8_last:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Irp_16 != 0;
    call {:si_unique_call 492} IrpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} IrpStack_4 != 0;
    assume IrpStack_4 > 0;
    havoc CmdIrb_2;
    assume {:nonnull} Command_7 != 0;
    assume Command_7 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Command_7 != 0;
    assume Command_7 > 0;
    havoc Status_6;
    goto L23;

  L23:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_16))] := Status_6;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 493} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 494} Irp_16 := AvcDequeueFCPIrp(Command_7);
    goto L23_dummy;

  L23_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    havoc vslice_dummy_var_2615;
    call {:si_unique_call 495} Status_6 := AvcUnpackFCPFrame(Command_7, Opcode__AVC_COMMAND_IRB(CmdIrb_2), 509, vslice_dummy_var_2615);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_6 == 0;
    assume {:nonnull} Command_7 != 0;
    assume Command_7 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Command_7 != 0;
    assume Command_7 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_7 != 0;
    assume Command_7 > 0;
    goto L35;

  L35:
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_7 != 0;
    assume Command_7 > 0;
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_7 != 0;
    assume Command_7 > 0;
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_7 != 0;
    assume Command_7 > 0;
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_7 != 0;
    assume Command_7 > 0;
    goto L23;

  anon14_Then:
    goto L35;

  anon13_Then:
    assume {:nonnull} CmdIrb_2 != 0;
    assume CmdIrb_2 > 0;
    assume {:nonnull} Command_7 != 0;
    assume Command_7 > 0;
    goto L35;

  anon12_Then:
    assume {:partition} Status_6 != 0;
    goto L23;

  anon11_Then:
    assume {:partition} Irp_16 == 0;
    return;
}



procedure {:origName "AvcFreeCommandContext"} AvcFreeCommandContext(actual_Command_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcFreeCommandContext"} AvcFreeCommandContext(actual_Command_8: int)
{
  var {:scalar} sdv_206: int;
  var {:pointer} sdv_207: int;
  var {:pointer} CallbackLink_1: int;
  var {:pointer} Command_8: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_2616: int;

  anon0:
    call {:si_unique_call 496} vslice_dummy_var_63 := __HAVOC_malloc(4);
    Command_8 := actual_Command_8;
    goto L3;

  L3:
    call {:si_unique_call 497} sdv_206, sdv_207, CallbackLink_1 := AvcFreeCommandContext_loop_L3(sdv_206, sdv_207, CallbackLink_1, Command_8);
    goto L3_last;

  L3_last:
    call {:si_unique_call 502} sdv_206 := sdv_IsListEmpty(0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} sdv_206 == 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    call {:si_unique_call 498} sdv_207 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_8));
    CallbackLink_1 := sdv_207;
    call {:si_unique_call 499} ExFreeToNPagedLookasideList(AvcCommandLinkPool, CallbackLink_1);
    goto anon5_Else_dummy;

  anon5_Else_dummy:
    assume false;
    return;

  anon5_Then:
    assume {:partition} sdv_206 != 0;
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Command_8 != 0;
    assume Command_8 > 0;
    havoc vslice_dummy_var_2616;
    call {:si_unique_call 500} ExFreeToNPagedLookasideList(AvcAlternateOpcodePool, vslice_dummy_var_2616);
    goto L9;

  L9:
    call {:si_unique_call 501} ExFreeToNPagedLookasideList(AvcCommandContextPool, Command_8);
    return;

  anon6_Then:
    goto L9;
}



procedure {:origName "AvcPackSubunitAddress"} AvcPackSubunitAddress(actual_SubunitType_1: int, actual_SubunitID: int, actual_Length_1: int, actual_Buffer_1: int, actual_BytesUsed_1: int) returns (Tmp_322: int);
  free ensures {:va_keep} Tmp_322 == 0 || Tmp_322 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcPackSubunitAddress"} AvcPackSubunitAddress(actual_SubunitType_1: int, actual_SubunitID: int, actual_Length_1: int, actual_Buffer_1: int, actual_BytesUsed_1: int) returns (Tmp_322: int)
{
  var {:scalar} Tmp_324: int;
  var {:scalar} Tmp_325: int;
  var {:scalar} Tmp_326: int;
  var {:scalar} Status_7: int;
  var {:scalar} Tmp_327: int;
  var {:scalar} Tmp_328: int;
  var {:scalar} Tmp_329: int;
  var {:scalar} idx_6: int;
  var {:scalar} Tmp_330: int;
  var {:pointer} SubunitType_1: int;
  var {:scalar} SubunitID: int;
  var {:scalar} Length_1: int;
  var {:pointer} Buffer_1: int;
  var {:pointer} BytesUsed_1: int;
  var boogieTmp: int;

  anon0:
    SubunitType_1 := actual_SubunitType_1;
    SubunitID := actual_SubunitID;
    Length_1 := actual_Length_1;
    Buffer_1 := actual_Buffer_1;
    BytesUsed_1 := actual_BytesUsed_1;
    Status_7 := 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} SubunitType_1 != 0;
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Length_1 >= 1;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} BytesUsed_1 != 0;
    assume {:nonnull} BytesUsed_1 != 0;
    assume BytesUsed_1 > 0;
    goto L15;

  L15:
    Tmp_322 := 0;
    goto L1;

  L1:
    return;

  anon59_Then:
    assume {:partition} BytesUsed_1 == 0;
    goto L15;

  anon44_Then:
    assume {:partition} 1 > Length_1;
    Tmp_322 := -1073741811;
    goto L1;

  anon42_Then:
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Tmp_322 := -1073741811;
    goto L1;

  anon43_Then:
    idx_6 := 0;
    goto L19;

  L19:
    call {:si_unique_call 503} Tmp_324, Tmp_327, Tmp_328, idx_6, boogieTmp := AvcPackSubunitAddress_loop_L19(Tmp_324, Tmp_327, Tmp_328, idx_6, SubunitType_1, Length_1, Buffer_1, boogieTmp);
    goto L19_last;

  L19_last:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Length_1 > idx_6;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} idx_6 != 0;
    Tmp_324 := idx_6;
    Tmp_327 := idx_6;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto L24;

  L24:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} idx_6 != 0;
    goto L26;

  L26:
    Tmp_328 := idx_6;
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L27;

  L27:
    idx_6 := idx_6 + 1;
    goto L27_dummy;

  L27_dummy:
    assume false;
    return;

  anon60_Then:
    goto L20;

  L20:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Length_1 > idx_6;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} 5 > SubunitID;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    goto L33;

  L33:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} SubunitID > 4;
    Tmp_329 := SubunitID - 4;
    goto L36;

  L36:
    SubunitID := Tmp_329;
    idx_6 := idx_6 + 1;
    goto L38;

  L38:
    call {:si_unique_call 504} Tmp_325, Tmp_326, idx_6, Tmp_330, SubunitID := AvcPackSubunitAddress_loop_L38(Tmp_325, Tmp_326, idx_6, Tmp_330, SubunitID, Length_1, Buffer_1);
    goto L38_last;

  L38_last:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Length_1 > idx_6;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} SubunitID != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} 255 > SubunitID;
    Tmp_325 := idx_6;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    goto L44;

  L44:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} SubunitID > 254;
    Tmp_326 := SubunitID - 254;
    goto L47;

  L47:
    SubunitID := Tmp_326;
    idx_6 := idx_6 + 1;
    goto L47_dummy;

  L47_dummy:
    assume false;
    return;

  anon56_Then:
    assume {:partition} 254 >= SubunitID;
    Tmp_326 := 0;
    goto L47;

  anon55_Then:
    assume {:partition} SubunitID >= 255;
    Tmp_330 := idx_6;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    goto L44;

  anon54_Then:
    assume {:partition} SubunitID == 0;
    goto L39;

  L39:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} SubunitID != 0;
    Status_7 := -1073741811;
    goto L51;

  L51:
    Tmp_322 := Status_7;
    goto L1;

  anon53_Then:
    assume {:partition} SubunitID == 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BytesUsed_1 != 0;
    assume {:nonnull} BytesUsed_1 != 0;
    assume BytesUsed_1 > 0;
    goto L51;

  anon57_Then:
    assume {:partition} BytesUsed_1 == 0;
    goto L51;

  anon52_Then:
    assume {:partition} idx_6 >= Length_1;
    goto L39;

  anon51_Then:
    assume {:partition} 4 >= SubunitID;
    Tmp_329 := 0;
    goto L36;

  anon50_Then:
    assume {:partition} SubunitID >= 5;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    goto L33;

  anon46_Then:
    assume {:partition} idx_6 >= Length_1;
    Status_7 := -1073741811;
    goto L51;

  anon48_Then:
    assume {:partition} idx_6 == 0;
    assume {:nonnull} SubunitType_1 != 0;
    assume SubunitType_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L27;

  anon49_Then:
    goto L26;

  anon47_Then:
    assume {:partition} idx_6 == 0;
    assume {:nonnull} Buffer_1 != 0;
    assume Buffer_1 > 0;
    call {:si_unique_call 505} boogieTmp := corral_nondet();
    goto L24;

  anon45_Then:
    assume {:partition} idx_6 >= Length_1;
    goto L20;

  anon41_Then:
    goto L7;

  L7:
    Tmp_322 := -1073741811;
    goto L1;

  anon58_Then:
    assume {:partition} SubunitType_1 == 0;
    goto L7;
}



procedure {:origName "AvcAllocateSubunitCommandContext"} AvcAllocateSubunitCommandContext(actual_DevExt_10: int, actual_SubunitAddr_6: int, actual_CommandRetval: int) returns (Tmp_331: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_331 == -1073741811 || Tmp_331 == 0 || Tmp_331 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcAllocateSubunitCommandContext"} AvcAllocateSubunitCommandContext(actual_DevExt_10: int, actual_SubunitAddr_6: int, actual_CommandRetval: int) returns (Tmp_331: int)
{
  var {:dopa} {:scalar} SubunitAddrLen: int;
  var {:pointer} Tmp_333: int;
  var {:scalar} Status_8: int;
  var {:pointer} Tmp_334: int;
  var {:pointer} sdv_209: int;
  var {:pointer} Command_9: int;
  var {:pointer} DevExt_10: int;
  var {:pointer} SubunitAddr_6: int;
  var {:pointer} CommandRetval: int;
  var vslice_dummy_var_2617: int;
  var vslice_dummy_var_2618: int;

  anon0:
    call {:si_unique_call 506} SubunitAddrLen := __HAVOC_malloc(4);
    DevExt_10 := actual_DevExt_10;
    SubunitAddr_6 := actual_SubunitAddr_6;
    CommandRetval := actual_CommandRetval;
    call {:si_unique_call 507} Tmp_333 := __HAVOC_malloc(2048);
    call {:si_unique_call 508} Tmp_334 := __HAVOC_malloc(2048);
    assume {:nonnull} SubunitAddrLen != 0;
    assume SubunitAddrLen > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} DevExt_10 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} SubunitAddr_6 != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} CommandRetval != 0;
    call {:si_unique_call 509} Status_8 := AvcValidateSubunitAddress(SubunitAddr_6, 32, SubunitAddrLen);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Status_8 != 0;
    Tmp_331 := -1073741811;
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:partition} Status_8 == 0;
    call {:si_unique_call 510} sdv_209 := sdv_ExAllocateFromNPagedLookasideList(0);
    Command_9 := sdv_209;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Command_9 != 0;
    call {:si_unique_call 511} sdv_RtlZeroMemory(0, 672);
    call {:si_unique_call 512} InitializeListHead(Command_9);
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    call {:si_unique_call 513} InitializeListHead(PendingIrpList__AVC_COMMAND_CONTEXT(Command_9));
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    call {:si_unique_call 514} InitializeListHead(CallbackChain__AVC_COMMAND_CONTEXT(Command_9));
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    assume {:nonnull} SubunitAddrLen != 0;
    assume SubunitAddrLen > 0;
    havoc vslice_dummy_var_2617;
    call {:si_unique_call 515} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2617);
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    havoc Tmp_333;
    assume {:nonnull} SubunitAddrLen != 0;
    assume SubunitAddrLen > 0;
    havoc vslice_dummy_var_2618;
    call {:si_unique_call 516} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2618);
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    assume {:nonnull} SubunitAddrLen != 0;
    assume SubunitAddrLen > 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    havoc Tmp_334;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    assume {:nonnull} Command_9 != 0;
    assume Command_9 > 0;
    assume {:nonnull} CommandRetval != 0;
    assume CommandRetval > 0;
    Tmp_331 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} Command_9 == 0;
    Tmp_331 := -1073741670;
    goto L1;

  anon13_Then:
    assume {:partition} CommandRetval == 0;
    goto L11;

  L11:
    Tmp_331 := -1073741811;
    goto L1;

  anon12_Then:
    assume {:partition} SubunitAddr_6 == 0;
    goto L11;

  anon11_Then:
    assume {:partition} DevExt_10 == 0;
    goto L11;
}



procedure {:origName "AvcValidateSubunitAddress"} AvcValidateSubunitAddress(actual_Buffer_2: int, actual_cbIn: int, actual_BytesUsed_2: int) returns (Tmp_336: int);
  free ensures {:va_keep} Tmp_336 == 0 || Tmp_336 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcValidateSubunitAddress"} AvcValidateSubunitAddress(actual_Buffer_2: int, actual_cbIn: int, actual_BytesUsed_2: int) returns (Tmp_336: int)
{
  var {:scalar} Tmp_337: int;
  var {:scalar} ntStatus_16: int;
  var {:scalar} Tmp_339: int;
  var {:scalar} Tmp_340: int;
  var {:scalar} idx_7: int;
  var {:scalar} Tmp_341: int;
  var {:scalar} Tmp_342: int;
  var {:pointer} Buffer_2: int;
  var {:scalar} cbIn: int;
  var {:pointer} BytesUsed_2: int;

  anon0:
    Buffer_2 := actual_Buffer_2;
    cbIn := actual_cbIn;
    BytesUsed_2 := actual_BytesUsed_2;
    idx_7 := 1;
    ntStatus_16 := 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BytesUsed_2 != 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} cbIn != 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L19;

  L19:
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L26;

  L26:
    assume {:nonnull} BytesUsed_2 != 0;
    assume BytesUsed_2 > 0;
    Tmp_336 := ntStatus_16;
    goto L1;

  L1:
    return;

  anon47_Then:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L26;

  anon42_Then:
    ntStatus_16 := -1073741811;
    goto L26;

  anon48_Then:
    ntStatus_16 := -1073741811;
    goto L26;

  anon40_Then:
    goto L21;

  L21:
    call {:si_unique_call 517} idx_7, Tmp_342 := AvcValidateSubunitAddress_loop_L21(idx_7, Tmp_342, Buffer_2, cbIn);
    goto L21_last;

  L21_last:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} cbIn > idx_7;
    Tmp_342 := idx_7;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    idx_7 := idx_7 + 1;
    goto anon50_Else_dummy;

  anon50_Else_dummy:
    assume false;
    return;

  anon50_Then:
    goto L29;

  L29:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} cbIn > idx_7;
    Tmp_337 := idx_7;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    idx_7 := idx_7 + 1;
    goto L26;

  anon51_Then:
    goto L32;

  L32:
    ntStatus_16 := -1073741811;
    goto L26;

  anon43_Then:
    assume {:partition} idx_7 >= cbIn;
    goto L32;

  anon41_Then:
    assume {:partition} idx_7 >= cbIn;
    goto L29;

  anon45_Then:
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    havoc Tmp_341;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Tmp_341 == 7;
    goto L19;

  anon54_Then:
    assume {:partition} Tmp_341 != 7;
    ntStatus_16 := -1073741811;
    goto L19;

  anon46_Then:
    goto L14;

  L14:
    call {:si_unique_call 518} Tmp_340, idx_7 := AvcValidateSubunitAddress_loop_L14(Tmp_340, idx_7, Buffer_2, cbIn);
    goto L14_last;

  L14_last:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} cbIn > idx_7;
    Tmp_340 := idx_7;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    idx_7 := idx_7 + 1;
    goto anon52_Else_dummy;

  anon52_Else_dummy:
    assume false;
    return;

  anon52_Then:
    goto L36;

  L36:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} cbIn > idx_7;
    Tmp_339 := idx_7;
    assume {:nonnull} Buffer_2 != 0;
    assume Buffer_2 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    idx_7 := idx_7 + 1;
    goto L19;

  anon53_Then:
    goto L39;

  L39:
    ntStatus_16 := -1073741811;
    goto L19;

  anon44_Then:
    assume {:partition} idx_7 >= cbIn;
    goto L39;

  anon39_Then:
    assume {:partition} idx_7 >= cbIn;
    goto L36;

  anon38_Then:
    ntStatus_16 := -1073741811;
    goto L19;

  anon37_Then:
    assume {:partition} cbIn == 0;
    assume {:nonnull} BytesUsed_2 != 0;
    assume BytesUsed_2 > 0;
    Tmp_336 := -1073741811;
    goto L1;

  anon49_Then:
    assume {:partition} BytesUsed_2 == 0;
    Tmp_336 := -1073741811;
    goto L1;
}



procedure {:origName "AvcAllocateUnitCommandContext"} AvcAllocateUnitCommandContext(actual_DevExt_12: int, actual_CommandRetval_1: int) returns (Tmp_349: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_349 == -1073741811 || Tmp_349 == 0 || Tmp_349 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcAllocateUnitCommandContext"} AvcAllocateUnitCommandContext(actual_DevExt_12: int, actual_CommandRetval_1: int) returns (Tmp_349: int)
{
  var {:scalar} Status_10: int;
  var {:pointer} DevExt_12: int;
  var {:pointer} CommandRetval_1: int;

  anon0:
    DevExt_12 := actual_DevExt_12;
    CommandRetval_1 := actual_CommandRetval_1;
    call {:si_unique_call 519} sdv_do_paged_code_check();
    assume {:nonnull} DevExt_12 != 0;
    assume DevExt_12 > 0;
    call {:si_unique_call 520} Status_10 := AvcAllocateSubunitCommandContext(DevExt_12, UnitAddr__BUS_DEVICE_EXTENSION(DevExt_12), CommandRetval_1);
    Tmp_349 := Status_10;
    return;
}



procedure {:origName "AvcCommand_sdv_static_function_7"} AvcCommand_sdv_static_function_7(actual_DevExt_13: int, actual_Command_11: int) returns (Tmp_351: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcCommand_sdv_static_function_7"} AvcCommand_sdv_static_function_7(actual_DevExt_13: int, actual_Command_11: int) returns (Tmp_351: int)
{
  var {:scalar} CommandType_1: int;
  var {:scalar} Retries: int;
  var {:pointer} Tmp_352: int;
  var {:scalar} OldIrql_7: int;
  var {:pointer} Irp_18: int;
  var {:scalar} WaitForEvent: int;
  var {:pointer} sdv_225: int;
  var {:scalar} Status_11: int;
  var {:pointer} Tmp_353: int;
  var {:scalar} Tmp_354: int;
  var {:pointer} Tmp_355: int;
  var {:pointer} Tmp_356: int;
  var {:scalar} Padding_1: int;
  var {:scalar} Event_3: int;
  var {:pointer} sdv_227: int;
  var {:scalar} sdv_228: int;
  var {:scalar} OldIrql_8: int;
  var {:scalar} sdv_230: int;
  var {:pointer} NextIrpStack_4: int;
  var {:scalar} sdv_235: int;
  var {:pointer} CallbackLink_2: int;
  var {:pointer} Tmp_357: int;
  var {:scalar} WaitForAbort: int;
  var {:scalar} InvalidGenLimit: int;
  var {:scalar} tmDelay: int;
  var {:scalar} Tmp_358: int;
  var {:scalar} Tmp_359: int;
  var {:pointer} DevExt_13: int;
  var {:pointer} Command_11: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_2619: int;
  var vslice_dummy_var_2620: int;
  var vslice_dummy_var_2621: int;

  anon0:
    call {:si_unique_call 521} Event_3 := __HAVOC_malloc(156);
    call {:si_unique_call 522} tmDelay := __HAVOC_malloc(20);
    DevExt_13 := actual_DevExt_13;
    Command_11 := actual_Command_11;
    call {:si_unique_call 523} Tmp_352 := __HAVOC_malloc(2048);
    call {:si_unique_call 524} Tmp_355 := __HAVOC_malloc(2048);
    call {:si_unique_call 525} Tmp_357 := __HAVOC_malloc(2048);
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc CommandType_1;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    call {:si_unique_call 526} sdv_225 := sdv_ExAllocateFromNPagedLookasideList(0);
    CallbackLink_2 := sdv_225;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} CallbackLink_2 != 0;
    assume {:nonnull} CallbackLink_2 != 0;
    assume CallbackLink_2 > 0;
    call {:si_unique_call 527} KeInitializeEvent(Event_3, 1, 0);
    assume {:nonnull} CallbackLink_2 != 0;
    assume CallbackLink_2 > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    call {:si_unique_call 528} InsertHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_11), CallbackLink_2);
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Tmp_355;
    assume {:nonnull} Tmp_355 != 0;
    assume Tmp_355 > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Tmp_359;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Tmp_352;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Padding_1;
    goto L32;

  L32:
    call {:si_unique_call 529} Tmp_354, Padding_1, Tmp_357, Tmp_358 := AvcCommand_sdv_static_function_7_loop_L32(Tmp_354, Padding_1, Tmp_357, Tmp_358, Command_11);
    goto L32_last;

  L32_last:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} INTMOD(Padding_1, 4) != 0;
    Tmp_358 := Padding_1;
    Padding_1 := Padding_1 + 1;
    Tmp_354 := Tmp_358;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Tmp_357;
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    goto anon41_Else_dummy;

  anon41_Else_dummy:
    assume false;
    return;

  anon41_Then:
    assume {:partition} INTMOD(Padding_1, 4) == 0;
    assume {:nonnull} DevExt_13 != 0;
    assume DevExt_13 > 0;
    havoc Tmp_353;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    havoc vslice_dummy_var_2619;
    call {:si_unique_call 530} Irp_18 := IoAllocateIrp(vslice_dummy_var_2619, 0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Irp_18 != 0;
    InvalidGenLimit := 200;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Retries;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_18))] := -1073741637;
    call {:si_unique_call 531} vslice_dummy_var_69 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L50;

  L50:
    call {:si_unique_call 532} Retries, OldIrql_7, WaitForEvent, Status_11, Tmp_356, OldIrql_8, sdv_230, NextIrpStack_4, sdv_235, WaitForAbort, InvalidGenLimit, vslice_dummy_var_65, vslice_dummy_var_66, vslice_dummy_var_67, vslice_dummy_var_68, vslice_dummy_var_70 := AvcCommand_sdv_static_function_7_loop_L50(Retries, OldIrql_7, Irp_18, WaitForEvent, Status_11, Tmp_356, OldIrql_8, sdv_230, NextIrpStack_4, sdv_235, WaitForAbort, InvalidGenLimit, tmDelay, DevExt_13, Command_11, vslice_dummy_var_65, vslice_dummy_var_66, vslice_dummy_var_67, vslice_dummy_var_68, vslice_dummy_var_70);
    goto L50_last;

  L50_last:
    call {:si_unique_call 557} NextIrpStack_4 := sdv_IoGetNextIrpStackLocation(Irp_18);
    assume {:nonnull} NextIrpStack_4 != 0;
    assume NextIrpStack_4 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_4)] := 15;
    assume {:nonnull} NextIrpStack_4 != 0;
    assume NextIrpStack_4 > 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    assume {:nonnull} NextIrpStack_4 != 0;
    assume NextIrpStack_4 > 0;
    call {:si_unique_call 558} Status_11 := AvcPrepareForResponseCallback(DevExt_13, Command_11);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Status_11 != 0;
    goto L66;

  L66:
    assume {:nonnull} DevExt_13 != 0;
    assume DevExt_13 > 0;
    havoc vslice_dummy_var_2620;
    call {:si_unique_call 533} vslice_dummy_var_64 := KeSetTimer(0, vslice_dummy_var_2620, 0);
    call {:si_unique_call 534} IoFreeIrp(0);
    goto L72;

  L72:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Status_11 != 0;
    goto L74;

  L74:
    call {:si_unique_call 535} sdv_227, sdv_228, CallbackLink_2 := AvcCommand_sdv_static_function_7_loop_L74(sdv_227, sdv_228, CallbackLink_2, Command_11);
    goto L74_last;

  L74_last:
    call {:si_unique_call 556} sdv_228 := sdv_IsListEmpty(0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_228 == 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    call {:si_unique_call 536} sdv_227 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_11));
    CallbackLink_2 := sdv_227;
    call {:si_unique_call 537} ExFreeToNPagedLookasideList(AvcCommandLinkPool, CallbackLink_2);
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    assume false;
    return;

  anon45_Then:
    assume {:partition} sdv_228 != 0;
    goto L73;

  L73:
    Tmp_351 := Status_11;
    goto L1;

  L1:
    return;

  anon44_Then:
    assume {:partition} Status_11 == 0;
    goto L73;

  anon43_Then:
    assume {:partition} Status_11 == 0;
    assume {:nonnull} DevExt_13 != 0;
    assume DevExt_13 > 0;
    havoc vslice_dummy_var_2621;
    call {:si_unique_call 538} Status_11 := Avc_SubmitIrpSynch(vslice_dummy_var_2621, Irp_18);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Status_11 != 0;
    WaitForAbort := 0;
    call {:si_unique_call 539} Tmp_356 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_356 != 0;
    assume Tmp_356 > 0;
    call {:si_unique_call 540} sdv_KeAcquireSpinLock(0, Tmp_356);
    assume {:nonnull} Tmp_356 != 0;
    assume Tmp_356 > 0;
    havoc OldIrql_8;
    call {:si_unique_call 541} sdv_230 := sdv_IsListEmpty(0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_230 != 0;
    WaitForAbort := 1;
    goto L104;

  L104:
    call {:si_unique_call 542} sdv_KeReleaseSpinLock(0, OldIrql_8);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} WaitForAbort != 0;
    call {:si_unique_call 543} vslice_dummy_var_66 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Status_11;
    goto L108;

  L108:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} 258 == Status_11;
    Status_11 := -1073741248;
    goto L113;

  L113:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Status_11 != 0;
    assume {:nonnull} DevExt_13 != 0;
    assume DevExt_13 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} -1072562032 == Status_11;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} InvalidGenLimit != 0;
    assume {:nonnull} tmDelay != 0;
    assume tmDelay > 0;
    assume {:nonnull} tmDelay != 0;
    assume tmDelay > 0;
    call {:si_unique_call 544} vslice_dummy_var_70 := KeDelayExecutionThread(0, 0, 0);
    InvalidGenLimit := InvalidGenLimit - 1;
    goto anon54_Else_dummy;

  anon54_Else_dummy:
    assume false;
    return;

  anon54_Then:
    assume {:partition} InvalidGenLimit == 0;
    goto L66;

  anon52_Then:
    assume {:partition} -1072562032 != Status_11;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} 258 == Status_11;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Retries != 0;
    Retries := Retries - 1;
    goto anon55_Else_dummy;

  anon55_Else_dummy:
    assume false;
    return;

  anon55_Then:
    assume {:partition} Retries == 0;
    goto L66;

  anon53_Then:
    assume {:partition} 258 != Status_11;
    goto L66;

  anon51_Then:
    goto L66;

  anon50_Then:
    assume {:partition} Status_11 == 0;
    goto L66;

  anon49_Then:
    assume {:partition} 258 != Status_11;
    goto L113;

  anon48_Then:
    assume {:partition} WaitForAbort == 0;
    goto L108;

  anon47_Then:
    assume {:partition} sdv_230 == 0;
    call {:si_unique_call 545} vslice_dummy_var_65 := sdv_RemoveEntryList(0);
    call {:si_unique_call 546} InitializeListHead(Command_11);
    goto L104;

  anon46_Then:
    assume {:partition} Status_11 == 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    call {:si_unique_call 547} Status_11 := KeWaitForSingleObject(0, 0, 0, 0, Timeout__AVC_COMMAND_CONTEXT(Command_11));
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} 258 == Status_11;
    WaitForEvent := 0;
    call {:si_unique_call 548} Tmp_356 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_356 != 0;
    assume Tmp_356 > 0;
    call {:si_unique_call 549} sdv_KeAcquireSpinLock(0, Tmp_356);
    assume {:nonnull} Tmp_356 != 0;
    assume Tmp_356 > 0;
    havoc OldIrql_7;
    call {:si_unique_call 550} sdv_235 := sdv_IsListEmpty(0);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_235 != 0;
    WaitForEvent := 1;
    goto L150;

  L150:
    call {:si_unique_call 551} sdv_KeReleaseSpinLock(0, OldIrql_7);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} WaitForEvent != 0;
    call {:si_unique_call 552} vslice_dummy_var_68 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Status_11;
    goto L154;

  L154:
    call {:si_unique_call 553} IoReuseIrp(Irp_18, -1073741637);
    goto L113;

  anon59_Then:
    assume {:partition} WaitForEvent == 0;
    goto L154;

  anon58_Then:
    assume {:partition} sdv_235 == 0;
    call {:si_unique_call 554} vslice_dummy_var_67 := sdv_RemoveEntryList(0);
    call {:si_unique_call 555} InitializeListHead(Command_11);
    goto L150;

  anon56_Then:
    assume {:partition} 258 != Status_11;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Status_11 == 0;
    assume {:nonnull} Command_11 != 0;
    assume Command_11 > 0;
    havoc Status_11;
    goto L113;

  anon57_Then:
    assume {:partition} Status_11 != 0;
    goto L113;

  anon42_Then:
    assume {:partition} Irp_18 == 0;
    Status_11 := -1073741670;
    goto L72;

  anon60_Then:
    assume {:partition} CallbackLink_2 == 0;
    Tmp_351 := -1073741670;
    goto L1;
}



procedure {:origName "AvcSearchForUnitCommandHandler_sdv_static_function_7"} AvcSearchForUnitCommandHandler_sdv_static_function_7(actual_DevExt_14: int, actual_Opcode_2: int, actual_ppCommand: int) returns (Tmp_360: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_360 == 1 || Tmp_360 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcSearchForUnitCommandHandler_sdv_static_function_7"} AvcSearchForUnitCommandHandler_sdv_static_function_7(actual_DevExt_14: int, actual_Opcode_2: int, actual_ppCommand: int) returns (Tmp_360: int)
{
  var {:pointer} Tmp_361: int;
  var {:pointer} Tmp_362: int;
  var {:pointer} Tmp_363: int;
  var {:scalar} OldIrql_9: int;
  var {:scalar} max: int;
  var {:pointer} Tmp_364: int;
  var {:pointer} Command_12: int;
  var {:scalar} Tmp_365: int;
  var {:pointer} Entry_4: int;
  var {:scalar} idx_8: int;
  var {:scalar} OpcodesMatch: int;
  var {:scalar} Tmp_366: int;
  var {:pointer} DevExt_14: int;
  var {:scalar} Opcode_2: int;
  var {:pointer} ppCommand: int;
  var vslice_dummy_var_71: int;

  anon0:
    DevExt_14 := actual_DevExt_14;
    Opcode_2 := actual_Opcode_2;
    ppCommand := actual_ppCommand;
    call {:si_unique_call 559} Tmp_364 := __HAVOC_malloc(128);
    assume {:nonnull} ppCommand != 0;
    assume ppCommand > 0;
    call {:si_unique_call 560} Tmp_361 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_361 != 0;
    assume Tmp_361 > 0;
    call {:si_unique_call 561} sdv_KeAcquireSpinLock(0, Tmp_361);
    assume {:nonnull} Tmp_361 != 0;
    assume Tmp_361 > 0;
    havoc OldIrql_9;
    assume {:nonnull} DevExt_14 != 0;
    assume DevExt_14 > 0;
    havoc Entry_4;
    goto L11;

  L11:
    call {:si_unique_call 562} Tmp_362, Tmp_363, max, Tmp_364, Command_12, Entry_4, idx_8, OpcodesMatch, Tmp_366 := AvcSearchForUnitCommandHandler_sdv_static_function_7_loop_L11(Tmp_362, Tmp_363, max, Tmp_364, Command_12, Entry_4, idx_8, OpcodesMatch, Tmp_366, Opcode_2);
    goto L11_last;

  L11_last:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Command_12 := Entry_4;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L18;

  L18:
    assume {:nonnull} Entry_4 != 0;
    assume Entry_4 > 0;
    havoc Entry_4;
    goto L18_dummy;

  L18_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Tmp_364;
    assume {:nonnull} Tmp_364 != 0;
    assume Tmp_364 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    OpcodesMatch := 0;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Tmp_362;
    assume {:nonnull} Tmp_362 != 0;
    assume Tmp_362 > 0;
    havoc max;
    idx_8 := 1;
    goto L27;

  L27:
    call {:si_unique_call 563} Tmp_363, idx_8, Tmp_366 := AvcSearchForUnitCommandHandler_sdv_static_function_7_loop_L27(Tmp_363, max, Command_12, idx_8, Tmp_366, Opcode_2);
    goto L27_last;

  L27_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} max >= idx_8;
    Tmp_366 := idx_8;
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    havoc Tmp_363;
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    OpcodesMatch := 1;
    goto L28;

  L28:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} OpcodesMatch != 0;
    call {:si_unique_call 564} vslice_dummy_var_71 := sdv_RemoveEntryList(0);
    call {:si_unique_call 565} InitializeListHead(Command_12);
    assume {:nonnull} ppCommand != 0;
    assume ppCommand > 0;
    goto L12;

  L12:
    call {:si_unique_call 566} sdv_KeReleaseSpinLock(0, OldIrql_9);
    assume {:nonnull} ppCommand != 0;
    assume ppCommand > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_365 := 1;
    goto L44;

  L44:
    Tmp_360 := Tmp_365;
    return;

  anon23_Then:
    Tmp_365 := 0;
    goto L44;

  anon22_Then:
    assume {:partition} OpcodesMatch == 0;
    goto L18;

  anon27_Then:
    idx_8 := idx_8 + 1;
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    assume false;
    return;

  anon21_Then:
    assume {:partition} idx_8 > max;
    goto L28;

  anon26_Then:
    assume {:nonnull} Command_12 != 0;
    assume Command_12 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    OpcodesMatch := 0;
    goto L74;

  L74:
    goto L28;

  anon20_Then:
    OpcodesMatch := 1;
    goto L74;

  anon25_Then:
    goto L18;

  anon19_Then:
    goto L12;
}



procedure {:origName "AvcDuplicateCommandContext_sdv_static_function_7"} AvcDuplicateCommandContext_sdv_static_function_7(actual_OrigCommand: int) returns (Tmp_367: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_367 == 0 || Tmp_367 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcDuplicateCommandContext_sdv_static_function_7"} AvcDuplicateCommandContext_sdv_static_function_7(actual_OrigCommand: int) returns (Tmp_367: int)
{
  var {:pointer} sdv_240: int;
  var {:pointer} Entry_5: int;
  var {:pointer} DevExt_15: int;
  var {:scalar} sdv_242: int;
  var {:scalar} sdv_243: int;
  var {:scalar} sdv_245: int;
  var {:pointer} Command_13: int;
  var {:pointer} Entry_6: int;
  var {:pointer} OrigCommand: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;

  anon0:
    OrigCommand := actual_OrigCommand;
    assume {:nonnull} OrigCommand != 0;
    assume OrigCommand > 0;
    havoc DevExt_15;
    call {:si_unique_call 567} sdv_240 := sdv_ExAllocateFromNPagedLookasideList(0);
    Command_13 := sdv_240;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Command_13 != 0;
    call {:si_unique_call 568} sdv_RtlCopyMemory(0, 0, 672);
    assume {:nonnull} OrigCommand != 0;
    assume OrigCommand > 0;
    assume {:nonnull} DevExt_15 != 0;
    assume DevExt_15 > 0;
    call {:si_unique_call 569} vslice_dummy_var_74 := sdv_InsertTailList(PendingResponseList__BUS_DEVICE_EXTENSION(DevExt_15), Command_13);
    assume {:nonnull} Command_13 != 0;
    assume Command_13 > 0;
    call {:si_unique_call 570} InitializeListHead(PendingIrpList__AVC_COMMAND_CONTEXT(Command_13));
    goto L23;

  L23:
    call {:si_unique_call 571} Entry_5, sdv_242, vslice_dummy_var_73 := AvcDuplicateCommandContext_sdv_static_function_7_loop_L23(Entry_5, sdv_242, Command_13, OrigCommand, vslice_dummy_var_73);
    goto L23_last;

  L23_last:
    call {:si_unique_call 582} sdv_242 := sdv_IsListEmpty(0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_242 == 0;
    assume {:nonnull} OrigCommand != 0;
    assume OrigCommand > 0;
    call {:si_unique_call 572} Entry_5 := RemoveHeadList(PendingIrpList__AVC_COMMAND_CONTEXT(OrigCommand));
    assume {:nonnull} Command_13 != 0;
    assume Command_13 > 0;
    call {:si_unique_call 573} vslice_dummy_var_73 := sdv_InsertTailList(PendingIrpList__AVC_COMMAND_CONTEXT(Command_13), Entry_5);
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} sdv_242 != 0;
    assume {:nonnull} Command_13 != 0;
    assume Command_13 > 0;
    call {:si_unique_call 574} InitializeListHead(CallbackChain__AVC_COMMAND_CONTEXT(Command_13));
    call {:si_unique_call 575} sdv_243 := sdv_IsListEmpty(0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_243 == 0;
    goto L38;

  L38:
    call {:si_unique_call 576} sdv_245, Entry_6, vslice_dummy_var_72 := AvcDuplicateCommandContext_sdv_static_function_7_loop_L38(sdv_245, Command_13, Entry_6, OrigCommand, vslice_dummy_var_72);
    goto L38_last;

  L38_last:
    assume {:nonnull} OrigCommand != 0;
    assume OrigCommand > 0;
    call {:si_unique_call 579} Entry_6 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(OrigCommand));
    assume {:nonnull} Command_13 != 0;
    assume Command_13 > 0;
    call {:si_unique_call 580} vslice_dummy_var_72 := sdv_InsertTailList(CallbackChain__AVC_COMMAND_CONTEXT(Command_13), Entry_6);
    call {:si_unique_call 581} sdv_245 := sdv_IsListEmpty(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_245 != 0;
    assume {:nonnull} Command_13 != 0;
    assume Command_13 > 0;
    call {:si_unique_call 577} Entry_6 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_13));
    assume {:nonnull} OrigCommand != 0;
    assume OrigCommand > 0;
    call {:si_unique_call 578} InsertHeadList(CallbackChain__AVC_COMMAND_CONTEXT(OrigCommand), Entry_6);
    goto L36;

  L36:
    assume {:nonnull} Command_13 != 0;
    assume Command_13 > 0;
    Tmp_367 := 0;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} sdv_245 == 0;
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    assume false;
    return;

  anon10_Then:
    assume {:partition} sdv_243 != 0;
    goto L36;

  anon12_Then:
    assume {:partition} Command_13 == 0;
    Tmp_367 := -1073741670;
    goto L1;
}



procedure {:origName "AvcDequeueFCPIrp"} AvcDequeueFCPIrp(actual_Command_15: int) returns (Tmp_391: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcDequeueFCPIrp"} AvcDequeueFCPIrp(actual_Command_15: int) returns (Tmp_391: int)
{
  var {:pointer} listEntry: int;
  var {:scalar} sdv_259: int;
  var {:scalar} oldCancelRoutine_1: int;
  var {:scalar} oldIrql_1: int;
  var {:pointer} sdv_261: int;
  var {:pointer} nextIrp: int;
  var {:pointer} Tmp_392: int;
  var {:pointer} Command_15: int;

  anon0:
    Command_15 := actual_Command_15;
    assume {:nonnull} Command_15 != 0;
    assume Command_15 > 0;
    nextIrp := 0;
    call {:si_unique_call 583} Tmp_392 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_392 != 0;
    assume Tmp_392 > 0;
    call {:si_unique_call 584} sdv_KeAcquireSpinLock(0, Tmp_392);
    assume {:nonnull} Tmp_392 != 0;
    assume Tmp_392 > 0;
    havoc oldIrql_1;
    goto L11;

  L11:
    call {:si_unique_call 585} listEntry, sdv_259, oldCancelRoutine_1, sdv_261, nextIrp := AvcDequeueFCPIrp_loop_L11(listEntry, sdv_259, oldCancelRoutine_1, sdv_261, nextIrp, Command_15);
    goto L11_last;

  L11_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} nextIrp != 0;
    goto L15;

  L15:
    call {:si_unique_call 586} sdv_KeReleaseSpinLock(0, oldIrql_1);
    Tmp_391 := nextIrp;
    return;

  anon7_Then:
    assume {:partition} nextIrp == 0;
    call {:si_unique_call 587} sdv_259 := sdv_IsListEmpty(0);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_259 == 0;
    assume {:nonnull} Command_15 != 0;
    assume Command_15 > 0;
    call {:si_unique_call 588} listEntry := RemoveHeadList(PendingIrpList__AVC_COMMAND_CONTEXT(Command_15));
    call {:si_unique_call 589} sdv_261 := sdv_containing_record(listEntry, 88);
    nextIrp := sdv_261;
    call {:si_unique_call 590} oldCancelRoutine_1 := sdv_IoSetCancelRoutine(nextIrp, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} oldCancelRoutine_1 == 0;
    assume {:nonnull} nextIrp != 0;
    assume nextIrp > 0;
    call {:si_unique_call 591} InitializeListHead(ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(nextIrp))));
    nextIrp := 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} oldCancelRoutine_1 != 0;
    goto anon9_Then_dummy;

  anon9_Then_dummy:
    assume false;
    return;

  anon8_Then:
    assume {:partition} sdv_259 != 0;
    goto L15;
}



procedure {:origName "AvcGetSubunitInfo"} AvcGetSubunitInfo(actual_DeviceObject_14: int, actual_Irp_21: int) returns (Tmp_393: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} Tmp_393 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcGetSubunitInfo"} AvcGetSubunitInfo(actual_DeviceObject_14: int, actual_Irp_21: int) returns (Tmp_393: int)
{
  var {:pointer} Tmp_394: int;
  var {:pointer} sdv_263: int;
  var {:pointer} AvcIrb_7: int;
  var {:scalar} ntStatus_17: int;
  var {:scalar} oldIrql_2: int;
  var {:pointer} BusExtension_2: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Irp_21: int;
  var vslice_dummy_var_2622: int;

  anon0:
    DeviceObject_14 := actual_DeviceObject_14;
    Irp_21 := actual_Irp_21;
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc BusExtension_2;
    call {:si_unique_call 592} sdv_263 := sdv_IoGetCurrentIrpStackLocation(Irp_21);
    assume {:nonnull} sdv_263 != 0;
    assume sdv_263 > 0;
    havoc AvcIrb_7;
    ntStatus_17 := 0;
    call {:si_unique_call 593} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    call {:si_unique_call 594} sdv_KeAcquireSpinLock(0, Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    havoc oldIrql_2;
    assume {:nonnull} AvcIrb_7 != 0;
    assume AvcIrb_7 > 0;
    havoc vslice_dummy_var_2622;
    call {:si_unique_call 595} AvcPackSubunitInfo(BusExtension_2, 32, vslice_dummy_var_2622, 0);
    call {:si_unique_call 596} sdv_KeReleaseSpinLock(0, oldIrql_2);
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_21))] := ntStatus_17;
    call {:si_unique_call 597} sdv_IoCompleteRequest(0, 0);
    Tmp_393 := ntStatus_17;
    return;
}



procedure {:origName "AvcPackCommandFrame"} AvcPackCommandFrame(actual_Command_16: int, actual_Opcode_4: int, actual_OperandByteCount_1: int, actual_Operands_4: int) returns (Tmp_395: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_395 == 0 || Tmp_395 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcPackCommandFrame"} AvcPackCommandFrame(actual_Command_16: int, actual_Opcode_4: int, actual_OperandByteCount_1: int, actual_Operands_4: int) returns (Tmp_395: int)
{
  var {:pointer} Tmp_396: int;
  var {:scalar} Tmp_397: int;
  var {:scalar} Status_13: int;
  var {:scalar} Tmp_398: int;
  var {:pointer} Tmp_400: int;
  var {:pointer} Command_16: int;
  var {:scalar} Opcode_4: int;
  var {:scalar} OperandByteCount_1: int;
  var {:pointer} Operands_4: int;

  anon0:
    Command_16 := actual_Command_16;
    Opcode_4 := actual_Opcode_4;
    OperandByteCount_1 := actual_OperandByteCount_1;
    Operands_4 := actual_Operands_4;
    call {:si_unique_call 598} Tmp_396 := __HAVOC_malloc(2048);
    call {:si_unique_call 599} Tmp_400 := __HAVOC_malloc(2048);
    Status_13 := 0;
    call {:si_unique_call 600} sdv_do_paged_code_check();
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    havoc Tmp_397;
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    havoc Tmp_400;
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} OperandByteCount_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Operands_4 != 0;
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    havoc Tmp_398;
    assume {:nonnull} Command_16 != 0;
    assume Command_16 > 0;
    havoc Tmp_396;
    call {:si_unique_call 601} sdv_RtlCopyMemory(0, 0, OperandByteCount_1);
    goto L14;

  L14:
    Tmp_395 := Status_13;
    return;

  anon8_Then:
    assume {:partition} Operands_4 == 0;
    goto L14;

  anon9_Then:
    assume {:partition} 0 >= OperandByteCount_1;
    goto L14;

  anon7_Then:
    Status_13 := -1073741811;
    goto L14;
}



procedure {:origName "AvcProcessGetRequest"} AvcProcessGetRequest(actual_DeviceObject_15: int, actual_Irp_22: int) returns (Tmp_402: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.PendingReturned__IRP, irp_status, thread_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_402 == 259 || Tmp_402 == -1073741811 || Tmp_402 == 0 || Tmp_402 == -1073741670 || Tmp_402 == -1073741536;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcProcessGetRequest"} AvcProcessGetRequest(actual_DeviceObject_15: int, actual_Irp_22: int) returns (Tmp_402: int)
{
  var {:pointer} SubunitAddr_9: int;
  var {:pointer} Tmp_403: int;
  var {:scalar} Status_14: int;
  var {:pointer} IrpStack_5: int;
  var {:pointer} DevExt_19: int;
  var {:pointer} pIOWorkItem: int;
  var {:scalar} Tmp_404: int;
  var {:pointer} sdv_270: int;
  var {:pointer} Command_17: int;
  var {:pointer} CmdIrb_3: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} Irp_22: int;
  var vslice_dummy_var_2623: int;
  var vslice_dummy_var_2624: int;
  var vslice_dummy_var_2625: int;
  var vslice_dummy_var_2626: int;

  anon0:
    call {:si_unique_call 602} Command_17 := __HAVOC_malloc(4);
    DeviceObject_15 := actual_DeviceObject_15;
    Irp_22 := actual_Irp_22;
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc DevExt_19;
    call {:si_unique_call 603} IrpStack_5 := sdv_IoGetCurrentIrpStackLocation(Irp_22);
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    havoc CmdIrb_3;
    assume {:nonnull} DevExt_19 != 0;
    assume DevExt_19 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 604} pIOWorkItem := IoAllocateWorkItem(0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} pIOWorkItem != 0;
    call {:si_unique_call 605} IoQueueWorkItem(0, li2bplFunctionConstant769, 1, 0);
    goto L17;

  L17:
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    havoc SubunitAddr_9;
    goto L20;

  L20:
    call {:si_unique_call 606} Status_14 := AvcAllocateSubunitCommandContext(DevExt_19, SubunitAddr_9, Command_17);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Status_14 != 0;
    goto L28;

  L28:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Status_14 >= 0;
    Status_14 := 259;
    goto L31;

  L31:
    Tmp_402 := Status_14;
    return;

  anon27_Then:
    assume {:partition} 0 > Status_14;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_22))] := Status_14;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} IrpStack_5 != 0;
    assume IrpStack_5 > 0;
    call {:si_unique_call 607} sdv_IoCompleteRequest(0, 0);
    goto L31;

  anon26_Then:
    assume {:partition} Status_14 == 0;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    havoc vslice_dummy_var_2623;
    call {:si_unique_call 608} Status_14 := AvcEnqueueFCPIrp(vslice_dummy_var_2623, Irp_22);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} 259 == Status_14;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 609} sdv_270 := sdv_ExAllocateFromNPagedLookasideList(0);
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    havoc Tmp_403;
    assume {:nonnull} Tmp_403 != 0;
    assume Tmp_403 > 0;
    havoc Tmp_404;
    call {:si_unique_call 610} sdv_RtlCopyMemory(0, 0, Tmp_404);
    goto L54;

  L54:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Status_14 >= 0;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    havoc vslice_dummy_var_2624;
    call {:si_unique_call 611} Status_14 := AvcPrepareForRequestCallback(DevExt_19, vslice_dummy_var_2624);
    goto L55;

  L55:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Status_14 < 0;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    havoc vslice_dummy_var_2625;
    call {:si_unique_call 612} Irp_22 := AvcDequeueFCPIrp(vslice_dummy_var_2625);
    goto L39;

  L39:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Status_14 < 0;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    havoc vslice_dummy_var_2626;
    call {:si_unique_call 613} AvcFreeCommandContext(vslice_dummy_var_2626);
    goto L28;

  anon29_Then:
    assume {:partition} 0 <= Status_14;
    goto L28;

  anon32_Then:
    assume {:partition} 0 <= Status_14;
    goto L39;

  anon31_Then:
    assume {:partition} 0 > Status_14;
    goto L55;

  anon36_Then:
    Status_14 := -1073741670;
    goto L54;

  anon30_Then:
    goto L42;

  L42:
    assume {:nonnull} CmdIrb_3 != 0;
    assume CmdIrb_3 > 0;
    assume {:nonnull} Command_17 != 0;
    assume Command_17 > 0;
    goto L54;

  anon35_Then:
    goto L42;

  anon28_Then:
    assume {:partition} 259 != Status_14;
    goto L39;

  anon25_Then:
    assume {:nonnull} DevExt_19 != 0;
    assume DevExt_19 > 0;
    SubunitAddr_9 := UnitAddr__BUS_DEVICE_EXTENSION(DevExt_19);
    goto L20;

  anon33_Then:
    assume {:partition} pIOWorkItem == 0;
    goto L17;

  anon34_Then:
    goto L17;
}



procedure {:origName "AvcUnpackSubunitAddress"} AvcUnpackSubunitAddress(actual_Buffer_3: int, actual_SubunitType_2: int, actual_SubunitID_1: int, actual_BytesUsed_3: int) returns (Tmp_406: int);
  free ensures {:va_keep} Tmp_406 == 0 || Tmp_406 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcUnpackSubunitAddress"} AvcUnpackSubunitAddress(actual_Buffer_3: int, actual_SubunitType_2: int, actual_SubunitID_1: int, actual_BytesUsed_3: int) returns (Tmp_406: int)
{
  var {:scalar} Tmp_407: int;
  var {:scalar} Temp: int;
  var {:scalar} Tmp_408: int;
  var {:scalar} Tmp_409: int;
  var {:scalar} Tmp_410: int;
  var {:scalar} Tmp_411: int;
  var {:scalar} Tmp_412: int;
  var {:scalar} Tmp_413: int;
  var {:scalar} Tmp_414: int;
  var {:scalar} ntStatus_18: int;
  var {:scalar} Tmp_415: int;
  var {:scalar} Tmp_416: int;
  var {:scalar} Tmp_417: int;
  var {:scalar} idx_12: int;
  var {:scalar} Tmp_418: int;
  var {:scalar} Tmp_419: int;
  var {:scalar} Tmp_420: int;
  var {:scalar} Tmp_422: int;
  var {:pointer} Buffer_3: int;
  var {:pointer} SubunitType_2: int;
  var {:pointer} SubunitID_1: int;
  var {:pointer} BytesUsed_3: int;
  var boogieTmp: int;

  anon0:
    Buffer_3 := actual_Buffer_3;
    SubunitType_2 := actual_SubunitType_2;
    SubunitID_1 := actual_SubunitID_1;
    BytesUsed_3 := actual_BytesUsed_3;
    idx_12 := 1;
    ntStatus_18 := 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} BytesUsed_3 != 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} SubunitType_2 != 0;
    assume {:nonnull} SubunitType_2 != 0;
    assume SubunitType_2 > 0;
    call {:si_unique_call 614} boogieTmp := corral_nondet();
    assume {:nonnull} SubunitType_2 != 0;
    assume SubunitType_2 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto L15;

  L15:
    call {:si_unique_call 615} Tmp_411, idx_12, Tmp_420, Tmp_422 := AvcUnpackSubunitAddress_loop_L15(Tmp_411, idx_12, Tmp_420, Tmp_422, Buffer_3, SubunitType_2);
    goto L15_last;

  L15_last:
    Tmp_422 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    Tmp_411 := idx_12;
    Tmp_420 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    assume {:nonnull} SubunitType_2 != 0;
    assume SubunitType_2 > 0;
    idx_12 := idx_12 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    assume false;
    return;

  anon38_Then:
    Tmp_417 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    Tmp_409 := idx_12;
    Tmp_412 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    assume {:nonnull} SubunitType_2 != 0;
    assume SubunitType_2 > 0;
    idx_12 := idx_12 + 1;
    goto L14;

  L14:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} SubunitID_1 != 0;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    havoc Temp;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} 5 >= Temp;
    assume {:nonnull} SubunitID_1 != 0;
    assume SubunitID_1 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Temp == 5;
    goto L29;

  L29:
    call {:si_unique_call 616} Tmp_408, Tmp_415, idx_12 := AvcUnpackSubunitAddress_loop_L29(Tmp_408, Tmp_415, idx_12, Buffer_3, SubunitID_1);
    goto L29_last;

  L29_last:
    Tmp_415 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    Tmp_408 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    assume {:nonnull} SubunitID_1 != 0;
    assume SubunitID_1 > 0;
    idx_12 := idx_12 + 1;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    assume false;
    return;

  anon42_Then:
    Tmp_413 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    Tmp_419 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    assume {:nonnull} SubunitID_1 != 0;
    assume SubunitID_1 > 0;
    idx_12 := idx_12 + 1;
    goto L28;

  L28:
    assume {:nonnull} BytesUsed_3 != 0;
    assume BytesUsed_3 > 0;
    Tmp_406 := ntStatus_18;
    goto L1;

  L1:
    return;

  anon43_Then:
    ntStatus_18 := -1073741811;
    goto L28;

  anon41_Then:
    assume {:partition} Temp != 5;
    goto L28;

  anon40_Then:
    assume {:partition} Temp > 5;
    assume {:nonnull} SubunitID_1 != 0;
    assume SubunitID_1 > 0;
    goto L28;

  anon35_Then:
    assume {:partition} SubunitID_1 == 0;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    havoc Tmp_416;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Tmp_416 == 5;
    goto L38;

  L38:
    call {:si_unique_call 617} Tmp_414, idx_12 := AvcUnpackSubunitAddress_loop_L38(Tmp_414, idx_12, Buffer_3);
    goto L38_last;

  L38_last:
    Tmp_414 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    idx_12 := idx_12 + 1;
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    assume false;
    return;

  anon45_Then:
    Tmp_407 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    idx_12 := idx_12 + 1;
    goto L28;

  anon46_Then:
    ntStatus_18 := -1073741811;
    goto L28;

  anon44_Then:
    assume {:partition} Tmp_416 != 5;
    goto L28;

  anon39_Then:
    ntStatus_18 := -1073741811;
    goto L14;

  anon37_Then:
    goto L14;

  anon33_Then:
    assume {:partition} SubunitType_2 == 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L43;

  L43:
    call {:si_unique_call 618} Tmp_410, idx_12 := AvcUnpackSubunitAddress_loop_L43(Tmp_410, idx_12, Buffer_3);
    goto L43_last;

  L43_last:
    Tmp_410 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    idx_12 := idx_12 + 1;
    goto anon47_Else_dummy;

  anon47_Else_dummy:
    assume false;
    return;

  anon47_Then:
    Tmp_418 := idx_12;
    assume {:nonnull} Buffer_3 != 0;
    assume Buffer_3 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    idx_12 := idx_12 + 1;
    goto L14;

  anon48_Then:
    ntStatus_18 := -1073741811;
    goto L14;

  anon34_Then:
    goto L14;

  anon36_Then:
    assume {:partition} BytesUsed_3 == 0;
    Tmp_406 := -1073741811;
    goto L1;
}



procedure {:origName "AvcExtractMatchingIrps_sdv_static_function_7"} AvcExtractMatchingIrps_sdv_static_function_7(actual_FileObject_1: int, actual_CommandList: int, actual_IrpList: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcExtractMatchingIrps_sdv_static_function_7"} AvcExtractMatchingIrps_sdv_static_function_7(actual_FileObject_1: int, actual_CommandList: int, actual_IrpList: int)
{
  var {:pointer} Irp_23: int;
  var {:pointer} CommandEntry: int;
  var {:pointer} sdv_272: int;
  var {:pointer} IrpStack_6: int;
  var {:scalar} oldCancelRoutine_2: int;
  var {:pointer} nextIrpEntry: int;
  var {:pointer} Command_18: int;
  var {:pointer} IrpEntry_1: int;
  var {:pointer} FileObject_1: int;
  var {:pointer} CommandList: int;
  var {:pointer} IrpList: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;

  anon0:
    call {:si_unique_call 619} vslice_dummy_var_75 := __HAVOC_malloc(4);
    FileObject_1 := actual_FileObject_1;
    CommandList := actual_CommandList;
    IrpList := actual_IrpList;
    assume {:nonnull} CommandList != 0;
    assume CommandList > 0;
    havoc CommandEntry;
    goto L5;

  L5:
    call {:si_unique_call 620} Irp_23, CommandEntry, sdv_272, IrpStack_6, oldCancelRoutine_2, nextIrpEntry, Command_18, IrpEntry_1, vslice_dummy_var_76, vslice_dummy_var_77 := AvcExtractMatchingIrps_sdv_static_function_7_loop_L5(Irp_23, CommandEntry, sdv_272, IrpStack_6, oldCancelRoutine_2, nextIrpEntry, Command_18, IrpEntry_1, FileObject_1, IrpList, vslice_dummy_var_76, vslice_dummy_var_77);
    goto L5_last;

  L5_last:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Command_18 := CommandEntry;
    assume {:nonnull} Command_18 != 0;
    assume Command_18 > 0;
    havoc IrpEntry_1;
    goto L11;

  L11:
    call {:si_unique_call 621} Irp_23, sdv_272, IrpStack_6, oldCancelRoutine_2, nextIrpEntry, IrpEntry_1, vslice_dummy_var_76, vslice_dummy_var_77 := AvcExtractMatchingIrps_sdv_static_function_7_loop_L11(Irp_23, sdv_272, IrpStack_6, oldCancelRoutine_2, nextIrpEntry, IrpEntry_1, FileObject_1, IrpList, vslice_dummy_var_76, vslice_dummy_var_77);
    goto L11_last;

  L11_last:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 622} sdv_272 := sdv_containing_record(IrpEntry_1, 88);
    Irp_23 := sdv_272;
    call {:si_unique_call 623} IrpStack_6 := sdv_IoGetCurrentIrpStackLocation(Irp_23);
    assume {:nonnull} IrpEntry_1 != 0;
    assume IrpEntry_1 > 0;
    havoc nextIrpEntry;
    assume {:nonnull} IrpStack_6 != 0;
    assume IrpStack_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 624} oldCancelRoutine_2 := sdv_IoSetCancelRoutine(Irp_23, 0);
    call {:si_unique_call 625} vslice_dummy_var_76 := sdv_RemoveEntryList(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} oldCancelRoutine_2 != 0;
    call {:si_unique_call 626} vslice_dummy_var_77 := sdv_InsertTailList(IrpList, IrpEntry_1);
    goto L26;

  L26:
    IrpEntry_1 := nextIrpEntry;
    goto L26_dummy;

  L26_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} oldCancelRoutine_2 == 0;
    call {:si_unique_call 627} InitializeListHead(IrpEntry_1);
    goto L26;

  anon12_Then:
    goto L26;

  anon10_Then:
    assume {:nonnull} CommandEntry != 0;
    assume CommandEntry > 0;
    havoc CommandEntry;
    goto anon10_Then_dummy;

  anon10_Then_dummy:
    assume false;
    return;

  anon9_Then:
    return;
}



procedure {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller: int);
  modifies thread_status;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 1;
  free ensures {:va_keep} thread_status == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller: int)
{

  anon0:
    thread_status := 0;
    return;
}



procedure {:origName "SLIC_Avc_Pnp_entry"} {:osmodel} SLIC_Avc_Pnp_entry(actual_caller_1: int, actual_Avc: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_Avc_Pnp_entry"} {:osmodel} SLIC_Avc_Pnp_entry(actual_caller_1: int, actual_Avc: int)
{
  var {:pointer} Tmp_436: int;
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:pointer} Avc: int;

  anon0:
    Avc := actual_Avc;
    assume {:nonnull} Avc != 0;
    assume Avc > 0;
    Tmp_436 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(Avc)))];
    assume {:nonnull} Avc != 0;
    assume Avc > 0;
    Tmp_438 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(Avc)))];
    assume {:nonnull} Avc != 0;
    assume Avc > 0;
    Tmp_437 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(Avc)))];
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_437)] == 27;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_438)] != 2;
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_436)] == 23;
    goto L4;

  L4:
    call {:si_unique_call 628} SLIC_EXIT_ROUTINE(strConst__li2bpl14);
    goto L2;

  L2:
    return;

  anon8_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_436)] != 23;
    goto L2;

  anon7_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(Tmp_438)] == 2;
    goto L4;

  anon9_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(Tmp_437)] != 27;
    goto L2;
}



procedure {:origName "SLIC_sdv_IoSetCompletionRoutine_entry"} {:osmodel} SLIC_sdv_IoSetCompletionRoutine_entry(actual_caller_2: int);
  modifies irp_status;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 0;
  free ensures {:va_keep} irp_status == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoSetCompletionRoutine_entry"} {:osmodel} SLIC_sdv_IoSetCompletionRoutine_entry(actual_caller_2: int)
{

  anon0:
    irp_status := 1;
    return;
}



procedure {:origName "SLIC_PoCallDriver_entry"} {:osmodel} SLIC_PoCallDriver_entry(actual_caller_3: int);
  modifies thread_status;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 1;
  free ensures {:va_keep} thread_status == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_PoCallDriver_entry"} {:osmodel} SLIC_PoCallDriver_entry(actual_caller_3: int)
{

  anon0:
    thread_status := 0;
    return;
}



procedure {:origName "SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry"} {:osmodel} SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry(actual_caller_5: int);
  modifies irp_copy_next;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 1;
  free ensures {:va_keep} irp_copy_next == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry"} {:osmodel} SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry(actual_caller_5: int)
{

  anon0:
    irp_copy_next := 0;
    return;
}



procedure {:origName "SLIC_ABORT_14_0"} SLIC_ABORT_14_0(actual_caller_6: int, actual_sdv_278: int, actual_sdv_279: int);
  modifies yogi_error;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 2 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_ABORT_14_0"} SLIC_ABORT_14_0(actual_caller_6: int, actual_sdv_278: int, actual_sdv_279: int)
{
  var {:pointer} caller_6: int;
  var {:scalar} sdv_278: int;
  var {:pointer} sdv_279: int;

  anon0:
    caller_6 := actual_caller_6;
    sdv_278 := actual_sdv_278;
    sdv_279 := actual_sdv_279;
    call {:si_unique_call 629} SLIC_ERROR_ROUTINE(strConst__li2bpl15);
    return;
}



procedure {:origName "SLIC_ABORT_14_2"} SLIC_ABORT_14_2(actual_caller_7: int, actual_sdv_280: int, actual_sdv_281: int);
  modifies yogi_error;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 2 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_ABORT_14_2"} SLIC_ABORT_14_2(actual_caller_7: int, actual_sdv_280: int, actual_sdv_281: int)
{
  var {:pointer} caller_7: int;
  var {:scalar} sdv_280: int;
  var {:pointer} sdv_281: int;

  anon0:
    caller_7 := actual_caller_7;
    sdv_280 := actual_sdv_280;
    sdv_281 := actual_sdv_281;
    call {:si_unique_call 630} SLIC_ERROR_ROUTINE(strConst__li2bpl16);
    return;
}



procedure {:origName "SLIC_sdv_stub_dispatch_end_entry"} {:osmodel} SLIC_sdv_stub_dispatch_end_entry(actual_caller_8: int, actual_sdv_282: int, actual_sdv_283: int);
  modifies yogi_error;
  free ensures {:va_keep} old(return_state) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 2 ==> yogi_error == 0;
  free ensures {:va_keep} old(return_state) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_stub_dispatch_end_entry"} {:osmodel} SLIC_sdv_stub_dispatch_end_entry(actual_caller_8: int, actual_sdv_282: int, actual_sdv_283: int)
{
  var {:pointer} caller_8: int;
  var {:scalar} sdv_282: int;
  var {:pointer} sdv_283: int;

  anon0:
    caller_8 := actual_caller_8;
    sdv_282 := actual_sdv_282;
    sdv_283 := actual_sdv_283;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} return_state == 1;
    assume {:nonnull} sdv_283 != 0;
    assume sdv_283 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_283))] != 259;
    assume {:nonnull} sdv_283 != 0;
    assume sdv_283 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_283))] == 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} lowerDriverFailed != 1;
    goto L14;

  L14:
    assume {:nonnull} sdv_283 != 0;
    assume sdv_283 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_282 != Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_283))];
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} thread_status != 1;
    goto L13;

  L13:
    call {:si_unique_call 631} SLIC_EXIT_ROUTINE(strConst__li2bpl14);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon24_Then:
    assume {:partition} thread_status == 1;
    call {:si_unique_call 632} SLIC_ABORT_14_2(caller_8, sdv_282, sdv_283);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon19_Then:
    assume {:partition} sdv_282 == Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_283))];
    goto L13;

  anon23_Then:
    assume {:partition} lowerDriverFailed == 1;
    call {:si_unique_call 633} SLIC_ABORT_14_1(caller_8, sdv_282, sdv_283);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon26_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_283))] != 0;
    goto L14;

  anon21_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_283))] == 259;
    call {:si_unique_call 634} SLIC_ABORT_14_0(caller_8, sdv_282, sdv_283);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon25_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon22_Then:
    assume {:partition} return_state != 1;
    goto L2;
}



procedure {:origName "SLIC_PoCallDriver_exit"} {:osmodel} SLIC_PoCallDriver_exit(actual_caller_9: int, actual_PoCallDriver_1: int);
  modifies return_state, lowerDriverFailed;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 0;
  free ensures {:va_keep} return_state == 1 || return_state == 2;
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_PoCallDriver_exit"} {:osmodel} SLIC_PoCallDriver_exit(actual_caller_9: int, actual_PoCallDriver_1: int)
{
  var {:pointer} PoCallDriver_1: int;

  anon0:
    PoCallDriver_1 := actual_PoCallDriver_1;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} irp_status != 1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} irp_copy_next != 0;
    return_state := 1;
    goto L2;

  L2:
    return;

  anon13_Then:
    assume {:partition} irp_copy_next == 0;
    call {:si_unique_call 635} SLIC_EXIT_ROUTINE(strConst__li2bpl14);
    goto L2;

  anon14_Then:
    assume {:partition} irp_status == 1;
    assume {:nonnull} PoCallDriver_1 != 0;
    assume PoCallDriver_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 0 > Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(PoCallDriver_1))];
    assume {:nonnull} PoCallDriver_1 != 0;
    assume PoCallDriver_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(PoCallDriver_1)] != 0;
    goto L9;

  L9:
    assume {:nonnull} PoCallDriver_1 != 0;
    assume PoCallDriver_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(PoCallDriver_1)] == 0;
    call {:si_unique_call 636} SLIC_EXIT_ROUTINE(strConst__li2bpl14);
    goto L2;

  anon11_Then:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(PoCallDriver_1)] != 0;
    return_state := 2;
    goto L2;

  anon15_Then:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(PoCallDriver_1)] == 0;
    return_state := 1;
    lowerDriverFailed := 1;
    goto L2;

  anon12_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(PoCallDriver_1))] >= 0;
    goto L9;
}



procedure {:origName "SLIC_ABORT_14_1"} SLIC_ABORT_14_1(actual_caller_11: int, actual_sdv_284: int, actual_sdv_285: int);
  modifies yogi_error;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 2 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_ABORT_14_1"} SLIC_ABORT_14_1(actual_caller_11: int, actual_sdv_284: int, actual_sdv_285: int)
{
  var {:pointer} caller_11: int;
  var {:scalar} sdv_284: int;
  var {:pointer} sdv_285: int;

  anon0:
    caller_11 := actual_caller_11;
    sdv_284 := actual_sdv_284;
    sdv_285 := actual_sdv_285;
    call {:si_unique_call 637} SLIC_ERROR_ROUTINE(strConst__li2bpl17);
    return;
}



procedure {:origName "SLIC_sdv_IoMarkIrpPending_entry"} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_12: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoMarkIrpPending_entry"} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_12: int)
{

  anon0:
    call {:si_unique_call 638} SLIC_EXIT_ROUTINE(strConst__li2bpl14);
    return;
}



procedure {:origName "SLIC_sdv_IoCallDriver_exit"} {:osmodel} SLIC_sdv_IoCallDriver_exit(actual_caller_13: int, actual_sdv_286: int);
  modifies return_state, lowerDriverFailed;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 0;
  free ensures {:va_keep} return_state == 1 || return_state == 2;
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoCallDriver_exit"} {:osmodel} SLIC_sdv_IoCallDriver_exit(actual_caller_13: int, actual_sdv_286: int)
{
  var {:pointer} sdv_286: int;

  anon0:
    sdv_286 := actual_sdv_286;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} irp_status != 1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} irp_copy_next != 0;
    return_state := 1;
    goto L2;

  L2:
    return;

  anon13_Then:
    assume {:partition} irp_copy_next == 0;
    call {:si_unique_call 639} SLIC_EXIT_ROUTINE(strConst__li2bpl14);
    goto L2;

  anon14_Then:
    assume {:partition} irp_status == 1;
    assume {:nonnull} sdv_286 != 0;
    assume sdv_286 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 0 > Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_286))];
    assume {:nonnull} sdv_286 != 0;
    assume sdv_286 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(sdv_286)] != 0;
    goto L9;

  L9:
    assume {:nonnull} sdv_286 != 0;
    assume sdv_286 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(sdv_286)] == 0;
    call {:si_unique_call 640} SLIC_EXIT_ROUTINE(strConst__li2bpl14);
    goto L2;

  anon11_Then:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(sdv_286)] != 0;
    return_state := 2;
    goto L2;

  anon15_Then:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(sdv_286)] == 0;
    return_state := 1;
    lowerDriverFailed := 1;
    goto L2;

  anon12_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(sdv_286))] >= 0;
    goto L9;
}



procedure {:origName "_sdv_init12"} {:osmodel} _sdv_init12();
  modifies SLAM_guard_S_0, irp_copy_next, thread_status, irp_status, return_state, lowerDriverFailed, yogi_error;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> irp_copy_next != 0;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} return_state == 0;
  free ensures {:va_keep} thread_status == 0;
  free ensures {:va_keep} lowerDriverFailed == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} irp_status == 0;
  free ensures {:va_keep} irp_copy_next == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init12"} {:osmodel} _sdv_init12()
{

  anon0:
    SLAM_guard_S_0 := SLAM_guard_S_0_init;
    irp_copy_next := 1;
    thread_status := 0;
    irp_status := 0;
    return_state := 0;
    lowerDriverFailed := 0;
    assume irpstatus == 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_14: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_14: int)
{

  anon0:
    call {:si_unique_call 641} SLIC_EXIT_ROUTINE(strConst__li2bpl14);
    return;
}



procedure {:origName "SLIC_KeWaitForSingleObject_exit"} {:osmodel} SLIC_KeWaitForSingleObject_exit(actual_caller_15: int, actual_KeWaitForSingleObject_1: int);
  modifies thread_status;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} thread_status == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_KeWaitForSingleObject_exit"} {:osmodel} SLIC_KeWaitForSingleObject_exit(actual_caller_15: int, actual_KeWaitForSingleObject_1: int)
{
  var {:scalar} KeWaitForSingleObject_1: int;

  anon0:
    KeWaitForSingleObject_1 := actual_KeWaitForSingleObject_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} KeWaitForSingleObject_1 == 0;
    thread_status := 1;
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} KeWaitForSingleObject_1 != 0;
    call {:si_unique_call 642} SLIC_EXIT_ROUTINE(strConst__li2bpl14);
    goto L2;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_copy_next) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(irp_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 2 ==> yogi_error == 1;
  free ensures {:va_keep} old(return_state) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_IoSetDeviceInterfaceState_exit"} {:osmodel} SLIC_IoSetDeviceInterfaceState_exit(actual_caller_16: int, actual_IoSetDeviceInterfaceState_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_IoSetDeviceInterfaceState_exit"} {:osmodel} SLIC_IoSetDeviceInterfaceState_exit(actual_caller_16: int, actual_IoSetDeviceInterfaceState_1: int)
{
  var {:scalar} IoSetDeviceInterfaceState_1: int;

  anon0:
    IoSetDeviceInterfaceState_1 := actual_IoSetDeviceInterfaceState_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} IoSetDeviceInterfaceState_1 != 0;
    call {:si_unique_call 643} SLIC_EXIT_ROUTINE(strConst__li2bpl14);
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} IoSetDeviceInterfaceState_1 == 0;
    goto L2;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_78: int;

  anon0:
    call {:si_unique_call 644} vslice_dummy_var_78 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_293: int, actual_sdv_294: int) returns (Tmp_445: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_293: int, actual_sdv_294: int) returns (Tmp_445: int)
{
  var {:scalar} sdv_295: int;

  anon0:
    call {:si_unique_call 645} sdv_295 := __HAVOC_malloc(4);
    call {:si_unique_call 646} Tmp_445 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_445 != 0;
    assume Tmp_445 > 0;
    assume {:nonnull} sdv_295 != 0;
    assume sdv_295 > 0;
    return;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_79: int;

  anon0:
    call {:si_unique_call 647} vslice_dummy_var_79 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int)
{
  var vslice_dummy_var_80: int;

  anon0:
    call {:si_unique_call 648} vslice_dummy_var_80 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_81: int;

  anon0:
    call {:si_unique_call 649} vslice_dummy_var_81 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_455: int);
  free ensures {:va_keep} Tmp_455 == actual_Address;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_455: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    record := Address;
    Tmp_455 := record;
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_82: int;

  anon0:
    call {:si_unique_call 650} vslice_dummy_var_82 := __HAVOC_malloc(4);
    p := actual_p;
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_459: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_459 == -1073741824 || Tmp_459 == -1073741771 || Tmp_459 == -1073741670 || Tmp_459 == -1073741823 || Tmp_459 == 0 || Tmp_459 == -1073741808 || Tmp_459 == -1073741810 || Tmp_459 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_459: int)
{
  var {:scalar} status: int;
  var {:pointer} p1: int;
  var {:pointer} p2: int;

  anon0:
    p1 := actual_p1;
    p2 := actual_p2;
    status := 0;
    call {:si_unique_call 651} sdv_stub_add_begin();
    call {:si_unique_call 652} status := Avc_PnpAddDevice(p1, p2);
    call {:si_unique_call 653} sdv_stub_add_end();
    Tmp_459 := status;
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_461: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_461 == 1 || Tmp_461 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_461: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 654} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_461 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_461 := 0;
    goto L1;
}



procedure {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int)
{
  var vslice_dummy_var_83: int;

  anon0:
    call {:si_unique_call 655} vslice_dummy_var_83 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_465: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_465: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_465 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_465 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_465 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject_2: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_17: int) returns (Tmp_467: int);
  free ensures {:va_keep} Tmp_467 == -1073741824 || Tmp_467 == -1073741771 || Tmp_467 == -1073741670 || Tmp_467 == -1073741823 || Tmp_467 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject_2: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_17: int) returns (Tmp_467: int)
{
  var {:pointer} DeviceObject_17: int;

  anon0:
    DeviceObject_17 := actual_DeviceObject_17;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    Tmp_467 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    Tmp_467 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    Tmp_467 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    Tmp_467 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    goto L21;

  L21:
    Tmp_467 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    goto L21;
}



procedure {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context_2: int)
{
  var vslice_dummy_var_84: int;

  anon0:
    call {:si_unique_call 656} vslice_dummy_var_84 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_85: int;

  anon0:
    call {:si_unique_call 657} vslice_dummy_var_85 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags_1: int, actual_Size: int, actual_Tag: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags_1: int, actual_Size: int, actual_Tag: int, actual_Depth: int)
{
  var vslice_dummy_var_86: int;

  anon0:
    call {:si_unique_call 658} vslice_dummy_var_86 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_475: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_475: int)
{
  var {:scalar} r: int;
  var {:pointer} pirp_2: int;
  var {:scalar} CancelRoutine: int;

  anon0:
    pirp_2 := actual_pirp_2;
    CancelRoutine := actual_CancelRoutine;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    Tmp_475 := r;
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int)
{
  var {:pointer} r_1: int;
  var {:pointer} pirp_3: int;
  var vslice_dummy_var_87: int;

  anon0:
    call {:si_unique_call 659} vslice_dummy_var_87 := __HAVOC_malloc(4);
    pirp_3 := actual_pirp_3;
    assume {:nonnull} pirp_3 != 0;
    assume pirp_3 > 0;
    r_1 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_3)))];
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r_1)] := 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r_1)] := 1;
    goto L1;

  anon13_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r_1)] := 3;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(r_1)] := 2;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int)
{
  var vslice_dummy_var_88: int;

  anon0:
    call {:si_unique_call 660} vslice_dummy_var_88 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_3: int, actual_Environment: int) returns (Tmp_481: int);
  free ensures {:va_keep} Tmp_481 == 0 || Tmp_481 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_3: int, actual_Environment: int) returns (Tmp_481: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_481 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_481 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int)
{
  var {:pointer} pirp_5: int;
  var vslice_dummy_var_89: int;

  anon0:
    call {:si_unique_call 661} vslice_dummy_var_89 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(pirp_5))] := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(pirp_5))] := -1073741637;
    goto L1;
}



procedure {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_485: int);
  free ensures {:va_keep} Tmp_485 == 0 || Tmp_485 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_485: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_485 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_485 := -1073741823;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, SLAM_guard_S_0, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, yogi_error, thread_status, return_state, lowerDriverFailed, irp_copy_next, irp_status, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} u: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;

  anon0:
    call {:si_unique_call 662} u := __HAVOC_malloc(12);
    call {:si_unique_call 663} vslice_dummy_var_90 := __HAVOC_malloc(4);
    SLAM_guard_S_0 := sdv_irp;
    assume SLAM_guard_S_0 != 0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    assume {:nonnull} KdDebuggerEnabled != 0;
    assume KdDebuggerEnabled > 0;
    assume {:nonnull} KdDebuggerNotPresent != 0;
    assume KdDebuggerNotPresent > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 664} sdv_RunUnload(sdv_driver_object);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    goto L1;

  anon17_Then:
    call {:si_unique_call 665} sdv_stub_driver_init();
    call {:si_unique_call 666} vslice_dummy_var_92 := sdv_RunStartDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    call {:si_unique_call 667} vslice_dummy_var_91 := sdv_RunAddDevice(sdv_driver_object, sdv_p_devobj_pdo);
    goto L1;

  anon19_Then:
    call {:si_unique_call 668} vslice_dummy_var_94 := DriverEntry(sdv_driver_object, u);
    goto L1;

  anon15_Then:
    call {:si_unique_call 669} sdv_stub_driver_init();
    call {:si_unique_call 670} vslice_dummy_var_93 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_18: int, actual_Irp_24: int) returns (Tmp_489: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_489 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_18: int, actual_Irp_24: int) returns (Tmp_489: int)
{
  var {:dopa} {:scalar} completion: int;
  var {:scalar} status_2: int;
  var {:pointer} Irp_24: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_2627: int;
  var vslice_dummy_var_2628: int;
  var vslice_dummy_var_2629: int;
  var vslice_dummy_var_2630: int;

  anon0:
    call {:si_unique_call 671} completion := __HAVOC_malloc(4);
    Irp_24 := actual_Irp_24;
    assume {:nonnull} completion != 0;
    assume completion > 0;
    status_2 := 259;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_24))] := 259;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_24)] := 1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 259;
    goto L19;

  L19:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L21;

  L21:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L23;

  L23:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  L29:
    Tmp_489 := status_2;
    return;

  anon48_Then:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2627;
    call {:si_unique_call 672} vslice_dummy_var_95 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_24, vslice_dummy_var_2627, completion);
    goto L29;

  anon47_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_24;
    goto L23;

  anon46_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_24;
    goto L21;

  anon65_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_24;
    goto L19;

  anon61_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_24))] := -1073741823;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_24)] := 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741823;
    goto L58;

  L58:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L60;

  L60:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L62;

  L62:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_invoke_on_error != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2628;
    call {:si_unique_call 673} vslice_dummy_var_98 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_24, vslice_dummy_var_2628, completion);
    goto L29;

  anon60_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon59_Then:
    assume {:partition} sdv_invoke_on_error == 0;
    goto L29;

  anon58_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_24;
    goto L62;

  anon57_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_24;
    goto L60;

  anon66_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_24;
    goto L58;

  anon62_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_24))] := -1073741536;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_24)] := 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741536;
    goto L32;

  L32:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L34;

  L34:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L36;

  L36:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_invoke_on_cancel != 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2629;
    call {:si_unique_call 674} vslice_dummy_var_96 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_24, vslice_dummy_var_2629, completion);
    goto L29;

  anon52_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon51_Then:
    assume {:partition} sdv_invoke_on_cancel == 0;
    goto L29;

  anon50_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_24;
    goto L36;

  anon49_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_24;
    goto L34;

  anon64_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_24;
    goto L32;

  anon45_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_24))] := 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_24)] := 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 0;
    goto L45;

  L45:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L47;

  L47:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L49;

  L49:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_invoke_on_success != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2630;
    call {:si_unique_call 675} vslice_dummy_var_97 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_24, vslice_dummy_var_2630, completion);
    goto L29;

  anon56_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon55_Then:
    assume {:partition} sdv_invoke_on_success == 0;
    goto L29;

  anon54_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_24;
    goto L49;

  anon53_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_24;
    goto L47;

  anon63_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_24;
    goto L45;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_19: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_19: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_2: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 676} State := __HAVOC_malloc(8);
    call {:si_unique_call 677} r_2 := __HAVOC_malloc(8);
    call {:si_unique_call 678} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_492: int);
  free ensures {:va_keep} Tmp_492 == 1 || Tmp_492 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_492: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_492 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_492 := 0;
    goto L1;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_4: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_4: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_6: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_4: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_99: int;

  anon0:
    call {:si_unique_call 679} vslice_dummy_var_99 := __HAVOC_malloc(4);
    pirp_6 := actual_pirp_6;
    CompletionRoutine := actual_CompletionRoutine;
    Context_4 := actual_Context_4;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 680} irpSp := sdv_IoGetNextIrpStackLocation(pirp_6);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpSp)] := CompletionRoutine;
    sdv_compFset := 1;
    sdv_invoke_on_success := InvokeOnSuccess;
    sdv_invoke_on_error := InvokeOnError;
    sdv_invoke_on_cancel := InvokeOnCancel;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_100: int;

  anon0:
    call {:si_unique_call 681} vslice_dummy_var_100 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin()
{
  var vslice_dummy_var_101: int;

  anon0:
    call {:si_unique_call 682} vslice_dummy_var_101 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_9: int) returns (Tmp_500: int);
  free ensures {:va_keep} Tmp_500 == 1 || Tmp_500 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_9: int) returns (Tmp_500: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_500 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_500 := 0;
    goto L1;
}



procedure {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName: int) returns (Tmp_502: int);
  free ensures {:va_keep} Tmp_502 == 0 || Tmp_502 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName: int) returns (Tmp_502: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_502 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_502 := -1073741823;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_25: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_25: int)
{
  var vslice_dummy_var_102: int;

  anon0:
    call {:si_unique_call 683} vslice_dummy_var_102 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_506: int);
  modifies thread_status;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} thread_status == 1;
  free ensures {:va_keep} Tmp_506 == 258 || Tmp_506 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_506: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_506 := 258;
    goto L1;

  L1:
    call {:si_unique_call 684} SLIC_KeWaitForSingleObject_exit(0, Tmp_506);
    return;

  anon6_Then:
    Tmp_506 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_506 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_20: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_20: int)
{
  var vslice_dummy_var_103: int;

  anon0:
    call {:si_unique_call 685} vslice_dummy_var_103 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event_4: int, actual_Increment: int, actual_Wait: int) returns (Tmp_510: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event_4: int, actual_Increment: int, actual_Wait: int) returns (Tmp_510: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event_4: int;

  anon0:
    Event_4 := actual_Event_4;
    assume {:nonnull} Event_4 != 0;
    assume Event_4 > 0;
    havoc OldState;
    assume {:nonnull} Event_4 != 0;
    assume Event_4 > 0;
    Tmp_510 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_514: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_514: int)
{
  var {:pointer} pirp_7: int;

  anon0:
    pirp_7 := actual_pirp_7;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    Tmp_514 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_7)))];
    return;
}



procedure {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_1: int, actual_n: int, actual_a: int, actual_r_3: int, actual_s_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_InitializeObjectAttributes"} {:osmodel} sdv_InitializeObjectAttributes(actual_p_1: int, actual_n: int, actual_a: int, actual_r_3: int, actual_s_1: int)
{
  var vslice_dummy_var_104: int;

  anon0:
    call {:si_unique_call 686} vslice_dummy_var_104 := __HAVOC_malloc(4);
    return;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_518: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_S_0, irp_copy_next, thread_status, irp_status, return_state, lowerDriverFailed, yogi_error, Mem_T.CurrentStackLocation_unnamed_tag_7, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} thread_status == 1 || thread_status == 0;
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_518: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_520: int;
  var {:scalar} Tmp_521: int;
  var boogieTmp: int;
  var KsDstPinDescriptor__Loc: int;
  var BUS1394_CLASS_GUID__Loc: int;
  var GUID_61883_CLASS__Loc: int;
  var KsSrcPinDescriptor__Loc: int;
  var GUID_VIRTUAL_AVC_CLASS__Loc: int;
  var GUID_AVC_CLASS__Loc: int;
  var GUID_PCMCIA_BUS_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_PCMCIA__Loc: int;
  var GUID_TRANSLATOR_INTERFACE_STANDARD__Loc: int;
  var GUID_PCI_VIRTUALIZATION_INTERFACE__Loc: int;
  var GUID_ARBITER_INTERFACE_STANDARD__Loc: int;
  var GUID_QUERY_CRASHDUMP_FUNCTIONS__Loc: int;
  var GUID_ACPI_CMOS_INTERFACE_STANDARD__Loc: int;
  var AvcPeerInstanceList__Loc: int;
  var GUID_BUS_TYPE_1394__Loc: int;
  var GUID_AGP_TARGET_BUS_INTERFACE_STANDARD__Loc: int;
  var GUID_TARGET_DEVICE_REMOVE_CANCELLED__Loc: int;
  var GUID_BUS_TYPE_ISAPNP__Loc: int;
  var AvcAlternateOpcodePool__Loc: int;
  var GUID_MF_ENUMERATION_INTERFACE__Loc: int;
  var GUID_LEGACY_DEVICE_DETECTION_STANDARD__Loc: int;
  var GUID_PCC_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_INTERFACE_STANDARD__Loc: int;
  var GUID_PNP_POWER_SETTING_CHANGE__Loc: int;
  var GUID_BUS_TYPE_ACPI__Loc: int;
  var GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE__Loc: int;
  var GUID_BUS_TYPE_DOT4PRT__Loc: int;
  var GUID_BUS_TYPE_EISA__Loc: int;
  var AvcQueryTablePool__Loc: int;
  var GUID_ACPI_REGS_INTERFACE_STANDARD__Loc: int;
  var GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED__Loc: int;
  var GUID_ACPI_INTERFACE_STANDARD2__Loc: int;
  var GUID_PARTITION_UNIT_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_IRDA__Loc: int;
  var AvcVirtualInstanceList__Loc: int;
  var GUID_PCI_BUS_INTERFACE_STANDARD2__Loc: int;
  var GUID_WUDF_DEVICE_HOST_PROBLEM__Loc: int;
  var GUID_DEVICE_INTERFACE_REMOVAL__Loc: int;
  var GUID_BUS_TYPE_SERENUM__Loc: int;
  var GUID_PCI_DEVICE_PRESENT_INTERFACE__Loc: int;
  var GUID_BUS_TYPE_MCA__Loc: int;
  var GUID_POWER_DEVICE_TIMEOUTS__Loc: int;
  var GUID_THERMAL_COOLING_INTERFACE__Loc: int;
  var AvcFcpPool__Loc: int;
  var GUID_HWPROFILE_CHANGE_CANCELLED__Loc: int;
  var GUID_PNP_LOCATION_INTERFACE__Loc: int;
  var GUID_MSIX_TABLE_CONFIG_INTERFACE__Loc: int;
  var GUID_BUS_TYPE_INTERNAL__Loc: int;
  var GUID_BUS_TYPE_LPTENUM__Loc: int;
  var GUID_HWPROFILE_CHANGE_COMPLETE__Loc: int;
  var GUID_DEVICE_INTERFACE_ARRIVAL__Loc: int;
  var GUID_BUS_TYPE_AVC__Loc: int;
  var GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_USB__Loc: int;
  var AvcCommandContextPool__Loc: int;
  var GUID_INT_ROUTE_INTERFACE_STANDARD__Loc: int;
  var GUID_PROCESSOR_PCC_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_USBPRINT__Loc: int;
  var GUID_BUS_TYPE_PCI__Loc: int;
  var GUID_TARGET_DEVICE_QUERY_REMOVE__Loc: int;
  var GUID_PCI_BUS_INTERFACE_STANDARD__Loc: int;
  var GUID_HWPROFILE_QUERY_CHANGE__Loc: int;
  var GUID_BUS_TYPE_SW_DEVICE__Loc: int;
  var AvcCommandLinkPool__Loc: int;
  var GUID_POWER_DEVICE_ENABLE__Loc: int;
  var GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE__Loc: int;
  var GUID_PNP_CUSTOM_NOTIFICATION__Loc: int;
  var GUID_BUS_TYPE_SD__Loc: int;
  var GUID_PNP_POWER_NOTIFICATION__Loc: int;
  var GUID_PCC_INTERFACE_INTERNAL__Loc: int;
  var GUID_D3COLD_SUPPORT_INTERFACE__Loc: int;
  var GUID_REENUMERATE_SELF_INTERFACE_STANDARD__Loc: int;
  var GUID_BUS_TYPE_HID__Loc: int;
  var GUID_TARGET_DEVICE_REMOVE_COMPLETE__Loc: int;
  var GUID_ACPI_INTERFACE_STANDARD__Loc: int;
  var GUID_POWER_DEVICE_WAKE_ENABLE__Loc: int;
  var SLAM_guard_S_0_init__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_fx_dev_object__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_2631: int;
  var vslice_dummy_var_2632: int;
  var vslice_dummy_var_2633: int;
  var vslice_dummy_var_2634: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 687} KsDstPinDescriptor__Loc := __HAVOC_malloc_or_null(52);
    assume KsDstPinDescriptor__Loc == KsDstPinDescriptor;
    assume KsDstPinDescriptor != 0;
    call {:si_unique_call 688} BUS1394_CLASS_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume BUS1394_CLASS_GUID__Loc == BUS1394_CLASS_GUID;
    assume BUS1394_CLASS_GUID != 0;
    call {:si_unique_call 689} GUID_61883_CLASS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_61883_CLASS__Loc == GUID_61883_CLASS;
    assume GUID_61883_CLASS != 0;
    call {:si_unique_call 690} KsSrcPinDescriptor__Loc := __HAVOC_malloc_or_null(52);
    assume KsSrcPinDescriptor__Loc == KsSrcPinDescriptor;
    assume KsSrcPinDescriptor != 0;
    call {:si_unique_call 691} GUID_VIRTUAL_AVC_CLASS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_VIRTUAL_AVC_CLASS__Loc == GUID_VIRTUAL_AVC_CLASS;
    assume GUID_VIRTUAL_AVC_CLASS != 0;
    call {:si_unique_call 692} GUID_AVC_CLASS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_AVC_CLASS__Loc == GUID_AVC_CLASS;
    assume GUID_AVC_CLASS != 0;
    call {:si_unique_call 693} GUID_PCMCIA_BUS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCMCIA_BUS_INTERFACE_STANDARD__Loc == GUID_PCMCIA_BUS_INTERFACE_STANDARD;
    assume GUID_PCMCIA_BUS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 694} GUID_BUS_TYPE_PCMCIA__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_PCMCIA__Loc == GUID_BUS_TYPE_PCMCIA;
    assume GUID_BUS_TYPE_PCMCIA != 0;
    call {:si_unique_call 695} GUID_TRANSLATOR_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TRANSLATOR_INTERFACE_STANDARD__Loc == GUID_TRANSLATOR_INTERFACE_STANDARD;
    assume GUID_TRANSLATOR_INTERFACE_STANDARD != 0;
    call {:si_unique_call 696} GUID_PCI_VIRTUALIZATION_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCI_VIRTUALIZATION_INTERFACE__Loc == GUID_PCI_VIRTUALIZATION_INTERFACE;
    assume GUID_PCI_VIRTUALIZATION_INTERFACE != 0;
    call {:si_unique_call 697} GUID_ARBITER_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ARBITER_INTERFACE_STANDARD__Loc == GUID_ARBITER_INTERFACE_STANDARD;
    assume GUID_ARBITER_INTERFACE_STANDARD != 0;
    call {:si_unique_call 698} GUID_QUERY_CRASHDUMP_FUNCTIONS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_QUERY_CRASHDUMP_FUNCTIONS__Loc == GUID_QUERY_CRASHDUMP_FUNCTIONS;
    assume GUID_QUERY_CRASHDUMP_FUNCTIONS != 0;
    call {:si_unique_call 699} GUID_ACPI_CMOS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACPI_CMOS_INTERFACE_STANDARD__Loc == GUID_ACPI_CMOS_INTERFACE_STANDARD;
    assume GUID_ACPI_CMOS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 700} AvcPeerInstanceList__Loc := __HAVOC_malloc_or_null(8);
    assume AvcPeerInstanceList__Loc == AvcPeerInstanceList;
    assume AvcPeerInstanceList != 0;
    call {:si_unique_call 701} GUID_BUS_TYPE_1394__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_1394__Loc == GUID_BUS_TYPE_1394;
    assume GUID_BUS_TYPE_1394 != 0;
    call {:si_unique_call 702} GUID_AGP_TARGET_BUS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_AGP_TARGET_BUS_INTERFACE_STANDARD__Loc == GUID_AGP_TARGET_BUS_INTERFACE_STANDARD;
    assume GUID_AGP_TARGET_BUS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 703} GUID_TARGET_DEVICE_REMOVE_CANCELLED__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TARGET_DEVICE_REMOVE_CANCELLED__Loc == GUID_TARGET_DEVICE_REMOVE_CANCELLED;
    assume GUID_TARGET_DEVICE_REMOVE_CANCELLED != 0;
    call {:si_unique_call 704} GUID_BUS_TYPE_ISAPNP__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_ISAPNP__Loc == GUID_BUS_TYPE_ISAPNP;
    assume GUID_BUS_TYPE_ISAPNP != 0;
    call {:si_unique_call 705} AvcAlternateOpcodePool__Loc := __HAVOC_malloc_or_null(108);
    assume AvcAlternateOpcodePool__Loc == AvcAlternateOpcodePool;
    assume AvcAlternateOpcodePool != 0;
    call {:si_unique_call 706} GUID_MF_ENUMERATION_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_MF_ENUMERATION_INTERFACE__Loc == GUID_MF_ENUMERATION_INTERFACE;
    assume GUID_MF_ENUMERATION_INTERFACE != 0;
    call {:si_unique_call 707} GUID_LEGACY_DEVICE_DETECTION_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_LEGACY_DEVICE_DETECTION_STANDARD__Loc == GUID_LEGACY_DEVICE_DETECTION_STANDARD;
    assume GUID_LEGACY_DEVICE_DETECTION_STANDARD != 0;
    call {:si_unique_call 708} GUID_PCC_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCC_INTERFACE_STANDARD__Loc == GUID_PCC_INTERFACE_STANDARD;
    assume GUID_PCC_INTERFACE_STANDARD != 0;
    call {:si_unique_call 709} GUID_BUS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_INTERFACE_STANDARD__Loc == GUID_BUS_INTERFACE_STANDARD;
    assume GUID_BUS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 710} GUID_PNP_POWER_SETTING_CHANGE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PNP_POWER_SETTING_CHANGE__Loc == GUID_PNP_POWER_SETTING_CHANGE;
    assume GUID_PNP_POWER_SETTING_CHANGE != 0;
    call {:si_unique_call 711} GUID_BUS_TYPE_ACPI__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_ACPI__Loc == GUID_BUS_TYPE_ACPI;
    assume GUID_BUS_TYPE_ACPI != 0;
    call {:si_unique_call 712} GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE__Loc == GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE;
    assume GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE != 0;
    call {:si_unique_call 713} GUID_BUS_TYPE_DOT4PRT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_DOT4PRT__Loc == GUID_BUS_TYPE_DOT4PRT;
    assume GUID_BUS_TYPE_DOT4PRT != 0;
    call {:si_unique_call 714} GUID_BUS_TYPE_EISA__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_EISA__Loc == GUID_BUS_TYPE_EISA;
    assume GUID_BUS_TYPE_EISA != 0;
    call {:si_unique_call 715} AvcQueryTablePool__Loc := __HAVOC_malloc_or_null(108);
    assume AvcQueryTablePool__Loc == AvcQueryTablePool;
    assume AvcQueryTablePool != 0;
    call {:si_unique_call 716} GUID_ACPI_REGS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACPI_REGS_INTERFACE_STANDARD__Loc == GUID_ACPI_REGS_INTERFACE_STANDARD;
    assume GUID_ACPI_REGS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 717} GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED__Loc == GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED;
    assume GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED != 0;
    call {:si_unique_call 718} GUID_ACPI_INTERFACE_STANDARD2__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACPI_INTERFACE_STANDARD2__Loc == GUID_ACPI_INTERFACE_STANDARD2;
    assume GUID_ACPI_INTERFACE_STANDARD2 != 0;
    call {:si_unique_call 719} GUID_PARTITION_UNIT_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PARTITION_UNIT_INTERFACE_STANDARD__Loc == GUID_PARTITION_UNIT_INTERFACE_STANDARD;
    assume GUID_PARTITION_UNIT_INTERFACE_STANDARD != 0;
    call {:si_unique_call 720} GUID_BUS_TYPE_IRDA__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_IRDA__Loc == GUID_BUS_TYPE_IRDA;
    assume GUID_BUS_TYPE_IRDA != 0;
    call {:si_unique_call 721} AvcVirtualInstanceList__Loc := __HAVOC_malloc_or_null(8);
    assume AvcVirtualInstanceList__Loc == AvcVirtualInstanceList;
    assume AvcVirtualInstanceList != 0;
    call {:si_unique_call 722} GUID_PCI_BUS_INTERFACE_STANDARD2__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCI_BUS_INTERFACE_STANDARD2__Loc == GUID_PCI_BUS_INTERFACE_STANDARD2;
    assume GUID_PCI_BUS_INTERFACE_STANDARD2 != 0;
    call {:si_unique_call 723} GUID_WUDF_DEVICE_HOST_PROBLEM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_WUDF_DEVICE_HOST_PROBLEM__Loc == GUID_WUDF_DEVICE_HOST_PROBLEM;
    assume GUID_WUDF_DEVICE_HOST_PROBLEM != 0;
    call {:si_unique_call 724} GUID_DEVICE_INTERFACE_REMOVAL__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICE_INTERFACE_REMOVAL__Loc == GUID_DEVICE_INTERFACE_REMOVAL;
    assume GUID_DEVICE_INTERFACE_REMOVAL != 0;
    call {:si_unique_call 725} GUID_BUS_TYPE_SERENUM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_SERENUM__Loc == GUID_BUS_TYPE_SERENUM;
    assume GUID_BUS_TYPE_SERENUM != 0;
    call {:si_unique_call 726} GUID_PCI_DEVICE_PRESENT_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCI_DEVICE_PRESENT_INTERFACE__Loc == GUID_PCI_DEVICE_PRESENT_INTERFACE;
    assume GUID_PCI_DEVICE_PRESENT_INTERFACE != 0;
    call {:si_unique_call 727} GUID_BUS_TYPE_MCA__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_MCA__Loc == GUID_BUS_TYPE_MCA;
    assume GUID_BUS_TYPE_MCA != 0;
    call {:si_unique_call 728} GUID_POWER_DEVICE_TIMEOUTS__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWER_DEVICE_TIMEOUTS__Loc == GUID_POWER_DEVICE_TIMEOUTS;
    assume GUID_POWER_DEVICE_TIMEOUTS != 0;
    call {:si_unique_call 729} GUID_THERMAL_COOLING_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_THERMAL_COOLING_INTERFACE__Loc == GUID_THERMAL_COOLING_INTERFACE;
    assume GUID_THERMAL_COOLING_INTERFACE != 0;
    call {:si_unique_call 730} AvcFcpPool__Loc := __HAVOC_malloc_or_null(108);
    assume AvcFcpPool__Loc == AvcFcpPool;
    assume AvcFcpPool != 0;
    call {:si_unique_call 731} GUID_HWPROFILE_CHANGE_CANCELLED__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_HWPROFILE_CHANGE_CANCELLED__Loc == GUID_HWPROFILE_CHANGE_CANCELLED;
    assume GUID_HWPROFILE_CHANGE_CANCELLED != 0;
    call {:si_unique_call 732} GUID_PNP_LOCATION_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PNP_LOCATION_INTERFACE__Loc == GUID_PNP_LOCATION_INTERFACE;
    assume GUID_PNP_LOCATION_INTERFACE != 0;
    call {:si_unique_call 733} GUID_MSIX_TABLE_CONFIG_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_MSIX_TABLE_CONFIG_INTERFACE__Loc == GUID_MSIX_TABLE_CONFIG_INTERFACE;
    assume GUID_MSIX_TABLE_CONFIG_INTERFACE != 0;
    call {:si_unique_call 734} GUID_BUS_TYPE_INTERNAL__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_INTERNAL__Loc == GUID_BUS_TYPE_INTERNAL;
    assume GUID_BUS_TYPE_INTERNAL != 0;
    call {:si_unique_call 735} GUID_BUS_TYPE_LPTENUM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_LPTENUM__Loc == GUID_BUS_TYPE_LPTENUM;
    assume GUID_BUS_TYPE_LPTENUM != 0;
    call {:si_unique_call 736} GUID_HWPROFILE_CHANGE_COMPLETE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_HWPROFILE_CHANGE_COMPLETE__Loc == GUID_HWPROFILE_CHANGE_COMPLETE;
    assume GUID_HWPROFILE_CHANGE_COMPLETE != 0;
    call {:si_unique_call 737} GUID_DEVICE_INTERFACE_ARRIVAL__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICE_INTERFACE_ARRIVAL__Loc == GUID_DEVICE_INTERFACE_ARRIVAL;
    assume GUID_DEVICE_INTERFACE_ARRIVAL != 0;
    call {:si_unique_call 738} GUID_BUS_TYPE_AVC__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_AVC__Loc == GUID_BUS_TYPE_AVC;
    assume GUID_BUS_TYPE_AVC != 0;
    call {:si_unique_call 739} GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD__Loc == GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD;
    assume GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD != 0;
    call {:si_unique_call 740} GUID_BUS_TYPE_USB__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_USB__Loc == GUID_BUS_TYPE_USB;
    assume GUID_BUS_TYPE_USB != 0;
    call {:si_unique_call 741} AvcCommandContextPool__Loc := __HAVOC_malloc_or_null(108);
    assume AvcCommandContextPool__Loc == AvcCommandContextPool;
    assume AvcCommandContextPool != 0;
    call {:si_unique_call 742} GUID_INT_ROUTE_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_INT_ROUTE_INTERFACE_STANDARD__Loc == GUID_INT_ROUTE_INTERFACE_STANDARD;
    assume GUID_INT_ROUTE_INTERFACE_STANDARD != 0;
    call {:si_unique_call 743} GUID_PROCESSOR_PCC_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PROCESSOR_PCC_INTERFACE_STANDARD__Loc == GUID_PROCESSOR_PCC_INTERFACE_STANDARD;
    assume GUID_PROCESSOR_PCC_INTERFACE_STANDARD != 0;
    call {:si_unique_call 744} GUID_BUS_TYPE_USBPRINT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_USBPRINT__Loc == GUID_BUS_TYPE_USBPRINT;
    assume GUID_BUS_TYPE_USBPRINT != 0;
    call {:si_unique_call 745} GUID_BUS_TYPE_PCI__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_PCI__Loc == GUID_BUS_TYPE_PCI;
    assume GUID_BUS_TYPE_PCI != 0;
    call {:si_unique_call 746} GUID_TARGET_DEVICE_QUERY_REMOVE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TARGET_DEVICE_QUERY_REMOVE__Loc == GUID_TARGET_DEVICE_QUERY_REMOVE;
    assume GUID_TARGET_DEVICE_QUERY_REMOVE != 0;
    call {:si_unique_call 747} GUID_PCI_BUS_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCI_BUS_INTERFACE_STANDARD__Loc == GUID_PCI_BUS_INTERFACE_STANDARD;
    assume GUID_PCI_BUS_INTERFACE_STANDARD != 0;
    call {:si_unique_call 748} GUID_HWPROFILE_QUERY_CHANGE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_HWPROFILE_QUERY_CHANGE__Loc == GUID_HWPROFILE_QUERY_CHANGE;
    assume GUID_HWPROFILE_QUERY_CHANGE != 0;
    call {:si_unique_call 749} GUID_BUS_TYPE_SW_DEVICE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_SW_DEVICE__Loc == GUID_BUS_TYPE_SW_DEVICE;
    assume GUID_BUS_TYPE_SW_DEVICE != 0;
    call {:si_unique_call 750} AvcCommandLinkPool__Loc := __HAVOC_malloc_or_null(108);
    assume AvcCommandLinkPool__Loc == AvcCommandLinkPool;
    assume AvcCommandLinkPool != 0;
    call {:si_unique_call 751} GUID_POWER_DEVICE_ENABLE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWER_DEVICE_ENABLE__Loc == GUID_POWER_DEVICE_ENABLE;
    assume GUID_POWER_DEVICE_ENABLE != 0;
    call {:si_unique_call 752} GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE__Loc == GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE;
    assume GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE != 0;
    call {:si_unique_call 753} GUID_PNP_CUSTOM_NOTIFICATION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PNP_CUSTOM_NOTIFICATION__Loc == GUID_PNP_CUSTOM_NOTIFICATION;
    assume GUID_PNP_CUSTOM_NOTIFICATION != 0;
    call {:si_unique_call 754} GUID_BUS_TYPE_SD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_SD__Loc == GUID_BUS_TYPE_SD;
    assume GUID_BUS_TYPE_SD != 0;
    call {:si_unique_call 755} GUID_PNP_POWER_NOTIFICATION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PNP_POWER_NOTIFICATION__Loc == GUID_PNP_POWER_NOTIFICATION;
    assume GUID_PNP_POWER_NOTIFICATION != 0;
    call {:si_unique_call 756} GUID_PCC_INTERFACE_INTERNAL__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_PCC_INTERFACE_INTERNAL__Loc == GUID_PCC_INTERFACE_INTERNAL;
    assume GUID_PCC_INTERFACE_INTERNAL != 0;
    call {:si_unique_call 757} GUID_D3COLD_SUPPORT_INTERFACE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_D3COLD_SUPPORT_INTERFACE__Loc == GUID_D3COLD_SUPPORT_INTERFACE;
    assume GUID_D3COLD_SUPPORT_INTERFACE != 0;
    call {:si_unique_call 758} GUID_REENUMERATE_SELF_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_REENUMERATE_SELF_INTERFACE_STANDARD__Loc == GUID_REENUMERATE_SELF_INTERFACE_STANDARD;
    assume GUID_REENUMERATE_SELF_INTERFACE_STANDARD != 0;
    call {:si_unique_call 759} GUID_BUS_TYPE_HID__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_BUS_TYPE_HID__Loc == GUID_BUS_TYPE_HID;
    assume GUID_BUS_TYPE_HID != 0;
    call {:si_unique_call 760} GUID_TARGET_DEVICE_REMOVE_COMPLETE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_TARGET_DEVICE_REMOVE_COMPLETE__Loc == GUID_TARGET_DEVICE_REMOVE_COMPLETE;
    assume GUID_TARGET_DEVICE_REMOVE_COMPLETE != 0;
    call {:si_unique_call 761} GUID_ACPI_INTERFACE_STANDARD__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_ACPI_INTERFACE_STANDARD__Loc == GUID_ACPI_INTERFACE_STANDARD;
    assume GUID_ACPI_INTERFACE_STANDARD != 0;
    call {:si_unique_call 762} GUID_POWER_DEVICE_WAKE_ENABLE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_POWER_DEVICE_WAKE_ENABLE__Loc == GUID_POWER_DEVICE_WAKE_ENABLE;
    assume GUID_POWER_DEVICE_WAKE_ENABLE != 0;
    call {:si_unique_call 763} SLAM_guard_S_0_init__Loc := __HAVOC_malloc_or_null(240);
    assume SLAM_guard_S_0_init__Loc == SLAM_guard_S_0_init;
    assume SLAM_guard_S_0_init != 0;
    call {:si_unique_call 764} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 765} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 766} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 767} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 768} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 769} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 770} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 771} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 772} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 773} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 774} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 775} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 776} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 777} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 778} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 779} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 780} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 781} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 782} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(44);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 783} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 784} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 785} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 786} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 787} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 788} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 789} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 790} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 791} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 792} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 793} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 794} sdv_fx_dev_object__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_fx_dev_object__Loc == sdv_fx_dev_object;
    assume sdv_fx_dev_object != 0;
    call {:si_unique_call 795} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 796} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 797} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 798} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 799} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 800} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 801} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 802} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 803} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 804} boogieTmp := __HAVOC_malloc_or_null(28);
    call {:si_unique_call 805} boogieTmp := __HAVOC_malloc_or_null(68);
    call {:si_unique_call 806} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 807} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 808} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerNotPresent == boogieTmp;
    call {:si_unique_call 809} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerEnabled == boogieTmp;
    call {:si_unique_call 810} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 811} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 812} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 813} boogieTmp := __HAVOC_malloc_or_null(240);
    assume sicrni == boogieTmp;
    call {:si_unique_call 814} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 815} vslice_dummy_var_2631 := __HAVOC_malloc(4);
    call {:si_unique_call 816} vslice_dummy_var_360 := __HAVOC_malloc(112);
    call {:si_unique_call 817} vslice_dummy_var_2632 := __HAVOC_malloc(4);
    call {:si_unique_call 818} vslice_dummy_var_2633 := __HAVOC_malloc(64);
    call {:si_unique_call 819} vslice_dummy_var_2634 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 820} corralExtraInit();
    call {:si_unique_call 821} corralExplainErrorInit();
    call {:si_unique_call 822} _sdv_init12();
    call {:si_unique_call 823} _sdv_init1();
    call {:si_unique_call 824} _sdv_init4();
    call {:si_unique_call 825} _sdv_init5();
    call {:si_unique_call 826} _sdv_init3();
    call {:si_unique_call 827} _sdv_init6();
    call {:si_unique_call 828} _sdv_init10();
    call {:si_unique_call 829} _sdv_init9();
    call {:si_unique_call 830} _sdv_init7();
    call {:si_unique_call 831} _sdv_init8();
    call {:si_unique_call 832} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_521 := 0;
    goto L35;

  L35:
    assume Tmp_521 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_520 := 0;
    goto L39;

  L39:
    assume Tmp_520 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(sdv_irp)))] := sdv_harnessStackLocation;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(sdv_other_irp)))] := sdv_other_harnessStackLocation;
    call {:si_unique_call 833} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L33;

  L33:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L33;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_520 := 1;
    goto L39;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_521 := 1;
    goto L35;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int)
{
  var {:pointer} pirp_8: int;
  var vslice_dummy_var_105: int;

  anon0:
    call {:si_unique_call 834} vslice_dummy_var_105 := __HAVOC_malloc(4);
    pirp_8 := actual_pirp_8;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_8 == sdv_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_8 == sdv_other_harnessIrp;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_8 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_8 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_26: int) returns (Tmp_524: int);
  free ensures {:va_keep} Tmp_524 == 0 || Tmp_524 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_26: int) returns (Tmp_524: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_524 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_524 := 1;
    goto L1;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_526: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_526: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_526;
    return;
}



procedure {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end()
{
  var vslice_dummy_var_106: int;

  anon0:
    call {:si_unique_call 835} vslice_dummy_var_106 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int)
{
  var {:pointer} DestinationString: int;
  var {:pointer} SourceString: int;
  var vslice_dummy_var_107: int;

  anon0:
    call {:si_unique_call 836} vslice_dummy_var_107 := __HAVOC_malloc(4);
    DestinationString := actual_DestinationString;
    SourceString := actual_SourceString;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString != 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString == 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString == 0;
    goto L4;
}



procedure {:origName "IoGetAttachedDeviceReference"} {:osmodel} IoGetAttachedDeviceReference(actual_DeviceObject_21: int) returns (Tmp_532: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoGetAttachedDeviceReference"} {:osmodel} IoGetAttachedDeviceReference(actual_DeviceObject_21: int) returns (Tmp_532: int)
{
  var {:pointer} DeviceObject_21: int;

  anon0:
    DeviceObject_21 := actual_DeviceObject_21;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_532 := sdv_p_devobj_top;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_532 := DeviceObject_21;
    goto L1;
}



procedure {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_534: int);
  free ensures {:va_keep} Tmp_534 == 0 || Tmp_534 == actual_TargetDevice_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_534: int)
{
  var {:pointer} TargetDevice_1: int;

  anon0:
    TargetDevice_1 := actual_TargetDevice_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} TargetDevice_1 == sdv_p_devobj_pdo;
    Tmp_534 := TargetDevice_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} TargetDevice_1 != sdv_p_devobj_pdo;
    Tmp_534 := 0;
    goto L1;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_2: int)
{
  var vslice_dummy_var_108: int;

  anon0:
    call {:si_unique_call 837} vslice_dummy_var_108 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_9: int) returns (Tmp_538: int);
  modifies Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.Status__IO_STATUS_BLOCK, alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, yogi_error, Mem_T.PendingReturned__IRP, sdv_compFset, thread_status, return_state, lowerDriverFailed, irp_copy_next, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_9: int) returns (Tmp_538: int)
{
  var {:pointer} ps: int;
  var {:scalar} status_3: int;
  var {:pointer} po: int;
  var {:pointer} pirp_9: int;

  anon0:
    po := actual_po;
    pirp_9 := actual_pirp_9;
    status_3 := 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    ps := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_9)))];
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 27;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps)] := 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(pirp_9))] := 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    call {:si_unique_call 838} sdv_SetStatus(pirp_9);
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(ps)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_harnessStackLocation)] := 0;
    call {:si_unique_call 839} sdv_stub_dispatch_begin();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume pirp_9 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 840} SLIC_Avc_Pnp_entry(0, pirp_9);
    goto L32;

  L32:
    call {:si_unique_call 841} status_3 := Avc_Pnp(po, pirp_9);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume pirp_9 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 842} SLIC_sdv_stub_dispatch_end_entry(strConst__li2bpl13, status_3, pirp_9);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L35;

  L35:
    call {:si_unique_call 843} sdv_stub_dispatch_end(status_3, 0);
    Tmp_538 := status_3;
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume !(pirp_9 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L35;

  anon7_Then:
    assume !(pirp_9 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L32;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_540: int);
  free ensures {:va_keep} Tmp_540 == 0 || Tmp_540 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_540: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_540 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_540 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_109: int;

  anon0:
    call {:si_unique_call 844} vslice_dummy_var_109 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_10: int)
{
  var vslice_dummy_var_110: int;

  anon0:
    call {:si_unique_call 845} vslice_dummy_var_110 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_11: int) returns (Tmp_546: int);
  modifies Mem_T.PendingReturned__IRP, alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error, thread_status, return_state, lowerDriverFailed, irp_copy_next, irp_status, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_11: int) returns (Tmp_546: int)
{
  var {:pointer} ps_1: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_547: int;
  var {:scalar} sdv_334: int;
  var {:scalar} Tmp_548: int;
  var {:scalar} status_4: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_11: int;

  anon0:
    po_1 := actual_po_1;
    pirp_11 := actual_pirp_11;
    status_4 := 0;
    minor := sdv_334;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    ps_1 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_11)))];
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(pirp_11)] := 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    call {:si_unique_call 846} sdv_SetStatus(pirp_11);
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps_1)] := minor;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(ps_1)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(sdv_harnessStackLocation)] := 0;
    call {:si_unique_call 847} sdv_stub_dispatch_begin();
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 27;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps_1)] != 0;
    goto L60;

  L60:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps_1)] == 3;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    Tmp_547 := 0;
    goto L215;

  L215:
    assume Tmp_547 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps_1)] == 2;
    goto L66;

  L66:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 848} SLIC_Avc_Pnp_entry(0, pirp_11);
    goto L179;

  L179:
    call {:si_unique_call 849} status_4 := Avc_Pnp(po_1, pirp_11);
    goto L72;

  L72:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 850} SLIC_sdv_stub_dispatch_end_entry(strConst__li2bpl13, status_4, pirp_11);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    goto L176;

  L176:
    call {:si_unique_call 851} sdv_stub_dispatch_end(status_4, 0);
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    Tmp_546 := status_4;
    goto LM2;

  LM2:
    return;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L176;

  anon54_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L179;

  anon52_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps_1)] != 2;
    goto L66;

  anon53_Then:
    Tmp_547 := 1;
    goto L215;

  anon51_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps_1)] != 3;
    goto L61;

  anon72_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(ps_1)] == 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    Tmp_548 := 0;
    goto L220;

  L220:
    assume Tmp_548 != 0;
    goto L60;

  anon50_Then:
    Tmp_548 := 1;
    goto L220;

  anon56_Then:
    call {:si_unique_call 852} status_4 := sdv_DoNothing();
    goto L72;

  anon57_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 23;
    call {:si_unique_call 853} status_4 := Avc_SystemControl(po_1, pirp_11);
    goto L72;

  anon58_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 22;
    call {:si_unique_call 854} sdv_SetPowerIrpMinorFunction(pirp_11);
    call {:si_unique_call 855} status_4 := Avc_Power(po_1, pirp_11);
    goto L72;

  anon59_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 18;
    call {:si_unique_call 856} status_4 := Avc_Cleanup(po_1, pirp_11);
    goto L72;

  anon60_Then:
    call {:si_unique_call 857} status_4 := sdv_DoNothing();
    goto L72;

  anon61_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 16;
    call {:si_unique_call 858} status_4 := sdv_DoNothing();
    goto L72;

  anon62_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 15;
    call {:si_unique_call 859} status_4 := Avc_IoControl(po_1, pirp_11);
    goto L72;

  anon63_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 14;
    call {:si_unique_call 860} status_4 := Avc_IoControl(po_1, pirp_11);
    goto L72;

  anon64_Then:
    call {:si_unique_call 861} status_4 := sdv_DoNothing();
    goto L72;

  anon65_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 9;
    call {:si_unique_call 862} status_4 := sdv_DoNothing();
    goto L72;

  anon66_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 6;
    call {:si_unique_call 863} status_4 := sdv_DoNothing();
    goto L72;

  anon67_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 5;
    call {:si_unique_call 864} status_4 := sdv_DoNothing();
    goto L72;

  anon68_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 4;
    call {:si_unique_call 865} status_4 := sdv_DoNothing();
    goto L72;

  anon69_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 3;
    call {:si_unique_call 866} status_4 := sdv_DoNothing();
    goto L72;

  anon70_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 2;
    call {:si_unique_call 867} status_4 := Avc_Close(po_1, pirp_11);
    goto L72;

  anon49_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 0;
    call {:si_unique_call 868} status_4 := Avc_Create(po_1, pirp_11);
    goto L72;
}



procedure {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlFreeUnicodeString"} {:osmodel} RtlFreeUnicodeString(actual_UnicodeString: int)
{
  var vslice_dummy_var_111: int;

  anon0:
    call {:si_unique_call 869} vslice_dummy_var_111 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName: int) returns (Tmp_552: int);
  free ensures {:va_keep} Tmp_552 == -1073741823 || Tmp_552 == -1073741808 || Tmp_552 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName: int) returns (Tmp_552: int)
{
  var {:scalar} Tmp_553: int;
  var {:pointer} SymbolicLinkName: int;

  anon0:
    SymbolicLinkName := actual_SymbolicLinkName;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_552 := -1073741823;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_552 := -1073741808;
    goto L1;

  anon7_Then:
    assume {:nonnull} SymbolicLinkName != 0;
    assume SymbolicLinkName > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_553 := 0;
    goto L22;

  L22:
    assume Tmp_553 != 0;
    Tmp_552 := 0;
    goto L1;

  anon8_Then:
    Tmp_553 := 1;
    goto L22;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_3: int, actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_112: int;

  anon0:
    call {:si_unique_call 870} vslice_dummy_var_112 := __HAVOC_malloc(4);
    new := actual_new;
    return;
}



procedure {:origName "IoReuseIrp"} {:osmodel} IoReuseIrp(actual_Irp_27: int, actual_Status_15: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoReuseIrp"} {:osmodel} IoReuseIrp(actual_Irp_27: int, actual_Status_15: int)
{
  var {:pointer} Irp_27: int;
  var {:scalar} Status_15: int;
  var vslice_dummy_var_113: int;

  anon0:
    call {:si_unique_call 871} vslice_dummy_var_113 := __HAVOC_malloc(4);
    Irp_27 := actual_Irp_27;
    Status_15 := actual_Status_15;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_27))] := Status_15;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_12: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_12: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_114: int;

  anon0:
    call {:si_unique_call 872} vslice_dummy_var_114 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_3: int)
{
  var vslice_dummy_var_115: int;

  anon0:
    call {:si_unique_call 873} vslice_dummy_var_115 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_4: int, actual_ResultLength: int) returns (Tmp_563: int);
  free ensures {:va_keep} Tmp_563 == -1073741811 || Tmp_563 == -1073741823 || Tmp_563 == 0 || Tmp_563 == 5 || Tmp_563 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_4: int, actual_ResultLength: int) returns (Tmp_563: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_346: int;
  var {:scalar} Length_4: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_4 := actual_Length_4;
    ResultLength := actual_ResultLength;
    L := sdv_346;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_563 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_563 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_4;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_4 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_563 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_4 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_4;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_563 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_4 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_563 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_4;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_116: int;

  anon0:
    call {:si_unique_call 874} vslice_dummy_var_116 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_569: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_569: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_569;
    return;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_117: int;

  anon0:
    call {:si_unique_call 875} vslice_dummy_var_117 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int)
{
  var vslice_dummy_var_118: int;

  anon0:
    call {:si_unique_call 876} vslice_dummy_var_118 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead: int) returns (Tmp_575: int);
  free ensures {:va_keep} Tmp_575 == 1 || Tmp_575 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead: int) returns (Tmp_575: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_575 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_575 := 0;
    goto L1;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota: int) returns (Tmp_577: int);
  modifies Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota: int) returns (Tmp_577: int)
{
  var {:pointer} irpSp_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(sdv_other_irp)] := 0;
    call {:si_unique_call 877} irpSp_1 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpSp_1)] := 0;
    sdv_compFset := 0;
    Tmp_577 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_577 := 0;
    goto L1;
}



procedure {:origName "KeInitializeTimerEx"} {:osmodel} KeInitializeTimerEx(actual_Timer_2: int, actual_Type_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeInitializeTimerEx"} {:osmodel} KeInitializeTimerEx(actual_Timer_2: int, actual_Type_1: int)
{
  var vslice_dummy_var_119: int;

  anon0:
    call {:si_unique_call 878} vslice_dummy_var_119 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_583: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_583: int)
{
  var {:scalar} p_3: int;

  anon0:
    Tmp_583 := p_3;
    return;
}



procedure {:origName "ZwOpenKey"} {:osmodel} ZwOpenKey(actual_KeyHandle_1: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_585: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_585 == 0 || Tmp_585 == -1073741727;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ZwOpenKey"} {:osmodel} ZwOpenKey(actual_KeyHandle_1: int, actual_DesiredAccess: int, actual_ObjectAttributes: int) returns (Tmp_585: int)
{
  var {:pointer} sdv_357: int;
  var {:pointer} KeyHandle_1: int;

  anon0:
    KeyHandle_1 := actual_KeyHandle_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 879} sdv_357 := __HAVOC_malloc(4);
    assume {:nonnull} KeyHandle_1 != 0;
    assume KeyHandle_1 > 0;
    Tmp_585 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} KeyHandle_1 != 0;
    assume KeyHandle_1 > 0;
    Tmp_585 := -1073741727;
    goto L1;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_5: int, actual_Type_2: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_5: int, actual_Type_2: int, actual_State_1: int)
{
  var {:pointer} Event_5: int;
  var {:scalar} Type_2: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_120: int;

  anon0:
    call {:si_unique_call 880} vslice_dummy_var_120 := __HAVOC_malloc(4);
    Event_5 := actual_Event_5;
    Type_2 := actual_Type_2;
    State_1 := actual_State_1;
    assume {:nonnull} Event_5 != 0;
    assume Event_5 > 0;
    assume {:nonnull} Event_5 != 0;
    assume Event_5 > 0;
    assume {:nonnull} Event_5 != 0;
    assume Event_5 > 0;
    assume {:nonnull} Event_5 != 0;
    assume Event_5 > 0;
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_13: int)
{
  var vslice_dummy_var_121: int;

  anon0:
    call {:si_unique_call 881} vslice_dummy_var_121 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoInvalidateDeviceRelations"} {:osmodel} IoInvalidateDeviceRelations(actual_DeviceObject_25: int, actual_Type_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoInvalidateDeviceRelations"} {:osmodel} IoInvalidateDeviceRelations(actual_DeviceObject_25: int, actual_Type_3: int)
{
  var vslice_dummy_var_122: int;

  anon0:
    call {:si_unique_call 882} vslice_dummy_var_122 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_4: int)
{
  var {:pointer} SpinLock_4: int;
  var vslice_dummy_var_123: int;

  anon0:
    call {:si_unique_call 883} vslice_dummy_var_123 := __HAVOC_malloc(4);
    SpinLock_4 := actual_SpinLock_4;
    assume {:nonnull} SpinLock_4 != 0;
    assume SpinLock_4 > 0;
    return;
}



procedure {:origName "_sdv_init10"} {:osmodel} _sdv_init10();
  modifies alloc, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init10"} {:osmodel} _sdv_init10()
{
  var vslice_dummy_var_124: int;

  anon0:
    call {:si_unique_call 884} vslice_dummy_var_124 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    sdv_invoke_on_success := 0;
    sdv_invoke_on_error := 0;
    sdv_invoke_on_cancel := 0;
    assume p_sdv_fx_dev_object == sdv_fx_dev_object;
    assume sdv_Io_Removelock_release_wait_returned == 0;
    sdv_compFset := 0;
    assume sdv_isr_routine == li2bplFunctionConstant1025;
    assume sdv_ke_dpc == li2bplFunctionConstant1027;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant1030;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_1: int) returns (Tmp_601: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_1: int) returns (Tmp_601: int)
{
  var {:pointer} sdv_368: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 885} sdv_368 := __HAVOC_malloc(NumberOfBytes);
    Tmp_601 := sdv_368;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_601 := 0;
    goto L1;
}



procedure {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_2: int, actual_Path_2: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_603: int);
  free ensures {:va_keep} Tmp_603 == 0 || Tmp_603 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_2: int, actual_Path_2: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_603: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_603 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_603 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_26: int) returns (Tmp_605: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_26: int) returns (Tmp_605: int)
{
  var {:pointer} ioWorkItem: int;
  var {:scalar} Tmp_607: int;
  var {:pointer} sdv_371: int;

  anon0:
    call {:si_unique_call 886} sdv_371 := __HAVOC_malloc(1);
    ioWorkItem := sdv_371;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ioWorkItem == 0;
    Tmp_607 := 0;
    goto L27;

  L27:
    assume Tmp_607 != 0;
    assume {:nonnull} ioWorkItem != 0;
    assume ioWorkItem > 0;
    Tmp_605 := ioWorkItem;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} ioWorkItem != 0;
    Tmp_607 := 1;
    goto L27;

  anon6_Then:
    Tmp_605 := 0;
    goto L1;
}



procedure {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int)
{
  var {:pointer} pdrivo: int;
  var vslice_dummy_var_125: int;

  anon0:
    call {:si_unique_call 887} vslice_dummy_var_125 := __HAVOC_malloc(4);
    pdrivo := actual_pdrivo;
    call {:si_unique_call 888} Avc_Unload(pdrivo);
    return;
}



procedure {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_1: int, actual_Enable: int) returns (Tmp_610: int);
  free ensures {:va_keep} Tmp_610 == -1073741772 || Tmp_610 == -1073741824 || Tmp_610 == -1073741789 || Tmp_610 == -1073741670 || Tmp_610 == -1073741808 || Tmp_610 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_1: int, actual_Enable: int) returns (Tmp_610: int)
{

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_610 := -1073741772;
    goto L1;

  L1:
    call {:si_unique_call 889} SLIC_IoSetDeviceInterfaceState_exit(0, Tmp_610);
    return;

  anon12_Then:
    Tmp_610 := -1073741824;
    goto L1;

  anon13_Then:
    Tmp_610 := -1073741789;
    goto L1;

  anon14_Then:
    Tmp_610 := -1073741670;
    goto L1;

  anon15_Then:
    Tmp_610 := -1073741808;
    goto L1;

  anon11_Then:
    Tmp_610 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_126: int;

  anon0:
    call {:si_unique_call 890} vslice_dummy_var_126 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_127: int;

  anon0:
    call {:si_unique_call 891} vslice_dummy_var_127 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_27: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_616: int);
  free ensures {:va_keep} Tmp_616 == -1073741811 || Tmp_616 == -1073741808 || Tmp_616 == -1073741823 || Tmp_616 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_27: int, actual_DevInstKeyType: int, actual_DesiredAccess_1: int, actual_DevInstRegKey: int) returns (Tmp_616: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_616 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_616 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_616 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_616 := 0;
    goto L1;
}



procedure {:origName "sdv_ObDereferenceObject"} {:osmodel} sdv_ObDereferenceObject(actual_Object_2: int) returns (Tmp_618: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ObDereferenceObject"} {:osmodel} sdv_ObDereferenceObject(actual_Object_2: int) returns (Tmp_618: int)
{
  var {:scalar} p_4: int;

  anon0:
    Tmp_618 := p_4;
    return;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_620: int);
  free ensures {:va_keep} Tmp_620 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_620: int)
{

  anon0:
    Tmp_620 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_622: int);
  free ensures {:va_keep} Tmp_622 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_622: int)
{

  anon0:
    Tmp_622 := -1073741823;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_624: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_624: int)
{
  var {:pointer} sdv_376: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 892} sdv_376 := __HAVOC_malloc(1);
    Tmp_624 := sdv_376;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_624 := 0;
    goto L1;
}



procedure {:origName "Avc_InternalIoControl"} Avc_InternalIoControl(actual_DeviceObject_28: int, actual_Irp_31: int) returns (Tmp_626: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, thread_status, return_state, lowerDriverFailed, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_InternalIoControl"} Avc_InternalIoControl(actual_DeviceObject_28: int, actual_Irp_31: int) returns (Tmp_626: int)
{
  var {:pointer} PdoData_2: int;
  var {:pointer} Irb: int;
  var {:pointer} Tmp_628: int;
  var {:pointer} IrpStack_7: int;
  var {:pointer} AvcMultiFuncIrb: int;
  var {:pointer} Tmp_629: int;
  var {:pointer} AvcIrb_8: int;
  var {:scalar} ntStatus_19: int;
  var {:scalar} sdv_394: int;
  var {:pointer} PdoExtension_4: int;
  var {:pointer} CommonExtension_3: int;
  var {:pointer} AvcCmdIrb: int;
  var {:pointer} AvcCmdIrb_1: int;
  var {:scalar} ioControlCode: int;
  var {:pointer} Request: int;
  var {:pointer} BusExtension_3: int;
  var {:pointer} AvcCmdIrb_2: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} Irp_31: int;
  var vslice_dummy_var_2635: int;
  var vslice_dummy_var_2636: int;
  var vslice_dummy_var_2637: int;
  var vslice_dummy_var_2638: int;
  var vslice_dummy_var_2639: int;
  var vslice_dummy_var_2640: int;
  var vslice_dummy_var_2641: int;
  var vslice_dummy_var_2642: int;
  var vslice_dummy_var_2643: int;

  anon0:
    DeviceObject_28 := actual_DeviceObject_28;
    Irp_31 := actual_Irp_31;
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    havoc CommonExtension_3;
    ntStatus_19 := 0;
    IrpStack_7 := 0;
    ioControlCode := 0;
    AvcIrb_8 := 0;
    Request := 0;
    Irb := 0;
    call {:si_unique_call 893} IrpStack_7 := sdv_IoGetCurrentIrpStackLocation(Irp_31);
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    havoc ioControlCode;
    assume {:nonnull} CommonExtension_3 != 0;
    assume CommonExtension_3 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    BusExtension_3 := CommonExtension_3;
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:partition} ioControlCode != 2228765;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} ioControlCode != 2228805;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} ioControlCode == 2228808;
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    havoc AvcIrb_8;
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    goto L184;

  L184:
    AvcCmdIrb_1 := AvcIrb_8;
    assume {:nonnull} AvcCmdIrb_1 != 0;
    assume AvcCmdIrb_1 > 0;
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:nonnull} AvcCmdIrb_1 != 0;
    assume AvcCmdIrb_1 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    ntStatus_19 := -1073741811;
    goto L186;

  L186:
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} ntStatus_19 != 0;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 894} sdv_IoCompleteRequest(0, 0);
    goto L46;

  L46:
    Tmp_626 := ntStatus_19;
    return;

  anon205_Then:
    assume {:partition} ntStatus_19 == 0;
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    call {:si_unique_call 895} ntStatus_19 := AvcProcessSendResponse(DeviceObject_28, Irp_31);
    goto L46;

  anon243_Then:
    ntStatus_19 := -1073741637;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 896} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon207_Then:
    call {:si_unique_call 897} ntStatus_19 := AvcProcessGetRequest(DeviceObject_28, Irp_31);
    goto L46;

  anon206_Then:
    goto L186;

  anon265_Then:
    goto L186;

  anon203_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    call {:si_unique_call 898} ntStatus_19 := AvcFindPeerDeviceObject(DeviceObject_28, Irp_31);
    goto L46;

  anon208_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    call {:si_unique_call 899} ntStatus_19 := AvcGetPeerDeviceObjectList(DeviceObject_28, Irp_31);
    goto L46;

  anon209_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    call {:si_unique_call 900} ntStatus_19 := AvcGetSubunitInfo(DeviceObject_28, Irp_31);
    goto L46;

  anon210_Then:
    ntStatus_19 := -1073741637;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 901} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon204_Then:
    goto L184;

  anon264_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto L253;

  L253:
    AvcCmdIrb := AvcIrb_8;
    assume {:nonnull} AvcCmdIrb != 0;
    assume AvcCmdIrb > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:nonnull} AvcCmdIrb != 0;
    assume AvcCmdIrb > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} AvcCmdIrb != 0;
    assume AvcCmdIrb > 0;
    havoc Tmp_628;
    assume {:nonnull} Tmp_628 != 0;
    assume Tmp_628 > 0;
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto L261;

  L261:
    ntStatus_19 := -1073741811;
    goto L255;

  L255:
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} ntStatus_19 != 0;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 902} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon216_Then:
    assume {:partition} ntStatus_19 == 0;
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    call {:si_unique_call 903} ntStatus_19 := AvcProcessSendResponse(DeviceObject_28, Irp_31);
    goto L46;

  anon244_Then:
    ntStatus_19 := -1073741637;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 904} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon245_Then:
    call {:si_unique_call 905} ntStatus_19 := AvcProcessGetRequest(DeviceObject_28, Irp_31);
    goto L46;

  anon220_Then:
    call {:si_unique_call 906} ntStatus_19 := AvcProcessCommand(DeviceObject_28, Irp_31);
    goto L46;

  anon218_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    goto L261;

  anon219_Then:
    goto L255;

  anon267_Then:
    goto L255;

  anon217_Then:
    ntStatus_19 := -1073741811;
    goto L255;

  anon266_Then:
    goto L255;

  anon202_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto L253;

  anon211_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto L253;

  anon212_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    call {:si_unique_call 907} ntStatus_19 := AvcFindPeerDeviceObject(DeviceObject_28, Irp_31);
    goto L46;

  anon213_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    call {:si_unique_call 908} ntStatus_19 := AvcGetPeerDeviceObjectList(DeviceObject_28, Irp_31);
    goto L46;

  anon214_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    call {:si_unique_call 909} ntStatus_19 := AvcGetSubunitInfo(DeviceObject_28, Irp_31);
    goto L46;

  anon215_Then:
    ntStatus_19 := -1073741637;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 910} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon241_Then:
    assume {:partition} ioControlCode != 2228808;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 911} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl13);
    goto L442;

  L442:
    call {:si_unique_call 912} sdv_IoSkipCurrentIrpStackLocation(Irp_31);
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 913} SLIC_sdv_IoCallDriver_entry(0);
    goto L445;

  L445:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    havoc vslice_dummy_var_2635;
    call {:si_unique_call 914} ntStatus_19 := sdv_IoCallDriver#1(vslice_dummy_var_2635, Irp_31);
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 915} SLIC_sdv_IoCallDriver_exit(0, Irp_31);
    goto L46;

  anon252_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L46;

  anon230_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L445;

  anon201_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L442;

  anon242_Then:
    assume {:partition} ioControlCode == 2228805;
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    havoc Request;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    goto L289;

  L289:
    ntStatus_19 := -1073741811;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 916} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon263_Then:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    call {:si_unique_call 917} ntStatus_19 := Avc_61883BusResetNotificationRequest(CommonExtension_3, Request);
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 918} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon225_Then:
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 919} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl13);
    goto L433;

  L433:
    call {:si_unique_call 920} sdv_IoSkipCurrentIrpStackLocation(Irp_31);
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 921} SLIC_sdv_IoCallDriver_entry(0);
    goto L436;

  L436:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    havoc vslice_dummy_var_2636;
    call {:si_unique_call 922} ntStatus_19 := sdv_IoCallDriver#1(vslice_dummy_var_2636, Irp_31);
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 923} SLIC_sdv_IoCallDriver_exit(0, Irp_31);
    goto L46;

  anon251_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L46;

  anon227_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L436;

  anon226_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L433;

  anon224_Then:
    goto L289;

  anon223_Then:
    goto L289;

  anon222_Then:
    goto L289;

  anon221_Then:
    goto L289;

  anon261_Then:
    assume {:partition} ioControlCode == 2228765;
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    havoc Irb;
    assume {:nonnull} Irb != 0;
    assume Irb > 0;
    goto anon262_Then, anon262_Else;

  anon262_Else:
    call {:si_unique_call 924} ntStatus_19 := Avc_1394BusResetNotificationRequest(CommonExtension_3, Irb);
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 925} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon262_Then:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 926} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl13);
    goto L424;

  L424:
    call {:si_unique_call 927} sdv_IoSkipCurrentIrpStackLocation(Irp_31);
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 928} SLIC_sdv_IoCallDriver_entry(0);
    goto L427;

  L427:
    assume {:nonnull} BusExtension_3 != 0;
    assume BusExtension_3 > 0;
    havoc vslice_dummy_var_2637;
    call {:si_unique_call 929} ntStatus_19 := sdv_IoCallDriver#1(vslice_dummy_var_2637, Irp_31);
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 930} SLIC_sdv_IoCallDriver_exit(0, Irp_31);
    goto L46;

  anon250_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L46;

  anon229_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L427;

  anon228_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L424;

  anon253_Then:
    PdoExtension_4 := CommonExtension_3;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc PdoData_2;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:partition} ioControlCode != 2228765;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} ioControlCode != 2228805;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} ioControlCode == 2228808;
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    havoc AvcIrb_8;
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    goto L96;

  L96:
    AvcCmdIrb_2 := AvcIrb_8;
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    havoc Tmp_629;
    assume {:nonnull} Tmp_629 != 0;
    assume Tmp_629 > 0;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    havoc vslice_dummy_var_2638;
    havoc vslice_dummy_var_2639;
    call {:si_unique_call 931} sdv_394 := AvcSubunitAddrsEqual(vslice_dummy_var_2638, vslice_dummy_var_2639);
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} sdv_394 == 0;
    ntStatus_19 := -1073741811;
    goto L103;

  L103:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} ntStatus_19 != 0;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 932} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon186_Then:
    assume {:partition} ntStatus_19 == 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 933} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl13);
    goto L406;

  L406:
    call {:si_unique_call 934} sdv_IoSkipCurrentIrpStackLocation(Irp_31);
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 935} SLIC_sdv_IoCallDriver_entry(0);
    goto L409;

  L409:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_2640;
    call {:si_unique_call 936} ntStatus_19 := sdv_IoCallDriver#1(vslice_dummy_var_2640, Irp_31);
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 937} SLIC_sdv_IoCallDriver_exit(0, Irp_31);
    goto L46;

  anon248_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L46;

  anon189_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L409;

  anon188_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L406;

  anon187_Then:
    assume {:partition} sdv_394 != 0;
    goto L103;

  anon259_Then:
    goto L103;

  anon185_Then:
    goto L100;

  L100:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    assume {:nonnull} PdoData_2 != 0;
    assume PdoData_2 > 0;
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    goto L103;

  anon184_Then:
    goto L100;

  anon258_Then:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} AvcCmdIrb_2 != 0;
    assume AvcCmdIrb_2 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto L121;

  L121:
    ntStatus_19 := -1073741811;
    goto L103;

  anon190_Then:
    goto L103;

  anon183_Then:
    goto L121;

  anon257_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    goto L96;

  anon180_Then:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    goto L96;

  anon181_Then:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    AvcMultiFuncIrb := AvcIrb_8;
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} AvcIrb_8 != 0;
    assume AvcIrb_8 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 938} ntStatus_19 := ConnectionMgrGetUniqueID(PdoExtension_4, UniqueID__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto L79;

  L79:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    goto L42;

  L42:
    call {:si_unique_call 939} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon233_Then:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    ntStatus_19 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))];
    goto L79;

  anon234_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 940} ntStatus_19 := ConnectionMgrGetExtPlugCounts(PdoExtension_4, ExtPlugCounts__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto L79;

  anon235_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 941} ntStatus_19 := ConnectionMgrClrConnectInfo(PdoExtension_4, PinId__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto L79;

  anon236_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 942} ntStatus_19 := ConnectionMgrRelease(PdoExtension_4, PinId__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto L79;

  anon237_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 943} ntStatus_19 := ConnectionMgrAcquire(PdoExtension_4, PinId__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto L79;

  anon238_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 944} ntStatus_19 := ConnectionMgrSetConnectInfo(PdoExtension_4, SetConnectInfo__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto L79;

  anon239_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 945} ntStatus_19 := ConnectionMgrGetConnectInfo(PdoExtension_4, PreConnectInfo__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto L79;

  anon240_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 946} ntStatus_19 := ConnectionMgrPinDescriptor(PdoExtension_4, PinDescriptor__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto L79;

  anon260_Then:
    assume {:nonnull} AvcMultiFuncIrb != 0;
    assume AvcMultiFuncIrb > 0;
    call {:si_unique_call 947} ntStatus_19 := ConnectionMgrPinCount(PdoExtension_4, PinCount__AVC_MULTIFUNC_IRB(AvcMultiFuncIrb));
    goto L79;

  anon182_Then:
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    ntStatus_19 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))];
    goto L42;

  anon231_Then:
    assume {:partition} ioControlCode != 2228808;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 948} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl13);
    goto L415;

  L415:
    call {:si_unique_call 949} sdv_IoSkipCurrentIrpStackLocation(Irp_31);
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 950} SLIC_sdv_IoCallDriver_entry(0);
    goto L418;

  L418:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_2641;
    call {:si_unique_call 951} ntStatus_19 := sdv_IoCallDriver#1(vslice_dummy_var_2641, Irp_31);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 952} SLIC_sdv_IoCallDriver_exit(0, Irp_31);
    goto L46;

  anon249_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L46;

  anon200_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L418;

  anon179_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L415;

  anon232_Then:
    assume {:partition} ioControlCode == 2228805;
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    havoc Request;
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    goto L125;

  L125:
    ntStatus_19 := -1073741811;
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 953} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon256_Then:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:nonnull} Request != 0;
    assume Request > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    call {:si_unique_call 954} ntStatus_19 := Avc_61883BusResetNotificationRequest(CommonExtension_3, Request);
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 955} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon195_Then:
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 956} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl13);
    goto L397;

  L397:
    call {:si_unique_call 957} sdv_IoSkipCurrentIrpStackLocation(Irp_31);
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 958} SLIC_sdv_IoCallDriver_entry(0);
    goto L400;

  L400:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_2642;
    call {:si_unique_call 959} ntStatus_19 := sdv_IoCallDriver#1(vslice_dummy_var_2642, Irp_31);
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 960} SLIC_sdv_IoCallDriver_exit(0, Irp_31);
    goto L46;

  anon247_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L46;

  anon197_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L400;

  anon196_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L397;

  anon194_Then:
    goto L125;

  anon193_Then:
    goto L125;

  anon192_Then:
    goto L125;

  anon191_Then:
    goto L125;

  anon254_Then:
    assume {:partition} ioControlCode == 2228765;
    assume {:nonnull} IrpStack_7 != 0;
    assume IrpStack_7 > 0;
    havoc Irb;
    assume {:nonnull} Irb != 0;
    assume Irb > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    call {:si_unique_call 961} ntStatus_19 := Avc_1394BusResetNotificationRequest(CommonExtension_3, Irb);
    assume {:nonnull} Irp_31 != 0;
    assume Irp_31 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_31))] := ntStatus_19;
    call {:si_unique_call 962} sdv_IoCompleteRequest(0, 0);
    goto L46;

  anon255_Then:
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 963} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl13);
    goto L388;

  L388:
    call {:si_unique_call 964} sdv_IoSkipCurrentIrpStackLocation(Irp_31);
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 965} SLIC_sdv_IoCallDriver_entry(0);
    goto L391;

  L391:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_2643;
    call {:si_unique_call 966} ntStatus_19 := sdv_IoCallDriver#1(vslice_dummy_var_2643, Irp_31);
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume Irp_31 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 967} SLIC_sdv_IoCallDriver_exit(0, Irp_31);
    goto L46;

  anon246_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L46;

  anon199_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L391;

  anon198_Then:
    assume !(Irp_31 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L388;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_128: int;

  anon0:
    call {:si_unique_call 968} vslice_dummy_var_128 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Avc_SystemControl"} Avc_SystemControl(actual_DeviceObject_29: int, actual_Irp_32: int) returns (Tmp_632: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, thread_status, return_state, lowerDriverFailed, Mem_T.PendingReturned__IRP, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_SystemControl"} Avc_SystemControl(actual_DeviceObject_29: int, actual_Irp_32: int) returns (Tmp_632: int)
{
  var {:scalar} ntStatus_20: int;
  var {:pointer} CommonExtension_4: int;
  var {:pointer} DeviceObject_29: int;
  var {:pointer} Irp_32: int;
  var vslice_dummy_var_2644: int;

  anon0:
    DeviceObject_29 := actual_DeviceObject_29;
    Irp_32 := actual_Irp_32;
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    havoc CommonExtension_4;
    call {:si_unique_call 969} sdv_do_paged_code_check();
    assume {:nonnull} CommonExtension_4 != 0;
    assume CommonExtension_4 > 0;
    call {:si_unique_call 970} ntStatus_20 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_4));
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} ntStatus_20 != 0;
    ntStatus_20 := -1073741810;
    assume {:nonnull} Irp_32 != 0;
    assume Irp_32 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_32))] := ntStatus_20;
    call {:si_unique_call 971} sdv_IoCompleteRequest(0, 0);
    goto L20;

  L20:
    Tmp_632 := ntStatus_20;
    return;

  anon13_Then:
    assume {:partition} ntStatus_20 == 0;
    assume {:nonnull} CommonExtension_4 != 0;
    assume CommonExtension_4 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Irp_32 != 0;
    assume Irp_32 > 0;
    ntStatus_20 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_32))];
    call {:si_unique_call 972} sdv_IoCompleteRequest(0, 0);
    goto L26;

  L26:
    assume {:nonnull} CommonExtension_4 != 0;
    assume CommonExtension_4 > 0;
    call {:si_unique_call 973} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_4));
    goto L20;

  anon14_Then:
    assume {:nonnull} CommonExtension_4 != 0;
    assume CommonExtension_4 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume Irp_32 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 974} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl13);
    goto L41;

  L41:
    call {:si_unique_call 975} sdv_IoSkipCurrentIrpStackLocation(Irp_32);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume Irp_32 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 976} SLIC_sdv_IoCallDriver_entry(0);
    goto L44;

  L44:
    assume {:nonnull} CommonExtension_4 != 0;
    assume CommonExtension_4 > 0;
    havoc vslice_dummy_var_2644;
    call {:si_unique_call 977} ntStatus_20 := sdv_IoCallDriver#1(vslice_dummy_var_2644, Irp_32);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume Irp_32 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 978} SLIC_sdv_IoCallDriver_exit(0, Irp_32);
    goto L26;

  anon18_Then:
    assume !(Irp_32 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L26;

  anon17_Then:
    assume !(Irp_32 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L44;

  anon16_Then:
    assume !(Irp_32 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L41;

  anon15_Then:
    assume {:nonnull} Irp_32 != 0;
    assume Irp_32 > 0;
    ntStatus_20 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_32))];
    call {:si_unique_call 979} sdv_IoCompleteRequest(0, 0);
    goto L26;
}



procedure {:origName "Avc_IoControl"} Avc_IoControl(actual_DeviceObject_30: int, actual_Irp_33: int) returns (Tmp_634: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, thread_status, return_state, lowerDriverFailed, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_IoControl"} Avc_IoControl(actual_DeviceObject_30: int, actual_Irp_33: int) returns (Tmp_634: int)
{
  var {:pointer} AddrSpec: int;
  var {:pointer} IrpStack_8: int;
  var {:scalar} cbIn_1: int;
  var {:scalar} ntStatus_21: int;
  var {:pointer} CommonExtension_5: int;
  var {:scalar} ioControlCode_1: int;
  var {:pointer} BusExtension_4: int;
  var {:pointer} AddrSpec_1: int;
  var {:pointer} DeviceObject_30: int;
  var {:pointer} Irp_33: int;

  anon0:
    DeviceObject_30 := actual_DeviceObject_30;
    Irp_33 := actual_Irp_33;
    assume {:nonnull} DeviceObject_30 != 0;
    assume DeviceObject_30 > 0;
    havoc CommonExtension_5;
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_33))] := -1073741811;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    call {:si_unique_call 980} sdv_IoCompleteRequest(0, 0);
    Tmp_634 := -1073741811;
    goto L1;

  L1:
    return;

  anon33_Then:
    goto L8;

  L8:
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    call {:si_unique_call 981} ntStatus_21 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_5));
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} ntStatus_21 != 0;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_33))] := ntStatus_21;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    call {:si_unique_call 982} sdv_IoCompleteRequest(0, 0);
    Tmp_634 := ntStatus_21;
    goto L1;

  anon34_Then:
    assume {:partition} ntStatus_21 == 0;
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_33))] := -1073741810;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    call {:si_unique_call 983} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    call {:si_unique_call 984} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_5));
    Tmp_634 := -1073741810;
    goto L1;

  anon35_Then:
    call {:si_unique_call 985} IrpStack_8 := sdv_IoGetCurrentIrpStackLocation(Irp_33);
    assume {:nonnull} IrpStack_8 != 0;
    assume IrpStack_8 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(IrpStack_8)] != 14;
    assume {:nonnull} IrpStack_8 != 0;
    assume IrpStack_8 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(IrpStack_8)] == 15;
    call {:si_unique_call 986} ntStatus_21 := Avc_InternalIoControl(DeviceObject_30, Irp_33);
    goto L48;

  L48:
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    call {:si_unique_call 987} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_5));
    Tmp_634 := ntStatus_21;
    goto L1;

  anon42_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(IrpStack_8)] != 15;
    ntStatus_21 := -1073741808;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_33))] := ntStatus_21;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    call {:si_unique_call 988} sdv_IoCompleteRequest(0, 0);
    goto L48;

  anon36_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(IrpStack_8)] == 14;
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} CommonExtension_5 != 0;
    assume CommonExtension_5 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    BusExtension_4 := CommonExtension_5;
    assume {:nonnull} IrpStack_8 != 0;
    assume IrpStack_8 > 0;
    havoc ioControlCode_1;
    assume {:nonnull} IrpStack_8 != 0;
    assume IrpStack_8 > 0;
    havoc cbIn_1;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} ioControlCode_1 != 2752512;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} ioControlCode_1 != 2752516;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} ioControlCode_1 == 2752520;
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto L71;

  L71:
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_33))] := ntStatus_21;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    call {:si_unique_call 989} sdv_IoCompleteRequest(0, 0);
    goto L48;

  anon41_Then:
    call {:si_unique_call 990} IoInvalidateDeviceRelations(0, 0);
    assume {:nonnull} BusExtension_4 != 0;
    assume BusExtension_4 > 0;
    goto L71;

  anon43_Then:
    assume {:partition} ioControlCode_1 != 2752520;
    ntStatus_21 := -1073741808;
    goto L71;

  anon44_Then:
    assume {:partition} ioControlCode_1 == 2752516;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} cbIn_1 >= 5;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    havoc AddrSpec_1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} AddrSpec_1 != 0;
    call {:si_unique_call 991} ntStatus_21 := Avc_RemoveVirtualSubunitInfo(BusExtension_4, cbIn_1, AddrSpec_1);
    goto L71;

  anon48_Then:
    assume {:partition} AddrSpec_1 == 0;
    ntStatus_21 := -1073741670;
    goto L71;

  anon40_Then:
    assume {:partition} 5 > cbIn_1;
    ntStatus_21 := -1073741306;
    goto L71;

  anon46_Then:
    assume {:partition} ioControlCode_1 == 2752512;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} cbIn_1 >= 5;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    havoc AddrSpec;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} AddrSpec != 0;
    call {:si_unique_call 992} ntStatus_21 := Avc_UpdateVirtualSubunitInfo(BusExtension_4, cbIn_1, AddrSpec);
    goto L71;

  anon47_Then:
    assume {:partition} AddrSpec == 0;
    ntStatus_21 := -1073741670;
    goto L71;

  anon39_Then:
    assume {:partition} 5 > cbIn_1;
    ntStatus_21 := -1073741306;
    goto L71;

  anon38_Then:
    ntStatus_21 := -1073741808;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_33))] := ntStatus_21;
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    call {:si_unique_call 993} sdv_IoCompleteRequest(0, 0);
    goto L48;

  anon37_Then:
    assume {:nonnull} Irp_33 != 0;
    assume Irp_33 > 0;
    ntStatus_21 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_33))];
    call {:si_unique_call 994} sdv_IoCompleteRequest(0, 0);
    goto L48;

  anon45_Then:
    goto L8;
}



procedure {:origName "sdv_hash_63558310"} sdv_hash_63558310(actual_this_19: int) returns (Tmp_636: int);
  modifies alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_63558310"} sdv_hash_63558310(actual_this_19: int) returns (Tmp_636: int)
{
  var {:scalar} Event_6: int;
  var {:scalar} ntStatus_22: int;
  var {:pointer} Tmp_638: int;
  var {:pointer} Tmp_639: int;
  var {:pointer} this_19: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_2645: int;
  var vslice_dummy_var_2646: int;
  var vslice_dummy_var_2647: int;

  anon0:
    call {:si_unique_call 995} Event_6 := __HAVOC_malloc(156);
    this_19 := actual_this_19;
    assume {:nonnull} this_19 != 0;
    assume this_19 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 996} KeInitializeEvent(Event_6, 1, 0);
    assume {:nonnull} this_19 != 0;
    assume this_19 > 0;
    havoc vslice_dummy_var_2645;
    call {:si_unique_call 997} sdv_IoSetCompletionRoutine(vslice_dummy_var_2645, li2bplFunctionConstant485, Event_6, 1, 1, 1);
    assume {:nonnull} this_19 != 0;
    assume this_19 > 0;
    havoc Tmp_638;
    assume {:nonnull} Tmp_638 != 0;
    assume Tmp_638 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_638))] := -1073741637;
    assume {:nonnull} this_19 != 0;
    assume this_19 > 0;
    havoc vslice_dummy_var_2646;
    havoc vslice_dummy_var_2647;
    call {:si_unique_call 998} ntStatus_22 := sdv_IoCallDriver#1(vslice_dummy_var_2646, vslice_dummy_var_2647);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} ntStatus_22 == 259;
    call {:si_unique_call 999} vslice_dummy_var_129 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} this_19 != 0;
    assume this_19 > 0;
    havoc Tmp_639;
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    ntStatus_22 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Tmp_639))];
    goto L19;

  L19:
    Tmp_636 := ntStatus_22;
    return;

  anon6_Then:
    assume {:partition} ntStatus_22 != 259;
    goto L19;

  anon5_Then:
    ntStatus_22 := -1073741670;
    goto L19;
}



procedure {:origName "sdv_hash_387797355"} sdv_hash_387797355(actual_this_20: int, actual_limit: int, actual_sua: int) returns (Tmp_640: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_640 == 0 || Tmp_640 == -1073741823 || Tmp_640 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_387797355"} sdv_hash_387797355(actual_this_20: int, actual_limit: int, actual_sua: int) returns (Tmp_640: int)
{
  var {:scalar} Tmp_641: int;
  var {:pointer} this_20: int;
  var {:scalar} limit: int;
  var {:pointer} sua: int;

  anon0:
    this_20 := actual_this_20;
    limit := actual_limit;
    sua := actual_sua;
    assume {:nonnull} this_20 != 0;
    assume this_20 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sua != 0;
    assume {:nonnull} this_20 != 0;
    assume this_20 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} this_20 != 0;
    assume this_20 > 0;
    havoc Tmp_641;
    call {:si_unique_call 1000} sdv_RtlCopyMemory(0, 0, Tmp_641);
    Tmp_640 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_640 := -1073741823;
    goto L1;

  anon8_Then:
    assume {:partition} sua == 0;
    Tmp_640 := -1073741811;
    goto L1;

  anon7_Then:
    Tmp_640 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_975613429"} sdv_hash_975613429(actual_this_21: int, actual_AvcIrb_9: int) returns (Tmp_643: int);
  modifies Mem_T.MajorFunction__IO_STACK_LOCATION, alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_975613429"} sdv_hash_975613429(actual_this_21: int, actual_AvcIrb_9: int) returns (Tmp_643: int)
{
  var {:scalar} ntStatus_23: int;
  var {:pointer} NextIrpStack_7: int;
  var {:pointer} this_21: int;
  var {:pointer} AvcIrb_9: int;

  anon0:
    this_21 := actual_this_21;
    AvcIrb_9 := actual_AvcIrb_9;
    assume {:nonnull} this_21 != 0;
    assume this_21 > 0;
    call {:si_unique_call 1001} NextIrpStack_7 := sdv_hash_784785994(m_Irp_CAvSyncIrp(this_21));
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} NextIrpStack_7 != 0;
    assume {:nonnull} NextIrpStack_7 != 0;
    assume NextIrpStack_7 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_7)] := 15;
    assume {:nonnull} NextIrpStack_7 != 0;
    assume NextIrpStack_7 > 0;
    assume {:nonnull} NextIrpStack_7 != 0;
    assume NextIrpStack_7 > 0;
    assume {:nonnull} this_21 != 0;
    assume this_21 > 0;
    call {:si_unique_call 1002} ntStatus_23 := sdv_hash_63558310(m_Irp_CAvSyncIrp(this_21));
    goto L18;

  L18:
    Tmp_643 := ntStatus_23;
    return;

  anon3_Then:
    assume {:partition} NextIrpStack_7 == 0;
    ntStatus_23 := -1073741670;
    goto L18;
}



procedure {:origName "sdv_hash_784785994"} sdv_hash_784785994(actual_this_22: int) returns (Tmp_645: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_784785994"} sdv_hash_784785994(actual_this_22: int) returns (Tmp_645: int)
{
  var {:pointer} rc: int;
  var {:pointer} this_22: int;
  var vslice_dummy_var_2648: int;

  anon0:
    this_22 := actual_this_22;
    assume {:nonnull} this_22 != 0;
    assume this_22 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} this_22 != 0;
    assume this_22 > 0;
    havoc vslice_dummy_var_2648;
    call {:si_unique_call 1003} rc := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_2648);
    goto L10;

  L10:
    Tmp_645 := rc;
    return;

  anon3_Then:
    rc := 0;
    goto L10;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_130: int;

  anon0:
    call {:si_unique_call 1004} vslice_dummy_var_130 := __HAVOC_malloc(4);
    assume ClfsNullRecord_1 == 0;
    assume ClfsDataRecord_1 == 1;
    assume ClfsRestartRecord_1 == 2;
    assume ClfsClientRecord_1 == 3;
    assume ClsContainerInitializing_1 == 1;
    assume ClsContainerInactive_1 == 2;
    assume ClsContainerActive_1 == 4;
    assume ClsContainerActivePendingDelete_1 == 8;
    assume ClsContainerPendingArchive_1 == 16;
    assume ClsContainerPendingArchiveAndDelete_1 == 32;
    assume ClfsContainerInitializing_1 == 1;
    assume ClfsContainerInactive_1 == 2;
    assume ClfsContainerActive_1 == 4;
    assume ClfsContainerActivePendingDelete_1 == 8;
    assume ClfsContainerPendingArchive_1 == 16;
    assume ClfsContainerPendingArchiveAndDelete_1 == 32;
    assume CLFS_MAX_CONTAINER_INFO_1 == 256;
    assume CLFS_SCAN_INIT_1 == 1;
    assume CLFS_SCAN_FORWARD_1 == 2;
    assume CLFS_SCAN_BACKWARD_1 == 4;
    assume CLFS_SCAN_CLOSE_1 == 8;
    assume CLFS_SCAN_INITIALIZED_1 == 16;
    assume CLFS_SCAN_BUFFERED_1 == 32;
    return;
}



procedure {:origName "sdv_hash_332631937"} sdv_hash_332631937(actual_this_23: int, actual_limit_1: int, actual_sua_1: int) returns (Tmp_649: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_649 == 0 || Tmp_649 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_332631937"} sdv_hash_332631937(actual_this_23: int, actual_limit_1: int, actual_sua_1: int) returns (Tmp_649: int)
{
  var {:scalar} Tmp_650: int;
  var {:pointer} Tmp_651: int;
  var {:scalar} Tmp_652: int;
  var {:pointer} Tmp_654: int;
  var {:scalar} Tmp_655: int;
  var {:scalar} Tmp_656: int;
  var {:scalar} Tmp_657: int;
  var {:scalar} Tmp_658: int;
  var {:scalar} Tmp_659: int;
  var {:pointer} Tmp_660: int;
  var {:pointer} Tmp_661: int;
  var {:scalar} ntStatus_24: int;
  var {:scalar} Tmp_662: int;
  var {:pointer} Tmp_663: int;
  var {:scalar} idx_13: int;
  var {:scalar} Tmp_664: int;
  var {:scalar} Tmp_665: int;
  var {:scalar} Tmp_666: int;
  var {:scalar} Tmp_667: int;
  var {:pointer} this_23: int;
  var {:scalar} limit_1: int;
  var {:pointer} sua_1: int;

  anon0:
    this_23 := actual_this_23;
    limit_1 := actual_limit_1;
    sua_1 := actual_sua_1;
    call {:si_unique_call 1005} Tmp_651 := __HAVOC_malloc(128);
    call {:si_unique_call 1006} Tmp_654 := __HAVOC_malloc(128);
    call {:si_unique_call 1007} Tmp_660 := __HAVOC_malloc(128);
    call {:si_unique_call 1008} Tmp_661 := __HAVOC_malloc(128);
    call {:si_unique_call 1009} Tmp_663 := __HAVOC_malloc(128);
    ntStatus_24 := 0;
    idx_13 := 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sua_1 != 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} limit_1 > 32;
    limit_1 := 32;
    goto L10;

  L10:
    assume {:nonnull} this_23 != 0;
    assume this_23 > 0;
    havoc Tmp_663;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    assume {:nonnull} sua_1 != 0;
    assume sua_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto L14;

  L14:
    call {:si_unique_call 1010} Tmp_652, Tmp_660, idx_13, Tmp_667 := sdv_hash_332631937_loop_L14(Tmp_652, Tmp_660, idx_13, Tmp_667, this_23, limit_1, sua_1);
    goto L14_last;

  L14_last:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} limit_1 > idx_13;
    Tmp_667 := idx_13;
    assume {:nonnull} sua_1 != 0;
    assume sua_1 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    Tmp_652 := idx_13;
    assume {:nonnull} this_23 != 0;
    assume this_23 > 0;
    havoc Tmp_660;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    idx_13 := idx_13 + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    assume false;
    return;

  anon35_Then:
    goto L15;

  L15:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} limit_1 > idx_13;
    Tmp_664 := idx_13;
    assume {:nonnull} sua_1 != 0;
    assume sua_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_655 := idx_13;
    assume {:nonnull} this_23 != 0;
    assume this_23 > 0;
    havoc Tmp_654;
    Tmp_650 := idx_13;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    assume {:nonnull} sua_1 != 0;
    assume sua_1 > 0;
    idx_13 := idx_13 + 1;
    goto L13;

  L13:
    assume {:nonnull} sua_1 != 0;
    assume sua_1 > 0;
    havoc Tmp_662;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Tmp_662 == 5;
    goto L25;

  L25:
    call {:si_unique_call 1011} Tmp_651, Tmp_658, idx_13, Tmp_665 := sdv_hash_332631937_loop_L25(Tmp_651, Tmp_658, idx_13, Tmp_665, this_23, limit_1, sua_1);
    goto L25_last;

  L25_last:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} limit_1 > idx_13;
    Tmp_658 := idx_13;
    assume {:nonnull} sua_1 != 0;
    assume sua_1 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    Tmp_665 := idx_13;
    assume {:nonnull} this_23 != 0;
    assume this_23 > 0;
    havoc Tmp_651;
    assume {:nonnull} Tmp_651 != 0;
    assume Tmp_651 > 0;
    idx_13 := idx_13 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    assume false;
    return;

  anon38_Then:
    goto L26;

  L26:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} limit_1 > idx_13;
    Tmp_657 := idx_13;
    assume {:nonnull} sua_1 != 0;
    assume sua_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    Tmp_666 := idx_13;
    assume {:nonnull} this_23 != 0;
    assume this_23 > 0;
    havoc Tmp_661;
    Tmp_656 := idx_13;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume {:nonnull} sua_1 != 0;
    assume sua_1 > 0;
    idx_13 := idx_13 + 1;
    goto L24;

  L24:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ntStatus_24 != 0;
    Tmp_659 := 0;
    goto L36;

  L36:
    assume {:nonnull} this_23 != 0;
    assume this_23 > 0;
    Tmp_649 := ntStatus_24;
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:partition} ntStatus_24 == 0;
    Tmp_659 := idx_13;
    goto L36;

  anon39_Then:
    goto L30;

  L30:
    ntStatus_24 := -1073741811;
    goto L24;

  anon32_Then:
    assume {:partition} idx_13 >= limit_1;
    goto L30;

  anon31_Then:
    assume {:partition} idx_13 >= limit_1;
    goto L26;

  anon37_Then:
    assume {:partition} Tmp_662 != 5;
    goto L24;

  anon36_Then:
    goto L19;

  L19:
    ntStatus_24 := -1073741811;
    goto L13;

  anon29_Then:
    assume {:partition} idx_13 >= limit_1;
    goto L19;

  anon28_Then:
    assume {:partition} idx_13 >= limit_1;
    goto L15;

  anon34_Then:
    goto L13;

  anon27_Then:
    assume {:partition} 32 >= limit_1;
    goto L10;

  anon33_Then:
    assume {:partition} sua_1 == 0;
    assume {:nonnull} this_23 != 0;
    assume this_23 > 0;
    Tmp_649 := ntStatus_24;
    goto L1;
}



procedure {:origName "sdv_hash_664127497"} sdv_hash_664127497(actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int, actual_Event_7: int) returns (Tmp_668: int);
  free ensures {:va_keep} Tmp_668 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_664127497"} sdv_hash_664127497(actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int, actual_Event_7: int) returns (Tmp_668: int)
{
  var {:pointer} Event_7: int;
  var vslice_dummy_var_131: int;

  anon0:
    Event_7 := actual_Event_7;
    call {:si_unique_call 1012} vslice_dummy_var_131 := KeSetEvent(Event_7, 0, 0);
    Tmp_668 := -1073741802;
    return;
}



procedure {:origName "sdv_hash_818961282"} sdv_hash_818961282(actual_this_24: int) returns (Tmp_670: int);
  free ensures {:va_keep} Tmp_670 == 0 || Tmp_670 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_818961282"} sdv_hash_818961282(actual_this_24: int) returns (Tmp_670: int)
{
  var {:scalar} rc_1: int;
  var {:pointer} this_24: int;

  anon0:
    this_24 := actual_this_24;
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} this_24 != 0;
    assume this_24 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L6;

  L6:
    rc_1 := 1;
    goto L8;

  L8:
    Tmp_670 := rc_1;
    return;

  anon16_Then:
    rc_1 := 0;
    goto L8;

  anon17_Then:
    goto L6;

  anon18_Then:
    goto L6;

  anon19_Then:
    goto L6;

  anon20_Then:
    goto L6;

  anon21_Then:
    goto L6;

  anon15_Then:
    goto L6;
}



procedure {:origName "sdv_hash_405508819"} sdv_hash_405508819(actual_this_25: int, actual_sua_2: int) returns (Tmp_672: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_672 == 1 || Tmp_672 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_405508819"} sdv_hash_405508819(actual_this_25: int, actual_sua_2: int) returns (Tmp_672: int)
{
  var {:scalar} Tmp_673: int;
  var {:pointer} Tmp_674: int;
  var {:scalar} Tmp_676: int;
  var {:scalar} Tmp_677: int;
  var {:scalar} Tmp_679: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:pointer} Tmp_682: int;
  var {:scalar} Tmp_683: int;
  var {:scalar} Tmp_684: int;
  var {:scalar} Tmp_685: int;
  var {:scalar} idx_14: int;
  var {:scalar} Tmp_686: int;
  var {:scalar} Tmp_687: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:pointer} this_25: int;
  var {:pointer} sua_2: int;
  var vslice_dummy_var_132: int;

  anon0:
    this_25 := actual_this_25;
    sua_2 := actual_sua_2;
    call {:si_unique_call 1013} Tmp_674 := __HAVOC_malloc(128);
    call {:si_unique_call 1014} vslice_dummy_var_132 := __HAVOC_malloc(128);
    call {:si_unique_call 1015} Tmp_680 := __HAVOC_malloc(128);
    call {:si_unique_call 1016} Tmp_681 := __HAVOC_malloc(128);
    call {:si_unique_call 1017} Tmp_682 := __HAVOC_malloc(128);
    call {:si_unique_call 1018} Tmp_688 := __HAVOC_malloc(128);
    call {:si_unique_call 1019} Tmp_689 := __HAVOC_malloc(128);
    idx_14 := 1;
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    Tmp_672 := 1;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} sua_2 != 0;
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    havoc Tmp_688;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} sua_2 != 0;
    assume sua_2 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    Tmp_672 := 0;
    goto L1;

  anon28_Then:
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L15;

  L15:
    call {:si_unique_call 1020} Tmp_673, Tmp_674, Tmp_683, idx_14 := sdv_hash_405508819_loop_L15(Tmp_673, Tmp_674, Tmp_683, idx_14, this_25, sua_2);
    goto L15_last;

  L15_last:
    Tmp_683 := idx_14;
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    havoc Tmp_674;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    Tmp_673 := idx_14;
    assume {:nonnull} sua_2 != 0;
    assume sua_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    Tmp_672 := 0;
    goto L1;

  anon31_Then:
    idx_14 := idx_14 + 1;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    assume false;
    return;

  anon30_Then:
    Tmp_685 := idx_14;
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    havoc Tmp_680;
    Tmp_677 := idx_14;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} sua_2 != 0;
    assume sua_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_672 := 0;
    goto L1;

  anon32_Then:
    idx_14 := idx_14 + 1;
    goto L14;

  L14:
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    havoc Tmp_682;
    assume {:nonnull} Tmp_682 != 0;
    assume Tmp_682 > 0;
    havoc Tmp_686;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Tmp_686 == 5;
    goto L24;

  L24:
    call {:si_unique_call 1021} Tmp_676, Tmp_679, Tmp_681, idx_14 := sdv_hash_405508819_loop_L24(Tmp_676, Tmp_679, Tmp_681, idx_14, this_25, sua_2);
    goto L24_last;

  L24_last:
    Tmp_679 := idx_14;
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    Tmp_676 := idx_14;
    assume {:nonnull} sua_2 != 0;
    assume sua_2 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    Tmp_672 := 0;
    goto L1;

  anon35_Then:
    idx_14 := idx_14 + 1;
    goto anon35_Then_dummy;

  anon35_Then_dummy:
    assume false;
    return;

  anon34_Then:
    Tmp_684 := idx_14;
    assume {:nonnull} this_25 != 0;
    assume this_25 > 0;
    havoc Tmp_689;
    Tmp_687 := idx_14;
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    assume {:nonnull} sua_2 != 0;
    assume sua_2 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_672 := 0;
    goto L1;

  anon36_Then:
    goto L23;

  L23:
    Tmp_672 := 1;
    goto L1;

  anon33_Then:
    assume {:partition} Tmp_686 != 5;
    goto L23;

  anon29_Then:
    goto L14;

  anon26_Then:
    Tmp_672 := 0;
    goto L1;

  anon25_Then:
    assume {:partition} sua_2 == 0;
    Tmp_672 := 0;
    goto L1;
}



procedure {:origName "Avc_PnpAddDevice"} Avc_PnpAddDevice(actual_DriverObject_3: int, actual_PhysicalDeviceObject_1: int) returns (Tmp_690: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_690 == -1073741824 || Tmp_690 == -1073741771 || Tmp_690 == -1073741670 || Tmp_690 == -1073741823 || Tmp_690 == 0 || Tmp_690 == -1073741808 || Tmp_690 == -1073741810 || Tmp_690 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_PnpAddDevice"} Avc_PnpAddDevice(actual_DriverObject_3: int, actual_PhysicalDeviceObject_1: int) returns (Tmp_690: int)
{
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:scalar} ResultLength_1: int;
  var {:pointer} DeviceObject_31: int;
  var {:pointer} sdv_426: int;
  var {:scalar} ntStatus_25: int;
  var {:pointer} PartialInfo: int;
  var {:pointer} Tmp_693: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} BusExtension_5: int;
  var {:scalar} uniName: int;
  var {:pointer} ListHandle: int;
  var {:pointer} PhysicalDeviceObject_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_2649: int;

  anon0:
    call {:si_unique_call 1022} vslice_dummy_var_133 := __HAVOC_malloc(24);
    call {:si_unique_call 1023} DeviceObject_31 := __HAVOC_malloc(4);
    call {:si_unique_call 1024} uniName := __HAVOC_malloc(12);
    call {:si_unique_call 1025} ListHandle := __HAVOC_malloc(4);
    PhysicalDeviceObject_1 := actual_PhysicalDeviceObject_1;
    call {:si_unique_call 1026} Tmp_691 := __HAVOC_malloc(36);
    call {:si_unique_call 1027} Tmp_694 := __HAVOC_malloc(80);
    ntStatus_25 := 0;
    call {:si_unique_call 1028} sdv_do_paged_code_check();
    call {:si_unique_call 1029} ntStatus_25 := IoCreateDevice(0, 1424, 0, 42, 256, 0, DeviceObject_31);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} ntStatus_25 < 0;
    goto L151;

  L151:
    Tmp_690 := ntStatus_25;
    return;

  anon21_Then:
    assume {:partition} 0 <= ntStatus_25;
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    havoc BusExtension_5;
    call {:si_unique_call 1030} sdv_RtlZeroMemory(0, 1424);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1031} ntStatus_25 := IoOpenDeviceRegistryKey(0, 2, 983103, 0);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} ntStatus_25 >= 0;
    Tmp_694 := strConst__li2bpl18;
    call {:si_unique_call 1032} RtlInitUnicodeString(uniName, Tmp_694);
    call {:si_unique_call 1033} sdv_InitializeObjectAttributes(0, 0, 576, 0, 0);
    call {:si_unique_call 1034} ntStatus_25 := ZwOpenKey(ListHandle, 983103, 0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} ntStatus_25 >= 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1035} ntStatus_25 := IoRegisterDeviceInterface(0, 0, 0, SymbolicLinkName__BUS_DEVICE_EXTENSION(BusExtension_5));
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1036} vslice_dummy_var_135 := ZwClose(0);
    goto L57;

  L57:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} ntStatus_25 >= 0;
    ResultLength_1 := 0;
    Tmp_691 := strConst__li2bpl19;
    call {:si_unique_call 1037} RtlInitUnicodeString(uniName, Tmp_691);
    call {:si_unique_call 1038} Tmp_693 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    call {:si_unique_call 1039} ntStatus_25 := ZwQueryValueKey(0, 0, 2, 0, 0, Tmp_693);
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    havoc ResultLength_1;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} -1073741772 != ntStatus_25;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} ResultLength_1 != 0;
    call {:si_unique_call 1040} sdv_426 := ExAllocatePoolWithTag(1, ResultLength_1, 541283905);
    PartialInfo := sdv_426;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} PartialInfo != 0;
    call {:si_unique_call 1041} Tmp_693 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    call {:si_unique_call 1042} ntStatus_25 := ZwQueryValueKey(0, 0, 2, 0, ResultLength_1, Tmp_693);
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    havoc ResultLength_1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} ntStatus_25 >= 0;
    assume {:nonnull} PartialInfo != 0;
    assume PartialInfo > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} PartialInfo != 0;
    assume PartialInfo > 0;
    havoc Tmp_692;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    goto L84;

  L84:
    call {:si_unique_call 1043} sdv_ExFreePool(0);
    goto L71;

  L71:
    ntStatus_25 := 0;
    goto L58;

  L58:
    call {:si_unique_call 1044} vslice_dummy_var_134 := ZwClose(0);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1045} AvcInitializeRemoveLock(RemoveLock__BUS_DEVICE_EXTENSION(BusExtension_5));
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1046} InitializeListHead(PdoList__BUS_DEVICE_EXTENSION(BusExtension_5));
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1047} InitializeListHead(PendingResponseList__BUS_DEVICE_EXTENSION(BusExtension_5));
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1048} InitializeListHead(PendingRequestList__BUS_DEVICE_EXTENSION(BusExtension_5));
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1049} InitializeListHead(CleanupList__BUS_DEVICE_EXTENSION(BusExtension_5));
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1050} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 1051} Tmp_693 := __HAVOC_malloc(4);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    call {:si_unique_call 1052} sdv_KeInitializeSpinLock(Tmp_693);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    call {:si_unique_call 1053} Tmp_693 := __HAVOC_malloc(4);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    call {:si_unique_call 1054} sdv_KeInitializeSpinLock(Tmp_693);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    call {:si_unique_call 1055} KeInitializeTimerEx(0, 1);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    havoc vslice_dummy_var_2649;
    call {:si_unique_call 1056} vslice_dummy_var_136 := KeSetTimer(0, vslice_dummy_var_2649, 0);
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1057} boogieTmp := IoAttachDeviceToDeviceStack(0, PhysicalDeviceObject_1);
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 1058} AvcAddInstanceToGlobalList(BusExtension_5);
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    goto L151;

  anon29_Then:
    call {:si_unique_call 1059} IoDeleteDevice(0);
    ntStatus_25 := -1073741810;
    goto L151;

  anon28_Then:
    goto L84;

  anon27_Then:
    assume {:partition} 0 > ntStatus_25;
    goto L84;

  anon30_Then:
    assume {:partition} PartialInfo == 0;
    goto L71;

  anon26_Then:
    assume {:partition} ResultLength_1 == 0;
    goto L71;

  anon25_Then:
    assume {:partition} -1073741772 == ntStatus_25;
    goto L71;

  anon24_Then:
    assume {:partition} 0 > ntStatus_25;
    goto L58;

  anon23_Then:
    assume {:partition} 0 > ntStatus_25;
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    call {:si_unique_call 1060} ntStatus_25 := IoRegisterDeviceInterface(0, 0, 0, SymbolicLinkName__BUS_DEVICE_EXTENSION(BusExtension_5));
    assume {:nonnull} BusExtension_5 != 0;
    assume BusExtension_5 > 0;
    goto L57;

  anon22_Then:
    assume {:partition} 0 > ntStatus_25;
    call {:si_unique_call 1061} IoDeleteDevice(0);
    goto L151;
}



procedure {:origName "Avc_1394BusResetNotificationRequest"} Avc_1394BusResetNotificationRequest(actual_DevExt_21: int, actual_Irb_1: int) returns (Tmp_695: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_695 == 0 || Tmp_695 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_1394BusResetNotificationRequest"} Avc_1394BusResetNotificationRequest(actual_DevExt_21: int, actual_Irb_1: int) returns (Tmp_695: int)
{
  var {:scalar} OldIrql_11: int;
  var {:scalar} ntStatus_26: int;
  var {:pointer} Tmp_696: int;
  var {:pointer} DevExt_21: int;
  var {:pointer} Irb_1: int;

  anon0:
    DevExt_21 := actual_DevExt_21;
    Irb_1 := actual_Irb_1;
    ntStatus_26 := 0;
    call {:si_unique_call 1062} Tmp_696 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    call {:si_unique_call 1063} sdv_KeAcquireSpinLock(0, Tmp_696);
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    havoc OldIrql_11;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} DevExt_21 != 0;
    assume DevExt_21 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    assume {:nonnull} DevExt_21 != 0;
    assume DevExt_21 > 0;
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    goto L13;

  L13:
    call {:si_unique_call 1064} sdv_KeReleaseSpinLock(0, OldIrql_11);
    Tmp_695 := ntStatus_26;
    return;

  anon5_Then:
    assume {:nonnull} Irb_1 != 0;
    assume Irb_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} DevExt_21 != 0;
    assume DevExt_21 > 0;
    assume {:nonnull} DevExt_21 != 0;
    assume DevExt_21 > 0;
    goto L13;

  anon6_Then:
    ntStatus_26 := -1073741811;
    goto L13;
}



procedure {:origName "AvcReq_OutputPlugSignalFormat"} AvcReq_OutputPlugSignalFormat(actual_Command_19: int, actual_Plug: int) returns (Tmp_697: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcReq_OutputPlugSignalFormat"} AvcReq_OutputPlugSignalFormat(actual_Command_19: int, actual_Plug: int) returns (Tmp_697: int)
{
  var {:scalar} ntStatus_27: int;
  var {:scalar} Tmp_698: int;
  var {:pointer} Operands_6: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} Command_19: int;
  var {:scalar} Plug: int;

  anon0:
    Command_19 := actual_Command_19;
    Plug := actual_Plug;
    call {:si_unique_call 1065} Tmp_700 := __HAVOC_malloc(2048);
    ntStatus_27 := 0;
    call {:si_unique_call 1066} sdv_do_paged_code_check();
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    havoc Tmp_698;
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    havoc Tmp_700;
    Operands_6 := Tmp_700 + Tmp_698 * 4;
    assume {:nonnull} Operands_6 != 0;
    assume Operands_6 > 0;
    assume {:nonnull} Operands_6 != 0;
    assume Operands_6 > 0;
    assume {:nonnull} Operands_6 != 0;
    assume Operands_6 > 0;
    assume {:nonnull} Operands_6 != 0;
    assume Operands_6 > 0;
    assume {:nonnull} Operands_6 != 0;
    assume Operands_6 > 0;
    call {:si_unique_call 1067} ntStatus_27 := AvcRobustStatusRequest(Command_19);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} ntStatus_27 != 0;
    goto L23;

  L23:
    Tmp_697 := ntStatus_27;
    return;

  anon7_Then:
    assume {:partition} ntStatus_27 == 0;
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    ntStatus_27 := -1073741822;
    goto L24;

  L24:
    assume {:nonnull} Command_19 != 0;
    assume Command_19 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    ntStatus_27 := -1073741811;
    goto L23;

  anon9_Then:
    goto L23;

  anon8_Then:
    goto L24;
}



procedure {:origName "Avc_61883BusResetNotificationRequest"} Avc_61883BusResetNotificationRequest(actual_DevExt_22: int, actual_AvRequest: int) returns (Tmp_701: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_701 == 0 || Tmp_701 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_61883BusResetNotificationRequest"} Avc_61883BusResetNotificationRequest(actual_DevExt_22: int, actual_AvRequest: int) returns (Tmp_701: int)
{
  var {:pointer} Tmp_702: int;
  var {:scalar} OldIrql_12: int;
  var {:scalar} ntStatus_28: int;
  var {:pointer} DevExt_22: int;
  var {:pointer} AvRequest: int;

  anon0:
    DevExt_22 := actual_DevExt_22;
    AvRequest := actual_AvRequest;
    ntStatus_28 := 0;
    call {:si_unique_call 1068} Tmp_702 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    call {:si_unique_call 1069} sdv_KeAcquireSpinLock(0, Tmp_702);
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    havoc OldIrql_12;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} DevExt_22 != 0;
    assume DevExt_22 > 0;
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    assume {:nonnull} DevExt_22 != 0;
    assume DevExt_22 > 0;
    goto L13;

  L13:
    call {:si_unique_call 1070} sdv_KeReleaseSpinLock(0, OldIrql_12);
    Tmp_701 := ntStatus_28;
    return;

  anon5_Then:
    assume {:nonnull} AvRequest != 0;
    assume AvRequest > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} DevExt_22 != 0;
    assume DevExt_22 > 0;
    assume {:nonnull} DevExt_22 != 0;
    assume DevExt_22 > 0;
    goto L13;

  anon6_Then:
    ntStatus_28 := -1073741811;
    goto L13;
}



procedure {:origName "AvcRemoveFromPdoList"} AvcRemoveFromPdoList(actual_BusExtension_6: int, actual_PdoData_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcRemoveFromPdoList"} AvcRemoveFromPdoList(actual_BusExtension_6: int, actual_PdoData_3: int)
{
  var {:pointer} Tmp_703: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} PdoData_3: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;

  anon0:
    call {:si_unique_call 1071} vslice_dummy_var_137 := __HAVOC_malloc(4);
    PdoData_3 := actual_PdoData_3;
    call {:si_unique_call 1072} Tmp_703 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    call {:si_unique_call 1073} sdv_KeAcquireSpinLock(0, Tmp_703);
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 1074} vslice_dummy_var_138 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1075} sdv_KeReleaseSpinLock(0, oldIrql_4);
    assume {:nonnull} PdoData_3 != 0;
    assume PdoData_3 > 0;
    call {:si_unique_call 1076} InitializeListHead(PdoList__PDO_DATA(PdoData_3));
    return;
}



procedure {:origName "Avc_SetFcpNotify"} Avc_SetFcpNotify(actual_BusExtension_7: int, actual_bEnable: int) returns (Tmp_705: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_SetFcpNotify"} Avc_SetFcpNotify(actual_BusExtension_7: int, actual_bEnable: int) returns (Tmp_705: int)
{
  var {:pointer} Irp_34: int;
  var {:scalar} ntStatus_29: int;
  var {:pointer} NextIrpStack_8: int;
  var {:pointer} Tmp_707: int;
  var {:scalar} AvRequest_1: int;
  var {:pointer} BusExtension_7: int;
  var {:scalar} bEnable: int;
  var vslice_dummy_var_2650: int;
  var vslice_dummy_var_2651: int;

  anon0:
    call {:si_unique_call 1077} AvRequest_1 := __HAVOC_malloc(460);
    BusExtension_7 := actual_BusExtension_7;
    bEnable := actual_bEnable;
    ntStatus_29 := 0;
    call {:si_unique_call 1078} sdv_do_paged_code_check();
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    havoc Tmp_707;
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    havoc vslice_dummy_var_2650;
    call {:si_unique_call 1079} Irp_34 := IoAllocateIrp(vslice_dummy_var_2650, 0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} Irp_34 != 0;
    call {:si_unique_call 1080} NextIrpStack_8 := sdv_IoGetNextIrpStackLocation(Irp_34);
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} bEnable != 0;
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L28;

  L28:
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_8)] := 15;
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} NextIrpStack_8 != 0;
    assume NextIrpStack_8 > 0;
    assume {:nonnull} BusExtension_7 != 0;
    assume BusExtension_7 > 0;
    havoc vslice_dummy_var_2651;
    call {:si_unique_call 1081} ntStatus_29 := Avc_SubmitIrpSynch(vslice_dummy_var_2651, Irp_34);
    call {:si_unique_call 1082} IoFreeIrp(0);
    goto L38;

  L38:
    Tmp_705 := ntStatus_29;
    return;

  anon9_Then:
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    goto L28;

  anon8_Then:
    assume {:partition} bEnable == 0;
    assume {:nonnull} AvRequest_1 != 0;
    assume AvRequest_1 > 0;
    goto L28;

  anon7_Then:
    assume {:partition} Irp_34 == 0;
    ntStatus_29 := -1073741670;
    goto L38;
}



procedure {:origName "Avc_SetUnitDirectory"} Avc_SetUnitDirectory(actual_BusExtension_8: int, actual_bEnable_1: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_SetUnitDirectory"} Avc_SetUnitDirectory(actual_BusExtension_8: int, actual_bEnable_1: int)
{
  var {:pointer} Irp_35: int;
  var {:scalar} ntStatus_30: int;
  var {:pointer} NextIrpStack_9: int;
  var {:pointer} Tmp_708: int;
  var {:scalar} AvRequest_2: int;
  var {:pointer} Tmp_711: int;
  var {:pointer} BusExtension_8: int;
  var {:scalar} bEnable_1: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_2652: int;
  var vslice_dummy_var_2653: int;

  anon0:
    call {:si_unique_call 1083} vslice_dummy_var_139 := __HAVOC_malloc(4);
    call {:si_unique_call 1084} AvRequest_2 := __HAVOC_malloc(460);
    BusExtension_8 := actual_BusExtension_8;
    bEnable_1 := actual_bEnable_1;
    call {:si_unique_call 1085} sdv_do_paged_code_check();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} bEnable_1 != 0;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L8;

  L8:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} bEnable_1 != 0;
    goto L12;

  L12:
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    havoc Tmp_711;
    assume {:nonnull} Tmp_711 != 0;
    assume Tmp_711 > 0;
    havoc vslice_dummy_var_2652;
    call {:si_unique_call 1086} Irp_35 := IoAllocateIrp(vslice_dummy_var_2652, 0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Irp_35 != 0;
    call {:si_unique_call 1087} NextIrpStack_9 := sdv_IoGetNextIrpStackLocation(Irp_35);
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} bEnable_1 != 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L32;

  L32:
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    assume {:nonnull} NextIrpStack_9 != 0;
    assume NextIrpStack_9 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_9)] := 15;
    assume {:nonnull} NextIrpStack_9 != 0;
    assume NextIrpStack_9 > 0;
    assume {:nonnull} NextIrpStack_9 != 0;
    assume NextIrpStack_9 > 0;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    havoc vslice_dummy_var_2653;
    call {:si_unique_call 1088} ntStatus_30 := Avc_SubmitIrpSynch(vslice_dummy_var_2653, Irp_35);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} ntStatus_30 >= 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} bEnable_1 != 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    havoc Tmp_708;
    goto L49;

  L49:
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    goto L43;

  L43:
    call {:si_unique_call 1089} IoFreeIrp(0);
    goto L1;

  L1:
    return;

  anon25_Then:
    assume {:partition} bEnable_1 == 0;
    Tmp_708 := 0;
    goto L49;

  anon24_Then:
    assume {:partition} 0 > ntStatus_30;
    goto L43;

  anon27_Then:
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    goto L32;

  anon26_Then:
    assume {:partition} bEnable_1 == 0;
    assume {:nonnull} AvRequest_2 != 0;
    assume AvRequest_2 > 0;
    goto L32;

  anon23_Then:
    assume {:partition} Irp_35 == 0;
    goto L1;

  anon20_Then:
    assume {:partition} bEnable_1 == 0;
    assume {:nonnull} BusExtension_8 != 0;
    assume BusExtension_8 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L12;

  anon22_Then:
    goto L1;

  anon21_Then:
    goto L1;

  anon19_Then:
    assume {:partition} bEnable_1 == 0;
    goto L8;
}



procedure {:origName "RtlULongAdd"} RtlULongAdd(actual_ulAugend: int, actual_ulAddend: int, actual_pulResult: int) returns (Tmp_712: int);
  free ensures {:va_keep} Tmp_712 == 0 || Tmp_712 == -1073741675;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlULongAdd"} RtlULongAdd(actual_ulAugend: int, actual_ulAddend: int, actual_pulResult: int) returns (Tmp_712: int)
{
  var {:scalar} status_6: int;
  var {:scalar} ulAugend: int;
  var {:scalar} ulAddend: int;
  var {:pointer} pulResult: int;

  anon0:
    ulAugend := actual_ulAugend;
    ulAddend := actual_ulAddend;
    pulResult := actual_pulResult;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ulAugend + ulAddend >= ulAugend;
    assume {:nonnull} pulResult != 0;
    assume pulResult > 0;
    status_6 := 0;
    goto L8;

  L8:
    Tmp_712 := status_6;
    return;

  anon3_Then:
    assume {:partition} ulAugend > ulAugend + ulAddend;
    assume {:nonnull} pulResult != 0;
    assume pulResult > 0;
    status_6 := -1073741675;
    goto L8;
}



procedure {:origName "RtlULongMult"} RtlULongMult(actual_ulMultiplicand: int, actual_ulMultiplier: int, actual_pulResult_1: int) returns (Tmp_714: int);
  free ensures {:va_keep} Tmp_714 == 0 || Tmp_714 == -1073741675;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlULongMult"} RtlULongMult(actual_ulMultiplicand: int, actual_ulMultiplier: int, actual_pulResult_1: int) returns (Tmp_714: int)
{
  var {:scalar} ull64Result: int;
  var {:scalar} ulMultiplicand: int;
  var {:scalar} ulMultiplier: int;
  var {:pointer} pulResult_1: int;

  anon0:
    ulMultiplicand := actual_ulMultiplicand;
    ulMultiplier := actual_ulMultiplier;
    pulResult_1 := actual_pulResult_1;
    ull64Result := ulMultiplicand * ulMultiplier;
    call {:si_unique_call 1090} Tmp_714 := RtlULongLongToULong(ull64Result, pulResult_1);
    return;
}



procedure {:origName "Avc_EnumerateChildren"} Avc_EnumerateChildren(actual_BusExtension_9: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_EnumerateChildren"} Avc_EnumerateChildren(actual_BusExtension_9: int)
{
  var {:pointer} PdoData_4: int;
  var {:pointer} BusExtension_9: int;
  var vslice_dummy_var_140: int;

  anon0:
    call {:si_unique_call 1091} vslice_dummy_var_140 := __HAVOC_malloc(4);
    BusExtension_9 := actual_BusExtension_9;
    call {:si_unique_call 1092} sdv_do_paged_code_check();
    assume {:nonnull} BusExtension_9 != 0;
    assume BusExtension_9 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 1093} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_9 != 0;
    assume BusExtension_9 > 0;
    havoc PdoData_4;
    goto L15;

  L15:
    call {:si_unique_call 1094} PdoData_4 := Avc_EnumerateChildren_loop_L15(PdoData_4);
    goto L15_last;

  L15_last:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    assume {:nonnull} PdoData_4 != 0;
    assume PdoData_4 > 0;
    havoc PdoData_4;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    assume false;
    return;

  anon6_Then:
    call {:si_unique_call 1095} ExReleaseFastMutex(0);
    call {:si_unique_call 1096} Avc_EnumerateExtrnalChildren(BusExtension_9);
    goto L1;

  L1:
    return;

  anon5_Then:
    goto L1;
}



procedure {:origName "AvcRemoveInstanceFromGlobalList"} AvcRemoveInstanceFromGlobalList(actual_BusExtension_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcRemoveInstanceFromGlobalList"} AvcRemoveInstanceFromGlobalList(actual_BusExtension_10: int)
{
  var {:scalar} sdv_444: int;
  var {:scalar} OldIrql_13: int;
  var {:pointer} Tmp_719: int;
  var {:pointer} BusExtension_10: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;

  anon0:
    call {:si_unique_call 1097} vslice_dummy_var_141 := __HAVOC_malloc(4);
    BusExtension_10 := actual_BusExtension_10;
    call {:si_unique_call 1098} sdv_444 := sdv_IsListEmpty(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_444 == 0;
    call {:si_unique_call 1099} Tmp_719 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    call {:si_unique_call 1100} sdv_KeAcquireSpinLock(0, Tmp_719);
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    havoc OldIrql_13;
    call {:si_unique_call 1101} vslice_dummy_var_142 := sdv_RemoveEntryList(0);
    assume {:nonnull} BusExtension_10 != 0;
    assume BusExtension_10 > 0;
    call {:si_unique_call 1102} InitializeListHead(FdoEntry__BUS_DEVICE_EXTENSION(BusExtension_10));
    call {:si_unique_call 1103} sdv_KeReleaseSpinLock(0, OldIrql_13);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} sdv_444 != 0;
    goto L1;
}



procedure {:origName "Avc_IsLegacyDV"} Avc_IsLegacyDV(actual_BusExtension_11: int) returns (Tmp_720: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_720 == 0 || Tmp_720 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_IsLegacyDV"} Avc_IsLegacyDV(actual_BusExtension_11: int) returns (Tmp_720: int)
{
  var {:dopa} {:scalar} SubunitAddr_10: int;
  var {:scalar} rc_2: int;
  var {:pointer} Operands_7: int;
  var {:pointer} Tmp_721: int;
  var {:scalar} ntStatus_32: int;
  var {:pointer} Tmp_722: int;
  var {:pointer} Command_20: int;
  var {:scalar} Tmp_724: int;
  var {:pointer} Operands_8: int;
  var {:scalar} Tmp_725: int;
  var {:pointer} BusExtension_11: int;
  var vslice_dummy_var_2654: int;
  var vslice_dummy_var_2655: int;
  var vslice_dummy_var_2656: int;

  anon0:
    call {:si_unique_call 1104} SubunitAddr_10 := __HAVOC_malloc(4);
    call {:si_unique_call 1105} Command_20 := __HAVOC_malloc(4);
    BusExtension_11 := actual_BusExtension_11;
    call {:si_unique_call 1106} Tmp_721 := __HAVOC_malloc(2048);
    call {:si_unique_call 1107} Tmp_722 := __HAVOC_malloc(2048);
    rc_2 := 0;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    call {:si_unique_call 1108} sdv_do_paged_code_check();
    call {:si_unique_call 1109} ntStatus_32 := AvcAllocateUnitCommandContext(BusExtension_11, Command_20);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} ntStatus_32 != 0;
    goto L19;

  L19:
    Tmp_720 := rc_2;
    return;

  anon47_Then:
    assume {:partition} ntStatus_32 == 0;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    havoc vslice_dummy_var_2654;
    call {:si_unique_call 1110} ntStatus_32 := AvcReq_OutputPlugSignalFormat(vslice_dummy_var_2654, 0);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} ntStatus_32 == 0;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    havoc Tmp_724;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    havoc Tmp_722;
    Operands_7 := Tmp_722 + Tmp_724 * 4;
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    ntStatus_32 := -1073741823;
    goto L23;

  L23:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} ntStatus_32 != 0;
    assume {:nonnull} SubunitAddr_10 != 0;
    assume SubunitAddr_10 > 0;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    havoc vslice_dummy_var_2655;
    call {:si_unique_call 1111} ntStatus_32 := AvcReq_OutputPlugSignalMode(vslice_dummy_var_2655, SubunitAddr_10);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} ntStatus_32 == 0;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    havoc Tmp_725;
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    havoc Tmp_721;
    Operands_8 := Tmp_721 + Tmp_725 * 4;
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Operands_8 != 0;
    assume Operands_8 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L37;

  L37:
    rc_2 := 1;
    goto L24;

  L24:
    assume {:nonnull} Command_20 != 0;
    assume Command_20 > 0;
    havoc vslice_dummy_var_2656;
    call {:si_unique_call 1112} AvcFreeCommandContext(vslice_dummy_var_2656);
    goto L19;

  anon52_Then:
    goto L24;

  anon53_Then:
    goto L37;

  anon54_Then:
    goto L37;

  anon55_Then:
    goto L37;

  anon56_Then:
    goto L37;

  anon57_Then:
    goto L37;

  anon58_Then:
    goto L37;

  anon59_Then:
    goto L37;

  anon60_Then:
    goto L37;

  anon68_Then:
    goto L37;

  anon50_Then:
    assume {:partition} ntStatus_32 != 0;
    goto L24;

  anon49_Then:
    assume {:partition} ntStatus_32 == 0;
    goto L24;

  anon61_Then:
    goto L23;

  anon62_Then:
    goto L42;

  L42:
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Operands_7 != 0;
    assume Operands_7 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L45;

  L45:
    rc_2 := 1;
    goto L23;

  anon63_Then:
    ntStatus_32 := -1073741823;
    goto L23;

  anon64_Then:
    goto L45;

  anon65_Then:
    goto L45;

  anon66_Then:
    goto L45;

  anon67_Then:
    goto L45;

  anon51_Then:
    goto L45;

  anon69_Then:
    goto L42;

  anon48_Then:
    assume {:partition} ntStatus_32 != 0;
    goto L23;
}



procedure {:origName "AvcReq_UnitInfo"} AvcReq_UnitInfo(actual_BusExtension_12: int) returns (Tmp_726: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcReq_UnitInfo"} AvcReq_UnitInfo(actual_BusExtension_12: int) returns (Tmp_726: int)
{
  var {:pointer} Irp_36: int;
  var {:scalar} ulUnitModelLength: int;
  var {:pointer} sdv_450: int;
  var {:scalar} ulModelLength: int;
  var {:scalar} ntStatus_33: int;
  var {:scalar} ulVendorLength: int;
  var {:pointer} NextIrpStack_10: int;
  var {:pointer} sdv_454: int;
  var {:pointer} sdv_455: int;
  var {:pointer} Tmp_730: int;
  var {:scalar} AvRequest_3: int;
  var {:pointer} BusExtension_12: int;
  var vslice_dummy_var_2657: int;
  var vslice_dummy_var_2658: int;
  var vslice_dummy_var_2659: int;
  var vslice_dummy_var_2660: int;
  var vslice_dummy_var_2661: int;
  var vslice_dummy_var_2662: int;
  var vslice_dummy_var_2663: int;

  anon0:
    call {:si_unique_call 1113} AvRequest_3 := __HAVOC_malloc(460);
    BusExtension_12 := actual_BusExtension_12;
    ntStatus_33 := 0;
    call {:si_unique_call 1114} sdv_do_paged_code_check();
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc Tmp_730;
    assume {:nonnull} Tmp_730 != 0;
    assume Tmp_730 > 0;
    havoc vslice_dummy_var_2657;
    call {:si_unique_call 1115} Irp_36 := IoAllocateIrp(vslice_dummy_var_2657, 0);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Irp_36 != 0;
    call {:si_unique_call 1116} NextIrpStack_10 := sdv_IoGetNextIrpStackLocation(Irp_36);
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_10)] := 15;
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc vslice_dummy_var_2658;
    call {:si_unique_call 1117} ntStatus_33 := Avc_SubmitIrpSynch(vslice_dummy_var_2658, Irp_36);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} ntStatus_33 != 0;
    goto L56;

  L56:
    call {:si_unique_call 1118} IoFreeIrp(0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} ntStatus_33 < 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    call {:si_unique_call 1119} sdv_ExFreePool(0);
    goto L61;

  L61:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    call {:si_unique_call 1120} sdv_ExFreePool(0);
    goto L65;

  L65:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    call {:si_unique_call 1121} sdv_ExFreePool(0);
    goto L69;

  L69:
    call {:si_unique_call 1122} sdv_RtlZeroMemory(0, 48);
    goto L10;

  L10:
    Tmp_726 := ntStatus_33;
    return;

  anon44_Then:
    goto L69;

  anon43_Then:
    goto L65;

  anon42_Then:
    goto L61;

  anon41_Then:
    assume {:partition} 0 <= ntStatus_33;
    goto L10;

  anon39_Then:
    assume {:partition} ntStatus_33 == 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L77;

  L77:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc ulVendorLength;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc ulModelLength;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc ulUnitModelLength;
    call {:si_unique_call 1123} sdv_RtlZeroMemory(0, 48);
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc vslice_dummy_var_2659;
    call {:si_unique_call 1124} sdv_455 := ExAllocatePoolWithTag(1, vslice_dummy_var_2659, 541283905);
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    ntStatus_33 := -1073741670;
    goto L56;

  anon52_Then:
    goto L89;

  L89:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc vslice_dummy_var_2660;
    call {:si_unique_call 1125} sdv_454 := ExAllocatePoolWithTag(1, vslice_dummy_var_2660, 541283905);
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    ntStatus_33 := -1073741670;
    goto L56;

  anon53_Then:
    goto L97;

  L97:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc vslice_dummy_var_2661;
    call {:si_unique_call 1126} sdv_450 := ExAllocatePoolWithTag(1, vslice_dummy_var_2661, 541283905);
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    ntStatus_33 := -1073741670;
    goto L56;

  anon54_Then:
    goto L105;

  L105:
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_10)] := 15;
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc vslice_dummy_var_2662;
    call {:si_unique_call 1127} ntStatus_33 := Avc_SubmitIrpSynch(vslice_dummy_var_2662, Irp_36);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} ntStatus_33 == 0;
    goto L120;

  L120:
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    assume {:nonnull} AvRequest_3 != 0;
    assume AvRequest_3 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_10)] := 15;
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    assume {:nonnull} NextIrpStack_10 != 0;
    assume NextIrpStack_10 > 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    havoc vslice_dummy_var_2663;
    call {:si_unique_call 1128} ntStatus_33 := Avc_SubmitIrpSynch(vslice_dummy_var_2663, Irp_36);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} ntStatus_33 == 0;
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto L56;

  anon49_Then:
    assume {:partition} ntStatus_33 != 0;
    goto L56;

  anon48_Then:
    assume {:partition} ntStatus_33 != 0;
    goto L56;

  anon47_Then:
    goto L105;

  anon46_Then:
    goto L97;

  anon51_Then:
    goto L89;

  anon40_Then:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} BusExtension_12 != 0;
    assume BusExtension_12 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L120;

  anon50_Then:
    goto L77;

  anon45_Then:
    goto L77;

  anon38_Then:
    assume {:partition} Irp_36 == 0;
    ntStatus_33 := -1073741670;
    goto L10;

  anon37_Then:
    goto L10;
}



procedure {:origName "Avc_UpdateVirtualSubunitInfo"} Avc_UpdateVirtualSubunitInfo(actual_BusExtension_13: int, actual_cbAddrSpec: int, actual_AddrSpec_2: int) returns (Tmp_732: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_732 == -1073741306 || Tmp_732 == 0 || Tmp_732 == -1073741823 || Tmp_732 == -1073741559 || Tmp_732 == -1073741670 || Tmp_732 == -1073741727 || Tmp_732 == -1073741811 || Tmp_732 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_UpdateVirtualSubunitInfo"} Avc_UpdateVirtualSubunitInfo(actual_BusExtension_13: int, actual_cbAddrSpec: int, actual_AddrSpec_2: int) returns (Tmp_732: int)
{
  var {:scalar} Tmp_733: int;
  var {:pointer} PdoData_5: int;
  var {:scalar} InstanceID: int;
  var {:scalar} SubunitID_2: int;
  var {:pointer} ValueName_3: int;
  var {:pointer} SubunitAddr_11: int;
  var {:pointer} szValueNameWorkingBuffer: int;
  var {:pointer} SubunitInfoBytes_1: int;
  var {:scalar} uniValueName: int;
  var {:scalar} sdv_462: int;
  var {:pointer} QueryTable_1: int;
  var {:scalar} ntStatus_34: int;
  var {:pointer} szTemp: int;
  var {:scalar} AllowedDelta: int;
  var {:scalar} cbAddr: int;
  var {:scalar} sdv_471: int;
  var {:pointer} Tmp_734: int;
  var {:scalar} uniTemp: int;
  var {:dopa} {:scalar} MaxSubunitID: int;
  var {:pointer} SubunitType_3: int;
  var {:dopa} {:scalar} BytesUsed_5: int;
  var {:scalar} uniName_1: int;
  var {:pointer} ListHandle_1: int;
  var {:pointer} sdv_476: int;
  var {:pointer} BusExtension_13: int;
  var {:scalar} cbAddrSpec: int;
  var {:pointer} AddrSpec_2: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_2664: int;
  var vslice_dummy_var_2665: int;
  var vslice_dummy_var_2666: int;
  var vslice_dummy_var_2667: int;
  var vslice_dummy_var_2668: int;

  anon0:
    call {:si_unique_call 1129} vslice_dummy_var_143 := __HAVOC_malloc(24);
    call {:si_unique_call 1130} ValueName_3 := __HAVOC_malloc(4);
    call {:si_unique_call 1131} uniValueName := __HAVOC_malloc(12);
    call {:si_unique_call 1132} uniTemp := __HAVOC_malloc(12);
    call {:si_unique_call 1133} MaxSubunitID := __HAVOC_malloc(4);
    call {:si_unique_call 1134} BytesUsed_5 := __HAVOC_malloc(4);
    call {:si_unique_call 1135} uniName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1136} ListHandle_1 := __HAVOC_malloc(4);
    BusExtension_13 := actual_BusExtension_13;
    cbAddrSpec := actual_cbAddrSpec;
    AddrSpec_2 := actual_AddrSpec_2;
    call {:si_unique_call 1137} SubunitAddr_11 := __HAVOC_malloc(128);
    call {:si_unique_call 1138} szValueNameWorkingBuffer := __HAVOC_malloc(1024);
    call {:si_unique_call 1139} SubunitInfoBytes_1 := __HAVOC_malloc(128);
    call {:si_unique_call 1140} szTemp := __HAVOC_malloc(16);
    call {:si_unique_call 1141} Tmp_734 := __HAVOC_malloc(80);
    call {:si_unique_call 1142} SubunitType_3 := __HAVOC_malloc(128);
    call {:si_unique_call 1143} vslice_dummy_var_147 := __HAVOC_malloc(8);
    cbAddr := cbAddrSpec - 4;
    assume {:nonnull} BytesUsed_5 != 0;
    assume BytesUsed_5 > 0;
    AllowedDelta := 3;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} cbAddr > 32;
    Tmp_732 := -1073741306;
    goto L1;

  L1:
    return;

  anon77_Then:
    assume {:partition} 32 >= cbAddr;
    assume {:nonnull} AddrSpec_2 != 0;
    assume AddrSpec_2 > 0;
    havoc vslice_dummy_var_2664;
    call {:si_unique_call 1144} ntStatus_34 := AvcValidateSubunitAddress(vslice_dummy_var_2664, cbAddr, BytesUsed_5);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} ntStatus_34 != 0;
    goto L18;

  L18:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} ntStatus_34 != 0;
    goto L20;

  L20:
    Tmp_732 := ntStatus_34;
    goto L1;

  anon55_Then:
    assume {:partition} ntStatus_34 == 0;
    ntStatus_34 := -1073741811;
    goto L20;

  anon53_Then:
    assume {:partition} ntStatus_34 == 0;
    assume {:nonnull} BytesUsed_5 != 0;
    assume BytesUsed_5 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L28;

  L28:
    assume {:nonnull} BytesUsed_5 != 0;
    assume BytesUsed_5 > 0;
    havoc vslice_dummy_var_2665;
    call {:si_unique_call 1145} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2665);
    call {:si_unique_call 1146} ntStatus_34 := AvcUnpackSubunitAddress(SubunitInfoBytes_1, SubunitType_3, MaxSubunitID, BytesUsed_5);
    SubunitID_2 := 0;
    goto L36;

  L36:
    call {:si_unique_call 1147} SubunitID_2, ntStatus_34 := Avc_UpdateVirtualSubunitInfo_loop_L36(SubunitID_2, SubunitAddr_11, ntStatus_34, MaxSubunitID, SubunitType_3, BusExtension_13);
    goto L36_last;

  L36_last:
    assume {:nonnull} MaxSubunitID != 0;
    assume MaxSubunitID > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    call {:si_unique_call 1148} ntStatus_34 := AvcPackSubunitAddress(SubunitType_3, SubunitID_2, 32, SubunitAddr_11, 0);
    call {:si_unique_call 1149} Avc_FindOrCreatePDO(BusExtension_13, SubunitAddr_11, 5);
    SubunitID_2 := SubunitID_2 + 1;
    goto anon57_Else_dummy;

  anon57_Else_dummy:
    assume false;
    return;

  anon57_Then:
    call {:si_unique_call 1150} ntStatus_34 := AvcPackSubunitAddress(SubunitType_3, SubunitID_2, 32, SubunitAddr_11, 0);
    call {:si_unique_call 1151} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    havoc PdoData_5;
    goto L53;

  L53:
    call {:si_unique_call 1152} PdoData_5, sdv_462, sdv_471 := Avc_UpdateVirtualSubunitInfo_loop_L53(PdoData_5, SubunitAddr_11, sdv_462, sdv_471, BusExtension_13);
    goto L53_last;

  L53_last:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    havoc vslice_dummy_var_2666;
    call {:si_unique_call 1153} sdv_471 := AvcSubunitAddrsEqual(SubunitAddr_11, vslice_dummy_var_2666);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_471 != 0;
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    goto L63;

  L63:
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    havoc PdoData_5;
    goto L66;

  L66:
    call {:si_unique_call 1154} PdoData_5, sdv_462 := Avc_UpdateVirtualSubunitInfo_loop_L66(PdoData_5, SubunitAddr_11, sdv_462, BusExtension_13);
    goto L66_last;

  L66_last:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    havoc vslice_dummy_var_2667;
    call {:si_unique_call 1155} sdv_462 := AvcSubunitPackedTypesEqual(SubunitAddr_11, vslice_dummy_var_2667);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_462 != 0;
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    goto L71;

  L71:
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    havoc PdoData_5;
    goto L71_dummy;

  L71_dummy:
    assume false;
    return;

  anon63_Then:
    goto L71;

  anon62_Then:
    assume {:partition} sdv_462 == 0;
    goto L71;

  anon61_Then:
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    assume false;
    return;

  anon60_Then:
    goto L63;

  anon59_Then:
    assume {:partition} sdv_471 == 0;
    assume {:nonnull} PdoData_5 != 0;
    assume PdoData_5 > 0;
    havoc PdoData_5;
    goto anon59_Then_dummy;

  anon59_Then_dummy:
    assume false;
    return;

  anon58_Then:
    call {:si_unique_call 1156} ExReleaseFastMutex(0);
    assume {:nonnull} AddrSpec_2 != 0;
    assume AddrSpec_2 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 1157} ntStatus_34 := IoOpenDeviceRegistryKey(0, 2, 983103, 0);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} ntStatus_34 >= 0;
    Tmp_734 := strConst__li2bpl18;
    call {:si_unique_call 1158} RtlInitUnicodeString(uniName_1, Tmp_734);
    call {:si_unique_call 1159} sdv_InitializeObjectAttributes(0, 0, 576, 0, 0);
    call {:si_unique_call 1160} ntStatus_34 := ZwOpenKey(ListHandle_1, 983103, 0);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} ntStatus_34 >= 0;
    call {:si_unique_call 1161} sdv_476 := sdv_ExAllocateFromNPagedLookasideList(0);
    QueryTable_1 := sdv_476;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} QueryTable_1 != 0;
    call {:si_unique_call 1162} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    call {:si_unique_call 1163} ntStatus_34 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} ntStatus_34 >= 0;
    goto L122;

  L122:
    call {:si_unique_call 1164} ntStatus_34 := AvcGetDeviceDescriptionMessage(SubunitInfoBytes_1, ValueName_3);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} ntStatus_34 == 0;
    assume {:nonnull} uniValueName != 0;
    assume uniValueName > 0;
    assume {:nonnull} uniValueName != 0;
    assume uniValueName > 0;
    assume {:nonnull} uniValueName != 0;
    assume uniValueName > 0;
    call {:si_unique_call 1165} vslice_dummy_var_148 := corral_nondet();
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    assume {:nonnull} QueryTable_1 != 0;
    assume QueryTable_1 > 0;
    InstanceID := 1;
    goto L143;

  L143:
    call {:si_unique_call 1166} Tmp_733, InstanceID, ntStatus_34, vslice_dummy_var_146, vslice_dummy_var_149, vslice_dummy_var_150, vslice_dummy_var_151 := Avc_UpdateVirtualSubunitInfo_loop_L143(Tmp_733, InstanceID, uniValueName, ntStatus_34, szTemp, uniTemp, vslice_dummy_var_146, vslice_dummy_var_149, vslice_dummy_var_150, vslice_dummy_var_151);
    goto L143_last;

  L143_last:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} InstanceID != 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} ntStatus_34 == 0;
    call {:si_unique_call 1167} ntStatus_34 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} ntStatus_34 == 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    Tmp_733 := InstanceID;
    call {:si_unique_call 1168} vslice_dummy_var_149 := RtlIntegerToUnicodeString(Tmp_733, 10, 0);
    assume {:nonnull} uniValueName != 0;
    assume uniValueName > 0;
    call {:si_unique_call 1169} vslice_dummy_var_150 := corral_nondet();
    call {:si_unique_call 1170} vslice_dummy_var_151 := corral_nondet();
    call {:si_unique_call 1171} vslice_dummy_var_146 := corral_nondet();
    goto L152;

  L152:
    InstanceID := InstanceID + 1;
    goto L152_dummy;

  L152_dummy:
    assume false;
    return;

  anon74_Then:
    assume {:partition} ntStatus_34 != 0;
    goto L152;

  anon73_Then:
    assume {:partition} ntStatus_34 != 0;
    goto L144;

  L144:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} -1073741772 == ntStatus_34;
    assume {:nonnull} BytesUsed_5 != 0;
    assume BytesUsed_5 > 0;
    havoc vslice_dummy_var_2668;
    call {:si_unique_call 1172} ntStatus_34 := RtlWriteRegistryValue(-1073741824, 0, 0, 3, 0, vslice_dummy_var_2668);
    goto L171;

  L171:
    call {:si_unique_call 1173} sdv_ExFreePool(0);
    goto L128;

  L128:
    call {:si_unique_call 1174} ExFreeToNPagedLookasideList(AvcQueryTablePool, QueryTable_1);
    goto L106;

  L106:
    call {:si_unique_call 1175} vslice_dummy_var_145 := ZwClose(0);
    goto L97;

  L97:
    call {:si_unique_call 1176} vslice_dummy_var_144 := ZwClose(0);
    goto L76;

  L76:
    assume {:nonnull} AddrSpec_2 != 0;
    assume AddrSpec_2 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 1177} IoInvalidateDeviceRelations(0, 0);
    assume {:nonnull} BusExtension_13 != 0;
    assume BusExtension_13 > 0;
    goto L20;

  anon76_Then:
    goto L20;

  anon65_Then:
    goto L20;

  anon72_Then:
    assume {:partition} -1073741772 != ntStatus_34;
    goto L171;

  anon71_Then:
    assume {:partition} InstanceID == 0;
    goto L144;

  anon70_Then:
    assume {:partition} ntStatus_34 != 0;
    goto L128;

  anon68_Then:
    assume {:partition} 0 > ntStatus_34;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} -1073741772 != ntStatus_34;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} -1073741536 == ntStatus_34;
    ntStatus_34 := 0;
    goto L128;

  anon75_Then:
    assume {:partition} -1073741536 != ntStatus_34;
    goto L128;

  anon69_Then:
    assume {:partition} -1073741772 == ntStatus_34;
    goto L122;

  anon78_Then:
    assume {:partition} QueryTable_1 == 0;
    goto L106;

  anon67_Then:
    assume {:partition} 0 > ntStatus_34;
    goto L97;

  anon66_Then:
    assume {:partition} 0 > ntStatus_34;
    goto L76;

  anon64_Then:
    goto L76;

  anon54_Then:
    assume {:nonnull} BytesUsed_5 != 0;
    assume BytesUsed_5 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L28;

  anon56_Then:
    goto L18;
}



procedure {:origName "Avc_EnumerateExtrnalChildren"} Avc_EnumerateExtrnalChildren(actual_BusExtension_14: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_EnumerateExtrnalChildren"} Avc_EnumerateExtrnalChildren(actual_BusExtension_14: int)
{
  var {:pointer} PdoData_6: int;
  var {:scalar} SubunitID_3: int;
  var {:pointer} SubunitAddr_12: int;
  var {:scalar} Tmp_737: int;
  var {:scalar} MorePages: int;
  var {:dopa} {:scalar} BytesUsed_6: int;
  var {:scalar} SubunitAddrs: int;
  var {:pointer} SubunitInfoBytes_2: int;
  var {:scalar} Tmp_738: int;
  var {:pointer} Tmp_739: int;
  var {:scalar} Tmp_740: int;
  var {:dopa} {:scalar} SubunitAddr_13: int;
  var {:pointer} Tmp_741: int;
  var {:scalar} Tmp_742: int;
  var {:scalar} ntStatus_35: int;
  var {:scalar} Tmp_743: int;
  var {:dopa} {:scalar} SubunitAddr_14: int;
  var {:pointer} Command_21: int;
  var {:pointer} Tmp_745: int;
  var {:dopa} {:scalar} MaxSubunitID_1: int;
  var {:pointer} SubunitType_4: int;
  var {:dopa} {:scalar} BytesUsed_7: int;
  var {:scalar} HasSingleCameraSubunit: int;
  var {:scalar} HasSingleTapeSubunit: int;
  var {:scalar} StartOffset: int;
  var {:scalar} Tmp_747: int;
  var {:scalar} page: int;
  var {:pointer} BusExtension_14: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_2669: int;
  var vslice_dummy_var_2670: int;

  anon0:
    call {:si_unique_call 1178} BytesUsed_6 := __HAVOC_malloc(4);
    call {:si_unique_call 1179} SubunitAddr_13 := __HAVOC_malloc(4);
    call {:si_unique_call 1180} vslice_dummy_var_152 := __HAVOC_malloc(4);
    call {:si_unique_call 1181} SubunitAddr_14 := __HAVOC_malloc(4);
    call {:si_unique_call 1182} Command_21 := __HAVOC_malloc(4);
    call {:si_unique_call 1183} MaxSubunitID_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1184} BytesUsed_7 := __HAVOC_malloc(4);
    BusExtension_14 := actual_BusExtension_14;
    call {:si_unique_call 1185} SubunitAddr_12 := __HAVOC_malloc(128);
    call {:si_unique_call 1186} SubunitInfoBytes_2 := __HAVOC_malloc(128);
    call {:si_unique_call 1187} Tmp_745 := __HAVOC_malloc(2048);
    call {:si_unique_call 1188} SubunitType_4 := __HAVOC_malloc(128);
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    ntStatus_35 := 0;
    call {:si_unique_call 1189} sdv_do_paged_code_check();
    call {:si_unique_call 1190} ntStatus_35 := AvcAllocateUnitCommandContext(BusExtension_14, Command_21);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} ntStatus_35 == 0;
    SubunitAddrs := 0;
    StartOffset := 0;
    assume {:nonnull} BusExtension_14 != 0;
    assume BusExtension_14 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    MorePages := 1;
    page := 0;
    call {:si_unique_call 1191} sdv_RtlZeroMemory(0, 32);
    goto L107;

  L107:
    call {:si_unique_call 1192} Tmp_737, MorePages, SubunitAddrs, Tmp_738, Tmp_740, Tmp_741, Tmp_742, ntStatus_35, Tmp_745, StartOffset, Tmp_747, page := Avc_EnumerateExtrnalChildren_loop_L107(Tmp_737, MorePages, BytesUsed_6, SubunitAddrs, SubunitInfoBytes_2, Tmp_738, Tmp_740, Tmp_741, Tmp_742, ntStatus_35, Command_21, Tmp_745, StartOffset, Tmp_747, page);
    goto L107_last;

  L107_last:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} MorePages != 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} 8 > page;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} 32 > StartOffset;
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc vslice_dummy_var_2669;
    call {:si_unique_call 1193} ntStatus_35 := AvcReq_SubUnitInfo(vslice_dummy_var_2669, page);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} ntStatus_35 != 0;
    MorePages := 0;
    goto L117;

  L117:
    page := page + 1;
    goto L117_dummy;

  L117_dummy:
    assume false;
    return;

  anon79_Then:
    assume {:partition} ntStatus_35 == 0;
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc Tmp_747;
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc Tmp_745;
    Tmp_742 := page * 4;
    call {:si_unique_call 1194} sdv_RtlCopyMemory(0, 0, 4);
    goto L123;

  L123:
    call {:si_unique_call 1195} Tmp_737, SubunitAddrs, Tmp_738, Tmp_740, Tmp_741, ntStatus_35, StartOffset := Avc_EnumerateExtrnalChildren_loop_L123(Tmp_737, BytesUsed_6, SubunitAddrs, SubunitInfoBytes_2, Tmp_738, Tmp_740, Tmp_741, ntStatus_35, StartOffset);
    goto L123_last;

  L123_last:
    assume {:nonnull} BytesUsed_6 != 0;
    assume BytesUsed_6 > 0;
    Tmp_737 := StartOffset;
    assume {:nonnull} SubunitInfoBytes_2 != 0;
    assume SubunitInfoBytes_2 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    MorePages := 0;
    goto L117;

  anon83_Then:
    Tmp_738 := 32 - StartOffset;
    Tmp_740 := StartOffset;
    Tmp_741 := SubunitInfoBytes_2 + Tmp_740 * 4;
    call {:si_unique_call 1196} ntStatus_35 := AvcValidateSubunitAddress(Tmp_741, Tmp_738, BytesUsed_6);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} ntStatus_35 != 0;
    assume {:nonnull} BytesUsed_6 != 0;
    assume BytesUsed_6 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    MorePages := 0;
    goto L117;

  anon81_Then:
    goto L117;

  anon80_Then:
    assume {:partition} ntStatus_35 == 0;
    assume {:nonnull} BytesUsed_6 != 0;
    assume BytesUsed_6 > 0;
    havoc StartOffset;
    SubunitAddrs := SubunitAddrs + 1;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} INTMOD(StartOffset, 4) != 0;
    goto anon84_Else_dummy;

  anon84_Else_dummy:
    assume false;
    return;

  anon84_Then:
    assume {:partition} INTMOD(StartOffset, 4) == 0;
    goto L117;

  anon78_Then:
    assume {:partition} StartOffset >= 32;
    goto L23;

  L23:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} SubunitAddrs != 0;
    HasSingleTapeSubunit := 0;
    HasSingleCameraSubunit := 0;
    StartOffset := 0;
    goto L30;

  L30:
    call {:si_unique_call 1197} SubunitID_3, SubunitAddrs, Tmp_739, ntStatus_35, Tmp_743, HasSingleCameraSubunit, HasSingleTapeSubunit, StartOffset := Avc_EnumerateExtrnalChildren_loop_L30(SubunitID_3, SubunitAddr_12, SubunitAddrs, SubunitInfoBytes_2, Tmp_739, ntStatus_35, Tmp_743, MaxSubunitID_1, SubunitType_4, BytesUsed_7, HasSingleCameraSubunit, HasSingleTapeSubunit, StartOffset, BusExtension_14);
    goto L30_last;

  L30_last:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} SubunitAddrs != 0;
    Tmp_743 := StartOffset;
    Tmp_739 := SubunitInfoBytes_2 + Tmp_743 * 4;
    call {:si_unique_call 1198} ntStatus_35 := AvcUnpackSubunitAddress(Tmp_739, SubunitType_4, MaxSubunitID_1, BytesUsed_7);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} ntStatus_35 == 0;
    assume {:nonnull} SubunitType_4 != 0;
    assume SubunitType_4 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} MaxSubunitID_1 != 0;
    assume MaxSubunitID_1 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    HasSingleTapeSubunit := 1;
    goto L46;

  L46:
    assume {:nonnull} BytesUsed_7 != 0;
    assume BytesUsed_7 > 0;
    havoc StartOffset;
    SubunitAddrs := SubunitAddrs - 1;
    goto L46_dummy;

  L46_dummy:
    assume false;
    return;

  anon65_Then:
    goto L43;

  L43:
    assume {:nonnull} SubunitType_4 != 0;
    assume SubunitType_4 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L51;

  L51:
    SubunitID_3 := 0;
    goto L52;

  L52:
    call {:si_unique_call 1199} SubunitID_3, ntStatus_35 := Avc_EnumerateExtrnalChildren_loop_L52(SubunitID_3, SubunitAddr_12, ntStatus_35, MaxSubunitID_1, SubunitType_4, BusExtension_14);
    goto L52_last;

  L52_last:
    assume {:nonnull} MaxSubunitID_1 != 0;
    assume MaxSubunitID_1 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    call {:si_unique_call 1200} ntStatus_35 := AvcPackSubunitAddress(SubunitType_4, SubunitID_3, 32, SubunitAddr_12, 0);
    call {:si_unique_call 1201} Avc_FindOrCreatePDO(BusExtension_14, SubunitAddr_12, 3);
    SubunitID_3 := SubunitID_3 + 1;
    goto anon67_Else_dummy;

  anon67_Else_dummy:
    assume false;
    return;

  anon67_Then:
    goto L46;

  anon64_Then:
    assume {:nonnull} MaxSubunitID_1 != 0;
    assume MaxSubunitID_1 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L51;

  anon66_Then:
    HasSingleCameraSubunit := 1;
    goto L46;

  anon63_Then:
    goto L43;

  anon62_Then:
    assume {:partition} ntStatus_35 != 0;
    goto L31;

  L31:
    assume {:nonnull} BusExtension_14 != 0;
    assume BusExtension_14 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto L63;

  L63:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} HasSingleTapeSubunit != 0;
    assume {:nonnull} SubunitAddr_13 != 0;
    assume SubunitAddr_13 > 0;
    call {:si_unique_call 1202} Avc_FindOrCreatePDO(BusExtension_14, SubunitAddr_13, 3);
    goto L64;

  L64:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} HasSingleCameraSubunit != 0;
    assume {:nonnull} SubunitAddr_14 != 0;
    assume SubunitAddr_14 > 0;
    call {:si_unique_call 1203} Avc_FindOrCreatePDO(BusExtension_14, SubunitAddr_14, 3);
    goto L70;

  L70:
    assume {:nonnull} Command_21 != 0;
    assume Command_21 > 0;
    havoc vslice_dummy_var_2670;
    call {:si_unique_call 1204} AvcFreeCommandContext(vslice_dummy_var_2670);
    goto L1;

  L1:
    return;

  anon70_Then:
    assume {:partition} HasSingleCameraSubunit == 0;
    goto L70;

  anon69_Then:
    assume {:partition} HasSingleTapeSubunit == 0;
    goto L64;

  anon61_Then:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} HasSingleTapeSubunit != 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} HasSingleCameraSubunit != 0;
    call {:si_unique_call 1205} Avc_FindOrCreatePDO(BusExtension_14, 0, 0);
    HasSingleCameraSubunit := 0;
    HasSingleTapeSubunit := HasSingleCameraSubunit;
    goto L63;

  anon71_Then:
    assume {:partition} HasSingleCameraSubunit == 0;
    goto L63;

  anon68_Then:
    assume {:partition} HasSingleTapeSubunit == 0;
    goto L63;

  anon60_Then:
    assume {:partition} SubunitAddrs == 0;
    goto L31;

  anon58_Then:
    assume {:partition} SubunitAddrs == 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} ntStatus_35 != 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} -1073741822 != ntStatus_35;
    call {:si_unique_call 1206} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_14 != 0;
    assume BusExtension_14 > 0;
    havoc PdoData_6;
    goto L91;

  L91:
    call {:si_unique_call 1207} PdoData_6 := Avc_EnumerateExtrnalChildren_loop_L91(PdoData_6);
    goto L91_last;

  L91_last:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    goto L96;

  L96:
    assume {:nonnull} PdoData_6 != 0;
    assume PdoData_6 > 0;
    havoc PdoData_6;
    goto L96_dummy;

  L96_dummy:
    assume false;
    return;

  anon75_Then:
    goto L96;

  anon74_Then:
    call {:si_unique_call 1208} ExReleaseFastMutex(0);
    goto L70;

  anon73_Then:
    assume {:partition} -1073741822 == ntStatus_35;
    goto L84;

  L84:
    assume {:nonnull} BusExtension_14 != 0;
    assume BusExtension_14 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    call {:si_unique_call 1209} Avc_FindOrCreatePDO(BusExtension_14, 0, 4);
    goto L70;

  anon72_Then:
    goto L70;

  anon59_Then:
    assume {:partition} ntStatus_35 == 0;
    goto L84;

  anon77_Then:
    assume {:partition} page >= 8;
    goto L23;

  anon76_Then:
    assume {:partition} MorePages == 0;
    goto L23;

  anon82_Then:
    goto L23;

  anon57_Then:
    assume {:partition} ntStatus_35 != 0;
    goto L1;
}



procedure {:origName "Avc_EnumerateVirtualChildren"} Avc_EnumerateVirtualChildren(actual_BusExtension_15: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_EnumerateVirtualChildren"} Avc_EnumerateVirtualChildren(actual_BusExtension_15: int)
{
  var {:scalar} sdv_482: int;
  var {:pointer} Tmp_750: int;
  var {:pointer} QueryTable_2: int;
  var {:scalar} ntStatus_36: int;
  var {:pointer} sdv_486: int;
  var {:scalar} uniName_2: int;
  var {:pointer} ListHandle_2: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;

  anon0:
    call {:si_unique_call 1210} vslice_dummy_var_153 := __HAVOC_malloc(24);
    call {:si_unique_call 1211} uniName_2 := __HAVOC_malloc(12);
    call {:si_unique_call 1212} ListHandle_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1213} vslice_dummy_var_154 := __HAVOC_malloc(4);
    call {:si_unique_call 1214} Tmp_750 := __HAVOC_malloc(80);
    call {:si_unique_call 1215} sdv_do_paged_code_check();
    call {:si_unique_call 1216} sdv_482 := sdv_IsListEmpty(0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_482 != 0;
    call {:si_unique_call 1217} ntStatus_36 := IoOpenDeviceRegistryKey(0, 2, 983103, 0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} ntStatus_36 >= 0;
    Tmp_750 := strConst__li2bpl18;
    call {:si_unique_call 1218} RtlInitUnicodeString(uniName_2, Tmp_750);
    call {:si_unique_call 1219} sdv_InitializeObjectAttributes(0, 0, 576, 0, 0);
    call {:si_unique_call 1220} ntStatus_36 := ZwOpenKey(ListHandle_2, 983103, 0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} ntStatus_36 >= 0;
    call {:si_unique_call 1221} sdv_486 := sdv_ExAllocateFromNPagedLookasideList(0);
    QueryTable_2 := sdv_486;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} QueryTable_2 != 0;
    call {:si_unique_call 1222} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} QueryTable_2 != 0;
    assume QueryTable_2 > 0;
    assume {:nonnull} QueryTable_2 != 0;
    assume QueryTable_2 > 0;
    call {:si_unique_call 1223} vslice_dummy_var_157 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    call {:si_unique_call 1224} ExFreeToNPagedLookasideList(AvcQueryTablePool, QueryTable_2);
    goto L42;

  L42:
    call {:si_unique_call 1225} vslice_dummy_var_156 := ZwClose(0);
    goto L33;

  L33:
    call {:si_unique_call 1226} vslice_dummy_var_155 := ZwClose(0);
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} QueryTable_2 == 0;
    goto L42;

  anon11_Then:
    assume {:partition} 0 > ntStatus_36;
    goto L33;

  anon10_Then:
    assume {:partition} 0 > ntStatus_36;
    goto L1;

  anon9_Then:
    assume {:partition} sdv_482 == 0;
    goto L1;
}



procedure {:origName "Avc_Pnp"} Avc_Pnp(actual_DeviceObject_32: int, actual_Irp_37: int) returns (Tmp_753: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, thread_status, return_state, lowerDriverFailed, irp_copy_next, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_Pnp"} Avc_Pnp(actual_DeviceObject_32: int, actual_Irp_37: int) returns (Tmp_753: int)
{
  var {:pointer} IrpStack_9: int;
  var {:scalar} ntStatus_37: int;
  var {:pointer} CommonExtension_6: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} DeviceObject_32: int;
  var {:pointer} Irp_37: int;

  anon0:
    DeviceObject_32 := actual_DeviceObject_32;
    Irp_37 := actual_Irp_37;
    assume {:nonnull} DeviceObject_32 != 0;
    assume DeviceObject_32 > 0;
    havoc CommonExtension_6;
    call {:si_unique_call 1227} sdv_do_paged_code_check();
    call {:si_unique_call 1228} IrpStack_9 := sdv_IoGetCurrentIrpStackLocation(Irp_37);
    assume {:nonnull} IrpStack_9 != 0;
    assume IrpStack_9 > 0;
    MinorFunction := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_9)];
    assume {:nonnull} CommonExtension_6 != 0;
    assume CommonExtension_6 > 0;
    call {:si_unique_call 1229} ntStatus_37 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_6));
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_37 != 0;
    ntStatus_37 := -1073741810;
    assume {:nonnull} Irp_37 != 0;
    assume Irp_37 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_37))] := ntStatus_37;
    call {:si_unique_call 1230} sdv_IoCompleteRequest(0, 0);
    goto L27;

  L27:
    Tmp_753 := ntStatus_37;
    return;

  anon9_Then:
    assume {:partition} ntStatus_37 == 0;
    assume {:nonnull} CommonExtension_6 != 0;
    assume CommonExtension_6 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 1231} ntStatus_37 := Avc_PDO_Pnp(DeviceObject_32, Irp_37);
    goto L33;

  L33:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 2 != MinorFunction;
    assume {:nonnull} CommonExtension_6 != 0;
    assume CommonExtension_6 > 0;
    call {:si_unique_call 1232} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_6));
    goto L27;

  anon12_Then:
    assume {:partition} 2 == MinorFunction;
    goto L27;

  anon10_Then:
    assume {:nonnull} CommonExtension_6 != 0;
    assume CommonExtension_6 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1233} ntStatus_37 := Avc_FDO_Pnp(DeviceObject_32, Irp_37);
    goto L33;

  anon11_Then:
    goto L33;
}



procedure {:origName "Avc_BuildIds"} Avc_BuildIds(actual_BusExtension_16: int, actual_PdoData_7: int, actual_SubunitAddr_15: int, actual_bidFlag: int) returns (Tmp_755: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_755 == -1073741670 || Tmp_755 == -1073741811 || Tmp_755 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_BuildIds"} Avc_BuildIds(actual_BusExtension_16: int, actual_PdoData_7: int, actual_SubunitAddr_15: int, actual_bidFlag: int) returns (Tmp_755: int)
{
  var {:scalar} Tmp_756: int;
  var {:scalar} Tmp_761: int;
  var {:pointer} SubunitJunk: int;
  var {:scalar} Tmp_765: int;
  var {:scalar} Tmp_768: int;
  var {:dopa} {:scalar} SubunitId_1: int;
  var {:pointer} sdv_512: int;
  var {:scalar} Tmp_769: int;
  var {:scalar} Tmp_770: int;
  var {:pointer} sdv_515: int;
  var {:pointer} UnitInfo: int;
  var {:pointer} sdv_520: int;
  var {:scalar} uniTemp_1: int;
  var {:pointer} sdv_528: int;
  var {:scalar} Tmp_780: int;
  var {:scalar} Tmp_781: int;
  var {:scalar} Tmp_784: int;
  var {:scalar} uniModelName: int;
  var {:scalar} Tmp_787: int;
  var {:dopa} {:scalar} SubunitAddrLen_1: int;
  var {:scalar} uniVendorName: int;
  var {:scalar} Tmp_790: int;
  var {:pointer} sdv_546: int;
  var {:scalar} Tmp_793: int;
  var {:scalar} Tmp_794: int;
  var {:scalar} Tmp_796: int;
  var {:scalar} Tmp_798: int;
  var {:pointer} sdv_554: int;
  var {:scalar} NumberHardwareIds: int;
  var {:scalar} ntStatus_38: int;
  var {:pointer} szTemp_1: int;
  var {:scalar} Tmp_802: int;
  var {:pointer} sdv_559: int;
  var {:scalar} uniSubunitId: int;
  var {:scalar} Tmp_804: int;
  var {:scalar} uniSubunitType: int;
  var {:scalar} idx_15: int;
  var {:pointer} SubunitType_5: int;
  var {:scalar} NumberCompatIds: int;
  var {:scalar} Tmp_807: int;
  var {:pointer} sdv_572: int;
  var {:pointer} BusExtension_16: int;
  var {:pointer} PdoData_7: int;
  var {:pointer} SubunitAddr_15: int;
  var {:scalar} bidFlag: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_2671: int;
  var vslice_dummy_var_2672: int;
  var vslice_dummy_var_2673: int;
  var vslice_dummy_var_2674: int;
  var vslice_dummy_var_2675: int;
  var vslice_dummy_var_2676: int;

  anon0:
    call {:si_unique_call 1234} SubunitId_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1235} uniTemp_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1236} uniModelName := __HAVOC_malloc(12);
    call {:si_unique_call 1237} SubunitAddrLen_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1238} uniVendorName := __HAVOC_malloc(12);
    call {:si_unique_call 1239} uniSubunitId := __HAVOC_malloc(12);
    call {:si_unique_call 1240} uniSubunitType := __HAVOC_malloc(12);
    BusExtension_16 := actual_BusExtension_16;
    PdoData_7 := actual_PdoData_7;
    SubunitAddr_15 := actual_SubunitAddr_15;
    bidFlag := actual_bidFlag;
    call {:si_unique_call 1241} vslice_dummy_var_193 := __HAVOC_malloc(8);
    call {:si_unique_call 1242} vslice_dummy_var_194 := __HAVOC_malloc(16);
    call {:si_unique_call 1243} vslice_dummy_var_195 := __HAVOC_malloc(20);
    call {:si_unique_call 1244} vslice_dummy_var_196 := __HAVOC_malloc(8);
    call {:si_unique_call 1245} vslice_dummy_var_197 := __HAVOC_malloc(20);
    call {:si_unique_call 1246} SubunitJunk := __HAVOC_malloc(128);
    call {:si_unique_call 1247} vslice_dummy_var_198 := __HAVOC_malloc(20);
    call {:si_unique_call 1248} vslice_dummy_var_199 := __HAVOC_malloc(40);
    call {:si_unique_call 1249} vslice_dummy_var_200 := __HAVOC_malloc(20);
    call {:si_unique_call 1250} vslice_dummy_var_201 := __HAVOC_malloc(20);
    call {:si_unique_call 1251} vslice_dummy_var_202 := __HAVOC_malloc(8);
    call {:si_unique_call 1252} vslice_dummy_var_203 := __HAVOC_malloc(20);
    call {:si_unique_call 1253} vslice_dummy_var_204 := __HAVOC_malloc(20);
    call {:si_unique_call 1254} vslice_dummy_var_205 := __HAVOC_malloc(16);
    call {:si_unique_call 1255} vslice_dummy_var_206 := __HAVOC_malloc(8);
    call {:si_unique_call 1256} vslice_dummy_var_207 := __HAVOC_malloc(32);
    call {:si_unique_call 1257} vslice_dummy_var_208 := __HAVOC_malloc(20);
    call {:si_unique_call 1258} vslice_dummy_var_209 := __HAVOC_malloc(24);
    call {:si_unique_call 1259} vslice_dummy_var_210 := __HAVOC_malloc(20);
    call {:si_unique_call 1260} vslice_dummy_var_211 := __HAVOC_malloc(24);
    call {:si_unique_call 1261} vslice_dummy_var_212 := __HAVOC_malloc(20);
    call {:si_unique_call 1262} vslice_dummy_var_213 := __HAVOC_malloc(16);
    call {:si_unique_call 1263} vslice_dummy_var_214 := __HAVOC_malloc(16);
    call {:si_unique_call 1264} vslice_dummy_var_215 := __HAVOC_malloc(20);
    call {:si_unique_call 1265} vslice_dummy_var_216 := __HAVOC_malloc(20);
    call {:si_unique_call 1266} vslice_dummy_var_217 := __HAVOC_malloc(8);
    call {:si_unique_call 1267} vslice_dummy_var_218 := __HAVOC_malloc(24);
    call {:si_unique_call 1268} szTemp_1 := __HAVOC_malloc(8);
    call {:si_unique_call 1269} vslice_dummy_var_219 := __HAVOC_malloc(20);
    call {:si_unique_call 1270} vslice_dummy_var_220 := __HAVOC_malloc(8);
    call {:si_unique_call 1271} SubunitType_5 := __HAVOC_malloc(128);
    call {:si_unique_call 1272} vslice_dummy_var_221 := __HAVOC_malloc(16);
    call {:si_unique_call 1273} vslice_dummy_var_222 := __HAVOC_malloc(16);
    call {:si_unique_call 1274} vslice_dummy_var_223 := __HAVOC_malloc(16);
    ntStatus_38 := 0;
    NumberCompatIds := 0;
    NumberHardwareIds := 0;
    assume {:nonnull} BusExtension_16 != 0;
    assume BusExtension_16 > 0;
    UnitInfo := UnitIDs__BUS_DEVICE_EXTENSION(BusExtension_16);
    call {:si_unique_call 1275} sdv_do_paged_code_check();
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} 5 == bidFlag;
    goto L23;

  L23:
    call {:si_unique_call 1276} RtlInitUnicodeString(uniVendorName, 0);
    call {:si_unique_call 1277} RtlInitUnicodeString(uniModelName, 0);
    call {:si_unique_call 1278} RtlInitUnicodeString(uniSubunitType, 0);
    call {:si_unique_call 1279} RtlInitUnicodeString(uniSubunitId, 0);
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    havoc Tmp_765;
    call {:si_unique_call 1280} sdv_546 := ExAllocatePoolWithTag(1, Tmp_765, 541283905);
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    havoc Tmp_787;
    call {:si_unique_call 1281} sdv_RtlZeroMemory(0, Tmp_787);
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    call {:si_unique_call 1282} vslice_dummy_var_159 := corral_nondet();
    goto L54;

  L54:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    havoc Tmp_790;
    call {:si_unique_call 1283} sdv_520 := ExAllocatePoolWithTag(1, Tmp_790, 541283905);
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    havoc Tmp_781;
    call {:si_unique_call 1284} sdv_RtlZeroMemory(0, Tmp_781);
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    call {:si_unique_call 1285} vslice_dummy_var_160 := corral_nondet();
    goto L71;

  L71:
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} bidFlag != 4;
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    havoc Tmp_804;
    call {:si_unique_call 1286} sdv_512 := ExAllocatePoolWithTag(1, Tmp_804, 541283905);
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    havoc Tmp_756;
    call {:si_unique_call 1287} sdv_RtlZeroMemory(0, Tmp_756);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} bidFlag != 1;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} bidFlag != 0;
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    havoc Tmp_784;
    call {:si_unique_call 1288} sdv_528 := ExAllocatePoolWithTag(1, Tmp_784, 541283905);
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    havoc Tmp_770;
    call {:si_unique_call 1289} sdv_RtlZeroMemory(0, Tmp_770);
    goto L72;

  L72:
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} bidFlag != 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} bidFlag != 1;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} bidFlag != 2;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} bidFlag != 3;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} bidFlag != 4;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} bidFlag == 5;
    goto L414;

  L414:
    assume {:nonnull} SubunitAddrLen_1 != 0;
    assume SubunitAddrLen_1 > 0;
    call {:si_unique_call 1290} ntStatus_38 := AvcUnpackSubunitAddress(SubunitAddr_15, SubunitType_5, SubunitId_1, SubunitAddrLen_1);
    assume {:nonnull} SubunitAddrLen_1 != 0;
    assume SubunitAddrLen_1 > 0;
    havoc vslice_dummy_var_2671;
    call {:si_unique_call 1291} sdv_559 := ExAllocatePoolWithTag(512, vslice_dummy_var_2671, 541283905);
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    szTemp_1 := strConst__li2bpl32;
    assume {:nonnull} SubunitAddrLen_1 != 0;
    assume SubunitAddrLen_1 > 0;
    havoc vslice_dummy_var_2672;
    call {:si_unique_call 1292} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2672);
    call {:si_unique_call 1293} RtlInitUnicodeString(uniTemp_1, szTemp_1);
    call {:si_unique_call 1294} ntStatus_38 := AvcPackSubunitAddress(SubunitType_5, 0, 32, SubunitJunk, SubunitAddrLen_1);
    idx_15 := 0;
    goto L441;

  L441:
    call {:si_unique_call 1295} Tmp_780, Tmp_796, Tmp_798, idx_15, Tmp_807, vslice_dummy_var_188, vslice_dummy_var_189, vslice_dummy_var_259, vslice_dummy_var_260, vslice_dummy_var_261 := Avc_BuildIds_loop_L441(Tmp_780, SubunitAddrLen_1, Tmp_796, Tmp_798, idx_15, SubunitType_5, Tmp_807, vslice_dummy_var_188, vslice_dummy_var_189, vslice_dummy_var_259, vslice_dummy_var_260, vslice_dummy_var_261);
    goto L441_last;

  L441_last:
    assume {:nonnull} SubunitAddrLen_1 != 0;
    assume SubunitAddrLen_1 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} idx_15 != 0;
    call {:si_unique_call 1296} Tmp_780 := corral_nondet();
    call {:si_unique_call 1297} vslice_dummy_var_259 := RtlIntegerToUnicodeString(Tmp_780, 16, 0);
    call {:si_unique_call 1298} vslice_dummy_var_188 := corral_nondet();
    Tmp_798 := idx_15;
    assume {:nonnull} SubunitType_5 != 0;
    assume SubunitType_5 > 0;
    havoc Tmp_807;
    call {:si_unique_call 1299} vslice_dummy_var_260 := RtlIntegerToUnicodeString(Tmp_807, 16, 0);
    call {:si_unique_call 1300} vslice_dummy_var_189 := corral_nondet();
    goto L461;

  L461:
    idx_15 := idx_15 + 1;
    goto L461_dummy;

  L461_dummy:
    assume false;
    return;

  anon191_Then:
    assume {:partition} idx_15 == 0;
    assume {:nonnull} SubunitType_5 != 0;
    assume SubunitType_5 > 0;
    havoc Tmp_796;
    call {:si_unique_call 1301} vslice_dummy_var_261 := RtlIntegerToUnicodeString(Tmp_796, 16, 0);
    goto L461;

  anon190_Then:
    assume {:nonnull} SubunitId_1 != 0;
    assume SubunitId_1 > 0;
    havoc vslice_dummy_var_2673;
    call {:si_unique_call 1302} vslice_dummy_var_187 := RtlIntegerToUnicodeString(vslice_dummy_var_2673, 16, 0);
    NumberHardwareIds := 2;
    NumberCompatIds := 2;
    goto L153;

  L153:
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} ntStatus_38 == 0;
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    havoc Tmp_769;
    call {:si_unique_call 1303} sdv_515 := ExAllocatePoolWithTag(512, Tmp_769, 541283905);
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    havoc Tmp_793;
    call {:si_unique_call 1304} sdv_RtlZeroMemory(0, Tmp_793);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} bidFlag != 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} bidFlag != 1;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} bidFlag != 2;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} bidFlag != 3;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} bidFlag != 4;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} bidFlag == 5;
    goto L172;

  L172:
    call {:si_unique_call 1305} vslice_dummy_var_162 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    goto L202;

  L202:
    call {:si_unique_call 1306} vslice_dummy_var_166 := corral_nondet();
    call {:si_unique_call 1307} vslice_dummy_var_244 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    goto L210;

  L210:
    call {:si_unique_call 1308} vslice_dummy_var_167 := corral_nondet();
    call {:si_unique_call 1309} vslice_dummy_var_245 := corral_nondet();
    call {:si_unique_call 1310} vslice_dummy_var_168 := corral_nondet();
    call {:si_unique_call 1311} vslice_dummy_var_246 := corral_nondet();
    call {:si_unique_call 1312} vslice_dummy_var_169 := corral_nondet();
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} 2 == bidFlag;
    call {:si_unique_call 1313} vslice_dummy_var_247 := corral_nondet();
    goto L226;

  L226:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    call {:si_unique_call 1314} vslice_dummy_var_248 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    goto L237;

  L237:
    call {:si_unique_call 1315} vslice_dummy_var_170 := corral_nondet();
    call {:si_unique_call 1316} vslice_dummy_var_249 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    goto L245;

  L245:
    call {:si_unique_call 1317} vslice_dummy_var_171 := corral_nondet();
    call {:si_unique_call 1318} vslice_dummy_var_250 := corral_nondet();
    call {:si_unique_call 1319} vslice_dummy_var_172 := corral_nondet();
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} 2 == bidFlag;
    call {:si_unique_call 1320} vslice_dummy_var_251 := corral_nondet();
    goto L168;

  L168:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    havoc Tmp_794;
    call {:si_unique_call 1321} sdv_554 := ExAllocatePoolWithTag(512, Tmp_794, 541283905);
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    havoc Tmp_802;
    call {:si_unique_call 1322} sdv_RtlZeroMemory(0, Tmp_802);
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} bidFlag != 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} bidFlag != 1;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} bidFlag != 2;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} bidFlag != 3;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} bidFlag != 4;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} bidFlag == 5;
    goto L313;

  L313:
    call {:si_unique_call 1323} vslice_dummy_var_177 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    goto L338;

  L338:
    call {:si_unique_call 1324} vslice_dummy_var_180 := corral_nondet();
    call {:si_unique_call 1325} vslice_dummy_var_233 := corral_nondet();
    call {:si_unique_call 1326} vslice_dummy_var_181 := corral_nondet();
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} 2 == bidFlag;
    call {:si_unique_call 1327} vslice_dummy_var_234 := corral_nondet();
    goto L348;

  L348:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    call {:si_unique_call 1328} vslice_dummy_var_235 := corral_nondet();
    call {:si_unique_call 1329} vslice_dummy_var_236 := corral_nondet();
    call {:si_unique_call 1330} vslice_dummy_var_182 := corral_nondet();
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} 2 == bidFlag;
    call {:si_unique_call 1331} vslice_dummy_var_237 := corral_nondet();
    goto L309;

  L309:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    havoc Tmp_761;
    call {:si_unique_call 1332} sdv_572 := ExAllocatePoolWithTag(512, Tmp_761, 541283905);
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    havoc Tmp_768;
    call {:si_unique_call 1333} sdv_RtlZeroMemory(0, Tmp_768);
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    call {:si_unique_call 1334} vslice_dummy_var_186 := RtlLargeIntegerToUnicodeString(UniqueID__GET_UNIT_IDS(UnitInfo), 16, UniqueId__PDO_DATA(PdoData_7));
    goto L100;

  L100:
    assume {:nonnull} uniVendorName != 0;
    assume uniVendorName > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    call {:si_unique_call 1335} sdv_ExFreePool(0);
    goto L101;

  L101:
    assume {:nonnull} uniModelName != 0;
    assume uniModelName > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    call {:si_unique_call 1336} sdv_ExFreePool(0);
    goto L105;

  L105:
    assume {:nonnull} uniSubunitType != 0;
    assume uniSubunitType > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    call {:si_unique_call 1337} sdv_ExFreePool(0);
    goto L109;

  L109:
    assume {:nonnull} uniSubunitId != 0;
    assume uniSubunitId > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    call {:si_unique_call 1338} sdv_ExFreePool(0);
    goto L113;

  L113:
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} ntStatus_38 != 0;
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    call {:si_unique_call 1339} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto L119;

  L119:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    call {:si_unique_call 1340} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    call {:si_unique_call 1341} RtlInitUnicodeString(HardwareIds__PDO_DATA(PdoData_7), 0);
    goto L124;

  L124:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    call {:si_unique_call 1342} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    call {:si_unique_call 1343} RtlInitUnicodeString(CompatIds__PDO_DATA(PdoData_7), 0);
    goto L131;

  L131:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    call {:si_unique_call 1344} sdv_ExFreePool(0);
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    call {:si_unique_call 1345} RtlInitUnicodeString(UniqueId__PDO_DATA(PdoData_7), 0);
    goto L117;

  L117:
    Tmp_755 := ntStatus_38;
    return;

  anon160_Then:
    goto L117;

  anon159_Then:
    goto L131;

  anon158_Then:
    goto L124;

  anon157_Then:
    goto L119;

  anon156_Then:
    assume {:partition} ntStatus_38 == 0;
    goto L117;

  anon155_Then:
    goto L113;

  anon154_Then:
    goto L109;

  anon153_Then:
    goto L105;

  anon152_Then:
    goto L101;

  anon215_Then:
    ntStatus_38 := -1073741670;
    goto L100;

  anon186_Then:
    assume {:partition} 2 != bidFlag;
    goto L309;

  anon185_Then:
    assume {:partition} 2 != bidFlag;
    goto L348;

  anon184_Then:
    call {:si_unique_call 1346} vslice_dummy_var_238 := corral_nondet();
    goto L338;

  anon203_Then:
    assume {:partition} bidFlag != 5;
    goto L309;

  anon204_Then:
    assume {:partition} bidFlag == 4;
    call {:si_unique_call 1347} vslice_dummy_var_178 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    goto L323;

  L323:
    call {:si_unique_call 1348} vslice_dummy_var_179 := corral_nondet();
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    call {:si_unique_call 1349} vslice_dummy_var_239 := corral_nondet();
    call {:si_unique_call 1350} vslice_dummy_var_240 := corral_nondet();
    goto L309;

  anon183_Then:
    call {:si_unique_call 1351} vslice_dummy_var_241 := corral_nondet();
    goto L323;

  anon205_Then:
    assume {:partition} bidFlag == 3;
    goto L313;

  anon206_Then:
    assume {:partition} bidFlag == 2;
    goto L313;

  anon207_Then:
    assume {:partition} bidFlag == 1;
    goto L310;

  L310:
    call {:si_unique_call 1352} vslice_dummy_var_176 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto L370;

  L370:
    call {:si_unique_call 1353} vslice_dummy_var_183 := corral_nondet();
    call {:si_unique_call 1354} vslice_dummy_var_228 := corral_nondet();
    call {:si_unique_call 1355} vslice_dummy_var_184 := corral_nondet();
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} 1 == bidFlag;
    call {:si_unique_call 1356} vslice_dummy_var_229 := corral_nondet();
    goto L380;

  L380:
    assume {:nonnull} PdoData_7 != 0;
    assume PdoData_7 > 0;
    call {:si_unique_call 1357} vslice_dummy_var_230 := corral_nondet();
    call {:si_unique_call 1358} vslice_dummy_var_185 := corral_nondet();
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} 1 == bidFlag;
    call {:si_unique_call 1359} vslice_dummy_var_231 := corral_nondet();
    goto L309;

  anon189_Then:
    assume {:partition} 1 != bidFlag;
    goto L309;

  anon188_Then:
    assume {:partition} 1 != bidFlag;
    goto L380;

  anon187_Then:
    call {:si_unique_call 1360} vslice_dummy_var_232 := corral_nondet();
    goto L370;

  anon182_Then:
    assume {:partition} bidFlag == 0;
    goto L310;

  anon214_Then:
    ntStatus_38 := -1073741670;
    goto L100;

  anon174_Then:
    assume {:partition} 2 != bidFlag;
    goto L168;

  anon172_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto L260;

  L260:
    call {:si_unique_call 1361} vslice_dummy_var_252 := corral_nondet();
    goto L245;

  anon173_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    goto L260;

  anon175_Then:
    goto L245;

  anon171_Then:
    call {:si_unique_call 1362} vslice_dummy_var_253 := corral_nondet();
    goto L237;

  anon170_Then:
    assume {:partition} 2 != bidFlag;
    goto L226;

  anon168_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    goto L264;

  L264:
    call {:si_unique_call 1363} vslice_dummy_var_254 := corral_nondet();
    goto L210;

  anon169_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    goto L264;

  anon176_Then:
    goto L210;

  anon167_Then:
    call {:si_unique_call 1364} vslice_dummy_var_255 := corral_nondet();
    goto L202;

  anon198_Then:
    assume {:partition} bidFlag != 5;
    goto L168;

  anon199_Then:
    assume {:partition} bidFlag == 4;
    call {:si_unique_call 1365} vslice_dummy_var_163 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    goto L182;

  L182:
    call {:si_unique_call 1366} vslice_dummy_var_164 := corral_nondet();
    call {:si_unique_call 1367} vslice_dummy_var_256 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    goto L190;

  L190:
    call {:si_unique_call 1368} vslice_dummy_var_165 := corral_nondet();
    goto L168;

  anon164_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    goto L195;

  L195:
    call {:si_unique_call 1369} vslice_dummy_var_257 := corral_nondet();
    goto L190;

  anon165_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    goto L195;

  anon166_Then:
    goto L190;

  anon163_Then:
    call {:si_unique_call 1370} vslice_dummy_var_258 := corral_nondet();
    goto L182;

  anon200_Then:
    assume {:partition} bidFlag == 3;
    goto L172;

  anon201_Then:
    assume {:partition} bidFlag == 2;
    goto L172;

  anon202_Then:
    assume {:partition} bidFlag == 1;
    goto L169;

  L169:
    call {:si_unique_call 1371} vslice_dummy_var_161 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    goto L271;

  L271:
    call {:si_unique_call 1372} vslice_dummy_var_173 := corral_nondet();
    call {:si_unique_call 1373} vslice_dummy_var_225 := corral_nondet();
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    goto L279;

  L279:
    call {:si_unique_call 1374} vslice_dummy_var_174 := corral_nondet();
    call {:si_unique_call 1375} vslice_dummy_var_226 := corral_nondet();
    call {:si_unique_call 1376} vslice_dummy_var_175 := corral_nondet();
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:partition} 1 == bidFlag;
    call {:si_unique_call 1377} vslice_dummy_var_227 := corral_nondet();
    goto L168;

  anon180_Then:
    assume {:partition} 1 != bidFlag;
    goto L168;

  anon178_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto L294;

  L294:
    call {:si_unique_call 1378} vslice_dummy_var_242 := corral_nondet();
    goto L279;

  anon179_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    goto L294;

  anon181_Then:
    goto L279;

  anon177_Then:
    call {:si_unique_call 1379} vslice_dummy_var_243 := corral_nondet();
    goto L271;

  anon162_Then:
    assume {:partition} bidFlag == 0;
    goto L169;

  anon213_Then:
    ntStatus_38 := -1073741670;
    goto L100;

  anon161_Then:
    assume {:partition} ntStatus_38 != 0;
    goto L100;

  anon216_Then:
    ntStatus_38 := -1073741670;
    goto L153;

  anon193_Then:
    assume {:partition} bidFlag != 5;
    ntStatus_38 := -1073741811;
    goto L153;

  anon194_Then:
    assume {:partition} bidFlag == 4;
    NumberHardwareIds := 1;
    NumberCompatIds := 2;
    goto L153;

  anon195_Then:
    assume {:partition} bidFlag == 3;
    goto L414;

  anon196_Then:
    assume {:partition} bidFlag == 2;
    goto L414;

  anon197_Then:
    assume {:partition} bidFlag == 1;
    goto L146;

  L146:
    call {:si_unique_call 1380} vslice_dummy_var_224 := corral_nondet();
    NumberHardwareIds := 1;
    NumberCompatIds := 2;
    goto L153;

  anon149_Then:
    assume {:partition} bidFlag == 0;
    goto L146;

  anon212_Then:
    ntStatus_38 := -1073741670;
    goto L100;

  anon151_Then:
    assume {:partition} bidFlag == 0;
    goto L72;

  anon150_Then:
    assume {:partition} bidFlag == 1;
    goto L72;

  anon211_Then:
    ntStatus_38 := -1073741670;
    goto L100;

  anon148_Then:
    assume {:partition} bidFlag == 4;
    goto L72;

  anon146_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    havoc vslice_dummy_var_2674;
    call {:si_unique_call 1381} vslice_dummy_var_190 := RtlIntegerToUnicodeString(vslice_dummy_var_2674, 16, 0);
    goto L71;

  anon147_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    call {:si_unique_call 1382} vslice_dummy_var_192 := corral_nondet();
    goto L71;

  anon192_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    havoc vslice_dummy_var_2675;
    call {:si_unique_call 1383} vslice_dummy_var_191 := RtlIntegerToUnicodeString(vslice_dummy_var_2675, 16, 0);
    goto L71;

  anon210_Then:
    ntStatus_38 := -1073741670;
    goto L100;

  anon145_Then:
    assume {:nonnull} UnitInfo != 0;
    assume UnitInfo > 0;
    havoc vslice_dummy_var_2676;
    call {:si_unique_call 1384} vslice_dummy_var_158 := RtlIntegerToUnicodeString(vslice_dummy_var_2676, 16, 0);
    goto L54;

  anon209_Then:
    ntStatus_38 := -1073741670;
    goto L100;

  anon208_Then:
    assume {:partition} 5 != bidFlag;
    goto L23;
}



procedure {:origName "AvcReq_SubUnitInfo"} AvcReq_SubUnitInfo(actual_Command_22: int, actual_Page_1: int) returns (Tmp_810: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcReq_SubUnitInfo"} AvcReq_SubUnitInfo(actual_Command_22: int, actual_Page_1: int) returns (Tmp_810: int)
{
  var {:pointer} Tmp_811: int;
  var {:pointer} Tmp_812: int;
  var {:pointer} Tmp_813: int;
  var {:scalar} ntStatus_39: int;
  var {:pointer} SubUnitInfo: int;
  var {:pointer} Tmp_814: int;
  var {:pointer} Tmp_815: int;
  var {:scalar} Tmp_817: int;
  var {:pointer} Command_22: int;
  var {:scalar} Page_1: int;

  anon0:
    Command_22 := actual_Command_22;
    Page_1 := actual_Page_1;
    call {:si_unique_call 1385} Tmp_811 := __HAVOC_malloc(16);
    call {:si_unique_call 1386} Tmp_812 := __HAVOC_malloc(16);
    call {:si_unique_call 1387} Tmp_813 := __HAVOC_malloc(16);
    call {:si_unique_call 1388} Tmp_814 := __HAVOC_malloc(16);
    call {:si_unique_call 1389} Tmp_815 := __HAVOC_malloc(2048);
    ntStatus_39 := 0;
    call {:si_unique_call 1390} sdv_do_paged_code_check();
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    havoc Tmp_817;
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    havoc Tmp_815;
    SubUnitInfo := Tmp_815 + Tmp_817 * 4;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    havoc Tmp_811;
    assume {:nonnull} Tmp_811 != 0;
    assume Tmp_811 > 0;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    havoc Tmp_814;
    assume {:nonnull} Tmp_814 != 0;
    assume Tmp_814 > 0;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    havoc Tmp_813;
    assume {:nonnull} Tmp_813 != 0;
    assume Tmp_813 > 0;
    assume {:nonnull} SubUnitInfo != 0;
    assume SubUnitInfo > 0;
    havoc Tmp_812;
    assume {:nonnull} Tmp_812 != 0;
    assume Tmp_812 > 0;
    call {:si_unique_call 1391} ntStatus_39 := AvcRobustStatusRequest(Command_22);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ntStatus_39 != 0;
    goto L24;

  L24:
    Tmp_810 := ntStatus_39;
    return;

  anon5_Then:
    assume {:partition} ntStatus_39 == 0;
    assume {:nonnull} Command_22 != 0;
    assume Command_22 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    ntStatus_39 := -1073741822;
    goto L24;

  anon6_Then:
    goto L24;
}



procedure {:origName "RtlULongLongToULong"} RtlULongLongToULong(actual_ullOperand: int, actual_pulResult_2: int) returns (Tmp_818: int);
  free ensures {:va_keep} Tmp_818 == 0 || Tmp_818 == -1073741675;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlULongLongToULong"} RtlULongLongToULong(actual_ullOperand: int, actual_pulResult_2: int) returns (Tmp_818: int)
{
  var {:scalar} status_7: int;
  var {:scalar} ullOperand: int;
  var {:pointer} pulResult_2: int;

  anon0:
    ullOperand := actual_ullOperand;
    pulResult_2 := actual_pulResult_2;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} -1 >= ullOperand;
    assume {:nonnull} pulResult_2 != 0;
    assume pulResult_2 > 0;
    status_7 := 0;
    goto L8;

  L8:
    Tmp_818 := status_7;
    return;

  anon3_Then:
    assume {:partition} ullOperand > -1;
    assume {:nonnull} pulResult_2 != 0;
    assume pulResult_2 > 0;
    status_7 := -1073741675;
    goto L8;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_262: int;

  anon0:
    call {:si_unique_call 1392} vslice_dummy_var_262 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "AvcAddInstanceToGlobalList"} AvcAddInstanceToGlobalList(actual_BusExtension_17: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcAddInstanceToGlobalList"} AvcAddInstanceToGlobalList(actual_BusExtension_17: int)
{
  var {:pointer} Tmp_822: int;
  var {:scalar} OldIrql_14: int;
  var {:pointer} BusExtension_17: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;

  anon0:
    call {:si_unique_call 1393} vslice_dummy_var_263 := __HAVOC_malloc(4);
    BusExtension_17 := actual_BusExtension_17;
    call {:si_unique_call 1394} Tmp_822 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_822 != 0;
    assume Tmp_822 > 0;
    call {:si_unique_call 1395} sdv_KeAcquireSpinLock(0, Tmp_822);
    assume {:nonnull} Tmp_822 != 0;
    assume Tmp_822 > 0;
    havoc OldIrql_14;
    assume {:nonnull} BusExtension_17 != 0;
    assume BusExtension_17 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} BusExtension_17 != 0;
    assume BusExtension_17 > 0;
    call {:si_unique_call 1396} vslice_dummy_var_265 := sdv_InsertTailList(AvcVirtualInstanceList, FdoEntry__BUS_DEVICE_EXTENSION(BusExtension_17));
    goto L14;

  L14:
    call {:si_unique_call 1397} sdv_KeReleaseSpinLock(0, OldIrql_14);
    return;

  anon3_Then:
    assume {:nonnull} BusExtension_17 != 0;
    assume BusExtension_17 > 0;
    call {:si_unique_call 1398} vslice_dummy_var_264 := sdv_InsertTailList(AvcPeerInstanceList, FdoEntry__BUS_DEVICE_EXTENSION(BusExtension_17));
    goto L14;
}



procedure {:origName "Avc_TriggerBusReset"} Avc_TriggerBusReset(actual_BusExtension_19: int) returns (Tmp_827: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_TriggerBusReset"} Avc_TriggerBusReset(actual_BusExtension_19: int) returns (Tmp_827: int)
{
  var {:pointer} Irp_38: int;
  var {:scalar} Irb_2: int;
  var {:pointer} Tmp_828: int;
  var {:scalar} ntStatus_40: int;
  var {:pointer} NextIrpStack_11: int;
  var {:pointer} BusExtension_19: int;
  var vslice_dummy_var_2677: int;
  var vslice_dummy_var_2678: int;

  anon0:
    call {:si_unique_call 1399} Irb_2 := __HAVOC_malloc(860);
    BusExtension_19 := actual_BusExtension_19;
    ntStatus_40 := 0;
    call {:si_unique_call 1400} sdv_do_paged_code_check();
    assume {:nonnull} BusExtension_19 != 0;
    assume BusExtension_19 > 0;
    havoc Tmp_828;
    assume {:nonnull} Tmp_828 != 0;
    assume Tmp_828 > 0;
    havoc vslice_dummy_var_2677;
    call {:si_unique_call 1401} Irp_38 := IoAllocateIrp(vslice_dummy_var_2677, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Irp_38 != 0;
    call {:si_unique_call 1402} NextIrpStack_11 := sdv_IoGetNextIrpStackLocation(Irp_38);
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} Irb_2 != 0;
    assume Irb_2 > 0;
    assume {:nonnull} NextIrpStack_11 != 0;
    assume NextIrpStack_11 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_11)] := 15;
    assume {:nonnull} NextIrpStack_11 != 0;
    assume NextIrpStack_11 > 0;
    assume {:nonnull} NextIrpStack_11 != 0;
    assume NextIrpStack_11 > 0;
    assume {:nonnull} BusExtension_19 != 0;
    assume BusExtension_19 > 0;
    havoc vslice_dummy_var_2678;
    call {:si_unique_call 1403} ntStatus_40 := Avc_SubmitIrpSynch(vslice_dummy_var_2678, Irp_38);
    call {:si_unique_call 1404} IoFreeIrp(0);
    goto L34;

  L34:
    Tmp_827 := ntStatus_40;
    return;

  anon3_Then:
    assume {:partition} Irp_38 == 0;
    ntStatus_40 := -1073741670;
    goto L34;
}



procedure {:origName "Avc_FindOrCreatePDO"} Avc_FindOrCreatePDO(actual_BusExtension_20: int, actual_SubunitAddr_16: int, actual_bidFlag_1: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_FindOrCreatePDO"} Avc_FindOrCreatePDO(actual_BusExtension_20: int, actual_SubunitAddr_16: int, actual_bidFlag_1: int)
{
  var {:pointer} PdoData_9: int;
  var {:pointer} Tmp_830: int;
  var {:scalar} Tmp_831: int;
  var {:pointer} Tmp_832: int;
  var {:scalar} sdv_584: int;
  var {:pointer} Tmp_833: int;
  var {:scalar} sdv_585: int;
  var {:dopa} {:scalar} TapeSubunitAddr: int;
  var {:scalar} sdv_586: int;
  var {:pointer} sdv_587: int;
  var {:scalar} ntStatus_41: int;
  var {:pointer} PdoExtension_6: int;
  var {:pointer} Tmp_835: int;
  var {:pointer} PdoDeviceObject: int;
  var {:scalar} ntStatus_42: int;
  var {:pointer} Entry_11: int;
  var {:scalar} sdv_591: int;
  var {:pointer} BusExtension_20: int;
  var {:pointer} SubunitAddr_16: int;
  var {:scalar} bidFlag_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_2679: int;
  var vslice_dummy_var_2680: int;

  anon0:
    call {:si_unique_call 1405} TapeSubunitAddr := __HAVOC_malloc(4);
    call {:si_unique_call 1406} vslice_dummy_var_266 := __HAVOC_malloc(4);
    call {:si_unique_call 1407} PdoDeviceObject := __HAVOC_malloc(4);
    BusExtension_20 := actual_BusExtension_20;
    SubunitAddr_16 := actual_SubunitAddr_16;
    bidFlag_1 := actual_bidFlag_1;
    PdoData_9 := 0;
    call {:si_unique_call 1408} sdv_do_paged_code_check();
    call {:si_unique_call 1409} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    havoc Entry_11;
    goto L13;

  L13:
    call {:si_unique_call 1410} PdoData_9, sdv_584, Entry_11 := Avc_FindOrCreatePDO_loop_L13(PdoData_9, sdv_584, Entry_11, SubunitAddr_16);
    goto L13_last;

  L13_last:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    PdoData_9 := Entry_11;
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    havoc vslice_dummy_var_2679;
    call {:si_unique_call 1411} sdv_584 := AvcSubunitAddrsEqual(SubunitAddr_16, vslice_dummy_var_2679);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_584 == 0;
    PdoData_9 := 0;
    assume {:nonnull} Entry_11 != 0;
    assume Entry_11 > 0;
    havoc Entry_11;
    goto anon43_Else_dummy;

  anon43_Else_dummy:
    assume false;
    return;

  anon43_Then:
    assume {:partition} sdv_584 != 0;
    goto L14;

  L14:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} PdoData_9 != 0;
    goto L26;

  L26:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} PdoData_9 != 0;
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    call {:si_unique_call 1412} ntStatus_41 := IoCreateDevice(0, 76, 0, 34, 128, 0, PdoDeviceObject);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} ntStatus_41 == 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    havoc PdoExtension_6;
    call {:si_unique_call 1413} sdv_RtlZeroMemory(0, 76);
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} bidFlag_1 == 5;
    Tmp_831 := 1;
    goto L51;

  L51:
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc vslice_dummy_var_2680;
    call {:si_unique_call 1414} boogieTmp := IoGetAttachedDeviceReference(vslice_dummy_var_2680);
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 1415} AvcInitializeRemoveLock(RemoveLock__PDO_DEVICE_EXTENSION(PdoExtension_6));
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 1416} Tmp_835 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} Tmp_835 != 0;
    assume Tmp_835 > 0;
    call {:si_unique_call 1417} sdv_KeInitializeSpinLock(Tmp_835);
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} Tmp_835 != 0;
    assume Tmp_835 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc Tmp_832;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} Tmp_832 != 0;
    assume Tmp_832 > 0;
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    havoc Tmp_830;
    assume {:nonnull} Tmp_830 != 0;
    assume Tmp_830 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    goto L75;

  L75:
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} 5 == bidFlag_1;
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    goto L27;

  L27:
    call {:si_unique_call 1418} ExReleaseFastMutex(0);
    return;

  anon57_Then:
    assume {:partition} 5 != bidFlag_1;
    goto L27;

  anon56_Then:
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    havoc Tmp_833;
    assume {:nonnull} Tmp_833 != 0;
    assume Tmp_833 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PdoDeviceObject != 0;
    assume PdoDeviceObject > 0;
    goto L75;

  anon58_Then:
    goto L75;

  anon55_Then:
    assume {:partition} bidFlag_1 != 5;
    Tmp_831 := 0;
    goto L51;

  anon48_Then:
    assume {:partition} ntStatus_41 != 0;
    goto L27;

  anon45_Then:
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} 5 == bidFlag_1;
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    goto L34;

  L34:
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    goto L27;

  anon47_Then:
    assume {:partition} 5 != bidFlag_1;
    goto L34;

  anon46_Then:
    goto L27;

  anon44_Then:
    assume {:partition} PdoData_9 == 0;
    goto L27;

  anon42_Then:
    assume {:partition} PdoData_9 == 0;
    call {:si_unique_call 1419} sdv_587 := ExAllocatePoolWithTag(512, 56, 541283905);
    PdoData_9 := sdv_587;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} PdoData_9 != 0;
    call {:si_unique_call 1420} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} BusExtension_20 != 0;
    assume BusExtension_20 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} TapeSubunitAddr != 0;
    assume TapeSubunitAddr > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} bidFlag_1 != 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} bidFlag_1 == 3;
    call {:si_unique_call 1421} sdv_591 := AvcSubunitAddrsEqual(TapeSubunitAddr, SubunitAddr_16);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_591 != 0;
    call {:si_unique_call 1422} sdv_586 := Avc_IsLegacyDV(BusExtension_20);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_586 != 0;
    bidFlag_1 := 2;
    goto L88;

  L88:
    call {:si_unique_call 1423} ntStatus_42 := Avc_BuildIds(BusExtension_20, PdoData_9, SubunitAddr_16, bidFlag_1);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} ntStatus_42 != 0;
    call {:si_unique_call 1424} sdv_ExFreePool(0);
    PdoData_9 := 0;
    goto L26;

  anon53_Then:
    assume {:partition} ntStatus_42 == 0;
    assume {:nonnull} PdoData_9 != 0;
    assume PdoData_9 > 0;
    call {:si_unique_call 1425} AvcAddToPdoList(BusExtension_20, PdoData_9);
    goto L26;

  anon51_Then:
    assume {:partition} sdv_586 == 0;
    goto L88;

  anon50_Then:
    assume {:partition} sdv_591 == 0;
    goto L88;

  anon54_Then:
    assume {:partition} bidFlag_1 != 3;
    goto L88;

  anon60_Then:
    assume {:partition} bidFlag_1 == 0;
    call {:si_unique_call 1426} sdv_585 := Avc_IsLegacyDV(BusExtension_20);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_585 != 0;
    bidFlag_1 := 1;
    goto L88;

  anon52_Then:
    assume {:partition} sdv_585 == 0;
    goto L88;

  anon49_Then:
    goto L88;

  anon59_Then:
    assume {:partition} PdoData_9 == 0;
    goto L26;

  anon41_Then:
    goto L14;
}



procedure {:origName "AvcReq_OutputPlugSignalMode"} AvcReq_OutputPlugSignalMode(actual_Command_25: int, actual_SubunitAddr_17: int) returns (Tmp_837: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcReq_OutputPlugSignalMode"} AvcReq_OutputPlugSignalMode(actual_Command_25: int, actual_SubunitAddr_17: int) returns (Tmp_837: int)
{
  var {:dopa} {:scalar} SubunitAddrLen_2: int;
  var {:pointer} Tmp_838: int;
  var {:scalar} Tmp_841: int;
  var {:scalar} ntStatus_43: int;
  var {:pointer} Operands_9: int;
  var {:pointer} Tmp_842: int;
  var {:pointer} Command_25: int;
  var {:pointer} SubunitAddr_17: int;
  var vslice_dummy_var_2681: int;
  var vslice_dummy_var_2682: int;

  anon0:
    call {:si_unique_call 1427} SubunitAddrLen_2 := __HAVOC_malloc(4);
    Command_25 := actual_Command_25;
    SubunitAddr_17 := actual_SubunitAddr_17;
    call {:si_unique_call 1428} Tmp_838 := __HAVOC_malloc(2048);
    call {:si_unique_call 1429} Tmp_842 := __HAVOC_malloc(2048);
    ntStatus_43 := 0;
    assume {:nonnull} SubunitAddrLen_2 != 0;
    assume SubunitAddrLen_2 > 0;
    call {:si_unique_call 1430} sdv_do_paged_code_check();
    call {:si_unique_call 1431} ntStatus_43 := AvcValidateSubunitAddress(SubunitAddr_17, 32, SubunitAddrLen_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus_43 != 0;
    Tmp_837 := -1073741811;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} ntStatus_43 == 0;
    assume {:nonnull} SubunitAddrLen_2 != 0;
    assume SubunitAddrLen_2 > 0;
    havoc vslice_dummy_var_2681;
    call {:si_unique_call 1432} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2681);
    assume {:nonnull} Command_25 != 0;
    assume Command_25 > 0;
    havoc Tmp_842;
    assume {:nonnull} SubunitAddrLen_2 != 0;
    assume SubunitAddrLen_2 > 0;
    havoc vslice_dummy_var_2682;
    call {:si_unique_call 1433} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2682);
    assume {:nonnull} Command_25 != 0;
    assume Command_25 > 0;
    assume {:nonnull} Command_25 != 0;
    assume Command_25 > 0;
    assume {:nonnull} SubunitAddrLen_2 != 0;
    assume SubunitAddrLen_2 > 0;
    assume {:nonnull} Command_25 != 0;
    assume Command_25 > 0;
    assume {:nonnull} Command_25 != 0;
    assume Command_25 > 0;
    havoc Tmp_841;
    assume {:nonnull} Command_25 != 0;
    assume Command_25 > 0;
    havoc Tmp_838;
    Operands_9 := Tmp_838 + Tmp_841 * 4;
    assume {:nonnull} Operands_9 != 0;
    assume Operands_9 > 0;
    call {:si_unique_call 1434} ntStatus_43 := AvcRobustStatusRequest(Command_25);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} ntStatus_43 != 0;
    goto L35;

  L35:
    Tmp_837 := ntStatus_43;
    goto L1;

  anon10_Then:
    assume {:partition} ntStatus_43 == 0;
    assume {:nonnull} Command_25 != 0;
    assume Command_25 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    ntStatus_43 := -1073741822;
    goto L36;

  L36:
    assume {:nonnull} Command_25 != 0;
    assume Command_25 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    ntStatus_43 := -1073741811;
    goto L35;

  anon12_Then:
    goto L35;

  anon11_Then:
    goto L36;
}



procedure {:origName "Avc_FDO_Pnp"} Avc_FDO_Pnp(actual_DeviceObject_33: int, actual_Irp_39: int) returns (Tmp_843: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MinorFunction__IO_STACK_LOCATION, thread_status, return_state, lowerDriverFailed, irp_copy_next, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_FDO_Pnp"} Avc_FDO_Pnp(actual_DeviceObject_33: int, actual_Irp_39: int) returns (Tmp_843: int)
{
  var {:pointer} Relations: int;
  var {:pointer} PdoData_10: int;
  var {:pointer} PdoData_11: int;
  var {:scalar} Tmp_844: int;
  var {:scalar} cObjects: int;
  var {:pointer} Tmp_847: int;
  var {:scalar} cIncomingObjects: int;
  var {:scalar} Tmp_850: int;
  var {:pointer} IrpStack_10: int;
  var {:scalar} ulLength: int;
  var {:pointer} Tmp_851: int;
  var {:pointer} DeviceCapabilities: int;
  var {:pointer} sdv_604: int;
  var {:scalar} sdv_606: int;
  var {:scalar} ntStatus_44: int;
  var {:pointer} PdoExtension_7: int;
  var {:scalar} Tmp_854: int;
  var {:scalar} MinorFunction_1: int;
  var {:pointer} sdv_612: int;
  var {:pointer} Tmp_856: int;
  var {:scalar} Tmp_857: int;
  var {:pointer} BusExtension_21: int;
  var {:pointer} Tmp_858: int;
  var {:pointer} Next: int;
  var {:pointer} PdoData_12: int;
  var {:pointer} OldRelations: int;
  var {:pointer} Tmp_859: int;
  var {:scalar} irpStatus: int;
  var {:pointer} DeviceObject_33: int;
  var {:pointer} Irp_39: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_2683: int;
  var vslice_dummy_var_2684: int;

  anon0:
    DeviceObject_33 := actual_DeviceObject_33;
    Irp_39 := actual_Irp_39;
    call {:si_unique_call 1435} Tmp_847 := __HAVOC_malloc(4);
    call {:si_unique_call 1436} Tmp_851 := __HAVOC_malloc(4);
    call {:si_unique_call 1437} Tmp_856 := __HAVOC_malloc(4);
    call {:si_unique_call 1438} Tmp_858 := __HAVOC_malloc(4);
    ntStatus_44 := 0;
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    havoc BusExtension_21;
    call {:si_unique_call 1439} sdv_do_paged_code_check();
    call {:si_unique_call 1440} IrpStack_10 := sdv_IoGetCurrentIrpStackLocation(Irp_39);
    assume {:nonnull} IrpStack_10 != 0;
    assume IrpStack_10 > 0;
    MinorFunction_1 := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_10)];
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} MinorFunction_1 != 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} MinorFunction_1 != 1;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} MinorFunction_1 != 2;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} MinorFunction_1 != 3;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} MinorFunction_1 != 4;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} MinorFunction_1 != 5;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} MinorFunction_1 != 6;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} MinorFunction_1 != 7;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} MinorFunction_1 != 9;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} MinorFunction_1 != 20;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} MinorFunction_1 == 23;
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    call {:si_unique_call 1441} vslice_dummy_var_277 := Avc_SetBusResetNotify(BusExtension_21, 0);
    call {:si_unique_call 1442} AvcStopAllFCPProcessing(BusExtension_21);
    call {:si_unique_call 1443} vslice_dummy_var_268 := Avc_SetFcpNotify(BusExtension_21, 0);
    call {:si_unique_call 1444} Avc_SetUnitDirectory(BusExtension_21, 0);
    call {:si_unique_call 1445} vslice_dummy_var_269 := IoSetDeviceInterfaceState(0, 0);
    call {:si_unique_call 1446} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    havoc Next;
    goto L52;

  L52:
    call {:si_unique_call 1447} PdoData_10, Next := Avc_FDO_Pnp_loop_L52(PdoData_10, BusExtension_21, Next);
    goto L52_last;

  L52_last:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    PdoData_10 := Next;
    assume {:nonnull} Next != 0;
    assume Next > 0;
    havoc Next;
    call {:si_unique_call 1448} AvcRemoveFromPdoList(BusExtension_21, PdoData_10);
    assume {:nonnull} PdoData_10 != 0;
    assume PdoData_10 > 0;
    assume {:nonnull} PdoData_10 != 0;
    assume PdoData_10 > 0;
    goto anon94_Else_dummy;

  anon94_Else_dummy:
    assume false;
    return;

  anon94_Then:
    call {:si_unique_call 1449} ExReleaseFastMutex(0);
    goto L65;

  L65:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} 2 == MinorFunction_1;
    call {:si_unique_call 1450} IoDetachDevice(0);
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    call {:si_unique_call 1451} sdv_ExFreePool(0);
    goto L71;

  L71:
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    call {:si_unique_call 1452} sdv_ExFreePool(0);
    goto L75;

  L75:
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    call {:si_unique_call 1453} sdv_ExFreePool(0);
    goto L79;

  L79:
    call {:si_unique_call 1454} RtlFreeUnicodeString(0);
    call {:si_unique_call 1455} vslice_dummy_var_270 := KeCancelTimer(0);
    call {:si_unique_call 1456} IoDeleteDevice(0);
    goto L66;

  L66:
    assume {:nonnull} Irp_39 != 0;
    assume Irp_39 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_39))] := ntStatus_44;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume Irp_39 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1457} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl13);
    goto L344;

  L344:
    call {:si_unique_call 1458} sdv_IoSkipCurrentIrpStackLocation(Irp_39);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume Irp_39 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1459} SLIC_sdv_IoCallDriver_entry(0);
    goto L347;

  L347:
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    havoc vslice_dummy_var_2683;
    call {:si_unique_call 1460} ntStatus_44 := sdv_IoCallDriver#1(vslice_dummy_var_2683, Irp_39);
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume Irp_39 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1461} SLIC_sdv_IoCallDriver_exit(0, Irp_39);
    goto L98;

  L98:
    Tmp_843 := ntStatus_44;
    goto L1;

  L1:
    return;

  anon130_Then:
    assume !(Irp_39 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L98;

  anon99_Then:
    assume !(Irp_39 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L347;

  anon133_Then:
    assume !(Irp_39 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L344;

  anon98_Then:
    goto L79;

  anon97_Then:
    goto L75;

  anon96_Then:
    goto L71;

  anon95_Then:
    assume {:partition} 2 != MinorFunction_1;
    goto L66;

  anon120_Then:
    assume {:partition} MinorFunction_1 != 23;
    assume {:nonnull} Irp_39 != 0;
    assume Irp_39 > 0;
    ntStatus_44 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_39))];
    goto L65;

  anon121_Then:
    assume {:partition} MinorFunction_1 == 20;
    assume {:nonnull} Irp_39 != 0;
    assume Irp_39 > 0;
    goto L65;

  anon122_Then:
    assume {:partition} MinorFunction_1 == 9;
    assume {:nonnull} IrpStack_10 != 0;
    assume IrpStack_10 > 0;
    havoc DeviceCapabilities;
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} DeviceCapabilities != 0;
    assume DeviceCapabilities > 0;
    goto L65;

  anon100_Then:
    goto L65;

  anon138_Then:
    goto L65;

  anon123_Then:
    assume {:partition} MinorFunction_1 == 7;
    assume {:nonnull} IrpStack_10 != 0;
    assume IrpStack_10 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    cObjects := 0;
    call {:si_unique_call 1462} Avc_EnumerateChildren(BusExtension_21);
    call {:si_unique_call 1463} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    havoc PdoData_12;
    goto L121;

  L121:
    call {:si_unique_call 1464} cObjects, PdoData_12 := Avc_FDO_Pnp_loop_L121(cObjects, PdoData_12);
    goto L121_last;

  L121_last:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} PdoData_12 != 0;
    assume PdoData_12 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    cObjects := cObjects + 1;
    goto L124;

  L124:
    assume {:nonnull} PdoData_12 != 0;
    assume PdoData_12 > 0;
    havoc PdoData_12;
    goto L124_dummy;

  L124_dummy:
    assume false;
    return;

  anon102_Then:
    goto L124;

  anon101_Then:
    assume {:nonnull} Irp_39 != 0;
    assume Irp_39 > 0;
    havoc OldRelations;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} OldRelations != 0;
    assume {:nonnull} OldRelations != 0;
    assume OldRelations > 0;
    havoc cIncomingObjects;
    goto L129;

  L129:
    cObjects := cObjects + cIncomingObjects;
    ulLength := 8 + cObjects * 4;
    call {:si_unique_call 1465} sdv_604 := ExAllocatePoolWithTag(1, ulLength, 541283905);
    Relations := sdv_604;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} Relations != 0;
    cObjects := 0;
    goto L140;

  L140:
    call {:si_unique_call 1466} Tmp_844, cObjects, Tmp_851, Tmp_854, Tmp_856 := Avc_FDO_Pnp_loop_L140(Relations, Tmp_844, cObjects, cIncomingObjects, Tmp_851, Tmp_854, Tmp_856, OldRelations);
    goto L140_last;

  L140_last:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} cIncomingObjects > cObjects;
    Tmp_854 := cObjects;
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    havoc Tmp_856;
    Tmp_844 := cObjects;
    assume {:nonnull} OldRelations != 0;
    assume OldRelations > 0;
    havoc Tmp_851;
    assume {:nonnull} Tmp_851 != 0;
    assume Tmp_851 > 0;
    assume {:nonnull} Tmp_856 != 0;
    assume Tmp_856 > 0;
    cObjects := cObjects + 1;
    goto anon103_Else_dummy;

  anon103_Else_dummy:
    assume false;
    return;

  anon103_Then:
    assume {:partition} cObjects >= cIncomingObjects;
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    havoc PdoData_12;
    goto L144;

  L144:
    call {:si_unique_call 1467} cObjects, Tmp_847, Tmp_850, Tmp_857, Tmp_858, PdoData_12, vslice_dummy_var_276 := Avc_FDO_Pnp_loop_L144(Relations, cObjects, Tmp_847, Tmp_850, Tmp_857, Tmp_858, PdoData_12, vslice_dummy_var_276);
    goto L144_last;

  L144_last:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} PdoData_12 != 0;
    assume PdoData_12 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} PdoData_12 != 0;
    assume PdoData_12 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    Tmp_850 := cObjects;
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    havoc Tmp_847;
    assume {:nonnull} PdoData_12 != 0;
    assume PdoData_12 > 0;
    assume {:nonnull} Tmp_847 != 0;
    assume Tmp_847 > 0;
    Tmp_857 := cObjects;
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    havoc Tmp_858;
    assume {:nonnull} Tmp_858 != 0;
    assume Tmp_858 > 0;
    call {:si_unique_call 1468} vslice_dummy_var_276 := sdv_ObReferenceObject(0);
    cObjects := cObjects + 1;
    goto L147;

  L147:
    assume {:nonnull} PdoData_12 != 0;
    assume PdoData_12 > 0;
    havoc PdoData_12;
    goto L147_dummy;

  L147_dummy:
    assume false;
    return;

  anon106_Then:
    goto L147;

  anon105_Then:
    goto L147;

  anon104_Then:
    assume {:nonnull} Relations != 0;
    assume Relations > 0;
    assume {:nonnull} Irp_39 != 0;
    assume Irp_39 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    call {:si_unique_call 1469} sdv_ExFreePool(0);
    goto L156;

  L156:
    assume {:nonnull} Irp_39 != 0;
    assume Irp_39 > 0;
    call {:si_unique_call 1470} ExReleaseFastMutex(0);
    goto L65;

  anon137_Then:
    goto L156;

  anon136_Then:
    assume {:partition} Relations == 0;
    call {:si_unique_call 1471} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_39 != 0;
    assume Irp_39 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_39))] := -1073741670;
    call {:si_unique_call 1472} sdv_IoCompleteRequest(0, 0);
    Tmp_843 := -1073741670;
    goto L1;

  anon135_Then:
    assume {:partition} OldRelations == 0;
    cIncomingObjects := 0;
    goto L129;

  anon93_Then:
    assume {:nonnull} Irp_39 != 0;
    assume Irp_39 > 0;
    ntStatus_44 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_39))];
    goto L65;

  anon124_Then:
    assume {:partition} MinorFunction_1 == 6;
    goto L65;

  anon125_Then:
    assume {:partition} MinorFunction_1 == 5;
    goto L65;

  anon126_Then:
    assume {:partition} MinorFunction_1 == 4;
    call {:si_unique_call 1473} vslice_dummy_var_267 := Avc_SetBusResetNotify(BusExtension_21, 0);
    call {:si_unique_call 1474} AvcStopAllFCPProcessing(BusExtension_21);
    call {:si_unique_call 1475} vslice_dummy_var_271 := Avc_SetFcpNotify(BusExtension_21, 0);
    call {:si_unique_call 1476} Avc_SetUnitDirectory(BusExtension_21, 0);
    goto L65;

  anon127_Then:
    assume {:partition} MinorFunction_1 == 3;
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    goto L65;

  anon128_Then:
    assume {:partition} MinorFunction_1 == 2;
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    call {:si_unique_call 1477} ExAcquireFastMutex(0);
    goto L182;

  L182:
    call {:si_unique_call 1478} PdoData_11, sdv_606, PdoExtension_7, sdv_612, Tmp_859 := Avc_FDO_Pnp_loop_L182(PdoData_11, sdv_606, PdoExtension_7, sdv_612, BusExtension_21, Tmp_859);
    goto L182_last;

  L182_last:
    call {:si_unique_call 1508} sdv_606 := sdv_IsListEmpty(0);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} sdv_606 == 0;
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    call {:si_unique_call 1479} sdv_612 := RemoveHeadList(PdoList__BUS_DEVICE_EXTENSION(BusExtension_21));
    PdoData_11 := sdv_612;
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    havoc Tmp_859;
    assume {:nonnull} Tmp_859 != 0;
    assume Tmp_859 > 0;
    havoc PdoExtension_7;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    call {:si_unique_call 1480} RemoveConnectionMgr(PdoData_11);
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    call {:si_unique_call 1481} sdv_ExFreePool(0);
    goto L229;

  L229:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    call {:si_unique_call 1482} sdv_ExFreePool(0);
    goto L233;

  L233:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    call {:si_unique_call 1483} sdv_ExFreePool(0);
    goto L237;

  L237:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    call {:si_unique_call 1484} sdv_ExFreePool(0);
    goto L241;

  L241:
    call {:si_unique_call 1485} sdv_ExFreePool(0);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 1486} IoDeleteDevice(0);
    goto L241_dummy;

  L241_dummy:
    assume false;
    return;

  anon112_Then:
    goto L241;

  anon111_Then:
    goto L237;

  anon110_Then:
    goto L233;

  anon109_Then:
    goto L229;

  anon134_Then:
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    call {:si_unique_call 1487} InitializeListHead(PdoList__PDO_DATA(PdoData_11));
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    assume {:nonnull} PdoData_11 != 0;
    assume PdoData_11 > 0;
    goto anon134_Then_dummy;

  anon134_Then_dummy:
    assume false;
    return;

  anon107_Then:
    assume {:partition} sdv_606 != 0;
    call {:si_unique_call 1488} ExReleaseFastMutex(0);
    call {:si_unique_call 1489} AvcRemoveInstanceFromGlobalList(BusExtension_21);
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto L197;

  L197:
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    call {:si_unique_call 1490} AvcReleaseRemoveLockAndWait(RemoveLock__BUS_DEVICE_EXTENSION(BusExtension_21));
    goto L65;

  anon108_Then:
    call {:si_unique_call 1491} vslice_dummy_var_272 := Avc_SetBusResetNotify(BusExtension_21, 0);
    call {:si_unique_call 1492} AvcStopAllFCPProcessing(BusExtension_21);
    call {:si_unique_call 1493} vslice_dummy_var_273 := Avc_SetFcpNotify(BusExtension_21, 0);
    call {:si_unique_call 1494} Avc_SetUnitDirectory(BusExtension_21, 0);
    call {:si_unique_call 1495} vslice_dummy_var_274 := IoSetDeviceInterfaceState(0, 0);
    goto L197;

  anon129_Then:
    assume {:partition} MinorFunction_1 == 1;
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    goto L65;

  anon131_Then:
    assume {:partition} MinorFunction_1 == 0;
    assume {:nonnull} Irp_39 != 0;
    assume Irp_39 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_39))] := 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume Irp_39 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1496} SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry(0);
    goto L341;

  L341:
    call {:si_unique_call 1497} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_39);
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    havoc vslice_dummy_var_2684;
    call {:si_unique_call 1498} ntStatus_44 := Avc_SubmitIrpSynch(vslice_dummy_var_2684, Irp_39);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} ntStatus_44 >= 0;
    irpStatus := ntStatus_44;
    call {:si_unique_call 1499} vslice_dummy_var_275 := IoSetDeviceInterfaceState(0, 1);
    call {:si_unique_call 1500} ntStatus_44 := AvcReq_UnitInfo(BusExtension_21);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} ntStatus_44 >= 0;
    call {:si_unique_call 1501} ntStatus_44 := Avc_SetBusResetNotify(BusExtension_21, 1);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} ntStatus_44 >= 0;
    call {:si_unique_call 1502} ntStatus_44 := Avc_SetFcpNotify(BusExtension_21, 1);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} ntStatus_44 >= 0;
    assume {:nonnull} BusExtension_21 != 0;
    assume BusExtension_21 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    call {:si_unique_call 1503} Avc_EnumerateVirtualChildren(BusExtension_21);
    call {:si_unique_call 1504} ntStatus_44 := AvcPrepareForRequestCallback(BusExtension_21, 0);
    goto L275;

  L275:
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} ntStatus_44 >= 0;
    ntStatus_44 := irpStatus;
    goto L262;

  L262:
    call {:si_unique_call 1505} sdv_IoCompleteRequest(0, 0);
    Tmp_843 := ntStatus_44;
    goto L1;

  anon115_Then:
    assume {:partition} 0 > ntStatus_44;
    assume {:nonnull} Irp_39 != 0;
    assume Irp_39 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_39))] := ntStatus_44;
    goto L262;

  anon118_Then:
    call {:si_unique_call 1506} ntStatus_44 := AvcPrepareForResponseCallback(BusExtension_21, 0);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} ntStatus_44 >= 0;
    call {:si_unique_call 1507} ntStatus_44 := AvcPrepareForRequestCallback(BusExtension_21, 0);
    goto L275;

  anon119_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L275;

  anon117_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L275;

  anon116_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L275;

  anon114_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L275;

  anon113_Then:
    assume {:partition} 0 > ntStatus_44;
    goto L262;

  anon132_Then:
    assume !(Irp_39 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L341;
}



procedure {:origName "RtlLargeIntegerToUnicodeString"} RtlLargeIntegerToUnicodeString(actual_Input: int, actual_Base_1: int, actual_String_1: int) returns (Tmp_861: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_861 == -1073741811 || Tmp_861 == 0 || Tmp_861 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlLargeIntegerToUnicodeString"} RtlLargeIntegerToUnicodeString(actual_Input: int, actual_Base_1: int, actual_String_1: int) returns (Tmp_861: int)
{
  var {:scalar} Tmp_862: int;
  var {:scalar} Value_1: int;
  var {:scalar} Mask: int;
  var {:scalar} Negate: int;
  var {:scalar} ntStatus_45: int;
  var {:scalar} Tmp_863: int;
  var {:scalar} Length_5: int;
  var {:scalar} Tmp_865: int;
  var {:scalar} Shift: int;
  var {:pointer} ptr: int;
  var {:scalar} Tmp_866: int;
  var {:pointer} Result: int;
  var {:scalar} Tmp_867: int;
  var {:pointer} Input: int;
  var {:scalar} Base_1: int;
  var {:pointer} String_1: int;

  anon0:
    Input := actual_Input;
    Base_1 := actual_Base_1;
    String_1 := actual_String_1;
    call {:si_unique_call 1509} Result := __HAVOC_malloc(260);
    ptr := Result + 64 * 4;
    Shift := 0;
    Negate := 0;
    Length_5 := 0;
    ntStatus_45 := 0;
    call {:si_unique_call 1510} sdv_do_paged_code_check();
    assume {:nonnull} ptr != 0;
    assume ptr > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Base_1 != 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Base_1 != 2;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Base_1 != 8;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Base_1 != 10;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Base_1 == 16;
    Shift := Shift + 1;
    goto L24;

  L24:
    Shift := Shift + 1;
    Shift := Shift + 1;
    goto L23;

  L23:
    Shift := Shift + 1;
    assume {:nonnull} Input != 0;
    assume Input > 0;
    havoc Value_1;
    call {:si_unique_call 1511} Mask := corral_nondet();
    goto L29;

  L29:
    call {:si_unique_call 1512} Value_1, Tmp_863, Tmp_866 := RtlLargeIntegerToUnicodeString_loop_L29(Value_1, Mask, Tmp_863, ptr, Tmp_866);
    goto L29_last;

  L29_last:
    Tmp_863 := BAND(Value_1, Mask);
    Tmp_866 := Tmp_863;
    assume {:nonnull} ptr != 0;
    assume ptr > 0;
    call {:si_unique_call 1515} Value_1 := corral_nondet();
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Value_1 == 0;
    goto L34;

  L34:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} ntStatus_45 >= 0;
    Length_5 := (Result + 64 * 4) * 2 + 2;
    assume {:nonnull} String_1 != 0;
    assume String_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    Tmp_867 := Length_5;
    call {:si_unique_call 1513} sdv_RtlCopyMemory(0, 0, Tmp_867);
    assume {:nonnull} String_1 != 0;
    assume String_1 > 0;
    goto L35;

  L35:
    Tmp_861 := ntStatus_45;
    return;

  anon32_Then:
    ntStatus_45 := 5;
    goto L35;

  anon24_Then:
    assume {:partition} 0 > ntStatus_45;
    goto L35;

  anon33_Then:
    assume {:partition} Value_1 != 0;
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon26_Then:
    assume {:partition} Base_1 != 16;
    ntStatus_45 := -1073741811;
    goto L34;

  anon27_Then:
    assume {:partition} Base_1 == 10;
    goto L22;

  L22:
    assume {:nonnull} Input != 0;
    assume Input > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Input != 0;
    assume Input > 0;
    havoc Value_1;
    Negate := 1;
    goto L47;

  L47:
    call {:si_unique_call 1514} Tmp_862, Value_1, Tmp_865 := RtlLargeIntegerToUnicodeString_loop_L47(Tmp_862, Value_1, Tmp_865, ptr);
    goto L47_last;

  L47_last:
    Tmp_862 := INTMOD(Value_1, 10);
    Tmp_865 := Tmp_862;
    assume {:nonnull} ptr != 0;
    assume ptr > 0;
    Value_1 := INTDIV(Value_1, 10);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Value_1 == 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Negate != 0;
    assume {:nonnull} ptr != 0;
    assume ptr > 0;
    goto L34;

  anon25_Then:
    assume {:partition} Negate == 0;
    goto L34;

  anon31_Then:
    assume {:partition} Value_1 != 0;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    assume false;
    return;

  anon23_Then:
    assume {:nonnull} Input != 0;
    assume Input > 0;
    havoc Value_1;
    goto L47;

  anon28_Then:
    assume {:partition} Base_1 == 8;
    goto L24;

  anon29_Then:
    assume {:partition} Base_1 == 2;
    goto L23;

  anon30_Then:
    assume {:partition} Base_1 == 0;
    goto L22;
}



procedure {:origName "Avc_SetBusResetNotify"} Avc_SetBusResetNotify(actual_BusExtension_22: int, actual_bEnable_2: int) returns (Tmp_868: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_SetBusResetNotify"} Avc_SetBusResetNotify(actual_BusExtension_22: int, actual_bEnable_2: int) returns (Tmp_868: int)
{
  var {:pointer} Irp_40: int;
  var {:pointer} Tmp_869: int;
  var {:scalar} ntStatus_46: int;
  var {:pointer} NextIrpStack_12: int;
  var {:scalar} AvRequest_4: int;
  var {:pointer} BusExtension_22: int;
  var {:scalar} bEnable_2: int;
  var vslice_dummy_var_2685: int;
  var vslice_dummy_var_2686: int;
  var vslice_dummy_var_2687: int;

  anon0:
    call {:si_unique_call 1516} AvRequest_4 := __HAVOC_malloc(460);
    BusExtension_22 := actual_BusExtension_22;
    bEnable_2 := actual_bEnable_2;
    ntStatus_46 := 0;
    call {:si_unique_call 1517} sdv_do_paged_code_check();
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    havoc Tmp_869;
    assume {:nonnull} Tmp_869 != 0;
    assume Tmp_869 > 0;
    havoc vslice_dummy_var_2685;
    call {:si_unique_call 1518} Irp_40 := IoAllocateIrp(vslice_dummy_var_2685, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Irp_40 != 0;
    call {:si_unique_call 1519} NextIrpStack_12 := sdv_IoGetNextIrpStackLocation(Irp_40);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} bEnable_2 != 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    assume {:nonnull} NextIrpStack_12 != 0;
    assume NextIrpStack_12 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_12)] := 15;
    assume {:nonnull} NextIrpStack_12 != 0;
    assume NextIrpStack_12 > 0;
    assume {:nonnull} NextIrpStack_12 != 0;
    assume NextIrpStack_12 > 0;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    havoc vslice_dummy_var_2686;
    call {:si_unique_call 1520} ntStatus_46 := Avc_SubmitIrpSynch(vslice_dummy_var_2686, Irp_40);
    goto L22;

  L22:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} ntStatus_46 >= 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} bEnable_2 != 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    goto L44;

  L44:
    assume {:nonnull} NextIrpStack_12 != 0;
    assume NextIrpStack_12 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_12)] := 15;
    assume {:nonnull} NextIrpStack_12 != 0;
    assume NextIrpStack_12 > 0;
    assume {:nonnull} NextIrpStack_12 != 0;
    assume NextIrpStack_12 > 0;
    assume {:nonnull} BusExtension_22 != 0;
    assume BusExtension_22 > 0;
    havoc vslice_dummy_var_2687;
    call {:si_unique_call 1521} ntStatus_46 := Avc_SubmitIrpSynch(vslice_dummy_var_2687, Irp_40);
    goto L34;

  L34:
    call {:si_unique_call 1522} IoFreeIrp(0);
    goto L51;

  L51:
    Tmp_868 := ntStatus_46;
    return;

  anon12_Then:
    assume {:partition} bEnable_2 == 0;
    assume {:nonnull} AvRequest_4 != 0;
    assume AvRequest_4 > 0;
    goto L44;

  anon11_Then:
    assume {:partition} 0 > ntStatus_46;
    goto L34;

  anon10_Then:
    assume {:partition} bEnable_2 == 0;
    goto L22;

  anon9_Then:
    assume {:partition} Irp_40 == 0;
    ntStatus_46 := -1073741670;
    goto L51;
}



procedure {:origName "AvcRobustStatusRequest"} AvcRobustStatusRequest(actual_Command_26: int) returns (Tmp_871: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcRobustStatusRequest"} AvcRobustStatusRequest(actual_Command_26: int) returns (Tmp_871: int)
{
  var {:scalar} Retries_1: int;
  var {:scalar} ntStatus_47: int;
  var {:scalar} tmDelay_1: int;
  var {:pointer} Command_26: int;
  var vslice_dummy_var_278: int;

  anon0:
    call {:si_unique_call 1523} tmDelay_1 := __HAVOC_malloc(20);
    Command_26 := actual_Command_26;
    ntStatus_47 := 0;
    call {:si_unique_call 1524} sdv_do_paged_code_check();
    assume {:nonnull} tmDelay_1 != 0;
    assume tmDelay_1 > 0;
    assume {:nonnull} tmDelay_1 != 0;
    assume tmDelay_1 > 0;
    Retries_1 := 0;
    goto L13;

  L13:
    call {:si_unique_call 1525} Retries_1, ntStatus_47, vslice_dummy_var_278 := AvcRobustStatusRequest_loop_L13(Retries_1, ntStatus_47, tmDelay_1, Command_26, vslice_dummy_var_278);
    goto L13_last;

  L13_last:
    assume {:CounterLoop 10} {:Counter "Retries_1"} true;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} 10 > Retries_1;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Retries_1 != 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} ntStatus_47 != 258;
    call {:si_unique_call 1526} vslice_dummy_var_278 := KeDelayExecutionThread(0, 0, 0);
    goto L16;

  L16:
    call {:si_unique_call 1527} ntStatus_47 := AvcStatus(Command_26);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} ntStatus_47 != 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} ntStatus_47 != -1073741435;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} ntStatus_47 != -1073741668;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_47 != -1073741643;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} ntStatus_47 != -1073741248;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} ntStatus_47 == 258;
    goto L27;

  L27:
    assume {:nonnull} tmDelay_1 != 0;
    assume tmDelay_1 > 0;
    goto L33;

  L33:
    Retries_1 := Retries_1 + 1;
    goto L33_dummy;

  L33_dummy:
    assume false;
    return;

  anon30_Then:
    assume {:partition} ntStatus_47 != 258;
    goto L14;

  L14:
    Tmp_871 := ntStatus_47;
    return;

  anon29_Then:
    assume {:partition} ntStatus_47 == -1073741248;
    goto L27;

  anon28_Then:
    assume {:partition} ntStatus_47 == -1073741643;
    goto L27;

  anon27_Then:
    assume {:partition} ntStatus_47 == -1073741668;
    goto L27;

  anon26_Then:
    assume {:partition} ntStatus_47 == -1073741435;
    goto L27;

  anon24_Then:
    assume {:partition} ntStatus_47 == 0;
    assume {:nonnull} Command_26 != 0;
    assume Command_26 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} tmDelay_1 != 0;
    assume tmDelay_1 > 0;
    goto L33;

  anon25_Then:
    goto L14;

  anon23_Then:
    assume {:partition} ntStatus_47 == 258;
    goto L16;

  anon22_Then:
    assume {:partition} Retries_1 == 0;
    goto L16;

  anon21_Then:
    assume {:partition} Retries_1 >= 10;
    goto L14;
}



procedure {:origName "Avc_PDO_Pnp"} Avc_PDO_Pnp(actual_DeviceObject_34: int, actual_Irp_41: int) returns (Tmp_873: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.Status__IO_STATUS_BLOCK, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_PDO_Pnp"} Avc_PDO_Pnp(actual_DeviceObject_34: int, actual_Irp_41: int) returns (Tmp_873: int)
{
  var {:pointer} PdoData_13: int;
  var {:pointer} PdoData_14: int;
  var {:pointer} Tmp_875: int;
  var {:pointer} sdv_624: int;
  var {:dopa} {:scalar} cbTemp: int;
  var {:pointer} idString: int;
  var {:pointer} Tmp_877: int;
  var {:scalar} sdv_626: int;
  var {:pointer} Tmp_878: int;
  var {:pointer} wszTemp_1: int;
  var {:pointer} sdv_628: int;
  var {:pointer} Tmp_879: int;
  var {:pointer} IrpStack_11: int;
  var {:pointer} Tmp_881: int;
  var {:pointer} sdv_631: int;
  var {:pointer} Tmp_882: int;
  var {:pointer} Tmp_883: int;
  var {:pointer} Tmp_884: int;
  var {:pointer} Tmp_885: int;
  var {:pointer} Tmp_886: int;
  var {:pointer} DeviceCapabilities_1: int;
  var {:scalar} ntStatus_48: int;
  var {:pointer} PdoExtension_8: int;
  var {:pointer} Relation: int;
  var {:pointer} Tmp_888: int;
  var {:scalar} StartState: int;
  var {:pointer} UnitInfo_1: int;
  var {:pointer} Tmp_889: int;
  var {:pointer} sdv_639: int;
  var {:pointer} sdv_640: int;
  var {:pointer} Tmp_890: int;
  var {:pointer} Tmp_891: int;
  var {:pointer} pwszSubunit: int;
  var {:scalar} MinorFunction_2: int;
  var {:scalar} Length_6: int;
  var {:dopa} {:scalar} ulStrLen: int;
  var {:pointer} BusInfo: int;
  var {:pointer} Tmp_893: int;
  var {:pointer} sdv_644: int;
  var {:pointer} BusExtension_23: int;
  var {:pointer} PdoData_15: int;
  var {:scalar} uniDeviceText: int;
  var {:pointer} Tmp_894: int;
  var {:pointer} Tmp_895: int;
  var {:pointer} DeviceObject_34: int;
  var {:pointer} Irp_41: int;
  var boogieTmp: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_2688: int;
  var vslice_dummy_var_2689: int;
  var vslice_dummy_var_2690: int;
  var vslice_dummy_var_2691: int;
  var vslice_dummy_var_2692: int;
  var vslice_dummy_var_2693: int;
  var vslice_dummy_var_2694: int;
  var vslice_dummy_var_2695: int;
  var vslice_dummy_var_2696: int;
  var vslice_dummy_var_2697: int;
  var vslice_dummy_var_2698: int;
  var vslice_dummy_var_2699: int;

  anon0:
    call {:si_unique_call 1528} cbTemp := __HAVOC_malloc(4);
    call {:si_unique_call 1529} wszTemp_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1530} pwszSubunit := __HAVOC_malloc(4);
    call {:si_unique_call 1531} ulStrLen := __HAVOC_malloc(4);
    call {:si_unique_call 1532} uniDeviceText := __HAVOC_malloc(12);
    DeviceObject_34 := actual_DeviceObject_34;
    Irp_41 := actual_Irp_41;
    call {:si_unique_call 1533} Tmp_877 := __HAVOC_malloc(4);
    call {:si_unique_call 1534} Tmp_878 := __HAVOC_malloc(28);
    call {:si_unique_call 1535} Tmp_881 := __HAVOC_malloc(28);
    call {:si_unique_call 1536} vslice_dummy_var_284 := __HAVOC_malloc(8);
    call {:si_unique_call 1537} Tmp_888 := __HAVOC_malloc(28);
    call {:si_unique_call 1538} Tmp_891 := __HAVOC_malloc(28);
    call {:si_unique_call 1539} Tmp_894 := __HAVOC_malloc(28);
    call {:si_unique_call 1540} Tmp_895 := __HAVOC_malloc(28);
    call {:si_unique_call 1541} vslice_dummy_var_285 := __HAVOC_malloc(8);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    havoc PdoExtension_8;
    ntStatus_48 := 0;
    call {:si_unique_call 1542} sdv_do_paged_code_check();
    call {:si_unique_call 1543} IrpStack_11 := sdv_IoGetCurrentIrpStackLocation(Irp_41);
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    MinorFunction_2 := Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_11)];
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_886;
    assume {:nonnull} Tmp_886 != 0;
    assume Tmp_886 > 0;
    havoc StartState;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} MinorFunction_2 != 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} MinorFunction_2 != 1;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} MinorFunction_2 != 2;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} MinorFunction_2 != 3;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} MinorFunction_2 != 4;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} MinorFunction_2 != 5;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} MinorFunction_2 != 6;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} MinorFunction_2 != 7;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} MinorFunction_2 != 9;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} MinorFunction_2 != 10;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} MinorFunction_2 != 11;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} MinorFunction_2 != 12;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} MinorFunction_2 != 19;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} MinorFunction_2 != 21;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} MinorFunction_2 == 23;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    call {:si_unique_call 1544} vslice_dummy_var_279 := sdv_ObDereferenceObject(0);
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto L37;

  L37:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_893;
    assume {:nonnull} Tmp_893 != 0;
    assume Tmp_893 > 0;
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_884;
    assume {:nonnull} Tmp_884 != 0;
    assume Tmp_884 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_882;
    assume {:nonnull} Tmp_882 != 0;
    assume Tmp_882 > 0;
    havoc vslice_dummy_var_2688;
    call {:si_unique_call 1545} vslice_dummy_var_286 := Avc_TriggerBusReset(vslice_dummy_var_2688);
    goto L44;

  L44:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} 2 == MinorFunction_2;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc PdoData_13;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} PdoData_13 != 0;
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    havoc BusExtension_23;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} BusExtension_23 != 0;
    call {:si_unique_call 1546} ExAcquireFastMutex(0);
    call {:si_unique_call 1547} AvcRemoveFromPdoList(BusExtension_23, PdoData_13);
    call {:si_unique_call 1548} ExReleaseFastMutex(0);
    goto L61;

  L61:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 1549} AvcReleaseRemoveLockAndWait(RemoveLock__PDO_DEVICE_EXTENSION(PdoExtension_8));
    call {:si_unique_call 1550} RemoveConnectionMgr(PdoData_13);
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    call {:si_unique_call 1551} sdv_ExFreePool(0);
    goto L77;

  L77:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    call {:si_unique_call 1552} sdv_ExFreePool(0);
    goto L81;

  L81:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    call {:si_unique_call 1553} sdv_ExFreePool(0);
    goto L85;

  L85:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} PdoData_13 != 0;
    assume PdoData_13 > 0;
    call {:si_unique_call 1554} sdv_ExFreePool(0);
    goto L89;

  L89:
    call {:si_unique_call 1555} sdv_ExFreePool(0);
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 1556} IoDeleteDevice(0);
    goto L50;

  L50:
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_41))] := ntStatus_48;
    call {:si_unique_call 1557} sdv_IoCompleteRequest(0, 0);
    Tmp_873 := ntStatus_48;
    return;

  anon135_Then:
    goto L89;

  anon134_Then:
    goto L85;

  anon133_Then:
    goto L81;

  anon132_Then:
    goto L77;

  anon177_Then:
    assume {:partition} BusExtension_23 == 0;
    goto L61;

  anon131_Then:
    goto L54;

  L54:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    call {:si_unique_call 1558} AvcReleaseRemoveLock(RemoveLock__PDO_DEVICE_EXTENSION(PdoExtension_8));
    goto L50;

  anon176_Then:
    assume {:partition} PdoData_13 == 0;
    goto L54;

  anon129_Then:
    assume {:partition} 2 != MinorFunction_2;
    goto L50;

  anon175_Then:
    goto L44;

  anon130_Then:
    goto L44;

  anon128_Then:
    goto L44;

  anon189_Then:
    goto L37;

  anon155_Then:
    assume {:partition} MinorFunction_2 != 23;
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    ntStatus_48 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_41))];
    goto L43;

  anon156_Then:
    assume {:partition} MinorFunction_2 == 21;
    call {:si_unique_call 1559} sdv_639 := ExAllocatePoolWithTag(1, 24, 541283905);
    BusInfo := sdv_639;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:partition} BusInfo != 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} BusInfo != 0;
    assume BusInfo > 0;
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    goto L43;

  anon188_Then:
    assume {:partition} BusInfo == 0;
    ntStatus_48 := -1073741670;
    goto L43;

  anon157_Then:
    assume {:partition} MinorFunction_2 == 19;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc PdoData_15;
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} PdoData_15 != 0;
    assume PdoData_15 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} PdoData_15 != 0;
    assume PdoData_15 > 0;
    havoc Length_6;
    call {:si_unique_call 1560} sdv_640 := ExAllocatePoolWithTag(1, Length_6, 541283905);
    idString := sdv_640;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} idString != 0;
    call {:si_unique_call 1561} sdv_RtlCopyMemory(0, 0, Length_6);
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    goto L43;

  anon187_Then:
    assume {:partition} idString == 0;
    ntStatus_48 := -1073741670;
    goto L43;

  anon138_Then:
    ntStatus_48 := -1073741823;
    goto L43;

  anon170_Then:
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    ntStatus_48 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_41))];
    goto L43;

  anon171_Then:
    assume {:nonnull} PdoData_15 != 0;
    assume PdoData_15 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} PdoData_15 != 0;
    assume PdoData_15 > 0;
    havoc Length_6;
    call {:si_unique_call 1562} sdv_631 := ExAllocatePoolWithTag(1, Length_6, 541283905);
    idString := sdv_631;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} idString != 0;
    call {:si_unique_call 1563} sdv_RtlCopyMemory(0, 0, Length_6);
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    goto L43;

  anon186_Then:
    assume {:partition} idString == 0;
    ntStatus_48 := -1073741670;
    goto L43;

  anon137_Then:
    ntStatus_48 := -1073741823;
    goto L43;

  anon172_Then:
    goto L119;

  L119:
    assume {:nonnull} PdoData_15 != 0;
    assume PdoData_15 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} PdoData_15 != 0;
    assume PdoData_15 > 0;
    havoc Length_6;
    call {:si_unique_call 1564} sdv_644 := ExAllocatePoolWithTag(1, Length_6, 541283905);
    idString := sdv_644;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} idString != 0;
    call {:si_unique_call 1565} sdv_RtlCopyMemory(0, 0, Length_6);
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    goto L43;

  anon185_Then:
    assume {:partition} idString == 0;
    ntStatus_48 := -1073741670;
    goto L43;

  anon136_Then:
    ntStatus_48 := -1073741823;
    goto L43;

  anon184_Then:
    goto L119;

  anon158_Then:
    assume {:partition} MinorFunction_2 == 12;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc PdoData_14;
    assume {:nonnull} PdoData_14 != 0;
    assume PdoData_14 > 0;
    havoc Tmp_885;
    assume {:nonnull} Tmp_885 != 0;
    assume Tmp_885 > 0;
    UnitInfo_1 := UnitIDs__BUS_DEVICE_EXTENSION(Tmp_885);
    assume {:nonnull} wszTemp_1 != 0;
    assume wszTemp_1 > 0;
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    call {:si_unique_call 1566} ntStatus_48 := AvcGetDescriptionMessage(65536, wszTemp_1);
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} ntStatus_48 == 0;
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    assume {:nonnull} wszTemp_1 != 0;
    assume wszTemp_1 > 0;
    goto L43;

  anon140_Then:
    assume {:partition} ntStatus_48 != 0;
    goto L43;

  anon169_Then:
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    ntStatus_48 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_41))];
    goto L43;

  anon181_Then:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    goto L184;

  L184:
    assume {:nonnull} pwszSubunit != 0;
    assume pwszSubunit > 0;
    assume {:nonnull} cbTemp != 0;
    assume cbTemp > 0;
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    havoc vslice_dummy_var_2689;
    havoc vslice_dummy_var_2690;
    call {:si_unique_call 1567} ntStatus_48 := RtlULongAdd(vslice_dummy_var_2689, vslice_dummy_var_2690, cbTemp);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} ntStatus_48 >= 0;
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto L200;

  L200:
    assume {:nonnull} PdoData_14 != 0;
    assume PdoData_14 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} PdoData_14 != 0;
    assume PdoData_14 > 0;
    havoc vslice_dummy_var_2691;
    call {:si_unique_call 1568} ntStatus_48 := AvcGetDeviceDescriptionMessage(vslice_dummy_var_2691, pwszSubunit);
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} ntStatus_48 == 0;
    assume {:nonnull} ulStrLen != 0;
    assume ulStrLen > 0;
    call {:si_unique_call 1569} ntStatus_48 := RtlULongMult(sdv_626, 2, ulStrLen);
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} ntStatus_48 >= 0;
    assume {:nonnull} ulStrLen != 0;
    assume ulStrLen > 0;
    havoc vslice_dummy_var_2692;
    call {:si_unique_call 1570} ntStatus_48 := RtlULongAdd(vslice_dummy_var_2692, 2, ulStrLen);
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} ntStatus_48 >= 0;
    assume {:nonnull} cbTemp != 0;
    assume cbTemp > 0;
    assume {:nonnull} ulStrLen != 0;
    assume ulStrLen > 0;
    havoc vslice_dummy_var_2693;
    havoc vslice_dummy_var_2694;
    call {:si_unique_call 1571} ntStatus_48 := RtlULongAdd(vslice_dummy_var_2693, vslice_dummy_var_2694, cbTemp);
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} ntStatus_48 >= 0;
    goto L201;

  L201:
    assume {:nonnull} cbTemp != 0;
    assume cbTemp > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} cbTemp != 0;
    assume cbTemp > 0;
    havoc vslice_dummy_var_2695;
    call {:si_unique_call 1572} sdv_624 := ExAllocatePoolWithTag(1, vslice_dummy_var_2695, 541283905);
    assume {:nonnull} wszTemp_1 != 0;
    assume wszTemp_1 > 0;
    assume {:nonnull} wszTemp_1 != 0;
    assume wszTemp_1 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    call {:si_unique_call 1573} RtlInitUnicodeString(uniDeviceText, 0);
    assume {:nonnull} cbTemp != 0;
    assume cbTemp > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} wszTemp_1 != 0;
    assume wszTemp_1 > 0;
    call {:si_unique_call 1574} vslice_dummy_var_287 := corral_nondet();
    call {:si_unique_call 1575} vslice_dummy_var_288 := corral_nondet();
    call {:si_unique_call 1576} vslice_dummy_var_280 := corral_nondet();
    assume {:nonnull} pwszSubunit != 0;
    assume pwszSubunit > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    call {:si_unique_call 1577} vslice_dummy_var_289 := corral_nondet();
    call {:si_unique_call 1578} vslice_dummy_var_281 := corral_nondet();
    goto L253;

  L253:
    ntStatus_48 := 0;
    goto L260;

  L260:
    assume {:nonnull} pwszSubunit != 0;
    assume pwszSubunit > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    call {:si_unique_call 1579} sdv_ExFreePool(0);
    goto L261;

  L261:
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} ntStatus_48 == 0;
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    assume {:nonnull} wszTemp_1 != 0;
    assume wszTemp_1 > 0;
    goto L43;

  anon152_Then:
    assume {:partition} ntStatus_48 != 0;
    goto L43;

  anon151_Then:
    goto L261;

  anon150_Then:
    goto L253;

  anon183_Then:
    ntStatus_48 := -1073741670;
    goto L260;

  anon145_Then:
    ntStatus_48 := -1073741670;
    goto L260;

  anon149_Then:
    assume {:partition} 0 > ntStatus_48;
    goto L43;

  anon148_Then:
    assume {:partition} 0 > ntStatus_48;
    goto L43;

  anon147_Then:
    assume {:partition} 0 > ntStatus_48;
    goto L43;

  anon146_Then:
    assume {:partition} ntStatus_48 != 0;
    goto L201;

  anon144_Then:
    goto L201;

  anon143_Then:
    assume {:partition} 0 > ntStatus_48;
    goto L43;

  anon182_Then:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    havoc vslice_dummy_var_2696;
    havoc vslice_dummy_var_2697;
    call {:si_unique_call 1580} ntStatus_48 := RtlULongAdd(vslice_dummy_var_2696, vslice_dummy_var_2697, cbTemp);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} ntStatus_48 >= 0;
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto L200;

  anon153_Then:
    assume {:partition} 0 > ntStatus_48;
    goto L43;

  anon141_Then:
    assume {:nonnull} UnitInfo_1 != 0;
    assume UnitInfo_1 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    goto L184;

  anon142_Then:
    goto L178;

  L178:
    assume {:nonnull} PdoData_14 != 0;
    assume PdoData_14 > 0;
    havoc vslice_dummy_var_2698;
    call {:si_unique_call 1581} ntStatus_48 := AvcGetDeviceDescriptionMessage(vslice_dummy_var_2698, wszTemp_1);
    goto L261;

  anon139_Then:
    goto L178;

  anon159_Then:
    assume {:partition} MinorFunction_2 == 11;
    goto L43;

  anon160_Then:
    assume {:partition} MinorFunction_2 == 10;
    goto L43;

  anon161_Then:
    assume {:partition} MinorFunction_2 == 9;
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    havoc DeviceCapabilities_1;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_881;
    assume {:nonnull} Tmp_881 != 0;
    assume Tmp_881 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_894;
    assume {:nonnull} Tmp_894 != 0;
    assume Tmp_894 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_895;
    assume {:nonnull} Tmp_895 != 0;
    assume Tmp_895 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_891;
    assume {:nonnull} Tmp_891 != 0;
    assume Tmp_891 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_878;
    assume {:nonnull} Tmp_878 != 0;
    assume Tmp_878 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    havoc Tmp_888;
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    assume {:nonnull} DeviceCapabilities_1 != 0;
    assume DeviceCapabilities_1 > 0;
    goto L43;

  anon154_Then:
    goto L274;

  L274:
    ntStatus_48 := -1073741823;
    goto L43;

  anon180_Then:
    goto L274;

  anon162_Then:
    assume {:partition} MinorFunction_2 == 7;
    assume {:nonnull} IrpStack_11 != 0;
    assume IrpStack_11 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    call {:si_unique_call 1582} sdv_628 := ExAllocatePoolWithTag(1, 8, 541283905);
    Relation := sdv_628;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} Relation != 0;
    call {:si_unique_call 1583} vslice_dummy_var_282 := sdv_ObReferenceObject(0);
    assume {:nonnull} Relation != 0;
    assume Relation > 0;
    assume {:nonnull} Relation != 0;
    assume Relation > 0;
    havoc Tmp_877;
    assume {:nonnull} Tmp_877 != 0;
    assume Tmp_877 > 0;
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    goto L43;

  anon179_Then:
    assume {:partition} Relation == 0;
    ntStatus_48 := -1073741670;
    goto L43;

  anon127_Then:
    assume {:nonnull} Irp_41 != 0;
    assume Irp_41 > 0;
    ntStatus_48 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_41))];
    goto L43;

  anon163_Then:
    assume {:partition} MinorFunction_2 == 6;
    goto L43;

  anon164_Then:
    assume {:partition} MinorFunction_2 == 5;
    goto L43;

  anon165_Then:
    assume {:partition} MinorFunction_2 == 4;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_883;
    assume {:nonnull} Tmp_883 != 0;
    assume Tmp_883 > 0;
    goto L43;

  anon166_Then:
    assume {:partition} MinorFunction_2 == 3;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto L43;

  anon167_Then:
    assume {:partition} MinorFunction_2 == 2;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    call {:si_unique_call 1584} vslice_dummy_var_283 := sdv_ObDereferenceObject(0);
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto L311;

  L311:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_890;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    goto L43;

  anon178_Then:
    goto L311;

  anon168_Then:
    assume {:partition} MinorFunction_2 == 1;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto L43;

  anon173_Then:
    assume {:partition} MinorFunction_2 == 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_879;
    assume {:nonnull} Tmp_879 != 0;
    assume Tmp_879 > 0;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_875;
    assume {:nonnull} Tmp_875 != 0;
    assume Tmp_875 > 0;
    havoc Tmp_889;
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    assume {:nonnull} Tmp_889 != 0;
    assume Tmp_889 > 0;
    havoc vslice_dummy_var_2699;
    call {:si_unique_call 1585} boogieTmp := IoGetAttachedDeviceReference(vslice_dummy_var_2699);
    goto L43;

  anon174_Then:
    goto L43;
}



procedure {:origName "Avc_RemoveVirtualSubunitInfo"} Avc_RemoveVirtualSubunitInfo(actual_BusExtension_24: int, actual_cbAddrSpec_1: int, actual_AddrSpec_3: int) returns (Tmp_897: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_897 == -1073741306 || Tmp_897 == 0 || Tmp_897 == -1073741823 || Tmp_897 == -1073741727 || Tmp_897 == -1073741811 || Tmp_897 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_RemoveVirtualSubunitInfo"} Avc_RemoveVirtualSubunitInfo(actual_BusExtension_24: int, actual_cbAddrSpec_1: int, actual_AddrSpec_3: int) returns (Tmp_897: int)
{
  var {:pointer} PdoData_16: int;
  var {:pointer} ValueName_4: int;
  var {:pointer} Tmp_898: int;
  var {:pointer} SubunitInfoBytes_3: int;
  var {:pointer} sdv_650: int;
  var {:scalar} sdv_653: int;
  var {:pointer} QueryTable_3: int;
  var {:scalar} ntStatus_49: int;
  var {:scalar} cbAddr_1: int;
  var {:scalar} AllowedDelta_1: int;
  var {:pointer} Entry_12: int;
  var {:dopa} {:scalar} BytesUsed_8: int;
  var {:scalar} uniName_3: int;
  var {:pointer} ListHandle_3: int;
  var {:pointer} BusExtension_24: int;
  var {:scalar} cbAddrSpec_1: int;
  var {:pointer} AddrSpec_3: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_2700: int;
  var vslice_dummy_var_2701: int;
  var vslice_dummy_var_2702: int;

  anon0:
    call {:si_unique_call 1586} vslice_dummy_var_290 := __HAVOC_malloc(24);
    call {:si_unique_call 1587} BytesUsed_8 := __HAVOC_malloc(4);
    call {:si_unique_call 1588} uniName_3 := __HAVOC_malloc(12);
    call {:si_unique_call 1589} ListHandle_3 := __HAVOC_malloc(4);
    BusExtension_24 := actual_BusExtension_24;
    cbAddrSpec_1 := actual_cbAddrSpec_1;
    AddrSpec_3 := actual_AddrSpec_3;
    call {:si_unique_call 1590} ValueName_4 := __HAVOC_malloc(1024);
    call {:si_unique_call 1591} Tmp_898 := __HAVOC_malloc(80);
    call {:si_unique_call 1592} SubunitInfoBytes_3 := __HAVOC_malloc(128);
    cbAddr_1 := cbAddrSpec_1 - 4;
    assume {:nonnull} BytesUsed_8 != 0;
    assume BytesUsed_8 > 0;
    AllowedDelta_1 := 3;
    call {:si_unique_call 1593} sdv_do_paged_code_check();
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} cbAddr_1 > 32;
    Tmp_897 := -1073741306;
    goto L1;

  L1:
    return;

  anon31_Then:
    assume {:partition} 32 >= cbAddr_1;
    assume {:nonnull} AddrSpec_3 != 0;
    assume AddrSpec_3 > 0;
    havoc vslice_dummy_var_2700;
    call {:si_unique_call 1594} ntStatus_49 := AvcValidateSubunitAddress(vslice_dummy_var_2700, cbAddr_1, BytesUsed_8);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} ntStatus_49 != 0;
    goto L21;

  L21:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} ntStatus_49 != 0;
    goto L23;

  L23:
    Tmp_897 := ntStatus_49;
    goto L1;

  anon34_Then:
    assume {:partition} ntStatus_49 == 0;
    ntStatus_49 := -1073741811;
    goto L23;

  anon32_Then:
    assume {:partition} ntStatus_49 == 0;
    assume {:nonnull} BytesUsed_8 != 0;
    assume BytesUsed_8 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L28;

  L28:
    assume {:nonnull} BytesUsed_8 != 0;
    assume BytesUsed_8 > 0;
    havoc vslice_dummy_var_2701;
    call {:si_unique_call 1595} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2701);
    call {:si_unique_call 1596} ExAcquireFastMutex(0);
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    havoc Entry_12;
    PdoData_16 := 0;
    goto L36;

  L36:
    call {:si_unique_call 1597} PdoData_16, sdv_653, Entry_12 := Avc_RemoveVirtualSubunitInfo_loop_L36(PdoData_16, SubunitInfoBytes_3, sdv_653, Entry_12, BusExtension_24);
    goto L36_last;

  L36_last:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    PdoData_16 := Entry_12;
    assume {:nonnull} PdoData_16 != 0;
    assume PdoData_16 > 0;
    havoc vslice_dummy_var_2702;
    call {:si_unique_call 1598} sdv_653 := AvcSubunitPackedTypesEqual(SubunitInfoBytes_3, vslice_dummy_var_2702);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_653 != 0;
    assume {:nonnull} PdoData_16 != 0;
    assume PdoData_16 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    assume {:nonnull} PdoData_16 != 0;
    assume PdoData_16 > 0;
    goto L45;

  L45:
    assume {:nonnull} Entry_12 != 0;
    assume Entry_12 > 0;
    havoc Entry_12;
    goto L45_dummy;

  L45_dummy:
    assume false;
    return;

  anon38_Then:
    goto L45;

  anon37_Then:
    assume {:partition} sdv_653 == 0;
    goto L45;

  anon36_Then:
    call {:si_unique_call 1599} ExReleaseFastMutex(0);
    assume {:nonnull} AddrSpec_3 != 0;
    assume AddrSpec_3 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    call {:si_unique_call 1600} ntStatus_49 := IoOpenDeviceRegistryKey(0, 2, 983103, 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} ntStatus_49 >= 0;
    Tmp_898 := strConst__li2bpl18;
    call {:si_unique_call 1601} RtlInitUnicodeString(uniName_3, Tmp_898);
    call {:si_unique_call 1602} sdv_InitializeObjectAttributes(0, 0, 576, 0, 0);
    call {:si_unique_call 1603} ntStatus_49 := ZwOpenKey(ListHandle_3, 983103, 0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} ntStatus_49 >= 0;
    call {:si_unique_call 1604} sdv_650 := sdv_ExAllocateFromNPagedLookasideList(0);
    QueryTable_3 := sdv_650;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} QueryTable_3 != 0;
    assume {:nonnull} ValueName_4 != 0;
    assume ValueName_4 > 0;
    call {:si_unique_call 1605} sdv_RtlZeroMemory(0, 56);
    assume {:nonnull} QueryTable_3 != 0;
    assume QueryTable_3 > 0;
    assume {:nonnull} QueryTable_3 != 0;
    assume QueryTable_3 > 0;
    assume {:nonnull} AddrSpec_3 != 0;
    assume AddrSpec_3 > 0;
    assume {:nonnull} QueryTable_3 != 0;
    assume QueryTable_3 > 0;
    call {:si_unique_call 1606} ntStatus_49 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} -1073741536 == ntStatus_49;
    call {:si_unique_call 1607} ntStatus_49 := RtlDeleteRegistryValue(-1073741824, 0, 0);
    goto L96;

  L96:
    call {:si_unique_call 1608} ExFreeToNPagedLookasideList(AvcQueryTablePool, QueryTable_3);
    goto L80;

  L80:
    call {:si_unique_call 1609} vslice_dummy_var_292 := ZwClose(0);
    goto L71;

  L71:
    call {:si_unique_call 1610} vslice_dummy_var_291 := ZwClose(0);
    goto L50;

  L50:
    assume {:nonnull} AddrSpec_3 != 0;
    assume AddrSpec_3 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    call {:si_unique_call 1611} IoInvalidateDeviceRelations(0, 0);
    assume {:nonnull} BusExtension_24 != 0;
    assume BusExtension_24 > 0;
    goto L23;

  anon44_Then:
    goto L23;

  anon40_Then:
    goto L23;

  anon43_Then:
    assume {:partition} -1073741536 != ntStatus_49;
    goto L96;

  anon45_Then:
    assume {:partition} QueryTable_3 == 0;
    goto L80;

  anon42_Then:
    assume {:partition} 0 > ntStatus_49;
    goto L71;

  anon41_Then:
    assume {:partition} 0 > ntStatus_49;
    goto L50;

  anon39_Then:
    goto L50;

  anon33_Then:
    assume {:nonnull} BytesUsed_8 != 0;
    assume BytesUsed_8 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L28;

  anon35_Then:
    goto L21;
}



procedure {:origName "AvcAddToPdoList"} AvcAddToPdoList(actual_BusExtension_25: int, actual_PdoData_17: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcAddToPdoList"} AvcAddToPdoList(actual_BusExtension_25: int, actual_PdoData_17: int)
{
  var {:scalar} oldIrql_5: int;
  var {:pointer} Tmp_900: int;
  var {:pointer} BusExtension_25: int;
  var {:pointer} PdoData_17: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;

  anon0:
    call {:si_unique_call 1612} vslice_dummy_var_293 := __HAVOC_malloc(4);
    BusExtension_25 := actual_BusExtension_25;
    PdoData_17 := actual_PdoData_17;
    call {:si_unique_call 1613} Tmp_900 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_900 != 0;
    assume Tmp_900 > 0;
    call {:si_unique_call 1614} sdv_KeAcquireSpinLock(0, Tmp_900);
    assume {:nonnull} Tmp_900 != 0;
    assume Tmp_900 > 0;
    havoc oldIrql_5;
    assume {:nonnull} BusExtension_25 != 0;
    assume BusExtension_25 > 0;
    assume {:nonnull} PdoData_17 != 0;
    assume PdoData_17 > 0;
    call {:si_unique_call 1615} vslice_dummy_var_294 := sdv_InsertTailList(PdoList__BUS_DEVICE_EXTENSION(BusExtension_25), PdoList__PDO_DATA(PdoData_17));
    call {:si_unique_call 1616} sdv_KeReleaseSpinLock(0, oldIrql_5);
    return;
}



procedure {:origName "Avc_FDO_PowerComplete"} Avc_FDO_PowerComplete(actual_DeviceObject_35: int, actual_Irp_42: int, actual_BusExtensionIn: int) returns (Tmp_902: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_902 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_FDO_PowerComplete"} Avc_FDO_PowerComplete(actual_DeviceObject_35: int, actual_Irp_42: int, actual_BusExtensionIn: int) returns (Tmp_902: int)
{
  var {:pointer} SD2: int;
  var {:scalar} State_2: int;
  var {:pointer} IrpStack_12: int;
  var {:scalar} sdv_2: int;
  var {:scalar} StateType: int;
  var {:pointer} BusExtension_26: int;
  var {:pointer} Irp_42: int;
  var {:pointer} BusExtensionIn: int;

  anon0:
    call {:si_unique_call 1617} State_2 := __HAVOC_malloc(8);
    call {:si_unique_call 1618} sdv_2 := __HAVOC_malloc(8);
    Irp_42 := actual_Irp_42;
    BusExtensionIn := actual_BusExtensionIn;
    BusExtension_26 := BusExtensionIn;
    assume {:nonnull} Irp_42 != 0;
    assume Irp_42 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_42)] != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume Irp_42 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1619} SLIC_sdv_IoMarkIrpPending_entry(strConst__li2bpl13);
    goto L28;

  L28:
    call {:si_unique_call 1620} sdv_IoMarkIrpPending(0);
    goto L9;

  L9:
    call {:si_unique_call 1621} IrpStack_12 := sdv_IoGetCurrentIrpStackLocation(Irp_42);
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    assume {:nonnull} IrpStack_12 != 0;
    assume IrpStack_12 > 0;
    havoc StateType;
    assume {:nonnull} BusExtension_26 != 0;
    assume BusExtension_26 > 0;
    assume {:nonnull} State_2 != 0;
    assume State_2 > 0;
    call {:si_unique_call 1622} SD2 := PoSetPowerState(0, StateType, State_2);
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    call {:si_unique_call 1623} PoStartNextPowerIrp(0);
    Tmp_902 := 0;
    return;

  anon5_Then:
    assume !(Irp_42 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L28;

  anon6_Then:
    assume {:partition} Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_42)] == 0;
    goto L9;
}



procedure {:origName "Avc_PDO_Power"} Avc_PDO_Power(actual_PdoExtension_9: int, actual_Irp_43: int) returns (Tmp_904: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_PDO_Power"} Avc_PDO_Power(actual_PdoExtension_9: int, actual_Irp_43: int) returns (Tmp_904: int)
{
  var {:pointer} SD1: int;
  var {:scalar} State_3: int;
  var {:pointer} IrpStack_13: int;
  var {:scalar} sdv_1: int;
  var {:scalar} ntStatus_50: int;
  var {:scalar} StateType_1: int;
  var {:pointer} PdoExtension_9: int;
  var {:pointer} Irp_43: int;

  anon0:
    call {:si_unique_call 1624} State_3 := __HAVOC_malloc(8);
    call {:si_unique_call 1625} sdv_1 := __HAVOC_malloc(8);
    PdoExtension_9 := actual_PdoExtension_9;
    Irp_43 := actual_Irp_43;
    ntStatus_50 := 0;
    call {:si_unique_call 1626} IrpStack_13 := sdv_IoGetCurrentIrpStackLocation(Irp_43);
    assume {:nonnull} IrpStack_13 != 0;
    assume IrpStack_13 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    assume {:nonnull} IrpStack_13 != 0;
    assume IrpStack_13 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    assume {:nonnull} IrpStack_13 != 0;
    assume IrpStack_13 > 0;
    havoc StateType_1;
    assume {:nonnull} IrpStack_13 != 0;
    assume IrpStack_13 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_13)] != 2;
    assume {:nonnull} IrpStack_13 != 0;
    assume IrpStack_13 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_13)] == 3;
    goto L20;

  L20:
    call {:si_unique_call 1627} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_43 != 0;
    assume Irp_43 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_43))] := ntStatus_50;
    call {:si_unique_call 1628} sdv_IoCompleteRequest(0, 0);
    Tmp_904 := ntStatus_50;
    return;

  anon11_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_13)] != 3;
    assume {:nonnull} Irp_43 != 0;
    assume Irp_43 > 0;
    ntStatus_50 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_43))];
    goto L20;

  anon12_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_13)] == 2;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} StateType_1 == 1;
    call {:si_unique_call 1629} SD1 := PoSetPowerState(0, StateType_1, State_3);
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} PdoExtension_9 != 0;
    assume PdoExtension_9 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    goto L20;

  anon9_Then:
    assume {:partition} StateType_1 != 1;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} StateType_1 == 0;
    assume {:nonnull} PdoExtension_9 != 0;
    assume PdoExtension_9 > 0;
    assume {:nonnull} State_3 != 0;
    assume State_3 > 0;
    goto L20;

  anon10_Then:
    assume {:partition} StateType_1 != 0;
    goto L20;
}



procedure {:origName "Avc_FDO_Power"} Avc_FDO_Power(actual_BusExtension_27: int, actual_Irp_44: int) returns (Tmp_906: int);
  modifies alloc, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, thread_status, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, return_state, lowerDriverFailed, irp_copy_next, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} Tmp_906 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_FDO_Power"} Avc_FDO_Power(actual_BusExtension_27: int, actual_Irp_44: int) returns (Tmp_906: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:scalar} State_4: int;
  var {:pointer} IrpStack_14: int;
  var {:scalar} ntStatus_51: int;
  var {:scalar} sdv: int;
  var {:scalar} StateType_2: int;
  var {:pointer} BusExtension_27: int;
  var {:pointer} Irp_44: int;

  anon0:
    call {:si_unique_call 1630} State_4 := __HAVOC_malloc(8);
    call {:si_unique_call 1631} sdv := __HAVOC_malloc(8);
    BusExtension_27 := actual_BusExtension_27;
    Irp_44 := actual_Irp_44;
    ntStatus_51 := 0;
    call {:si_unique_call 1632} IrpStack_14 := sdv_IoGetCurrentIrpStackLocation(Irp_44);
    assume {:nonnull} IrpStack_14 != 0;
    assume IrpStack_14 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    assume {:nonnull} IrpStack_14 != 0;
    assume IrpStack_14 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    assume {:nonnull} IrpStack_14 != 0;
    assume IrpStack_14 > 0;
    havoc StateType_2;
    assume {:nonnull} IrpStack_14 != 0;
    assume IrpStack_14 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_14)] != 2;
    assume {:nonnull} IrpStack_14 != 0;
    assume IrpStack_14 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_14)] != 3;
    goto L20;

  L20:
    call {:si_unique_call 1633} PoStartNextPowerIrp(0);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume Irp_44 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1634} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(strConst__li2bpl13);
    goto L58;

  L58:
    call {:si_unique_call 1635} sdv_IoSkipCurrentIrpStackLocation(Irp_44);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume Irp_44 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1636} SLIC_PoCallDriver_entry(0);
    goto L61;

  L61:
    call {:si_unique_call 1637} ntStatus_51 := PoCallDriver(0, Irp_44);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume Irp_44 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1638} SLIC_PoCallDriver_exit(0, Irp_44);
    goto L30;

  L30:
    Tmp_906 := ntStatus_51;
    goto L1;

  L1:
    return;

  anon37_Then:
    assume !(Irp_44 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L30;

  anon29_Then:
    assume !(Irp_44 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L61;

  anon28_Then:
    assume !(Irp_44 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L58;

  anon36_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_14)] == 3;
    goto L20;

  anon39_Then:
    assume {:partition} Mem_T.MinorFunction__IO_STACK_LOCATION[MinorFunction__IO_STACK_LOCATION(IrpStack_14)] == 2;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} StateType_2 == 1;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1639} structPtr888sdv := PoSetPowerState(0, StateType_2, State_4);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    goto L20;

  anon31_Then:
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume Irp_44 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1640} SLIC_sdv_IoCopyCurrentIrpStackLocationToNext_entry(0);
    goto L67;

  L67:
    call {:si_unique_call 1641} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_44);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume Irp_44 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1642} SLIC_sdv_IoSetCompletionRoutine_entry(0);
    goto L70;

  L70:
    call {:si_unique_call 1643} sdv_IoSetCompletionRoutine(Irp_44, li2bplFunctionConstant517, BusExtension_27, 1, 1, 1);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume Irp_44 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1644} SLIC_PoCallDriver_entry(0);
    goto L73;

  L73:
    call {:si_unique_call 1645} ntStatus_51 := PoCallDriver(0, Irp_44);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume Irp_44 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1646} SLIC_PoCallDriver_exit(0, Irp_44);
    goto L49;

  L49:
    Tmp_906 := ntStatus_51;
    goto L1;

  anon38_Then:
    assume !(Irp_44 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L49;

  anon35_Then:
    assume !(Irp_44 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L73;

  anon34_Then:
    assume !(Irp_44 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L70;

  anon33_Then:
    assume !(Irp_44 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L67;

  anon32_Then:
    goto L20;

  anon27_Then:
    assume {:partition} StateType_2 != 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} StateType_2 == 0;
    assume {:nonnull} BusExtension_27 != 0;
    assume BusExtension_27 > 0;
    assume {:nonnull} State_4 != 0;
    assume State_4 > 0;
    goto L20;

  anon30_Then:
    assume {:partition} StateType_2 != 0;
    goto L20;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_295: int;

  anon0:
    call {:si_unique_call 1647} vslice_dummy_var_295 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "Avc_Power"} Avc_Power(actual_DeviceObject_36: int, actual_Irp_45: int) returns (Tmp_910: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.MajorFunction__IO_STACK_LOCATION, thread_status, Mem_T.PendingReturned__IRP, return_state, lowerDriverFailed, irp_copy_next, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(irp_copy_next) == 0 ==> irp_copy_next != 1;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} irp_copy_next == 0 || irp_copy_next == old(irp_copy_next);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_Power"} Avc_Power(actual_DeviceObject_36: int, actual_Irp_45: int) returns (Tmp_910: int)
{
  var {:scalar} ntStatus_52: int;
  var {:pointer} CommonExtension_7: int;
  var {:pointer} DeviceObject_36: int;
  var {:pointer} Irp_45: int;

  anon0:
    DeviceObject_36 := actual_DeviceObject_36;
    Irp_45 := actual_Irp_45;
    assume {:nonnull} DeviceObject_36 != 0;
    assume DeviceObject_36 > 0;
    havoc CommonExtension_7;
    assume {:nonnull} CommonExtension_7 != 0;
    assume CommonExtension_7 > 0;
    call {:si_unique_call 1648} ntStatus_52 := AvcAcquireRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_7));
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} ntStatus_52 != 0;
    call {:si_unique_call 1649} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_45 != 0;
    assume Irp_45 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_45))] := ntStatus_52;
    call {:si_unique_call 1650} sdv_IoCompleteRequest(0, 0);
    goto L19;

  L19:
    Tmp_910 := ntStatus_52;
    return;

  anon7_Then:
    assume {:partition} ntStatus_52 == 0;
    assume {:nonnull} CommonExtension_7 != 0;
    assume CommonExtension_7 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    call {:si_unique_call 1651} ntStatus_52 := Avc_PDO_Power(CommonExtension_7, Irp_45);
    goto L25;

  L25:
    assume {:nonnull} CommonExtension_7 != 0;
    assume CommonExtension_7 > 0;
    call {:si_unique_call 1652} AvcReleaseRemoveLock(RemoveLock__COMMON_DEVICE_EXTENSION(CommonExtension_7));
    goto L19;

  anon8_Then:
    assume {:nonnull} CommonExtension_7 != 0;
    assume CommonExtension_7 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1653} ntStatus_52 := Avc_FDO_Power(CommonExtension_7, Irp_45);
    goto L25;

  anon9_Then:
    call {:si_unique_call 1654} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_45 != 0;
    assume Irp_45 > 0;
    ntStatus_52 := Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_45))];
    call {:si_unique_call 1655} sdv_IoCompleteRequest(0, 0);
    goto L25;
}



procedure {:origName "sdv_hash_179875575"} sdv_hash_179875575(actual_this_26: int) returns (Tmp_912: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_179875575"} sdv_hash_179875575(actual_this_26: int) returns (Tmp_912: int)
{
  var {:pointer} this_26: int;

  anon0:
    this_26 := actual_this_26;
    assume {:nonnull} this_26 != 0;
    assume this_26 > 0;
    havoc Tmp_912;
    return;
}



procedure {:origName "sdv_hash_376789576"} sdv_hash_376789576(actual_AvcIrb_10: int) returns (Tmp_914: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_914 == actual_AvcIrb_10;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_376789576"} sdv_hash_376789576(actual_AvcIrb_10: int) returns (Tmp_914: int)
{
  var {:pointer} sdv_666: int;
  var {:pointer} sdv_667: int;
  var {:pointer} Ops: int;
  var {:scalar} Opc: int;
  var {:pointer} AvcIrb_10: int;

  anon0:
    AvcIrb_10 := actual_AvcIrb_10;
    call {:si_unique_call 1656} Ops := __HAVOC_malloc(4);
    Opc := 34;
    assume {:nonnull} Ops != 0;
    assume Ops > 0;
    call {:si_unique_call 1657} sdv_666 := sdv_hash_434855337(AvcIrb_10, Opc);
    call {:si_unique_call 1658} sdv_667 := sdv_hash_861280784(sdv_666, 1, Ops);
    Tmp_914 := sdv_667;
    return;
}



procedure {:origName "sdv_hash_330049800"} sdv_hash_330049800(actual_this_27: int) returns (Tmp_916: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_330049800"} sdv_hash_330049800(actual_this_27: int) returns (Tmp_916: int)
{
  var {:pointer} this_27: int;

  anon0:
    this_27 := actual_this_27;
    assume {:nonnull} this_27 != 0;
    assume this_27 > 0;
    havoc Tmp_916;
    return;
}



procedure {:origName "sdv_hash_94547877"} sdv_hash_94547877(actual_Descriptor: int, actual_kspd_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_94547877"} sdv_hash_94547877(actual_Descriptor: int, actual_kspd_1: int)
{
  var {:pointer} Descriptor: int;
  var {:pointer} kspd_1: int;
  var vslice_dummy_var_296: int;

  anon0:
    call {:si_unique_call 1659} vslice_dummy_var_296 := __HAVOC_malloc(4);
    Descriptor := actual_Descriptor;
    kspd_1 := actual_kspd_1;
    call {:si_unique_call 1660} sdv_RtlCopyMemory(0, 0, 48);
    assume {:nonnull} kspd_1 != 0;
    assume kspd_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} kspd_1 != 0;
    assume kspd_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} kspd_1 != 0;
    assume kspd_1 > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} kspd_1 != 0;
    assume kspd_1 > 0;
    goto L7;

  L7:
    assume {:nonnull} kspd_1 != 0;
    assume kspd_1 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} kspd_1 != 0;
    assume kspd_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} kspd_1 != 0;
    assume kspd_1 > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} kspd_1 != 0;
    assume kspd_1 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    goto L1;

  anon10_Then:
    goto L1;

  anon11_Then:
    goto L7;

  anon9_Then:
    goto L7;
}



procedure {:origName "sdv_hash_61407646"} sdv_hash_61407646(actual_s_2: int) returns (Tmp_920: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_61407646"} sdv_hash_61407646(actual_s_2: int) returns (Tmp_920: int)
{
  var {:scalar} s_2: int;

  anon0:
    s_2 := actual_s_2;
    call {:si_unique_call 1661} Tmp_920 := ExAllocatePoolWithTag(1, s_2, 541283905);
    return;
}



procedure {:origName "sdv_hash_434855337"} sdv_hash_434855337(actual_this_28: int, actual_Opc_1: int) returns (Tmp_922: int);
  free ensures {:va_keep} Tmp_922 == actual_this_28;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_434855337"} sdv_hash_434855337(actual_this_28: int, actual_Opc_1: int) returns (Tmp_922: int)
{
  var {:pointer} this_28: int;
  var {:scalar} Opc_1: int;

  anon0:
    this_28 := actual_this_28;
    Opc_1 := actual_Opc_1;
    assume {:nonnull} this_28 != 0;
    assume this_28 > 0;
    Tmp_922 := this_28;
    return;
}



procedure {:origName "sdv_hash_1058931133_sdv_special_CTOR"} sdv_hash_1058931133_sdv_special_CTOR(actual_this_29: int, actual_Parent: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_1058931133_sdv_special_CTOR"} sdv_hash_1058931133_sdv_special_CTOR(actual_this_29: int, actual_Parent: int)
{
  var {:pointer} this_29: int;
  var {:pointer} Parent: int;
  var vslice_dummy_var_297: int;

  anon0:
    call {:si_unique_call 1662} vslice_dummy_var_297 := __HAVOC_malloc(4);
    this_29 := actual_this_29;
    Parent := actual_Parent;
    assume {:nonnull} this_29 != 0;
    assume this_29 > 0;
    call {:si_unique_call 1663} sdv_hash_1046774778_sdv_special_CTOR(m_Irp_CAvSyncIrp(this_29), Parent);
    return;
}



procedure {:origName "sdv_hash_859452142"} sdv_hash_859452142(actual_this_30: int, actual_plugnumber: int) returns (Tmp_926: int);
  free ensures {:va_keep} Tmp_926 == actual_this_30;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_859452142"} sdv_hash_859452142(actual_this_30: int, actual_plugnumber: int) returns (Tmp_926: int)
{
  var {:pointer} this_30: int;
  var {:scalar} plugnumber: int;

  anon0:
    this_30 := actual_this_30;
    plugnumber := actual_plugnumber;
    assume {:nonnull} this_30 != 0;
    assume this_30 > 0;
    Tmp_926 := this_30;
    return;
}



procedure {:origName "sdv_hash_986172016"} sdv_hash_986172016(actual_this_31: int, actual_sua_3: int) returns (Tmp_928: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_928 == 1 || Tmp_928 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_986172016"} sdv_hash_986172016(actual_this_31: int, actual_sua_3: int) returns (Tmp_928: int)
{
  var {:pointer} this_31: int;
  var {:pointer} sua_3: int;
  var vslice_dummy_var_2703: int;

  anon0:
    this_31 := actual_this_31;
    sua_3 := actual_sua_3;
    assume {:nonnull} sua_3 != 0;
    assume sua_3 > 0;
    havoc vslice_dummy_var_2703;
    call {:si_unique_call 1664} Tmp_928 := sdv_hash_405508819(this_31, vslice_dummy_var_2703);
    return;
}



procedure {:origName "sdv_hash_454706939"} sdv_hash_454706939(actual_this_32: int) returns (Tmp_930: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_454706939"} sdv_hash_454706939(actual_this_32: int) returns (Tmp_930: int)
{
  var {:pointer} this_32: int;

  anon0:
    this_32 := actual_this_32;
    assume {:nonnull} this_32 != 0;
    assume this_32 > 0;
    havoc Tmp_930;
    return;
}



procedure {:origName "sdv_hash_322187731"} sdv_hash_322187731(actual_this_33: int) returns (Tmp_932: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_322187731"} sdv_hash_322187731(actual_this_33: int) returns (Tmp_932: int)
{
  var {:pointer} Tmp_934: int;
  var {:pointer} this_33: int;

  anon0:
    this_33 := actual_this_33;
    assume {:nonnull} this_33 != 0;
    assume this_33 > 0;
    havoc Tmp_934;
    assume {:nonnull} Tmp_934 != 0;
    assume Tmp_934 > 0;
    havoc Tmp_932;
    return;
}



procedure {:origName "sdv_hash_13414602"} sdv_hash_13414602(actual_this_34: int, actual_sua_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_13414602"} sdv_hash_13414602(actual_this_34: int, actual_sua_4: int)
{
  var {:pointer} this_34: int;
  var {:pointer} sua_4: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;

  anon0:
    call {:si_unique_call 1665} vslice_dummy_var_298 := __HAVOC_malloc(4);
    this_34 := actual_this_34;
    sua_4 := actual_sua_4;
    call {:si_unique_call 1666} vslice_dummy_var_299 := sdv_hash_332631937(this_34, 32, sua_4);
    return;
}



procedure {:origName "sdv_hash_114568688"} sdv_hash_114568688(actual_this_35: int, actual_s_p_e_c_i_a_l_7: int) returns (Tmp_937: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_937 == actual_this_35;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_114568688"} sdv_hash_114568688(actual_this_35: int, actual_s_p_e_c_i_a_l_7: int) returns (Tmp_937: int)
{
  var {:pointer} this_35: int;
  var {:scalar} s_p_e_c_i_a_l_7: int;

  anon0:
    this_35 := actual_this_35;
    s_p_e_c_i_a_l_7 := actual_s_p_e_c_i_a_l_7;
    call {:si_unique_call 1667} sdv_hash_757443034_sdv_special_DTOR(this_35);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} BAND(s_p_e_c_i_a_l_7, 1) != 0;
    call {:si_unique_call 1668} sdv_hash_648063079(this_35);
    goto L7;

  L7:
    Tmp_937 := this_35;
    return;

  anon3_Then:
    assume {:partition} BAND(s_p_e_c_i_a_l_7, 1) == 0;
    goto L7;
}



procedure {:origName "sdv_hash_648063079"} sdv_hash_648063079(actual_p_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_648063079"} sdv_hash_648063079(actual_p_5: int)
{
  var vslice_dummy_var_300: int;

  anon0:
    call {:si_unique_call 1669} vslice_dummy_var_300 := __HAVOC_malloc(4);
    call {:si_unique_call 1670} sdv_ExFreePool(0);
    return;
}



procedure {:origName "sdv_hash_479992756_sdv_special_CTOR"} sdv_hash_479992756_sdv_special_CTOR(actual_this_36: int, actual_PdoExtension_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_479992756_sdv_special_CTOR"} sdv_hash_479992756_sdv_special_CTOR(actual_this_36: int, actual_PdoExtension_10: int)
{
  var {:pointer} this_36: int;
  var {:pointer} PdoExtension_10: int;
  var vslice_dummy_var_301: int;

  anon0:
    call {:si_unique_call 1671} vslice_dummy_var_301 := __HAVOC_malloc(4);
    this_36 := actual_this_36;
    PdoExtension_10 := actual_PdoExtension_10;
    assume {:nonnull} this_36 != 0;
    assume this_36 > 0;
    assume {:nonnull} this_36 != 0;
    assume this_36 > 0;
    assume {:nonnull} this_36 != 0;
    assume this_36 > 0;
    assume {:nonnull} this_36 != 0;
    assume this_36 > 0;
    assume {:nonnull} this_36 != 0;
    assume this_36 > 0;
    return;
}



procedure {:origName "sdv_hash_134711981_sdv_special_DTOR"} sdv_hash_134711981_sdv_special_DTOR(actual_this_37: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_134711981_sdv_special_DTOR"} sdv_hash_134711981_sdv_special_DTOR(actual_this_37: int)
{
  var {:pointer} this_37: int;
  var vslice_dummy_var_302: int;

  anon0:
    call {:si_unique_call 1672} vslice_dummy_var_302 := __HAVOC_malloc(4);
    this_37 := actual_this_37;
    assume {:nonnull} this_37 != 0;
    assume this_37 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1673} IoFreeIrp(0);
    goto L1;

  L1:
    return;

  anon3_Then:
    goto L1;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_303: int;

  anon0:
    call {:si_unique_call 1674} vslice_dummy_var_303 := __HAVOC_malloc(4);
    assume ClfsNullRecord_2 == 0;
    assume ClfsDataRecord_2 == 1;
    assume ClfsRestartRecord_2 == 2;
    assume ClfsClientRecord_2 == 3;
    assume ClsContainerInitializing_2 == 1;
    assume ClsContainerInactive_2 == 2;
    assume ClsContainerActive_2 == 4;
    assume ClsContainerActivePendingDelete_2 == 8;
    assume ClsContainerPendingArchive_2 == 16;
    assume ClsContainerPendingArchiveAndDelete_2 == 32;
    assume ClfsContainerInitializing_2 == 1;
    assume ClfsContainerInactive_2 == 2;
    assume ClfsContainerActive_2 == 4;
    assume ClfsContainerActivePendingDelete_2 == 8;
    assume ClfsContainerPendingArchive_2 == 16;
    assume ClfsContainerPendingArchiveAndDelete_2 == 32;
    assume CLFS_MAX_CONTAINER_INFO_2 == 256;
    assume CLFS_SCAN_INIT_2 == 1;
    assume CLFS_SCAN_FORWARD_2 == 2;
    assume CLFS_SCAN_BACKWARD_2 == 4;
    assume CLFS_SCAN_CLOSE_2 == 8;
    assume CLFS_SCAN_INITIALIZED_2 == 16;
    assume CLFS_SCAN_BUFFERED_2 == 32;
    assume UnitAddr_1 == 255;
    return;
}



procedure {:origName "sdv_hash_390207871"} sdv_hash_390207871(actual_this_38: int) returns (Tmp_947: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_390207871"} sdv_hash_390207871(actual_this_38: int) returns (Tmp_947: int)
{
  var {:pointer} this_38: int;

  anon0:
    this_38 := actual_this_38;
    assume {:nonnull} this_38 != 0;
    assume this_38 > 0;
    havoc Tmp_947;
    return;
}



procedure {:origName "sdv_hash_802132520"} sdv_hash_802132520(actual_AvcIrb_11: int, actual_srcAddr_5: int, actual_srcPlug_5: int, actual_OutputIrb_3: int) returns (Tmp_949: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_949 == -1073741811 || Tmp_949 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_802132520"} sdv_hash_802132520(actual_AvcIrb_11: int, actual_srcAddr_5: int, actual_srcPlug_5: int, actual_OutputIrb_3: int) returns (Tmp_949: int)
{
  var {:scalar} Tmp_951: int;
  var {:scalar} sdv_671: int;
  var {:scalar} Tmp_952: int;
  var {:scalar} Tmp_953: int;
  var {:pointer} Tmp_954: int;
  var {:pointer} sdv_672: int;
  var {:scalar} Tmp_955: int;
  var {:pointer} sdv_673: int;
  var {:scalar} Tmp_956: int;
  var {:scalar} Tmp_957: int;
  var {:scalar} idx_16: int;
  var {:pointer} Ops_1: int;
  var {:scalar} Tmp_958: int;
  var {:scalar} Opc_2: int;
  var {:pointer} AvcIrb_11: int;
  var {:pointer} srcAddr_5: int;
  var {:scalar} srcPlug_5: int;
  var {:pointer} OutputIrb_3: int;
  var vslice_dummy_var_304: int;

  anon0:
    AvcIrb_11 := actual_AvcIrb_11;
    srcAddr_5 := actual_srcAddr_5;
    srcPlug_5 := actual_srcPlug_5;
    OutputIrb_3 := actual_OutputIrb_3;
    call {:si_unique_call 1675} Ops_1 := __HAVOC_malloc(2036);
    Opc_2 := 36;
    assume {:nonnull} Ops_1 != 0;
    assume Ops_1 > 0;
    idx_16 := 1;
    Tmp_952 := idx_16;
    Tmp_954 := Ops_1 + Tmp_952 * 4;
    call {:si_unique_call 1676} sdv_hash_505774121(srcAddr_5, Tmp_954);
    call {:si_unique_call 1677} sdv_671 := sdv_hash_330049800(srcAddr_5);
    idx_16 := idx_16 + sdv_671;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} idx_16 >= 509;
    Tmp_949 := -1073741811;
    goto L1;

  L1:
    return;

  anon7_Then:
    assume {:partition} 509 > idx_16;
    Tmp_955 := idx_16;
    idx_16 := idx_16 + 1;
    Tmp_957 := Tmp_955;
    assume {:nonnull} Ops_1 != 0;
    assume Ops_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} idx_16 >= 509;
    Tmp_949 := -1073741811;
    goto L1;

  anon8_Then:
    assume {:partition} 509 > idx_16;
    Tmp_956 := idx_16;
    idx_16 := idx_16 + 1;
    Tmp_958 := Tmp_956;
    assume {:nonnull} Ops_1 != 0;
    assume Ops_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} idx_16 >= 509;
    Tmp_949 := -1073741811;
    goto L1;

  anon9_Then:
    assume {:partition} 509 > idx_16;
    Tmp_953 := idx_16;
    idx_16 := idx_16 + 1;
    Tmp_951 := Tmp_953;
    assume {:nonnull} Ops_1 != 0;
    assume Ops_1 > 0;
    call {:si_unique_call 1678} sdv_672 := sdv_hash_434855337(AvcIrb_11, Opc_2);
    call {:si_unique_call 1679} sdv_673 := sdv_hash_861280784(sdv_672, idx_16, Ops_1);
    call {:si_unique_call 1680} vslice_dummy_var_304 := sdv_hash_282790223(OutputIrb_3, sdv_673);
    Tmp_949 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_282790223"} sdv_hash_282790223(actual_this_39: int, actual_s_p_e_c_i_a_l_8: int) returns (Tmp_959: int);
  free ensures {:va_keep} Tmp_959 == actual_this_39;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_282790223"} sdv_hash_282790223(actual_this_39: int, actual_s_p_e_c_i_a_l_8: int) returns (Tmp_959: int)
{
  var {:pointer} this_39: int;

  anon0:
    this_39 := actual_this_39;
    Tmp_959 := this_39;
    return;
}



procedure {:origName "ConnectionMgrPinCount"} ConnectionMgrPinCount(actual_PdoExtension_11: int, actual_Data: int) returns (Tmp_961: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ConnectionMgrPinCount"} ConnectionMgrPinCount(actual_PdoExtension_11: int, actual_Data: int) returns (Tmp_961: int)
{
  var {:pointer} MgrInstance: int;
  var {:pointer} Tmp_963: int;
  var {:scalar} ntStatus_53: int;
  var {:pointer} PdoExtension_11: int;
  var {:pointer} Data: int;
  var boogieTmp: int;

  anon0:
    PdoExtension_11 := actual_PdoExtension_11;
    Data := actual_Data;
    call {:si_unique_call 1681} sdv_do_paged_code_check();
    call {:si_unique_call 1682} ntStatus_53 := CreateConnectionMgr(PdoExtension_11);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ntStatus_53 == 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    havoc Tmp_963;
    assume {:nonnull} Tmp_963 != 0;
    assume Tmp_963 > 0;
    havoc MgrInstance;
    assume {:nonnull} Data != 0;
    assume Data > 0;
    call {:si_unique_call 1683} boogieTmp := sdv_hash_454706939(MgrInstance);
    goto L13;

  L13:
    Tmp_961 := ntStatus_53;
    return;

  anon3_Then:
    assume {:partition} ntStatus_53 != 0;
    goto L13;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_1: int, actual_Entry_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_1: int, actual_Entry_13: int)
{
  var {:pointer} NextEntry: int;
  var {:pointer} ListHead_1: int;
  var {:pointer} Entry_13: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_2704: int;

  anon0:
    call {:si_unique_call 1684} vslice_dummy_var_305 := __HAVOC_malloc(4);
    ListHead_1 := actual_ListHead_1;
    Entry_13 := actual_Entry_13;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    havoc NextEntry;
    assume {:nonnull} Entry_13 != 0;
    assume Entry_13 > 0;
    assume {:nonnull} Entry_13 != 0;
    assume Entry_13 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    havoc vslice_dummy_var_2704;
    call {:si_unique_call 1685} FatalListEntryError(ListHead_1, NextEntry, vslice_dummy_var_2704);
    goto L8;

  L8:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    return;

  anon3_Then:
    goto L8;
}



procedure {:origName "sdv_hash_771437190"} sdv_hash_771437190(actual_p_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_771437190"} sdv_hash_771437190(actual_p_6: int)
{
  var vslice_dummy_var_306: int;

  anon0:
    call {:si_unique_call 1686} vslice_dummy_var_306 := __HAVOC_malloc(4);
    call {:si_unique_call 1687} sdv_ExFreePool(0);
    return;
}



procedure {:origName "sdv_hash_610031591"} sdv_hash_610031591(actual_s_3: int) returns (Tmp_968: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_610031591"} sdv_hash_610031591(actual_s_3: int) returns (Tmp_968: int)
{
  var {:pointer} p_7: int;
  var {:scalar} s_3: int;

  anon0:
    s_3 := actual_s_3;
    call {:si_unique_call 1688} p_7 := ExAllocatePoolWithTag(1, s_3, 541283905);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} p_7 != 0;
    call {:si_unique_call 1689} sdv_RtlZeroMemory(0, s_3);
    goto L9;

  L9:
    Tmp_968 := p_7;
    return;

  anon3_Then:
    assume {:partition} p_7 == 0;
    goto L9;
}



procedure {:origName "sdv_hash_507802687"} sdv_hash_507802687(actual_this_40: int, actual_Addr: int) returns (Tmp_970: int);
  free ensures {:va_keep} Tmp_970 == actual_this_40;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_507802687"} sdv_hash_507802687(actual_this_40: int, actual_Addr: int) returns (Tmp_970: int)
{
  var {:scalar} Tmp_971: int;
  var {:pointer} this_40: int;
  var {:pointer} Addr: int;

  anon0:
    this_40 := actual_this_40;
    Addr := actual_Addr;
    assume {:nonnull} this_40 != 0;
    assume this_40 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Addr != 0;
    Tmp_971 := 1;
    goto L7;

  L7:
    assume {:nonnull} this_40 != 0;
    assume this_40 > 0;
    Tmp_970 := this_40;
    return;

  anon3_Then:
    assume {:partition} Addr == 0;
    Tmp_971 := 0;
    goto L7;
}



procedure {:origName "sdv_hash_798100910"} sdv_hash_798100910(actual_this_41: int) returns (Tmp_973: int);
  free ensures {:va_keep} Tmp_973 == actual_this_41;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_798100910"} sdv_hash_798100910(actual_this_41: int) returns (Tmp_973: int)
{
  var {:pointer} this_41: int;

  anon0:
    this_41 := actual_this_41;
    assume {:nonnull} this_41 != 0;
    assume this_41 > 0;
    Tmp_973 := this_41;
    return;
}



procedure {:origName "ConnectionMgrGetExtPlugCounts"} ConnectionMgrGetExtPlugCounts(actual_PdoExtension_12: int, actual_Data_1: int) returns (Tmp_975: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ConnectionMgrGetExtPlugCounts"} ConnectionMgrGetExtPlugCounts(actual_PdoExtension_12: int, actual_Data_1: int) returns (Tmp_975: int)
{
  var {:pointer} MgrInstance_1: int;
  var {:pointer} Tmp_977: int;
  var {:scalar} ntStatus_54: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Data_1: int;
  var boogieTmp: int;

  anon0:
    PdoExtension_12 := actual_PdoExtension_12;
    Data_1 := actual_Data_1;
    call {:si_unique_call 1690} sdv_do_paged_code_check();
    call {:si_unique_call 1691} ntStatus_54 := CreateConnectionMgr(PdoExtension_12);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ntStatus_54 == 0;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_977;
    assume {:nonnull} Tmp_977 != 0;
    assume Tmp_977 > 0;
    havoc MgrInstance_1;
    assume {:nonnull} Data_1 != 0;
    assume Data_1 > 0;
    call {:si_unique_call 1692} boogieTmp := sdv_hash_908374888(MgrInstance_1);
    assume {:nonnull} Data_1 != 0;
    assume Data_1 > 0;
    call {:si_unique_call 1693} boogieTmp := sdv_hash_607735012(MgrInstance_1);
    goto L13;

  L13:
    Tmp_975 := ntStatus_54;
    return;

  anon3_Then:
    assume {:partition} ntStatus_54 != 0;
    goto L13;
}



procedure {:origName "sdv_hash_850420247"} sdv_hash_850420247(actual_this_42: int) returns (Tmp_978: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_850420247"} sdv_hash_850420247(actual_this_42: int) returns (Tmp_978: int)
{
  var {:pointer} this_42: int;

  anon0:
    this_42 := actual_this_42;
    assume {:nonnull} this_42 != 0;
    assume this_42 > 0;
    havoc Tmp_978;
    return;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_2: int)
{
  var {:pointer} ListHead_2: int;
  var vslice_dummy_var_307: int;

  anon0:
    call {:si_unique_call 1694} vslice_dummy_var_307 := __HAVOC_malloc(4);
    ListHead_2 := actual_ListHead_2;
    assume {:nonnull} ListHead_2 != 0;
    assume ListHead_2 > 0;
    assume {:nonnull} ListHead_2 != 0;
    assume ListHead_2 > 0;
    return;
}



procedure {:origName "sdv_hash_575386943"} sdv_hash_575386943(actual_AvcIrb_12: int, actual_dstAddr_5: int, actual_dstPlug_5: int, actual_OutputIrb_4: int) returns (Tmp_982: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_982 == -1073741811 || Tmp_982 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_575386943"} sdv_hash_575386943(actual_AvcIrb_12: int, actual_dstAddr_5: int, actual_dstPlug_5: int, actual_OutputIrb_4: int) returns (Tmp_982: int)
{
  var {:pointer} Tmp_983: int;
  var {:scalar} Tmp_984: int;
  var {:scalar} Tmp_985: int;
  var {:scalar} Tmp_986: int;
  var {:scalar} sdv_681: int;
  var {:scalar} Tmp_987: int;
  var {:scalar} Tmp_988: int;
  var {:pointer} sdv_682: int;
  var {:scalar} Tmp_989: int;
  var {:pointer} sdv_683: int;
  var {:scalar} idx_17: int;
  var {:scalar} Tmp_991: int;
  var {:pointer} Ops_2: int;
  var {:scalar} Opc_3: int;
  var {:pointer} AvcIrb_12: int;
  var {:pointer} dstAddr_5: int;
  var {:scalar} dstPlug_5: int;
  var {:pointer} OutputIrb_4: int;
  var vslice_dummy_var_308: int;

  anon0:
    AvcIrb_12 := actual_AvcIrb_12;
    dstAddr_5 := actual_dstAddr_5;
    dstPlug_5 := actual_dstPlug_5;
    OutputIrb_4 := actual_OutputIrb_4;
    call {:si_unique_call 1695} Ops_2 := __HAVOC_malloc(2036);
    Opc_3 := 36;
    assume {:nonnull} Ops_2 != 0;
    assume Ops_2 > 0;
    idx_17 := 1;
    Tmp_989 := idx_17;
    idx_17 := idx_17 + 1;
    Tmp_986 := Tmp_989;
    assume {:nonnull} Ops_2 != 0;
    assume Ops_2 > 0;
    Tmp_991 := idx_17;
    idx_17 := idx_17 + 1;
    Tmp_987 := Tmp_991;
    assume {:nonnull} Ops_2 != 0;
    assume Ops_2 > 0;
    Tmp_988 := idx_17;
    Tmp_983 := Ops_2 + Tmp_988 * 4;
    call {:si_unique_call 1696} sdv_hash_505774121(dstAddr_5, Tmp_983);
    call {:si_unique_call 1697} sdv_681 := sdv_hash_330049800(dstAddr_5);
    idx_17 := idx_17 + sdv_681;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} idx_17 >= 509;
    Tmp_982 := -1073741811;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} 509 > idx_17;
    Tmp_985 := idx_17;
    idx_17 := idx_17 + 1;
    Tmp_984 := Tmp_985;
    assume {:nonnull} Ops_2 != 0;
    assume Ops_2 > 0;
    call {:si_unique_call 1698} sdv_682 := sdv_hash_434855337(AvcIrb_12, Opc_3);
    call {:si_unique_call 1699} sdv_683 := sdv_hash_861280784(sdv_682, idx_17, Ops_2);
    call {:si_unique_call 1700} vslice_dummy_var_308 := sdv_hash_282790223(OutputIrb_4, sdv_683);
    Tmp_982 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_672547288"} sdv_hash_672547288(actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int, actual_s_p_e_c_i_a_l_11: int, actual_s_p_e_c_i_a_l_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_672547288"} sdv_hash_672547288(actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int, actual_s_p_e_c_i_a_l_11: int, actual_s_p_e_c_i_a_l_12: int)
{
  var {:pointer} s_p_e_c_i_a_l_9: int;
  var {:scalar} s_p_e_c_i_a_l_11: int;
  var {:scalar} s_p_e_c_i_a_l_12: int;
  var vslice_dummy_var_309: int;

  anon0:
    call {:si_unique_call 1701} vslice_dummy_var_309 := __HAVOC_malloc(4);
    s_p_e_c_i_a_l_9 := actual_s_p_e_c_i_a_l_9;
    s_p_e_c_i_a_l_11 := actual_s_p_e_c_i_a_l_11;
    s_p_e_c_i_a_l_12 := actual_s_p_e_c_i_a_l_12;
    goto L4;

  L4:
    call {:si_unique_call 1702} s_p_e_c_i_a_l_11 := sdv_hash_672547288_loop_L4(s_p_e_c_i_a_l_9, s_p_e_c_i_a_l_11, s_p_e_c_i_a_l_12);
    goto L4_last;

  L4_last:
    s_p_e_c_i_a_l_11 := s_p_e_c_i_a_l_11 - 1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} s_p_e_c_i_a_l_11 >= 0;
    assume {:IndirectCall} true;
    assume s_p_e_c_i_a_l_12 == li2bplFunctionConstant374;
    call {:si_unique_call 1703} sdv_hash_330311584_sdv_special_DTOR(s_p_e_c_i_a_l_9);
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    assume false;
    return;

  anon3_Then:
    assume {:partition} 0 > s_p_e_c_i_a_l_11;
    return;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_3: int) returns (Tmp_994: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_3: int) returns (Tmp_994: int)
{
  var {:pointer} NextEntry_1: int;
  var {:pointer} Entry_14: int;
  var {:pointer} ListHead_3: int;

  anon0:
    ListHead_3 := actual_ListHead_3;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    havoc Entry_14;
    assume {:nonnull} Entry_14 != 0;
    assume Entry_14 > 0;
    havoc NextEntry_1;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L9;

  L9:
    call {:si_unique_call 1704} FatalListEntryError(ListHead_3, Entry_14, NextEntry_1);
    goto L12;

  L12:
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    assume {:nonnull} NextEntry_1 != 0;
    assume NextEntry_1 > 0;
    Tmp_994 := Entry_14;
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L12;

  anon5_Then:
    goto L9;
}



procedure {:origName "sdv_hash_774347054"} sdv_hash_774347054(actual_this_43: int) returns (Tmp_996: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_774347054"} sdv_hash_774347054(actual_this_43: int) returns (Tmp_996: int)
{
  var {:pointer} this_43: int;

  anon0:
    this_43 := actual_this_43;
    assume {:nonnull} this_43 != 0;
    assume this_43 > 0;
    havoc Tmp_996;
    return;
}



procedure {:origName "ConnectionMgrAcquire"} ConnectionMgrAcquire(actual_PdoExtension_13: int, actual_Data_2: int) returns (Tmp_998: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ConnectionMgrAcquire"} ConnectionMgrAcquire(actual_PdoExtension_13: int, actual_Data_2: int) returns (Tmp_998: int)
{
  var {:pointer} MgrInstance_2: int;
  var {:scalar} ntStatus_55: int;
  var {:pointer} Tmp_1000: int;
  var {:pointer} PdoExtension_13: int;
  var {:pointer} Data_2: int;
  var vslice_dummy_var_2705: int;

  anon0:
    PdoExtension_13 := actual_PdoExtension_13;
    Data_2 := actual_Data_2;
    call {:si_unique_call 1705} sdv_do_paged_code_check();
    call {:si_unique_call 1706} ntStatus_55 := CreateConnectionMgr(PdoExtension_13);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ntStatus_55 == 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_1000;
    assume {:nonnull} Tmp_1000 != 0;
    assume Tmp_1000 > 0;
    havoc MgrInstance_2;
    assume {:nonnull} Data_2 != 0;
    assume Data_2 > 0;
    havoc vslice_dummy_var_2705;
    call {:si_unique_call 1707} ntStatus_55 := sdv_hash_723703181(MgrInstance_2, vslice_dummy_var_2705);
    goto L13;

  L13:
    Tmp_998 := ntStatus_55;
    return;

  anon3_Then:
    assume {:partition} ntStatus_55 != 0;
    goto L13;
}



procedure {:origName "ConnectionMgrGetConnectInfo"} ConnectionMgrGetConnectInfo(actual_PdoExtension_14: int, actual_Data_3: int) returns (Tmp_1001: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ConnectionMgrGetConnectInfo"} ConnectionMgrGetConnectInfo(actual_PdoExtension_14: int, actual_Data_3: int) returns (Tmp_1001: int)
{
  var {:pointer} MgrInstance_3: int;
  var {:scalar} ntStatus_56: int;
  var {:pointer} Tmp_1003: int;
  var {:pointer} PdoExtension_14: int;
  var {:pointer} Data_3: int;
  var vslice_dummy_var_2706: int;

  anon0:
    PdoExtension_14 := actual_PdoExtension_14;
    Data_3 := actual_Data_3;
    call {:si_unique_call 1708} sdv_do_paged_code_check();
    call {:si_unique_call 1709} ntStatus_56 := CreateConnectionMgr(PdoExtension_14);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ntStatus_56 == 0;
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    havoc Tmp_1003;
    assume {:nonnull} Tmp_1003 != 0;
    assume Tmp_1003 > 0;
    havoc MgrInstance_3;
    assume {:nonnull} Data_3 != 0;
    assume Data_3 > 0;
    havoc vslice_dummy_var_2706;
    call {:si_unique_call 1710} ntStatus_56 := sdv_hash_439640722(MgrInstance_3, vslice_dummy_var_2706, ConnectInfo__AVC_PRECONNECT_INFO(Data_3));
    goto L13;

  L13:
    Tmp_1001 := ntStatus_56;
    return;

  anon3_Then:
    assume {:partition} ntStatus_56 != 0;
    goto L13;
}



procedure {:origName "sdv_hash_64962389"} sdv_hash_64962389(actual_s_4: int) returns (Tmp_1004: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_64962389"} sdv_hash_64962389(actual_s_4: int) returns (Tmp_1004: int)
{
  var {:scalar} s_4: int;

  anon0:
    s_4 := actual_s_4;
    call {:si_unique_call 1711} Tmp_1004 := ExAllocatePoolWithTag(512, s_4, 541283905);
    return;
}



procedure {:origName "sdv_hash_103855929"} sdv_hash_103855929(actual_this_44: int) returns (Tmp_1006: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_103855929"} sdv_hash_103855929(actual_this_44: int) returns (Tmp_1006: int)
{
  var {:pointer} this_44: int;

  anon0:
    this_44 := actual_this_44;
    assume {:nonnull} this_44 != 0;
    assume this_44 > 0;
    havoc Tmp_1006;
    return;
}



procedure {:origName "sdv_hash_948020419_sdv_special_CTOR"} sdv_hash_948020419_sdv_special_CTOR(actual_this_45: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_948020419_sdv_special_CTOR"} sdv_hash_948020419_sdv_special_CTOR(actual_this_45: int)
{
  var {:pointer} this_45: int;
  var vslice_dummy_var_310: int;

  anon0:
    call {:si_unique_call 1712} vslice_dummy_var_310 := __HAVOC_malloc(4);
    this_45 := actual_this_45;
    assume {:nonnull} this_45 != 0;
    assume this_45 > 0;
    return;
}



procedure {:origName "CreateConnectionMgr"} CreateConnectionMgr(actual_PdoExtension_15: int) returns (Tmp_1010: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "CreateConnectionMgr"} CreateConnectionMgr(actual_PdoExtension_15: int) returns (Tmp_1010: int)
{
  var {:pointer} Tmp_1011: int;
  var {:pointer} Tmp_1012: int;
  var {:pointer} Tmp_1013: int;
  var {:pointer} sdv_690: int;
  var {:pointer} Tmp_1014: int;
  var {:pointer} MgrInstance_4: int;
  var {:scalar} ntStatus_57: int;
  var {:pointer} Tmp_1016: int;
  var {:pointer} PdoExtension_15: int;
  var vslice_dummy_var_311: int;

  anon0:
    PdoExtension_15 := actual_PdoExtension_15;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_1011;
    assume {:nonnull} Tmp_1011 != 0;
    assume Tmp_1011 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1010 := 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    call {:si_unique_call 1713} sdv_do_paged_code_check();
    ntStatus_57 := 0;
    call {:si_unique_call 1714} sdv_690 := sdv_hash_610031591(20);
    Tmp_1012 := sdv_690;
    assume {:nonnull} Tmp_1012 != 0;
    assume Tmp_1012 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Tmp_1012 != 0;
    call {:si_unique_call 1715} sdv_hash_479992756_sdv_special_CTOR(Tmp_1012, PdoExtension_15);
    goto L16;

  L16:
    MgrInstance_4 := Tmp_1012;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} MgrInstance_4 != 0;
    call {:si_unique_call 1716} ntStatus_57 := sdv_hash_890537390(MgrInstance_4);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} ntStatus_57 != 0;
    Tmp_1014 := MgrInstance_4;
    Tmp_1016 := Tmp_1014;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Tmp_1016 != 0;
    call {:si_unique_call 1717} vslice_dummy_var_311 := sdv_hash_114568688(Tmp_1016, 1);
    goto L31;

  L31:
    Tmp_1010 := ntStatus_57;
    goto L1;

  anon15_Then:
    assume {:partition} Tmp_1016 == 0;
    goto L31;

  anon11_Then:
    assume {:partition} ntStatus_57 == 0;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_1013;
    assume {:nonnull} Tmp_1013 != 0;
    assume Tmp_1013 > 0;
    goto L31;

  anon14_Then:
    assume {:partition} MgrInstance_4 == 0;
    ntStatus_57 := -1073741670;
    goto L31;

  anon13_Then:
    assume {:partition} Tmp_1012 == 0;
    goto L16;
}



procedure {:origName "sdv_hash_842212107"} sdv_hash_842212107(actual_AvcIrb_13: int, actual_srcAddr_6: int, actual_srcPlug_6: int, actual_dstAddr_6: int, actual_dstPlug_6: int, actual_OutputIrb_5: int) returns (Tmp_1017: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1017 == -1073741811 || Tmp_1017 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_842212107"} sdv_hash_842212107(actual_AvcIrb_13: int, actual_srcAddr_6: int, actual_srcPlug_6: int, actual_dstAddr_6: int, actual_dstPlug_6: int, actual_OutputIrb_5: int) returns (Tmp_1017: int)
{
  var {:scalar} Tmp_1018: int;
  var {:scalar} Tmp_1019: int;
  var {:scalar} sdv_693: int;
  var {:pointer} Tmp_1020: int;
  var {:pointer} Tmp_1021: int;
  var {:scalar} Tmp_1022: int;
  var {:scalar} sdv_694: int;
  var {:scalar} Tmp_1023: int;
  var {:pointer} sdv_695: int;
  var {:pointer} sdv_697: int;
  var {:scalar} Tmp_1024: int;
  var {:scalar} idx_18: int;
  var {:pointer} Ops_3: int;
  var {:scalar} Tmp_1026: int;
  var {:scalar} Opc_4: int;
  var {:pointer} AvcIrb_13: int;
  var {:pointer} srcAddr_6: int;
  var {:scalar} srcPlug_6: int;
  var {:pointer} dstAddr_6: int;
  var {:scalar} dstPlug_6: int;
  var {:pointer} OutputIrb_5: int;
  var vslice_dummy_var_312: int;

  anon0:
    AvcIrb_13 := actual_AvcIrb_13;
    srcAddr_6 := actual_srcAddr_6;
    srcPlug_6 := actual_srcPlug_6;
    dstAddr_6 := actual_dstAddr_6;
    dstPlug_6 := actual_dstPlug_6;
    OutputIrb_5 := actual_OutputIrb_5;
    call {:si_unique_call 1718} Ops_3 := __HAVOC_malloc(2036);
    Opc_4 := 36;
    assume {:nonnull} Ops_3 != 0;
    assume Ops_3 > 0;
    idx_18 := 1;
    Tmp_1019 := idx_18;
    Tmp_1021 := Ops_3 + Tmp_1019 * 4;
    call {:si_unique_call 1719} sdv_hash_505774121(srcAddr_6, Tmp_1021);
    call {:si_unique_call 1720} sdv_693 := sdv_hash_330049800(srcAddr_6);
    idx_18 := idx_18 + sdv_693;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} idx_18 >= 509;
    Tmp_1017 := -1073741811;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} 509 > idx_18;
    Tmp_1022 := idx_18;
    idx_18 := idx_18 + 1;
    Tmp_1026 := Tmp_1022;
    assume {:nonnull} Ops_3 != 0;
    assume Ops_3 > 0;
    Tmp_1018 := idx_18;
    Tmp_1020 := Ops_3 + Tmp_1018 * 4;
    call {:si_unique_call 1721} sdv_hash_505774121(dstAddr_6, Tmp_1020);
    call {:si_unique_call 1722} sdv_694 := sdv_hash_330049800(dstAddr_6);
    idx_18 := idx_18 + sdv_694;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} idx_18 >= 509;
    Tmp_1017 := -1073741811;
    goto L1;

  anon6_Then:
    assume {:partition} 509 > idx_18;
    Tmp_1023 := idx_18;
    idx_18 := idx_18 + 1;
    Tmp_1024 := Tmp_1023;
    assume {:nonnull} Ops_3 != 0;
    assume Ops_3 > 0;
    call {:si_unique_call 1723} sdv_695 := sdv_hash_434855337(AvcIrb_13, Opc_4);
    call {:si_unique_call 1724} sdv_697 := sdv_hash_861280784(sdv_695, idx_18, Ops_3);
    call {:si_unique_call 1725} vslice_dummy_var_312 := sdv_hash_282790223(OutputIrb_5, sdv_697);
    Tmp_1017 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_861280784"} sdv_hash_861280784(actual_this_46: int, actual_cOps: int, actual_Ops_4: int) returns (Tmp_1027: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1027 == actual_this_46;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_861280784"} sdv_hash_861280784(actual_this_46: int, actual_cOps: int, actual_Ops_4: int) returns (Tmp_1027: int)
{
  var {:scalar} Tmp_1028: int;
  var {:pointer} this_46: int;
  var {:scalar} cOps: int;

  anon0:
    this_46 := actual_this_46;
    cOps := actual_cOps;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} cOps > 509;
    Tmp_1028 := 509;
    goto L6;

  L6:
    cOps := Tmp_1028;
    assume {:nonnull} this_46 != 0;
    assume this_46 > 0;
    call {:si_unique_call 1726} sdv_RtlCopyMemory(0, 0, cOps);
    Tmp_1027 := this_46;
    return;

  anon3_Then:
    assume {:partition} 509 >= cOps;
    Tmp_1028 := cOps;
    goto L6;
}



procedure {:origName "ConnectionMgrSetConnectInfo"} ConnectionMgrSetConnectInfo(actual_PdoExtension_16: int, actual_Data_4: int) returns (Tmp_1030: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ConnectionMgrSetConnectInfo"} ConnectionMgrSetConnectInfo(actual_PdoExtension_16: int, actual_Data_4: int) returns (Tmp_1030: int)
{
  var {:pointer} Tmp_1031: int;
  var {:pointer} MgrInstance_5: int;
  var {:scalar} ntStatus_58: int;
  var {:pointer} PdoExtension_16: int;
  var {:pointer} Data_4: int;
  var vslice_dummy_var_2707: int;

  anon0:
    PdoExtension_16 := actual_PdoExtension_16;
    Data_4 := actual_Data_4;
    call {:si_unique_call 1727} sdv_do_paged_code_check();
    call {:si_unique_call 1728} ntStatus_58 := CreateConnectionMgr(PdoExtension_16);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ntStatus_58 == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc Tmp_1031;
    assume {:nonnull} Tmp_1031 != 0;
    assume Tmp_1031 > 0;
    havoc MgrInstance_5;
    assume {:nonnull} Data_4 != 0;
    assume Data_4 > 0;
    havoc vslice_dummy_var_2707;
    call {:si_unique_call 1729} ntStatus_58 := sdv_hash_526192348(MgrInstance_5, vslice_dummy_var_2707, ConnectInfo__AVC_SETCONNECT_INFO(Data_4));
    goto L13;

  L13:
    Tmp_1030 := ntStatus_58;
    return;

  anon3_Then:
    assume {:partition} ntStatus_58 != 0;
    goto L13;
}



procedure {:origName "sdv_hash_648551832_sdv_special_DTOR"} sdv_hash_648551832_sdv_special_DTOR(actual_this_47: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_648551832_sdv_special_DTOR"} sdv_hash_648551832_sdv_special_DTOR(actual_this_47: int)
{
  var vslice_dummy_var_313: int;

  anon0:
    call {:si_unique_call 1730} vslice_dummy_var_313 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ConnectionMgrClrConnectInfo"} ConnectionMgrClrConnectInfo(actual_PdoExtension_17: int, actual_Data_5: int) returns (Tmp_1035: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ConnectionMgrClrConnectInfo"} ConnectionMgrClrConnectInfo(actual_PdoExtension_17: int, actual_Data_5: int) returns (Tmp_1035: int)
{
  var {:pointer} MgrInstance_6: int;
  var {:pointer} Tmp_1036: int;
  var {:scalar} ntStatus_59: int;
  var {:pointer} PdoExtension_17: int;
  var {:pointer} Data_5: int;
  var vslice_dummy_var_2708: int;

  anon0:
    PdoExtension_17 := actual_PdoExtension_17;
    Data_5 := actual_Data_5;
    call {:si_unique_call 1731} sdv_do_paged_code_check();
    call {:si_unique_call 1732} ntStatus_59 := CreateConnectionMgr(PdoExtension_17);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ntStatus_59 == 0;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    havoc Tmp_1036;
    assume {:nonnull} Tmp_1036 != 0;
    assume Tmp_1036 > 0;
    havoc MgrInstance_6;
    assume {:nonnull} Data_5 != 0;
    assume Data_5 > 0;
    havoc vslice_dummy_var_2708;
    call {:si_unique_call 1733} ntStatus_59 := sdv_hash_517387733(MgrInstance_6, vslice_dummy_var_2708);
    goto L13;

  L13:
    Tmp_1035 := ntStatus_59;
    return;

  anon3_Then:
    assume {:partition} ntStatus_59 != 0;
    goto L13;
}



procedure {:origName "FatalListEntryError"} FatalListEntryError(actual_p1_1: int, actual_p2_1: int, actual_p3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "FatalListEntryError"} FatalListEntryError(actual_p1_1: int, actual_p2_1: int, actual_p3: int)
{
  var vslice_dummy_var_314: int;

  anon0:
    call {:si_unique_call 1734} vslice_dummy_var_314 := __HAVOC_malloc(4);
    call {:si_unique_call 1735} RtlFailFast(3);
    return;
}



procedure {:origName "ConnectionMgrPinDescriptor"} ConnectionMgrPinDescriptor(actual_PdoExtension_18: int, actual_Data_6: int) returns (Tmp_1040: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ConnectionMgrPinDescriptor"} ConnectionMgrPinDescriptor(actual_PdoExtension_18: int, actual_Data_6: int) returns (Tmp_1040: int)
{
  var {:pointer} Tmp_1042: int;
  var {:pointer} MgrInstance_7: int;
  var {:scalar} ntStatus_60: int;
  var {:pointer} PdoExtension_18: int;
  var {:pointer} Data_6: int;
  var vslice_dummy_var_2709: int;

  anon0:
    PdoExtension_18 := actual_PdoExtension_18;
    Data_6 := actual_Data_6;
    call {:si_unique_call 1736} sdv_do_paged_code_check();
    call {:si_unique_call 1737} ntStatus_60 := CreateConnectionMgr(PdoExtension_18);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ntStatus_60 == 0;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    havoc Tmp_1042;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    havoc MgrInstance_7;
    assume {:nonnull} Data_6 != 0;
    assume Data_6 > 0;
    havoc vslice_dummy_var_2709;
    call {:si_unique_call 1738} ntStatus_60 := sdv_hash_464001803(MgrInstance_7, vslice_dummy_var_2709, PinDescriptor__AVC_PIN_DESCRIPTOR(Data_6));
    goto L13;

  L13:
    Tmp_1040 := ntStatus_60;
    return;

  anon3_Then:
    assume {:partition} ntStatus_60 != 0;
    goto L13;
}



procedure {:origName "sdv_hash_684117243"} sdv_hash_684117243(actual_this_48: int) returns (Tmp_1043: int);
  free ensures {:va_keep} Tmp_1043 == m_AvcIrb_CAvcCommandIrb(actual_this_48);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_684117243"} sdv_hash_684117243(actual_this_48: int) returns (Tmp_1043: int)
{
  var {:pointer} this_48: int;

  anon0:
    this_48 := actual_this_48;
    assume {:nonnull} this_48 != 0;
    assume this_48 > 0;
    Tmp_1043 := m_AvcIrb_CAvcCommandIrb(this_48);
    return;
}



procedure {:origName "sdv_hash_117005741"} sdv_hash_117005741(actual_this_49: int) returns (Tmp_1045: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_117005741"} sdv_hash_117005741(actual_this_49: int) returns (Tmp_1045: int)
{
  var {:pointer} this_49: int;

  anon0:
    this_49 := actual_this_49;
    assume {:nonnull} this_49 != 0;
    assume this_49 > 0;
    havoc Tmp_1045;
    return;
}



procedure {:origName "sdv_hash_290170512"} sdv_hash_290170512(actual_p_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_290170512"} sdv_hash_290170512(actual_p_8: int)
{
  var vslice_dummy_var_315: int;

  anon0:
    call {:si_unique_call 1739} vslice_dummy_var_315 := __HAVOC_malloc(4);
    call {:si_unique_call 1740} sdv_ExFreePool(0);
    return;
}



procedure {:origName "sdv_hash_291696418"} sdv_hash_291696418(actual_this_50: int) returns (Tmp_1049: int);
  free ensures {:va_keep} Tmp_1049 == actual_this_50;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_291696418"} sdv_hash_291696418(actual_this_50: int) returns (Tmp_1049: int)
{
  var {:pointer} this_50: int;

  anon0:
    this_50 := actual_this_50;
    assume {:nonnull} this_50 != 0;
    assume this_50 > 0;
    Tmp_1049 := this_50;
    return;
}



procedure {:origName "sdv_hash_385729890"} sdv_hash_385729890(actual_this_51: int, actual_s_p_e_c_i_a_l_13: int) returns (Tmp_1051: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1051 == 0 || Tmp_1051 == actual_this_51;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_385729890"} sdv_hash_385729890(actual_this_51: int, actual_s_p_e_c_i_a_l_13: int) returns (Tmp_1051: int)
{
  var {:scalar} Tmp_1052: int;
  var {:pointer} Tmp_1054: int;
  var {:pointer} Tmp_1055: int;
  var {:pointer} this_51: int;
  var {:scalar} s_p_e_c_i_a_l_13: int;

  anon0:
    this_51 := actual_this_51;
    s_p_e_c_i_a_l_13 := actual_s_p_e_c_i_a_l_13;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} BAND(s_p_e_c_i_a_l_13, 2) != 0;
    Tmp_1054 := 0;
    assume {:nonnull} Tmp_1054 != 0;
    assume Tmp_1054 > 0;
    havoc Tmp_1052;
    call {:si_unique_call 1741} sdv_hash_672547288(this_51, 96, Tmp_1052, li2bplFunctionConstant374);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} BAND(s_p_e_c_i_a_l_13, 1) != 0;
    Tmp_1055 := 0;
    call {:si_unique_call 1742} sdv_hash_771437190(Tmp_1055);
    goto L12;

  L12:
    Tmp_1051 := 0;
    goto L1;

  L1:
    return;

  anon8_Then:
    assume {:partition} BAND(s_p_e_c_i_a_l_13, 1) == 0;
    goto L12;

  anon7_Then:
    assume {:partition} BAND(s_p_e_c_i_a_l_13, 2) == 0;
    call {:si_unique_call 1743} sdv_hash_330311584_sdv_special_DTOR(this_51);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(s_p_e_c_i_a_l_13, 1) != 0;
    call {:si_unique_call 1744} sdv_hash_290170512(this_51);
    goto L18;

  L18:
    Tmp_1051 := this_51;
    goto L1;

  anon9_Then:
    assume {:partition} BAND(s_p_e_c_i_a_l_13, 1) == 0;
    goto L18;
}



procedure {:origName "sdv_hash_757443034_sdv_special_DTOR"} sdv_hash_757443034_sdv_special_DTOR(actual_this_52: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_757443034_sdv_special_DTOR"} sdv_hash_757443034_sdv_special_DTOR(actual_this_52: int)
{
  var {:pointer} Tmp_1056: int;
  var {:pointer} Tmp_1057: int;
  var {:pointer} this_52: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;

  anon0:
    call {:si_unique_call 1745} vslice_dummy_var_316 := __HAVOC_malloc(4);
    this_52 := actual_this_52;
    assume {:nonnull} this_52 != 0;
    assume this_52 > 0;
    havoc Tmp_1057;
    Tmp_1056 := Tmp_1057;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Tmp_1056 != 0;
    call {:si_unique_call 1746} vslice_dummy_var_317 := sdv_hash_385729890(Tmp_1056, 3);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} Tmp_1056 == 0;
    goto L1;
}



procedure {:origName "sdv_hash_265040478"} sdv_hash_265040478(actual_this_53: int, actual_plugnumber_1: int) returns (Tmp_1060: int);
  free ensures {:va_keep} Tmp_1060 == actual_this_53;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_265040478"} sdv_hash_265040478(actual_this_53: int, actual_plugnumber_1: int) returns (Tmp_1060: int)
{
  var {:pointer} this_53: int;
  var {:scalar} plugnumber_1: int;

  anon0:
    this_53 := actual_this_53;
    plugnumber_1 := actual_plugnumber_1;
    assume {:nonnull} this_53 != 0;
    assume this_53 > 0;
    Tmp_1060 := this_53;
    return;
}



procedure {:origName "sdv_hash_882477790"} sdv_hash_882477790(actual_AvcIrb_14: int, actual_srcAddr_7: int, actual_srcPlug_7: int, actual_dstAddr_7: int, actual_dstPlug_7: int, actual_OutputIrb_6: int) returns (Tmp_1062: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1062 == -1073741811 || Tmp_1062 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_882477790"} sdv_hash_882477790(actual_AvcIrb_14: int, actual_srcAddr_7: int, actual_srcPlug_7: int, actual_dstAddr_7: int, actual_dstPlug_7: int, actual_OutputIrb_6: int) returns (Tmp_1062: int)
{
  var {:scalar} Tmp_1063: int;
  var {:scalar} Tmp_1064: int;
  var {:scalar} sdv_705: int;
  var {:scalar} Tmp_1065: int;
  var {:scalar} sdv_706: int;
  var {:pointer} sdv_707: int;
  var {:scalar} Tmp_1067: int;
  var {:pointer} sdv_708: int;
  var {:scalar} Tmp_1068: int;
  var {:scalar} idx_19: int;
  var {:pointer} Tmp_1069: int;
  var {:scalar} Tmp_1070: int;
  var {:pointer} Tmp_1071: int;
  var {:pointer} Ops_5: int;
  var {:scalar} Opc_5: int;
  var {:pointer} AvcIrb_14: int;
  var {:pointer} srcAddr_7: int;
  var {:scalar} srcPlug_7: int;
  var {:pointer} dstAddr_7: int;
  var {:scalar} dstPlug_7: int;
  var {:pointer} OutputIrb_6: int;
  var vslice_dummy_var_318: int;

  anon0:
    AvcIrb_14 := actual_AvcIrb_14;
    srcAddr_7 := actual_srcAddr_7;
    srcPlug_7 := actual_srcPlug_7;
    dstAddr_7 := actual_dstAddr_7;
    dstPlug_7 := actual_dstPlug_7;
    OutputIrb_6 := actual_OutputIrb_6;
    call {:si_unique_call 1747} Ops_5 := __HAVOC_malloc(2036);
    Opc_5 := 37;
    assume {:nonnull} Ops_5 != 0;
    assume Ops_5 > 0;
    idx_19 := 1;
    Tmp_1064 := idx_19;
    Tmp_1071 := Ops_5 + Tmp_1064 * 4;
    call {:si_unique_call 1748} sdv_hash_505774121(srcAddr_7, Tmp_1071);
    call {:si_unique_call 1749} sdv_705 := sdv_hash_330049800(srcAddr_7);
    idx_19 := idx_19 + sdv_705;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} idx_19 >= 509;
    Tmp_1062 := -1073741811;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} 509 > idx_19;
    Tmp_1070 := idx_19;
    idx_19 := idx_19 + 1;
    Tmp_1067 := Tmp_1070;
    assume {:nonnull} Ops_5 != 0;
    assume Ops_5 > 0;
    Tmp_1063 := idx_19;
    Tmp_1069 := Ops_5 + Tmp_1063 * 4;
    call {:si_unique_call 1750} sdv_hash_505774121(dstAddr_7, Tmp_1069);
    call {:si_unique_call 1751} sdv_706 := sdv_hash_330049800(dstAddr_7);
    idx_19 := idx_19 + sdv_706;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} idx_19 >= 509;
    Tmp_1062 := -1073741811;
    goto L1;

  anon6_Then:
    assume {:partition} 509 > idx_19;
    Tmp_1065 := idx_19;
    idx_19 := idx_19 + 1;
    Tmp_1068 := Tmp_1065;
    assume {:nonnull} Ops_5 != 0;
    assume Ops_5 > 0;
    call {:si_unique_call 1752} sdv_707 := sdv_hash_434855337(AvcIrb_14, Opc_5);
    call {:si_unique_call 1753} sdv_708 := sdv_hash_861280784(sdv_707, idx_19, Ops_5);
    call {:si_unique_call 1754} vslice_dummy_var_318 := sdv_hash_282790223(OutputIrb_6, sdv_708);
    Tmp_1062 := 0;
    goto L1;
}



procedure {:origName "sdv_hash_607735012"} sdv_hash_607735012(actual_this_54: int) returns (Tmp_1072: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_607735012"} sdv_hash_607735012(actual_this_54: int) returns (Tmp_1072: int)
{
  var {:pointer} this_54: int;

  anon0:
    this_54 := actual_this_54;
    assume {:nonnull} this_54 != 0;
    assume this_54 > 0;
    havoc Tmp_1072;
    return;
}



procedure {:origName "sdv_hash_901487196"} sdv_hash_901487196(actual_this_55: int) returns (Tmp_1074: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_901487196"} sdv_hash_901487196(actual_this_55: int) returns (Tmp_1074: int)
{
  var {:pointer} this_55: int;

  anon0:
    this_55 := actual_this_55;
    assume {:nonnull} this_55 != 0;
    assume this_55 > 0;
    havoc Tmp_1074;
    return;
}



procedure {:origName "sdv_hash_677052185"} sdv_hash_677052185(actual_this_56: int, actual_flags: int) returns (Tmp_1076: int);
  free ensures {:va_keep} Tmp_1076 == actual_this_56;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_677052185"} sdv_hash_677052185(actual_this_56: int, actual_flags: int) returns (Tmp_1076: int)
{
  var {:pointer} this_56: int;
  var {:scalar} flags: int;

  anon0:
    this_56 := actual_this_56;
    flags := actual_flags;
    assume {:nonnull} this_56 != 0;
    assume this_56 > 0;
    Tmp_1076 := this_56;
    return;
}



procedure {:origName "sdv_hash_428960233_sdv_special_DTOR"} sdv_hash_428960233_sdv_special_DTOR(actual_this_57: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_428960233_sdv_special_DTOR"} sdv_hash_428960233_sdv_special_DTOR(actual_this_57: int)
{
  var {:pointer} this_57: int;
  var vslice_dummy_var_319: int;

  anon0:
    call {:si_unique_call 1755} vslice_dummy_var_319 := __HAVOC_malloc(4);
    this_57 := actual_this_57;
    assume {:nonnull} this_57 != 0;
    assume this_57 > 0;
    call {:si_unique_call 1756} sdv_hash_134711981_sdv_special_DTOR(m_Irp_CAvSyncIrp(this_57));
    return;
}



procedure {:origName "ConnectionMgrGetUniqueID"} ConnectionMgrGetUniqueID(actual_PdoExtension_19: int, actual_Data_7: int) returns (Tmp_1080: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ConnectionMgrGetUniqueID"} ConnectionMgrGetUniqueID(actual_PdoExtension_19: int, actual_Data_7: int) returns (Tmp_1080: int)
{
  var {:pointer} MgrInstance_8: int;
  var {:scalar} ntStatus_61: int;
  var {:pointer} Tmp_1082: int;
  var {:pointer} PdoExtension_19: int;
  var {:pointer} Data_7: int;

  anon0:
    PdoExtension_19 := actual_PdoExtension_19;
    Data_7 := actual_Data_7;
    call {:si_unique_call 1757} sdv_do_paged_code_check();
    call {:si_unique_call 1758} ntStatus_61 := CreateConnectionMgr(PdoExtension_19);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ntStatus_61 == 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1082;
    assume {:nonnull} Tmp_1082 != 0;
    assume Tmp_1082 > 0;
    havoc MgrInstance_8;
    assume {:nonnull} Data_7 != 0;
    assume Data_7 > 0;
    call {:si_unique_call 1759} ntStatus_61 := sdv_hash_45263592(MgrInstance_8, DeviceID__AVC_UNIQUE_ID(Data_7));
    goto L13;

  L13:
    Tmp_1080 := ntStatus_61;
    return;

  anon3_Then:
    assume {:partition} ntStatus_61 != 0;
    goto L13;
}



procedure {:origName "sdv_hash_908374888"} sdv_hash_908374888(actual_this_58: int) returns (Tmp_1083: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_908374888"} sdv_hash_908374888(actual_this_58: int) returns (Tmp_1083: int)
{
  var {:pointer} this_58: int;

  anon0:
    this_58 := actual_this_58;
    assume {:nonnull} this_58 != 0;
    assume this_58 > 0;
    havoc Tmp_1083;
    return;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList(actual_Lookaside_3: int, actual_Entry_15: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList(actual_Lookaside_3: int, actual_Entry_15: int)
{
  var {:pointer} Tmp_1087: int;
  var {:pointer} Lookaside_3: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;

  anon0:
    call {:si_unique_call 1760} vslice_dummy_var_320 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_1087 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_1087 != 0;
    assume Tmp_1087 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L1;

  anon5_Then:
    call {:si_unique_call 1761} vslice_dummy_var_321 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "sdv_hash_543516765_sdv_special_CTOR"} sdv_hash_543516765_sdv_special_CTOR(actual_this_59: int, actual_sua_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_543516765_sdv_special_CTOR"} sdv_hash_543516765_sdv_special_CTOR(actual_this_59: int, actual_sua_5: int)
{
  var {:pointer} this_59: int;
  var {:scalar} sua_5: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;

  anon0:
    call {:si_unique_call 1762} vslice_dummy_var_322 := __HAVOC_malloc(4);
    this_59 := actual_this_59;
    call {:si_unique_call 1763} sua_5 := __HAVOC_malloc(4);
    call {:si_unique_call 1764} vslice_dummy_var_323 := sdv_hash_332631937(this_59, 1, sua_5);
    return;
}



procedure {:origName "sdv_hash_478045804"} sdv_hash_478045804(actual_this_60: int) returns (Tmp_1090: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1090 == actual_this_60;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_478045804"} sdv_hash_478045804(actual_this_60: int) returns (Tmp_1090: int)
{
  var {:pointer} this_60: int;

  anon0:
    this_60 := actual_this_60;
    call {:si_unique_call 1765} sdv_RtlZeroMemory(0, 552);
    assume {:nonnull} this_60 != 0;
    assume this_60 > 0;
    Tmp_1090 := this_60;
    return;
}



procedure {:origName "IsEqualGUID"} IsEqualGUID(actual_rguid1: int, actual_rguid2: int) returns (Tmp_1092: int);
  free ensures {:va_keep} Tmp_1092 == 0 || Tmp_1092 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IsEqualGUID"} IsEqualGUID(actual_rguid1: int, actual_rguid2: int) returns (Tmp_1092: int)
{
  var {:scalar} sdv_714: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_714 != 0;
    Tmp_1092 := 0;
    goto L10;

  L10:
    return;

  anon3_Then:
    assume {:partition} sdv_714 == 0;
    Tmp_1092 := 1;
    goto L10;
}



procedure {:origName "sdv_hash_1046774778_sdv_special_CTOR"} sdv_hash_1046774778_sdv_special_CTOR(actual_this_61: int, actual_Parent_1: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_1046774778_sdv_special_CTOR"} sdv_hash_1046774778_sdv_special_CTOR(actual_this_61: int, actual_Parent_1: int)
{
  var {:pointer} Tmp_1095: int;
  var {:pointer} this_61: int;
  var {:pointer} Parent_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_2710: int;

  anon0:
    call {:si_unique_call 1766} vslice_dummy_var_324 := __HAVOC_malloc(4);
    this_61 := actual_this_61;
    Parent_1 := actual_Parent_1;
    assume {:nonnull} this_61 != 0;
    assume this_61 > 0;
    assume {:nonnull} this_61 != 0;
    assume this_61 > 0;
    assume {:nonnull} this_61 != 0;
    assume this_61 > 0;
    havoc Tmp_1095;
    assume {:nonnull} Tmp_1095 != 0;
    assume Tmp_1095 > 0;
    assume {:nonnull} this_61 != 0;
    assume this_61 > 0;
    havoc vslice_dummy_var_2710;
    call {:si_unique_call 1767} boogieTmp := IoAllocateIrp(vslice_dummy_var_2710, 0);
    return;
}



procedure {:origName "sdv_hash_505774121"} sdv_hash_505774121(actual_this_62: int, actual_sua_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_505774121"} sdv_hash_505774121(actual_this_62: int, actual_sua_6: int)
{
  var {:pointer} this_62: int;
  var {:pointer} sua_6: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;

  anon0:
    call {:si_unique_call 1768} vslice_dummy_var_325 := __HAVOC_malloc(4);
    this_62 := actual_this_62;
    sua_6 := actual_sua_6;
    call {:si_unique_call 1769} vslice_dummy_var_326 := sdv_hash_387797355(this_62, 32, sua_6);
    return;
}



procedure {:origName "RtlFailFast"} RtlFailFast(actual_Code: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RtlFailFast"} RtlFailFast(actual_Code: int)
{
  var vslice_dummy_var_327: int;

  anon0:
    call {:si_unique_call 1770} vslice_dummy_var_327 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_hash_265299797_sdv_special_CTOR"} sdv_hash_265299797_sdv_special_CTOR(actual_this_63: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_265299797_sdv_special_CTOR"} sdv_hash_265299797_sdv_special_CTOR(actual_this_63: int)
{
  var {:pointer} this_63: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;

  anon0:
    call {:si_unique_call 1771} vslice_dummy_var_328 := __HAVOC_malloc(4);
    this_63 := actual_this_63;
    assume {:nonnull} this_63 != 0;
    assume this_63 > 0;
    call {:si_unique_call 1772} vslice_dummy_var_329 := sdv_hash_478045804(this_63);
    return;
}



procedure {:origName "RemoveConnectionMgr"} RemoveConnectionMgr(actual_PdoData_18: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "RemoveConnectionMgr"} RemoveConnectionMgr(actual_PdoData_18: int)
{
  var {:pointer} Tmp_1103: int;
  var {:pointer} MgrInstance_9: int;
  var {:pointer} Tmp_1106: int;
  var {:pointer} PdoData_18: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;

  anon0:
    call {:si_unique_call 1773} vslice_dummy_var_330 := __HAVOC_malloc(4);
    PdoData_18 := actual_PdoData_18;
    call {:si_unique_call 1774} sdv_do_paged_code_check();
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    havoc MgrInstance_9;
    assume {:nonnull} PdoData_18 != 0;
    assume PdoData_18 > 0;
    Tmp_1106 := MgrInstance_9;
    Tmp_1103 := Tmp_1106;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Tmp_1103 != 0;
    call {:si_unique_call 1775} vslice_dummy_var_331 := sdv_hash_114568688(Tmp_1103, 1);
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} Tmp_1103 == 0;
    goto L1;

  anon5_Then:
    goto L1;
}



procedure {:origName "sdv_hash_945618448"} sdv_hash_945618448(actual_AvcIrb_15: int) returns (Tmp_1107: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1107 == actual_AvcIrb_15;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_945618448"} sdv_hash_945618448(actual_AvcIrb_15: int) returns (Tmp_1107: int)
{
  var {:pointer} sdv_719: int;
  var {:pointer} sdv_720: int;
  var {:pointer} Ops_6: int;
  var {:scalar} Opc_6: int;
  var {:pointer} AvcIrb_15: int;

  anon0:
    AvcIrb_15 := actual_AvcIrb_15;
    call {:si_unique_call 1776} Ops_6 := __HAVOC_malloc(20);
    Opc_6 := 2;
    assume {:nonnull} Ops_6 != 0;
    assume Ops_6 > 0;
    call {:si_unique_call 1777} sdv_719 := sdv_hash_434855337(AvcIrb_15, Opc_6);
    call {:si_unique_call 1778} sdv_720 := sdv_hash_861280784(sdv_719, 5, Ops_6);
    Tmp_1107 := sdv_720;
    return;
}



procedure {:origName "sdv_hash_567308675_sdv_special_CTOR"} sdv_hash_567308675_sdv_special_CTOR(actual_this_64: int, actual_sua_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_567308675_sdv_special_CTOR"} sdv_hash_567308675_sdv_special_CTOR(actual_this_64: int, actual_sua_7: int)
{
  var {:pointer} this_64: int;
  var {:pointer} sua_7: int;
  var vslice_dummy_var_332: int;

  anon0:
    call {:si_unique_call 1779} vslice_dummy_var_332 := __HAVOC_malloc(4);
    this_64 := actual_this_64;
    sua_7 := actual_sua_7;
    call {:si_unique_call 1780} sdv_hash_13414602(this_64, sua_7);
    return;
}



procedure {:origName "sdv_hash_592377359"} sdv_hash_592377359(actual_this_65: int, actual_AvcIrb_16: int) returns (Tmp_1111: int);
  modifies Mem_T.MajorFunction__IO_STACK_LOCATION, alloc, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_hash_592377359"} sdv_hash_592377359(actual_this_65: int, actual_AvcIrb_16: int) returns (Tmp_1111: int)
{
  var {:pointer} sdv_721: int;
  var {:pointer} this_65: int;
  var {:pointer} AvcIrb_16: int;

  anon0:
    this_65 := actual_this_65;
    AvcIrb_16 := actual_AvcIrb_16;
    call {:si_unique_call 1781} sdv_721 := sdv_hash_684117243(AvcIrb_16);
    call {:si_unique_call 1782} Tmp_1111 := sdv_hash_975613429(this_65, sdv_721);
    return;
}



procedure {:origName "ConnectionMgrRelease"} ConnectionMgrRelease(actual_PdoExtension_20: int, actual_Data_8: int) returns (Tmp_1113: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "ConnectionMgrRelease"} ConnectionMgrRelease(actual_PdoExtension_20: int, actual_Data_8: int) returns (Tmp_1113: int)
{
  var {:pointer} Tmp_1114: int;
  var {:pointer} MgrInstance_10: int;
  var {:scalar} ntStatus_62: int;
  var {:pointer} PdoExtension_20: int;
  var {:pointer} Data_8: int;
  var vslice_dummy_var_2711: int;

  anon0:
    PdoExtension_20 := actual_PdoExtension_20;
    Data_8 := actual_Data_8;
    call {:si_unique_call 1783} sdv_do_paged_code_check();
    call {:si_unique_call 1784} ntStatus_62 := CreateConnectionMgr(PdoExtension_20);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} ntStatus_62 == 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc Tmp_1114;
    assume {:nonnull} Tmp_1114 != 0;
    assume Tmp_1114 > 0;
    havoc MgrInstance_10;
    assume {:nonnull} Data_8 != 0;
    assume Data_8 > 0;
    havoc vslice_dummy_var_2711;
    call {:si_unique_call 1785} ntStatus_62 := sdv_hash_673615282(MgrInstance_10, vslice_dummy_var_2711);
    goto L13;

  L13:
    Tmp_1113 := ntStatus_62;
    return;

  anon3_Then:
    assume {:partition} ntStatus_62 != 0;
    goto L13;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    assume (forall x: int :: { Mem_T.CompletionRoutine__IO_STACK_LOCATION[x] } Mem_T.CompletionRoutine__IO_STACK_LOCATION[x] <= 0 || Mem_T.CompletionRoutine__IO_STACK_LOCATION[x] > 1030);
    return;
}



function {:inline true} {:fieldmap "Mem_T.AddDevice__DRIVER_EXTENSION"} {:fieldname "AddDevice"} AddDevice__DRIVER_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AlternateOpcodesFlag__AVC_COMMAND_IRB"} {:fieldname "AlternateOpcodesFlag"} AlternateOpcodesFlag__AVC_COMMAND_IRB(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AlternateOpcodes__AVC_COMMAND_CONTEXT"} {:fieldname "AlternateOpcodes"} AlternateOpcodes__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.AlternateOpcodes__AVC_COMMAND_IRB"} {:fieldname "AlternateOpcodes"} AlternateOpcodes__AVC_COMMAND_IRB(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_42"} {:fieldname "Argument1"} Argument1_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AssociatedIrp__IRP"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BidFlag__PDO_DATA"} {:fieldname "BidFlag"} BidFlag__PDO_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Buffer__UNICODE_STRING"} {:fieldname "Buffer"} Buffer__UNICODE_STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusExtension__PDO_DATA"} {:fieldname "BusExtension"} BusExtension__PDO_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__PNP_BUS_INFORMATION"} {:fieldname "BusNumber"} BusNumber__PNP_BUS_INFORMATION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotification_unnamed_tag_68"} {:fieldname "BusResetNotification"} BusResetNotification_unnamed_tag_68(x: int) : int
{
  x + 1060
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotify__AV_61883_REQUEST"} {:fieldname "BusResetNotify"} BusResetNotify__AV_61883_REQUEST(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.BusReset_unnamed_tag_68"} {:fieldname "BusReset"} BusReset_unnamed_tag_68(x: int) : int
{
  x + 972
}

function {:inline true} {:fieldmap "Mem_T.BusTypeGuid__PNP_BUS_INFORMATION"} {:fieldname "BusTypeGuid"} BusTypeGuid__PNP_BUS_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "CallbackChain"} CallbackChain__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Callback__AVC_CALLBACK_LINK"} {:fieldname "Callback"} Callback__AVC_CALLBACK_LINK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_30"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_30(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "CleanupList"} CleanupList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.CmdDelay__BUS_DEVICE_EXTENSION"} {:fieldname "CmdDelay"} CmdDelay__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 5792
}

function {:inline true} {:fieldmap "Mem_T.CmdResourceLock__BUS_DEVICE_EXTENSION"} {:fieldname "CmdResourceLock"} CmdResourceLock__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 5596
}

function {:inline true} {:fieldmap "Mem_T.CommandType__AVC_COMMAND_CONTEXT"} {:fieldname "CommandType"} CommandType__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.CommandType__AVC_COMMAND_IRB"} {:fieldname "CommandType"} CommandType__AVC_COMMAND_IRB(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Common__AVC_COMMAND_IRB"} {:fieldname "Common"} Common__AVC_COMMAND_IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Common__PDO_DEVICE_EXTENSION"} {:fieldname "Common"} Common__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "CompatIds"} CompatIds__PDO_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T._AVCPRECONNECTINFO"} {:fieldname "ConnectInfo"} ConnectInfo__AVC_PRECONNECT_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._AVCCONNECTINFO"} {:fieldname "ConnectInfo"} ConnectInfo__AVC_SETCONNECT_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Context__AVC_CALLBACK_LINK"} {:fieldname "Context"} Context__AVC_CALLBACK_LINK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Context__BUS_RESET_NOTIFY"} {:fieldname "Context"} Context__BUS_RESET_NOTIFY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Context__PDO_DATA"} {:fieldname "Context"} Context__PDO_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.Control__IO_STACK_LOCATION"} {:fieldname "Control"} Control__IO_STACK_LOCATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Count__AVC_PEER_DO_LIST"} {:fieldname "Count"} Count__AVC_PEER_DO_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_7"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_7(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataFlow_KSPIN_DESCRIPTOR"} {:fieldname "DataFlow"} DataFlow_KSPIN_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DataFlow__AVCPRECONNECTINFO"} {:fieldname "DataFlow"} DataFlow__AVCPRECONNECTINFO(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.DataLength__KEY_VALUE_PARTIAL_INFORMATION"} {:fieldname "DataLength"} DataLength__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data__KEY_VALUE_PARTIAL_INFORMATION"} {:fieldname "Data"} Data__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Designation__AVC_COMMAND_CONTEXT"} {:fieldname "Designation"} Designation__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DevExt__AVC_COMMAND_CONTEXT"} {:fieldname "DevExt"} DevExt__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._GUID"} {:fieldname "DeviceID"} DeviceID__AVC_UNIQUE_ID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T.DeviceNodeAddress__BUS_GENERATION_NODE"} {:fieldname "DeviceNodeAddress"} DeviceNodeAddress__BUS_GENERATION_NODE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__AVC_PEER_DO_LOCATOR"} {:fieldname "DeviceObject"} DeviceObject__AVC_PEER_DO_LOCATOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__BUS_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__PDO_DATA"} {:fieldname "DeviceObject"} DeviceObject__PDO_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__PDO_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__BUS_DEVICE_EXTENSION"} {:fieldname "DeviceState"} DeviceState__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__PDO_DEVICE_EXTENSION"} {:fieldname "DeviceState"} DeviceState__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_35"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_35(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.DriverExtension__DRIVER_OBJECT"} {:fieldname "DriverExtension"} DriverExtension__DRIVER_OBJECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DriverUnload__DRIVER_OBJECT"} {:fieldname "DriverUnload"} DriverUnload__DRIVER_OBJECT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.EntryContext__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "EntryContext"} EntryContext__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Enumerated__PDO_DATA"} {:fieldname "Enumerated"} Enumerated__PDO_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ExtInputs__AVC_EXT_PLUG_COUNTS"} {:fieldname "ExtInputs"} ExtInputs__AVC_EXT_PLUG_COUNTS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ExtOutputs__AVC_EXT_PLUG_COUNTS"} {:fieldname "ExtOutputs"} ExtOutputs__AVC_EXT_PLUG_COUNTS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._AVC_EXT_PLUG_COUNTS"} {:fieldname "ExtPlugCounts"} ExtPlugCounts__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 460
}

function {:inline true} {:fieldmap "Mem_T.ExtensionCode__AVC_SUBUNIT_INFO"} {:fieldname "ExtensionCode"} ExtensionCode__AVC_SUBUNIT_INFO(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "FdoEntry"} FdoEntry__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.FileName__FILE_OBJECT"} {:fieldname "FileName"} FileName__FILE_OBJECT(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FileObject__IO_STACK_LOCATION"} {:fieldname "FileObject"} FileObject__IO_STACK_LOCATION(x: int) : int
{
  x + 532
}

function {:inline true} {:fieldmap "Mem_T.Flags_KSIDENTIFIER"} {:fieldname "Flags"} Flags_KSIDENTIFIER(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Flags__AVCPRECONNECTINFO"} {:fieldname "Flags"} Flags__AVCPRECONNECTINFO(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.Flags__AVC_SUBUNIT_ADDR_SPEC"} {:fieldname "Flags"} Flags__AVC_SUBUNIT_ADDR_SPEC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__BUS_RESET_NOTIFY"} {:fieldname "Flags"} Flags__BUS_RESET_NOTIFY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRB"} {:fieldname "Flags"} Flags__IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Flags"} Flags__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__SET_FCP_NOTIFY"} {:fieldname "Flags"} Flags__SET_FCP_NOTIFY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flags__SET_UNIT_DIRECTORY"} {:fieldname "Flags"} Flags__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Frame"} Frame__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 672
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Frame"} Frame__AVC_FCP_REQUEST(x: int) : int
{
  x + 460
}

function {:inline true} {:fieldmap "Mem_T.Frame__FCP_GET_REQUEST"} {:fieldname "Frame"} Frame__FCP_GET_REQUEST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FunctionNumber__IRB"} {:fieldname "FunctionNumber"} FunctionNumber__IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Function"} Function__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.Function__AVC_FCP_REQUEST"} {:fieldname "Function"} Function__AVC_FCP_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Function__AVC_IRB"} {:fieldname "Function"} Function__AVC_IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__IRB_REQ_GET_GENERATION_COUNT"} {:fieldname "GenerationCount"} GenerationCount__IRB_REQ_GET_GENERATION_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Generation__AVC_COMMAND_CONTEXT"} {:fieldname "Generation"} Generation__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 2728
}

function {:inline true} {:fieldmap "Mem_T.Generation__AVC_COMMAND_IRB"} {:fieldname "Generation"} Generation__AVC_COMMAND_IRB(x: int) : int
{
  x + 2112
}

function {:inline true} {:fieldmap "Mem_T.Generation__AVC_PEER_DO_LOCATOR"} {:fieldname "Generation"} Generation__AVC_PEER_DO_LOCATOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.GetRequest__AVC_FCP_REQUEST"} {:fieldname "GetRequest"} GetRequest__AVC_FCP_REQUEST(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.GetUnitInfo__AV_61883_REQUEST"} {:fieldname "GetUnitInfo"} GetUnitInfo__AV_61883_REQUEST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "HardwareIds"} HardwareIds__PDO_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_34"} {:fieldname "IdType"} IdType_unnamed_tag_34(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Id_KSIDENTIFIER"} {:fieldname "Id"} Id_KSIDENTIFIER(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Info__AVC_SUBUNIT_INFO_BLOCK"} {:fieldname "Info"} Info__AVC_SUBUNIT_INFO_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__GET_UNIT_INFO"} {:fieldname "Information"} Information__GET_UNIT_INFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_22"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_22(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfacesCount_KSPIN_DESCRIPTOR"} {:fieldname "InterfacesCount"} InterfacesCount_KSPIN_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Interfaces_KSPIN_DESCRIPTOR"} {:fieldname "Interfaces"} Interfaces_KSPIN_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_22"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_22(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoCount__AVC_REMOVE_LOCK"} {:fieldname "IoCount"} IoCount__AVC_REMOVE_LOCK(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IsVirtual__BUS_DEVICE_EXTENSION"} {:fieldname "IsVirtual"} IsVirtual__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IsVirtual__COMMON_DEVICE_EXTENSION"} {:fieldname "IsVirtual"} IsVirtual__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.IsVirtual__PDO_DEVICE_EXTENSION"} {:fieldname "IsVirtual"} IsVirtual__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LegacyBusType__PNP_BUS_INFORMATION"} {:fieldname "LegacyBusType"} LegacyBusType__PNP_BUS_INFORMATION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Length__FCP_GET_REQUEST"} {:fieldname "Length"} Length__FCP_GET_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_18"} {:fieldname "Length"} Length_unnamed_tag_18(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry_unnamed_tag_7(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.List__WORK_QUEUE_ITEM"} {:fieldname "List"} List__WORK_QUEUE_ITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__UNICODE_STRING"} {:fieldname "MaximumLength"} MaximumLength__UNICODE_STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MediumsCount_KSPIN_DESCRIPTOR"} {:fieldname "MediumsCount"} MediumsCount_KSPIN_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Mediums_KSPIN_DESCRIPTOR"} {:fieldname "Mediums"} Mediums_KSPIN_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModelID__GET_UNIT_IDS"} {:fieldname "ModelID"} ModelID__GET_UNIT_IDS(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ModelText__GET_UNIT_IDS"} {:fieldname "ModelText"} ModelText__GET_UNIT_IDS(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.NA_Bus_Number__NODE_ADDRESS"} {:fieldname "NA_Bus_Number"} NA_Bus_Number__NODE_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NA_Node_Number__NODE_ADDRESS"} {:fieldname "NA_Node_Number"} NA_Node_Number__NODE_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Name__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Name"} Name__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__AVC_COMMAND_CONTEXT"} {:fieldname "NodeAddress"} NodeAddress__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 2720
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__AVC_COMMAND_IRB"} {:fieldname "NodeAddress"} NodeAddress__AVC_COMMAND_IRB(x: int) : int
{
  x + 2104
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__AVC_PEER_DO_LOCATOR"} {:fieldname "NodeAddress"} NodeAddress__AVC_PEER_DO_LOCATOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__FCP_GET_REQUEST"} {:fieldname "NodeAddress"} NodeAddress__FCP_GET_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._BUS_GENERATION_NODE"} {:fieldname "NodeInfo"} NodeInfo__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 268
}

function {:inline true} {:fieldmap "Mem_T.NtStatus__AVC_COMMAND_CONTEXT"} {:fieldname "NtStatus"} NtStatus__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.NumInputPlugs__GET_UNIT_CAPABILITIES"} {:fieldname "NumInputPlugs"} NumInputPlugs__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumOutputPlugs__GET_UNIT_CAPABILITIES"} {:fieldname "NumOutputPlugs"} NumOutputPlugs__GET_UNIT_CAPABILITIES(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Objects__AVC_PEER_DO_LIST"} {:fieldname "Objects"} Objects__AVC_PEER_DO_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Opcode__AVC_COMMAND_CONTEXT"} {:fieldname "Opcode"} Opcode__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Opcode"} Opcode__AVC_COMMAND_IRB(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.OperandLength__AVC_COMMAND_CONTEXT"} {:fieldname "OperandLength"} OperandLength__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.OperandLength__AVC_COMMAND_IRB"} {:fieldname "OperandLength"} OperandLength__AVC_COMMAND_IRB(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.OperandOffset__AVC_COMMAND_CONTEXT"} {:fieldname "OperandOffset"} OperandOffset__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.Operands__AVC_COMMAND_IRB"} {:fieldname "Operands"} Operands__AVC_COMMAND_IRB(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_6"} {:fieldname "Overlay"} Overlay_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Page__AVC_SUBUNIT_INFO"} {:fieldname "Page"} Page__AVC_SUBUNIT_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParentDeviceObject__BUS_DEVICE_EXTENSION"} {:fieldname "ParentDeviceObject"} ParentDeviceObject__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ParentDeviceObject__COMMON_DEVICE_EXTENSION"} {:fieldname "ParentDeviceObject"} ParentDeviceObject__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ParentDeviceObject__PDO_DEVICE_EXTENSION"} {:fieldname "ParentDeviceObject"} ParentDeviceObject__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PdoData__PDO_DEVICE_EXTENSION"} {:fieldname "PdoData"} PdoData__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PdoList"} PdoList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PdoList"} PdoList__PDO_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PeerList__AVC_MULTIFUNC_IRB"} {:fieldname "PeerList"} PeerList__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 528
}

function {:inline true} {:fieldmap "Mem_T.PeerLocator__AVC_MULTIFUNC_IRB"} {:fieldname "PeerLocator"} PeerLocator__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 512
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingIrpList"} PendingIrpList__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PendingRequestIrp__BUS_DEVICE_EXTENSION"} {:fieldname "PendingRequestIrp"} PendingRequestIrp__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingRequestList"} PendingRequestList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T._AVC_FCP_REQUEST"} {:fieldname "PendingRequest"} PendingRequest__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 2916
}

function {:inline true} {:fieldmap "Mem_T.PendingResponseIrp__BUS_DEVICE_EXTENSION"} {:fieldname "PendingResponseIrp"} PendingResponseIrp__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingResponseList"} PendingResponseList__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T._AVC_FCP_REQUEST"} {:fieldname "PendingResponse"} PendingResponse__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PhysicalDeviceObject__BUS_DEVICE_EXTENSION"} {:fieldname "PhysicalDeviceObject"} PhysicalDeviceObject__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T._AVC_PIN_COUNT"} {:fieldname "PinCount"} PinCount__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.PinCount__AVC_PIN_COUNT"} {:fieldname "PinCount"} PinCount__AVC_PIN_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._AVC_PIN_DESCRIPTOR"} {:fieldname "PinDescriptor"} PinDescriptor__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.KSPIN_DESCRIPTOR"} {:fieldname "PinDescriptor"} PinDescriptor__AVC_PIN_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._AVC_PIN_ID"} {:fieldname "PinId"} PinId__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.PinId__AVC_PIN_ID"} {:fieldname "PinId"} PinId__AVC_PIN_ID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T._AVC_PRECONNECT_INFO"} {:fieldname "PreConnectInfo"} PreConnectInfo__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.QueryRoutine__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "QueryRoutine"} QueryRoutine__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RawData__AVC_SUBUNIT_INFO"} {:fieldname "RawData"} RawData__AVC_SUBUNIT_INFO(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Removable__DEVICE_CAPABILITIES"} {:fieldname "Removable"} Removable__DEVICE_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.RemovalPending__BUS_DEVICE_EXTENSION"} {:fieldname "RemovalPending"} RemovalPending__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.RemovalPending__COMMON_DEVICE_EXTENSION"} {:fieldname "RemovalPending"} RemovalPending__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.RemovalPending__PDO_DEVICE_EXTENSION"} {:fieldname "RemovalPending"} RemovalPending__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "RemoveEvent"} RemoveEvent__AVC_REMOVE_LOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._AVC_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._AVC_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T._AVC_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Removed__AVC_REMOVE_LOCK"} {:fieldname "Removed"} Removed__AVC_REMOVE_LOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Removed__BUS_DEVICE_EXTENSION"} {:fieldname "Removed"} Removed__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.Removed__COMMON_DEVICE_EXTENSION"} {:fieldname "Removed"} Removed__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.Removed__PDO_DEVICE_EXTENSION"} {:fieldname "Removed"} Removed__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.Request__AVC_COMMAND_CONTEXT"} {:fieldname "Request"} Request__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetContext"} ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ResetLock__BUS_DEVICE_EXTENSION"} {:fieldname "ResetLock"} ResetLock__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.ResetLock__PDO_DEVICE_EXTENSION"} {:fieldname "ResetLock"} ResetLock__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetRoutine"} ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ResponseCode__AVC_COMMAND_CONTEXT"} {:fieldname "ResponseCode"} ResponseCode__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.ResponseCode__AVC_COMMAND_IRB"} {:fieldname "ResponseCode"} ResponseCode__AVC_COMMAND_IRB(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Response__AVC_FCP_REQUEST"} {:fieldname "Response"} Response__AVC_FCP_REQUEST(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.Retries__AVC_COMMAND_CONTEXT"} {:fieldname "Retries"} Retries__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.Retries__AVC_COMMAND_IRB"} {:fieldname "Retries"} Retries__AVC_COMMAND_IRB(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.RetryFlag__AVC_COMMAND_IRB"} {:fieldname "RetryFlag"} RetryFlag__AVC_COMMAND_IRB(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SendResponse__AVC_FCP_REQUEST"} {:fieldname "SendResponse"} SendResponse__AVC_FCP_REQUEST(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T._AVC_SETCONNECT_INFO"} {:fieldname "SetConnectInfo"} SetConnectInfo__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.SetFcpNotify__AV_61883_REQUEST"} {:fieldname "SetFcpNotify"} SetFcpNotify__AV_61883_REQUEST(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T.SetUnitDirectory__AV_61883_REQUEST"} {:fieldname "SetUnitDirectory"} SetUnitDirectory__AV_61883_REQUEST(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.Set_KSIDENTIFIER"} {:fieldname "Set"} Set_KSIDENTIFIER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DEVICE_CAPABILITIES"} {:fieldname "Size"} Size__DEVICE_CAPABILITIES(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.Started__PDO_DATA"} {:fieldname "Started"} Started__PDO_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_39"} {:fieldname "State"} State_unnamed_tag_39(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddrFlag__AVC_COMMAND_IRB"} {:fieldname "SubunitAddrFlag"} SubunitAddrFlag__AVC_COMMAND_IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddr__AVC_COMMAND_CONTEXT"} {:fieldname "SubunitAddr"} SubunitAddr__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddr__AVC_COMMAND_IRB"} {:fieldname "SubunitAddr"} SubunitAddr__AVC_COMMAND_IRB(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddr__PDO_DATA"} {:fieldname "SubunitAddr"} SubunitAddr__PDO_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddress__AVCCONNECTINFO"} {:fieldname "SubunitAddress"} SubunitAddress__AVCCONNECTINFO(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddress__AVCPRECONNECTINFO"} {:fieldname "SubunitAddress"} SubunitAddress__AVCPRECONNECTINFO(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SubunitAddress__AVC_SUBUNIT_ADDR_SPEC"} {:fieldname "SubunitAddress"} SubunitAddress__AVC_SUBUNIT_ADDR_SPEC(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SubunitPlugNumber__AVCCONNECTINFO"} {:fieldname "SubunitPlugNumber"} SubunitPlugNumber__AVCCONNECTINFO(x: int) : int
{
  x + 172
}

function {:inline true} {:fieldmap "Mem_T.SubunitPlugNumber__AVCPRECONNECTINFO"} {:fieldname "SubunitPlugNumber"} SubunitPlugNumber__AVCPRECONNECTINFO(x: int) : int
{
  x + 172
}

function {:inline true} {:fieldmap "Mem_T.Subunits__AVC_MULTIFUNC_IRB"} {:fieldname "Subunits"} Subunits__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.SurpriseRemovalOK__DEVICE_CAPABILITIES"} {:fieldname "SurpriseRemovalOK"} SurpriseRemovalOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "SymbolicLinkName"} SymbolicLinkName__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 240
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_2"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemState__BUS_DEVICE_EXTENSION"} {:fieldname "SystemState"} SystemState__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.SystemState__PDO_DEVICE_EXTENSION"} {:fieldname "SystemState"} SystemState__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Tag__BUS_DEVICE_EXTENSION"} {:fieldname "Tag"} Tag__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Tag__COMMON_DEVICE_EXTENSION"} {:fieldname "Tag"} Tag__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Tag__PDO_DEVICE_EXTENSION"} {:fieldname "Tag"} Tag__PDO_DEVICE_EXTENSION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TimeoutFlag__AVC_COMMAND_IRB"} {:fieldname "TimeoutFlag"} TimeoutFlag__AVC_COMMAND_IRB(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "Timeout"} Timeout__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Timeout__AVC_COMMAND_IRB"} {:fieldname "Timeout"} Timeout__AVC_COMMAND_IRB(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TriggerBusReset__BUS_DEVICE_EXTENSION"} {:fieldname "TriggerBusReset"} TriggerBusReset__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 368
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_28"} {:fieldname "Type"} Type_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_39"} {:fieldname "Type"} Type_unnamed_tag_39(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._AVC_UNIQUE_ID"} {:fieldname "UniqueID"} UniqueID__AVC_MULTIFUNC_IRB(x: int) : int
{
  x + 468
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "UniqueID"} UniqueID__GET_UNIT_IDS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UniqueId"} UniqueId__PDO_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "UnitAddr"} UnitAddr__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T._GET_UNIT_CAPABILITIES"} {:fieldname "UnitCaps"} UnitCaps__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T._GET_UNIT_IDS"} {:fieldname "UnitIDs"} UnitIDs__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 308
}

function {:inline true} {:fieldmap "Mem_T.UnitInfoRetrieved__BUS_DEVICE_EXTENSION"} {:fieldname "UnitInfoRetrieved"} UnitInfoRetrieved__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 364
}

function {:inline true} {:fieldmap "Mem_T.UnitModelID__GET_UNIT_IDS"} {:fieldname "UnitModelID"} UnitModelID__GET_UNIT_IDS(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.UnitModelText__GET_UNIT_IDS"} {:fieldname "UnitModelText"} UnitModelText__GET_UNIT_IDS(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.UnitPlugNumber__AVCCONNECTINFO"} {:fieldname "UnitPlugNumber"} UnitPlugNumber__AVCCONNECTINFO(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.UnitPlugNumber__AVCPRECONNECTINFO"} {:fieldname "UnitPlugNumber"} UnitPlugNumber__AVCPRECONNECTINFO(x: int) : int
{
  x + 184
}

function {:inline true} {:fieldmap "Mem_T.UnitSpecId__SET_UNIT_DIRECTORY"} {:fieldname "UnitSpecId"} UnitSpecId__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitSwVersion__SET_UNIT_DIRECTORY"} {:fieldname "UnitSwVersion"} UnitSwVersion__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.VendorID__GET_UNIT_IDS"} {:fieldname "VendorID"} VendorID__GET_UNIT_IDS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.VendorText__GET_UNIT_IDS"} {:fieldname "VendorText"} VendorText__GET_UNIT_IDS(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Version__AVC_COMMAND_CONTEXT"} {:fieldname "Version"} Version__AVC_COMMAND_CONTEXT(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.Version__AVC_FCP_REQUEST"} {:fieldname "Version"} Version__AVC_FCP_REQUEST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Version__AV_61883_REQUEST"} {:fieldname "Version"} Version__AV_61883_REQUEST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Version__DEVICE_CAPABILITIES"} {:fieldname "Version"} Version__DEVICE_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.WorkItem__IO_WORKITEM"} {:fieldname "WorkItem"} WorkItem__IO_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_BUS_RESET"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_BUS_RESET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.hCromEntry__BUS_DEVICE_EXTENSION"} {:fieldname "hCromEntry"} hCromEntry__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.hCromEntry__SET_UNIT_DIRECTORY"} {:fieldname "hCromEntry"} hCromEntry__SET_UNIT_DIRECTORY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.hPlug__AVCCONNECTINFO"} {:fieldname "hPlug"} hPlug__AVCCONNECTINFO(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.m_Acquired_CKsPinDescriptor"} {:fieldname "m_Acquired"} m_Acquired_CKsPinDescriptor(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T._AVC_COMMAND_IRB"} {:fieldname "m_AvcIrb"} m_AvcIrb_CAvcCommandIrb(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CAvcSubunitAddress"} {:fieldname "m_DstAddr"} m_DstAddr_CKsPinDescriptor(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.m_DstPlug_CKsPinDescriptor"} {:fieldname "m_DstPlug"} m_DstPlug_CKsPinDescriptor(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.m_ExtInputPlugCount_CConnectionMgr"} {:fieldname "m_ExtInputPlugCount"} m_ExtInputPlugCount_CConnectionMgr(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.m_ExtOutputPlugCount_CConnectionMgr"} {:fieldname "m_ExtOutputPlugCount"} m_ExtOutputPlugCount_CConnectionMgr(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.m_Flags_CKsPinDescriptor"} {:fieldname "m_Flags"} m_Flags_CKsPinDescriptor(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.m_HaveConnectInfo_CKsPinDescriptor"} {:fieldname "m_HaveConnectInfo"} m_HaveConnectInfo_CKsPinDescriptor(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.m_InterfacesCount_CKsPinDescriptor"} {:fieldname "m_InterfacesCount"} m_InterfacesCount_CKsPinDescriptor(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.m_Interfaces_CKsPinDescriptor"} {:fieldname "m_Interfaces"} m_Interfaces_CKsPinDescriptor(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.CSyncIrp"} {:fieldname "m_Irp"} m_Irp_CAvSyncIrp(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.m_Irp_CSyncIrp"} {:fieldname "m_Irp"} m_Irp_CSyncIrp(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.m_MediumsCount_CKsPinDescriptor"} {:fieldname "m_MediumsCount"} m_MediumsCount_CKsPinDescriptor(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.m_Mediums_CKsPinDescriptor"} {:fieldname "m_Mediums"} m_Mediums_CKsPinDescriptor(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.m_Parent_CSyncIrp"} {:fieldname "m_Parent"} m_Parent_CSyncIrp(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.m_PdoExtension_CConnectionMgr"} {:fieldname "m_PdoExtension"} m_PdoExtension_CConnectionMgr(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.m_PinDescriptorsCount_CConnectionMgr"} {:fieldname "m_PinDescriptorsCount"} m_PinDescriptorsCount_CConnectionMgr(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.m_PinDescriptors_CConnectionMgr"} {:fieldname "m_PinDescriptors"} m_PinDescriptors_CConnectionMgr(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CAvcSubunitAddress"} {:fieldname "m_SrcAddr"} m_SrcAddr_CKsPinDescriptor(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.m_SrcPlug_CKsPinDescriptor"} {:fieldname "m_SrcPlug"} m_SrcPlug_CKsPinDescriptor(x: int) : int
{
  x + 172
}

function {:inline true} {:fieldmap "Mem_T.m_SubunitPlugNumber_CKsPinDescriptor"} {:fieldname "m_SubunitPlugNumber"} m_SubunitPlugNumber_CKsPinDescriptor(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.m_UnitPlugNumber_CKsPinDescriptor"} {:fieldname "m_UnitPlugNumber"} m_UnitPlugNumber_CKsPinDescriptor(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.m_cbsua_CAvcSubunitAddress"} {:fieldname "m_cbsua"} m_cbsua_CAvcSubunitAddress(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.m_pKspd_CKsPinDescriptor"} {:fieldname "m_pKspd"} m_pKspd_CKsPinDescriptor(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.m_sua_CAvcSubunitAddress"} {:fieldname "m_sua"} m_sua_CAvcSubunitAddress(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.nLevel__GET_UNIT_INFO"} {:fieldname "nLevel"} nLevel__GET_UNIT_INFO(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.pfn1394ResetContext__COMMON_DEVICE_EXTENSION"} {:fieldname "pfn1394ResetContext"} pfn1394ResetContext__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T.pfn1394ResetRoutine__BUS_DEVICE_EXTENSION"} {:fieldname "pfn1394ResetRoutine"} pfn1394ResetRoutine__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.pfn1394ResetRoutine__COMMON_DEVICE_EXTENSION"} {:fieldname "pfn1394ResetRoutine"} pfn1394ResetRoutine__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.pfn61883ResetContext__BUS_DEVICE_EXTENSION"} {:fieldname "pfn61883ResetContext"} pfn61883ResetContext__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.pfn61883ResetContext__COMMON_DEVICE_EXTENSION"} {:fieldname "pfn61883ResetContext"} pfn61883ResetContext__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.pfn61883ResetRoutine__BUS_DEVICE_EXTENSION"} {:fieldname "pfn61883ResetRoutine"} pfn61883ResetRoutine__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.pfn61883ResetRoutine__COMMON_DEVICE_EXTENSION"} {:fieldname "pfn61883ResetRoutine"} pfn61883ResetRoutine__COMMON_DEVICE_EXTENSION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.pfnNotify__BUS_RESET_NOTIFY"} {:fieldname "pfnNotify"} pfnNotify__BUS_RESET_NOTIFY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.sdv_derived_object_CAvSyncIrp"} {:fieldname "sdv_derived_object"} sdv_derived_object_CAvSyncIrp(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.sdv_derived_object_CAvcCommandIrb"} {:fieldname "sdv_derived_object"} sdv_derived_object_CAvcCommandIrb(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.sdv_derived_object_CAvcSubunitAddress"} {:fieldname "sdv_derived_object"} sdv_derived_object_CAvcSubunitAddress(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.sdv_derived_object_CConnectionMgr"} {:fieldname "sdv_derived_object"} sdv_derived_object_CConnectionMgr(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.sdv_hash_749604085_CAvcCommandIrb"} {:fieldname "sdv_hash_749604085"} sdv_hash_749604085_CAvcCommandIrb(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.u__IRB"} {:fieldname "u"} u__IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulModelLength__GET_UNIT_IDS"} {:fieldname "ulModelLength"} ulModelLength__GET_UNIT_IDS(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.ulUnitModelLength__GET_UNIT_IDS"} {:fieldname "ulUnitModelLength"} ulUnitModelLength__GET_UNIT_IDS(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ulVendorLength__GET_UNIT_IDS"} {:fieldname "ulVendorLength"} ulVendorLength__GET_UNIT_IDS(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ulWorkAround__BUS_DEVICE_EXTENSION"} {:fieldname "ulWorkAround"} ulWorkAround__BUS_DEVICE_EXTENSION(x: int) : int
{
  x + 260
}

const {:string " "} unique strConst__li2bpl20: int;

const {:string "&"} unique strConst__li2bpl25: int;

const {:string "&DV"} unique strConst__li2bpl29: int;

const {:string "&ID_"} unique strConst__li2bpl28: int;

const {:string "&TYP_"} unique strConst__li2bpl27: int;

const {:string "AV/C Audio"} unique strConst__li2bpl1: int;

const {:string "AV/C Bulletin Board"} unique strConst__li2bpl9: int;

const {:string "AV/C Camera"} unique strConst__li2bpl7: int;

const {:string "AV/C Camera Storage"} unique strConst__li2bpl10: int;

const {:string "AV/C Conditional Access"} unique strConst__li2bpl6: int;

const {:string "AV/C Disc Recorder/Player"} unique strConst__li2bpl3: int;

const {:string "AV/C Monitor"} unique strConst__li2bpl0: int;

const {:string "AV/C Multifunction Device"} unique strConst__li2bpl11: int;

const {:string "AV/C Panel"} unique strConst__li2bpl8: int;

const {:string "AV/C Printer"} unique strConst__li2bpl2: int;

const {:string "AV/C Subunit"} unique strConst__li2bpl12: int;

const {:string "AV/C Tape Recorder/Player"} unique strConst__li2bpl4: int;

const {:string "AV/C Tuner"} unique strConst__li2bpl5: int;

const {:string "AVC\\"} unique strConst__li2bpl21: int;

const {:string "AvcFlags"} unique strConst__li2bpl19: int;

const {:string "CAMCORDER"} unique strConst__li2bpl23: int;

const {:string "GENERIC"} unique strConst__li2bpl30: int;

const {:string "MOD_"} unique strConst__li2bpl26: int;

const {:string "TYP_"} unique strConst__li2bpl31: int;

const {:string "The dispatch routine return when STATUS_PENDING is set for IRP->IoStatus.Status."} unique strConst__li2bpl15: int;

const {:string "The dispatch routine's return should not return STATUS_SUCCESS if the lower driver fails the IRP."} unique strConst__li2bpl17: int;

const {:string "The dispatch routine's return value does not match that of the IRP->IoStatus.Status."} unique strConst__li2bpl16: int;

const {:string "VAVC\\"} unique strConst__li2bpl22: int;

const {:string "VEN_"} unique strConst__li2bpl24: int;

const {:string "Virtual Device List"} unique strConst__li2bpl18: int;

const {:string "X"} unique strConst__li2bpl32: int;

const {:string "caller"} unique strConst__li2bpl13: int;

const {:string "halt"} unique strConst__li2bpl14: int;

const {:allocated} li2bplFunctionConstant1025: int;

axiom li2bplFunctionConstant1025 == 1025;

const {:allocated} li2bplFunctionConstant1027: int;

axiom li2bplFunctionConstant1027 == 1027;

const {:allocated} li2bplFunctionConstant1030: int;

axiom li2bplFunctionConstant1030 == 1030;

const {:allocated} li2bplFunctionConstant356: int;

axiom li2bplFunctionConstant356 == 356;

const {:allocated} li2bplFunctionConstant374: int;

axiom li2bplFunctionConstant374 == 374;

const {:allocated} li2bplFunctionConstant485: int;

axiom li2bplFunctionConstant485 == 485;

const {:allocated} li2bplFunctionConstant517: int;

axiom li2bplFunctionConstant517 == 517;

const {:allocated} li2bplFunctionConstant519: int;

axiom li2bplFunctionConstant519 == 519;

const {:allocated} li2bplFunctionConstant769: int;

axiom li2bplFunctionConstant769 == 769;

const {:allocated} li2bplFunctionConstant783: int;

axiom li2bplFunctionConstant783 == 783;

const {:allocated} li2bplFunctionConstant785: int;

axiom li2bplFunctionConstant785 == 785;

const {:allocated} li2bplFunctionConstant786: int;

axiom li2bplFunctionConstant786 == 786;

const {:allocated} li2bplFunctionConstant788: int;

axiom li2bplFunctionConstant788 == 788;

const {:allocated} li2bplFunctionConstant791: int;

axiom li2bplFunctionConstant791 == 791;

const {:allocated} li2bplFunctionConstant797: int;

axiom li2bplFunctionConstant797 == 797;

const {:allocated} li2bplFunctionConstant798: int;

axiom li2bplFunctionConstant798 == 798;

const {:allocated} li2bplFunctionConstant811: int;

axiom li2bplFunctionConstant811 == 811;

const {:allocated} li2bplFunctionConstant813: int;

axiom li2bplFunctionConstant813 == 813;

const {:allocated} li2bplFunctionConstant832: int;

axiom li2bplFunctionConstant832 == 832;

const {:allocated} li2bplFunctionConstant842: int;

axiom li2bplFunctionConstant842 == 842;

const {:allocated} li2bplFunctionConstant843: int;

axiom li2bplFunctionConstant843 == 843;

const {:allocated} li2bplFunctionConstant847: int;

axiom li2bplFunctionConstant847 == 847;

const {:allocated} li2bplFunctionConstant850: int;

axiom li2bplFunctionConstant850 == 850;

const {:allocated} li2bplFunctionConstant859: int;

axiom li2bplFunctionConstant859 == 859;

const {:allocated} li2bplFunctionConstant937: int;

axiom li2bplFunctionConstant937 == 937;

const {:allocated} li2bplFunctionConstant938: int;

axiom li2bplFunctionConstant938 == 938;

const {:allocated} li2bplFunctionConstant939: int;

axiom li2bplFunctionConstant939 == 939;

const {:allocated} li2bplFunctionConstant940: int;

axiom li2bplFunctionConstant940 == 940;

const {:allocated} li2bplFunctionConstant942: int;

axiom li2bplFunctionConstant942 == 942;

implementation {:origName "Avc_BusResetCallback_sdv_static_function_5"} Avc_BusResetCallback_sdv_static_function_5#0(actual_Context_6: int, actual_BusResetInfo: int)
{
  var {:pointer} PdoData_8: int;
  var {:scalar} sdv_577: int;
  var {:pointer} Command_23: int;
  var {:scalar} sdv_578: int;
  var {:scalar} OldIrql_15: int;
  var {:pointer} PdoExtension_5: int;
  var {:pointer} Tmp_825: int;
  var {:pointer} sdv_580: int;
  var {:pointer} Command_24: int;
  var {:pointer} Entry_10: int;
  var {:pointer} BusExtension_18: int;
  var {:pointer} Tmp_826: int;
  var {:pointer} Context_6: int;
  var {:pointer} BusResetInfo: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;

  anon0:
    call {:si_unique_call 1786} vslice_dummy_var_333 := __HAVOC_malloc(4);
    Context_6 := actual_Context_6;
    BusResetInfo := actual_BusResetInfo;
    BusExtension_18 := Context_6;
    call {:si_unique_call 1787} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1788} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    call {:si_unique_call 1789} sdv_RtlCopyMemory(0, 0, 8);
    call {:si_unique_call 1790} sdv_KeReleaseSpinLock(0, OldIrql_15);
    call {:si_unique_call 1791} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1792} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    assume false;
    return;

  anon23_Then:
    goto L20;

  L20:
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    goto L24;

  L24:
    call {:si_unique_call 1793} sdv_KeReleaseSpinLock(0, OldIrql_15);
    call {:si_unique_call 1794} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1795} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    havoc PdoData_8;
    goto L34;

  L34:
    call {:si_unique_call 1796} PdoData_8, OldIrql_15, PdoExtension_5, Tmp_825, Tmp_826 := Avc_BusResetCallback_sdv_static_function_5#0_loop_L34(PdoData_8, OldIrql_15, PdoExtension_5, Tmp_825, Tmp_826);
    goto L34_last;

  L34_last:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    havoc Tmp_825;
    assume {:nonnull} Tmp_825 != 0;
    assume Tmp_825 > 0;
    havoc PdoExtension_5;
    call {:si_unique_call 1797} sdv_KeReleaseSpinLock(0, OldIrql_15);
    call {:si_unique_call 1798} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1799} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    assume false;
    return;

  anon28_Then:
    goto L47;

  L47:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto L51;

  L51:
    call {:si_unique_call 1800} sdv_KeReleaseSpinLock(0, OldIrql_15);
    call {:si_unique_call 1801} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1802} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    goto L37;

  L37:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    havoc PdoData_8;
    goto L37_dummy;

  L37_dummy:
    assume false;
    return;

  anon29_Then:
    goto L51;

  anon27_Then:
    goto L37;

  anon25_Then:
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L63;

  L63:
    call {:si_unique_call 1803} sdv_KeReleaseSpinLock(0, OldIrql_15);
    return;

  anon26_Then:
    call {:si_unique_call 1804} sdv_577 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_577 == 0;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    havoc Entry_10;
    goto L69;

  L69:
    call {:si_unique_call 1805} Command_24, Entry_10, vslice_dummy_var_334, vslice_dummy_var_335 := Avc_BusResetCallback_sdv_static_function_5#0_loop_L69(Command_24, Entry_10, BusExtension_18, vslice_dummy_var_334, vslice_dummy_var_335);
    goto L69_last;

  L69_last:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    Command_24 := Entry_10;
    assume {:nonnull} Entry_10 != 0;
    assume Entry_10 > 0;
    havoc Entry_10;
    assume {:nonnull} Command_24 != 0;
    assume Command_24 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 1806} vslice_dummy_var_334 := sdv_RemoveEntryList(0);
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    call {:si_unique_call 1807} vslice_dummy_var_335 := sdv_InsertTailList(CleanupList__BUS_DEVICE_EXTENSION(BusExtension_18), Command_24);
    assume {:nonnull} Command_24 != 0;
    assume Command_24 > 0;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    assume false;
    return;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon31_Then:
    goto L70;

  L70:
    call {:si_unique_call 1808} Command_23, sdv_578, OldIrql_15, sdv_580, Tmp_826 := Avc_BusResetCallback_sdv_static_function_5#0_loop_L70(Command_23, sdv_578, OldIrql_15, sdv_580, BusExtension_18, Tmp_826);
    goto L70_last;

  L70_last:
    call {:si_unique_call 1816} sdv_578 := sdv_IsListEmpty(0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_578 == 0;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    call {:si_unique_call 1809} sdv_580 := RemoveHeadList(CleanupList__BUS_DEVICE_EXTENSION(BusExtension_18));
    Command_23 := sdv_580;
    call {:si_unique_call 1810} InitializeListHead(Command_23);
    call {:si_unique_call 1811} sdv_KeReleaseSpinLock(0, OldIrql_15);
    call {:si_unique_call 1812} AvcPendingIrpCompletion(Command_23);
    call {:si_unique_call 1813} AvcFreeCommandContext(Command_23);
    call {:si_unique_call 1814} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1815} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    assume false;
    return;

  anon32_Then:
    assume {:partition} sdv_578 != 0;
    goto L63;

  anon30_Then:
    assume {:partition} sdv_577 != 0;
    goto L63;

  anon24_Then:
    goto L24;
}



procedure {:origName "Avc_BusResetCallback_sdv_static_function_5"} Avc_BusResetCallback_sdv_static_function_5#0(actual_Context_6: int, actual_BusResetInfo: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "Avc_BusResetCallback_sdv_static_function_5"} Avc_BusResetCallback_sdv_static_function_5#1(actual_Context_6: int, actual_BusResetInfo: int)
{
  var {:pointer} PdoData_8: int;
  var {:scalar} sdv_577: int;
  var {:pointer} Command_23: int;
  var {:scalar} sdv_578: int;
  var {:scalar} OldIrql_15: int;
  var {:pointer} PdoExtension_5: int;
  var {:pointer} Tmp_825: int;
  var {:pointer} sdv_580: int;
  var {:pointer} Command_24: int;
  var {:pointer} Entry_10: int;
  var {:pointer} BusExtension_18: int;
  var {:pointer} Tmp_826: int;
  var {:pointer} Context_6: int;
  var {:pointer} BusResetInfo: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_2712: int;
  var vslice_dummy_var_2713: int;

  anon0:
    call {:si_unique_call 1817} vslice_dummy_var_336 := __HAVOC_malloc(4);
    Context_6 := actual_Context_6;
    BusResetInfo := actual_BusResetInfo;
    BusExtension_18 := Context_6;
    call {:si_unique_call 1818} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1819} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    call {:si_unique_call 1820} sdv_RtlCopyMemory(0, 0, 8);
    call {:si_unique_call 1821} sdv_KeReleaseSpinLock(0, OldIrql_15);
    call {:si_unique_call 1822} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1823} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    havoc vslice_dummy_var_2712;
    call {:si_unique_call 1824} Avc_BusResetCallback_sdv_static_function_5#0(vslice_dummy_var_2712, BusResetInfo);
    goto L20;

  L20:
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    goto L24;

  L24:
    call {:si_unique_call 1825} sdv_KeReleaseSpinLock(0, OldIrql_15);
    call {:si_unique_call 1826} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1827} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    havoc PdoData_8;
    goto L34;

  L34:
    call {:si_unique_call 1828} PdoData_8, OldIrql_15, PdoExtension_5, Tmp_825, Tmp_826 := Avc_BusResetCallback_sdv_static_function_5#1_loop_L34(PdoData_8, OldIrql_15, PdoExtension_5, Tmp_825, Tmp_826, BusResetInfo);
    goto L34_last;

  L34_last:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    havoc Tmp_825;
    assume {:nonnull} Tmp_825 != 0;
    assume Tmp_825 > 0;
    havoc PdoExtension_5;
    call {:si_unique_call 1829} sdv_KeReleaseSpinLock(0, OldIrql_15);
    call {:si_unique_call 1830} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1831} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    havoc vslice_dummy_var_2713;
    call {:si_unique_call 1832} Avc_BusResetCallback_sdv_static_function_5#0(vslice_dummy_var_2713, BusResetInfo);
    goto L47;

  L47:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto L51;

  L51:
    call {:si_unique_call 1833} sdv_KeReleaseSpinLock(0, OldIrql_15);
    call {:si_unique_call 1834} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1835} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    goto L37;

  L37:
    assume {:nonnull} PdoData_8 != 0;
    assume PdoData_8 > 0;
    havoc PdoData_8;
    goto L37_dummy;

  L37_dummy:
    assume false;
    return;

  anon29_Then:
    goto L51;

  anon28_Then:
    goto L47;

  anon27_Then:
    goto L37;

  anon25_Then:
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L63;

  L63:
    call {:si_unique_call 1836} sdv_KeReleaseSpinLock(0, OldIrql_15);
    return;

  anon26_Then:
    call {:si_unique_call 1837} sdv_577 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_577 == 0;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    havoc Entry_10;
    goto L69;

  L69:
    call {:si_unique_call 1838} Command_24, Entry_10, vslice_dummy_var_337, vslice_dummy_var_338 := Avc_BusResetCallback_sdv_static_function_5#1_loop_L69(Command_24, Entry_10, BusExtension_18, vslice_dummy_var_337, vslice_dummy_var_338);
    goto L69_last;

  L69_last:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    Command_24 := Entry_10;
    assume {:nonnull} Entry_10 != 0;
    assume Entry_10 > 0;
    havoc Entry_10;
    assume {:nonnull} Command_24 != 0;
    assume Command_24 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 1839} vslice_dummy_var_337 := sdv_RemoveEntryList(0);
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    call {:si_unique_call 1840} vslice_dummy_var_338 := sdv_InsertTailList(CleanupList__BUS_DEVICE_EXTENSION(BusExtension_18), Command_24);
    assume {:nonnull} Command_24 != 0;
    assume Command_24 > 0;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    assume false;
    return;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon31_Then:
    goto L70;

  L70:
    call {:si_unique_call 1841} Command_23, sdv_578, OldIrql_15, sdv_580, Tmp_826 := Avc_BusResetCallback_sdv_static_function_5#1_loop_L70(Command_23, sdv_578, OldIrql_15, sdv_580, BusExtension_18, Tmp_826);
    goto L70_last;

  L70_last:
    call {:si_unique_call 1849} sdv_578 := sdv_IsListEmpty(0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_578 == 0;
    assume {:nonnull} BusExtension_18 != 0;
    assume BusExtension_18 > 0;
    call {:si_unique_call 1842} sdv_580 := RemoveHeadList(CleanupList__BUS_DEVICE_EXTENSION(BusExtension_18));
    Command_23 := sdv_580;
    call {:si_unique_call 1843} InitializeListHead(Command_23);
    call {:si_unique_call 1844} sdv_KeReleaseSpinLock(0, OldIrql_15);
    call {:si_unique_call 1845} AvcPendingIrpCompletion(Command_23);
    call {:si_unique_call 1846} AvcFreeCommandContext(Command_23);
    call {:si_unique_call 1847} Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    call {:si_unique_call 1848} sdv_KeAcquireSpinLock(0, Tmp_826);
    assume {:nonnull} Tmp_826 != 0;
    assume Tmp_826 > 0;
    havoc OldIrql_15;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    assume false;
    return;

  anon32_Then:
    assume {:partition} sdv_578 != 0;
    goto L63;

  anon30_Then:
    assume {:partition} sdv_577 != 0;
    goto L63;

  anon24_Then:
    goto L24;

  anon23_Then:
    goto L20;
}



procedure {:origName "Avc_BusResetCallback_sdv_static_function_5"} Avc_BusResetCallback_sdv_static_function_5#1(actual_Context_6: int, actual_BusResetInfo: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcRequestCompletion_sdv_static_function_7"} AvcRequestCompletion_sdv_static_function_7#0(actual_DeviceObject_11: int, actual_Irp_17: int, actual_DevExtIn: int) returns (Tmp_343: int)
{
  var {:pointer} PdoData_1: int;
  var {:pointer} Tmp_344: int;
  var {:pointer} SubunitAddr_7: int;
  var {:scalar} CommandType: int;
  var {:dopa} {:scalar} Offset_2: int;
  var {:pointer} TargetExt: int;
  var {:pointer} Tmp_345: int;
  var {:pointer} FdoEntry: int;
  var {:scalar} sdv_210: int;
  var {:pointer} Entry_2: int;
  var {:scalar} Status_9: int;
  var {:pointer} DevExt_11: int;
  var {:pointer} Tmp_346: int;
  var {:scalar} sdv_211: int;
  var {:scalar} HandlerFound: int;
  var {:scalar} OldIrql_6: int;
  var {:pointer} TargetExt_1: int;
  var {:pointer} NextIrpStack_3: int;
  var {:scalar} GenerationCount: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} sdv_218: int;
  var {:scalar} Tmp_348: int;
  var {:pointer} Command_10: int;
  var {:pointer} Entry_3: int;
  var {:scalar} sdv_219: int;
  var {:scalar} SubunitFound: int;
  var {:pointer} sdv_220: int;
  var {:scalar} Opcode_1: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_17: int;
  var {:pointer} DevExtIn: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_2714: int;
  var vslice_dummy_var_2715: int;
  var vslice_dummy_var_2716: int;
  var vslice_dummy_var_2717: int;
  var vslice_dummy_var_2718: int;
  var vslice_dummy_var_2719: int;

  anon0:
    call {:si_unique_call 1850} Offset_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1851} Command_10 := __HAVOC_malloc(4);
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_17 := actual_Irp_17;
    DevExtIn := actual_DevExtIn;
    call {:si_unique_call 1852} Tmp_344 := __HAVOC_malloc(2048);
    call {:si_unique_call 1853} Tmp_345 := __HAVOC_malloc(2048);
    call {:si_unique_call 1854} Tmp_346 := __HAVOC_malloc(2048);
    DevExt_11 := DevExtIn;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc GenerationCount;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_17))] != 0;
    goto L17;

  L17:
    call {:si_unique_call 1855} Tmp_347 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    call {:si_unique_call 1856} sdv_KeAcquireSpinLock(0, Tmp_347);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    havoc OldIrql_6;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    goto L21;

  L21:
    call {:si_unique_call 1857} IoFreeIrp(0);
    call {:si_unique_call 1858} sdv_KeReleaseSpinLock(0, OldIrql_6);
    call {:si_unique_call 1859} AvcStopAllFCPProcessing(DevExt_11);
    goto L12;

  L12:
    Tmp_343 := -1073741802;
    return;

  anon54_Then:
    goto L21;

  anon53_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_17))] == 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    call {:si_unique_call 1860} sdv_210 := AvcAcquireRemoveLock(RemoveLock__BUS_DEVICE_EXTENSION(DevExt_11));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_210 >= 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc Tmp_346;
    SubunitAddr_7 := Tmp_346 + 1 * 4;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    call {:si_unique_call 1861} Status_9 := AvcValidateSubunitAddress(SubunitAddr_7, 32, Offset_2);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Status_9 == 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc Tmp_345;
    assume {:nonnull} Tmp_345 != 0;
    assume Tmp_345 > 0;
    havoc CommandType;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    havoc Tmp_348;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc Tmp_344;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    havoc Opcode_1;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    assume {:nonnull} SubunitAddr_7 != 0;
    assume SubunitAddr_7 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 1862} HandlerFound := AvcSearchForUnitCommandHandler_sdv_static_function_7(DevExt_11, Opcode_1, Command_10);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} HandlerFound == 0;
    call {:si_unique_call 1863} Tmp_347 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    call {:si_unique_call 1864} sdv_KeAcquireSpinLock(0, Tmp_347);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    havoc OldIrql_6;
    havoc Entry_2;
    goto L183;

  L183:
    call {:si_unique_call 1865} TargetExt, Entry_2, HandlerFound, sdv_220 := AvcRequestCompletion_sdv_static_function_7#0_loop_L183(TargetExt, Entry_2, DevExt_11, HandlerFound, Command_10, sdv_220, Opcode_1);
    goto L183_last;

  L183_last:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} HandlerFound == 0;
    call {:si_unique_call 1866} sdv_220 := sdv_containing_record(Entry_2, 72);
    TargetExt := sdv_220;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} TargetExt != DevExt_11;
    call {:si_unique_call 1867} HandlerFound := AvcSearchForUnitCommandHandler_sdv_static_function_7(TargetExt, Opcode_1, Command_10);
    goto L194;

  L194:
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc Entry_2;
    goto L194_dummy;

  L194_dummy:
    assume false;
    return;

  anon78_Then:
    assume {:partition} TargetExt == DevExt_11;
    goto L194;

  anon72_Then:
    assume {:partition} HandlerFound != 0;
    goto L184;

  L184:
    call {:si_unique_call 1868} sdv_KeReleaseSpinLock(0, OldIrql_6);
    goto L175;

  L175:
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    call {:si_unique_call 1869} AvcHandleUnitCommand_sdv_static_function_7#0(DeviceObject_11, DevExt_11);
    goto L150;

  L150:
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc vslice_dummy_var_2714;
    call {:si_unique_call 1870} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2714);
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    havoc vslice_dummy_var_2715;
    call {:si_unique_call 1871} AvcPendingIrpCompletion(vslice_dummy_var_2715);
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    havoc vslice_dummy_var_2716;
    call {:si_unique_call 1872} AvcFreeCommandContext(vslice_dummy_var_2716);
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto L46;

  L46:
    call {:si_unique_call 1873} Tmp_347 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    call {:si_unique_call 1874} sdv_KeAcquireSpinLock(0, Tmp_347);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    havoc OldIrql_6;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    call {:si_unique_call 1875} IoFreeIrp(0);
    Irp_17 := 0;
    goto L57;

  L57:
    call {:si_unique_call 1876} sdv_KeReleaseSpinLock(0, OldIrql_6);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Irp_17 != 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    call {:si_unique_call 1877} NextIrpStack_3 := sdv_IoGetNextIrpStackLocation(Irp_17);
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_3)] := 15;
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume Irp_17 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1878} SLIC_sdv_IoSetCompletionRoutine_entry(0);
    goto L227;

  L227:
    call {:si_unique_call 1879} sdv_IoSetCompletionRoutine(Irp_17, li2bplFunctionConstant847, DevExt_11, 1, 1, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume Irp_17 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1880} SLIC_sdv_IoCallDriver_entry(0);
    goto L230;

  L230:
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume false;
    return;

  anon59_Then:
    assume !(Irp_17 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L230;

  anon75_Then:
    assume !(Irp_17 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L227;

  anon58_Then:
    assume {:partition} Irp_17 == 0;
    goto L61;

  L61:
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    call {:si_unique_call 1881} AvcReleaseRemoveLock(RemoveLock__BUS_DEVICE_EXTENSION(DevExt_11));
    goto L12;

  anon57_Then:
    call {:si_unique_call 1882} IoReuseIrp(Irp_17, -1073741637);
    goto L57;

  anon68_Then:
    goto L46;

  anon70_Then:
    goto L150;

  anon71_Then:
    goto L184;

  anon69_Then:
    assume {:partition} HandlerFound != 0;
    goto L175;

  anon76_Then:
    SubunitFound := 0;
    call {:si_unique_call 1883} Tmp_347 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    call {:si_unique_call 1884} sdv_KeAcquireSpinLock(0, Tmp_347);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    havoc OldIrql_6;
    havoc FdoEntry;
    goto L97;

  L97:
    call {:si_unique_call 1885} PdoData_1, FdoEntry, sdv_211, TargetExt_1, sdv_218, Entry_3, sdv_219, SubunitFound, vslice_dummy_var_339 := AvcRequestCompletion_sdv_static_function_7#0_loop_L97(PdoData_1, SubunitAddr_7, FdoEntry, sdv_211, TargetExt_1, sdv_218, Command_10, Entry_3, sdv_219, SubunitFound, vslice_dummy_var_339);
    goto L97_last;

  L97_last:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} SubunitFound == 0;
    call {:si_unique_call 1886} sdv_218 := sdv_containing_record(FdoEntry, 72);
    TargetExt_1 := sdv_218;
    PdoData_1 := 0;
    call {:si_unique_call 1887} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} TargetExt_1 != 0;
    assume TargetExt_1 > 0;
    havoc Entry_3;
    goto L114;

  L114:
    call {:si_unique_call 1888} PdoData_1, sdv_211, Entry_3 := AvcRequestCompletion_sdv_static_function_7#0_loop_L114(PdoData_1, SubunitAddr_7, sdv_211, Entry_3);
    goto L114_last;

  L114_last:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    PdoData_1 := Entry_3;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc vslice_dummy_var_2717;
    call {:si_unique_call 1889} sdv_211 := AvcSubunitAddrsEqual(SubunitAddr_7, vslice_dummy_var_2717);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_211 == 0;
    PdoData_1 := 0;
    assume {:nonnull} Entry_3 != 0;
    assume Entry_3 > 0;
    havoc Entry_3;
    goto anon64_Else_dummy;

  anon64_Else_dummy:
    assume false;
    return;

  anon64_Then:
    assume {:partition} sdv_211 != 0;
    goto L115;

  L115:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} PdoData_1 != 0;
    SubunitFound := 1;
    assume {:nonnull} TargetExt_1 != 0;
    assume TargetExt_1 > 0;
    havoc Entry_3;
    goto L129;

  L129:
    call {:si_unique_call 1890} Entry_3, sdv_219 := AvcRequestCompletion_sdv_static_function_7#0_loop_L129(SubunitAddr_7, Command_10, Entry_3, sdv_219);
    goto L129_last;

  L129_last:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto L135;

  L135:
    assume {:nonnull} Entry_3 != 0;
    assume Entry_3 > 0;
    havoc Entry_3;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto L135_dummy;

  L135_dummy:
    assume false;
    return;

  anon77_Then:
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    havoc vslice_dummy_var_2718;
    call {:si_unique_call 1891} sdv_219 := AvcSubunitAddrsEqual(SubunitAddr_7, vslice_dummy_var_2718);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_219 != 0;
    call {:si_unique_call 1892} vslice_dummy_var_339 := sdv_RemoveEntryList(0);
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    havoc vslice_dummy_var_2719;
    call {:si_unique_call 1893} InitializeListHead(vslice_dummy_var_2719);
    goto L124;

  L124:
    call {:si_unique_call 1894} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} FdoEntry != 0;
    assume FdoEntry > 0;
    havoc FdoEntry;
    goto L124_dummy;

  L124_dummy:
    assume false;
    return;

  anon66_Then:
    assume {:partition} sdv_219 == 0;
    goto L135;

  anon65_Then:
    goto L124;

  anon63_Then:
    assume {:partition} PdoData_1 == 0;
    goto L124;

  anon62_Then:
    goto L115;

  anon61_Then:
    assume {:partition} SubunitFound != 0;
    goto L98;

  L98:
    call {:si_unique_call 1895} sdv_KeReleaseSpinLock(0, OldIrql_6);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} SubunitFound != 0;
    goto L150;

  anon67_Then:
    assume {:partition} SubunitFound == 0;
    call {:si_unique_call 1896} AvcLocalResponse_sdv_static_function_7#0(DeviceObject_11, DevExt_11, 8);
    goto L150;

  anon60_Then:
    goto L98;

  anon56_Then:
    assume {:partition} Status_9 != 0;
    call {:si_unique_call 1897} AvcLocalResponse_sdv_static_function_7#0(DeviceObject_11, DevExt_11, 8);
    goto L46;

  anon55_Then:
    assume {:partition} 0 > sdv_210;
    goto L17;

  anon74_Then:
    call {:si_unique_call 1898} IoFreeIrp(0);
    goto L12;
}



procedure {:origName "AvcRequestCompletion_sdv_static_function_7"} AvcRequestCompletion_sdv_static_function_7#0(actual_DeviceObject_11: int, actual_Irp_17: int, actual_DevExtIn: int) returns (Tmp_343: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} thread_status == old(thread_status);
  free ensures {:va_keep} irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_343 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcRequestCompletion_sdv_static_function_7"} AvcRequestCompletion_sdv_static_function_7#1(actual_DeviceObject_11: int, actual_Irp_17: int, actual_DevExtIn: int) returns (Tmp_343: int)
{
  var {:pointer} PdoData_1: int;
  var {:pointer} Tmp_344: int;
  var {:pointer} SubunitAddr_7: int;
  var {:scalar} CommandType: int;
  var {:dopa} {:scalar} Offset_2: int;
  var {:pointer} TargetExt: int;
  var {:pointer} Tmp_345: int;
  var {:pointer} FdoEntry: int;
  var {:scalar} sdv_210: int;
  var {:pointer} Entry_2: int;
  var {:scalar} Status_9: int;
  var {:pointer} DevExt_11: int;
  var {:pointer} Tmp_346: int;
  var {:scalar} sdv_211: int;
  var {:scalar} HandlerFound: int;
  var {:scalar} OldIrql_6: int;
  var {:pointer} TargetExt_1: int;
  var {:pointer} NextIrpStack_3: int;
  var {:scalar} GenerationCount: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} sdv_218: int;
  var {:scalar} Tmp_348: int;
  var {:pointer} Command_10: int;
  var {:pointer} Entry_3: int;
  var {:scalar} sdv_219: int;
  var {:scalar} SubunitFound: int;
  var {:pointer} sdv_220: int;
  var {:scalar} Opcode_1: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_17: int;
  var {:pointer} DevExtIn: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_2720: int;
  var vslice_dummy_var_2721: int;
  var vslice_dummy_var_2722: int;
  var vslice_dummy_var_2723: int;
  var vslice_dummy_var_2724: int;
  var vslice_dummy_var_2725: int;
  var vslice_dummy_var_2726: int;

  anon0:
    call {:si_unique_call 1899} Offset_2 := __HAVOC_malloc(4);
    call {:si_unique_call 1900} Command_10 := __HAVOC_malloc(4);
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_17 := actual_Irp_17;
    DevExtIn := actual_DevExtIn;
    call {:si_unique_call 1901} Tmp_344 := __HAVOC_malloc(2048);
    call {:si_unique_call 1902} Tmp_345 := __HAVOC_malloc(2048);
    call {:si_unique_call 1903} Tmp_346 := __HAVOC_malloc(2048);
    DevExt_11 := DevExtIn;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc GenerationCount;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_17))] != 0;
    goto L17;

  L17:
    call {:si_unique_call 1904} Tmp_347 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    call {:si_unique_call 1905} sdv_KeAcquireSpinLock(0, Tmp_347);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    havoc OldIrql_6;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    goto L21;

  L21:
    call {:si_unique_call 1906} IoFreeIrp(0);
    call {:si_unique_call 1907} sdv_KeReleaseSpinLock(0, OldIrql_6);
    call {:si_unique_call 1908} AvcStopAllFCPProcessing(DevExt_11);
    goto L12;

  L12:
    Tmp_343 := -1073741802;
    return;

  anon54_Then:
    goto L21;

  anon53_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_17))] == 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    call {:si_unique_call 1909} sdv_210 := AvcAcquireRemoveLock(RemoveLock__BUS_DEVICE_EXTENSION(DevExt_11));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_210 >= 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc Tmp_346;
    SubunitAddr_7 := Tmp_346 + 1 * 4;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    call {:si_unique_call 1910} Status_9 := AvcValidateSubunitAddress(SubunitAddr_7, 32, Offset_2);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Status_9 == 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc Tmp_345;
    assume {:nonnull} Tmp_345 != 0;
    assume Tmp_345 > 0;
    havoc CommandType;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    havoc Tmp_348;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc Tmp_344;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    havoc Opcode_1;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    assume {:nonnull} SubunitAddr_7 != 0;
    assume SubunitAddr_7 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 1911} HandlerFound := AvcSearchForUnitCommandHandler_sdv_static_function_7(DevExt_11, Opcode_1, Command_10);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} HandlerFound == 0;
    call {:si_unique_call 1912} Tmp_347 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    call {:si_unique_call 1913} sdv_KeAcquireSpinLock(0, Tmp_347);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    havoc OldIrql_6;
    havoc Entry_2;
    goto L183;

  L183:
    call {:si_unique_call 1914} TargetExt, Entry_2, HandlerFound, sdv_220 := AvcRequestCompletion_sdv_static_function_7#1_loop_L183(TargetExt, Entry_2, DevExt_11, HandlerFound, Command_10, sdv_220, Opcode_1);
    goto L183_last;

  L183_last:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} HandlerFound == 0;
    call {:si_unique_call 1915} sdv_220 := sdv_containing_record(Entry_2, 72);
    TargetExt := sdv_220;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} TargetExt != DevExt_11;
    call {:si_unique_call 1916} HandlerFound := AvcSearchForUnitCommandHandler_sdv_static_function_7(TargetExt, Opcode_1, Command_10);
    goto L194;

  L194:
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc Entry_2;
    goto L194_dummy;

  L194_dummy:
    assume false;
    return;

  anon78_Then:
    assume {:partition} TargetExt == DevExt_11;
    goto L194;

  anon72_Then:
    assume {:partition} HandlerFound != 0;
    goto L184;

  L184:
    call {:si_unique_call 1917} sdv_KeReleaseSpinLock(0, OldIrql_6);
    goto L175;

  L175:
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    call {:si_unique_call 1918} AvcHandleUnitCommand_sdv_static_function_7#1(DeviceObject_11, DevExt_11);
    goto L150;

  L150:
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc vslice_dummy_var_2720;
    call {:si_unique_call 1919} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2720);
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} Offset_2 != 0;
    assume Offset_2 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    havoc vslice_dummy_var_2721;
    call {:si_unique_call 1920} AvcPendingIrpCompletion(vslice_dummy_var_2721);
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    havoc vslice_dummy_var_2722;
    call {:si_unique_call 1921} AvcFreeCommandContext(vslice_dummy_var_2722);
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto L46;

  L46:
    call {:si_unique_call 1922} Tmp_347 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    call {:si_unique_call 1923} sdv_KeAcquireSpinLock(0, Tmp_347);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    havoc OldIrql_6;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    call {:si_unique_call 1924} IoFreeIrp(0);
    Irp_17 := 0;
    goto L57;

  L57:
    call {:si_unique_call 1925} sdv_KeReleaseSpinLock(0, OldIrql_6);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Irp_17 != 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    call {:si_unique_call 1926} NextIrpStack_3 := sdv_IoGetNextIrpStackLocation(Irp_17);
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_3)] := 15;
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    assume {:nonnull} NextIrpStack_3 != 0;
    assume NextIrpStack_3 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume Irp_17 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1927} SLIC_sdv_IoSetCompletionRoutine_entry(0);
    goto L227;

  L227:
    call {:si_unique_call 1928} sdv_IoSetCompletionRoutine(Irp_17, li2bplFunctionConstant847, DevExt_11, 1, 1, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume Irp_17 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1929} SLIC_sdv_IoCallDriver_entry(0);
    goto L230;

  L230:
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    havoc vslice_dummy_var_2723;
    call {:si_unique_call 1930} vslice_dummy_var_341 := sdv_IoCallDriver#0(vslice_dummy_var_2723, Irp_17);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume Irp_17 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1931} SLIC_sdv_IoCallDriver_exit(0, Irp_17);
    goto L61;

  L61:
    assume {:nonnull} DevExt_11 != 0;
    assume DevExt_11 > 0;
    call {:si_unique_call 1932} AvcReleaseRemoveLock(RemoveLock__BUS_DEVICE_EXTENSION(DevExt_11));
    goto L12;

  anon73_Then:
    assume !(Irp_17 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L61;

  anon59_Then:
    assume !(Irp_17 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L230;

  anon75_Then:
    assume !(Irp_17 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L227;

  anon58_Then:
    assume {:partition} Irp_17 == 0;
    goto L61;

  anon57_Then:
    call {:si_unique_call 1933} IoReuseIrp(Irp_17, -1073741637);
    goto L57;

  anon68_Then:
    goto L46;

  anon70_Then:
    goto L150;

  anon71_Then:
    goto L184;

  anon69_Then:
    assume {:partition} HandlerFound != 0;
    goto L175;

  anon76_Then:
    SubunitFound := 0;
    call {:si_unique_call 1934} Tmp_347 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    call {:si_unique_call 1935} sdv_KeAcquireSpinLock(0, Tmp_347);
    assume {:nonnull} Tmp_347 != 0;
    assume Tmp_347 > 0;
    havoc OldIrql_6;
    havoc FdoEntry;
    goto L97;

  L97:
    call {:si_unique_call 1936} PdoData_1, FdoEntry, sdv_211, TargetExt_1, sdv_218, Entry_3, sdv_219, SubunitFound, vslice_dummy_var_340 := AvcRequestCompletion_sdv_static_function_7#1_loop_L97(PdoData_1, SubunitAddr_7, FdoEntry, sdv_211, TargetExt_1, sdv_218, Command_10, Entry_3, sdv_219, SubunitFound, vslice_dummy_var_340);
    goto L97_last;

  L97_last:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} SubunitFound == 0;
    call {:si_unique_call 1937} sdv_218 := sdv_containing_record(FdoEntry, 72);
    TargetExt_1 := sdv_218;
    PdoData_1 := 0;
    call {:si_unique_call 1938} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} TargetExt_1 != 0;
    assume TargetExt_1 > 0;
    havoc Entry_3;
    goto L114;

  L114:
    call {:si_unique_call 1939} PdoData_1, sdv_211, Entry_3 := AvcRequestCompletion_sdv_static_function_7#1_loop_L114(PdoData_1, SubunitAddr_7, sdv_211, Entry_3);
    goto L114_last;

  L114_last:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    PdoData_1 := Entry_3;
    assume {:nonnull} PdoData_1 != 0;
    assume PdoData_1 > 0;
    havoc vslice_dummy_var_2724;
    call {:si_unique_call 1940} sdv_211 := AvcSubunitAddrsEqual(SubunitAddr_7, vslice_dummy_var_2724);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_211 == 0;
    PdoData_1 := 0;
    assume {:nonnull} Entry_3 != 0;
    assume Entry_3 > 0;
    havoc Entry_3;
    goto anon64_Else_dummy;

  anon64_Else_dummy:
    assume false;
    return;

  anon64_Then:
    assume {:partition} sdv_211 != 0;
    goto L115;

  L115:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} PdoData_1 != 0;
    SubunitFound := 1;
    assume {:nonnull} TargetExt_1 != 0;
    assume TargetExt_1 > 0;
    havoc Entry_3;
    goto L129;

  L129:
    call {:si_unique_call 1941} Entry_3, sdv_219 := AvcRequestCompletion_sdv_static_function_7#1_loop_L129(SubunitAddr_7, Command_10, Entry_3, sdv_219);
    goto L129_last;

  L129_last:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto L135;

  L135:
    assume {:nonnull} Entry_3 != 0;
    assume Entry_3 > 0;
    havoc Entry_3;
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    goto L135_dummy;

  L135_dummy:
    assume false;
    return;

  anon77_Then:
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    havoc vslice_dummy_var_2725;
    call {:si_unique_call 1942} sdv_219 := AvcSubunitAddrsEqual(SubunitAddr_7, vslice_dummy_var_2725);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_219 != 0;
    call {:si_unique_call 1943} vslice_dummy_var_340 := sdv_RemoveEntryList(0);
    assume {:nonnull} Command_10 != 0;
    assume Command_10 > 0;
    havoc vslice_dummy_var_2726;
    call {:si_unique_call 1944} InitializeListHead(vslice_dummy_var_2726);
    goto L124;

  L124:
    call {:si_unique_call 1945} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} FdoEntry != 0;
    assume FdoEntry > 0;
    havoc FdoEntry;
    goto L124_dummy;

  L124_dummy:
    assume false;
    return;

  anon66_Then:
    assume {:partition} sdv_219 == 0;
    goto L135;

  anon65_Then:
    goto L124;

  anon63_Then:
    assume {:partition} PdoData_1 == 0;
    goto L124;

  anon62_Then:
    goto L115;

  anon61_Then:
    assume {:partition} SubunitFound != 0;
    goto L98;

  L98:
    call {:si_unique_call 1946} sdv_KeReleaseSpinLock(0, OldIrql_6);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} SubunitFound != 0;
    goto L150;

  anon67_Then:
    assume {:partition} SubunitFound == 0;
    call {:si_unique_call 1947} AvcLocalResponse_sdv_static_function_7#1(DeviceObject_11, DevExt_11, 8);
    goto L150;

  anon60_Then:
    goto L98;

  anon56_Then:
    assume {:partition} Status_9 != 0;
    call {:si_unique_call 1948} AvcLocalResponse_sdv_static_function_7#1(DeviceObject_11, DevExt_11, 8);
    goto L46;

  anon55_Then:
    assume {:partition} 0 > sdv_210;
    goto L17;

  anon74_Then:
    call {:si_unique_call 1949} IoFreeIrp(0);
    goto L12;
}



procedure {:origName "AvcRequestCompletion_sdv_static_function_7"} AvcRequestCompletion_sdv_static_function_7#1(actual_DeviceObject_11: int, actual_Irp_17: int, actual_DevExtIn: int) returns (Tmp_343: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_343 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcLocalResponse_sdv_static_function_7"} AvcLocalResponse_sdv_static_function_7#0(actual_DeviceObject_12: int, actual_DevExt_16: int, actual_ResponseCode: int)
{
  var {:pointer} Tmp_370: int;
  var {:pointer} Tmp_371: int;
  var {:pointer} Irp_19: int;
  var {:scalar} Tmp_372: int;
  var {:pointer} Tmp_373: int;
  var {:pointer} sdv_248: int;
  var {:pointer} NextIrpStack_5: int;
  var {:pointer} Response_3: int;
  var {:pointer} DevExt_16: int;
  var {:scalar} ResponseCode: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_2727: int;

  anon0:
    call {:si_unique_call 1950} vslice_dummy_var_342 := __HAVOC_malloc(4);
    DevExt_16 := actual_DevExt_16;
    ResponseCode := actual_ResponseCode;
    call {:si_unique_call 1951} Tmp_370 := __HAVOC_malloc(2048);
    call {:si_unique_call 1952} Tmp_371 := __HAVOC_malloc(2048);
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    havoc vslice_dummy_var_2727;
    call {:si_unique_call 1953} Irp_19 := IoAllocateIrp(vslice_dummy_var_2727, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Irp_19 != 0;
    call {:si_unique_call 1954} sdv_248 := sdv_ExAllocateFromNPagedLookasideList(0);
    Response_3 := sdv_248;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Response_3 != 0;
    call {:si_unique_call 1955} sdv_RtlCopyMemory(0, 0, 512);
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    havoc Tmp_370;
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    havoc Tmp_372;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    havoc Tmp_371;
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_19))] := -1073741637;
    call {:si_unique_call 1956} NextIrpStack_5 := sdv_IoGetNextIrpStackLocation(Irp_19);
    assume {:nonnull} NextIrpStack_5 != 0;
    assume NextIrpStack_5 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_5)] := 15;
    assume {:nonnull} NextIrpStack_5 != 0;
    assume NextIrpStack_5 > 0;
    assume {:nonnull} NextIrpStack_5 != 0;
    assume NextIrpStack_5 > 0;
    call {:si_unique_call 1957} sdv_IoSetCompletionRoutine(Irp_19, li2bplFunctionConstant843, Response_3, 1, 1, 1);
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    assume false;
    return;

  anon6_Then:
    assume {:partition} Response_3 == 0;
    call {:si_unique_call 1958} IoFreeIrp(0);
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} Irp_19 == 0;
    goto L1;
}



procedure {:origName "AvcLocalResponse_sdv_static_function_7"} AvcLocalResponse_sdv_static_function_7#0(actual_DeviceObject_12: int, actual_DevExt_16: int, actual_ResponseCode: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcLocalResponse_sdv_static_function_7"} AvcLocalResponse_sdv_static_function_7#1(actual_DeviceObject_12: int, actual_DevExt_16: int, actual_ResponseCode: int)
{
  var {:pointer} Tmp_370: int;
  var {:pointer} Tmp_371: int;
  var {:pointer} Irp_19: int;
  var {:scalar} Tmp_372: int;
  var {:pointer} Tmp_373: int;
  var {:pointer} sdv_248: int;
  var {:pointer} NextIrpStack_5: int;
  var {:pointer} Response_3: int;
  var {:pointer} DevExt_16: int;
  var {:scalar} ResponseCode: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_2728: int;
  var vslice_dummy_var_2729: int;

  anon0:
    call {:si_unique_call 1959} vslice_dummy_var_343 := __HAVOC_malloc(4);
    DevExt_16 := actual_DevExt_16;
    ResponseCode := actual_ResponseCode;
    call {:si_unique_call 1960} Tmp_370 := __HAVOC_malloc(2048);
    call {:si_unique_call 1961} Tmp_371 := __HAVOC_malloc(2048);
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    havoc vslice_dummy_var_2728;
    call {:si_unique_call 1962} Irp_19 := IoAllocateIrp(vslice_dummy_var_2728, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Irp_19 != 0;
    call {:si_unique_call 1963} sdv_248 := sdv_ExAllocateFromNPagedLookasideList(0);
    Response_3 := sdv_248;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Response_3 != 0;
    call {:si_unique_call 1964} sdv_RtlCopyMemory(0, 0, 512);
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    havoc Tmp_370;
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    havoc Tmp_372;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    havoc Tmp_371;
    assume {:nonnull} Tmp_371 != 0;
    assume Tmp_371 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} Response_3 != 0;
    assume Response_3 > 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_19))] := -1073741637;
    call {:si_unique_call 1965} NextIrpStack_5 := sdv_IoGetNextIrpStackLocation(Irp_19);
    assume {:nonnull} NextIrpStack_5 != 0;
    assume NextIrpStack_5 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_5)] := 15;
    assume {:nonnull} NextIrpStack_5 != 0;
    assume NextIrpStack_5 > 0;
    assume {:nonnull} NextIrpStack_5 != 0;
    assume NextIrpStack_5 > 0;
    call {:si_unique_call 1966} sdv_IoSetCompletionRoutine(Irp_19, li2bplFunctionConstant843, Response_3, 1, 1, 1);
    assume {:nonnull} DevExt_16 != 0;
    assume DevExt_16 > 0;
    havoc vslice_dummy_var_2729;
    call {:si_unique_call 1967} vslice_dummy_var_344 := sdv_IoCallDriver#0(vslice_dummy_var_2729, Irp_19);
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} Response_3 == 0;
    call {:si_unique_call 1968} IoFreeIrp(0);
    goto L1;

  anon5_Then:
    assume {:partition} Irp_19 == 0;
    goto L1;
}



procedure {:origName "AvcLocalResponse_sdv_static_function_7"} AvcLocalResponse_sdv_static_function_7#1(actual_DeviceObject_12: int, actual_DevExt_16: int, actual_ResponseCode: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, irp_status, thread_status;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} thread_status == old(thread_status);
  free ensures {:va_keep} irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#0(actual_DeviceObject_24: int, actual_Irp_30: int) returns (Tmp_591: int)
{
  var {:pointer} Irp_30: int;

  anon0:
    Irp_30 := actual_Irp_30;
    call {:si_unique_call 1969} Tmp_591 := IofCallDriver#0(0, Irp_30);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#0(actual_DeviceObject_24: int, actual_Irp_30: int) returns (Tmp_591: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} thread_status == old(thread_status);
  free ensures {:va_keep} irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_591 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#1(actual_DeviceObject_24: int, actual_Irp_30: int) returns (Tmp_591: int)
{
  var {:pointer} Irp_30: int;

  anon0:
    Irp_30 := actual_Irp_30;
    call {:si_unique_call 1970} Tmp_591 := IofCallDriver#1(0, Irp_30);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver#1(actual_DeviceObject_24: int, actual_Irp_30: int) returns (Tmp_591: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_591 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver#0(actual_DeviceObject_22: int, actual_Irp_28: int) returns (Tmp_579: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_5: int;
  var {:pointer} Irp_28: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_2730: int;
  var vslice_dummy_var_2731: int;
  var vslice_dummy_var_2732: int;
  var vslice_dummy_var_2733: int;

  anon0:
    call {:si_unique_call 1971} completion_1 := __HAVOC_malloc(4);
    Irp_28 := actual_Irp_28;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    status_5 := 259;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_28))] := 259;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_28)] := 1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 259;
    goto L19;

  L19:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L21;

  L21:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L23;

  L23:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  L29:
    Tmp_579 := status_5;
    return;

  anon47_Then:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2730;
    call {:si_unique_call 1972} vslice_dummy_var_345 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_28, vslice_dummy_var_2730, completion_1);
    goto L29;

  anon46_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_28;
    goto L23;

  anon45_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_28;
    goto L21;

  anon65_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_28;
    goto L19;

  anon60_Then:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_28))] := -1073741823;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_28)] := 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741823;
    goto L58;

  L58:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L60;

  L60:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L62;

  L62:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_invoke_on_error != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2731;
    call {:si_unique_call 1973} vslice_dummy_var_348 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_28, vslice_dummy_var_2731, completion_1);
    goto L29;

  anon59_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon58_Then:
    assume {:partition} sdv_invoke_on_error == 0;
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_28;
    goto L62;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_28;
    goto L60;

  anon66_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_28;
    goto L58;

  anon61_Then:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_28))] := -1073741536;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_28)] := 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741536;
    goto L32;

  L32:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L34;

  L34:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L36;

  L36:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_invoke_on_cancel != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2732;
    call {:si_unique_call 1974} vslice_dummy_var_346 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_28, vslice_dummy_var_2732, completion_1);
    goto L29;

  anon51_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon50_Then:
    assume {:partition} sdv_invoke_on_cancel == 0;
    goto L29;

  anon49_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_28;
    goto L36;

  anon48_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_28;
    goto L34;

  anon64_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_28;
    goto L32;

  anon62_Then:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_28))] := 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_28)] := 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 0;
    goto L45;

  L45:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L47;

  L47:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L49;

  L49:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_invoke_on_success != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2733;
    call {:si_unique_call 1975} vslice_dummy_var_347 := sdv_RunIoCompletionRoutines#0(sdv_p_devobj_fdo, Irp_28, vslice_dummy_var_2733, completion_1);
    goto L29;

  anon55_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon54_Then:
    assume {:partition} sdv_invoke_on_success == 0;
    goto L29;

  anon53_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_28;
    goto L49;

  anon52_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_28;
    goto L47;

  anon63_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_28;
    goto L45;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver#0(actual_DeviceObject_22: int, actual_Irp_28: int) returns (Tmp_579: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} thread_status == old(thread_status);
  free ensures {:va_keep} irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_579 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver#1(actual_DeviceObject_22: int, actual_Irp_28: int) returns (Tmp_579: int)
{
  var {:dopa} {:scalar} completion_1: int;
  var {:scalar} status_5: int;
  var {:pointer} Irp_28: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_2734: int;
  var vslice_dummy_var_2735: int;
  var vslice_dummy_var_2736: int;
  var vslice_dummy_var_2737: int;

  anon0:
    call {:si_unique_call 1976} completion_1 := __HAVOC_malloc(4);
    Irp_28 := actual_Irp_28;
    assume {:nonnull} completion_1 != 0;
    assume completion_1 > 0;
    status_5 := 259;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_28))] := 259;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_28)] := 1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 259;
    goto L19;

  L19:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L21;

  L21:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 259;
    goto L23;

  L23:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  L29:
    Tmp_579 := status_5;
    return;

  anon47_Then:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2734;
    call {:si_unique_call 1977} vslice_dummy_var_349 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_28, vslice_dummy_var_2734, completion_1);
    goto L29;

  anon46_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_28;
    goto L23;

  anon45_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_28;
    goto L21;

  anon65_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_28;
    goto L19;

  anon60_Then:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_28))] := -1073741823;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_28)] := 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741823;
    goto L58;

  L58:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L60;

  L60:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741823;
    goto L62;

  L62:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_invoke_on_error != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2735;
    call {:si_unique_call 1978} vslice_dummy_var_352 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_28, vslice_dummy_var_2735, completion_1);
    goto L29;

  anon59_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon58_Then:
    assume {:partition} sdv_invoke_on_error == 0;
    goto L29;

  anon57_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_28;
    goto L62;

  anon56_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_28;
    goto L60;

  anon66_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_28;
    goto L58;

  anon61_Then:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_28))] := -1073741536;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_28)] := 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := -1073741536;
    goto L32;

  L32:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L34;

  L34:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := -1073741536;
    goto L36;

  L36:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_invoke_on_cancel != 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2736;
    call {:si_unique_call 1979} vslice_dummy_var_350 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_28, vslice_dummy_var_2736, completion_1);
    goto L29;

  anon51_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon50_Then:
    assume {:partition} sdv_invoke_on_cancel == 0;
    goto L29;

  anon49_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_28;
    goto L36;

  anon48_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_28;
    goto L34;

  anon64_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_28;
    goto L32;

  anon62_Then:
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_28))] := 0;
    assume {:nonnull} Irp_28 != 0;
    assume Irp_28 > 0;
    Mem_T.PendingReturned__IRP[PendingReturned__IRP(Irp_28)] := 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildDeviceIoControlRequest_IoStatusBlock)] := 0;
    goto L45;

  L45:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildSynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L47;

  L47:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_28;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock)] := 0;
    goto L49;

  L49:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_invoke_on_success != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_compFset != 0;
    havoc vslice_dummy_var_2737;
    call {:si_unique_call 1980} vslice_dummy_var_351 := sdv_RunIoCompletionRoutines#1(sdv_p_devobj_fdo, Irp_28, vslice_dummy_var_2737, completion_1);
    goto L29;

  anon55_Then:
    assume {:partition} sdv_compFset == 0;
    goto L29;

  anon54_Then:
    assume {:partition} sdv_invoke_on_success == 0;
    goto L29;

  anon53_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_28;
    goto L49;

  anon52_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_28;
    goto L47;

  anon63_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_28;
    goto L45;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver#1(actual_DeviceObject_22: int, actual_Irp_28: int) returns (Tmp_579: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_579 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#0(actual_DeviceObject_23: int, actual_Irp_29: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_587: int)
{
  var {:scalar} Status_16: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_23: int;
  var {:pointer} Irp_29: int;
  var {:pointer} Context_5: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_23 := actual_DeviceObject_23;
    Irp_29 := actual_Irp_29;
    Context_5 := actual_Context_5;
    Completion := actual_Completion;
    call {:si_unique_call 1981} irpsp := sdv_IoGetNextIrpStackLocation(Irp_29);
    Status_16 := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant843;
    call {:si_unique_call 1982} Status_16 := AvcLocalResponseCompletion_sdv_static_function_7(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant859;
    call {:si_unique_call 1983} Status_16 := AvcProcessSendResponseCR_sdv_static_function_7(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant847;
    call {:si_unique_call 1984} Status_16 := AvcRequestCompletion_sdv_static_function_7#0(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L45;

  L45:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant842;
    call {:si_unique_call 1985} Status_16 := AvcResponseCompletion_sdv_static_function_7#0(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L62;

  L62:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant517;
    call {:si_unique_call 1986} Status_16 := Avc_FDO_PowerComplete(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L79;

  L79:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant942;
    call {:si_unique_call 1987} Status_16 := Avc_SynchCompletionRoutine(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L96;

  L96:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant485;
    call {:si_unique_call 1988} Status_16 := sdv_hash_664127497(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L113;

  L113:
    Tmp_587 := Status_16;
    return;

  anon20_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant485;
    goto L113;

  anon19_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant942;
    goto L96;

  anon18_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant517;
    goto L79;

  anon17_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant842;
    goto L62;

  anon16_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant847;
    goto L45;

  anon15_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant859;
    goto L28;

  anon21_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant843;
    goto L11;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#0(actual_DeviceObject_23: int, actual_Irp_29: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_587: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} thread_status == old(thread_status);
  free ensures {:va_keep} irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_587 == -1073741802 || Tmp_587 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#1(actual_DeviceObject_23: int, actual_Irp_29: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_587: int)
{
  var {:scalar} Status_16: int;
  var {:pointer} irpsp: int;
  var {:pointer} DeviceObject_23: int;
  var {:pointer} Irp_29: int;
  var {:pointer} Context_5: int;
  var {:pointer} Completion: int;

  anon0:
    DeviceObject_23 := actual_DeviceObject_23;
    Irp_29 := actual_Irp_29;
    Context_5 := actual_Context_5;
    Completion := actual_Completion;
    call {:si_unique_call 1989} irpsp := sdv_IoGetNextIrpStackLocation(Irp_29);
    Status_16 := 0;
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant843;
    call {:si_unique_call 1990} Status_16 := AvcLocalResponseCompletion_sdv_static_function_7(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L11;

  L11:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant859;
    call {:si_unique_call 1991} Status_16 := AvcProcessSendResponseCR_sdv_static_function_7(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L28;

  L28:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant847;
    call {:si_unique_call 1992} Status_16 := AvcRequestCompletion_sdv_static_function_7#1(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L45;

  L45:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant842;
    call {:si_unique_call 1993} Status_16 := AvcResponseCompletion_sdv_static_function_7#1(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L62;

  L62:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant517;
    call {:si_unique_call 1994} Status_16 := Avc_FDO_PowerComplete(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L79;

  L79:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant942;
    call {:si_unique_call 1995} Status_16 := Avc_SynchCompletionRoutine(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L96;

  L96:
    assume {:nonnull} irpsp != 0;
    assume irpsp > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] == li2bplFunctionConstant485;
    call {:si_unique_call 1996} Status_16 := sdv_hash_664127497(DeviceObject_23, Irp_29, Context_5);
    assume {:nonnull} Completion != 0;
    assume Completion > 0;
    goto L113;

  L113:
    Tmp_587 := Status_16;
    return;

  anon20_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant485;
    goto L113;

  anon19_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant942;
    goto L96;

  anon18_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant517;
    goto L79;

  anon17_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant842;
    goto L62;

  anon16_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant847;
    goto L45;

  anon15_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant859;
    goto L28;

  anon21_Then:
    assume {:partition} Mem_T.CompletionRoutine__IO_STACK_LOCATION[CompletionRoutine__IO_STACK_LOCATION(irpsp)] != li2bplFunctionConstant843;
    goto L11;
}



procedure {:origName "sdv_RunIoCompletionRoutines"} {:osmodel} sdv_RunIoCompletionRoutines#1(actual_DeviceObject_23: int, actual_Irp_29: int, actual_Context_5: int, actual_Completion: int) returns (Tmp_587: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_587 == -1073741802 || Tmp_587 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcResponseCompletion_sdv_static_function_7"} AvcResponseCompletion_sdv_static_function_7#0(actual_DeviceObject_13: int, actual_Irp_20: int, actual_DevExtIn_1: int) returns (Tmp_376: int)
{
  var {:scalar} Tmp_377: int;
  var {:pointer} Tmp_378: int;
  var {:pointer} SubunitAddr_8: int;
  var {:dopa} {:scalar} Offset_3: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} ResponseCode_1: int;
  var {:scalar} idx_9: int;
  var {:scalar} Tmp_380: int;
  var {:scalar} Status_12: int;
  var {:pointer} DevExt_17: int;
  var {:pointer} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:scalar} idx_10: int;
  var {:pointer} sdv_253: int;
  var {:scalar} OldIrql_10: int;
  var {:pointer} NextIrpStack_6: int;
  var {:pointer} Tmp_384: int;
  var {:scalar} sdv_257: int;
  var {:scalar} max_1: int;
  var {:pointer} Command_14: int;
  var {:pointer} Tmp_385: int;
  var {:pointer} Tmp_386: int;
  var {:scalar} max_2: int;
  var {:pointer} Entry_7: int;
  var {:scalar} OpcodesMatch_1: int;
  var {:pointer} CallbackLink_3: int;
  var {:scalar} idx_11: int;
  var {:scalar} sdv_258: int;
  var {:scalar} max_3: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:scalar} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:scalar} Opcode_3: int;
  var {:pointer} Irp_20: int;
  var {:pointer} DevExtIn_1: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_2738: int;
  var vslice_dummy_var_2739: int;
  var vslice_dummy_var_2740: int;

  anon0:
    call {:si_unique_call 1997} Offset_3 := __HAVOC_malloc(4);
    Irp_20 := actual_Irp_20;
    DevExtIn_1 := actual_DevExtIn_1;
    call {:si_unique_call 1998} Tmp_379 := __HAVOC_malloc(2048);
    call {:si_unique_call 1999} Tmp_383 := __HAVOC_malloc(2048);
    call {:si_unique_call 2000} Tmp_386 := __HAVOC_malloc(2048);
    DevExt_17 := DevExtIn_1;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] == 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Tmp_379;
    SubunitAddr_8 := Tmp_379 + 1 * 4;
    assume {:nonnull} Offset_3 != 0;
    assume Offset_3 > 0;
    call {:si_unique_call 2001} Status_12 := AvcValidateSubunitAddress(SubunitAddr_8, 32, Offset_3);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} Status_12 == 0;
    Command_14 := 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Tmp_386;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    havoc ResponseCode_1;
    assume {:nonnull} Offset_3 != 0;
    assume Offset_3 > 0;
    assume {:nonnull} Offset_3 != 0;
    assume Offset_3 > 0;
    havoc Tmp_377;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    havoc Opcode_3;
    call {:si_unique_call 2002} Tmp_388 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    call {:si_unique_call 2003} sdv_KeAcquireSpinLock(0, Tmp_388);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    havoc OldIrql_10;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Entry_7;
    goto L80;

  L80:
    call {:si_unique_call 2004} Tmp_378, idx_9, Tmp_380, Tmp_381, Tmp_382, idx_10, Tmp_384, sdv_257, max_1, Command_14, Tmp_385, max_2, Entry_7, OpcodesMatch_1, idx_11, max_3, Tmp_387, Tmp_389, Tmp_390 := AvcResponseCompletion_sdv_static_function_7#0_loop_L80(Tmp_378, SubunitAddr_8, ResponseCode_1, idx_9, Tmp_380, Tmp_381, Tmp_382, idx_10, Tmp_384, sdv_257, max_1, Command_14, Tmp_385, max_2, Entry_7, OpcodesMatch_1, idx_11, max_3, Tmp_387, Tmp_389, Tmp_390, Opcode_3);
    goto L80_last;

  L80_last:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    Command_14 := Entry_7;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc vslice_dummy_var_2738;
    call {:si_unique_call 2005} sdv_257 := AvcSubunitAddrsEqual(SubunitAddr_8, vslice_dummy_var_2738);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} sdv_257 != 0;
    OpcodesMatch_1 := 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto L97;

  L97:
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} ResponseCode_1 != 8;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} ResponseCode_1 == 12;
    goto L147;

  L147:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    Command_14 := 0;
    goto L119;

  L119:
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} Command_14 != 0;
    call {:si_unique_call 2006} vslice_dummy_var_353 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2007} InitializeListHead(Command_14);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} 15 == ResponseCode_1;
    call {:si_unique_call 2008} vslice_dummy_var_354 := AvcDuplicateCommandContext_sdv_static_function_7(Command_14);
    goto L81;

  L81:
    call {:si_unique_call 2009} sdv_KeReleaseSpinLock(0, OldIrql_10);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} Command_14 != 0;
    call {:si_unique_call 2010} sdv_RtlCopyMemory(0, 0, 512);
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    call {:si_unique_call 2011} sdv_258 := sdv_IsListEmpty(0);
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} sdv_258 == 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    call {:si_unique_call 2012} sdv_253 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_14));
    CallbackLink_3 := sdv_253;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    havoc vslice_dummy_var_2739;
    call {:si_unique_call 2013} AvcCommandCallback_sdv_static_function_7(Command_14, vslice_dummy_var_2739);
    goto L207;

  L207:
    call {:si_unique_call 2014} ExFreeToNPagedLookasideList(AvcCommandLinkPool, CallbackLink_3);
    goto L37;

  L37:
    call {:si_unique_call 2015} Tmp_388 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    call {:si_unique_call 2016} sdv_KeAcquireSpinLock(0, Tmp_388);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    havoc OldIrql_10;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    call {:si_unique_call 2017} IoFreeIrp(0);
    Irp_20 := 0;
    goto L48;

  L48:
    call {:si_unique_call 2018} sdv_KeReleaseSpinLock(0, OldIrql_10);
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} Irp_20 != 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    call {:si_unique_call 2019} NextIrpStack_6 := sdv_IoGetNextIrpStackLocation(Irp_20);
    assume {:nonnull} NextIrpStack_6 != 0;
    assume NextIrpStack_6 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_6)] := 15;
    assume {:nonnull} NextIrpStack_6 != 0;
    assume NextIrpStack_6 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} NextIrpStack_6 != 0;
    assume NextIrpStack_6 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2020} SLIC_sdv_IoSetCompletionRoutine_entry(0);
    goto L273;

  L273:
    call {:si_unique_call 2021} sdv_IoSetCompletionRoutine(Irp_20, li2bplFunctionConstant842, DevExt_17, 1, 1, 1);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2022} SLIC_sdv_IoCallDriver_entry(0);
    goto L276;

  L276:
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume false;
    return;

  anon122_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L276;

  anon168_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L273;

  anon121_Then:
    assume {:partition} Irp_20 == 0;
    goto L10;

  L10:
    Tmp_376 := -1073741802;
    return;

  anon120_Then:
    call {:si_unique_call 2023} IoReuseIrp(Irp_20, -1073741637);
    goto L48;

  anon171_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    havoc vslice_dummy_var_2740;
    call {:si_unique_call 2024} Avc_BusResetCallback_sdv_static_function_5#1(Command_14, vslice_dummy_var_2740);
    goto L207;

  anon151_Then:
    assume {:partition} sdv_258 != 0;
    call {:si_unique_call 2025} AvcPendingIrpCompletion(Command_14);
    call {:si_unique_call 2026} AvcFreeCommandContext(Command_14);
    Command_14 := 0;
    goto L37;

  anon150_Then:
    assume {:partition} Command_14 == 0;
    goto L37;

  anon137_Then:
    assume {:partition} 15 != ResponseCode_1;
    goto L81;

  anon136_Then:
    assume {:partition} Command_14 == 0;
    goto L86;

  L86:
    assume {:nonnull} Entry_7 != 0;
    assume Entry_7 > 0;
    havoc Entry_7;
    Command_14 := 0;
    goto L86_dummy;

  L86_dummy:
    assume false;
    return;

  anon141_Then:
    goto L119;

  anon162_Then:
    assume {:partition} ResponseCode_1 != 12;
    Command_14 := 0;
    goto L119;

  anon127_Then:
    assume {:partition} ResponseCode_1 == 8;
    goto L147;

  anon152_Then:
    Command_14 := 0;
    goto L119;

  anon153_Then:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} ResponseCode_1 != 8;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} ResponseCode_1 != 10;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} ResponseCode_1 != 13;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} ResponseCode_1 == 15;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_390;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc max_1;
    idx_11 := 1;
    goto L110;

  L110:
    call {:si_unique_call 2027} Tmp_384, idx_11, Tmp_389 := AvcResponseCompletion_sdv_static_function_7#0_loop_L110(Tmp_384, max_1, Command_14, idx_11, Tmp_389, Opcode_3);
    goto L110_last;

  L110_last:
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} max_1 >= idx_11;
    Tmp_389 := idx_11;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_384;
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    OpcodesMatch_1 := 1;
    goto L111;

  L111:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} OpcodesMatch_1 != 0;
    goto L119;

  anon135_Then:
    assume {:partition} OpcodesMatch_1 == 0;
    Command_14 := 0;
    goto L119;

  anon174_Then:
    idx_11 := idx_11 + 1;
    goto anon174_Then_dummy;

  anon174_Then_dummy:
    assume false;
    return;

  anon134_Then:
    assume {:partition} idx_11 > max_1;
    goto L111;

  anon132_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    OpcodesMatch_1 := 0;
    goto L361;

  L361:
    goto L111;

  anon133_Then:
    OpcodesMatch_1 := 1;
    goto L361;

  anon131_Then:
    Command_14 := 0;
    goto L119;

  anon163_Then:
    assume {:partition} ResponseCode_1 != 15;
    Command_14 := 0;
    goto L119;

  anon164_Then:
    assume {:partition} ResponseCode_1 == 13;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_387;
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    havoc max_2;
    idx_10 := 1;
    goto L136;

  L136:
    call {:si_unique_call 2028} Tmp_378, Tmp_382, idx_10 := AvcResponseCompletion_sdv_static_function_7#0_loop_L136(Tmp_378, Tmp_382, idx_10, Command_14, max_2, Opcode_3);
    goto L136_last;

  L136_last:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} max_2 >= idx_10;
    Tmp_382 := idx_10;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_378;
    assume {:nonnull} Tmp_378 != 0;
    assume Tmp_378 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    OpcodesMatch_1 := 1;
    goto L137;

  L137:
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} OpcodesMatch_1 == 0;
    Command_14 := 0;
    goto L119;

  anon140_Then:
    assume {:partition} OpcodesMatch_1 != 0;
    goto L119;

  anon173_Then:
    idx_10 := idx_10 + 1;
    goto anon173_Then_dummy;

  anon173_Then_dummy:
    assume false;
    return;

  anon139_Then:
    assume {:partition} idx_10 > max_2;
    goto L137;

  anon130_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    OpcodesMatch_1 := 0;
    goto L350;

  L350:
    goto L137;

  anon138_Then:
    OpcodesMatch_1 := 1;
    goto L350;

  anon165_Then:
    assume {:partition} ResponseCode_1 == 10;
    goto L100;

  L100:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    Command_14 := 0;
    goto L119;

  anon129_Then:
    goto L119;

  anon128_Then:
    assume {:partition} ResponseCode_1 == 8;
    goto L100;

  anon154_Then:
    goto L97;

  anon155_Then:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} ResponseCode_1 != 8;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} ResponseCode_1 != 10;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} ResponseCode_1 != 11;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} ResponseCode_1 == 12;
    goto L153;

  L153:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    havoc max_3;
    idx_9 := 1;
    goto L159;

  L159:
    call {:si_unique_call 2029} idx_9, Tmp_380, Tmp_381 := AvcResponseCompletion_sdv_static_function_7#0_loop_L159(idx_9, Tmp_380, Tmp_381, Command_14, max_3, Opcode_3);
    goto L159_last;

  L159_last:
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} max_3 >= idx_9;
    Tmp_380 := idx_9;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_381;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    OpcodesMatch_1 := 1;
    goto L160;

  L160:
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} OpcodesMatch_1 == 0;
    Command_14 := 0;
    goto L119;

  anon146_Then:
    assume {:partition} OpcodesMatch_1 != 0;
    goto L119;

  anon172_Then:
    idx_9 := idx_9 + 1;
    goto anon172_Then_dummy;

  anon172_Then_dummy:
    assume false;
    return;

  anon145_Then:
    assume {:partition} idx_9 > max_3;
    goto L160;

  anon143_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    OpcodesMatch_1 := 0;
    goto L335;

  L335:
    goto L160;

  anon144_Then:
    OpcodesMatch_1 := 1;
    goto L335;

  anon159_Then:
    assume {:partition} ResponseCode_1 != 12;
    Command_14 := 0;
    goto L119;

  anon160_Then:
    assume {:partition} ResponseCode_1 == 11;
    goto L153;

  anon161_Then:
    assume {:partition} ResponseCode_1 == 10;
    goto L152;

  L152:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    Command_14 := 0;
    goto L119;

  anon142_Then:
    goto L119;

  anon126_Then:
    assume {:partition} ResponseCode_1 == 8;
    goto L152;

  anon170_Then:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} ResponseCode_1 != 8;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} ResponseCode_1 != 9;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} ResponseCode_1 != 10;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} ResponseCode_1 == 15;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    goto L174;

  L174:
    Command_14 := 0;
    goto L119;

  anon148_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    goto L174;

  anon149_Then:
    goto L119;

  anon156_Then:
    assume {:partition} ResponseCode_1 != 15;
    Command_14 := 0;
    goto L119;

  anon157_Then:
    assume {:partition} ResponseCode_1 == 10;
    goto L171;

  L171:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    Command_14 := 0;
    goto L119;

  anon147_Then:
    goto L119;

  anon158_Then:
    assume {:partition} ResponseCode_1 == 9;
    goto L171;

  anon125_Then:
    assume {:partition} ResponseCode_1 == 8;
    goto L171;

  anon124_Then:
    assume {:partition} sdv_257 == 0;
    goto L86;

  anon169_Then:
    goto L86;

  anon123_Then:
    goto L81;

  anon119_Then:
    assume {:partition} Status_12 != 0;
    goto L37;

  anon117_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] != 0;
    call {:si_unique_call 2030} Tmp_388 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    call {:si_unique_call 2031} sdv_KeAcquireSpinLock(0, Tmp_388);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    havoc OldIrql_10;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    goto L17;

  L17:
    call {:si_unique_call 2032} IoFreeIrp(0);
    call {:si_unique_call 2033} sdv_KeReleaseSpinLock(0, OldIrql_10);
    call {:si_unique_call 2034} AvcStopAllFCPProcessing(DevExt_17);
    goto L10;

  anon118_Then:
    goto L17;

  anon167_Then:
    call {:si_unique_call 2035} IoFreeIrp(0);
    goto L10;
}



procedure {:origName "AvcResponseCompletion_sdv_static_function_7"} AvcResponseCompletion_sdv_static_function_7#0(actual_DeviceObject_13: int, actual_Irp_20: int, actual_DevExtIn_1: int) returns (Tmp_376: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} thread_status == old(thread_status);
  free ensures {:va_keep} irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_376 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcResponseCompletion_sdv_static_function_7"} AvcResponseCompletion_sdv_static_function_7#1(actual_DeviceObject_13: int, actual_Irp_20: int, actual_DevExtIn_1: int) returns (Tmp_376: int)
{
  var {:scalar} Tmp_377: int;
  var {:pointer} Tmp_378: int;
  var {:pointer} SubunitAddr_8: int;
  var {:dopa} {:scalar} Offset_3: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} ResponseCode_1: int;
  var {:scalar} idx_9: int;
  var {:scalar} Tmp_380: int;
  var {:scalar} Status_12: int;
  var {:pointer} DevExt_17: int;
  var {:pointer} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:scalar} idx_10: int;
  var {:pointer} sdv_253: int;
  var {:scalar} OldIrql_10: int;
  var {:pointer} NextIrpStack_6: int;
  var {:pointer} Tmp_384: int;
  var {:scalar} sdv_257: int;
  var {:scalar} max_1: int;
  var {:pointer} Command_14: int;
  var {:pointer} Tmp_385: int;
  var {:pointer} Tmp_386: int;
  var {:scalar} max_2: int;
  var {:pointer} Entry_7: int;
  var {:scalar} OpcodesMatch_1: int;
  var {:pointer} CallbackLink_3: int;
  var {:scalar} idx_11: int;
  var {:scalar} sdv_258: int;
  var {:scalar} max_3: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:scalar} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:scalar} Opcode_3: int;
  var {:pointer} Irp_20: int;
  var {:pointer} DevExtIn_1: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_2741: int;
  var vslice_dummy_var_2742: int;
  var vslice_dummy_var_2743: int;
  var vslice_dummy_var_2744: int;

  anon0:
    call {:si_unique_call 2036} Offset_3 := __HAVOC_malloc(4);
    Irp_20 := actual_Irp_20;
    DevExtIn_1 := actual_DevExtIn_1;
    call {:si_unique_call 2037} Tmp_379 := __HAVOC_malloc(2048);
    call {:si_unique_call 2038} Tmp_383 := __HAVOC_malloc(2048);
    call {:si_unique_call 2039} Tmp_386 := __HAVOC_malloc(2048);
    DevExt_17 := DevExtIn_1;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] == 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Tmp_379;
    SubunitAddr_8 := Tmp_379 + 1 * 4;
    assume {:nonnull} Offset_3 != 0;
    assume Offset_3 > 0;
    call {:si_unique_call 2040} Status_12 := AvcValidateSubunitAddress(SubunitAddr_8, 32, Offset_3);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} Status_12 == 0;
    Command_14 := 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Tmp_386;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    havoc ResponseCode_1;
    assume {:nonnull} Offset_3 != 0;
    assume Offset_3 > 0;
    assume {:nonnull} Offset_3 != 0;
    assume Offset_3 > 0;
    havoc Tmp_377;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    havoc Opcode_3;
    call {:si_unique_call 2041} Tmp_388 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    call {:si_unique_call 2042} sdv_KeAcquireSpinLock(0, Tmp_388);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    havoc OldIrql_10;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc Entry_7;
    goto L80;

  L80:
    call {:si_unique_call 2043} Tmp_378, idx_9, Tmp_380, Tmp_381, Tmp_382, idx_10, Tmp_384, sdv_257, max_1, Command_14, Tmp_385, max_2, Entry_7, OpcodesMatch_1, idx_11, max_3, Tmp_387, Tmp_389, Tmp_390 := AvcResponseCompletion_sdv_static_function_7#1_loop_L80(Tmp_378, SubunitAddr_8, ResponseCode_1, idx_9, Tmp_380, Tmp_381, Tmp_382, idx_10, Tmp_384, sdv_257, max_1, Command_14, Tmp_385, max_2, Entry_7, OpcodesMatch_1, idx_11, max_3, Tmp_387, Tmp_389, Tmp_390, Opcode_3);
    goto L80_last;

  L80_last:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    Command_14 := Entry_7;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc vslice_dummy_var_2741;
    call {:si_unique_call 2044} sdv_257 := AvcSubunitAddrsEqual(SubunitAddr_8, vslice_dummy_var_2741);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} sdv_257 != 0;
    OpcodesMatch_1 := 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto L97;

  L97:
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} ResponseCode_1 != 8;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} ResponseCode_1 == 12;
    goto L147;

  L147:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    Command_14 := 0;
    goto L119;

  L119:
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} Command_14 != 0;
    call {:si_unique_call 2045} vslice_dummy_var_355 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2046} InitializeListHead(Command_14);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} 15 == ResponseCode_1;
    call {:si_unique_call 2047} vslice_dummy_var_356 := AvcDuplicateCommandContext_sdv_static_function_7(Command_14);
    goto L81;

  L81:
    call {:si_unique_call 2048} sdv_KeReleaseSpinLock(0, OldIrql_10);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} Command_14 != 0;
    call {:si_unique_call 2049} sdv_RtlCopyMemory(0, 0, 512);
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    call {:si_unique_call 2050} sdv_258 := sdv_IsListEmpty(0);
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} sdv_258 == 0;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    call {:si_unique_call 2051} sdv_253 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(Command_14));
    CallbackLink_3 := sdv_253;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    havoc vslice_dummy_var_2742;
    call {:si_unique_call 2052} AvcCommandCallback_sdv_static_function_7(Command_14, vslice_dummy_var_2742);
    goto L207;

  L207:
    call {:si_unique_call 2053} ExFreeToNPagedLookasideList(AvcCommandLinkPool, CallbackLink_3);
    goto L37;

  L37:
    call {:si_unique_call 2054} Tmp_388 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    call {:si_unique_call 2055} sdv_KeAcquireSpinLock(0, Tmp_388);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    havoc OldIrql_10;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    call {:si_unique_call 2056} IoFreeIrp(0);
    Irp_20 := 0;
    goto L48;

  L48:
    call {:si_unique_call 2057} sdv_KeReleaseSpinLock(0, OldIrql_10);
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} Irp_20 != 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    call {:si_unique_call 2058} NextIrpStack_6 := sdv_IoGetNextIrpStackLocation(Irp_20);
    assume {:nonnull} NextIrpStack_6 != 0;
    assume NextIrpStack_6 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(NextIrpStack_6)] := 15;
    assume {:nonnull} NextIrpStack_6 != 0;
    assume NextIrpStack_6 > 0;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    assume {:nonnull} NextIrpStack_6 != 0;
    assume NextIrpStack_6 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2059} SLIC_sdv_IoSetCompletionRoutine_entry(0);
    goto L273;

  L273:
    call {:si_unique_call 2060} sdv_IoSetCompletionRoutine(Irp_20, li2bplFunctionConstant842, DevExt_17, 1, 1, 1);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2061} SLIC_sdv_IoCallDriver_entry(0);
    goto L276;

  L276:
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    havoc vslice_dummy_var_2743;
    call {:si_unique_call 2062} vslice_dummy_var_357 := sdv_IoCallDriver#0(vslice_dummy_var_2743, Irp_20);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2063} SLIC_sdv_IoCallDriver_exit(0, Irp_20);
    goto L10;

  L10:
    Tmp_376 := -1073741802;
    return;

  anon166_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L10;

  anon122_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L276;

  anon168_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L273;

  anon121_Then:
    assume {:partition} Irp_20 == 0;
    goto L10;

  anon120_Then:
    call {:si_unique_call 2064} IoReuseIrp(Irp_20, -1073741637);
    goto L48;

  anon171_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    assume {:nonnull} CallbackLink_3 != 0;
    assume CallbackLink_3 > 0;
    havoc vslice_dummy_var_2744;
    call {:si_unique_call 2065} Avc_BusResetCallback_sdv_static_function_5#1(Command_14, vslice_dummy_var_2744);
    goto L207;

  anon151_Then:
    assume {:partition} sdv_258 != 0;
    call {:si_unique_call 2066} AvcPendingIrpCompletion(Command_14);
    call {:si_unique_call 2067} AvcFreeCommandContext(Command_14);
    Command_14 := 0;
    goto L37;

  anon150_Then:
    assume {:partition} Command_14 == 0;
    goto L37;

  anon137_Then:
    assume {:partition} 15 != ResponseCode_1;
    goto L81;

  anon136_Then:
    assume {:partition} Command_14 == 0;
    goto L86;

  L86:
    assume {:nonnull} Entry_7 != 0;
    assume Entry_7 > 0;
    havoc Entry_7;
    Command_14 := 0;
    goto L86_dummy;

  L86_dummy:
    assume false;
    return;

  anon141_Then:
    goto L119;

  anon162_Then:
    assume {:partition} ResponseCode_1 != 12;
    Command_14 := 0;
    goto L119;

  anon127_Then:
    assume {:partition} ResponseCode_1 == 8;
    goto L147;

  anon152_Then:
    Command_14 := 0;
    goto L119;

  anon153_Then:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} ResponseCode_1 != 8;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} ResponseCode_1 != 10;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} ResponseCode_1 != 13;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} ResponseCode_1 == 15;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_390;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    havoc max_1;
    idx_11 := 1;
    goto L110;

  L110:
    call {:si_unique_call 2068} Tmp_384, idx_11, Tmp_389 := AvcResponseCompletion_sdv_static_function_7#1_loop_L110(Tmp_384, max_1, Command_14, idx_11, Tmp_389, Opcode_3);
    goto L110_last;

  L110_last:
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} max_1 >= idx_11;
    Tmp_389 := idx_11;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_384;
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    OpcodesMatch_1 := 1;
    goto L111;

  L111:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} OpcodesMatch_1 != 0;
    goto L119;

  anon135_Then:
    assume {:partition} OpcodesMatch_1 == 0;
    Command_14 := 0;
    goto L119;

  anon174_Then:
    idx_11 := idx_11 + 1;
    goto anon174_Then_dummy;

  anon174_Then_dummy:
    assume false;
    return;

  anon134_Then:
    assume {:partition} idx_11 > max_1;
    goto L111;

  anon132_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    OpcodesMatch_1 := 0;
    goto L361;

  L361:
    goto L111;

  anon133_Then:
    OpcodesMatch_1 := 1;
    goto L361;

  anon131_Then:
    Command_14 := 0;
    goto L119;

  anon163_Then:
    assume {:partition} ResponseCode_1 != 15;
    Command_14 := 0;
    goto L119;

  anon164_Then:
    assume {:partition} ResponseCode_1 == 13;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_387;
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    havoc max_2;
    idx_10 := 1;
    goto L136;

  L136:
    call {:si_unique_call 2069} Tmp_378, Tmp_382, idx_10 := AvcResponseCompletion_sdv_static_function_7#1_loop_L136(Tmp_378, Tmp_382, idx_10, Command_14, max_2, Opcode_3);
    goto L136_last;

  L136_last:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} max_2 >= idx_10;
    Tmp_382 := idx_10;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_378;
    assume {:nonnull} Tmp_378 != 0;
    assume Tmp_378 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    OpcodesMatch_1 := 1;
    goto L137;

  L137:
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} OpcodesMatch_1 == 0;
    Command_14 := 0;
    goto L119;

  anon140_Then:
    assume {:partition} OpcodesMatch_1 != 0;
    goto L119;

  anon173_Then:
    idx_10 := idx_10 + 1;
    goto anon173_Then_dummy;

  anon173_Then_dummy:
    assume false;
    return;

  anon139_Then:
    assume {:partition} idx_10 > max_2;
    goto L137;

  anon130_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    OpcodesMatch_1 := 0;
    goto L350;

  L350:
    goto L137;

  anon138_Then:
    OpcodesMatch_1 := 1;
    goto L350;

  anon165_Then:
    assume {:partition} ResponseCode_1 == 10;
    goto L100;

  L100:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    Command_14 := 0;
    goto L119;

  anon129_Then:
    goto L119;

  anon128_Then:
    assume {:partition} ResponseCode_1 == 8;
    goto L100;

  anon154_Then:
    goto L97;

  anon155_Then:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} ResponseCode_1 != 8;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} ResponseCode_1 != 10;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} ResponseCode_1 != 11;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} ResponseCode_1 == 12;
    goto L153;

  L153:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    havoc max_3;
    idx_9 := 1;
    goto L159;

  L159:
    call {:si_unique_call 2070} idx_9, Tmp_380, Tmp_381 := AvcResponseCompletion_sdv_static_function_7#1_loop_L159(idx_9, Tmp_380, Tmp_381, Command_14, max_3, Opcode_3);
    goto L159_last;

  L159_last:
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} max_3 >= idx_9;
    Tmp_380 := idx_9;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    havoc Tmp_381;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    OpcodesMatch_1 := 1;
    goto L160;

  L160:
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} OpcodesMatch_1 == 0;
    Command_14 := 0;
    goto L119;

  anon146_Then:
    assume {:partition} OpcodesMatch_1 != 0;
    goto L119;

  anon172_Then:
    idx_9 := idx_9 + 1;
    goto anon172_Then_dummy;

  anon172_Then_dummy:
    assume false;
    return;

  anon145_Then:
    assume {:partition} idx_9 > max_3;
    goto L160;

  anon143_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    OpcodesMatch_1 := 0;
    goto L335;

  L335:
    goto L160;

  anon144_Then:
    OpcodesMatch_1 := 1;
    goto L335;

  anon159_Then:
    assume {:partition} ResponseCode_1 != 12;
    Command_14 := 0;
    goto L119;

  anon160_Then:
    assume {:partition} ResponseCode_1 == 11;
    goto L153;

  anon161_Then:
    assume {:partition} ResponseCode_1 == 10;
    goto L152;

  L152:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    Command_14 := 0;
    goto L119;

  anon142_Then:
    goto L119;

  anon126_Then:
    assume {:partition} ResponseCode_1 == 8;
    goto L152;

  anon170_Then:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} ResponseCode_1 != 8;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} ResponseCode_1 != 9;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} ResponseCode_1 != 10;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} ResponseCode_1 == 15;
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    goto L174;

  L174:
    Command_14 := 0;
    goto L119;

  anon148_Then:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    goto L174;

  anon149_Then:
    goto L119;

  anon156_Then:
    assume {:partition} ResponseCode_1 != 15;
    Command_14 := 0;
    goto L119;

  anon157_Then:
    assume {:partition} ResponseCode_1 == 10;
    goto L171;

  L171:
    assume {:nonnull} Command_14 != 0;
    assume Command_14 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    Command_14 := 0;
    goto L119;

  anon147_Then:
    goto L119;

  anon158_Then:
    assume {:partition} ResponseCode_1 == 9;
    goto L171;

  anon125_Then:
    assume {:partition} ResponseCode_1 == 8;
    goto L171;

  anon124_Then:
    assume {:partition} sdv_257 == 0;
    goto L86;

  anon169_Then:
    goto L86;

  anon123_Then:
    goto L81;

  anon119_Then:
    assume {:partition} Status_12 != 0;
    goto L37;

  anon117_Then:
    assume {:partition} Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(Irp_20))] != 0;
    call {:si_unique_call 2071} Tmp_388 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    call {:si_unique_call 2072} sdv_KeAcquireSpinLock(0, Tmp_388);
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    havoc OldIrql_10;
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} DevExt_17 != 0;
    assume DevExt_17 > 0;
    goto L17;

  L17:
    call {:si_unique_call 2073} IoFreeIrp(0);
    call {:si_unique_call 2074} sdv_KeReleaseSpinLock(0, OldIrql_10);
    call {:si_unique_call 2075} AvcStopAllFCPProcessing(DevExt_17);
    goto L10;

  anon118_Then:
    goto L17;

  anon167_Then:
    call {:si_unique_call 2076} IoFreeIrp(0);
    goto L10;
}



procedure {:origName "AvcResponseCompletion_sdv_static_function_7"} AvcResponseCompletion_sdv_static_function_7#1(actual_DeviceObject_13: int, actual_Irp_20: int, actual_DevExtIn_1: int) returns (Tmp_376: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, irp_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, thread_status, return_state, lowerDriverFailed, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} Tmp_376 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcHandleUnitCommand_sdv_static_function_7"} AvcHandleUnitCommand_sdv_static_function_7#0(actual_DeviceObject_16: int, actual_DevExt_20: int)
{
  var {:scalar} CommandType_2: int;
  var {:scalar} Tmp_425: int;
  var {:scalar} Offset_4: int;
  var {:pointer} VirtualDevExt: int;
  var {:scalar} VendorID: int;
  var {:pointer} SubunitInfoBytes: int;
  var {:scalar} ResponseCode_2: int;
  var {:scalar} Tmp_426: int;
  var {:pointer} Tmp_428: int;
  var {:pointer} sdv_277: int;
  var {:scalar} oldIrql_3: int;
  var {:scalar} Page: int;
  var {:pointer} Tmp_429: int;
  var {:pointer} Entry_8: int;
  var {:pointer} Operands_5: int;
  var {:dopa} {:scalar} BytesUsed_4: int;
  var {:pointer} Tmp_431: int;
  var {:pointer} Tmp_432: int;
  var {:scalar} Opcode_5: int;
  var {:scalar} Tmp_433: int;
  var {:pointer} Tmp_435: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} DevExt_20: int;
  var boogieTmp: int;
  var vslice_dummy_var_358: int;

  anon0:
    call {:si_unique_call 2077} BytesUsed_4 := __HAVOC_malloc(4);
    call {:si_unique_call 2078} vslice_dummy_var_358 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    DevExt_20 := actual_DevExt_20;
    call {:si_unique_call 2079} SubunitInfoBytes := __HAVOC_malloc(128);
    call {:si_unique_call 2080} Tmp_429 := __HAVOC_malloc(2048);
    call {:si_unique_call 2081} Tmp_431 := __HAVOC_malloc(2048);
    call {:si_unique_call 2082} Tmp_432 := __HAVOC_malloc(2048);
    assume {:nonnull} DevExt_20 != 0;
    assume DevExt_20 > 0;
    havoc Tmp_429;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    havoc CommandType_2;
    assume {:nonnull} DevExt_20 != 0;
    assume DevExt_20 > 0;
    havoc Tmp_432;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    havoc Opcode_5;
    ResponseCode_2 := 8;
    assume {:nonnull} DevExt_20 != 0;
    assume DevExt_20 > 0;
    havoc Tmp_431;
    Operands_5 := Tmp_431 + 3 * 4;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Opcode_5 != 48;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Opcode_5 == 49;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} 1 == CommandType_2;
    call {:si_unique_call 2083} Page := corral_nondet();
    Offset_4 := 0;
    call {:si_unique_call 2084} Tmp_435 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    call {:si_unique_call 2085} sdv_KeAcquireSpinLock(0, Tmp_435);
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    havoc oldIrql_3;
    havoc Entry_8;
    goto L32;

  L32:
    call {:si_unique_call 2086} Tmp_425, Offset_4, VirtualDevExt, Tmp_428, sdv_277, Entry_8, Tmp_433 := AvcHandleUnitCommand_sdv_static_function_7#0_loop_L32(Tmp_425, Offset_4, VirtualDevExt, SubunitInfoBytes, Tmp_428, sdv_277, Entry_8, BytesUsed_4, Tmp_433);
    goto L32_last;

  L32_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 2087} sdv_277 := sdv_containing_record(Entry_8, 72);
    VirtualDevExt := sdv_277;
    assume {:nonnull} BytesUsed_4 != 0;
    assume BytesUsed_4 > 0;
    call {:si_unique_call 2088} sdv_KeAcquireSpinLockAtDpcLevel(0);
    Tmp_425 := Offset_4;
    Tmp_428 := SubunitInfoBytes + Tmp_425 * 4;
    Tmp_433 := 32 - Offset_4;
    call {:si_unique_call 2089} AvcPackSubunitInfo(VirtualDevExt, Tmp_433, Tmp_428, BytesUsed_4);
    assume {:nonnull} BytesUsed_4 != 0;
    assume BytesUsed_4 > 0;
    havoc Offset_4;
    call {:si_unique_call 2090} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} Entry_8 != 0;
    assume Entry_8 > 0;
    havoc Entry_8;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    call {:si_unique_call 2091} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_426 := Page * 4;
    call {:si_unique_call 2092} sdv_RtlCopyMemory(0, 0, 4);
    ResponseCode_2 := 12;
    goto L12;

  L12:
    call {:si_unique_call 2093} AvcLocalResponse_sdv_static_function_7#0(DeviceObject_16, DevExt_20, ResponseCode_2);
    return;

  anon14_Then:
    assume {:partition} 1 != CommandType_2;
    goto L12;

  anon17_Then:
    assume {:partition} Opcode_5 != 49;
    goto L12;

  anon18_Then:
    assume {:partition} Opcode_5 == 48;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} 1 == CommandType_2;
    assume {:nonnull} DevExt_20 != 0;
    assume DevExt_20 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} DevExt_20 != 0;
    assume DevExt_20 > 0;
    havoc VendorID;
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    call {:si_unique_call 2094} boogieTmp := corral_nondet();
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    call {:si_unique_call 2095} boogieTmp := corral_nondet();
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    ResponseCode_2 := 12;
    goto L12;

  anon16_Then:
    ResponseCode_2 := 10;
    goto L12;

  anon13_Then:
    assume {:partition} 1 != CommandType_2;
    goto L12;
}



procedure {:origName "AvcHandleUnitCommand_sdv_static_function_7"} AvcHandleUnitCommand_sdv_static_function_7#0(actual_DeviceObject_16: int, actual_DevExt_20: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:origName "AvcHandleUnitCommand_sdv_static_function_7"} AvcHandleUnitCommand_sdv_static_function_7#1(actual_DeviceObject_16: int, actual_DevExt_20: int)
{
  var {:scalar} CommandType_2: int;
  var {:scalar} Tmp_425: int;
  var {:scalar} Offset_4: int;
  var {:pointer} VirtualDevExt: int;
  var {:scalar} VendorID: int;
  var {:pointer} SubunitInfoBytes: int;
  var {:scalar} ResponseCode_2: int;
  var {:scalar} Tmp_426: int;
  var {:pointer} Tmp_428: int;
  var {:pointer} sdv_277: int;
  var {:scalar} oldIrql_3: int;
  var {:scalar} Page: int;
  var {:pointer} Tmp_429: int;
  var {:pointer} Entry_8: int;
  var {:pointer} Operands_5: int;
  var {:dopa} {:scalar} BytesUsed_4: int;
  var {:pointer} Tmp_431: int;
  var {:pointer} Tmp_432: int;
  var {:scalar} Opcode_5: int;
  var {:scalar} Tmp_433: int;
  var {:pointer} Tmp_435: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} DevExt_20: int;
  var boogieTmp: int;
  var vslice_dummy_var_359: int;

  anon0:
    call {:si_unique_call 2096} BytesUsed_4 := __HAVOC_malloc(4);
    call {:si_unique_call 2097} vslice_dummy_var_359 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    DevExt_20 := actual_DevExt_20;
    call {:si_unique_call 2098} SubunitInfoBytes := __HAVOC_malloc(128);
    call {:si_unique_call 2099} Tmp_429 := __HAVOC_malloc(2048);
    call {:si_unique_call 2100} Tmp_431 := __HAVOC_malloc(2048);
    call {:si_unique_call 2101} Tmp_432 := __HAVOC_malloc(2048);
    assume {:nonnull} DevExt_20 != 0;
    assume DevExt_20 > 0;
    havoc Tmp_429;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    havoc CommandType_2;
    assume {:nonnull} DevExt_20 != 0;
    assume DevExt_20 > 0;
    havoc Tmp_432;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    havoc Opcode_5;
    ResponseCode_2 := 8;
    assume {:nonnull} DevExt_20 != 0;
    assume DevExt_20 > 0;
    havoc Tmp_431;
    Operands_5 := Tmp_431 + 3 * 4;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Opcode_5 != 48;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Opcode_5 == 49;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} 1 == CommandType_2;
    call {:si_unique_call 2102} Page := corral_nondet();
    Offset_4 := 0;
    call {:si_unique_call 2103} Tmp_435 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    call {:si_unique_call 2104} sdv_KeAcquireSpinLock(0, Tmp_435);
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    havoc oldIrql_3;
    havoc Entry_8;
    goto L32;

  L32:
    call {:si_unique_call 2105} Tmp_425, Offset_4, VirtualDevExt, Tmp_428, sdv_277, Entry_8, Tmp_433 := AvcHandleUnitCommand_sdv_static_function_7#1_loop_L32(Tmp_425, Offset_4, VirtualDevExt, SubunitInfoBytes, Tmp_428, sdv_277, Entry_8, BytesUsed_4, Tmp_433);
    goto L32_last;

  L32_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 2106} sdv_277 := sdv_containing_record(Entry_8, 72);
    VirtualDevExt := sdv_277;
    assume {:nonnull} BytesUsed_4 != 0;
    assume BytesUsed_4 > 0;
    call {:si_unique_call 2107} sdv_KeAcquireSpinLockAtDpcLevel(0);
    Tmp_425 := Offset_4;
    Tmp_428 := SubunitInfoBytes + Tmp_425 * 4;
    Tmp_433 := 32 - Offset_4;
    call {:si_unique_call 2108} AvcPackSubunitInfo(VirtualDevExt, Tmp_433, Tmp_428, BytesUsed_4);
    assume {:nonnull} BytesUsed_4 != 0;
    assume BytesUsed_4 > 0;
    havoc Offset_4;
    call {:si_unique_call 2109} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} Entry_8 != 0;
    assume Entry_8 > 0;
    havoc Entry_8;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    call {:si_unique_call 2110} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_426 := Page * 4;
    call {:si_unique_call 2111} sdv_RtlCopyMemory(0, 0, 4);
    ResponseCode_2 := 12;
    goto L12;

  L12:
    call {:si_unique_call 2112} AvcLocalResponse_sdv_static_function_7#1(DeviceObject_16, DevExt_20, ResponseCode_2);
    return;

  anon14_Then:
    assume {:partition} 1 != CommandType_2;
    goto L12;

  anon17_Then:
    assume {:partition} Opcode_5 != 49;
    goto L12;

  anon18_Then:
    assume {:partition} Opcode_5 == 48;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} 1 == CommandType_2;
    assume {:nonnull} DevExt_20 != 0;
    assume DevExt_20 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} DevExt_20 != 0;
    assume DevExt_20 > 0;
    havoc VendorID;
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    call {:si_unique_call 2113} boogieTmp := corral_nondet();
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    call {:si_unique_call 2114} boogieTmp := corral_nondet();
    assume {:nonnull} Operands_5 != 0;
    assume Operands_5 > 0;
    ResponseCode_2 := 12;
    goto L12;

  anon16_Then:
    ResponseCode_2 := 10;
    goto L12;

  anon13_Then:
    assume {:partition} 1 != CommandType_2;
    goto L12;
}



procedure {:origName "AvcHandleUnitCommand_sdv_static_function_7"} AvcHandleUnitCommand_sdv_static_function_7#1(actual_DeviceObject_16: int, actual_DevExt_20: int);
  modifies alloc, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, irp_status, thread_status;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} thread_status == old(thread_status);
  free ensures {:va_keep} irp_status == old(irp_status);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation sdv_hash_246154148_loop_L3(in_s_p_e_c_i_a_l_1: int, in_s_p_e_c_i_a_l_3: int, in_s_p_e_c_i_a_l_4: int) returns (out_s_p_e_c_i_a_l_3: int)
{

  entry:
    out_s_p_e_c_i_a_l_3 := in_s_p_e_c_i_a_l_3;
    goto L3, exit;

  exit:
    return;

  L3:
    out_s_p_e_c_i_a_l_3 := out_s_p_e_c_i_a_l_3 - 1;
    goto anon3_Else;

  anon3_Else:
    assume {:partition} out_s_p_e_c_i_a_l_3 >= 0;
    assume in_s_p_e_c_i_a_l_4 == 0;
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    havoc out_s_p_e_c_i_a_l_3;
    return;
}



procedure {:LoopProcedure} sdv_hash_246154148_loop_L3(in_s_p_e_c_i_a_l_1: int, in_s_p_e_c_i_a_l_3: int, in_s_p_e_c_i_a_l_4: int) returns (out_s_p_e_c_i_a_l_3: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_132241128_loop_L54()
{

  entry:
    goto L54, exit;

  exit:
    return;

  L54:
    goto L54_dummy;

  L54_dummy:
    call {:si_unique_call 2115} {:si_old_unique_call 1} sdv_hash_132241128_loop_L54();
    return;
}



procedure {:LoopProcedure} sdv_hash_132241128_loop_L54();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_890537390_loop_L121(in_Tmp_116: int, in_Tmp_123: int, in_sdv_68: int, in_sdv_70: int, in_cConnectedExtOutputPlugs: int, in_cConnectedSrcPlugs: int, in_Tmp_138: int, in_cConnectedExtInputPlugs: int, in_dstAddr_3: int, in_srcPlug_4: int, in_bFlags_2: int, in_srcAddr_4: int, in_dstPlug_4: int, in_SubunitAddr_2: int, in_Tmp_155: int, in_cConnectedDstPlugs: int, in_Tmp_164: int, in_Tmp_168: int, in_sdv_105: int, in_Tmp_169: int, in_Tmp_170: int, in_AvcIrb_3: int, in_sdv_113: int, in_idx_3: int, in_sdv_123: int, in_this_16: int) returns (out_Tmp_116: int, out_Tmp_123: int, out_sdv_68: int, out_sdv_70: int, out_cConnectedExtOutputPlugs: int, out_cConnectedSrcPlugs: int, out_Tmp_138: int, out_cConnectedExtInputPlugs: int, out_Tmp_155: int, out_cConnectedDstPlugs: int, out_Tmp_164: int, out_Tmp_168: int, out_sdv_105: int, out_sdv_113: int, out_sdv_123: int)
{

  entry:
    out_Tmp_116, out_Tmp_123, out_sdv_68, out_sdv_70, out_cConnectedExtOutputPlugs, out_cConnectedSrcPlugs, out_Tmp_138, out_cConnectedExtInputPlugs, out_Tmp_155, out_cConnectedDstPlugs, out_Tmp_164, out_Tmp_168, out_sdv_105, out_sdv_113, out_sdv_123 := in_Tmp_116, in_Tmp_123, in_sdv_68, in_sdv_70, in_cConnectedExtOutputPlugs, in_cConnectedSrcPlugs, in_Tmp_138, in_cConnectedExtInputPlugs, in_Tmp_155, in_cConnectedDstPlugs, in_Tmp_164, in_Tmp_168, in_sdv_105, in_sdv_113, in_sdv_123;
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:nonnull} in_srcAddr_4 != 0;
    assume in_srcAddr_4 > 0;
    call {:si_unique_call 2116} sdv_hash_948020419_sdv_special_CTOR(in_srcAddr_4);
    assume {:nonnull} in_dstAddr_3 != 0;
    assume in_dstAddr_3 > 0;
    call {:si_unique_call 2117} sdv_hash_948020419_sdv_special_CTOR(in_dstAddr_3);
    call {:si_unique_call 2118} out_sdv_70 := sdv_hash_889363889(in_this_16, in_AvcIrb_3, in_idx_3, in_bFlags_2, in_srcAddr_4, in_srcPlug_4, in_dstAddr_3, in_dstPlug_4);
    goto anon130_Else;

  anon130_Else:
    assume {:partition} out_sdv_70 != 0;
    call {:si_unique_call 2128} out_sdv_113 := sdv_hash_986172016(in_srcAddr_4, in_SubunitAddr_2);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} out_sdv_113 != 0;
    out_cConnectedSrcPlugs := out_cConnectedSrcPlugs + 1;
    goto L153;

  L153:
    call {:si_unique_call 2124} out_sdv_105 := sdv_hash_986172016(in_dstAddr_3, in_SubunitAddr_2);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} out_sdv_105 != 0;
    out_cConnectedDstPlugs := out_cConnectedDstPlugs + 1;
    goto L161;

  L161:
    call {:si_unique_call 2119} sdv_hash_648551832_sdv_special_DTOR(in_dstAddr_3);
    call {:si_unique_call 2120} sdv_hash_648551832_sdv_special_DTOR(in_srcAddr_4);
    goto L161_dummy;

  L161_dummy:
    call {:si_unique_call 2129} {:si_old_unique_call 1} out_Tmp_116, out_Tmp_123, out_sdv_68, out_sdv_70, out_cConnectedExtOutputPlugs, out_cConnectedSrcPlugs, out_Tmp_138, out_cConnectedExtInputPlugs, out_Tmp_155, out_cConnectedDstPlugs, out_Tmp_164, out_Tmp_168, out_sdv_105, out_sdv_113, out_sdv_123 := sdv_hash_890537390_loop_L121(out_Tmp_116, out_Tmp_123, out_sdv_68, out_sdv_70, out_cConnectedExtOutputPlugs, out_cConnectedSrcPlugs, out_Tmp_138, out_cConnectedExtInputPlugs, in_dstAddr_3, in_srcPlug_4, in_bFlags_2, in_srcAddr_4, in_dstPlug_4, in_SubunitAddr_2, out_Tmp_155, out_cConnectedDstPlugs, out_Tmp_164, out_Tmp_168, out_sdv_105, in_Tmp_169, in_Tmp_170, in_AvcIrb_3, out_sdv_113, in_idx_3, out_sdv_123, in_this_16);
    return;

  anon132_Then:
    assume {:partition} out_sdv_105 == 0;
    call {:si_unique_call 2122} sdv_hash_543516765_sdv_special_CTOR(in_Tmp_170, 255);
    out_Tmp_155 := 1;
    call {:si_unique_call 2123} out_sdv_68 := sdv_hash_986172016(in_dstAddr_3, in_Tmp_170);
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} out_sdv_68 != 0;
    assume {:nonnull} in_dstPlug_4 != 0;
    assume in_dstPlug_4 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    out_Tmp_138 := 1;
    goto L180;

  L180:
    out_Tmp_164 := out_Tmp_138;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} out_Tmp_155 != 0;
    out_Tmp_155 := 0;
    call {:si_unique_call 2121} sdv_hash_648551832_sdv_special_DTOR(in_Tmp_170);
    goto L182;

  L182:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} out_Tmp_164 != 0;
    out_cConnectedExtOutputPlugs := out_cConnectedExtOutputPlugs + 1;
    goto L161;

  anon135_Then:
    assume {:partition} out_Tmp_164 == 0;
    goto L161;

  anon182_Then:
    assume {:partition} out_Tmp_155 == 0;
    goto L182;

  anon134_Then:
    goto L177;

  L177:
    out_Tmp_138 := 0;
    goto L180;

  anon133_Then:
    assume {:partition} out_sdv_68 == 0;
    goto L177;

  anon131_Then:
    assume {:partition} out_sdv_113 == 0;
    call {:si_unique_call 2126} sdv_hash_543516765_sdv_special_CTOR(in_Tmp_169, 255);
    out_Tmp_116 := 1;
    call {:si_unique_call 2127} out_sdv_123 := sdv_hash_986172016(in_srcAddr_4, in_Tmp_169);
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} out_sdv_123 != 0;
    assume {:nonnull} in_srcPlug_4 != 0;
    assume in_srcPlug_4 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    out_Tmp_168 := 1;
    goto L201;

  L201:
    out_Tmp_123 := out_Tmp_168;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} out_Tmp_116 != 0;
    out_Tmp_116 := 0;
    call {:si_unique_call 2125} sdv_hash_648551832_sdv_special_DTOR(in_Tmp_169);
    goto L203;

  L203:
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} out_Tmp_123 != 0;
    out_cConnectedExtInputPlugs := out_cConnectedExtInputPlugs + 1;
    goto L153;

  anon138_Then:
    assume {:partition} out_Tmp_123 == 0;
    goto L153;

  anon183_Then:
    assume {:partition} out_Tmp_116 == 0;
    goto L203;

  anon137_Then:
    goto L198;

  L198:
    out_Tmp_168 := 0;
    goto L201;

  anon136_Then:
    assume {:partition} out_sdv_123 == 0;
    goto L198;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L121(in_Tmp_116: int, in_Tmp_123: int, in_sdv_68: int, in_sdv_70: int, in_cConnectedExtOutputPlugs: int, in_cConnectedSrcPlugs: int, in_Tmp_138: int, in_cConnectedExtInputPlugs: int, in_dstAddr_3: int, in_srcPlug_4: int, in_bFlags_2: int, in_srcAddr_4: int, in_dstPlug_4: int, in_SubunitAddr_2: int, in_Tmp_155: int, in_cConnectedDstPlugs: int, in_Tmp_164: int, in_Tmp_168: int, in_sdv_105: int, in_Tmp_169: int, in_Tmp_170: int, in_AvcIrb_3: int, in_sdv_113: int, in_idx_3: int, in_sdv_123: int, in_this_16: int) returns (out_Tmp_116: int, out_Tmp_123: int, out_sdv_68: int, out_sdv_70: int, out_cConnectedExtOutputPlugs: int, out_cConnectedSrcPlugs: int, out_Tmp_138: int, out_cConnectedExtInputPlugs: int, out_Tmp_155: int, out_cConnectedDstPlugs: int, out_Tmp_164: int, out_Tmp_168: int, out_sdv_105: int, out_sdv_113: int, out_sdv_123: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_116 == 0 || out_Tmp_116 == 1 || out_Tmp_116 == in_Tmp_116;
  free ensures {:va_keep} out_Tmp_123 == 1 || out_Tmp_123 == 0 || out_Tmp_123 == in_Tmp_123;
  free ensures {:va_keep} out_sdv_68 == 1 || out_sdv_68 == 0 || out_sdv_68 == in_sdv_68;
  free ensures {:va_keep} out_sdv_70 == 0 || out_sdv_70 == 1 || out_sdv_70 == in_sdv_70;
  free ensures {:va_keep} out_Tmp_138 == 1 || out_Tmp_138 == 0 || out_Tmp_138 == in_Tmp_138;
  free ensures {:va_keep} out_Tmp_155 == 0 || out_Tmp_155 == 1 || out_Tmp_155 == in_Tmp_155;
  free ensures {:va_keep} out_Tmp_164 == 1 || out_Tmp_164 == 0 || out_Tmp_164 == in_Tmp_164;
  free ensures {:va_keep} out_Tmp_168 == 1 || out_Tmp_168 == 0 || out_Tmp_168 == in_Tmp_168;
  free ensures {:va_keep} out_sdv_105 == 1 || out_sdv_105 == 0 || out_sdv_105 == in_sdv_105;
  free ensures {:va_keep} out_sdv_113 == 1 || out_sdv_113 == 0 || out_sdv_113 == in_sdv_113;
  free ensures {:va_keep} out_sdv_123 == 1 || out_sdv_123 == 0 || out_sdv_123 == in_sdv_123;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_890537390_loop_L301(in_sdv_57: int, in_Tmp_118: int, in_Tmp_119: int, in_srcAddr_3: int, in_srcPlug_3: int, in_sdv_65: int, in_Tmp_127: int, in_Tmp_128: int, in_Tmp_129: int, in_bFlags_1: int, in_Tmp_136: int, in_Tmp_137: int, in_dstPlug_3: int, in_Tmp_140: int, in_sdv_80: int, in_Tmp_143: int, in_Tmp_146: int, in_Tmp_147: int, in_sdv_90: int, in_sdv_95: int, in_SubunitAddr_2: int, in_pMedium_2: int, in_Tmp_151: int, in_dstAddr_4: int, in_sdv_97: int, in_Tmp_153: int, in_Tmp_156: int, in_idx_2: int, in_Tmp_173: int, in_AvcIrb_3: int, in_sdv_111: int, in_ntStatus_4: int, in_pMedium_3: int, in_sdv_115: int, in_Tmp_174: int, in_Tmp_176: int, in_Tmp_177: int, in_Tmp_179: int, in_Tmp_181: int, in_sdv_118: int, in_cDstPlugs: int, in_Tmp_183: int, in_Tmp_184: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_21: int, in_vslice_dummy_var_22: int, in_vslice_dummy_var_23: int, in_vslice_dummy_var_24: int, in_vslice_dummy_var_29: int, in_vslice_dummy_var_30: int) returns (out_sdv_57: int, out_Tmp_118: int, out_Tmp_119: int, out_sdv_65: int, out_Tmp_127: int, out_Tmp_128: int, out_Tmp_129: int, out_Tmp_136: int, out_Tmp_137: int, out_Tmp_140: int, out_sdv_80: int, out_Tmp_143: int, out_Tmp_146: int, out_Tmp_147: int, out_sdv_90: int, out_sdv_95: int, out_pMedium_2: int, out_Tmp_151: int, out_sdv_97: int, out_Tmp_153: int, out_Tmp_173: int, out_sdv_111: int, out_ntStatus_4: int, out_pMedium_3: int, out_sdv_115: int, out_Tmp_176: int, out_Tmp_177: int, out_Tmp_179: int, out_Tmp_181: int, out_sdv_118: int, out_Tmp_183: int, out_Tmp_184: int, out_iPinID: int, out_vslice_dummy_var_21: int, out_vslice_dummy_var_22: int, out_vslice_dummy_var_23: int, out_vslice_dummy_var_24: int, out_vslice_dummy_var_29: int, out_vslice_dummy_var_30: int)
{
  var vslice_dummy_var_2745: int;
  var vslice_dummy_var_2746: int;
  var vslice_dummy_var_2747: int;
  var vslice_dummy_var_2748: int;
  var vslice_dummy_var_2749: int;
  var vslice_dummy_var_2750: int;

  entry:
    out_sdv_57, out_Tmp_118, out_Tmp_119, out_sdv_65, out_Tmp_127, out_Tmp_128, out_Tmp_129, out_Tmp_136, out_Tmp_137, out_Tmp_140, out_sdv_80, out_Tmp_143, out_Tmp_146, out_Tmp_147, out_sdv_90, out_sdv_95, out_pMedium_2, out_Tmp_151, out_sdv_97, out_Tmp_153, out_Tmp_173, out_sdv_111, out_ntStatus_4, out_pMedium_3, out_sdv_115, out_Tmp_176, out_Tmp_177, out_Tmp_179, out_Tmp_181, out_sdv_118, out_Tmp_183, out_Tmp_184, out_iPinID, out_vslice_dummy_var_21, out_vslice_dummy_var_22, out_vslice_dummy_var_23, out_vslice_dummy_var_24, out_vslice_dummy_var_29, out_vslice_dummy_var_30 := in_sdv_57, in_Tmp_118, in_Tmp_119, in_sdv_65, in_Tmp_127, in_Tmp_128, in_Tmp_129, in_Tmp_136, in_Tmp_137, in_Tmp_140, in_sdv_80, in_Tmp_143, in_Tmp_146, in_Tmp_147, in_sdv_90, in_sdv_95, in_pMedium_2, in_Tmp_151, in_sdv_97, in_Tmp_153, in_Tmp_173, in_sdv_111, in_ntStatus_4, in_pMedium_3, in_sdv_115, in_Tmp_176, in_Tmp_177, in_Tmp_179, in_Tmp_181, in_sdv_118, in_Tmp_183, in_Tmp_184, in_iPinID, in_vslice_dummy_var_21, in_vslice_dummy_var_22, in_vslice_dummy_var_23, in_vslice_dummy_var_24, in_vslice_dummy_var_29, in_vslice_dummy_var_30;
    goto L301, exit;

  exit:
    return;

  L301:
    assume {:nonnull} in_srcAddr_3 != 0;
    assume in_srcAddr_3 > 0;
    call {:si_unique_call 2130} sdv_hash_948020419_sdv_special_CTOR(in_srcAddr_3);
    assume {:nonnull} in_dstAddr_4 != 0;
    assume in_dstAddr_4 > 0;
    call {:si_unique_call 2131} sdv_hash_948020419_sdv_special_CTOR(in_dstAddr_4);
    call {:si_unique_call 2132} out_sdv_111 := sdv_hash_889363889(in_this_16, in_AvcIrb_3, in_idx_2, in_bFlags_1, in_srcAddr_3, in_srcPlug_3, in_dstAddr_4, in_dstPlug_3);
    goto anon152_Else;

  anon152_Else:
    assume {:partition} out_sdv_111 != 0;
    call {:si_unique_call 2146} out_sdv_80 := sdv_hash_986172016(in_dstAddr_4, in_SubunitAddr_2);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} out_sdv_80 != 0;
    assume {:nonnull} in_dstPlug_3 != 0;
    assume in_dstPlug_3 > 0;
    havoc out_iPinID;
    assume {:nonnull} in_bFlags_1 != 0;
    assume in_bFlags_1 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} in_Tmp_156 != 0;
    assume in_Tmp_156 > 0;
    out_Tmp_179 := in_Tmp_156;
    call {:si_unique_call 2149} out_sdv_65 := sdv_hash_405508819(in_srcAddr_3, out_Tmp_179);
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} out_sdv_65 == 0;
    goto L355;

  L355:
    assume {:nonnull} in_dstPlug_3 != 0;
    assume in_dstPlug_3 > 0;
    assume {:nonnull} in_srcPlug_3 != 0;
    assume in_srcPlug_3 > 0;
    havoc vslice_dummy_var_2749;
    havoc vslice_dummy_var_2750;
    call {:si_unique_call 2150} out_pMedium_3 := sdv_hash_1062250938(in_this_16, in_srcAddr_3, vslice_dummy_var_2749, in_dstAddr_4, vslice_dummy_var_2750);
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} out_pMedium_3 != 0;
    out_Tmp_146 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_177;
    out_Tmp_128 := out_Tmp_177 + out_Tmp_146 * 324;
    call {:si_unique_call 2135} out_sdv_115 := sdv_hash_677052185(out_Tmp_128, 3);
    call {:si_unique_call 2136} out_vslice_dummy_var_22 := sdv_hash_174130848(out_sdv_115, 1, out_pMedium_3);
    goto L349;

  L349:
    call {:si_unique_call 2133} sdv_hash_648551832_sdv_special_DTOR(in_dstAddr_4);
    call {:si_unique_call 2134} sdv_hash_648551832_sdv_special_DTOR(in_srcAddr_3);
    goto L349_dummy;

  L349_dummy:
    call {:si_unique_call 2151} {:si_old_unique_call 1} out_sdv_57, out_Tmp_118, out_Tmp_119, out_sdv_65, out_Tmp_127, out_Tmp_128, out_Tmp_129, out_Tmp_136, out_Tmp_137, out_Tmp_140, out_sdv_80, out_Tmp_143, out_Tmp_146, out_Tmp_147, out_sdv_90, out_sdv_95, out_pMedium_2, out_Tmp_151, out_sdv_97, out_Tmp_153, out_Tmp_173, out_sdv_111, out_ntStatus_4, out_pMedium_3, out_sdv_115, out_Tmp_176, out_Tmp_177, out_Tmp_179, out_Tmp_181, out_sdv_118, out_Tmp_183, out_Tmp_184, out_iPinID, out_vslice_dummy_var_21, out_vslice_dummy_var_22, out_vslice_dummy_var_23, out_vslice_dummy_var_24, out_vslice_dummy_var_29, out_vslice_dummy_var_30 := sdv_hash_890537390_loop_L301(out_sdv_57, out_Tmp_118, out_Tmp_119, in_srcAddr_3, in_srcPlug_3, out_sdv_65, out_Tmp_127, out_Tmp_128, out_Tmp_129, in_bFlags_1, out_Tmp_136, out_Tmp_137, in_dstPlug_3, out_Tmp_140, out_sdv_80, out_Tmp_143, out_Tmp_146, out_Tmp_147, out_sdv_90, out_sdv_95, in_SubunitAddr_2, out_pMedium_2, out_Tmp_151, in_dstAddr_4, out_sdv_97, out_Tmp_153, in_Tmp_156, in_idx_2, out_Tmp_173, in_AvcIrb_3, out_sdv_111, out_ntStatus_4, out_pMedium_3, out_sdv_115, in_Tmp_174, out_Tmp_176, out_Tmp_177, out_Tmp_179, out_Tmp_181, out_sdv_118, in_cDstPlugs, out_Tmp_183, out_Tmp_184, out_iPinID, in_this_16, out_vslice_dummy_var_21, out_vslice_dummy_var_22, out_vslice_dummy_var_23, out_vslice_dummy_var_24, out_vslice_dummy_var_29, out_vslice_dummy_var_30);
    return;

  anon156_Then:
    assume {:partition} out_pMedium_3 == 0;
    out_ntStatus_4 := -1073741670;
    goto L349;

  anon154_Then:
    assume {:partition} out_sdv_65 != 0;
    assume {:nonnull} in_srcPlug_3 != 0;
    assume in_srcPlug_3 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    goto L355;

  anon155_Then:
    out_Tmp_184 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_140;
    out_Tmp_176 := out_Tmp_140 + out_Tmp_184 * 324;
    call {:si_unique_call 2137} out_sdv_95 := sdv_hash_677052185(out_Tmp_176, 8);
    assume {:nonnull} in_srcPlug_3 != 0;
    assume in_srcPlug_3 > 0;
    havoc vslice_dummy_var_2745;
    call {:si_unique_call 2138} out_vslice_dummy_var_21 := sdv_hash_859452142(out_sdv_95, vslice_dummy_var_2745);
    goto L349;

  anon179_Then:
    out_Tmp_118 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_147;
    out_Tmp_127 := out_Tmp_147 + out_Tmp_118 * 324;
    call {:si_unique_call 2139} out_vslice_dummy_var_29 := sdv_hash_677052185(out_Tmp_127, 2);
    goto L349;

  anon153_Then:
    assume {:partition} out_sdv_80 == 0;
    call {:si_unique_call 2145} out_sdv_57 := sdv_hash_986172016(in_srcAddr_3, in_SubunitAddr_2);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} out_sdv_57 != 0;
    assume {:nonnull} in_srcPlug_3 != 0;
    assume in_srcPlug_3 > 0;
    havoc out_iPinID;
    assume {:nonnull} in_bFlags_1 != 0;
    assume in_bFlags_1 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} in_Tmp_174 != 0;
    assume in_Tmp_174 > 0;
    out_Tmp_173 := in_Tmp_174;
    call {:si_unique_call 2147} out_sdv_90 := sdv_hash_405508819(in_dstAddr_4, out_Tmp_173);
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} out_sdv_90 == 0;
    goto L389;

  L389:
    assume {:nonnull} in_dstPlug_3 != 0;
    assume in_dstPlug_3 > 0;
    assume {:nonnull} in_srcPlug_3 != 0;
    assume in_srcPlug_3 > 0;
    havoc vslice_dummy_var_2747;
    havoc vslice_dummy_var_2748;
    call {:si_unique_call 2148} out_pMedium_2 := sdv_hash_1062250938(in_this_16, in_srcAddr_3, vslice_dummy_var_2747, in_dstAddr_4, vslice_dummy_var_2748);
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} out_pMedium_2 != 0;
    out_Tmp_137 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_181;
    out_Tmp_129 := out_Tmp_181 + out_Tmp_137 * 324;
    call {:si_unique_call 2140} out_sdv_118 := sdv_hash_677052185(out_Tmp_129, 3);
    call {:si_unique_call 2141} out_vslice_dummy_var_24 := sdv_hash_174130848(out_sdv_118, 1, out_pMedium_2);
    goto L349;

  anon160_Then:
    assume {:partition} out_pMedium_2 == 0;
    out_ntStatus_4 := -1073741670;
    goto L349;

  anon158_Then:
    assume {:partition} out_sdv_90 != 0;
    assume {:nonnull} in_dstPlug_3 != 0;
    assume in_dstPlug_3 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto L389;

  anon159_Then:
    out_Tmp_119 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_151;
    out_Tmp_143 := out_Tmp_151 + out_Tmp_119 * 324;
    call {:si_unique_call 2142} out_sdv_97 := sdv_hash_677052185(out_Tmp_143, 8);
    assume {:nonnull} in_dstPlug_3 != 0;
    assume in_dstPlug_3 > 0;
    havoc vslice_dummy_var_2746;
    call {:si_unique_call 2143} out_vslice_dummy_var_23 := sdv_hash_859452142(out_sdv_97, vslice_dummy_var_2746);
    goto L349;

  anon180_Then:
    out_Tmp_183 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_136;
    out_Tmp_153 := out_Tmp_136 + out_Tmp_183 * 324;
    call {:si_unique_call 2144} out_vslice_dummy_var_30 := sdv_hash_677052185(out_Tmp_153, 2);
    goto L349;

  anon157_Then:
    assume {:partition} out_sdv_57 == 0;
    goto L349;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L301(in_sdv_57: int, in_Tmp_118: int, in_Tmp_119: int, in_srcAddr_3: int, in_srcPlug_3: int, in_sdv_65: int, in_Tmp_127: int, in_Tmp_128: int, in_Tmp_129: int, in_bFlags_1: int, in_Tmp_136: int, in_Tmp_137: int, in_dstPlug_3: int, in_Tmp_140: int, in_sdv_80: int, in_Tmp_143: int, in_Tmp_146: int, in_Tmp_147: int, in_sdv_90: int, in_sdv_95: int, in_SubunitAddr_2: int, in_pMedium_2: int, in_Tmp_151: int, in_dstAddr_4: int, in_sdv_97: int, in_Tmp_153: int, in_Tmp_156: int, in_idx_2: int, in_Tmp_173: int, in_AvcIrb_3: int, in_sdv_111: int, in_ntStatus_4: int, in_pMedium_3: int, in_sdv_115: int, in_Tmp_174: int, in_Tmp_176: int, in_Tmp_177: int, in_Tmp_179: int, in_Tmp_181: int, in_sdv_118: int, in_cDstPlugs: int, in_Tmp_183: int, in_Tmp_184: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_21: int, in_vslice_dummy_var_22: int, in_vslice_dummy_var_23: int, in_vslice_dummy_var_24: int, in_vslice_dummy_var_29: int, in_vslice_dummy_var_30: int) returns (out_sdv_57: int, out_Tmp_118: int, out_Tmp_119: int, out_sdv_65: int, out_Tmp_127: int, out_Tmp_128: int, out_Tmp_129: int, out_Tmp_136: int, out_Tmp_137: int, out_Tmp_140: int, out_sdv_80: int, out_Tmp_143: int, out_Tmp_146: int, out_Tmp_147: int, out_sdv_90: int, out_sdv_95: int, out_pMedium_2: int, out_Tmp_151: int, out_sdv_97: int, out_Tmp_153: int, out_Tmp_173: int, out_sdv_111: int, out_ntStatus_4: int, out_pMedium_3: int, out_sdv_115: int, out_Tmp_176: int, out_Tmp_177: int, out_Tmp_179: int, out_Tmp_181: int, out_sdv_118: int, out_Tmp_183: int, out_Tmp_184: int, out_iPinID: int, out_vslice_dummy_var_21: int, out_vslice_dummy_var_22: int, out_vslice_dummy_var_23: int, out_vslice_dummy_var_24: int, out_vslice_dummy_var_29: int, out_vslice_dummy_var_30: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_57 == 1 || out_sdv_57 == 0 || out_sdv_57 == in_sdv_57;
  free ensures {:va_keep} out_sdv_65 == 1 || out_sdv_65 == 0 || out_sdv_65 == in_sdv_65;
  free ensures {:va_keep} out_sdv_80 == 1 || out_sdv_80 == 0 || out_sdv_80 == in_sdv_80;
  free ensures {:va_keep} out_sdv_90 == 1 || out_sdv_90 == 0 || out_sdv_90 == in_sdv_90;
  free ensures {:va_keep} out_Tmp_173 == in_Tmp_173 || out_Tmp_173 == in_Tmp_174;
  free ensures {:va_keep} out_sdv_111 == 0 || out_sdv_111 == 1 || out_sdv_111 == in_sdv_111;
  free ensures {:va_keep} out_ntStatus_4 == -1073741670 || out_ntStatus_4 == in_ntStatus_4;
  free ensures {:va_keep} out_Tmp_179 == in_Tmp_179 || out_Tmp_179 == in_Tmp_156;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_890537390_loop_L279(in_cSrcPlugs: int, in_Tmp_126: int, in_sdv_84: int, in_iSrcPlug: int, in_Tmp_157: int, in_Tmp_166: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_20: int) returns (out_Tmp_126: int, out_sdv_84: int, out_iSrcPlug: int, out_Tmp_157: int, out_Tmp_166: int, out_iPinID: int, out_vslice_dummy_var_20: int)
{

  entry:
    out_Tmp_126, out_sdv_84, out_iSrcPlug, out_Tmp_157, out_Tmp_166, out_iPinID, out_vslice_dummy_var_20 := in_Tmp_126, in_sdv_84, in_iSrcPlug, in_Tmp_157, in_Tmp_166, in_iPinID, in_vslice_dummy_var_20;
    goto L279, exit;

  exit:
    return;

  L279:
    goto anon151_Then;

  anon151_Then:
    assume {:partition} out_iSrcPlug < in_cSrcPlugs;
    out_Tmp_126 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_157;
    out_Tmp_166 := out_Tmp_157 + out_Tmp_126 * 324;
    call {:si_unique_call 2152} out_sdv_84 := sdv_hash_827633206(out_Tmp_166, KsSrcPinDescriptor);
    call {:si_unique_call 2153} out_vslice_dummy_var_20 := sdv_hash_265040478(out_sdv_84, out_iSrcPlug);
    out_iSrcPlug := out_iSrcPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto anon151_Then_dummy;

  anon151_Then_dummy:
    call {:si_unique_call 2154} {:si_old_unique_call 1} out_Tmp_126, out_sdv_84, out_iSrcPlug, out_Tmp_157, out_Tmp_166, out_iPinID, out_vslice_dummy_var_20 := sdv_hash_890537390_loop_L279(in_cSrcPlugs, out_Tmp_126, out_sdv_84, out_iSrcPlug, out_Tmp_157, out_Tmp_166, out_iPinID, in_this_16, out_vslice_dummy_var_20);
    return;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L279(in_cSrcPlugs: int, in_Tmp_126: int, in_sdv_84: int, in_iSrcPlug: int, in_Tmp_157: int, in_Tmp_166: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_20: int) returns (out_Tmp_126: int, out_sdv_84: int, out_iSrcPlug: int, out_Tmp_157: int, out_Tmp_166: int, out_iPinID: int, out_vslice_dummy_var_20: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_890537390_loop_L278(in_sdv_59: int, in_iDstPlug: int, in_Tmp_117: int, in_Tmp_124: int, in_Tmp_132: int, in_cDstPlugs: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_19: int) returns (out_sdv_59: int, out_iDstPlug: int, out_Tmp_117: int, out_Tmp_124: int, out_Tmp_132: int, out_iPinID: int, out_vslice_dummy_var_19: int)
{

  entry:
    out_sdv_59, out_iDstPlug, out_Tmp_117, out_Tmp_124, out_Tmp_132, out_iPinID, out_vslice_dummy_var_19 := in_sdv_59, in_iDstPlug, in_Tmp_117, in_Tmp_124, in_Tmp_132, in_iPinID, in_vslice_dummy_var_19;
    goto L278, exit;

  exit:
    return;

  L278:
    goto anon150_Else;

  anon150_Else:
    assume {:partition} in_cDstPlugs > out_iDstPlug;
    out_Tmp_132 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_117;
    out_Tmp_124 := out_Tmp_117 + out_Tmp_132 * 324;
    call {:si_unique_call 2155} out_sdv_59 := sdv_hash_827633206(out_Tmp_124, KsDstPinDescriptor);
    call {:si_unique_call 2156} out_vslice_dummy_var_19 := sdv_hash_265040478(out_sdv_59, out_iDstPlug);
    out_iDstPlug := out_iDstPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto anon150_Else_dummy;

  anon150_Else_dummy:
    call {:si_unique_call 2157} {:si_old_unique_call 1} out_sdv_59, out_iDstPlug, out_Tmp_117, out_Tmp_124, out_Tmp_132, out_iPinID, out_vslice_dummy_var_19 := sdv_hash_890537390_loop_L278(out_sdv_59, out_iDstPlug, out_Tmp_117, out_Tmp_124, out_Tmp_132, in_cDstPlugs, out_iPinID, in_this_16, out_vslice_dummy_var_19);
    return;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L278(in_sdv_59: int, in_iDstPlug: int, in_Tmp_117: int, in_Tmp_124: int, in_Tmp_132: int, in_cDstPlugs: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_19: int) returns (out_sdv_59: int, out_iDstPlug: int, out_Tmp_117: int, out_Tmp_124: int, out_Tmp_132: int, out_iPinID: int, out_vslice_dummy_var_19: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_890537390_loop_L419()
{

  entry:
    goto L419, exit;

  exit:
    return;

  L419:
    goto L419_dummy;

  L419_dummy:
    call {:si_unique_call 2158} {:si_old_unique_call 1} sdv_hash_890537390_loop_L419();
    return;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L419();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_890537390_loop_L427(in_cSrcPlugs: int, in_OutputIrb_1: int, in_Irp_1: int, in_Tmp_130: int, in_sdv_85: int, in_Tmp_145: int, in_sdv_94: int, in_SubunitAddr_2: int, in_iSrcPlug: int, in_Tmp_161: int, in_AvcIrb_3: int, in_ntStatus_4: int, in_sdv_122: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_25: int) returns (out_Tmp_130: int, out_sdv_85: int, out_Tmp_145: int, out_sdv_94: int, out_iSrcPlug: int, out_Tmp_161: int, out_ntStatus_4: int, out_sdv_122: int, out_iPinID: int, out_vslice_dummy_var_25: int)
{

  entry:
    out_Tmp_130, out_sdv_85, out_Tmp_145, out_sdv_94, out_iSrcPlug, out_Tmp_161, out_ntStatus_4, out_sdv_122, out_iPinID, out_vslice_dummy_var_25 := in_Tmp_130, in_sdv_85, in_Tmp_145, in_sdv_94, in_iSrcPlug, in_Tmp_161, in_ntStatus_4, in_sdv_122, in_iPinID, in_vslice_dummy_var_25;
    goto L427, exit;

  exit:
    return;

  L427:
    goto anon164_Else;

  anon164_Else:
    assume {:partition} out_ntStatus_4 == 0;
    goto anon165_Else;

  anon165_Else:
    assume {:partition} in_cSrcPlugs > out_iSrcPlug;
    out_Tmp_161 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_145;
    out_Tmp_130 := out_Tmp_145 + out_Tmp_161 * 324;
    call {:si_unique_call 2163} out_sdv_94 := sdv_hash_827633206(out_Tmp_130, KsSrcPinDescriptor);
    call {:si_unique_call 2164} out_vslice_dummy_var_25 := sdv_hash_265040478(out_sdv_94, out_iSrcPlug);
    call {:si_unique_call 2165} out_ntStatus_4 := sdv_hash_802132520(in_AvcIrb_3, in_SubunitAddr_2, out_iSrcPlug, in_OutputIrb_1);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} out_ntStatus_4 >= 0;
    call {:si_unique_call 2161} out_sdv_122 := sdv_hash_291696418(in_OutputIrb_1);
    call {:si_unique_call 2162} out_ntStatus_4 := sdv_hash_592377359(in_Irp_1, out_sdv_122);
    goto L441;

  L441:
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} out_ntStatus_4 != 0;
    goto L452;

  L452:
    out_iSrcPlug := out_iSrcPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto L452_dummy;

  L452_dummy:
    call {:si_unique_call 2166} {:si_old_unique_call 1} out_Tmp_130, out_sdv_85, out_Tmp_145, out_sdv_94, out_iSrcPlug, out_Tmp_161, out_ntStatus_4, out_sdv_122, out_iPinID, out_vslice_dummy_var_25 := sdv_hash_890537390_loop_L427(in_cSrcPlugs, in_OutputIrb_1, in_Irp_1, out_Tmp_130, out_sdv_85, out_Tmp_145, out_sdv_94, in_SubunitAddr_2, out_iSrcPlug, out_Tmp_161, in_AvcIrb_3, out_ntStatus_4, out_sdv_122, out_iPinID, in_this_16, out_vslice_dummy_var_25);
    return;

  anon167_Then:
    assume {:partition} out_ntStatus_4 == 0;
    call {:si_unique_call 2160} out_sdv_85 := sdv_hash_390207871(in_AvcIrb_3);
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} out_sdv_85 == 12;
    call {:si_unique_call 2159} out_ntStatus_4 := sdv_hash_994092636(in_this_16, in_AvcIrb_3, out_iPinID);
    goto L452;

  anon168_Then:
    assume {:partition} out_sdv_85 != 12;
    goto L452;

  anon166_Then:
    assume {:partition} 0 > out_ntStatus_4;
    goto L441;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L427(in_cSrcPlugs: int, in_OutputIrb_1: int, in_Irp_1: int, in_Tmp_130: int, in_sdv_85: int, in_Tmp_145: int, in_sdv_94: int, in_SubunitAddr_2: int, in_iSrcPlug: int, in_Tmp_161: int, in_AvcIrb_3: int, in_ntStatus_4: int, in_sdv_122: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_25: int) returns (out_Tmp_130: int, out_sdv_85: int, out_Tmp_145: int, out_sdv_94: int, out_iSrcPlug: int, out_Tmp_161: int, out_ntStatus_4: int, out_sdv_122: int, out_iPinID: int, out_vslice_dummy_var_25: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} out_sdv_122 == in_sdv_122 || out_sdv_122 == in_OutputIrb_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_890537390_loop_L425(in_iDstPlug: int, in_OutputIrb_1: int, in_sdv_61: int, in_Irp_1: int, in_Tmp_133: int, in_Tmp_141: int, in_SubunitAddr_2: int, in_sdv_102: int, in_Tmp_160: int, in_sdv_107: int, in_AvcIrb_3: int, in_ntStatus_4: int, in_cDstPlugs: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_26: int) returns (out_iDstPlug: int, out_sdv_61: int, out_Tmp_133: int, out_Tmp_141: int, out_sdv_102: int, out_Tmp_160: int, out_sdv_107: int, out_ntStatus_4: int, out_iPinID: int, out_vslice_dummy_var_26: int)
{

  entry:
    out_iDstPlug, out_sdv_61, out_Tmp_133, out_Tmp_141, out_sdv_102, out_Tmp_160, out_sdv_107, out_ntStatus_4, out_iPinID, out_vslice_dummy_var_26 := in_iDstPlug, in_sdv_61, in_Tmp_133, in_Tmp_141, in_sdv_102, in_Tmp_160, in_sdv_107, in_ntStatus_4, in_iPinID, in_vslice_dummy_var_26;
    goto L425, exit;

  exit:
    return;

  L425:
    goto anon162_Then;

  anon162_Then:
    assume {:partition} out_ntStatus_4 == 0;
    goto anon163_Else;

  anon163_Else:
    assume {:partition} in_cDstPlugs > out_iDstPlug;
    out_Tmp_133 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_160;
    out_Tmp_141 := out_Tmp_160 + out_Tmp_133 * 324;
    call {:si_unique_call 2171} out_sdv_61 := sdv_hash_827633206(out_Tmp_141, KsDstPinDescriptor);
    call {:si_unique_call 2172} out_vslice_dummy_var_26 := sdv_hash_265040478(out_sdv_61, out_iDstPlug);
    call {:si_unique_call 2173} out_ntStatus_4 := sdv_hash_575386943(in_AvcIrb_3, in_SubunitAddr_2, out_iDstPlug, in_OutputIrb_1);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} out_ntStatus_4 >= 0;
    call {:si_unique_call 2169} out_sdv_107 := sdv_hash_291696418(in_OutputIrb_1);
    call {:si_unique_call 2170} out_ntStatus_4 := sdv_hash_592377359(in_Irp_1, out_sdv_107);
    goto L471;

  L471:
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} out_ntStatus_4 != 0;
    goto L482;

  L482:
    out_iDstPlug := out_iDstPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto L482_dummy;

  L482_dummy:
    call {:si_unique_call 2174} {:si_old_unique_call 1} out_iDstPlug, out_sdv_61, out_Tmp_133, out_Tmp_141, out_sdv_102, out_Tmp_160, out_sdv_107, out_ntStatus_4, out_iPinID, out_vslice_dummy_var_26 := sdv_hash_890537390_loop_L425(out_iDstPlug, in_OutputIrb_1, out_sdv_61, in_Irp_1, out_Tmp_133, out_Tmp_141, in_SubunitAddr_2, out_sdv_102, out_Tmp_160, out_sdv_107, in_AvcIrb_3, out_ntStatus_4, in_cDstPlugs, out_iPinID, in_this_16, out_vslice_dummy_var_26);
    return;

  anon170_Then:
    assume {:partition} out_ntStatus_4 == 0;
    call {:si_unique_call 2168} out_sdv_102 := sdv_hash_390207871(in_AvcIrb_3);
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} out_sdv_102 == 12;
    call {:si_unique_call 2167} out_ntStatus_4 := sdv_hash_994092636(in_this_16, in_AvcIrb_3, out_iPinID);
    goto L482;

  anon171_Then:
    assume {:partition} out_sdv_102 != 12;
    goto L482;

  anon169_Then:
    assume {:partition} 0 > out_ntStatus_4;
    goto L471;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L425(in_iDstPlug: int, in_OutputIrb_1: int, in_sdv_61: int, in_Irp_1: int, in_Tmp_133: int, in_Tmp_141: int, in_SubunitAddr_2: int, in_sdv_102: int, in_Tmp_160: int, in_sdv_107: int, in_AvcIrb_3: int, in_ntStatus_4: int, in_cDstPlugs: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_26: int) returns (out_iDstPlug: int, out_sdv_61: int, out_Tmp_133: int, out_Tmp_141: int, out_sdv_102: int, out_Tmp_160: int, out_sdv_107: int, out_ntStatus_4: int, out_iPinID: int, out_vslice_dummy_var_26: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} out_sdv_107 == in_sdv_107 || out_sdv_107 == in_OutputIrb_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_890537390_loop_L489(in_cSrcPlugs: int, in_Tmp_131: int, in_Tmp_142: int, in_iSrcPlug: int, in_sdv_100: int, in_Tmp_171: int, in_sdv_125: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_28: int) returns (out_Tmp_131: int, out_Tmp_142: int, out_iSrcPlug: int, out_sdv_100: int, out_Tmp_171: int, out_sdv_125: int, out_iPinID: int, out_vslice_dummy_var_28: int)
{

  entry:
    out_Tmp_131, out_Tmp_142, out_iSrcPlug, out_sdv_100, out_Tmp_171, out_sdv_125, out_iPinID, out_vslice_dummy_var_28 := in_Tmp_131, in_Tmp_142, in_iSrcPlug, in_sdv_100, in_Tmp_171, in_sdv_125, in_iPinID, in_vslice_dummy_var_28;
    goto L489, exit;

  exit:
    return;

  L489:
    goto anon172_Else;

  anon172_Else:
    assume {:partition} in_cSrcPlugs > out_iSrcPlug;
    out_Tmp_142 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_171;
    out_Tmp_131 := out_Tmp_171 + out_Tmp_142 * 324;
    call {:si_unique_call 2175} out_sdv_100 := sdv_hash_827633206(out_Tmp_131, KsSrcPinDescriptor);
    call {:si_unique_call 2176} out_sdv_125 := sdv_hash_859452142(out_sdv_100, out_iSrcPlug);
    call {:si_unique_call 2177} out_vslice_dummy_var_28 := sdv_hash_677052185(out_sdv_125, 4);
    out_iSrcPlug := out_iSrcPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto anon172_Else_dummy;

  anon172_Else_dummy:
    call {:si_unique_call 2178} {:si_old_unique_call 1} out_Tmp_131, out_Tmp_142, out_iSrcPlug, out_sdv_100, out_Tmp_171, out_sdv_125, out_iPinID, out_vslice_dummy_var_28 := sdv_hash_890537390_loop_L489(in_cSrcPlugs, out_Tmp_131, out_Tmp_142, out_iSrcPlug, out_sdv_100, out_Tmp_171, out_sdv_125, out_iPinID, in_this_16, out_vslice_dummy_var_28);
    return;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L489(in_cSrcPlugs: int, in_Tmp_131: int, in_Tmp_142: int, in_iSrcPlug: int, in_sdv_100: int, in_Tmp_171: int, in_sdv_125: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_28: int) returns (out_Tmp_131: int, out_Tmp_142: int, out_iSrcPlug: int, out_sdv_100: int, out_Tmp_171: int, out_sdv_125: int, out_iPinID: int, out_vslice_dummy_var_28: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_890537390_loop_L422(in_iDstPlug: int, in_sdv_72: int, in_Tmp_134: int, in_sdv_93: int, in_Tmp_165: int, in_Tmp_175: int, in_cDstPlugs: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_27: int) returns (out_iDstPlug: int, out_sdv_72: int, out_Tmp_134: int, out_sdv_93: int, out_Tmp_165: int, out_Tmp_175: int, out_iPinID: int, out_vslice_dummy_var_27: int)
{

  entry:
    out_iDstPlug, out_sdv_72, out_Tmp_134, out_sdv_93, out_Tmp_165, out_Tmp_175, out_iPinID, out_vslice_dummy_var_27 := in_iDstPlug, in_sdv_72, in_Tmp_134, in_sdv_93, in_Tmp_165, in_Tmp_175, in_iPinID, in_vslice_dummy_var_27;
    goto L422, exit;

  exit:
    return;

  L422:
    goto anon161_Else;

  anon161_Else:
    assume {:partition} in_cDstPlugs > out_iDstPlug;
    out_Tmp_165 := out_iPinID;
    assume {:nonnull} in_this_16 != 0;
    assume in_this_16 > 0;
    havoc out_Tmp_175;
    out_Tmp_134 := out_Tmp_175 + out_Tmp_165 * 324;
    call {:si_unique_call 2179} out_sdv_72 := sdv_hash_827633206(out_Tmp_134, KsDstPinDescriptor);
    call {:si_unique_call 2180} out_sdv_93 := sdv_hash_859452142(out_sdv_72, out_iDstPlug);
    call {:si_unique_call 2181} out_vslice_dummy_var_27 := sdv_hash_677052185(out_sdv_93, 4);
    out_iDstPlug := out_iDstPlug + 1;
    out_iPinID := out_iPinID + 1;
    goto anon161_Else_dummy;

  anon161_Else_dummy:
    call {:si_unique_call 2182} {:si_old_unique_call 1} out_iDstPlug, out_sdv_72, out_Tmp_134, out_sdv_93, out_Tmp_165, out_Tmp_175, out_iPinID, out_vslice_dummy_var_27 := sdv_hash_890537390_loop_L422(out_iDstPlug, out_sdv_72, out_Tmp_134, out_sdv_93, out_Tmp_165, out_Tmp_175, in_cDstPlugs, out_iPinID, in_this_16, out_vslice_dummy_var_27);
    return;
}



procedure {:LoopProcedure} sdv_hash_890537390_loop_L422(in_iDstPlug: int, in_sdv_72: int, in_Tmp_134: int, in_sdv_93: int, in_Tmp_165: int, in_Tmp_175: int, in_cDstPlugs: int, in_iPinID: int, in_this_16: int, in_vslice_dummy_var_27: int) returns (out_iDstPlug: int, out_sdv_72: int, out_Tmp_134: int, out_sdv_93: int, out_Tmp_165: int, out_Tmp_175: int, out_iPinID: int, out_vslice_dummy_var_27: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_238556857_loop_L52()
{

  entry:
    goto L52, exit;

  exit:
    return;

  L52:
    goto L52_dummy;

  L52_dummy:
    call {:si_unique_call 2183} {:si_old_unique_call 1} sdv_hash_238556857_loop_L52();
    return;
}



procedure {:LoopProcedure} sdv_hash_238556857_loop_L52();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcSubunitPackedTypesEqual_loop_L16(in_Tmp_239: int, in_Tmp_242: int, in_idx_4: int, in_SubunitType1: int, in_SubunitType2: int) returns (out_Tmp_239: int, out_Tmp_242: int, out_idx_4: int)
{

  entry:
    out_Tmp_239, out_Tmp_242, out_idx_4 := in_Tmp_239, in_Tmp_242, in_idx_4;
    goto L16, exit;

  exit:
    return;

  L16:
    out_Tmp_239 := out_idx_4;
    assume {:nonnull} in_SubunitType1 != 0;
    assume in_SubunitType1 > 0;
    goto anon22_Else;

  anon22_Else:
    out_Tmp_242 := out_idx_4;
    assume {:nonnull} in_SubunitType2 != 0;
    assume in_SubunitType2 > 0;
    goto anon23_Then;

  anon23_Then:
    out_idx_4 := out_idx_4 + 1;
    goto anon23_Then_dummy;

  anon23_Then_dummy:
    havoc out_idx_4;
    return;
}



procedure {:LoopProcedure} AvcSubunitPackedTypesEqual_loop_L16(in_Tmp_239: int, in_Tmp_242: int, in_idx_4: int, in_SubunitType1: int, in_SubunitType2: int) returns (out_Tmp_239: int, out_Tmp_242: int, out_idx_4: int);
  free ensures {:va_keep} out_Tmp_239 == in_idx_4 || out_Tmp_239 == in_Tmp_239;
  free ensures {:va_keep} out_Tmp_242 == in_idx_4 || out_Tmp_242 == in_Tmp_242;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcStopAllFCPProcessing_loop_L22(in_sdv_156: int, in_OldIrql_1: int, in_sdv_162: int, in_Tmp_246: int, in_Command_1: int, in_DevExt_1: int) returns (out_sdv_156: int, out_OldIrql_1: int, out_sdv_162: int, out_Tmp_246: int, out_Command_1: int)
{

  entry:
    out_sdv_156, out_OldIrql_1, out_sdv_162, out_Tmp_246, out_Command_1 := in_sdv_156, in_OldIrql_1, in_sdv_162, in_Tmp_246, in_Command_1;
    goto L22, exit;

  exit:
    return;

  L22:
    call {:si_unique_call 2184} out_sdv_162 := sdv_IsListEmpty(0);
    goto anon17_Then;

  anon17_Then:
    assume {:partition} out_sdv_162 == 0;
    assume {:nonnull} in_DevExt_1 != 0;
    assume in_DevExt_1 > 0;
    call {:si_unique_call 2185} out_sdv_156 := RemoveHeadList(CleanupList__BUS_DEVICE_EXTENSION(in_DevExt_1));
    out_Command_1 := out_sdv_156;
    call {:si_unique_call 2186} InitializeListHead(out_Command_1);
    call {:si_unique_call 2187} sdv_KeReleaseSpinLock(0, out_OldIrql_1);
    call {:si_unique_call 2188} AvcPendingIrpCompletion(out_Command_1);
    call {:si_unique_call 2189} AvcFreeCommandContext(out_Command_1);
    call {:si_unique_call 2190} out_Tmp_246 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    call {:si_unique_call 2191} sdv_KeAcquireSpinLock(0, out_Tmp_246);
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    havoc out_OldIrql_1;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    call {:si_unique_call 2192} {:si_old_unique_call 1} out_sdv_156, out_OldIrql_1, out_sdv_162, out_Tmp_246, out_Command_1 := AvcStopAllFCPProcessing_loop_L22(out_sdv_156, out_OldIrql_1, out_sdv_162, out_Tmp_246, out_Command_1, in_DevExt_1);
    return;
}



procedure {:LoopProcedure} AvcStopAllFCPProcessing_loop_L22(in_sdv_156: int, in_OldIrql_1: int, in_sdv_162: int, in_Tmp_246: int, in_Command_1: int, in_DevExt_1: int) returns (out_sdv_156: int, out_OldIrql_1: int, out_sdv_162: int, out_Tmp_246: int, out_Command_1: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} out_sdv_162 == 1 || out_sdv_162 == 0 || out_sdv_162 == in_sdv_162;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcStopAllFCPProcessing_loop_L15(in_OldIrql_1: int, in_sdv_160: int, in_sdv_161: int, in_Tmp_246: int, in_Command_1: int, in_DevExt_1: int) returns (out_OldIrql_1: int, out_sdv_160: int, out_sdv_161: int, out_Tmp_246: int, out_Command_1: int)
{

  entry:
    out_OldIrql_1, out_sdv_160, out_sdv_161, out_Tmp_246, out_Command_1 := in_OldIrql_1, in_sdv_160, in_sdv_161, in_Tmp_246, in_Command_1;
    goto L15, exit;

  exit:
    return;

  L15:
    call {:si_unique_call 2193} out_sdv_160 := sdv_IsListEmpty(0);
    goto anon16_Then;

  anon16_Then:
    assume {:partition} out_sdv_160 == 0;
    assume {:nonnull} in_DevExt_1 != 0;
    assume in_DevExt_1 > 0;
    call {:si_unique_call 2194} out_sdv_161 := RemoveHeadList(PendingRequestList__BUS_DEVICE_EXTENSION(in_DevExt_1));
    out_Command_1 := out_sdv_161;
    call {:si_unique_call 2195} InitializeListHead(out_Command_1);
    call {:si_unique_call 2196} sdv_KeReleaseSpinLock(0, out_OldIrql_1);
    assume {:nonnull} out_Command_1 != 0;
    assume out_Command_1 > 0;
    call {:si_unique_call 2197} AvcPendingIrpCompletion(out_Command_1);
    call {:si_unique_call 2198} AvcFreeCommandContext(out_Command_1);
    out_Command_1 := 0;
    call {:si_unique_call 2199} out_Tmp_246 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    call {:si_unique_call 2200} sdv_KeAcquireSpinLock(0, out_Tmp_246);
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    havoc out_OldIrql_1;
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    call {:si_unique_call 2201} {:si_old_unique_call 1} out_OldIrql_1, out_sdv_160, out_sdv_161, out_Tmp_246, out_Command_1 := AvcStopAllFCPProcessing_loop_L15(out_OldIrql_1, out_sdv_160, out_sdv_161, out_Tmp_246, out_Command_1, in_DevExt_1);
    return;
}



procedure {:LoopProcedure} AvcStopAllFCPProcessing_loop_L15(in_OldIrql_1: int, in_sdv_160: int, in_sdv_161: int, in_Tmp_246: int, in_Command_1: int, in_DevExt_1: int) returns (out_OldIrql_1: int, out_sdv_160: int, out_sdv_161: int, out_Tmp_246: int, out_Command_1: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} out_sdv_160 == 1 || out_sdv_160 == 0 || out_sdv_160 == in_sdv_160;
  free ensures {:va_keep} out_Command_1 == 0 || out_Command_1 == in_Command_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcStopAllFCPProcessing_loop_L8(in_sdv_155: int, in_sdv_157: int, in_OldIrql_1: int, in_sdv_159: int, in_Tmp_246: int, in_Command_1: int, in_CallbackLink: int, in_sdv_164: int, in_DevExt_1: int) returns (out_sdv_155: int, out_sdv_157: int, out_OldIrql_1: int, out_sdv_159: int, out_Tmp_246: int, out_Command_1: int, out_CallbackLink: int, out_sdv_164: int)
{
  var vslice_dummy_var_2751: int;
  var vslice_dummy_var_2752: int;

  entry:
    out_sdv_155, out_sdv_157, out_OldIrql_1, out_sdv_159, out_Tmp_246, out_Command_1, out_CallbackLink, out_sdv_164 := in_sdv_155, in_sdv_157, in_OldIrql_1, in_sdv_159, in_Tmp_246, in_Command_1, in_CallbackLink, in_sdv_164;
    goto L8, exit;

  exit:
    return;

  L8:
    call {:si_unique_call 2202} out_sdv_155 := sdv_IsListEmpty(0);
    goto anon15_Then;

  anon15_Then:
    assume {:partition} out_sdv_155 == 0;
    assume {:nonnull} in_DevExt_1 != 0;
    assume in_DevExt_1 > 0;
    call {:si_unique_call 2208} out_sdv_159 := RemoveHeadList(PendingResponseList__BUS_DEVICE_EXTENSION(in_DevExt_1));
    out_Command_1 := out_sdv_159;
    call {:si_unique_call 2209} InitializeListHead(out_Command_1);
    call {:si_unique_call 2210} sdv_KeReleaseSpinLock(0, out_OldIrql_1);
    assume {:nonnull} out_Command_1 != 0;
    assume out_Command_1 > 0;
    call {:si_unique_call 2211} out_sdv_157 := sdv_IsListEmpty(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} out_sdv_157 == 0;
    assume {:nonnull} out_Command_1 != 0;
    assume out_Command_1 > 0;
    call {:si_unique_call 2214} out_sdv_164 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(out_Command_1));
    out_CallbackLink := out_sdv_164;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_CallbackLink != 0;
    assume out_CallbackLink > 0;
    assume {:nonnull} out_CallbackLink != 0;
    assume out_CallbackLink > 0;
    havoc vslice_dummy_var_2751;
    call {:si_unique_call 2212} AvcCommandCallback_sdv_static_function_7(out_Command_1, vslice_dummy_var_2751);
    goto L107;

  L107:
    call {:si_unique_call 2205} ExFreeToNPagedLookasideList(AvcCommandLinkPool, out_CallbackLink);
    goto L97;

  L97:
    call {:si_unique_call 2203} out_Tmp_246 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    call {:si_unique_call 2204} sdv_KeAcquireSpinLock(0, out_Tmp_246);
    assume {:nonnull} out_Tmp_246 != 0;
    assume out_Tmp_246 > 0;
    havoc out_OldIrql_1;
    goto L97_dummy;

  L97_dummy:
    call {:si_unique_call 2215} {:si_old_unique_call 1} out_sdv_155, out_sdv_157, out_OldIrql_1, out_sdv_159, out_Tmp_246, out_Command_1, out_CallbackLink, out_sdv_164 := AvcStopAllFCPProcessing_loop_L8(out_sdv_155, out_sdv_157, out_OldIrql_1, out_sdv_159, out_Tmp_246, out_Command_1, out_CallbackLink, out_sdv_164, in_DevExt_1);
    return;

  anon21_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_CallbackLink != 0;
    assume out_CallbackLink > 0;
    assume {:nonnull} out_CallbackLink != 0;
    assume out_CallbackLink > 0;
    havoc vslice_dummy_var_2752;
    call {:si_unique_call 2213} Avc_BusResetCallback_sdv_static_function_5#1(out_Command_1, vslice_dummy_var_2752);
    goto L107;

  anon20_Then:
    assume {:partition} out_sdv_157 != 0;
    call {:si_unique_call 2206} AvcPendingIrpCompletion(out_Command_1);
    call {:si_unique_call 2207} AvcFreeCommandContext(out_Command_1);
    out_Command_1 := 0;
    goto L97;
}



procedure {:LoopProcedure} AvcStopAllFCPProcessing_loop_L8(in_sdv_155: int, in_sdv_157: int, in_OldIrql_1: int, in_sdv_159: int, in_Tmp_246: int, in_Command_1: int, in_CallbackLink: int, in_sdv_164: int, in_DevExt_1: int) returns (out_sdv_155: int, out_sdv_157: int, out_OldIrql_1: int, out_sdv_159: int, out_Tmp_246: int, out_Command_1: int, out_CallbackLink: int, out_sdv_164: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} out_sdv_155 == 1 || out_sdv_155 == 0 || out_sdv_155 == in_sdv_155;
  free ensures {:va_keep} out_sdv_157 == 1 || out_sdv_157 == 0 || out_sdv_157 == in_sdv_157;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcProcessSendResponse_loop_L54(in_Padding: int, in_Tmp_263: int, in_Response_2: int, in_Tmp_266: int, in_Tmp_267: int) returns (out_Padding: int, out_Tmp_263: int, out_Tmp_266: int, out_Tmp_267: int)
{

  entry:
    out_Padding, out_Tmp_263, out_Tmp_266, out_Tmp_267 := in_Padding, in_Tmp_263, in_Tmp_266, in_Tmp_267;
    goto L54, exit;

  exit:
    return;

  L54:
    goto anon33_Else;

  anon33_Else:
    assume {:partition} INTMOD(out_Padding, 4) != 0;
    out_Tmp_266 := out_Padding;
    out_Padding := out_Padding + 1;
    out_Tmp_263 := out_Tmp_266;
    assume {:nonnull} in_Response_2 != 0;
    assume in_Response_2 > 0;
    havoc out_Tmp_267;
    assume {:nonnull} out_Tmp_267 != 0;
    assume out_Tmp_267 > 0;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    call {:si_unique_call 2216} {:si_old_unique_call 1} out_Padding, out_Tmp_263, out_Tmp_266, out_Tmp_267 := AvcProcessSendResponse_loop_L54(out_Padding, out_Tmp_263, in_Response_2, out_Tmp_266, out_Tmp_267);
    return;
}



procedure {:LoopProcedure} AvcProcessSendResponse_loop_L54(in_Padding: int, in_Tmp_263: int, in_Response_2: int, in_Tmp_266: int, in_Tmp_267: int) returns (out_Padding: int, out_Tmp_263: int, out_Tmp_266: int, out_Tmp_267: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcGetPeerDeviceObjectList_loop_L34(in_Tmp_271: int, in_Count: int, in_Tmp_272: int, in_DevExt_5: int, in_sdv_177: int, in_Entry: int, in_Objects: int, in_vslice_dummy_var_54: int) returns (out_Tmp_271: int, out_Count: int, out_Tmp_272: int, out_DevExt_5: int, out_sdv_177: int, out_Entry: int, out_vslice_dummy_var_54: int)
{

  entry:
    out_Tmp_271, out_Count, out_Tmp_272, out_DevExt_5, out_sdv_177, out_Entry, out_vslice_dummy_var_54 := in_Tmp_271, in_Count, in_Tmp_272, in_DevExt_5, in_sdv_177, in_Entry, in_vslice_dummy_var_54;
    goto L34, exit;

  exit:
    return;

  L34:
    goto anon8_Else;

  anon8_Else:
    call {:si_unique_call 2217} out_sdv_177 := sdv_containing_record(out_Entry, 72);
    out_DevExt_5 := out_sdv_177;
    call {:si_unique_call 2218} out_vslice_dummy_var_54 := sdv_ObReferenceObject(0);
    out_Tmp_271 := out_Count;
    out_Count := out_Count + 1;
    out_Tmp_272 := out_Tmp_271;
    assume {:nonnull} out_DevExt_5 != 0;
    assume out_DevExt_5 > 0;
    assume {:nonnull} in_Objects != 0;
    assume in_Objects > 0;
    assume {:nonnull} out_Entry != 0;
    assume out_Entry > 0;
    havoc out_Entry;
    goto anon8_Else_dummy;

  anon8_Else_dummy:
    call {:si_unique_call 2219} {:si_old_unique_call 1} out_Tmp_271, out_Count, out_Tmp_272, out_DevExt_5, out_sdv_177, out_Entry, out_vslice_dummy_var_54 := AvcGetPeerDeviceObjectList_loop_L34(out_Tmp_271, out_Count, out_Tmp_272, out_DevExt_5, out_sdv_177, out_Entry, in_Objects, out_vslice_dummy_var_54);
    return;
}



procedure {:LoopProcedure} AvcGetPeerDeviceObjectList_loop_L34(in_Tmp_271: int, in_Count: int, in_Tmp_272: int, in_DevExt_5: int, in_sdv_177: int, in_Entry: int, in_Objects: int, in_vslice_dummy_var_54: int) returns (out_Tmp_271: int, out_Count: int, out_Tmp_272: int, out_DevExt_5: int, out_sdv_177: int, out_Entry: int, out_vslice_dummy_var_54: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcGetPeerDeviceObjectList_loop_L22(in_Count: int, in_Entry: int) returns (out_Count: int, out_Entry: int)
{

  entry:
    out_Count, out_Entry := in_Count, in_Entry;
    goto L22, exit;

  exit:
    return;

  L22:
    goto anon7_Else;

  anon7_Else:
    out_Count := out_Count + 1;
    assume {:nonnull} out_Entry != 0;
    assume out_Entry > 0;
    havoc out_Entry;
    goto anon7_Else_dummy;

  anon7_Else_dummy:
    call {:si_unique_call 2220} {:si_old_unique_call 1} out_Count, out_Entry := AvcGetPeerDeviceObjectList_loop_L22(out_Count, out_Entry);
    return;
}



procedure {:LoopProcedure} AvcGetPeerDeviceObjectList_loop_L22(in_Count: int, in_Entry: int) returns (out_Count: int, out_Entry: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcPackSubunitInfo_loop_L25(in_PdoData: int, in_InnerPdoData: int, in_SubunitId: int, in_sdv_180: int) returns (out_InnerPdoData: int, out_sdv_180: int)
{
  var vslice_dummy_var_2753: int;
  var vslice_dummy_var_2754: int;

  entry:
    out_InnerPdoData, out_sdv_180 := in_InnerPdoData, in_sdv_180;
    goto L25, exit;

  exit:
    return;

  L25:
    goto anon36_Else;

  anon36_Else:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    assume {:nonnull} in_PdoData != 0;
    assume in_PdoData > 0;
    havoc vslice_dummy_var_2753;
    havoc vslice_dummy_var_2754;
    call {:si_unique_call 2221} out_sdv_180 := AvcSubunitPackedTypesEqual(vslice_dummy_var_2753, vslice_dummy_var_2754);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} out_sdv_180 != 0;
    assume {:nonnull} in_SubunitId != 0;
    assume in_SubunitId > 0;
    goto L28;

  L28:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    havoc out_InnerPdoData;
    goto L28_dummy;

  L28_dummy:
    call {:si_unique_call 2222} {:si_old_unique_call 1} out_InnerPdoData, out_sdv_180 := AvcPackSubunitInfo_loop_L25(in_PdoData, out_InnerPdoData, in_SubunitId, out_sdv_180);
    return;

  anon38_Then:
    assume {:partition} out_sdv_180 == 0;
    goto L28;

  anon37_Then:
    goto L28;
}



procedure {:LoopProcedure} AvcPackSubunitInfo_loop_L25(in_PdoData: int, in_InnerPdoData: int, in_SubunitId: int, in_sdv_180: int) returns (out_InnerPdoData: int, out_sdv_180: int);
  free ensures {:va_keep} out_sdv_180 == 1 || out_sdv_180 == 0 || out_sdv_180 == in_sdv_180;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcPackSubunitInfo_loop_L7(in_PdoData: int, in_LocalBytesUsed: int, in_Offset_1: int, in_InnerPdoData: int, in_Tmp_278: int, in_Tmp_279: int, in_Tmp_280: int, in_SubunitId: int, in_Tmp_281: int, in_sdv_180: int, in_ntStatus_14: int, in_Tmp_282: int, in_SubunitType: int, in_Tmp_284: int, in_Tmp_285: int, in_Tmp_286: int, in_Tmp_287: int, in_Length: int, in_Buffer: int) returns (out_PdoData: int, out_Offset_1: int, out_InnerPdoData: int, out_Tmp_278: int, out_Tmp_279: int, out_Tmp_280: int, out_Tmp_281: int, out_sdv_180: int, out_ntStatus_14: int, out_Tmp_282: int, out_Tmp_284: int, out_Tmp_285: int, out_Tmp_286: int, out_Tmp_287: int)
{
  var vslice_dummy_var_2755: int;
  var vslice_dummy_var_2756: int;
  var vslice_dummy_var_2757: int;
  var vslice_dummy_var_2758: int;

  entry:
    out_PdoData, out_Offset_1, out_InnerPdoData, out_Tmp_278, out_Tmp_279, out_Tmp_280, out_Tmp_281, out_sdv_180, out_ntStatus_14, out_Tmp_282, out_Tmp_284, out_Tmp_285, out_Tmp_286, out_Tmp_287 := in_PdoData, in_Offset_1, in_InnerPdoData, in_Tmp_278, in_Tmp_279, in_Tmp_280, in_Tmp_281, in_sdv_180, in_ntStatus_14, in_Tmp_282, in_Tmp_284, in_Tmp_285, in_Tmp_286, in_Tmp_287;
    goto L7, exit;

  exit:
    return;

  L7:
    goto anon29_Else;

  anon29_Else:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    havoc vslice_dummy_var_2755;
    call {:si_unique_call 2225} out_ntStatus_14 := AvcUnpackSubunitAddress(vslice_dummy_var_2755, in_SubunitType, in_SubunitId, in_LocalBytesUsed);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} out_ntStatus_14 == 0;
    assume {:nonnull} in_SubunitId != 0;
    assume in_SubunitId > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    havoc out_InnerPdoData;
    goto L25;

  L25:
    call {:si_unique_call 2227} out_InnerPdoData, out_sdv_180 := AvcPackSubunitInfo_loop_L25(out_PdoData, out_InnerPdoData, in_SubunitId, out_sdv_180);
    goto L25_last;

  L25_last:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    havoc vslice_dummy_var_2757;
    havoc vslice_dummy_var_2758;
    call {:si_unique_call 2228} out_sdv_180 := AvcSubunitPackedTypesEqual(vslice_dummy_var_2757, vslice_dummy_var_2758);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} out_sdv_180 != 0;
    assume {:nonnull} in_SubunitId != 0;
    assume in_SubunitId > 0;
    goto L28;

  L28:
    assume {:nonnull} out_InnerPdoData != 0;
    assume out_InnerPdoData > 0;
    havoc out_InnerPdoData;
    assume false;
    return;

  anon38_Then:
    assume {:partition} out_sdv_180 == 0;
    goto L28;

  anon37_Then:
    goto L28;

  anon36_Then:
    out_Tmp_278 := out_Offset_1;
    out_Tmp_287 := in_Buffer + out_Tmp_278 * 4;
    out_Tmp_284 := in_Length - out_Offset_1;
    assume {:nonnull} in_SubunitId != 0;
    assume in_SubunitId > 0;
    havoc vslice_dummy_var_2756;
    call {:si_unique_call 2226} out_ntStatus_14 := AvcPackSubunitAddress(in_SubunitType, vslice_dummy_var_2756, out_Tmp_284, out_Tmp_287, in_LocalBytesUsed);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} out_ntStatus_14 == 0;
    assume {:nonnull} in_LocalBytesUsed != 0;
    assume in_LocalBytesUsed > 0;
    havoc out_Offset_1;
    goto L10;

  L10:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    havoc out_PdoData;
    goto L10_dummy;

  L10_dummy:
    call {:si_unique_call 2229} {:si_old_unique_call 1} out_PdoData, out_Offset_1, out_InnerPdoData, out_Tmp_278, out_Tmp_279, out_Tmp_280, out_Tmp_281, out_sdv_180, out_ntStatus_14, out_Tmp_282, out_Tmp_284, out_Tmp_285, out_Tmp_286, out_Tmp_287 := AvcPackSubunitInfo_loop_L7(out_PdoData, in_LocalBytesUsed, out_Offset_1, out_InnerPdoData, out_Tmp_278, out_Tmp_279, out_Tmp_280, in_SubunitId, out_Tmp_281, out_sdv_180, out_ntStatus_14, out_Tmp_282, in_SubunitType, out_Tmp_284, out_Tmp_285, out_Tmp_286, out_Tmp_287, in_Length, in_Buffer);
    return;

  anon39_Then:
    assume {:partition} out_ntStatus_14 != 0;
    goto L10;

  anon35_Then:
    goto L10;

  anon34_Then:
    assume {:partition} out_ntStatus_14 != 0;
    goto L10;

  anon32_Then:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L42;

  L42:
    assume {:nonnull} in_SubunitType != 0;
    assume in_SubunitType > 0;
    out_Tmp_279 := out_Offset_1;
    out_Tmp_280 := in_Buffer + out_Tmp_279 * 4;
    out_Tmp_281 := in_Length - out_Offset_1;
    call {:si_unique_call 2224} out_ntStatus_14 := AvcPackSubunitAddress(in_SubunitType, 0, out_Tmp_281, out_Tmp_280, in_LocalBytesUsed);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} out_ntStatus_14 != 0;
    goto L51;

  L51:
    assume {:nonnull} in_SubunitType != 0;
    assume in_SubunitType > 0;
    out_Tmp_282 := out_Offset_1;
    out_Tmp_286 := in_Buffer + out_Tmp_282 * 4;
    out_Tmp_285 := in_Length - out_Offset_1;
    call {:si_unique_call 2223} out_ntStatus_14 := AvcPackSubunitAddress(in_SubunitType, 0, out_Tmp_285, out_Tmp_286, in_LocalBytesUsed);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} out_ntStatus_14 == 0;
    assume {:nonnull} in_LocalBytesUsed != 0;
    assume in_LocalBytesUsed > 0;
    havoc out_Offset_1;
    goto L10;

  anon42_Then:
    assume {:partition} out_ntStatus_14 != 0;
    goto L10;

  anon41_Then:
    assume {:partition} out_ntStatus_14 == 0;
    assume {:nonnull} in_LocalBytesUsed != 0;
    assume in_LocalBytesUsed > 0;
    havoc out_Offset_1;
    goto L51;

  anon33_Then:
    assume {:nonnull} out_PdoData != 0;
    assume out_PdoData > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto L42;

  anon40_Then:
    goto L10;

  anon31_Then:
    goto L10;
}



procedure {:LoopProcedure} AvcPackSubunitInfo_loop_L7(in_PdoData: int, in_LocalBytesUsed: int, in_Offset_1: int, in_InnerPdoData: int, in_Tmp_278: int, in_Tmp_279: int, in_Tmp_280: int, in_SubunitId: int, in_Tmp_281: int, in_sdv_180: int, in_ntStatus_14: int, in_Tmp_282: int, in_SubunitType: int, in_Tmp_284: int, in_Tmp_285: int, in_Tmp_286: int, in_Tmp_287: int, in_Length: int, in_Buffer: int) returns (out_PdoData: int, out_Offset_1: int, out_InnerPdoData: int, out_Tmp_278: int, out_Tmp_279: int, out_Tmp_280: int, out_Tmp_281: int, out_sdv_180: int, out_ntStatus_14: int, out_Tmp_282: int, out_Tmp_284: int, out_Tmp_285: int, out_Tmp_286: int, out_Tmp_287: int);
  free ensures {:va_keep} out_sdv_180 == 1 || out_sdv_180 == 0 || out_sdv_180 == in_sdv_180;
  free ensures {:va_keep} out_ntStatus_14 == 0 || out_ntStatus_14 == -1073741811 || out_ntStatus_14 == in_ntStatus_14;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcFindPeerDeviceObject_loop_L21(in_DevExt_6: int, in_AvcIrb_6: int, in_sdv_185: int, in_ntStatus_15: int, in_Entry_1: int, in_vslice_dummy_var_57: int) returns (out_DevExt_6: int, out_sdv_185: int, out_ntStatus_15: int, out_Entry_1: int, out_vslice_dummy_var_57: int)
{

  entry:
    out_DevExt_6, out_sdv_185, out_ntStatus_15, out_Entry_1, out_vslice_dummy_var_57 := in_DevExt_6, in_sdv_185, in_ntStatus_15, in_Entry_1, in_vslice_dummy_var_57;
    goto L21, exit;

  exit:
    return;

  L21:
    goto anon11_Else;

  anon11_Else:
    goto anon12_Else;

  anon12_Else:
    assume {:partition} out_ntStatus_15 != 0;
    call {:si_unique_call 2231} out_sdv_185 := sdv_containing_record(out_Entry_1, 72);
    out_DevExt_6 := out_sdv_185;
    assume {:nonnull} in_AvcIrb_6 != 0;
    assume in_AvcIrb_6 > 0;
    assume {:nonnull} out_DevExt_6 != 0;
    assume out_DevExt_6 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} in_AvcIrb_6 != 0;
    assume in_AvcIrb_6 > 0;
    assume {:nonnull} out_DevExt_6 != 0;
    assume out_DevExt_6 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 2230} out_vslice_dummy_var_57 := sdv_ObReferenceObject(0);
    assume {:nonnull} in_AvcIrb_6 != 0;
    assume in_AvcIrb_6 > 0;
    assume {:nonnull} out_DevExt_6 != 0;
    assume out_DevExt_6 > 0;
    out_ntStatus_15 := 0;
    goto L32;

  L32:
    assume {:nonnull} out_Entry_1 != 0;
    assume out_Entry_1 > 0;
    havoc out_Entry_1;
    goto L32_dummy;

  L32_dummy:
    call {:si_unique_call 2232} {:si_old_unique_call 1} out_DevExt_6, out_sdv_185, out_ntStatus_15, out_Entry_1, out_vslice_dummy_var_57 := AvcFindPeerDeviceObject_loop_L21(out_DevExt_6, in_AvcIrb_6, out_sdv_185, out_ntStatus_15, out_Entry_1, out_vslice_dummy_var_57);
    return;

  anon13_Then:
    goto L32;

  anon15_Then:
    goto L32;
}



procedure {:LoopProcedure} AvcFindPeerDeviceObject_loop_L21(in_DevExt_6: int, in_AvcIrb_6: int, in_sdv_185: int, in_ntStatus_15: int, in_Entry_1: int, in_vslice_dummy_var_57: int) returns (out_DevExt_6: int, out_sdv_185: int, out_ntStatus_15: int, out_Entry_1: int, out_vslice_dummy_var_57: int);
  free ensures {:va_keep} out_ntStatus_15 == 0 || out_ntStatus_15 == in_ntStatus_15;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcStopSelectedFCPProcessing_loop_L23(in_Irp_14: int, in_sdv_187: int, in_sdv_189: int, in_IrpEntry: int, in_PendingIrpList: int) returns (out_Irp_14: int, out_sdv_187: int, out_sdv_189: int, out_IrpEntry: int)
{

  entry:
    out_Irp_14, out_sdv_187, out_sdv_189, out_IrpEntry := in_Irp_14, in_sdv_187, in_sdv_189, in_IrpEntry;
    goto L23, exit;

  exit:
    return;

  L23:
    call {:si_unique_call 2233} out_sdv_187 := sdv_IsListEmpty(0);
    goto anon3_Else;

  anon3_Else:
    assume {:partition} out_sdv_187 == 0;
    call {:si_unique_call 2234} out_IrpEntry := RemoveHeadList(in_PendingIrpList);
    call {:si_unique_call 2235} out_sdv_189 := sdv_containing_record(out_IrpEntry, 88);
    out_Irp_14 := out_sdv_189;
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(out_Irp_14))] := -1073741536;
    assume {:nonnull} out_Irp_14 != 0;
    assume out_Irp_14 > 0;
    call {:si_unique_call 2236} sdv_IoCompleteRequest(0, 0);
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    call {:si_unique_call 2237} {:si_old_unique_call 1} out_Irp_14, out_sdv_187, out_sdv_189, out_IrpEntry := AvcStopSelectedFCPProcessing_loop_L23(out_Irp_14, out_sdv_187, out_sdv_189, out_IrpEntry, in_PendingIrpList);
    return;
}



procedure {:LoopProcedure} AvcStopSelectedFCPProcessing_loop_L23(in_Irp_14: int, in_sdv_187: int, in_sdv_189: int, in_IrpEntry: int, in_PendingIrpList: int) returns (out_Irp_14: int, out_sdv_187: int, out_sdv_189: int, out_IrpEntry: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc;
  free ensures {:va_keep} out_sdv_187 == 1 || out_sdv_187 == 0 || out_sdv_187 == in_sdv_187;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcSubunitAddrsEqual_loop_L14(in_Tmp_307: int, in_Tmp_308: int, in_idx_5: int, in_SubunitAddr1: int, in_SubunitAddr2: int) returns (out_Tmp_307: int, out_Tmp_308: int, out_idx_5: int)
{

  entry:
    out_Tmp_307, out_Tmp_308, out_idx_5 := in_Tmp_307, in_Tmp_308, in_idx_5;
    goto L14, exit;

  exit:
    return;

  L14:
    out_Tmp_308 := out_idx_5;
    assume {:nonnull} in_SubunitAddr1 != 0;
    assume in_SubunitAddr1 > 0;
    goto anon30_Else;

  anon30_Else:
    out_Tmp_307 := out_idx_5;
    assume {:nonnull} in_SubunitAddr2 != 0;
    assume in_SubunitAddr2 > 0;
    goto anon31_Then;

  anon31_Then:
    out_idx_5 := out_idx_5 + 1;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    havoc out_idx_5;
    return;
}



procedure {:LoopProcedure} AvcSubunitAddrsEqual_loop_L14(in_Tmp_307: int, in_Tmp_308: int, in_idx_5: int, in_SubunitAddr1: int, in_SubunitAddr2: int) returns (out_Tmp_307: int, out_Tmp_308: int, out_idx_5: int);
  free ensures {:va_keep} out_Tmp_307 == in_idx_5 || out_Tmp_307 == in_Tmp_307;
  free ensures {:va_keep} out_Tmp_308 == in_idx_5 || out_Tmp_308 == in_Tmp_308;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcSubunitAddrsEqual_loop_L23(in_Tmp_301: int, in_Tmp_303: int, in_idx_5: int, in_SubunitAddr1: int, in_SubunitAddr2: int) returns (out_Tmp_301: int, out_Tmp_303: int, out_idx_5: int)
{

  entry:
    out_Tmp_301, out_Tmp_303, out_idx_5 := in_Tmp_301, in_Tmp_303, in_idx_5;
    goto L23, exit;

  exit:
    return;

  L23:
    out_Tmp_303 := out_idx_5;
    assume {:nonnull} in_SubunitAddr1 != 0;
    assume in_SubunitAddr1 > 0;
    goto anon34_Else;

  anon34_Else:
    out_Tmp_301 := out_idx_5;
    assume {:nonnull} in_SubunitAddr2 != 0;
    assume in_SubunitAddr2 > 0;
    goto anon35_Then;

  anon35_Then:
    out_idx_5 := out_idx_5 + 1;
    goto anon35_Then_dummy;

  anon35_Then_dummy:
    havoc out_idx_5;
    return;
}



procedure {:LoopProcedure} AvcSubunitAddrsEqual_loop_L23(in_Tmp_301: int, in_Tmp_303: int, in_idx_5: int, in_SubunitAddr1: int, in_SubunitAddr2: int) returns (out_Tmp_301: int, out_Tmp_303: int, out_idx_5: int);
  free ensures {:va_keep} out_Tmp_301 == in_idx_5 || out_Tmp_301 == in_Tmp_301;
  free ensures {:va_keep} out_Tmp_303 == in_idx_5 || out_Tmp_303 == in_Tmp_303;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcPendingIrpCompletion_loop_L8(in_Irp_16: int, in_Status_6: int, in_IrpStack_4: int, in_CmdIrb_2: int, in_Command_7: int) returns (out_Irp_16: int, out_Status_6: int, out_IrpStack_4: int, out_CmdIrb_2: int)
{
  var vslice_dummy_var_2759: int;

  entry:
    out_Irp_16, out_Status_6, out_IrpStack_4, out_CmdIrb_2 := in_Irp_16, in_Status_6, in_IrpStack_4, in_CmdIrb_2;
    goto L8, exit;

  exit:
    return;

  L8:
    goto anon11_Else;

  anon11_Else:
    assume {:partition} out_Irp_16 != 0;
    call {:si_unique_call 2241} out_IrpStack_4 := sdv_IoGetCurrentIrpStackLocation(out_Irp_16);
    assume {:nonnull} out_IrpStack_4 != 0;
    assume out_IrpStack_4 > 0;
    havoc out_CmdIrb_2;
    assume {:nonnull} in_Command_7 != 0;
    assume in_Command_7 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} in_Command_7 != 0;
    assume in_Command_7 > 0;
    havoc out_Status_6;
    goto L23;

  L23:
    assume {:nonnull} out_Irp_16 != 0;
    assume out_Irp_16 > 0;
    Mem_T.Status__IO_STATUS_BLOCK[Status__IO_STATUS_BLOCK(IoStatus__IRP(out_Irp_16))] := out_Status_6;
    assume {:nonnull} out_Irp_16 != 0;
    assume out_Irp_16 > 0;
    call {:si_unique_call 2238} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2239} out_Irp_16 := AvcDequeueFCPIrp(in_Command_7);
    goto L23_dummy;

  L23_dummy:
    call {:si_unique_call 2242} {:si_old_unique_call 1} out_Irp_16, out_Status_6, out_IrpStack_4, out_CmdIrb_2 := AvcPendingIrpCompletion_loop_L8(out_Irp_16, out_Status_6, out_IrpStack_4, out_CmdIrb_2, in_Command_7);
    return;

  anon15_Then:
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    havoc vslice_dummy_var_2759;
    call {:si_unique_call 2240} out_Status_6 := AvcUnpackFCPFrame(in_Command_7, Opcode__AVC_COMMAND_IRB(out_CmdIrb_2), 509, vslice_dummy_var_2759);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} out_Status_6 == 0;
    assume {:nonnull} in_Command_7 != 0;
    assume in_Command_7 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} in_Command_7 != 0;
    assume in_Command_7 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_7 != 0;
    assume in_Command_7 > 0;
    goto L35;

  L35:
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_7 != 0;
    assume in_Command_7 > 0;
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_7 != 0;
    assume in_Command_7 > 0;
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_7 != 0;
    assume in_Command_7 > 0;
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_7 != 0;
    assume in_Command_7 > 0;
    goto L23;

  anon14_Then:
    goto L35;

  anon13_Then:
    assume {:nonnull} out_CmdIrb_2 != 0;
    assume out_CmdIrb_2 > 0;
    assume {:nonnull} in_Command_7 != 0;
    assume in_Command_7 > 0;
    goto L35;

  anon12_Then:
    assume {:partition} out_Status_6 != 0;
    goto L23;
}



procedure {:LoopProcedure} AvcPendingIrpCompletion_loop_L8(in_Irp_16: int, in_Status_6: int, in_IrpStack_4: int, in_CmdIrb_2: int, in_Command_7: int) returns (out_Irp_16: int, out_Status_6: int, out_IrpStack_4: int, out_CmdIrb_2: int);
  modifies Mem_T.Status__IO_STATUS_BLOCK, alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcFreeCommandContext_loop_L3(in_sdv_206: int, in_sdv_207: int, in_CallbackLink_1: int, in_Command_8: int) returns (out_sdv_206: int, out_sdv_207: int, out_CallbackLink_1: int)
{

  entry:
    out_sdv_206, out_sdv_207, out_CallbackLink_1 := in_sdv_206, in_sdv_207, in_CallbackLink_1;
    goto L3, exit;

  exit:
    return;

  L3:
    call {:si_unique_call 2243} out_sdv_206 := sdv_IsListEmpty(0);
    goto anon5_Else;

  anon5_Else:
    assume {:partition} out_sdv_206 == 0;
    assume {:nonnull} in_Command_8 != 0;
    assume in_Command_8 > 0;
    call {:si_unique_call 2244} out_sdv_207 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(in_Command_8));
    out_CallbackLink_1 := out_sdv_207;
    call {:si_unique_call 2245} ExFreeToNPagedLookasideList(AvcCommandLinkPool, out_CallbackLink_1);
    goto anon5_Else_dummy;

  anon5_Else_dummy:
    call {:si_unique_call 2246} {:si_old_unique_call 1} out_sdv_206, out_sdv_207, out_CallbackLink_1 := AvcFreeCommandContext_loop_L3(out_sdv_206, out_sdv_207, out_CallbackLink_1, in_Command_8);
    return;
}



procedure {:LoopProcedure} AvcFreeCommandContext_loop_L3(in_sdv_206: int, in_sdv_207: int, in_CallbackLink_1: int, in_Command_8: int) returns (out_sdv_206: int, out_sdv_207: int, out_CallbackLink_1: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_206 == 1 || out_sdv_206 == 0 || out_sdv_206 == in_sdv_206;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcPackSubunitAddress_loop_L38(in_Tmp_325: int, in_Tmp_326: int, in_idx_6: int, in_Tmp_330: int, in_SubunitID: int, in_Length_1: int, in_Buffer_1: int) returns (out_Tmp_325: int, out_Tmp_326: int, out_idx_6: int, out_Tmp_330: int, out_SubunitID: int)
{

  entry:
    out_Tmp_325, out_Tmp_326, out_idx_6, out_Tmp_330, out_SubunitID := in_Tmp_325, in_Tmp_326, in_idx_6, in_Tmp_330, in_SubunitID;
    goto L38, exit;

  exit:
    return;

  L38:
    goto anon52_Else;

  anon52_Else:
    assume {:partition} in_Length_1 > out_idx_6;
    goto anon54_Else;

  anon54_Else:
    assume {:partition} out_SubunitID != 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} 255 > out_SubunitID;
    out_Tmp_325 := out_idx_6;
    assume {:nonnull} in_Buffer_1 != 0;
    assume in_Buffer_1 > 0;
    goto L44;

  L44:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} out_SubunitID > 254;
    out_Tmp_326 := out_SubunitID - 254;
    goto L47;

  L47:
    out_SubunitID := out_Tmp_326;
    out_idx_6 := out_idx_6 + 1;
    goto L47_dummy;

  L47_dummy:
    call {:si_unique_call 2247} {:si_old_unique_call 1} out_Tmp_325, out_Tmp_326, out_idx_6, out_Tmp_330, out_SubunitID := AvcPackSubunitAddress_loop_L38(out_Tmp_325, out_Tmp_326, out_idx_6, out_Tmp_330, out_SubunitID, in_Length_1, in_Buffer_1);
    return;

  anon56_Then:
    assume {:partition} 254 >= out_SubunitID;
    out_Tmp_326 := 0;
    goto L47;

  anon55_Then:
    assume {:partition} out_SubunitID >= 255;
    out_Tmp_330 := out_idx_6;
    assume {:nonnull} in_Buffer_1 != 0;
    assume in_Buffer_1 > 0;
    goto L44;
}



procedure {:LoopProcedure} AvcPackSubunitAddress_loop_L38(in_Tmp_325: int, in_Tmp_326: int, in_idx_6: int, in_Tmp_330: int, in_SubunitID: int, in_Length_1: int, in_Buffer_1: int) returns (out_Tmp_325: int, out_Tmp_326: int, out_idx_6: int, out_Tmp_330: int, out_SubunitID: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcPackSubunitAddress_loop_L19(in_Tmp_324: int, in_Tmp_327: int, in_Tmp_328: int, in_idx_6: int, in_SubunitType_1: int, in_Length_1: int, in_Buffer_1: int, in_boogieTmp: int) returns (out_Tmp_324: int, out_Tmp_327: int, out_Tmp_328: int, out_idx_6: int, out_boogieTmp: int)
{

  entry:
    out_Tmp_324, out_Tmp_327, out_Tmp_328, out_idx_6, out_boogieTmp := in_Tmp_324, in_Tmp_327, in_Tmp_328, in_idx_6, in_boogieTmp;
    goto L19, exit;

  exit:
    return;

  L19:
    goto anon45_Else;

  anon45_Else:
    assume {:partition} in_Length_1 > out_idx_6;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} out_idx_6 != 0;
    out_Tmp_324 := out_idx_6;
    out_Tmp_327 := out_idx_6;
    assume {:nonnull} in_Buffer_1 != 0;
    assume in_Buffer_1 > 0;
    assume {:nonnull} in_SubunitType_1 != 0;
    assume in_SubunitType_1 > 0;
    goto L24;

  L24:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} out_idx_6 != 0;
    goto L26;

  L26:
    out_Tmp_328 := out_idx_6;
    assume {:nonnull} in_SubunitType_1 != 0;
    assume in_SubunitType_1 > 0;
    goto anon60_Else;

  anon60_Else:
    goto L27;

  L27:
    out_idx_6 := out_idx_6 + 1;
    goto L27_dummy;

  L27_dummy:
    call {:si_unique_call 2249} {:si_old_unique_call 1} out_Tmp_324, out_Tmp_327, out_Tmp_328, out_idx_6, out_boogieTmp := AvcPackSubunitAddress_loop_L19(out_Tmp_324, out_Tmp_327, out_Tmp_328, out_idx_6, in_SubunitType_1, in_Length_1, in_Buffer_1, out_boogieTmp);
    return;

  anon48_Then:
    assume {:partition} out_idx_6 == 0;
    assume {:nonnull} in_SubunitType_1 != 0;
    assume in_SubunitType_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L27;

  anon49_Then:
    goto L26;

  anon47_Then:
    assume {:partition} out_idx_6 == 0;
    assume {:nonnull} in_Buffer_1 != 0;
    assume in_Buffer_1 > 0;
    call {:si_unique_call 2248} out_boogieTmp := corral_nondet();
    goto L24;
}



procedure {:LoopProcedure} AvcPackSubunitAddress_loop_L19(in_Tmp_324: int, in_Tmp_327: int, in_Tmp_328: int, in_idx_6: int, in_SubunitType_1: int, in_Length_1: int, in_Buffer_1: int, in_boogieTmp: int) returns (out_Tmp_324: int, out_Tmp_327: int, out_Tmp_328: int, out_idx_6: int, out_boogieTmp: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcValidateSubunitAddress_loop_L21(in_idx_7: int, in_Tmp_342: int, in_Buffer_2: int, in_cbIn: int) returns (out_idx_7: int, out_Tmp_342: int)
{

  entry:
    out_idx_7, out_Tmp_342 := in_idx_7, in_Tmp_342;
    goto L21, exit;

  exit:
    return;

  L21:
    goto anon41_Else;

  anon41_Else:
    assume {:partition} in_cbIn > out_idx_7;
    out_Tmp_342 := out_idx_7;
    assume {:nonnull} in_Buffer_2 != 0;
    assume in_Buffer_2 > 0;
    goto anon50_Else;

  anon50_Else:
    out_idx_7 := out_idx_7 + 1;
    goto anon50_Else_dummy;

  anon50_Else_dummy:
    havoc out_idx_7;
    return;
}



procedure {:LoopProcedure} AvcValidateSubunitAddress_loop_L21(in_idx_7: int, in_Tmp_342: int, in_Buffer_2: int, in_cbIn: int) returns (out_idx_7: int, out_Tmp_342: int);
  free ensures {:va_keep} out_Tmp_342 == in_idx_7 || out_Tmp_342 == in_Tmp_342;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcValidateSubunitAddress_loop_L14(in_Tmp_340: int, in_idx_7: int, in_Buffer_2: int, in_cbIn: int) returns (out_Tmp_340: int, out_idx_7: int)
{

  entry:
    out_Tmp_340, out_idx_7 := in_Tmp_340, in_idx_7;
    goto L14, exit;

  exit:
    return;

  L14:
    goto anon39_Else;

  anon39_Else:
    assume {:partition} in_cbIn > out_idx_7;
    out_Tmp_340 := out_idx_7;
    assume {:nonnull} in_Buffer_2 != 0;
    assume in_Buffer_2 > 0;
    goto anon52_Else;

  anon52_Else:
    out_idx_7 := out_idx_7 + 1;
    goto anon52_Else_dummy;

  anon52_Else_dummy:
    havoc out_idx_7;
    return;
}



procedure {:LoopProcedure} AvcValidateSubunitAddress_loop_L14(in_Tmp_340: int, in_idx_7: int, in_Buffer_2: int, in_cbIn: int) returns (out_Tmp_340: int, out_idx_7: int);
  free ensures {:va_keep} out_Tmp_340 == in_idx_7 || out_Tmp_340 == in_Tmp_340;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcCommand_sdv_static_function_7_loop_L74(in_sdv_227: int, in_sdv_228: int, in_CallbackLink_2: int, in_Command_11: int) returns (out_sdv_227: int, out_sdv_228: int, out_CallbackLink_2: int)
{

  entry:
    out_sdv_227, out_sdv_228, out_CallbackLink_2 := in_sdv_227, in_sdv_228, in_CallbackLink_2;
    goto L74, exit;

  exit:
    return;

  L74:
    call {:si_unique_call 2250} out_sdv_228 := sdv_IsListEmpty(0);
    goto anon45_Else;

  anon45_Else:
    assume {:partition} out_sdv_228 == 0;
    assume {:nonnull} in_Command_11 != 0;
    assume in_Command_11 > 0;
    call {:si_unique_call 2251} out_sdv_227 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(in_Command_11));
    out_CallbackLink_2 := out_sdv_227;
    call {:si_unique_call 2252} ExFreeToNPagedLookasideList(AvcCommandLinkPool, out_CallbackLink_2);
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    call {:si_unique_call 2253} {:si_old_unique_call 1} out_sdv_227, out_sdv_228, out_CallbackLink_2 := AvcCommand_sdv_static_function_7_loop_L74(out_sdv_227, out_sdv_228, out_CallbackLink_2, in_Command_11);
    return;
}



procedure {:LoopProcedure} AvcCommand_sdv_static_function_7_loop_L74(in_sdv_227: int, in_sdv_228: int, in_CallbackLink_2: int, in_Command_11: int) returns (out_sdv_227: int, out_sdv_228: int, out_CallbackLink_2: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_228 == 1 || out_sdv_228 == 0 || out_sdv_228 == in_sdv_228;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcCommand_sdv_static_function_7_loop_L50(in_Retries: int, in_OldIrql_7: int, in_Irp_18: int, in_WaitForEvent: int, in_Status_11: int, in_Tmp_356: int, in_OldIrql_8: int, in_sdv_230: int, in_NextIrpStack_4: int, in_sdv_235: int, in_WaitForAbort: int, in_InvalidGenLimit: int, in_tmDelay: int, in_DevExt_13: int, in_Command_11: int, in_vslice_dummy_var_65: int, in_vslice_dummy_var_66: int, in_vslice_dummy_var_67: int, in_vslice_dummy_var_68: int, in_vslice_dummy_var_70: int) returns (out_Retries: int, out_OldIrql_7: int, out_WaitForEvent: int, out_Status_11: int, out_Tmp_356: int, out_OldIrql_8: int, out_sdv_230: int, out_NextIrpStack_4: int, out_sdv_235: int, out_WaitForAbort: int, out_InvalidGenLimit: int, out_vslice_dummy_var_65: int, out_vslice_dummy_var_66: int, out_vslice_dummy_var_67: int, out_vslice_dummy_var_68: int, out_vslice_dummy_var_70: int)
{
  var vslice_dummy_var_2760: int;

  entry:
    out_Retries, out_OldIrql_7, out_WaitForEvent, out_Status_11, out_Tmp_356, out_OldIrql_8, out_sdv_230, out_NextIrpStack_4, out_sdv_235, out_WaitForAbort, out_InvalidGenLimit, out_vslice_dummy_var_65, out_vslice_dummy_var_66, out_vslice_dummy_var_67, out_vslice_dummy_var_68, out_vslice_dummy_var_70 := in_Retries, in_OldIrql_7, in_WaitForEvent, in_Status_11, in_Tmp_356, in_OldIrql_8, in_sdv_230, in_NextIrpStack_4, in_sdv_235, in_WaitForAbort, in_InvalidGenLimit, in_vslice_dummy_var_65, in_vslice_dummy_var_66, in_vslice_dummy_var_67, in_vslice_dummy_var_68, in_vslice_dummy_var_70;
    goto L50, exit;

  exit:
    return;

  L50:
    call {:si_unique_call 2254} out_NextIrpStack_4 := sdv_IoGetNextIrpStackLocation(in_Irp_18);
    assume {:nonnull} out_NextIrpStack_4 != 0;
    assume out_NextIrpStack_4 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_NextIrpStack_4)] := 15;
    assume {:nonnull} out_NextIrpStack_4 != 0;
    assume out_NextIrpStack_4 > 0;
    assume {:nonnull} in_Command_11 != 0;
    assume in_Command_11 > 0;
    assume {:nonnull} out_NextIrpStack_4 != 0;
    assume out_NextIrpStack_4 > 0;
    call {:si_unique_call 2255} out_Status_11 := AvcPrepareForResponseCallback(in_DevExt_13, in_Command_11);
    goto anon43_Then;

  anon43_Then:
    assume {:partition} out_Status_11 == 0;
    assume {:nonnull} in_DevExt_13 != 0;
    assume in_DevExt_13 > 0;
    havoc vslice_dummy_var_2760;
    call {:si_unique_call 2259} out_Status_11 := Avc_SubmitIrpSynch(vslice_dummy_var_2760, in_Irp_18);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} out_Status_11 != 0;
    out_WaitForAbort := 0;
    call {:si_unique_call 2271} out_Tmp_356 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_356 != 0;
    assume out_Tmp_356 > 0;
    call {:si_unique_call 2272} sdv_KeAcquireSpinLock(0, out_Tmp_356);
    assume {:nonnull} out_Tmp_356 != 0;
    assume out_Tmp_356 > 0;
    havoc out_OldIrql_8;
    call {:si_unique_call 2273} out_sdv_230 := sdv_IsListEmpty(0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} out_sdv_230 != 0;
    out_WaitForAbort := 1;
    goto L104;

  L104:
    call {:si_unique_call 2268} sdv_KeReleaseSpinLock(0, out_OldIrql_8);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} out_WaitForAbort != 0;
    call {:si_unique_call 2267} out_vslice_dummy_var_66 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_Command_11 != 0;
    assume in_Command_11 > 0;
    havoc out_Status_11;
    goto L108;

  L108:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} 258 == out_Status_11;
    out_Status_11 := -1073741248;
    goto L113;

  L113:
    goto anon50_Else;

  anon50_Else:
    assume {:partition} out_Status_11 != 0;
    assume {:nonnull} in_DevExt_13 != 0;
    assume in_DevExt_13 > 0;
    goto anon51_Else;

  anon51_Else:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} -1072562032 == out_Status_11;
    goto anon54_Else;

  anon54_Else:
    assume {:partition} out_InvalidGenLimit != 0;
    assume {:nonnull} in_tmDelay != 0;
    assume in_tmDelay > 0;
    assume {:nonnull} in_tmDelay != 0;
    assume in_tmDelay > 0;
    call {:si_unique_call 2256} out_vslice_dummy_var_70 := KeDelayExecutionThread(0, 0, 0);
    out_InvalidGenLimit := out_InvalidGenLimit - 1;
    goto anon54_Else_dummy;

  anon54_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 2274} {:si_old_unique_call 1} out_Retries, out_OldIrql_7, out_WaitForEvent, out_Status_11, out_Tmp_356, out_OldIrql_8, out_sdv_230, out_NextIrpStack_4, out_sdv_235, out_WaitForAbort, out_InvalidGenLimit, out_vslice_dummy_var_65, out_vslice_dummy_var_66, out_vslice_dummy_var_67, out_vslice_dummy_var_68, out_vslice_dummy_var_70 := AvcCommand_sdv_static_function_7_loop_L50(out_Retries, out_OldIrql_7, in_Irp_18, out_WaitForEvent, out_Status_11, out_Tmp_356, out_OldIrql_8, out_sdv_230, out_NextIrpStack_4, out_sdv_235, out_WaitForAbort, out_InvalidGenLimit, in_tmDelay, in_DevExt_13, in_Command_11, out_vslice_dummy_var_65, out_vslice_dummy_var_66, out_vslice_dummy_var_67, out_vslice_dummy_var_68, out_vslice_dummy_var_70);
    return;

  anon52_Then:
    assume {:partition} -1072562032 != out_Status_11;
    goto anon53_Else;

  anon53_Else:
    assume {:partition} 258 == out_Status_11;
    goto anon55_Else;

  anon55_Else:
    assume {:partition} out_Retries != 0;
    out_Retries := out_Retries - 1;
    goto anon55_Else_dummy;

  anon55_Else_dummy:
    goto L_BAF_0;

  anon49_Then:
    assume {:partition} 258 != out_Status_11;
    goto L113;

  anon48_Then:
    assume {:partition} out_WaitForAbort == 0;
    goto L108;

  anon47_Then:
    assume {:partition} out_sdv_230 == 0;
    call {:si_unique_call 2269} out_vslice_dummy_var_65 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2270} InitializeListHead(in_Command_11);
    goto L104;

  anon46_Then:
    assume {:partition} out_Status_11 == 0;
    assume {:nonnull} in_Command_11 != 0;
    assume in_Command_11 > 0;
    call {:si_unique_call 2258} out_Status_11 := KeWaitForSingleObject(0, 0, 0, 0, Timeout__AVC_COMMAND_CONTEXT(in_Command_11));
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} 258 == out_Status_11;
    out_WaitForEvent := 0;
    call {:si_unique_call 2264} out_Tmp_356 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_356 != 0;
    assume out_Tmp_356 > 0;
    call {:si_unique_call 2265} sdv_KeAcquireSpinLock(0, out_Tmp_356);
    assume {:nonnull} out_Tmp_356 != 0;
    assume out_Tmp_356 > 0;
    havoc out_OldIrql_7;
    call {:si_unique_call 2266} out_sdv_235 := sdv_IsListEmpty(0);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} out_sdv_235 != 0;
    out_WaitForEvent := 1;
    goto L150;

  L150:
    call {:si_unique_call 2261} sdv_KeReleaseSpinLock(0, out_OldIrql_7);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} out_WaitForEvent != 0;
    call {:si_unique_call 2260} out_vslice_dummy_var_68 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_Command_11 != 0;
    assume in_Command_11 > 0;
    havoc out_Status_11;
    goto L154;

  L154:
    call {:si_unique_call 2257} IoReuseIrp(in_Irp_18, -1073741637);
    goto L113;

  anon59_Then:
    assume {:partition} out_WaitForEvent == 0;
    goto L154;

  anon58_Then:
    assume {:partition} out_sdv_235 == 0;
    call {:si_unique_call 2262} out_vslice_dummy_var_67 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2263} InitializeListHead(in_Command_11);
    goto L150;

  anon56_Then:
    assume {:partition} 258 != out_Status_11;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} out_Status_11 == 0;
    assume {:nonnull} in_Command_11 != 0;
    assume in_Command_11 > 0;
    havoc out_Status_11;
    goto L113;

  anon57_Then:
    assume {:partition} out_Status_11 != 0;
    goto L113;
}



procedure {:LoopProcedure} AvcCommand_sdv_static_function_7_loop_L50(in_Retries: int, in_OldIrql_7: int, in_Irp_18: int, in_WaitForEvent: int, in_Status_11: int, in_Tmp_356: int, in_OldIrql_8: int, in_sdv_230: int, in_NextIrpStack_4: int, in_sdv_235: int, in_WaitForAbort: int, in_InvalidGenLimit: int, in_tmDelay: int, in_DevExt_13: int, in_Command_11: int, in_vslice_dummy_var_65: int, in_vslice_dummy_var_66: int, in_vslice_dummy_var_67: int, in_vslice_dummy_var_68: int, in_vslice_dummy_var_70: int) returns (out_Retries: int, out_OldIrql_7: int, out_WaitForEvent: int, out_Status_11: int, out_Tmp_356: int, out_OldIrql_8: int, out_sdv_230: int, out_NextIrpStack_4: int, out_sdv_235: int, out_WaitForAbort: int, out_InvalidGenLimit: int, out_vslice_dummy_var_65: int, out_vslice_dummy_var_66: int, out_vslice_dummy_var_67: int, out_vslice_dummy_var_68: int, out_vslice_dummy_var_70: int);
  modifies Mem_T.MajorFunction__IO_STACK_LOCATION, alloc, Mem_T.Status__IO_STATUS_BLOCK, thread_status, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, Mem_T.PendingReturned__IRP, irp_status, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 1 || thread_status == 0 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} out_WaitForEvent == 1 || out_WaitForEvent == 0 || out_WaitForEvent == in_WaitForEvent;
  free ensures {:va_keep} out_sdv_230 == 1 || out_sdv_230 == 0 || out_sdv_230 == in_sdv_230;
  free ensures {:va_keep} out_sdv_235 == 1 || out_sdv_235 == 0 || out_sdv_235 == in_sdv_235;
  free ensures {:va_keep} out_WaitForAbort == 1 || out_WaitForAbort == 0 || out_WaitForAbort == in_WaitForAbort;
  free ensures {:va_keep} out_vslice_dummy_var_65 == 1 || out_vslice_dummy_var_65 == 0 || out_vslice_dummy_var_65 == in_vslice_dummy_var_65;
  free ensures {:va_keep} out_vslice_dummy_var_66 == 258 || out_vslice_dummy_var_66 == 0 || out_vslice_dummy_var_66 == in_vslice_dummy_var_66;
  free ensures {:va_keep} out_vslice_dummy_var_67 == 1 || out_vslice_dummy_var_67 == 0 || out_vslice_dummy_var_67 == in_vslice_dummy_var_67;
  free ensures {:va_keep} out_vslice_dummy_var_68 == 258 || out_vslice_dummy_var_68 == 0 || out_vslice_dummy_var_68 == in_vslice_dummy_var_68;
  free ensures {:va_keep} out_vslice_dummy_var_70 == 0 || out_vslice_dummy_var_70 == -1073741823 || out_vslice_dummy_var_70 == in_vslice_dummy_var_70;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcCommand_sdv_static_function_7_loop_L32(in_Tmp_354: int, in_Padding_1: int, in_Tmp_357: int, in_Tmp_358: int, in_Command_11: int) returns (out_Tmp_354: int, out_Padding_1: int, out_Tmp_357: int, out_Tmp_358: int)
{

  entry:
    out_Tmp_354, out_Padding_1, out_Tmp_357, out_Tmp_358 := in_Tmp_354, in_Padding_1, in_Tmp_357, in_Tmp_358;
    goto L32, exit;

  exit:
    return;

  L32:
    goto anon41_Else;

  anon41_Else:
    assume {:partition} INTMOD(out_Padding_1, 4) != 0;
    out_Tmp_358 := out_Padding_1;
    out_Padding_1 := out_Padding_1 + 1;
    out_Tmp_354 := out_Tmp_358;
    assume {:nonnull} in_Command_11 != 0;
    assume in_Command_11 > 0;
    havoc out_Tmp_357;
    assume {:nonnull} out_Tmp_357 != 0;
    assume out_Tmp_357 > 0;
    goto anon41_Else_dummy;

  anon41_Else_dummy:
    call {:si_unique_call 2275} {:si_old_unique_call 1} out_Tmp_354, out_Padding_1, out_Tmp_357, out_Tmp_358 := AvcCommand_sdv_static_function_7_loop_L32(out_Tmp_354, out_Padding_1, out_Tmp_357, out_Tmp_358, in_Command_11);
    return;
}



procedure {:LoopProcedure} AvcCommand_sdv_static_function_7_loop_L32(in_Tmp_354: int, in_Padding_1: int, in_Tmp_357: int, in_Tmp_358: int, in_Command_11: int) returns (out_Tmp_354: int, out_Padding_1: int, out_Tmp_357: int, out_Tmp_358: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcSearchForUnitCommandHandler_sdv_static_function_7_loop_L27(in_Tmp_363: int, in_max: int, in_Command_12: int, in_idx_8: int, in_Tmp_366: int, in_Opcode_2: int) returns (out_Tmp_363: int, out_idx_8: int, out_Tmp_366: int)
{

  entry:
    out_Tmp_363, out_idx_8, out_Tmp_366 := in_Tmp_363, in_idx_8, in_Tmp_366;
    goto L27, exit;

  exit:
    return;

  L27:
    goto anon21_Else;

  anon21_Else:
    assume {:partition} in_max >= out_idx_8;
    out_Tmp_366 := out_idx_8;
    assume {:nonnull} in_Command_12 != 0;
    assume in_Command_12 > 0;
    havoc out_Tmp_363;
    assume {:nonnull} out_Tmp_363 != 0;
    assume out_Tmp_363 > 0;
    goto anon27_Then;

  anon27_Then:
    out_idx_8 := out_idx_8 + 1;
    goto anon27_Then_dummy;

  anon27_Then_dummy:
    call {:si_unique_call 2276} {:si_old_unique_call 1} out_Tmp_363, out_idx_8, out_Tmp_366 := AvcSearchForUnitCommandHandler_sdv_static_function_7_loop_L27(out_Tmp_363, in_max, in_Command_12, out_idx_8, out_Tmp_366, in_Opcode_2);
    return;
}



procedure {:LoopProcedure} AvcSearchForUnitCommandHandler_sdv_static_function_7_loop_L27(in_Tmp_363: int, in_max: int, in_Command_12: int, in_idx_8: int, in_Tmp_366: int, in_Opcode_2: int) returns (out_Tmp_363: int, out_idx_8: int, out_Tmp_366: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcSearchForUnitCommandHandler_sdv_static_function_7_loop_L11(in_Tmp_362: int, in_Tmp_363: int, in_max: int, in_Tmp_364: int, in_Command_12: int, in_Entry_4: int, in_idx_8: int, in_OpcodesMatch: int, in_Tmp_366: int, in_Opcode_2: int) returns (out_Tmp_362: int, out_Tmp_363: int, out_max: int, out_Tmp_364: int, out_Command_12: int, out_Entry_4: int, out_idx_8: int, out_OpcodesMatch: int, out_Tmp_366: int)
{

  entry:
    out_Tmp_362, out_Tmp_363, out_max, out_Tmp_364, out_Command_12, out_Entry_4, out_idx_8, out_OpcodesMatch, out_Tmp_366 := in_Tmp_362, in_Tmp_363, in_max, in_Tmp_364, in_Command_12, in_Entry_4, in_idx_8, in_OpcodesMatch, in_Tmp_366;
    goto L11, exit;

  exit:
    return;

  L11:
    goto anon19_Else;

  anon19_Else:
    out_Command_12 := out_Entry_4;
    assume {:nonnull} out_Command_12 != 0;
    assume out_Command_12 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L18;

  L18:
    assume {:nonnull} out_Entry_4 != 0;
    assume out_Entry_4 > 0;
    havoc out_Entry_4;
    goto L18_dummy;

  L18_dummy:
    call {:si_unique_call 2278} {:si_old_unique_call 1} out_Tmp_362, out_Tmp_363, out_max, out_Tmp_364, out_Command_12, out_Entry_4, out_idx_8, out_OpcodesMatch, out_Tmp_366 := AvcSearchForUnitCommandHandler_sdv_static_function_7_loop_L11(out_Tmp_362, out_Tmp_363, out_max, out_Tmp_364, out_Command_12, out_Entry_4, out_idx_8, out_OpcodesMatch, out_Tmp_366, in_Opcode_2);
    return;

  anon24_Then:
    assume {:nonnull} out_Command_12 != 0;
    assume out_Command_12 > 0;
    havoc out_Tmp_364;
    assume {:nonnull} out_Tmp_364 != 0;
    assume out_Tmp_364 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    out_OpcodesMatch := 0;
    assume {:nonnull} out_Command_12 != 0;
    assume out_Command_12 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} out_Command_12 != 0;
    assume out_Command_12 > 0;
    havoc out_Tmp_362;
    assume {:nonnull} out_Tmp_362 != 0;
    assume out_Tmp_362 > 0;
    havoc out_max;
    out_idx_8 := 1;
    goto L27;

  L27:
    call {:si_unique_call 2277} out_Tmp_363, out_idx_8, out_Tmp_366 := AvcSearchForUnitCommandHandler_sdv_static_function_7_loop_L27(out_Tmp_363, out_max, out_Command_12, out_idx_8, out_Tmp_366, in_Opcode_2);
    goto L27_last;

  L27_last:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} out_max >= out_idx_8;
    out_Tmp_366 := out_idx_8;
    assume {:nonnull} out_Command_12 != 0;
    assume out_Command_12 > 0;
    havoc out_Tmp_363;
    assume {:nonnull} out_Tmp_363 != 0;
    assume out_Tmp_363 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    out_OpcodesMatch := 1;
    goto L28;

  L28:
    goto anon22_Then;

  anon22_Then:
    assume {:partition} out_OpcodesMatch == 0;
    goto L18;

  anon27_Then:
    out_idx_8 := out_idx_8 + 1;
    assume false;
    return;

  anon21_Then:
    assume {:partition} out_idx_8 > out_max;
    goto L28;

  anon26_Then:
    assume {:nonnull} out_Command_12 != 0;
    assume out_Command_12 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    out_OpcodesMatch := 0;
    goto L74;

  L74:
    goto L28;

  anon20_Then:
    out_OpcodesMatch := 1;
    goto L74;

  anon25_Then:
    goto L18;
}



procedure {:LoopProcedure} AvcSearchForUnitCommandHandler_sdv_static_function_7_loop_L11(in_Tmp_362: int, in_Tmp_363: int, in_max: int, in_Tmp_364: int, in_Command_12: int, in_Entry_4: int, in_idx_8: int, in_OpcodesMatch: int, in_Tmp_366: int, in_Opcode_2: int) returns (out_Tmp_362: int, out_Tmp_363: int, out_max: int, out_Tmp_364: int, out_Command_12: int, out_Entry_4: int, out_idx_8: int, out_OpcodesMatch: int, out_Tmp_366: int);
  free ensures {:va_keep} out_OpcodesMatch == 1 || out_OpcodesMatch == 0 || out_OpcodesMatch == in_OpcodesMatch;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcDuplicateCommandContext_sdv_static_function_7_loop_L38(in_sdv_245: int, in_Command_13: int, in_Entry_6: int, in_OrigCommand: int, in_vslice_dummy_var_72: int) returns (out_sdv_245: int, out_Entry_6: int, out_vslice_dummy_var_72: int)
{

  entry:
    out_sdv_245, out_Entry_6, out_vslice_dummy_var_72 := in_sdv_245, in_Entry_6, in_vslice_dummy_var_72;
    goto L38, exit;

  exit:
    return;

  L38:
    assume {:nonnull} in_OrigCommand != 0;
    assume in_OrigCommand > 0;
    call {:si_unique_call 2279} out_Entry_6 := RemoveHeadList(CallbackChain__AVC_COMMAND_CONTEXT(in_OrigCommand));
    assume {:nonnull} in_Command_13 != 0;
    assume in_Command_13 > 0;
    call {:si_unique_call 2280} out_vslice_dummy_var_72 := sdv_InsertTailList(CallbackChain__AVC_COMMAND_CONTEXT(in_Command_13), out_Entry_6);
    call {:si_unique_call 2281} out_sdv_245 := sdv_IsListEmpty(0);
    goto anon11_Then;

  anon11_Then:
    assume {:partition} out_sdv_245 == 0;
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    call {:si_unique_call 2282} {:si_old_unique_call 1} out_sdv_245, out_Entry_6, out_vslice_dummy_var_72 := AvcDuplicateCommandContext_sdv_static_function_7_loop_L38(out_sdv_245, in_Command_13, out_Entry_6, in_OrigCommand, out_vslice_dummy_var_72);
    return;
}



procedure {:LoopProcedure} AvcDuplicateCommandContext_sdv_static_function_7_loop_L38(in_sdv_245: int, in_Command_13: int, in_Entry_6: int, in_OrigCommand: int, in_vslice_dummy_var_72: int) returns (out_sdv_245: int, out_Entry_6: int, out_vslice_dummy_var_72: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_245 == 1 || out_sdv_245 == 0 || out_sdv_245 == in_sdv_245;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcDuplicateCommandContext_sdv_static_function_7_loop_L23(in_Entry_5: int, in_sdv_242: int, in_Command_13: int, in_OrigCommand: int, in_vslice_dummy_var_73: int) returns (out_Entry_5: int, out_sdv_242: int, out_vslice_dummy_var_73: int)
{

  entry:
    out_Entry_5, out_sdv_242, out_vslice_dummy_var_73 := in_Entry_5, in_sdv_242, in_vslice_dummy_var_73;
    goto L23, exit;

  exit:
    return;

  L23:
    call {:si_unique_call 2283} out_sdv_242 := sdv_IsListEmpty(0);
    goto anon9_Else;

  anon9_Else:
    assume {:partition} out_sdv_242 == 0;
    assume {:nonnull} in_OrigCommand != 0;
    assume in_OrigCommand > 0;
    call {:si_unique_call 2284} out_Entry_5 := RemoveHeadList(PendingIrpList__AVC_COMMAND_CONTEXT(in_OrigCommand));
    assume {:nonnull} in_Command_13 != 0;
    assume in_Command_13 > 0;
    call {:si_unique_call 2285} out_vslice_dummy_var_73 := sdv_InsertTailList(PendingIrpList__AVC_COMMAND_CONTEXT(in_Command_13), out_Entry_5);
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    call {:si_unique_call 2286} {:si_old_unique_call 1} out_Entry_5, out_sdv_242, out_vslice_dummy_var_73 := AvcDuplicateCommandContext_sdv_static_function_7_loop_L23(out_Entry_5, out_sdv_242, in_Command_13, in_OrigCommand, out_vslice_dummy_var_73);
    return;
}



procedure {:LoopProcedure} AvcDuplicateCommandContext_sdv_static_function_7_loop_L23(in_Entry_5: int, in_sdv_242: int, in_Command_13: int, in_OrigCommand: int, in_vslice_dummy_var_73: int) returns (out_Entry_5: int, out_sdv_242: int, out_vslice_dummy_var_73: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_242 == 1 || out_sdv_242 == 0 || out_sdv_242 == in_sdv_242;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcDequeueFCPIrp_loop_L11(in_listEntry: int, in_sdv_259: int, in_oldCancelRoutine_1: int, in_sdv_261: int, in_nextIrp: int, in_Command_15: int) returns (out_listEntry: int, out_sdv_259: int, out_oldCancelRoutine_1: int, out_sdv_261: int, out_nextIrp: int)
{

  entry:
    out_listEntry, out_sdv_259, out_oldCancelRoutine_1, out_sdv_261, out_nextIrp := in_listEntry, in_sdv_259, in_oldCancelRoutine_1, in_sdv_261, in_nextIrp;
    goto L11, exit;

  exit:
    return;

  L11:
    goto anon7_Then;

  anon7_Then:
    assume {:partition} out_nextIrp == 0;
    call {:si_unique_call 2291} out_sdv_259 := sdv_IsListEmpty(0);
    goto anon8_Else;

  anon8_Else:
    assume {:partition} out_sdv_259 == 0;
    assume {:nonnull} in_Command_15 != 0;
    assume in_Command_15 > 0;
    call {:si_unique_call 2288} out_listEntry := RemoveHeadList(PendingIrpList__AVC_COMMAND_CONTEXT(in_Command_15));
    call {:si_unique_call 2289} out_sdv_261 := sdv_containing_record(out_listEntry, 88);
    out_nextIrp := out_sdv_261;
    call {:si_unique_call 2290} out_oldCancelRoutine_1 := sdv_IoSetCancelRoutine(out_nextIrp, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} out_oldCancelRoutine_1 == 0;
    assume {:nonnull} out_nextIrp != 0;
    assume out_nextIrp > 0;
    call {:si_unique_call 2287} InitializeListHead(ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(out_nextIrp))));
    out_nextIrp := 0;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 2292} {:si_old_unique_call 1} out_listEntry, out_sdv_259, out_oldCancelRoutine_1, out_sdv_261, out_nextIrp := AvcDequeueFCPIrp_loop_L11(out_listEntry, out_sdv_259, out_oldCancelRoutine_1, out_sdv_261, out_nextIrp, in_Command_15);
    return;

  anon9_Then:
    assume {:partition} out_oldCancelRoutine_1 != 0;
    goto anon9_Then_dummy;

  anon9_Then_dummy:
    goto L_BAF_1;
}



procedure {:LoopProcedure} AvcDequeueFCPIrp_loop_L11(in_listEntry: int, in_sdv_259: int, in_oldCancelRoutine_1: int, in_sdv_261: int, in_nextIrp: int, in_Command_15: int) returns (out_listEntry: int, out_sdv_259: int, out_oldCancelRoutine_1: int, out_sdv_261: int, out_nextIrp: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_259 == 1 || out_sdv_259 == 0 || out_sdv_259 == in_sdv_259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcUnpackSubunitAddress_loop_L15(in_Tmp_411: int, in_idx_12: int, in_Tmp_420: int, in_Tmp_422: int, in_Buffer_3: int, in_SubunitType_2: int) returns (out_Tmp_411: int, out_idx_12: int, out_Tmp_420: int, out_Tmp_422: int)
{

  entry:
    out_Tmp_411, out_idx_12, out_Tmp_420, out_Tmp_422 := in_Tmp_411, in_idx_12, in_Tmp_420, in_Tmp_422;
    goto L15, exit;

  exit:
    return;

  L15:
    out_Tmp_422 := out_idx_12;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    goto anon38_Else;

  anon38_Else:
    out_Tmp_411 := out_idx_12;
    out_Tmp_420 := out_idx_12;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    assume {:nonnull} in_SubunitType_2 != 0;
    assume in_SubunitType_2 > 0;
    out_idx_12 := out_idx_12 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    call {:si_unique_call 2293} {:si_old_unique_call 1} out_Tmp_411, out_idx_12, out_Tmp_420, out_Tmp_422 := AvcUnpackSubunitAddress_loop_L15(out_Tmp_411, out_idx_12, out_Tmp_420, out_Tmp_422, in_Buffer_3, in_SubunitType_2);
    return;
}



procedure {:LoopProcedure} AvcUnpackSubunitAddress_loop_L15(in_Tmp_411: int, in_idx_12: int, in_Tmp_420: int, in_Tmp_422: int, in_Buffer_3: int, in_SubunitType_2: int) returns (out_Tmp_411: int, out_idx_12: int, out_Tmp_420: int, out_Tmp_422: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcUnpackSubunitAddress_loop_L29(in_Tmp_408: int, in_Tmp_415: int, in_idx_12: int, in_Buffer_3: int, in_SubunitID_1: int) returns (out_Tmp_408: int, out_Tmp_415: int, out_idx_12: int)
{

  entry:
    out_Tmp_408, out_Tmp_415, out_idx_12 := in_Tmp_408, in_Tmp_415, in_idx_12;
    goto L29, exit;

  exit:
    return;

  L29:
    out_Tmp_415 := out_idx_12;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    goto anon42_Else;

  anon42_Else:
    out_Tmp_408 := out_idx_12;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    assume {:nonnull} in_SubunitID_1 != 0;
    assume in_SubunitID_1 > 0;
    out_idx_12 := out_idx_12 + 1;
    goto anon42_Else_dummy;

  anon42_Else_dummy:
    call {:si_unique_call 2294} {:si_old_unique_call 1} out_Tmp_408, out_Tmp_415, out_idx_12 := AvcUnpackSubunitAddress_loop_L29(out_Tmp_408, out_Tmp_415, out_idx_12, in_Buffer_3, in_SubunitID_1);
    return;
}



procedure {:LoopProcedure} AvcUnpackSubunitAddress_loop_L29(in_Tmp_408: int, in_Tmp_415: int, in_idx_12: int, in_Buffer_3: int, in_SubunitID_1: int) returns (out_Tmp_408: int, out_Tmp_415: int, out_idx_12: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcUnpackSubunitAddress_loop_L38(in_Tmp_414: int, in_idx_12: int, in_Buffer_3: int) returns (out_Tmp_414: int, out_idx_12: int)
{

  entry:
    out_Tmp_414, out_idx_12 := in_Tmp_414, in_idx_12;
    goto L38, exit;

  exit:
    return;

  L38:
    out_Tmp_414 := out_idx_12;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    goto anon45_Else;

  anon45_Else:
    out_idx_12 := out_idx_12 + 1;
    goto anon45_Else_dummy;

  anon45_Else_dummy:
    havoc out_idx_12;
    return;
}



procedure {:LoopProcedure} AvcUnpackSubunitAddress_loop_L38(in_Tmp_414: int, in_idx_12: int, in_Buffer_3: int) returns (out_Tmp_414: int, out_idx_12: int);
  free ensures {:va_keep} out_Tmp_414 == in_idx_12 || out_Tmp_414 == in_Tmp_414;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcUnpackSubunitAddress_loop_L43(in_Tmp_410: int, in_idx_12: int, in_Buffer_3: int) returns (out_Tmp_410: int, out_idx_12: int)
{

  entry:
    out_Tmp_410, out_idx_12 := in_Tmp_410, in_idx_12;
    goto L43, exit;

  exit:
    return;

  L43:
    out_Tmp_410 := out_idx_12;
    assume {:nonnull} in_Buffer_3 != 0;
    assume in_Buffer_3 > 0;
    goto anon47_Else;

  anon47_Else:
    out_idx_12 := out_idx_12 + 1;
    goto anon47_Else_dummy;

  anon47_Else_dummy:
    havoc out_idx_12;
    return;
}



procedure {:LoopProcedure} AvcUnpackSubunitAddress_loop_L43(in_Tmp_410: int, in_idx_12: int, in_Buffer_3: int) returns (out_Tmp_410: int, out_idx_12: int);
  free ensures {:va_keep} out_Tmp_410 == in_idx_12 || out_Tmp_410 == in_Tmp_410;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcExtractMatchingIrps_sdv_static_function_7_loop_L11(in_Irp_23: int, in_sdv_272: int, in_IrpStack_6: int, in_oldCancelRoutine_2: int, in_nextIrpEntry: int, in_IrpEntry_1: int, in_FileObject_1: int, in_IrpList: int, in_vslice_dummy_var_76: int, in_vslice_dummy_var_77: int) returns (out_Irp_23: int, out_sdv_272: int, out_IrpStack_6: int, out_oldCancelRoutine_2: int, out_nextIrpEntry: int, out_IrpEntry_1: int, out_vslice_dummy_var_76: int, out_vslice_dummy_var_77: int)
{

  entry:
    out_Irp_23, out_sdv_272, out_IrpStack_6, out_oldCancelRoutine_2, out_nextIrpEntry, out_IrpEntry_1, out_vslice_dummy_var_76, out_vslice_dummy_var_77 := in_Irp_23, in_sdv_272, in_IrpStack_6, in_oldCancelRoutine_2, in_nextIrpEntry, in_IrpEntry_1, in_vslice_dummy_var_76, in_vslice_dummy_var_77;
    goto L11, exit;

  exit:
    return;

  L11:
    goto anon10_Else;

  anon10_Else:
    call {:si_unique_call 2297} out_sdv_272 := sdv_containing_record(out_IrpEntry_1, 88);
    out_Irp_23 := out_sdv_272;
    call {:si_unique_call 2298} out_IrpStack_6 := sdv_IoGetCurrentIrpStackLocation(out_Irp_23);
    assume {:nonnull} out_IrpEntry_1 != 0;
    assume out_IrpEntry_1 > 0;
    havoc out_nextIrpEntry;
    assume {:nonnull} out_IrpStack_6 != 0;
    assume out_IrpStack_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 2299} out_oldCancelRoutine_2 := sdv_IoSetCancelRoutine(out_Irp_23, 0);
    call {:si_unique_call 2300} out_vslice_dummy_var_76 := sdv_RemoveEntryList(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} out_oldCancelRoutine_2 != 0;
    call {:si_unique_call 2295} out_vslice_dummy_var_77 := sdv_InsertTailList(in_IrpList, out_IrpEntry_1);
    goto L26;

  L26:
    out_IrpEntry_1 := out_nextIrpEntry;
    goto L26_dummy;

  L26_dummy:
    call {:si_unique_call 2301} {:si_old_unique_call 1} out_Irp_23, out_sdv_272, out_IrpStack_6, out_oldCancelRoutine_2, out_nextIrpEntry, out_IrpEntry_1, out_vslice_dummy_var_76, out_vslice_dummy_var_77 := AvcExtractMatchingIrps_sdv_static_function_7_loop_L11(out_Irp_23, out_sdv_272, out_IrpStack_6, out_oldCancelRoutine_2, out_nextIrpEntry, out_IrpEntry_1, in_FileObject_1, in_IrpList, out_vslice_dummy_var_76, out_vslice_dummy_var_77);
    return;

  anon11_Then:
    assume {:partition} out_oldCancelRoutine_2 == 0;
    call {:si_unique_call 2296} InitializeListHead(out_IrpEntry_1);
    goto L26;

  anon12_Then:
    goto L26;
}



procedure {:LoopProcedure} AvcExtractMatchingIrps_sdv_static_function_7_loop_L11(in_Irp_23: int, in_sdv_272: int, in_IrpStack_6: int, in_oldCancelRoutine_2: int, in_nextIrpEntry: int, in_IrpEntry_1: int, in_FileObject_1: int, in_IrpList: int, in_vslice_dummy_var_76: int, in_vslice_dummy_var_77: int) returns (out_Irp_23: int, out_sdv_272: int, out_IrpStack_6: int, out_oldCancelRoutine_2: int, out_nextIrpEntry: int, out_IrpEntry_1: int, out_vslice_dummy_var_76: int, out_vslice_dummy_var_77: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_76 == 1 || out_vslice_dummy_var_76 == 0 || out_vslice_dummy_var_76 == in_vslice_dummy_var_76;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcExtractMatchingIrps_sdv_static_function_7_loop_L5(in_Irp_23: int, in_CommandEntry: int, in_sdv_272: int, in_IrpStack_6: int, in_oldCancelRoutine_2: int, in_nextIrpEntry: int, in_Command_18: int, in_IrpEntry_1: int, in_FileObject_1: int, in_IrpList: int, in_vslice_dummy_var_76: int, in_vslice_dummy_var_77: int) returns (out_Irp_23: int, out_CommandEntry: int, out_sdv_272: int, out_IrpStack_6: int, out_oldCancelRoutine_2: int, out_nextIrpEntry: int, out_Command_18: int, out_IrpEntry_1: int, out_vslice_dummy_var_76: int, out_vslice_dummy_var_77: int)
{

  entry:
    out_Irp_23, out_CommandEntry, out_sdv_272, out_IrpStack_6, out_oldCancelRoutine_2, out_nextIrpEntry, out_Command_18, out_IrpEntry_1, out_vslice_dummy_var_76, out_vslice_dummy_var_77 := in_Irp_23, in_CommandEntry, in_sdv_272, in_IrpStack_6, in_oldCancelRoutine_2, in_nextIrpEntry, in_Command_18, in_IrpEntry_1, in_vslice_dummy_var_76, in_vslice_dummy_var_77;
    goto L5, exit;

  exit:
    return;

  L5:
    goto anon9_Else;

  anon9_Else:
    out_Command_18 := out_CommandEntry;
    assume {:nonnull} out_Command_18 != 0;
    assume out_Command_18 > 0;
    havoc out_IrpEntry_1;
    goto L11;

  L11:
    call {:si_unique_call 2302} out_Irp_23, out_sdv_272, out_IrpStack_6, out_oldCancelRoutine_2, out_nextIrpEntry, out_IrpEntry_1, out_vslice_dummy_var_76, out_vslice_dummy_var_77 := AvcExtractMatchingIrps_sdv_static_function_7_loop_L11(out_Irp_23, out_sdv_272, out_IrpStack_6, out_oldCancelRoutine_2, out_nextIrpEntry, out_IrpEntry_1, in_FileObject_1, in_IrpList, out_vslice_dummy_var_76, out_vslice_dummy_var_77);
    goto L11_last;

  L11_last:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    call {:si_unique_call 2305} out_sdv_272 := sdv_containing_record(out_IrpEntry_1, 88);
    out_Irp_23 := out_sdv_272;
    call {:si_unique_call 2306} out_IrpStack_6 := sdv_IoGetCurrentIrpStackLocation(out_Irp_23);
    assume {:nonnull} out_IrpEntry_1 != 0;
    assume out_IrpEntry_1 > 0;
    havoc out_nextIrpEntry;
    assume {:nonnull} out_IrpStack_6 != 0;
    assume out_IrpStack_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    call {:si_unique_call 2307} out_oldCancelRoutine_2 := sdv_IoSetCancelRoutine(out_Irp_23, 0);
    call {:si_unique_call 2308} out_vslice_dummy_var_76 := sdv_RemoveEntryList(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} out_oldCancelRoutine_2 != 0;
    call {:si_unique_call 2303} out_vslice_dummy_var_77 := sdv_InsertTailList(in_IrpList, out_IrpEntry_1);
    goto L26;

  L26:
    out_IrpEntry_1 := out_nextIrpEntry;
    assume false;
    return;

  anon11_Then:
    assume {:partition} out_oldCancelRoutine_2 == 0;
    call {:si_unique_call 2304} InitializeListHead(out_IrpEntry_1);
    goto L26;

  anon12_Then:
    goto L26;

  anon10_Then:
    assume {:nonnull} out_CommandEntry != 0;
    assume out_CommandEntry > 0;
    havoc out_CommandEntry;
    goto anon10_Then_dummy;

  anon10_Then_dummy:
    call {:si_unique_call 2309} {:si_old_unique_call 1} out_Irp_23, out_CommandEntry, out_sdv_272, out_IrpStack_6, out_oldCancelRoutine_2, out_nextIrpEntry, out_Command_18, out_IrpEntry_1, out_vslice_dummy_var_76, out_vslice_dummy_var_77 := AvcExtractMatchingIrps_sdv_static_function_7_loop_L5(out_Irp_23, out_CommandEntry, out_sdv_272, out_IrpStack_6, out_oldCancelRoutine_2, out_nextIrpEntry, out_Command_18, out_IrpEntry_1, in_FileObject_1, in_IrpList, out_vslice_dummy_var_76, out_vslice_dummy_var_77);
    return;
}



procedure {:LoopProcedure} AvcExtractMatchingIrps_sdv_static_function_7_loop_L5(in_Irp_23: int, in_CommandEntry: int, in_sdv_272: int, in_IrpStack_6: int, in_oldCancelRoutine_2: int, in_nextIrpEntry: int, in_Command_18: int, in_IrpEntry_1: int, in_FileObject_1: int, in_IrpList: int, in_vslice_dummy_var_76: int, in_vslice_dummy_var_77: int) returns (out_Irp_23: int, out_CommandEntry: int, out_sdv_272: int, out_IrpStack_6: int, out_oldCancelRoutine_2: int, out_nextIrpEntry: int, out_Command_18: int, out_IrpEntry_1: int, out_vslice_dummy_var_76: int, out_vslice_dummy_var_77: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_76 == 1 || out_vslice_dummy_var_76 == 0 || out_vslice_dummy_var_76 == in_vslice_dummy_var_76;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_332631937_loop_L14(in_Tmp_652: int, in_Tmp_660: int, in_idx_13: int, in_Tmp_667: int, in_this_23: int, in_limit_1: int, in_sua_1: int) returns (out_Tmp_652: int, out_Tmp_660: int, out_idx_13: int, out_Tmp_667: int)
{

  entry:
    out_Tmp_652, out_Tmp_660, out_idx_13, out_Tmp_667 := in_Tmp_652, in_Tmp_660, in_idx_13, in_Tmp_667;
    goto L14, exit;

  exit:
    return;

  L14:
    goto anon28_Else;

  anon28_Else:
    assume {:partition} in_limit_1 > out_idx_13;
    out_Tmp_667 := out_idx_13;
    assume {:nonnull} in_sua_1 != 0;
    assume in_sua_1 > 0;
    goto anon35_Else;

  anon35_Else:
    out_Tmp_652 := out_idx_13;
    assume {:nonnull} in_this_23 != 0;
    assume in_this_23 > 0;
    havoc out_Tmp_660;
    assume {:nonnull} out_Tmp_660 != 0;
    assume out_Tmp_660 > 0;
    out_idx_13 := out_idx_13 + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    call {:si_unique_call 2310} {:si_old_unique_call 1} out_Tmp_652, out_Tmp_660, out_idx_13, out_Tmp_667 := sdv_hash_332631937_loop_L14(out_Tmp_652, out_Tmp_660, out_idx_13, out_Tmp_667, in_this_23, in_limit_1, in_sua_1);
    return;
}



procedure {:LoopProcedure} sdv_hash_332631937_loop_L14(in_Tmp_652: int, in_Tmp_660: int, in_idx_13: int, in_Tmp_667: int, in_this_23: int, in_limit_1: int, in_sua_1: int) returns (out_Tmp_652: int, out_Tmp_660: int, out_idx_13: int, out_Tmp_667: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_332631937_loop_L25(in_Tmp_651: int, in_Tmp_658: int, in_idx_13: int, in_Tmp_665: int, in_this_23: int, in_limit_1: int, in_sua_1: int) returns (out_Tmp_651: int, out_Tmp_658: int, out_idx_13: int, out_Tmp_665: int)
{

  entry:
    out_Tmp_651, out_Tmp_658, out_idx_13, out_Tmp_665 := in_Tmp_651, in_Tmp_658, in_idx_13, in_Tmp_665;
    goto L25, exit;

  exit:
    return;

  L25:
    goto anon31_Else;

  anon31_Else:
    assume {:partition} in_limit_1 > out_idx_13;
    out_Tmp_658 := out_idx_13;
    assume {:nonnull} in_sua_1 != 0;
    assume in_sua_1 > 0;
    goto anon38_Else;

  anon38_Else:
    out_Tmp_665 := out_idx_13;
    assume {:nonnull} in_this_23 != 0;
    assume in_this_23 > 0;
    havoc out_Tmp_651;
    assume {:nonnull} out_Tmp_651 != 0;
    assume out_Tmp_651 > 0;
    out_idx_13 := out_idx_13 + 1;
    goto anon38_Else_dummy;

  anon38_Else_dummy:
    call {:si_unique_call 2311} {:si_old_unique_call 1} out_Tmp_651, out_Tmp_658, out_idx_13, out_Tmp_665 := sdv_hash_332631937_loop_L25(out_Tmp_651, out_Tmp_658, out_idx_13, out_Tmp_665, in_this_23, in_limit_1, in_sua_1);
    return;
}



procedure {:LoopProcedure} sdv_hash_332631937_loop_L25(in_Tmp_651: int, in_Tmp_658: int, in_idx_13: int, in_Tmp_665: int, in_this_23: int, in_limit_1: int, in_sua_1: int) returns (out_Tmp_651: int, out_Tmp_658: int, out_idx_13: int, out_Tmp_665: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_405508819_loop_L15(in_Tmp_673: int, in_Tmp_674: int, in_Tmp_683: int, in_idx_14: int, in_this_25: int, in_sua_2: int) returns (out_Tmp_673: int, out_Tmp_674: int, out_Tmp_683: int, out_idx_14: int)
{

  entry:
    out_Tmp_673, out_Tmp_674, out_Tmp_683, out_idx_14 := in_Tmp_673, in_Tmp_674, in_Tmp_683, in_idx_14;
    goto L15, exit;

  exit:
    return;

  L15:
    out_Tmp_683 := out_idx_14;
    assume {:nonnull} in_this_25 != 0;
    assume in_this_25 > 0;
    havoc out_Tmp_674;
    assume {:nonnull} out_Tmp_674 != 0;
    assume out_Tmp_674 > 0;
    goto anon30_Else;

  anon30_Else:
    out_Tmp_673 := out_idx_14;
    assume {:nonnull} in_sua_2 != 0;
    assume in_sua_2 > 0;
    goto anon31_Then;

  anon31_Then:
    out_idx_14 := out_idx_14 + 1;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    havoc out_idx_14;
    return;
}



procedure {:LoopProcedure} sdv_hash_405508819_loop_L15(in_Tmp_673: int, in_Tmp_674: int, in_Tmp_683: int, in_idx_14: int, in_this_25: int, in_sua_2: int) returns (out_Tmp_673: int, out_Tmp_674: int, out_Tmp_683: int, out_idx_14: int);
  free ensures {:va_keep} out_Tmp_673 == in_idx_14 || out_Tmp_673 == in_Tmp_673;
  free ensures {:va_keep} out_Tmp_683 == in_idx_14 || out_Tmp_683 == in_Tmp_683;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_405508819_loop_L24(in_Tmp_676: int, in_Tmp_679: int, in_Tmp_681: int, in_idx_14: int, in_this_25: int, in_sua_2: int) returns (out_Tmp_676: int, out_Tmp_679: int, out_Tmp_681: int, out_idx_14: int)
{

  entry:
    out_Tmp_676, out_Tmp_679, out_Tmp_681, out_idx_14 := in_Tmp_676, in_Tmp_679, in_Tmp_681, in_idx_14;
    goto L24, exit;

  exit:
    return;

  L24:
    out_Tmp_679 := out_idx_14;
    assume {:nonnull} in_this_25 != 0;
    assume in_this_25 > 0;
    havoc out_Tmp_681;
    assume {:nonnull} out_Tmp_681 != 0;
    assume out_Tmp_681 > 0;
    goto anon34_Else;

  anon34_Else:
    out_Tmp_676 := out_idx_14;
    assume {:nonnull} in_sua_2 != 0;
    assume in_sua_2 > 0;
    goto anon35_Then;

  anon35_Then:
    out_idx_14 := out_idx_14 + 1;
    goto anon35_Then_dummy;

  anon35_Then_dummy:
    havoc out_idx_14;
    return;
}



procedure {:LoopProcedure} sdv_hash_405508819_loop_L24(in_Tmp_676: int, in_Tmp_679: int, in_Tmp_681: int, in_idx_14: int, in_this_25: int, in_sua_2: int) returns (out_Tmp_676: int, out_Tmp_679: int, out_Tmp_681: int, out_idx_14: int);
  free ensures {:va_keep} out_Tmp_676 == in_idx_14 || out_Tmp_676 == in_Tmp_676;
  free ensures {:va_keep} out_Tmp_679 == in_idx_14 || out_Tmp_679 == in_Tmp_679;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_EnumerateChildren_loop_L15(in_PdoData_4: int) returns (out_PdoData_4: int)
{

  entry:
    out_PdoData_4 := in_PdoData_4;
    goto L15, exit;

  exit:
    return;

  L15:
    goto anon6_Else;

  anon6_Else:
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    assume {:nonnull} out_PdoData_4 != 0;
    assume out_PdoData_4 > 0;
    havoc out_PdoData_4;
    goto anon6_Else_dummy;

  anon6_Else_dummy:
    call {:si_unique_call 2312} {:si_old_unique_call 1} out_PdoData_4 := Avc_EnumerateChildren_loop_L15(out_PdoData_4);
    return;
}



procedure {:LoopProcedure} Avc_EnumerateChildren_loop_L15(in_PdoData_4: int) returns (out_PdoData_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_UpdateVirtualSubunitInfo_loop_L66(in_PdoData_5: int, in_SubunitAddr_11: int, in_sdv_462: int, in_BusExtension_13: int) returns (out_PdoData_5: int, out_sdv_462: int)
{
  var vslice_dummy_var_2761: int;

  entry:
    out_PdoData_5, out_sdv_462 := in_PdoData_5, in_sdv_462;
    goto L66, exit;

  exit:
    return;

  L66:
    goto anon61_Else;

  anon61_Else:
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    havoc vslice_dummy_var_2761;
    call {:si_unique_call 2313} out_sdv_462 := AvcSubunitPackedTypesEqual(in_SubunitAddr_11, vslice_dummy_var_2761);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} out_sdv_462 != 0;
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} in_BusExtension_13 != 0;
    assume in_BusExtension_13 > 0;
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    goto L71;

  L71:
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    havoc out_PdoData_5;
    goto L71_dummy;

  L71_dummy:
    call {:si_unique_call 2314} {:si_old_unique_call 1} out_PdoData_5, out_sdv_462 := Avc_UpdateVirtualSubunitInfo_loop_L66(out_PdoData_5, in_SubunitAddr_11, out_sdv_462, in_BusExtension_13);
    return;

  anon63_Then:
    goto L71;

  anon62_Then:
    assume {:partition} out_sdv_462 == 0;
    goto L71;
}



procedure {:LoopProcedure} Avc_UpdateVirtualSubunitInfo_loop_L66(in_PdoData_5: int, in_SubunitAddr_11: int, in_sdv_462: int, in_BusExtension_13: int) returns (out_PdoData_5: int, out_sdv_462: int);
  free ensures {:va_keep} out_sdv_462 == 1 || out_sdv_462 == 0 || out_sdv_462 == in_sdv_462;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:SIextraRecBound 2} Avc_UpdateVirtualSubunitInfo_loop_L143(in_Tmp_733: int, in_InstanceID: int, in_uniValueName: int, in_ntStatus_34: int, in_szTemp: int, in_uniTemp: int, in_vslice_dummy_var_146: int, in_vslice_dummy_var_149: int, in_vslice_dummy_var_150: int, in_vslice_dummy_var_151: int) returns (out_Tmp_733: int, out_InstanceID: int, out_ntStatus_34: int, out_vslice_dummy_var_146: int, out_vslice_dummy_var_149: int, out_vslice_dummy_var_150: int, out_vslice_dummy_var_151: int)
{

  entry:
    out_Tmp_733, out_InstanceID, out_ntStatus_34, out_vslice_dummy_var_146, out_vslice_dummy_var_149, out_vslice_dummy_var_150, out_vslice_dummy_var_151 := in_Tmp_733, in_InstanceID, in_ntStatus_34, in_vslice_dummy_var_146, in_vslice_dummy_var_149, in_vslice_dummy_var_150, in_vslice_dummy_var_151;
    goto L143, exit;

  exit:
    return;

  L143:
    goto anon71_Else;

  anon71_Else:
    assume {:partition} out_InstanceID != 0;
    goto anon73_Else;

  anon73_Else:
    assume {:partition} out_ntStatus_34 == 0;
    call {:si_unique_call 2319} out_ntStatus_34 := sdv_RtlQueryRegistryValues(-1073741824, 0, 0, 0, 0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} out_ntStatus_34 == 0;
    assume {:nonnull} in_uniTemp != 0;
    assume in_uniTemp > 0;
    assume {:nonnull} in_uniTemp != 0;
    assume in_uniTemp > 0;
    assume {:nonnull} in_uniTemp != 0;
    assume in_uniTemp > 0;
    out_Tmp_733 := out_InstanceID;
    call {:si_unique_call 2315} out_vslice_dummy_var_149 := RtlIntegerToUnicodeString(out_Tmp_733, 10, 0);
    assume {:nonnull} in_uniValueName != 0;
    assume in_uniValueName > 0;
    call {:si_unique_call 2316} out_vslice_dummy_var_150 := corral_nondet();
    call {:si_unique_call 2317} out_vslice_dummy_var_151 := corral_nondet();
    call {:si_unique_call 2318} out_vslice_dummy_var_146 := corral_nondet();
    goto L152;

  L152:
    out_InstanceID := out_InstanceID + 1;
    goto L152_dummy;

  L152_dummy:
    call {:si_unique_call 2320} {:si_old_unique_call 1} out_Tmp_733, out_InstanceID, out_ntStatus_34, out_vslice_dummy_var_146, out_vslice_dummy_var_149, out_vslice_dummy_var_150, out_vslice_dummy_var_151 := Avc_UpdateVirtualSubunitInfo_loop_L143(out_Tmp_733, out_InstanceID, in_uniValueName, out_ntStatus_34, in_szTemp, in_uniTemp, out_vslice_dummy_var_146, out_vslice_dummy_var_149, out_vslice_dummy_var_150, out_vslice_dummy_var_151);
    return;

  anon74_Then:
    assume {:partition} out_ntStatus_34 != 0;
    goto L152;
}



procedure {:LoopProcedure} Avc_UpdateVirtualSubunitInfo_loop_L143(in_Tmp_733: int, in_InstanceID: int, in_uniValueName: int, in_ntStatus_34: int, in_szTemp: int, in_uniTemp: int, in_vslice_dummy_var_146: int, in_vslice_dummy_var_149: int, in_vslice_dummy_var_150: int, in_vslice_dummy_var_151: int) returns (out_Tmp_733: int, out_InstanceID: int, out_ntStatus_34: int, out_vslice_dummy_var_146: int, out_vslice_dummy_var_149: int, out_vslice_dummy_var_150: int, out_vslice_dummy_var_151: int);
  free ensures {:va_keep} out_ntStatus_34 == 0 || out_ntStatus_34 == -1073741823 || out_ntStatus_34 == in_ntStatus_34;
  free ensures {:va_keep} out_vslice_dummy_var_149 == 0 || out_vslice_dummy_var_149 == -1073741823 || out_vslice_dummy_var_149 == in_vslice_dummy_var_149;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_UpdateVirtualSubunitInfo_loop_L53(in_PdoData_5: int, in_SubunitAddr_11: int, in_sdv_462: int, in_sdv_471: int, in_BusExtension_13: int) returns (out_PdoData_5: int, out_sdv_462: int, out_sdv_471: int)
{
  var vslice_dummy_var_2762: int;
  var vslice_dummy_var_2763: int;

  entry:
    out_PdoData_5, out_sdv_462, out_sdv_471 := in_PdoData_5, in_sdv_462, in_sdv_471;
    goto L53, exit;

  exit:
    return;

  L53:
    goto anon58_Else;

  anon58_Else:
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    havoc vslice_dummy_var_2763;
    call {:si_unique_call 2323} out_sdv_471 := AvcSubunitAddrsEqual(in_SubunitAddr_11, vslice_dummy_var_2763);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} out_sdv_471 != 0;
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} in_BusExtension_13 != 0;
    assume in_BusExtension_13 > 0;
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    goto L63;

  L63:
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    havoc out_PdoData_5;
    goto L66;

  L66:
    call {:si_unique_call 2321} out_PdoData_5, out_sdv_462 := Avc_UpdateVirtualSubunitInfo_loop_L66(out_PdoData_5, in_SubunitAddr_11, out_sdv_462, in_BusExtension_13);
    goto L66_last;

  L66_last:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    havoc vslice_dummy_var_2762;
    call {:si_unique_call 2322} out_sdv_462 := AvcSubunitPackedTypesEqual(in_SubunitAddr_11, vslice_dummy_var_2762);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} out_sdv_462 != 0;
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} in_BusExtension_13 != 0;
    assume in_BusExtension_13 > 0;
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    goto L71;

  L71:
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    havoc out_PdoData_5;
    assume false;
    return;

  anon63_Then:
    goto L71;

  anon62_Then:
    assume {:partition} out_sdv_462 == 0;
    goto L71;

  anon61_Then:
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    goto L_BAF_2;

  L_BAF_2:
    call {:si_unique_call 2324} {:si_old_unique_call 1} out_PdoData_5, out_sdv_462, out_sdv_471 := Avc_UpdateVirtualSubunitInfo_loop_L53(out_PdoData_5, in_SubunitAddr_11, out_sdv_462, out_sdv_471, in_BusExtension_13);
    return;

  anon60_Then:
    goto L63;

  anon59_Then:
    assume {:partition} out_sdv_471 == 0;
    assume {:nonnull} out_PdoData_5 != 0;
    assume out_PdoData_5 > 0;
    havoc out_PdoData_5;
    goto anon59_Then_dummy;

  anon59_Then_dummy:
    goto L_BAF_2;
}



procedure {:LoopProcedure} Avc_UpdateVirtualSubunitInfo_loop_L53(in_PdoData_5: int, in_SubunitAddr_11: int, in_sdv_462: int, in_sdv_471: int, in_BusExtension_13: int) returns (out_PdoData_5: int, out_sdv_462: int, out_sdv_471: int);
  free ensures {:va_keep} out_sdv_462 == 1 || out_sdv_462 == 0 || out_sdv_462 == in_sdv_462;
  free ensures {:va_keep} out_sdv_471 == 1 || out_sdv_471 == 0 || out_sdv_471 == in_sdv_471;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_UpdateVirtualSubunitInfo_loop_L36(in_SubunitID_2: int, in_SubunitAddr_11: int, in_ntStatus_34: int, in_MaxSubunitID: int, in_SubunitType_3: int, in_BusExtension_13: int) returns (out_SubunitID_2: int, out_ntStatus_34: int)
{

  entry:
    out_SubunitID_2, out_ntStatus_34 := in_SubunitID_2, in_ntStatus_34;
    goto L36, exit;

  exit:
    return;

  L36:
    assume {:nonnull} in_MaxSubunitID != 0;
    assume in_MaxSubunitID > 0;
    goto anon57_Else;

  anon57_Else:
    call {:si_unique_call 2325} out_ntStatus_34 := AvcPackSubunitAddress(in_SubunitType_3, out_SubunitID_2, 32, in_SubunitAddr_11, 0);
    call {:si_unique_call 2326} Avc_FindOrCreatePDO(in_BusExtension_13, in_SubunitAddr_11, 5);
    out_SubunitID_2 := out_SubunitID_2 + 1;
    goto anon57_Else_dummy;

  anon57_Else_dummy:
    call {:si_unique_call 2327} {:si_old_unique_call 1} out_SubunitID_2, out_ntStatus_34 := Avc_UpdateVirtualSubunitInfo_loop_L36(out_SubunitID_2, in_SubunitAddr_11, out_ntStatus_34, in_MaxSubunitID, in_SubunitType_3, in_BusExtension_13);
    return;
}



procedure {:LoopProcedure} Avc_UpdateVirtualSubunitInfo_loop_L36(in_SubunitID_2: int, in_SubunitAddr_11: int, in_ntStatus_34: int, in_MaxSubunitID: int, in_SubunitType_3: int, in_BusExtension_13: int) returns (out_SubunitID_2: int, out_ntStatus_34: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(irp_status) == 0 ==> irp_status != 1;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 0 ==> lowerDriverFailed != 1;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 2;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 1;
  free ensures {:va_keep} old(return_state) == 0 ==> return_state != 2;
  free ensures {:va_keep} old(thread_status) == 0 ==> thread_status != 1;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> thread_status == old(thread_status);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} out_ntStatus_34 == 0 || out_ntStatus_34 == -1073741811 || out_ntStatus_34 == in_ntStatus_34;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_EnumerateExtrnalChildren_loop_L123(in_Tmp_737: int, in_BytesUsed_6: int, in_SubunitAddrs: int, in_SubunitInfoBytes_2: int, in_Tmp_738: int, in_Tmp_740: int, in_Tmp_741: int, in_ntStatus_35: int, in_StartOffset: int) returns (out_Tmp_737: int, out_SubunitAddrs: int, out_Tmp_738: int, out_Tmp_740: int, out_Tmp_741: int, out_ntStatus_35: int, out_StartOffset: int)
{

  entry:
    out_Tmp_737, out_SubunitAddrs, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_ntStatus_35, out_StartOffset := in_Tmp_737, in_SubunitAddrs, in_Tmp_738, in_Tmp_740, in_Tmp_741, in_ntStatus_35, in_StartOffset;
    goto L123, exit;

  exit:
    return;

  L123:
    assume {:nonnull} in_BytesUsed_6 != 0;
    assume in_BytesUsed_6 > 0;
    out_Tmp_737 := out_StartOffset;
    assume {:nonnull} in_SubunitInfoBytes_2 != 0;
    assume in_SubunitInfoBytes_2 > 0;
    goto anon83_Then;

  anon83_Then:
    out_Tmp_738 := 32 - out_StartOffset;
    out_Tmp_740 := out_StartOffset;
    out_Tmp_741 := in_SubunitInfoBytes_2 + out_Tmp_740 * 4;
    call {:si_unique_call 2328} out_ntStatus_35 := AvcValidateSubunitAddress(out_Tmp_741, out_Tmp_738, in_BytesUsed_6);
    goto anon80_Then;

  anon80_Then:
    assume {:partition} out_ntStatus_35 == 0;
    assume {:nonnull} in_BytesUsed_6 != 0;
    assume in_BytesUsed_6 > 0;
    havoc out_StartOffset;
    out_SubunitAddrs := out_SubunitAddrs + 1;
    goto anon84_Else;

  anon84_Else:
    assume {:partition} INTMOD(out_StartOffset, 4) != 0;
    goto anon84_Else_dummy;

  anon84_Else_dummy:
    call {:si_unique_call 2329} {:si_old_unique_call 1} out_Tmp_737, out_SubunitAddrs, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_ntStatus_35, out_StartOffset := Avc_EnumerateExtrnalChildren_loop_L123(out_Tmp_737, in_BytesUsed_6, out_SubunitAddrs, in_SubunitInfoBytes_2, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_ntStatus_35, out_StartOffset);
    return;
}



procedure {:LoopProcedure} Avc_EnumerateExtrnalChildren_loop_L123(in_Tmp_737: int, in_BytesUsed_6: int, in_SubunitAddrs: int, in_SubunitInfoBytes_2: int, in_Tmp_738: int, in_Tmp_740: int, in_Tmp_741: int, in_ntStatus_35: int, in_StartOffset: int) returns (out_Tmp_737: int, out_SubunitAddrs: int, out_Tmp_738: int, out_Tmp_740: int, out_Tmp_741: int, out_ntStatus_35: int, out_StartOffset: int);
  free ensures {:va_keep} out_ntStatus_35 == 0 || out_ntStatus_35 == -1073741811 || out_ntStatus_35 == in_ntStatus_35;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:SIextraRecBound 2} Avc_EnumerateExtrnalChildren_loop_L107(in_Tmp_737: int, in_MorePages: int, in_BytesUsed_6: int, in_SubunitAddrs: int, in_SubunitInfoBytes_2: int, in_Tmp_738: int, in_Tmp_740: int, in_Tmp_741: int, in_Tmp_742: int, in_ntStatus_35: int, in_Command_21: int, in_Tmp_745: int, in_StartOffset: int, in_Tmp_747: int, in_page: int) returns (out_Tmp_737: int, out_MorePages: int, out_SubunitAddrs: int, out_Tmp_738: int, out_Tmp_740: int, out_Tmp_741: int, out_Tmp_742: int, out_ntStatus_35: int, out_Tmp_745: int, out_StartOffset: int, out_Tmp_747: int, out_page: int)
{
  var vslice_dummy_var_2764: int;

  entry:
    out_Tmp_737, out_MorePages, out_SubunitAddrs, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_Tmp_742, out_ntStatus_35, out_Tmp_745, out_StartOffset, out_Tmp_747, out_page := in_Tmp_737, in_MorePages, in_SubunitAddrs, in_Tmp_738, in_Tmp_740, in_Tmp_741, in_Tmp_742, in_ntStatus_35, in_Tmp_745, in_StartOffset, in_Tmp_747, in_page;
    goto L107, exit;

  exit:
    return;

  L107:
    goto anon76_Else;

  anon76_Else:
    assume {:partition} out_MorePages != 0;
    goto anon77_Else;

  anon77_Else:
    assume {:partition} 8 > out_page;
    goto anon78_Else;

  anon78_Else:
    assume {:partition} 32 > out_StartOffset;
    assume {:nonnull} in_Command_21 != 0;
    assume in_Command_21 > 0;
    havoc vslice_dummy_var_2764;
    call {:si_unique_call 2333} out_ntStatus_35 := AvcReq_SubUnitInfo(vslice_dummy_var_2764, out_page);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} out_ntStatus_35 != 0;
    out_MorePages := 0;
    goto L117;

  L117:
    out_page := out_page + 1;
    goto L117_dummy;

  L117_dummy:
    call {:si_unique_call 2334} {:si_old_unique_call 1} out_Tmp_737, out_MorePages, out_SubunitAddrs, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_Tmp_742, out_ntStatus_35, out_Tmp_745, out_StartOffset, out_Tmp_747, out_page := Avc_EnumerateExtrnalChildren_loop_L107(out_Tmp_737, out_MorePages, in_BytesUsed_6, out_SubunitAddrs, in_SubunitInfoBytes_2, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_Tmp_742, out_ntStatus_35, in_Command_21, out_Tmp_745, out_StartOffset, out_Tmp_747, out_page);
    return;

  anon79_Then:
    assume {:partition} out_ntStatus_35 == 0;
    assume {:nonnull} in_Command_21 != 0;
    assume in_Command_21 > 0;
    havoc out_Tmp_747;
    assume {:nonnull} in_Command_21 != 0;
    assume in_Command_21 > 0;
    havoc out_Tmp_745;
    out_Tmp_742 := out_page * 4;
    call {:si_unique_call 2332} sdv_RtlCopyMemory(0, 0, 4);
    goto L123;

  L123:
    call {:si_unique_call 2331} out_Tmp_737, out_SubunitAddrs, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_ntStatus_35, out_StartOffset := Avc_EnumerateExtrnalChildren_loop_L123(out_Tmp_737, in_BytesUsed_6, out_SubunitAddrs, in_SubunitInfoBytes_2, out_Tmp_738, out_Tmp_740, out_Tmp_741, out_ntStatus_35, out_StartOffset);
    goto L123_last;

  L123_last:
    assume {:nonnull} in_BytesUsed_6 != 0;
    assume in_BytesUsed_6 > 0;
    out_Tmp_737 := out_StartOffset;
    assume {:nonnull} in_SubunitInfoBytes_2 != 0;
    assume in_SubunitInfoBytes_2 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    out_MorePages := 0;
    goto L117;

  anon83_Then:
    out_Tmp_738 := 32 - out_StartOffset;
    out_Tmp_740 := out_StartOffset;
    out_Tmp_741 := in_SubunitInfoBytes_2 + out_Tmp_740 * 4;
    call {:si_unique_call 2330} out_ntStatus_35 := AvcValidateSubunitAddress(out_Tmp_741, out_Tmp_738, in_BytesUsed_6);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} out_ntStatus_35 != 0;
    assume {:nonnull} in_BytesUsed_6 != 0;
    assume in_BytesUsed_6 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    out_MorePages := 0;
    goto L117;

  anon81_Then:
    goto L117;

  anon80_Then:
    assume {:partition} out_ntStatus_35 == 0;
    assume {:nonnull} in_BytesUsed_6 != 0;
    assume in_BytesUsed_6 > 0;
    havoc out_StartOffset;
    out_SubunitAddrs := out_SubunitAddrs + 1;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} INTMOD(out_StartOffset, 4) != 0;
    assume false;
    return;

  anon84_Then:
    assume {:partition} INTMOD(out_StartOffset, 4) == 0;
    goto L117;
}



procedure {:LoopProcedure} Avc_EnumerateExtrnalChildren_loop_L107(in_Tmp_737: int, in_MorePages: int, in_BytesUsed_6: int, in_SubunitAddrs: int, in_SubunitInfoBytes_2: int, in_Tmp_738: int, in_Tmp_740: int, in_Tmp_741: int, in_Tmp_742: int, in_ntStatus_35: int, in_Command_21: int, in_Tmp_745: int, in_StartOffset: int, in_Tmp_747: int, in_page: int) returns (out_Tmp_737: int, out_MorePages: int, out_SubunitAddrs: int, out_Tmp_738: int, out_Tmp_740: int, out_Tmp_741: int, out_Tmp_742: int, out_ntStatus_35: int, out_Tmp_745: int, out_StartOffset: int, out_Tmp_747: int, out_page: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} out_MorePages == 0 || out_MorePages == in_MorePages;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_EnumerateExtrnalChildren_loop_L52(in_SubunitID_3: int, in_SubunitAddr_12: int, in_ntStatus_35: int, in_MaxSubunitID_1: int, in_SubunitType_4: int, in_BusExtension_14: int) returns (out_SubunitID_3: int, out_ntStatus_35: int)
{

  entry:
    out_SubunitID_3, out_ntStatus_35 := in_SubunitID_3, in_ntStatus_35;
    goto L52, exit;

  exit:
    return;

  L52:
    assume {:nonnull} in_MaxSubunitID_1 != 0;
    assume in_MaxSubunitID_1 > 0;
    goto anon67_Else;

  anon67_Else:
    call {:si_unique_call 2335} out_ntStatus_35 := AvcPackSubunitAddress(in_SubunitType_4, out_SubunitID_3, 32, in_SubunitAddr_12, 0);
    call {:si_unique_call 2336} Avc_FindOrCreatePDO(in_BusExtension_14, in_SubunitAddr_12, 3);
    out_SubunitID_3 := out_SubunitID_3 + 1;
    goto anon67_Else_dummy;

  anon67_Else_dummy:
    call {:si_unique_call 2337} {:si_old_unique_call 1} out_SubunitID_3, out_ntStatus_35 := Avc_EnumerateExtrnalChildren_loop_L52(out_SubunitID_3, in_SubunitAddr_12, out_ntStatus_35, in_MaxSubunitID_1, in_SubunitType_4, in_BusExtension_14);
    return;
}



procedure {:LoopProcedure} Avc_EnumerateExtrnalChildren_loop_L52(in_SubunitID_3: int, in_SubunitAddr_12: int, in_ntStatus_35: int, in_MaxSubunitID_1: int, in_SubunitType_4: int, in_BusExtension_14: int) returns (out_SubunitID_3: int, out_ntStatus_35: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} out_ntStatus_35 == 0 || out_ntStatus_35 == -1073741811 || out_ntStatus_35 == in_ntStatus_35;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_EnumerateExtrnalChildren_loop_L30(in_SubunitID_3: int, in_SubunitAddr_12: int, in_SubunitAddrs: int, in_SubunitInfoBytes_2: int, in_Tmp_739: int, in_ntStatus_35: int, in_Tmp_743: int, in_MaxSubunitID_1: int, in_SubunitType_4: int, in_BytesUsed_7: int, in_HasSingleCameraSubunit: int, in_HasSingleTapeSubunit: int, in_StartOffset: int, in_BusExtension_14: int) returns (out_SubunitID_3: int, out_SubunitAddrs: int, out_Tmp_739: int, out_ntStatus_35: int, out_Tmp_743: int, out_HasSingleCameraSubunit: int, out_HasSingleTapeSubunit: int, out_StartOffset: int)
{

  entry:
    out_SubunitID_3, out_SubunitAddrs, out_Tmp_739, out_ntStatus_35, out_Tmp_743, out_HasSingleCameraSubunit, out_HasSingleTapeSubunit, out_StartOffset := in_SubunitID_3, in_SubunitAddrs, in_Tmp_739, in_ntStatus_35, in_Tmp_743, in_HasSingleCameraSubunit, in_HasSingleTapeSubunit, in_StartOffset;
    goto L30, exit;

  exit:
    return;

  L30:
    goto anon60_Else;

  anon60_Else:
    assume {:partition} out_SubunitAddrs != 0;
    out_Tmp_743 := out_StartOffset;
    out_Tmp_739 := in_SubunitInfoBytes_2 + out_Tmp_743 * 4;
    call {:si_unique_call 2338} out_ntStatus_35 := AvcUnpackSubunitAddress(out_Tmp_739, in_SubunitType_4, in_MaxSubunitID_1, in_BytesUsed_7);
    goto anon62_Else;

  anon62_Else:
    assume {:partition} out_ntStatus_35 == 0;
    assume {:nonnull} in_SubunitType_4 != 0;
    assume in_SubunitType_4 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} in_MaxSubunitID_1 != 0;
    assume in_MaxSubunitID_1 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    out_HasSingleTapeSubunit := 1;
    goto L46;

  L46:
    assume {:nonnull} in_BytesUsed_7 != 0;
    assume in_BytesUsed_7 > 0;
    havoc out_StartOffset;
    out_SubunitAddrs := out_SubunitAddrs - 1;
    goto L46_dummy;

  L46_dummy:
    call {:si_unique_call 2342} {:si_old_unique_call 1} out_SubunitID_3, out_SubunitAddrs, out_Tmp_739, out_ntStatus_35, out_Tmp_743, out_HasSingleCameraSubunit, out_HasSingleTapeSubunit, out_StartOffset := Avc_EnumerateExtrnalChildren_loop_L30(out_SubunitID_3, in_SubunitAddr_12, out_SubunitAddrs, in_SubunitInfoBytes_2, out_Tmp_739, out_ntStatus_35, out_Tmp_743, in_MaxSubunitID_1, in_SubunitType_4, in_BytesUsed_7, out_HasSingleCameraSubunit, out_HasSingleTapeSubunit, out_StartOffset, in_BusExtension_14);
    return;

  anon65_Then:
    goto L43;

  L43:
    assume {:nonnull} in_SubunitType_4 != 0;
    assume in_SubunitType_4 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L51;

  L51:
    out_SubunitID_3 := 0;
    goto L52;

  L52:
    call {:si_unique_call 2339} out_SubunitID_3, out_ntStatus_35 := Avc_EnumerateExtrnalChildren_loop_L52(out_SubunitID_3, in_SubunitAddr_12, out_ntStatus_35, in_MaxSubunitID_1, in_SubunitType_4, in_BusExtension_14);
    goto L52_last;

  L52_last:
    assume {:nonnull} in_MaxSubunitID_1 != 0;
    assume in_MaxSubunitID_1 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    call {:si_unique_call 2340} out_ntStatus_35 := AvcPackSubunitAddress(in_SubunitType_4, out_SubunitID_3, 32, in_SubunitAddr_12, 0);
    call {:si_unique_call 2341} Avc_FindOrCreatePDO(in_BusExtension_14, in_SubunitAddr_12, 3);
    out_SubunitID_3 := out_SubunitID_3 + 1;
    assume false;
    return;

  anon67_Then:
    goto L46;

  anon64_Then:
    assume {:nonnull} in_MaxSubunitID_1 != 0;
    assume in_MaxSubunitID_1 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L51;

  anon66_Then:
    out_HasSingleCameraSubunit := 1;
    goto L46;

  anon63_Then:
    goto L43;
}



procedure {:LoopProcedure} Avc_EnumerateExtrnalChildren_loop_L30(in_SubunitID_3: int, in_SubunitAddr_12: int, in_SubunitAddrs: int, in_SubunitInfoBytes_2: int, in_Tmp_739: int, in_ntStatus_35: int, in_Tmp_743: int, in_MaxSubunitID_1: int, in_SubunitType_4: int, in_BytesUsed_7: int, in_HasSingleCameraSubunit: int, in_HasSingleTapeSubunit: int, in_StartOffset: int, in_BusExtension_14: int) returns (out_SubunitID_3: int, out_SubunitAddrs: int, out_Tmp_739: int, out_ntStatus_35: int, out_Tmp_743: int, out_HasSingleCameraSubunit: int, out_HasSingleTapeSubunit: int, out_StartOffset: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} out_ntStatus_35 == 0 || out_ntStatus_35 == -1073741811 || out_ntStatus_35 == in_ntStatus_35;
  free ensures {:va_keep} out_HasSingleCameraSubunit == 1 || out_HasSingleCameraSubunit == in_HasSingleCameraSubunit;
  free ensures {:va_keep} out_HasSingleTapeSubunit == 1 || out_HasSingleTapeSubunit == in_HasSingleTapeSubunit;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_EnumerateExtrnalChildren_loop_L91(in_PdoData_6: int) returns (out_PdoData_6: int)
{

  entry:
    out_PdoData_6 := in_PdoData_6;
    goto L91, exit;

  exit:
    return;

  L91:
    goto anon74_Else;

  anon74_Else:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    goto L96;

  L96:
    assume {:nonnull} out_PdoData_6 != 0;
    assume out_PdoData_6 > 0;
    havoc out_PdoData_6;
    goto L96_dummy;

  L96_dummy:
    call {:si_unique_call 2343} {:si_old_unique_call 1} out_PdoData_6 := Avc_EnumerateExtrnalChildren_loop_L91(out_PdoData_6);
    return;

  anon75_Then:
    goto L96;
}



procedure {:LoopProcedure} Avc_EnumerateExtrnalChildren_loop_L91(in_PdoData_6: int) returns (out_PdoData_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_BuildIds_loop_L441(in_Tmp_780: int, in_SubunitAddrLen_1: int, in_Tmp_796: int, in_Tmp_798: int, in_idx_15: int, in_SubunitType_5: int, in_Tmp_807: int, in_vslice_dummy_var_188: int, in_vslice_dummy_var_189: int, in_vslice_dummy_var_259: int, in_vslice_dummy_var_260: int, in_vslice_dummy_var_261: int) returns (out_Tmp_780: int, out_Tmp_796: int, out_Tmp_798: int, out_idx_15: int, out_Tmp_807: int, out_vslice_dummy_var_188: int, out_vslice_dummy_var_189: int, out_vslice_dummy_var_259: int, out_vslice_dummy_var_260: int, out_vslice_dummy_var_261: int)
{

  entry:
    out_Tmp_780, out_Tmp_796, out_Tmp_798, out_idx_15, out_Tmp_807, out_vslice_dummy_var_188, out_vslice_dummy_var_189, out_vslice_dummy_var_259, out_vslice_dummy_var_260, out_vslice_dummy_var_261 := in_Tmp_780, in_Tmp_796, in_Tmp_798, in_idx_15, in_Tmp_807, in_vslice_dummy_var_188, in_vslice_dummy_var_189, in_vslice_dummy_var_259, in_vslice_dummy_var_260, in_vslice_dummy_var_261;
    goto L441, exit;

  exit:
    return;

  L441:
    assume {:nonnull} in_SubunitAddrLen_1 != 0;
    assume in_SubunitAddrLen_1 > 0;
    goto anon190_Else;

  anon190_Else:
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} out_idx_15 != 0;
    call {:si_unique_call 2344} out_Tmp_780 := corral_nondet();
    call {:si_unique_call 2345} out_vslice_dummy_var_259 := RtlIntegerToUnicodeString(out_Tmp_780, 16, 0);
    call {:si_unique_call 2346} out_vslice_dummy_var_188 := corral_nondet();
    out_Tmp_798 := out_idx_15;
    assume {:nonnull} in_SubunitType_5 != 0;
    assume in_SubunitType_5 > 0;
    havoc out_Tmp_807;
    call {:si_unique_call 2347} out_vslice_dummy_var_260 := RtlIntegerToUnicodeString(out_Tmp_807, 16, 0);
    call {:si_unique_call 2348} out_vslice_dummy_var_189 := corral_nondet();
    goto L461;

  L461:
    out_idx_15 := out_idx_15 + 1;
    goto L461_dummy;

  L461_dummy:
    havoc out_idx_15;
    return;

  anon191_Then:
    assume {:partition} out_idx_15 == 0;
    assume {:nonnull} in_SubunitType_5 != 0;
    assume in_SubunitType_5 > 0;
    havoc out_Tmp_796;
    call {:si_unique_call 2349} out_vslice_dummy_var_261 := RtlIntegerToUnicodeString(out_Tmp_796, 16, 0);
    goto L461;
}



procedure {:LoopProcedure} Avc_BuildIds_loop_L441(in_Tmp_780: int, in_SubunitAddrLen_1: int, in_Tmp_796: int, in_Tmp_798: int, in_idx_15: int, in_SubunitType_5: int, in_Tmp_807: int, in_vslice_dummy_var_188: int, in_vslice_dummy_var_189: int, in_vslice_dummy_var_259: int, in_vslice_dummy_var_260: int, in_vslice_dummy_var_261: int) returns (out_Tmp_780: int, out_Tmp_796: int, out_Tmp_798: int, out_idx_15: int, out_Tmp_807: int, out_vslice_dummy_var_188: int, out_vslice_dummy_var_189: int, out_vslice_dummy_var_259: int, out_vslice_dummy_var_260: int, out_vslice_dummy_var_261: int);
  free ensures {:va_keep} out_Tmp_798 == in_idx_15 || out_Tmp_798 == in_Tmp_798;
  free ensures {:va_keep} out_vslice_dummy_var_259 == 0 || out_vslice_dummy_var_259 == -1073741823 || out_vslice_dummy_var_259 == in_vslice_dummy_var_259;
  free ensures {:va_keep} out_vslice_dummy_var_260 == 0 || out_vslice_dummy_var_260 == -1073741823 || out_vslice_dummy_var_260 == in_vslice_dummy_var_260;
  free ensures {:va_keep} out_vslice_dummy_var_261 == 0 || out_vslice_dummy_var_261 == -1073741823 || out_vslice_dummy_var_261 == in_vslice_dummy_var_261;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_FindOrCreatePDO_loop_L13(in_PdoData_9: int, in_sdv_584: int, in_Entry_11: int, in_SubunitAddr_16: int) returns (out_PdoData_9: int, out_sdv_584: int, out_Entry_11: int)
{
  var vslice_dummy_var_2765: int;

  entry:
    out_PdoData_9, out_sdv_584, out_Entry_11 := in_PdoData_9, in_sdv_584, in_Entry_11;
    goto L13, exit;

  exit:
    return;

  L13:
    goto anon41_Else;

  anon41_Else:
    out_PdoData_9 := out_Entry_11;
    assume {:nonnull} out_PdoData_9 != 0;
    assume out_PdoData_9 > 0;
    havoc vslice_dummy_var_2765;
    call {:si_unique_call 2350} out_sdv_584 := AvcSubunitAddrsEqual(in_SubunitAddr_16, vslice_dummy_var_2765);
    goto anon43_Else;

  anon43_Else:
    assume {:partition} out_sdv_584 == 0;
    out_PdoData_9 := 0;
    assume {:nonnull} out_Entry_11 != 0;
    assume out_Entry_11 > 0;
    havoc out_Entry_11;
    goto anon43_Else_dummy;

  anon43_Else_dummy:
    call {:si_unique_call 2351} {:si_old_unique_call 1} out_PdoData_9, out_sdv_584, out_Entry_11 := Avc_FindOrCreatePDO_loop_L13(out_PdoData_9, out_sdv_584, out_Entry_11, in_SubunitAddr_16);
    return;
}



procedure {:LoopProcedure} Avc_FindOrCreatePDO_loop_L13(in_PdoData_9: int, in_sdv_584: int, in_Entry_11: int, in_SubunitAddr_16: int) returns (out_PdoData_9: int, out_sdv_584: int, out_Entry_11: int);
  free ensures {:va_keep} out_PdoData_9 == 0 || out_PdoData_9 == in_PdoData_9;
  free ensures {:va_keep} out_sdv_584 == 1 || out_sdv_584 == 0 || out_sdv_584 == in_sdv_584;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_FDO_Pnp_loop_L52(in_PdoData_10: int, in_BusExtension_21: int, in_Next: int) returns (out_PdoData_10: int, out_Next: int)
{

  entry:
    out_PdoData_10, out_Next := in_PdoData_10, in_Next;
    goto L52, exit;

  exit:
    return;

  L52:
    goto anon94_Else;

  anon94_Else:
    out_PdoData_10 := out_Next;
    assume {:nonnull} out_Next != 0;
    assume out_Next > 0;
    havoc out_Next;
    call {:si_unique_call 2352} AvcRemoveFromPdoList(in_BusExtension_21, out_PdoData_10);
    assume {:nonnull} out_PdoData_10 != 0;
    assume out_PdoData_10 > 0;
    assume {:nonnull} out_PdoData_10 != 0;
    assume out_PdoData_10 > 0;
    goto anon94_Else_dummy;

  anon94_Else_dummy:
    call {:si_unique_call 2353} {:si_old_unique_call 1} out_PdoData_10, out_Next := Avc_FDO_Pnp_loop_L52(out_PdoData_10, in_BusExtension_21, out_Next);
    return;
}



procedure {:LoopProcedure} Avc_FDO_Pnp_loop_L52(in_PdoData_10: int, in_BusExtension_21: int, in_Next: int) returns (out_PdoData_10: int, out_Next: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_FDO_Pnp_loop_L144(in_Relations: int, in_cObjects: int, in_Tmp_847: int, in_Tmp_850: int, in_Tmp_857: int, in_Tmp_858: int, in_PdoData_12: int, in_vslice_dummy_var_276: int) returns (out_cObjects: int, out_Tmp_847: int, out_Tmp_850: int, out_Tmp_857: int, out_Tmp_858: int, out_PdoData_12: int, out_vslice_dummy_var_276: int)
{

  entry:
    out_cObjects, out_Tmp_847, out_Tmp_850, out_Tmp_857, out_Tmp_858, out_PdoData_12, out_vslice_dummy_var_276 := in_cObjects, in_Tmp_847, in_Tmp_850, in_Tmp_857, in_Tmp_858, in_PdoData_12, in_vslice_dummy_var_276;
    goto L144, exit;

  exit:
    return;

  L144:
    goto anon104_Else;

  anon104_Else:
    assume {:nonnull} out_PdoData_12 != 0;
    assume out_PdoData_12 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} out_PdoData_12 != 0;
    assume out_PdoData_12 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    out_Tmp_850 := out_cObjects;
    assume {:nonnull} in_Relations != 0;
    assume in_Relations > 0;
    havoc out_Tmp_847;
    assume {:nonnull} out_PdoData_12 != 0;
    assume out_PdoData_12 > 0;
    assume {:nonnull} out_Tmp_847 != 0;
    assume out_Tmp_847 > 0;
    out_Tmp_857 := out_cObjects;
    assume {:nonnull} in_Relations != 0;
    assume in_Relations > 0;
    havoc out_Tmp_858;
    assume {:nonnull} out_Tmp_858 != 0;
    assume out_Tmp_858 > 0;
    call {:si_unique_call 2354} out_vslice_dummy_var_276 := sdv_ObReferenceObject(0);
    out_cObjects := out_cObjects + 1;
    goto L147;

  L147:
    assume {:nonnull} out_PdoData_12 != 0;
    assume out_PdoData_12 > 0;
    havoc out_PdoData_12;
    goto L147_dummy;

  L147_dummy:
    call {:si_unique_call 2355} {:si_old_unique_call 1} out_cObjects, out_Tmp_847, out_Tmp_850, out_Tmp_857, out_Tmp_858, out_PdoData_12, out_vslice_dummy_var_276 := Avc_FDO_Pnp_loop_L144(in_Relations, out_cObjects, out_Tmp_847, out_Tmp_850, out_Tmp_857, out_Tmp_858, out_PdoData_12, out_vslice_dummy_var_276);
    return;

  anon106_Then:
    goto L147;

  anon105_Then:
    goto L147;
}



procedure {:LoopProcedure} Avc_FDO_Pnp_loop_L144(in_Relations: int, in_cObjects: int, in_Tmp_847: int, in_Tmp_850: int, in_Tmp_857: int, in_Tmp_858: int, in_PdoData_12: int, in_vslice_dummy_var_276: int) returns (out_cObjects: int, out_Tmp_847: int, out_Tmp_850: int, out_Tmp_857: int, out_Tmp_858: int, out_PdoData_12: int, out_vslice_dummy_var_276: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_FDO_Pnp_loop_L140(in_Relations: int, in_Tmp_844: int, in_cObjects: int, in_cIncomingObjects: int, in_Tmp_851: int, in_Tmp_854: int, in_Tmp_856: int, in_OldRelations: int) returns (out_Tmp_844: int, out_cObjects: int, out_Tmp_851: int, out_Tmp_854: int, out_Tmp_856: int)
{

  entry:
    out_Tmp_844, out_cObjects, out_Tmp_851, out_Tmp_854, out_Tmp_856 := in_Tmp_844, in_cObjects, in_Tmp_851, in_Tmp_854, in_Tmp_856;
    goto L140, exit;

  exit:
    return;

  L140:
    goto anon103_Else;

  anon103_Else:
    assume {:partition} in_cIncomingObjects > out_cObjects;
    out_Tmp_854 := out_cObjects;
    assume {:nonnull} in_Relations != 0;
    assume in_Relations > 0;
    havoc out_Tmp_856;
    out_Tmp_844 := out_cObjects;
    assume {:nonnull} in_OldRelations != 0;
    assume in_OldRelations > 0;
    havoc out_Tmp_851;
    assume {:nonnull} out_Tmp_851 != 0;
    assume out_Tmp_851 > 0;
    assume {:nonnull} out_Tmp_856 != 0;
    assume out_Tmp_856 > 0;
    out_cObjects := out_cObjects + 1;
    goto anon103_Else_dummy;

  anon103_Else_dummy:
    call {:si_unique_call 2356} {:si_old_unique_call 1} out_Tmp_844, out_cObjects, out_Tmp_851, out_Tmp_854, out_Tmp_856 := Avc_FDO_Pnp_loop_L140(in_Relations, out_Tmp_844, out_cObjects, in_cIncomingObjects, out_Tmp_851, out_Tmp_854, out_Tmp_856, in_OldRelations);
    return;
}



procedure {:LoopProcedure} Avc_FDO_Pnp_loop_L140(in_Relations: int, in_Tmp_844: int, in_cObjects: int, in_cIncomingObjects: int, in_Tmp_851: int, in_Tmp_854: int, in_Tmp_856: int, in_OldRelations: int) returns (out_Tmp_844: int, out_cObjects: int, out_Tmp_851: int, out_Tmp_854: int, out_Tmp_856: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_FDO_Pnp_loop_L121(in_cObjects: int, in_PdoData_12: int) returns (out_cObjects: int, out_PdoData_12: int)
{

  entry:
    out_cObjects, out_PdoData_12 := in_cObjects, in_PdoData_12;
    goto L121, exit;

  exit:
    return;

  L121:
    goto anon101_Else;

  anon101_Else:
    assume {:nonnull} out_PdoData_12 != 0;
    assume out_PdoData_12 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    out_cObjects := out_cObjects + 1;
    goto L124;

  L124:
    assume {:nonnull} out_PdoData_12 != 0;
    assume out_PdoData_12 > 0;
    havoc out_PdoData_12;
    goto L124_dummy;

  L124_dummy:
    call {:si_unique_call 2357} {:si_old_unique_call 1} out_cObjects, out_PdoData_12 := Avc_FDO_Pnp_loop_L121(out_cObjects, out_PdoData_12);
    return;

  anon102_Then:
    goto L124;
}



procedure {:LoopProcedure} Avc_FDO_Pnp_loop_L121(in_cObjects: int, in_PdoData_12: int) returns (out_cObjects: int, out_PdoData_12: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_FDO_Pnp_loop_L182(in_PdoData_11: int, in_sdv_606: int, in_PdoExtension_7: int, in_sdv_612: int, in_BusExtension_21: int, in_Tmp_859: int) returns (out_PdoData_11: int, out_sdv_606: int, out_PdoExtension_7: int, out_sdv_612: int, out_Tmp_859: int)
{

  entry:
    out_PdoData_11, out_sdv_606, out_PdoExtension_7, out_sdv_612, out_Tmp_859 := in_PdoData_11, in_sdv_606, in_PdoExtension_7, in_sdv_612, in_Tmp_859;
    goto L182, exit;

  exit:
    return;

  L182:
    call {:si_unique_call 2358} out_sdv_606 := sdv_IsListEmpty(0);
    goto anon107_Else;

  anon107_Else:
    assume {:partition} out_sdv_606 == 0;
    assume {:nonnull} in_BusExtension_21 != 0;
    assume in_BusExtension_21 > 0;
    call {:si_unique_call 2366} out_sdv_612 := RemoveHeadList(PdoList__BUS_DEVICE_EXTENSION(in_BusExtension_21));
    out_PdoData_11 := out_sdv_612;
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    havoc out_Tmp_859;
    assume {:nonnull} out_Tmp_859 != 0;
    assume out_Tmp_859 > 0;
    havoc out_PdoExtension_7;
    assume {:nonnull} out_PdoExtension_7 != 0;
    assume out_PdoExtension_7 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    call {:si_unique_call 2365} RemoveConnectionMgr(out_PdoData_11);
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    call {:si_unique_call 2364} sdv_ExFreePool(0);
    goto L229;

  L229:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    call {:si_unique_call 2363} sdv_ExFreePool(0);
    goto L233;

  L233:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    call {:si_unique_call 2362} sdv_ExFreePool(0);
    goto L237;

  L237:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    call {:si_unique_call 2361} sdv_ExFreePool(0);
    goto L241;

  L241:
    call {:si_unique_call 2359} sdv_ExFreePool(0);
    assume {:nonnull} out_PdoExtension_7 != 0;
    assume out_PdoExtension_7 > 0;
    call {:si_unique_call 2360} IoDeleteDevice(0);
    goto L241_dummy;

  L241_dummy:
    goto L_BAF_3;

  L_BAF_3:
    call {:si_unique_call 2368} {:si_old_unique_call 1} out_PdoData_11, out_sdv_606, out_PdoExtension_7, out_sdv_612, out_Tmp_859 := Avc_FDO_Pnp_loop_L182(out_PdoData_11, out_sdv_606, out_PdoExtension_7, out_sdv_612, in_BusExtension_21, out_Tmp_859);
    return;

  anon112_Then:
    goto L241;

  anon111_Then:
    goto L237;

  anon110_Then:
    goto L233;

  anon109_Then:
    goto L229;

  anon134_Then:
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    call {:si_unique_call 2367} InitializeListHead(PdoList__PDO_DATA(out_PdoData_11));
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    assume {:nonnull} out_PdoData_11 != 0;
    assume out_PdoData_11 > 0;
    goto anon134_Then_dummy;

  anon134_Then_dummy:
    goto L_BAF_3;
}



procedure {:LoopProcedure} Avc_FDO_Pnp_loop_L182(in_PdoData_11: int, in_sdv_606: int, in_PdoExtension_7: int, in_sdv_612: int, in_BusExtension_21: int, in_Tmp_859: int) returns (out_PdoData_11: int, out_sdv_606: int, out_PdoExtension_7: int, out_sdv_612: int, out_Tmp_859: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_606 == 1 || out_sdv_606 == 0 || out_sdv_606 == in_sdv_606;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation RtlLargeIntegerToUnicodeString_loop_L29(in_Value_1: int, in_Mask: int, in_Tmp_863: int, in_ptr: int, in_Tmp_866: int) returns (out_Value_1: int, out_Tmp_863: int, out_Tmp_866: int)
{

  entry:
    out_Value_1, out_Tmp_863, out_Tmp_866 := in_Value_1, in_Tmp_863, in_Tmp_866;
    goto L29, exit;

  exit:
    return;

  L29:
    out_Tmp_863 := BAND(out_Value_1, in_Mask);
    out_Tmp_866 := out_Tmp_863;
    assume {:nonnull} in_ptr != 0;
    assume in_ptr > 0;
    call {:si_unique_call 2369} out_Value_1 := corral_nondet();
    goto anon33_Then;

  anon33_Then:
    assume {:partition} out_Value_1 != 0;
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    call {:si_unique_call 2370} {:si_old_unique_call 1} out_Value_1, out_Tmp_863, out_Tmp_866 := RtlLargeIntegerToUnicodeString_loop_L29(out_Value_1, in_Mask, out_Tmp_863, in_ptr, out_Tmp_866);
    return;
}



procedure {:LoopProcedure} RtlLargeIntegerToUnicodeString_loop_L29(in_Value_1: int, in_Mask: int, in_Tmp_863: int, in_ptr: int, in_Tmp_866: int) returns (out_Value_1: int, out_Tmp_863: int, out_Tmp_866: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation RtlLargeIntegerToUnicodeString_loop_L47(in_Tmp_862: int, in_Value_1: int, in_Tmp_865: int, in_ptr: int) returns (out_Tmp_862: int, out_Value_1: int, out_Tmp_865: int)
{

  entry:
    out_Tmp_862, out_Value_1, out_Tmp_865 := in_Tmp_862, in_Value_1, in_Tmp_865;
    goto L47, exit;

  exit:
    return;

  L47:
    out_Tmp_862 := INTMOD(out_Value_1, 10);
    out_Tmp_865 := out_Tmp_862;
    assume {:nonnull} in_ptr != 0;
    assume in_ptr > 0;
    out_Value_1 := INTDIV(out_Value_1, 10);
    goto anon31_Then;

  anon31_Then:
    assume {:partition} out_Value_1 != 0;
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    call {:si_unique_call 2371} {:si_old_unique_call 1} out_Tmp_862, out_Value_1, out_Tmp_865 := RtlLargeIntegerToUnicodeString_loop_L47(out_Tmp_862, out_Value_1, out_Tmp_865, in_ptr);
    return;
}



procedure {:LoopProcedure} RtlLargeIntegerToUnicodeString_loop_L47(in_Tmp_862: int, in_Value_1: int, in_Tmp_865: int, in_ptr: int) returns (out_Tmp_862: int, out_Value_1: int, out_Tmp_865: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcRobustStatusRequest_loop_L13(in_Retries_1: int, in_ntStatus_47: int, in_tmDelay_1: int, in_Command_26: int, in_vslice_dummy_var_278: int) returns (out_Retries_1: int, out_ntStatus_47: int, out_vslice_dummy_var_278: int)
{

  entry:
    out_Retries_1, out_ntStatus_47, out_vslice_dummy_var_278 := in_Retries_1, in_ntStatus_47, in_vslice_dummy_var_278;
    goto L13, exit;

  exit:
    return;

  L13:
    assume {:CounterLoop 10} {:Counter "Retries_1"} true;
    goto anon21_Else;

  anon21_Else:
    assume {:partition} 10 > out_Retries_1;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} out_Retries_1 != 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} out_ntStatus_47 != 258;
    call {:si_unique_call 2373} out_vslice_dummy_var_278 := KeDelayExecutionThread(0, 0, 0);
    goto L16;

  L16:
    call {:si_unique_call 2372} out_ntStatus_47 := AvcStatus(in_Command_26);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} out_ntStatus_47 != 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} out_ntStatus_47 != -1073741435;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} out_ntStatus_47 != -1073741668;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} out_ntStatus_47 != -1073741643;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_ntStatus_47 != -1073741248;
    goto anon30_Else;

  anon30_Else:
    assume {:partition} out_ntStatus_47 == 258;
    goto L27;

  L27:
    assume {:nonnull} in_tmDelay_1 != 0;
    assume in_tmDelay_1 > 0;
    goto L33;

  L33:
    out_Retries_1 := out_Retries_1 + 1;
    goto L33_dummy;

  L33_dummy:
    call {:si_unique_call 2374} {:si_old_unique_call 1} out_Retries_1, out_ntStatus_47, out_vslice_dummy_var_278 := AvcRobustStatusRequest_loop_L13(out_Retries_1, out_ntStatus_47, in_tmDelay_1, in_Command_26, out_vslice_dummy_var_278);
    return;

  anon29_Then:
    assume {:partition} out_ntStatus_47 == -1073741248;
    goto L27;

  anon28_Then:
    assume {:partition} out_ntStatus_47 == -1073741643;
    goto L27;

  anon27_Then:
    assume {:partition} out_ntStatus_47 == -1073741668;
    goto L27;

  anon26_Then:
    assume {:partition} out_ntStatus_47 == -1073741435;
    goto L27;

  anon24_Then:
    assume {:partition} out_ntStatus_47 == 0;
    assume {:nonnull} in_Command_26 != 0;
    assume in_Command_26 > 0;
    goto anon25_Else;

  anon25_Else:
    assume {:nonnull} in_tmDelay_1 != 0;
    assume in_tmDelay_1 > 0;
    goto L33;

  anon23_Then:
    assume {:partition} out_ntStatus_47 == 258;
    goto L16;

  anon22_Then:
    assume {:partition} out_Retries_1 == 0;
    goto L16;
}



procedure {:LoopProcedure} AvcRobustStatusRequest_loop_L13(in_Retries_1: int, in_ntStatus_47: int, in_tmDelay_1: int, in_Command_26: int, in_vslice_dummy_var_278: int) returns (out_Retries_1: int, out_ntStatus_47: int, out_vslice_dummy_var_278: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP, Mem_T.CompletionRoutine__IO_STACK_LOCATION, sdv_compFset, thread_status, irp_status, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, return_state, lowerDriverFailed;
  free ensures {:va_keep} old(irp_status) == 1 ==> irp_status != 0;
  free ensures {:va_keep} old(lowerDriverFailed) == 1 ==> lowerDriverFailed != 0;
  free ensures {:va_keep} old(return_state) == 1 ==> return_state != 0;
  free ensures {:va_keep} old(return_state) == 2 ==> return_state != 0;
  free ensures {:va_keep} old(thread_status) == 1 ==> thread_status != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> irp_status == old(irp_status);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> return_state == old(return_state);
  free ensures {:va_keep} return_state == 1 || return_state == 2 || return_state == old(return_state);
  free ensures {:va_keep} thread_status == 0 || thread_status == 1 || thread_status == old(thread_status);
  free ensures {:va_keep} lowerDriverFailed == 1 || lowerDriverFailed == old(lowerDriverFailed);
  free ensures {:va_keep} irp_status == 1 || irp_status == old(irp_status);
  free ensures {:va_keep} out_vslice_dummy_var_278 == 0 || out_vslice_dummy_var_278 == -1073741823 || out_vslice_dummy_var_278 == in_vslice_dummy_var_278;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_RemoveVirtualSubunitInfo_loop_L36(in_PdoData_16: int, in_SubunitInfoBytes_3: int, in_sdv_653: int, in_Entry_12: int, in_BusExtension_24: int) returns (out_PdoData_16: int, out_sdv_653: int, out_Entry_12: int)
{
  var vslice_dummy_var_2766: int;

  entry:
    out_PdoData_16, out_sdv_653, out_Entry_12 := in_PdoData_16, in_sdv_653, in_Entry_12;
    goto L36, exit;

  exit:
    return;

  L36:
    goto anon36_Else;

  anon36_Else:
    out_PdoData_16 := out_Entry_12;
    assume {:nonnull} out_PdoData_16 != 0;
    assume out_PdoData_16 > 0;
    havoc vslice_dummy_var_2766;
    call {:si_unique_call 2375} out_sdv_653 := AvcSubunitPackedTypesEqual(in_SubunitInfoBytes_3, vslice_dummy_var_2766);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} out_sdv_653 != 0;
    assume {:nonnull} out_PdoData_16 != 0;
    assume out_PdoData_16 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} in_BusExtension_24 != 0;
    assume in_BusExtension_24 > 0;
    assume {:nonnull} out_PdoData_16 != 0;
    assume out_PdoData_16 > 0;
    goto L45;

  L45:
    assume {:nonnull} out_Entry_12 != 0;
    assume out_Entry_12 > 0;
    havoc out_Entry_12;
    goto L45_dummy;

  L45_dummy:
    call {:si_unique_call 2376} {:si_old_unique_call 1} out_PdoData_16, out_sdv_653, out_Entry_12 := Avc_RemoveVirtualSubunitInfo_loop_L36(out_PdoData_16, in_SubunitInfoBytes_3, out_sdv_653, out_Entry_12, in_BusExtension_24);
    return;

  anon38_Then:
    goto L45;

  anon37_Then:
    assume {:partition} out_sdv_653 == 0;
    goto L45;
}



procedure {:LoopProcedure} Avc_RemoveVirtualSubunitInfo_loop_L36(in_PdoData_16: int, in_SubunitInfoBytes_3: int, in_sdv_653: int, in_Entry_12: int, in_BusExtension_24: int) returns (out_PdoData_16: int, out_sdv_653: int, out_Entry_12: int);
  free ensures {:va_keep} out_sdv_653 == 1 || out_sdv_653 == 0 || out_sdv_653 == in_sdv_653;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation sdv_hash_672547288_loop_L4(in_s_p_e_c_i_a_l_9: int, in_s_p_e_c_i_a_l_11: int, in_s_p_e_c_i_a_l_12: int) returns (out_s_p_e_c_i_a_l_11: int)
{

  entry:
    out_s_p_e_c_i_a_l_11 := in_s_p_e_c_i_a_l_11;
    goto L4, exit;

  exit:
    return;

  L4:
    out_s_p_e_c_i_a_l_11 := out_s_p_e_c_i_a_l_11 - 1;
    goto anon3_Else;

  anon3_Else:
    assume {:partition} out_s_p_e_c_i_a_l_11 >= 0;
    assume {:IndirectCall} true;
    assume in_s_p_e_c_i_a_l_12 == li2bplFunctionConstant374;
    call {:si_unique_call 2377} sdv_hash_330311584_sdv_special_DTOR(in_s_p_e_c_i_a_l_9);
    goto anon3_Else_dummy;

  anon3_Else_dummy:
    havoc out_s_p_e_c_i_a_l_11;
    return;
}



procedure {:LoopProcedure} sdv_hash_672547288_loop_L4(in_s_p_e_c_i_a_l_9: int, in_s_p_e_c_i_a_l_11: int, in_s_p_e_c_i_a_l_12: int) returns (out_s_p_e_c_i_a_l_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_BusResetCallback_sdv_static_function_5#0_loop_L70(in_Command_23: int, in_sdv_578: int, in_OldIrql_15: int, in_sdv_580: int, in_BusExtension_18: int, in_Tmp_826: int) returns (out_Command_23: int, out_sdv_578: int, out_OldIrql_15: int, out_sdv_580: int, out_Tmp_826: int)
{

  entry:
    out_Command_23, out_sdv_578, out_OldIrql_15, out_sdv_580, out_Tmp_826 := in_Command_23, in_sdv_578, in_OldIrql_15, in_sdv_580, in_Tmp_826;
    goto L70, exit;

  exit:
    return;

  L70:
    call {:si_unique_call 2378} out_sdv_578 := sdv_IsListEmpty(0);
    goto anon32_Else;

  anon32_Else:
    assume {:partition} out_sdv_578 == 0;
    assume {:nonnull} in_BusExtension_18 != 0;
    assume in_BusExtension_18 > 0;
    call {:si_unique_call 2379} out_sdv_580 := RemoveHeadList(CleanupList__BUS_DEVICE_EXTENSION(in_BusExtension_18));
    out_Command_23 := out_sdv_580;
    call {:si_unique_call 2380} InitializeListHead(out_Command_23);
    call {:si_unique_call 2381} sdv_KeReleaseSpinLock(0, out_OldIrql_15);
    call {:si_unique_call 2382} AvcPendingIrpCompletion(out_Command_23);
    call {:si_unique_call 2383} AvcFreeCommandContext(out_Command_23);
    call {:si_unique_call 2384} out_Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    call {:si_unique_call 2385} sdv_KeAcquireSpinLock(0, out_Tmp_826);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    havoc out_OldIrql_15;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    call {:si_unique_call 2386} {:si_old_unique_call 1} out_Command_23, out_sdv_578, out_OldIrql_15, out_sdv_580, out_Tmp_826 := Avc_BusResetCallback_sdv_static_function_5#0_loop_L70(out_Command_23, out_sdv_578, out_OldIrql_15, out_sdv_580, in_BusExtension_18, out_Tmp_826);
    return;
}



procedure {:LoopProcedure} Avc_BusResetCallback_sdv_static_function_5#0_loop_L70(in_Command_23: int, in_sdv_578: int, in_OldIrql_15: int, in_sdv_580: int, in_BusExtension_18: int, in_Tmp_826: int) returns (out_Command_23: int, out_sdv_578: int, out_OldIrql_15: int, out_sdv_580: int, out_Tmp_826: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} out_sdv_578 == 1 || out_sdv_578 == 0 || out_sdv_578 == in_sdv_578;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_BusResetCallback_sdv_static_function_5#0_loop_L69(in_Command_24: int, in_Entry_10: int, in_BusExtension_18: int, in_vslice_dummy_var_334: int, in_vslice_dummy_var_335: int) returns (out_Command_24: int, out_Entry_10: int, out_vslice_dummy_var_334: int, out_vslice_dummy_var_335: int)
{

  entry:
    out_Command_24, out_Entry_10, out_vslice_dummy_var_334, out_vslice_dummy_var_335 := in_Command_24, in_Entry_10, in_vslice_dummy_var_334, in_vslice_dummy_var_335;
    goto L69, exit;

  exit:
    return;

  L69:
    goto anon31_Else;

  anon31_Else:
    out_Command_24 := out_Entry_10;
    assume {:nonnull} out_Entry_10 != 0;
    assume out_Entry_10 > 0;
    havoc out_Entry_10;
    assume {:nonnull} out_Command_24 != 0;
    assume out_Command_24 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 2387} out_vslice_dummy_var_334 := sdv_RemoveEntryList(0);
    assume {:nonnull} in_BusExtension_18 != 0;
    assume in_BusExtension_18 > 0;
    call {:si_unique_call 2388} out_vslice_dummy_var_335 := sdv_InsertTailList(CleanupList__BUS_DEVICE_EXTENSION(in_BusExtension_18), out_Command_24);
    assume {:nonnull} out_Command_24 != 0;
    assume out_Command_24 > 0;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    goto L_BAF_4;

  L_BAF_4:
    call {:si_unique_call 2389} {:si_old_unique_call 1} out_Command_24, out_Entry_10, out_vslice_dummy_var_334, out_vslice_dummy_var_335 := Avc_BusResetCallback_sdv_static_function_5#0_loop_L69(out_Command_24, out_Entry_10, in_BusExtension_18, out_vslice_dummy_var_334, out_vslice_dummy_var_335);
    return;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    goto L_BAF_4;
}



procedure {:LoopProcedure} Avc_BusResetCallback_sdv_static_function_5#0_loop_L69(in_Command_24: int, in_Entry_10: int, in_BusExtension_18: int, in_vslice_dummy_var_334: int, in_vslice_dummy_var_335: int) returns (out_Command_24: int, out_Entry_10: int, out_vslice_dummy_var_334: int, out_vslice_dummy_var_335: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_334 == 1 || out_vslice_dummy_var_334 == 0 || out_vslice_dummy_var_334 == in_vslice_dummy_var_334;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_BusResetCallback_sdv_static_function_5#0_loop_L34(in_PdoData_8: int, in_OldIrql_15: int, in_PdoExtension_5: int, in_Tmp_825: int, in_Tmp_826: int) returns (out_PdoData_8: int, out_OldIrql_15: int, out_PdoExtension_5: int, out_Tmp_825: int, out_Tmp_826: int)
{

  entry:
    out_PdoData_8, out_OldIrql_15, out_PdoExtension_5, out_Tmp_825, out_Tmp_826 := in_PdoData_8, in_OldIrql_15, in_PdoExtension_5, in_Tmp_825, in_Tmp_826;
    goto L34, exit;

  exit:
    return;

  L34:
    goto anon25_Else;

  anon25_Else:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    havoc out_Tmp_825;
    assume {:nonnull} out_Tmp_825 != 0;
    assume out_Tmp_825 > 0;
    havoc out_PdoExtension_5;
    call {:si_unique_call 2393} sdv_KeReleaseSpinLock(0, out_OldIrql_15);
    call {:si_unique_call 2394} out_Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    call {:si_unique_call 2395} sdv_KeAcquireSpinLock(0, out_Tmp_826);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    havoc out_OldIrql_15;
    assume {:nonnull} out_PdoExtension_5 != 0;
    assume out_PdoExtension_5 > 0;
    goto anon28_Then;

  anon28_Then:
    goto L47;

  L47:
    assume {:nonnull} out_PdoExtension_5 != 0;
    assume out_PdoExtension_5 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} out_PdoExtension_5 != 0;
    assume out_PdoExtension_5 > 0;
    goto L51;

  L51:
    call {:si_unique_call 2390} sdv_KeReleaseSpinLock(0, out_OldIrql_15);
    call {:si_unique_call 2391} out_Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    call {:si_unique_call 2392} sdv_KeAcquireSpinLock(0, out_Tmp_826);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    havoc out_OldIrql_15;
    goto L37;

  L37:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    havoc out_PdoData_8;
    goto L37_dummy;

  L37_dummy:
    call {:si_unique_call 2396} {:si_old_unique_call 1} out_PdoData_8, out_OldIrql_15, out_PdoExtension_5, out_Tmp_825, out_Tmp_826 := Avc_BusResetCallback_sdv_static_function_5#0_loop_L34(out_PdoData_8, out_OldIrql_15, out_PdoExtension_5, out_Tmp_825, out_Tmp_826);
    return;

  anon29_Then:
    goto L51;

  anon27_Then:
    goto L37;
}



procedure {:LoopProcedure} Avc_BusResetCallback_sdv_static_function_5#0_loop_L34(in_PdoData_8: int, in_OldIrql_15: int, in_PdoExtension_5: int, in_Tmp_825: int, in_Tmp_826: int) returns (out_PdoData_8: int, out_OldIrql_15: int, out_PdoExtension_5: int, out_Tmp_825: int, out_Tmp_826: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_BusResetCallback_sdv_static_function_5#1_loop_L70(in_Command_23: int, in_sdv_578: int, in_OldIrql_15: int, in_sdv_580: int, in_BusExtension_18: int, in_Tmp_826: int) returns (out_Command_23: int, out_sdv_578: int, out_OldIrql_15: int, out_sdv_580: int, out_Tmp_826: int)
{

  entry:
    out_Command_23, out_sdv_578, out_OldIrql_15, out_sdv_580, out_Tmp_826 := in_Command_23, in_sdv_578, in_OldIrql_15, in_sdv_580, in_Tmp_826;
    goto L70, exit;

  exit:
    return;

  L70:
    call {:si_unique_call 2397} out_sdv_578 := sdv_IsListEmpty(0);
    goto anon32_Else;

  anon32_Else:
    assume {:partition} out_sdv_578 == 0;
    assume {:nonnull} in_BusExtension_18 != 0;
    assume in_BusExtension_18 > 0;
    call {:si_unique_call 2398} out_sdv_580 := RemoveHeadList(CleanupList__BUS_DEVICE_EXTENSION(in_BusExtension_18));
    out_Command_23 := out_sdv_580;
    call {:si_unique_call 2399} InitializeListHead(out_Command_23);
    call {:si_unique_call 2400} sdv_KeReleaseSpinLock(0, out_OldIrql_15);
    call {:si_unique_call 2401} AvcPendingIrpCompletion(out_Command_23);
    call {:si_unique_call 2402} AvcFreeCommandContext(out_Command_23);
    call {:si_unique_call 2403} out_Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    call {:si_unique_call 2404} sdv_KeAcquireSpinLock(0, out_Tmp_826);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    havoc out_OldIrql_15;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    call {:si_unique_call 2405} {:si_old_unique_call 1} out_Command_23, out_sdv_578, out_OldIrql_15, out_sdv_580, out_Tmp_826 := Avc_BusResetCallback_sdv_static_function_5#1_loop_L70(out_Command_23, out_sdv_578, out_OldIrql_15, out_sdv_580, in_BusExtension_18, out_Tmp_826);
    return;
}



procedure {:LoopProcedure} Avc_BusResetCallback_sdv_static_function_5#1_loop_L70(in_Command_23: int, in_sdv_578: int, in_OldIrql_15: int, in_sdv_580: int, in_BusExtension_18: int, in_Tmp_826: int) returns (out_Command_23: int, out_sdv_578: int, out_OldIrql_15: int, out_sdv_580: int, out_Tmp_826: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} out_sdv_578 == 1 || out_sdv_578 == 0 || out_sdv_578 == in_sdv_578;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_BusResetCallback_sdv_static_function_5#1_loop_L69(in_Command_24: int, in_Entry_10: int, in_BusExtension_18: int, in_vslice_dummy_var_337: int, in_vslice_dummy_var_338: int) returns (out_Command_24: int, out_Entry_10: int, out_vslice_dummy_var_337: int, out_vslice_dummy_var_338: int)
{

  entry:
    out_Command_24, out_Entry_10, out_vslice_dummy_var_337, out_vslice_dummy_var_338 := in_Command_24, in_Entry_10, in_vslice_dummy_var_337, in_vslice_dummy_var_338;
    goto L69, exit;

  exit:
    return;

  L69:
    goto anon31_Else;

  anon31_Else:
    out_Command_24 := out_Entry_10;
    assume {:nonnull} out_Entry_10 != 0;
    assume out_Entry_10 > 0;
    havoc out_Entry_10;
    assume {:nonnull} out_Command_24 != 0;
    assume out_Command_24 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 2406} out_vslice_dummy_var_337 := sdv_RemoveEntryList(0);
    assume {:nonnull} in_BusExtension_18 != 0;
    assume in_BusExtension_18 > 0;
    call {:si_unique_call 2407} out_vslice_dummy_var_338 := sdv_InsertTailList(CleanupList__BUS_DEVICE_EXTENSION(in_BusExtension_18), out_Command_24);
    assume {:nonnull} out_Command_24 != 0;
    assume out_Command_24 > 0;
    goto anon33_Else_dummy;

  anon33_Else_dummy:
    goto L_BAF_5;

  L_BAF_5:
    call {:si_unique_call 2408} {:si_old_unique_call 1} out_Command_24, out_Entry_10, out_vslice_dummy_var_337, out_vslice_dummy_var_338 := Avc_BusResetCallback_sdv_static_function_5#1_loop_L69(out_Command_24, out_Entry_10, in_BusExtension_18, out_vslice_dummy_var_337, out_vslice_dummy_var_338);
    return;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    goto L_BAF_5;
}



procedure {:LoopProcedure} Avc_BusResetCallback_sdv_static_function_5#1_loop_L69(in_Command_24: int, in_Entry_10: int, in_BusExtension_18: int, in_vslice_dummy_var_337: int, in_vslice_dummy_var_338: int) returns (out_Command_24: int, out_Entry_10: int, out_vslice_dummy_var_337: int, out_vslice_dummy_var_338: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_337 == 1 || out_vslice_dummy_var_337 == 0 || out_vslice_dummy_var_337 == in_vslice_dummy_var_337;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation Avc_BusResetCallback_sdv_static_function_5#1_loop_L34(in_PdoData_8: int, in_OldIrql_15: int, in_PdoExtension_5: int, in_Tmp_825: int, in_Tmp_826: int, in_BusResetInfo: int) returns (out_PdoData_8: int, out_OldIrql_15: int, out_PdoExtension_5: int, out_Tmp_825: int, out_Tmp_826: int)
{
  var vslice_dummy_var_2767: int;

  entry:
    out_PdoData_8, out_OldIrql_15, out_PdoExtension_5, out_Tmp_825, out_Tmp_826 := in_PdoData_8, in_OldIrql_15, in_PdoExtension_5, in_Tmp_825, in_Tmp_826;
    goto L34, exit;

  exit:
    return;

  L34:
    goto anon25_Else;

  anon25_Else:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    havoc out_Tmp_825;
    assume {:nonnull} out_Tmp_825 != 0;
    assume out_Tmp_825 > 0;
    havoc out_PdoExtension_5;
    call {:si_unique_call 2413} sdv_KeReleaseSpinLock(0, out_OldIrql_15);
    call {:si_unique_call 2414} out_Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    call {:si_unique_call 2415} sdv_KeAcquireSpinLock(0, out_Tmp_826);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    havoc out_OldIrql_15;
    assume {:nonnull} out_PdoExtension_5 != 0;
    assume out_PdoExtension_5 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_PdoExtension_5 != 0;
    assume out_PdoExtension_5 > 0;
    assume {:nonnull} out_PdoExtension_5 != 0;
    assume out_PdoExtension_5 > 0;
    havoc vslice_dummy_var_2767;
    call {:si_unique_call 2412} Avc_BusResetCallback_sdv_static_function_5#0(vslice_dummy_var_2767, in_BusResetInfo);
    goto L47;

  L47:
    assume {:nonnull} out_PdoExtension_5 != 0;
    assume out_PdoExtension_5 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} out_PdoExtension_5 != 0;
    assume out_PdoExtension_5 > 0;
    goto L51;

  L51:
    call {:si_unique_call 2409} sdv_KeReleaseSpinLock(0, out_OldIrql_15);
    call {:si_unique_call 2410} out_Tmp_826 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    call {:si_unique_call 2411} sdv_KeAcquireSpinLock(0, out_Tmp_826);
    assume {:nonnull} out_Tmp_826 != 0;
    assume out_Tmp_826 > 0;
    havoc out_OldIrql_15;
    goto L37;

  L37:
    assume {:nonnull} out_PdoData_8 != 0;
    assume out_PdoData_8 > 0;
    havoc out_PdoData_8;
    goto L37_dummy;

  L37_dummy:
    call {:si_unique_call 2416} {:si_old_unique_call 1} out_PdoData_8, out_OldIrql_15, out_PdoExtension_5, out_Tmp_825, out_Tmp_826 := Avc_BusResetCallback_sdv_static_function_5#1_loop_L34(out_PdoData_8, out_OldIrql_15, out_PdoExtension_5, out_Tmp_825, out_Tmp_826, in_BusResetInfo);
    return;

  anon29_Then:
    goto L51;

  anon28_Then:
    goto L47;

  anon27_Then:
    goto L37;
}



procedure {:LoopProcedure} Avc_BusResetCallback_sdv_static_function_5#1_loop_L34(in_PdoData_8: int, in_OldIrql_15: int, in_PdoExtension_5: int, in_Tmp_825: int, in_Tmp_826: int, in_BusResetInfo: int) returns (out_PdoData_8: int, out_OldIrql_15: int, out_PdoExtension_5: int, out_Tmp_825: int, out_Tmp_826: int);
  modifies alloc, Mem_T.Status__IO_STATUS_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcRequestCompletion_sdv_static_function_7#0_loop_L183(in_TargetExt: int, in_Entry_2: int, in_DevExt_11: int, in_HandlerFound: int, in_Command_10: int, in_sdv_220: int, in_Opcode_1: int) returns (out_TargetExt: int, out_Entry_2: int, out_HandlerFound: int, out_sdv_220: int)
{

  entry:
    out_TargetExt, out_Entry_2, out_HandlerFound, out_sdv_220 := in_TargetExt, in_Entry_2, in_HandlerFound, in_sdv_220;
    goto L183, exit;

  exit:
    return;

  L183:
    goto anon71_Else;

  anon71_Else:
    goto anon72_Else;

  anon72_Else:
    assume {:partition} out_HandlerFound == 0;
    call {:si_unique_call 2418} out_sdv_220 := sdv_containing_record(out_Entry_2, 72);
    out_TargetExt := out_sdv_220;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} out_TargetExt != in_DevExt_11;
    call {:si_unique_call 2417} out_HandlerFound := AvcSearchForUnitCommandHandler_sdv_static_function_7(out_TargetExt, in_Opcode_1, in_Command_10);
    goto L194;

  L194:
    assume {:nonnull} out_Entry_2 != 0;
    assume out_Entry_2 > 0;
    havoc out_Entry_2;
    goto L194_dummy;

  L194_dummy:
    call {:si_unique_call 2419} {:si_old_unique_call 1} out_TargetExt, out_Entry_2, out_HandlerFound, out_sdv_220 := AvcRequestCompletion_sdv_static_function_7#0_loop_L183(out_TargetExt, out_Entry_2, in_DevExt_11, out_HandlerFound, in_Command_10, out_sdv_220, in_Opcode_1);
    return;

  anon78_Then:
    assume {:partition} out_TargetExt == in_DevExt_11;
    goto L194;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_7#0_loop_L183(in_TargetExt: int, in_Entry_2: int, in_DevExt_11: int, in_HandlerFound: int, in_Command_10: int, in_sdv_220: int, in_Opcode_1: int) returns (out_TargetExt: int, out_Entry_2: int, out_HandlerFound: int, out_sdv_220: int);
  modifies alloc;
  free ensures {:va_keep} out_HandlerFound == 1 || out_HandlerFound == 0 || out_HandlerFound == in_HandlerFound;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcRequestCompletion_sdv_static_function_7#0_loop_L129(in_SubunitAddr_7: int, in_Command_10: int, in_Entry_3: int, in_sdv_219: int) returns (out_Entry_3: int, out_sdv_219: int)
{
  var vslice_dummy_var_2768: int;

  entry:
    out_Entry_3, out_sdv_219 := in_Entry_3, in_sdv_219;
    goto L129, exit;

  exit:
    return;

  L129:
    goto anon65_Else;

  anon65_Else:
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto L135;

  L135:
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    goto L135_dummy;

  L135_dummy:
    call {:si_unique_call 2421} {:si_old_unique_call 1} out_Entry_3, out_sdv_219 := AvcRequestCompletion_sdv_static_function_7#0_loop_L129(in_SubunitAddr_7, in_Command_10, out_Entry_3, out_sdv_219);
    return;

  anon77_Then:
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    havoc vslice_dummy_var_2768;
    call {:si_unique_call 2420} out_sdv_219 := AvcSubunitAddrsEqual(in_SubunitAddr_7, vslice_dummy_var_2768);
    goto anon66_Then;

  anon66_Then:
    assume {:partition} out_sdv_219 == 0;
    goto L135;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_7#0_loop_L129(in_SubunitAddr_7: int, in_Command_10: int, in_Entry_3: int, in_sdv_219: int) returns (out_Entry_3: int, out_sdv_219: int);
  free ensures {:va_keep} out_sdv_219 == 1 || out_sdv_219 == 0 || out_sdv_219 == in_sdv_219;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcRequestCompletion_sdv_static_function_7#0_loop_L114(in_PdoData_1: int, in_SubunitAddr_7: int, in_sdv_211: int, in_Entry_3: int) returns (out_PdoData_1: int, out_sdv_211: int, out_Entry_3: int)
{
  var vslice_dummy_var_2769: int;

  entry:
    out_PdoData_1, out_sdv_211, out_Entry_3 := in_PdoData_1, in_sdv_211, in_Entry_3;
    goto L114, exit;

  exit:
    return;

  L114:
    goto anon62_Else;

  anon62_Else:
    out_PdoData_1 := out_Entry_3;
    assume {:nonnull} out_PdoData_1 != 0;
    assume out_PdoData_1 > 0;
    havoc vslice_dummy_var_2769;
    call {:si_unique_call 2422} out_sdv_211 := AvcSubunitAddrsEqual(in_SubunitAddr_7, vslice_dummy_var_2769);
    goto anon64_Else;

  anon64_Else:
    assume {:partition} out_sdv_211 == 0;
    out_PdoData_1 := 0;
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    goto anon64_Else_dummy;

  anon64_Else_dummy:
    call {:si_unique_call 2423} {:si_old_unique_call 1} out_PdoData_1, out_sdv_211, out_Entry_3 := AvcRequestCompletion_sdv_static_function_7#0_loop_L114(out_PdoData_1, in_SubunitAddr_7, out_sdv_211, out_Entry_3);
    return;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_7#0_loop_L114(in_PdoData_1: int, in_SubunitAddr_7: int, in_sdv_211: int, in_Entry_3: int) returns (out_PdoData_1: int, out_sdv_211: int, out_Entry_3: int);
  free ensures {:va_keep} out_PdoData_1 == 0 || out_PdoData_1 == in_PdoData_1;
  free ensures {:va_keep} out_sdv_211 == 1 || out_sdv_211 == 0 || out_sdv_211 == in_sdv_211;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcRequestCompletion_sdv_static_function_7#0_loop_L97(in_PdoData_1: int, in_SubunitAddr_7: int, in_FdoEntry: int, in_sdv_211: int, in_TargetExt_1: int, in_sdv_218: int, in_Command_10: int, in_Entry_3: int, in_sdv_219: int, in_SubunitFound: int, in_vslice_dummy_var_339: int) returns (out_PdoData_1: int, out_FdoEntry: int, out_sdv_211: int, out_TargetExt_1: int, out_sdv_218: int, out_Entry_3: int, out_sdv_219: int, out_SubunitFound: int, out_vslice_dummy_var_339: int)
{
  var vslice_dummy_var_2770: int;
  var vslice_dummy_var_2771: int;
  var vslice_dummy_var_2772: int;

  entry:
    out_PdoData_1, out_FdoEntry, out_sdv_211, out_TargetExt_1, out_sdv_218, out_Entry_3, out_sdv_219, out_SubunitFound, out_vslice_dummy_var_339 := in_PdoData_1, in_FdoEntry, in_sdv_211, in_TargetExt_1, in_sdv_218, in_Entry_3, in_sdv_219, in_SubunitFound, in_vslice_dummy_var_339;
    goto L97, exit;

  exit:
    return;

  L97:
    goto anon60_Else;

  anon60_Else:
    goto anon61_Else;

  anon61_Else:
    assume {:partition} out_SubunitFound == 0;
    call {:si_unique_call 2428} out_sdv_218 := sdv_containing_record(out_FdoEntry, 72);
    out_TargetExt_1 := out_sdv_218;
    out_PdoData_1 := 0;
    call {:si_unique_call 2429} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} out_TargetExt_1 != 0;
    assume out_TargetExt_1 > 0;
    havoc out_Entry_3;
    goto L114;

  L114:
    call {:si_unique_call 2427} out_PdoData_1, out_sdv_211, out_Entry_3 := AvcRequestCompletion_sdv_static_function_7#0_loop_L114(out_PdoData_1, in_SubunitAddr_7, out_sdv_211, out_Entry_3);
    goto L114_last;

  L114_last:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    out_PdoData_1 := out_Entry_3;
    assume {:nonnull} out_PdoData_1 != 0;
    assume out_PdoData_1 > 0;
    havoc vslice_dummy_var_2771;
    call {:si_unique_call 2430} out_sdv_211 := AvcSubunitAddrsEqual(in_SubunitAddr_7, vslice_dummy_var_2771);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} out_sdv_211 == 0;
    out_PdoData_1 := 0;
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    assume false;
    return;

  anon64_Then:
    assume {:partition} out_sdv_211 != 0;
    goto L115;

  L115:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} out_PdoData_1 != 0;
    out_SubunitFound := 1;
    assume {:nonnull} out_TargetExt_1 != 0;
    assume out_TargetExt_1 > 0;
    havoc out_Entry_3;
    goto L129;

  L129:
    call {:si_unique_call 2431} out_Entry_3, out_sdv_219 := AvcRequestCompletion_sdv_static_function_7#0_loop_L129(in_SubunitAddr_7, in_Command_10, out_Entry_3, out_sdv_219);
    goto L129_last;

  L129_last:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto L135;

  L135:
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    assume false;
    return;

  anon77_Then:
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    havoc vslice_dummy_var_2772;
    call {:si_unique_call 2432} out_sdv_219 := AvcSubunitAddrsEqual(in_SubunitAddr_7, vslice_dummy_var_2772);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_sdv_219 != 0;
    call {:si_unique_call 2425} out_vslice_dummy_var_339 := sdv_RemoveEntryList(0);
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    havoc vslice_dummy_var_2770;
    call {:si_unique_call 2426} InitializeListHead(vslice_dummy_var_2770);
    goto L124;

  L124:
    call {:si_unique_call 2424} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} out_FdoEntry != 0;
    assume out_FdoEntry > 0;
    havoc out_FdoEntry;
    goto L124_dummy;

  L124_dummy:
    call {:si_unique_call 2433} {:si_old_unique_call 1} out_PdoData_1, out_FdoEntry, out_sdv_211, out_TargetExt_1, out_sdv_218, out_Entry_3, out_sdv_219, out_SubunitFound, out_vslice_dummy_var_339 := AvcRequestCompletion_sdv_static_function_7#0_loop_L97(out_PdoData_1, in_SubunitAddr_7, out_FdoEntry, out_sdv_211, out_TargetExt_1, out_sdv_218, in_Command_10, out_Entry_3, out_sdv_219, out_SubunitFound, out_vslice_dummy_var_339);
    return;

  anon66_Then:
    assume {:partition} out_sdv_219 == 0;
    goto L135;

  anon65_Then:
    goto L124;

  anon63_Then:
    assume {:partition} out_PdoData_1 == 0;
    goto L124;

  anon62_Then:
    goto L115;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_7#0_loop_L97(in_PdoData_1: int, in_SubunitAddr_7: int, in_FdoEntry: int, in_sdv_211: int, in_TargetExt_1: int, in_sdv_218: int, in_Command_10: int, in_Entry_3: int, in_sdv_219: int, in_SubunitFound: int, in_vslice_dummy_var_339: int) returns (out_PdoData_1: int, out_FdoEntry: int, out_sdv_211: int, out_TargetExt_1: int, out_sdv_218: int, out_Entry_3: int, out_sdv_219: int, out_SubunitFound: int, out_vslice_dummy_var_339: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_211 == 1 || out_sdv_211 == 0 || out_sdv_211 == in_sdv_211;
  free ensures {:va_keep} out_sdv_219 == 1 || out_sdv_219 == 0 || out_sdv_219 == in_sdv_219;
  free ensures {:va_keep} out_SubunitFound == 1 || out_SubunitFound == in_SubunitFound;
  free ensures {:va_keep} out_vslice_dummy_var_339 == 1 || out_vslice_dummy_var_339 == 0 || out_vslice_dummy_var_339 == in_vslice_dummy_var_339;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcRequestCompletion_sdv_static_function_7#1_loop_L183(in_TargetExt: int, in_Entry_2: int, in_DevExt_11: int, in_HandlerFound: int, in_Command_10: int, in_sdv_220: int, in_Opcode_1: int) returns (out_TargetExt: int, out_Entry_2: int, out_HandlerFound: int, out_sdv_220: int)
{

  entry:
    out_TargetExt, out_Entry_2, out_HandlerFound, out_sdv_220 := in_TargetExt, in_Entry_2, in_HandlerFound, in_sdv_220;
    goto L183, exit;

  exit:
    return;

  L183:
    goto anon71_Else;

  anon71_Else:
    goto anon72_Else;

  anon72_Else:
    assume {:partition} out_HandlerFound == 0;
    call {:si_unique_call 2435} out_sdv_220 := sdv_containing_record(out_Entry_2, 72);
    out_TargetExt := out_sdv_220;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} out_TargetExt != in_DevExt_11;
    call {:si_unique_call 2434} out_HandlerFound := AvcSearchForUnitCommandHandler_sdv_static_function_7(out_TargetExt, in_Opcode_1, in_Command_10);
    goto L194;

  L194:
    assume {:nonnull} out_Entry_2 != 0;
    assume out_Entry_2 > 0;
    havoc out_Entry_2;
    goto L194_dummy;

  L194_dummy:
    call {:si_unique_call 2436} {:si_old_unique_call 1} out_TargetExt, out_Entry_2, out_HandlerFound, out_sdv_220 := AvcRequestCompletion_sdv_static_function_7#1_loop_L183(out_TargetExt, out_Entry_2, in_DevExt_11, out_HandlerFound, in_Command_10, out_sdv_220, in_Opcode_1);
    return;

  anon78_Then:
    assume {:partition} out_TargetExt == in_DevExt_11;
    goto L194;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_7#1_loop_L183(in_TargetExt: int, in_Entry_2: int, in_DevExt_11: int, in_HandlerFound: int, in_Command_10: int, in_sdv_220: int, in_Opcode_1: int) returns (out_TargetExt: int, out_Entry_2: int, out_HandlerFound: int, out_sdv_220: int);
  modifies alloc;
  free ensures {:va_keep} out_HandlerFound == 1 || out_HandlerFound == 0 || out_HandlerFound == in_HandlerFound;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcRequestCompletion_sdv_static_function_7#1_loop_L129(in_SubunitAddr_7: int, in_Command_10: int, in_Entry_3: int, in_sdv_219: int) returns (out_Entry_3: int, out_sdv_219: int)
{
  var vslice_dummy_var_2773: int;

  entry:
    out_Entry_3, out_sdv_219 := in_Entry_3, in_sdv_219;
    goto L129, exit;

  exit:
    return;

  L129:
    goto anon65_Else;

  anon65_Else:
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto L135;

  L135:
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    goto L135_dummy;

  L135_dummy:
    call {:si_unique_call 2438} {:si_old_unique_call 1} out_Entry_3, out_sdv_219 := AvcRequestCompletion_sdv_static_function_7#1_loop_L129(in_SubunitAddr_7, in_Command_10, out_Entry_3, out_sdv_219);
    return;

  anon77_Then:
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    havoc vslice_dummy_var_2773;
    call {:si_unique_call 2437} out_sdv_219 := AvcSubunitAddrsEqual(in_SubunitAddr_7, vslice_dummy_var_2773);
    goto anon66_Then;

  anon66_Then:
    assume {:partition} out_sdv_219 == 0;
    goto L135;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_7#1_loop_L129(in_SubunitAddr_7: int, in_Command_10: int, in_Entry_3: int, in_sdv_219: int) returns (out_Entry_3: int, out_sdv_219: int);
  free ensures {:va_keep} out_sdv_219 == 1 || out_sdv_219 == 0 || out_sdv_219 == in_sdv_219;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcRequestCompletion_sdv_static_function_7#1_loop_L114(in_PdoData_1: int, in_SubunitAddr_7: int, in_sdv_211: int, in_Entry_3: int) returns (out_PdoData_1: int, out_sdv_211: int, out_Entry_3: int)
{
  var vslice_dummy_var_2774: int;

  entry:
    out_PdoData_1, out_sdv_211, out_Entry_3 := in_PdoData_1, in_sdv_211, in_Entry_3;
    goto L114, exit;

  exit:
    return;

  L114:
    goto anon62_Else;

  anon62_Else:
    out_PdoData_1 := out_Entry_3;
    assume {:nonnull} out_PdoData_1 != 0;
    assume out_PdoData_1 > 0;
    havoc vslice_dummy_var_2774;
    call {:si_unique_call 2439} out_sdv_211 := AvcSubunitAddrsEqual(in_SubunitAddr_7, vslice_dummy_var_2774);
    goto anon64_Else;

  anon64_Else:
    assume {:partition} out_sdv_211 == 0;
    out_PdoData_1 := 0;
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    goto anon64_Else_dummy;

  anon64_Else_dummy:
    call {:si_unique_call 2440} {:si_old_unique_call 1} out_PdoData_1, out_sdv_211, out_Entry_3 := AvcRequestCompletion_sdv_static_function_7#1_loop_L114(out_PdoData_1, in_SubunitAddr_7, out_sdv_211, out_Entry_3);
    return;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_7#1_loop_L114(in_PdoData_1: int, in_SubunitAddr_7: int, in_sdv_211: int, in_Entry_3: int) returns (out_PdoData_1: int, out_sdv_211: int, out_Entry_3: int);
  free ensures {:va_keep} out_PdoData_1 == 0 || out_PdoData_1 == in_PdoData_1;
  free ensures {:va_keep} out_sdv_211 == 1 || out_sdv_211 == 0 || out_sdv_211 == in_sdv_211;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcRequestCompletion_sdv_static_function_7#1_loop_L97(in_PdoData_1: int, in_SubunitAddr_7: int, in_FdoEntry: int, in_sdv_211: int, in_TargetExt_1: int, in_sdv_218: int, in_Command_10: int, in_Entry_3: int, in_sdv_219: int, in_SubunitFound: int, in_vslice_dummy_var_340: int) returns (out_PdoData_1: int, out_FdoEntry: int, out_sdv_211: int, out_TargetExt_1: int, out_sdv_218: int, out_Entry_3: int, out_sdv_219: int, out_SubunitFound: int, out_vslice_dummy_var_340: int)
{
  var vslice_dummy_var_2775: int;
  var vslice_dummy_var_2776: int;
  var vslice_dummy_var_2777: int;

  entry:
    out_PdoData_1, out_FdoEntry, out_sdv_211, out_TargetExt_1, out_sdv_218, out_Entry_3, out_sdv_219, out_SubunitFound, out_vslice_dummy_var_340 := in_PdoData_1, in_FdoEntry, in_sdv_211, in_TargetExt_1, in_sdv_218, in_Entry_3, in_sdv_219, in_SubunitFound, in_vslice_dummy_var_340;
    goto L97, exit;

  exit:
    return;

  L97:
    goto anon60_Else;

  anon60_Else:
    goto anon61_Else;

  anon61_Else:
    assume {:partition} out_SubunitFound == 0;
    call {:si_unique_call 2445} out_sdv_218 := sdv_containing_record(out_FdoEntry, 72);
    out_TargetExt_1 := out_sdv_218;
    out_PdoData_1 := 0;
    call {:si_unique_call 2446} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} out_TargetExt_1 != 0;
    assume out_TargetExt_1 > 0;
    havoc out_Entry_3;
    goto L114;

  L114:
    call {:si_unique_call 2444} out_PdoData_1, out_sdv_211, out_Entry_3 := AvcRequestCompletion_sdv_static_function_7#1_loop_L114(out_PdoData_1, in_SubunitAddr_7, out_sdv_211, out_Entry_3);
    goto L114_last;

  L114_last:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    out_PdoData_1 := out_Entry_3;
    assume {:nonnull} out_PdoData_1 != 0;
    assume out_PdoData_1 > 0;
    havoc vslice_dummy_var_2776;
    call {:si_unique_call 2447} out_sdv_211 := AvcSubunitAddrsEqual(in_SubunitAddr_7, vslice_dummy_var_2776);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} out_sdv_211 == 0;
    out_PdoData_1 := 0;
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    assume false;
    return;

  anon64_Then:
    assume {:partition} out_sdv_211 != 0;
    goto L115;

  L115:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} out_PdoData_1 != 0;
    out_SubunitFound := 1;
    assume {:nonnull} out_TargetExt_1 != 0;
    assume out_TargetExt_1 > 0;
    havoc out_Entry_3;
    goto L129;

  L129:
    call {:si_unique_call 2448} out_Entry_3, out_sdv_219 := AvcRequestCompletion_sdv_static_function_7#1_loop_L129(in_SubunitAddr_7, in_Command_10, out_Entry_3, out_sdv_219);
    goto L129_last;

  L129_last:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto L135;

  L135:
    assume {:nonnull} out_Entry_3 != 0;
    assume out_Entry_3 > 0;
    havoc out_Entry_3;
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    assume false;
    return;

  anon77_Then:
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    havoc vslice_dummy_var_2777;
    call {:si_unique_call 2449} out_sdv_219 := AvcSubunitAddrsEqual(in_SubunitAddr_7, vslice_dummy_var_2777);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_sdv_219 != 0;
    call {:si_unique_call 2442} out_vslice_dummy_var_340 := sdv_RemoveEntryList(0);
    assume {:nonnull} in_Command_10 != 0;
    assume in_Command_10 > 0;
    havoc vslice_dummy_var_2775;
    call {:si_unique_call 2443} InitializeListHead(vslice_dummy_var_2775);
    goto L124;

  L124:
    call {:si_unique_call 2441} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} out_FdoEntry != 0;
    assume out_FdoEntry > 0;
    havoc out_FdoEntry;
    goto L124_dummy;

  L124_dummy:
    call {:si_unique_call 2450} {:si_old_unique_call 1} out_PdoData_1, out_FdoEntry, out_sdv_211, out_TargetExt_1, out_sdv_218, out_Entry_3, out_sdv_219, out_SubunitFound, out_vslice_dummy_var_340 := AvcRequestCompletion_sdv_static_function_7#1_loop_L97(out_PdoData_1, in_SubunitAddr_7, out_FdoEntry, out_sdv_211, out_TargetExt_1, out_sdv_218, in_Command_10, out_Entry_3, out_sdv_219, out_SubunitFound, out_vslice_dummy_var_340);
    return;

  anon66_Then:
    assume {:partition} out_sdv_219 == 0;
    goto L135;

  anon65_Then:
    goto L124;

  anon63_Then:
    assume {:partition} out_PdoData_1 == 0;
    goto L124;

  anon62_Then:
    goto L115;
}



procedure {:LoopProcedure} AvcRequestCompletion_sdv_static_function_7#1_loop_L97(in_PdoData_1: int, in_SubunitAddr_7: int, in_FdoEntry: int, in_sdv_211: int, in_TargetExt_1: int, in_sdv_218: int, in_Command_10: int, in_Entry_3: int, in_sdv_219: int, in_SubunitFound: int, in_vslice_dummy_var_340: int) returns (out_PdoData_1: int, out_FdoEntry: int, out_sdv_211: int, out_TargetExt_1: int, out_sdv_218: int, out_Entry_3: int, out_sdv_219: int, out_SubunitFound: int, out_vslice_dummy_var_340: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_211 == 1 || out_sdv_211 == 0 || out_sdv_211 == in_sdv_211;
  free ensures {:va_keep} out_sdv_219 == 1 || out_sdv_219 == 0 || out_sdv_219 == in_sdv_219;
  free ensures {:va_keep} out_SubunitFound == 1 || out_SubunitFound == in_SubunitFound;
  free ensures {:va_keep} out_vslice_dummy_var_340 == 1 || out_vslice_dummy_var_340 == 0 || out_vslice_dummy_var_340 == in_vslice_dummy_var_340;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcResponseCompletion_sdv_static_function_7#0_loop_L110(in_Tmp_384: int, in_max_1: int, in_Command_14: int, in_idx_11: int, in_Tmp_389: int, in_Opcode_3: int) returns (out_Tmp_384: int, out_idx_11: int, out_Tmp_389: int)
{

  entry:
    out_Tmp_384, out_idx_11, out_Tmp_389 := in_Tmp_384, in_idx_11, in_Tmp_389;
    goto L110, exit;

  exit:
    return;

  L110:
    goto anon134_Else;

  anon134_Else:
    assume {:partition} in_max_1 >= out_idx_11;
    out_Tmp_389 := out_idx_11;
    assume {:nonnull} in_Command_14 != 0;
    assume in_Command_14 > 0;
    havoc out_Tmp_384;
    assume {:nonnull} out_Tmp_384 != 0;
    assume out_Tmp_384 > 0;
    goto anon174_Then;

  anon174_Then:
    out_idx_11 := out_idx_11 + 1;
    goto anon174_Then_dummy;

  anon174_Then_dummy:
    call {:si_unique_call 2451} {:si_old_unique_call 1} out_Tmp_384, out_idx_11, out_Tmp_389 := AvcResponseCompletion_sdv_static_function_7#0_loop_L110(out_Tmp_384, in_max_1, in_Command_14, out_idx_11, out_Tmp_389, in_Opcode_3);
    return;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_7#0_loop_L110(in_Tmp_384: int, in_max_1: int, in_Command_14: int, in_idx_11: int, in_Tmp_389: int, in_Opcode_3: int) returns (out_Tmp_384: int, out_idx_11: int, out_Tmp_389: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcResponseCompletion_sdv_static_function_7#0_loop_L136(in_Tmp_378: int, in_Tmp_382: int, in_idx_10: int, in_Command_14: int, in_max_2: int, in_Opcode_3: int) returns (out_Tmp_378: int, out_Tmp_382: int, out_idx_10: int)
{

  entry:
    out_Tmp_378, out_Tmp_382, out_idx_10 := in_Tmp_378, in_Tmp_382, in_idx_10;
    goto L136, exit;

  exit:
    return;

  L136:
    goto anon139_Else;

  anon139_Else:
    assume {:partition} in_max_2 >= out_idx_10;
    out_Tmp_382 := out_idx_10;
    assume {:nonnull} in_Command_14 != 0;
    assume in_Command_14 > 0;
    havoc out_Tmp_378;
    assume {:nonnull} out_Tmp_378 != 0;
    assume out_Tmp_378 > 0;
    goto anon173_Then;

  anon173_Then:
    out_idx_10 := out_idx_10 + 1;
    goto anon173_Then_dummy;

  anon173_Then_dummy:
    call {:si_unique_call 2452} {:si_old_unique_call 1} out_Tmp_378, out_Tmp_382, out_idx_10 := AvcResponseCompletion_sdv_static_function_7#0_loop_L136(out_Tmp_378, out_Tmp_382, out_idx_10, in_Command_14, in_max_2, in_Opcode_3);
    return;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_7#0_loop_L136(in_Tmp_378: int, in_Tmp_382: int, in_idx_10: int, in_Command_14: int, in_max_2: int, in_Opcode_3: int) returns (out_Tmp_378: int, out_Tmp_382: int, out_idx_10: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcResponseCompletion_sdv_static_function_7#0_loop_L159(in_idx_9: int, in_Tmp_380: int, in_Tmp_381: int, in_Command_14: int, in_max_3: int, in_Opcode_3: int) returns (out_idx_9: int, out_Tmp_380: int, out_Tmp_381: int)
{

  entry:
    out_idx_9, out_Tmp_380, out_Tmp_381 := in_idx_9, in_Tmp_380, in_Tmp_381;
    goto L159, exit;

  exit:
    return;

  L159:
    goto anon145_Else;

  anon145_Else:
    assume {:partition} in_max_3 >= out_idx_9;
    out_Tmp_380 := out_idx_9;
    assume {:nonnull} in_Command_14 != 0;
    assume in_Command_14 > 0;
    havoc out_Tmp_381;
    assume {:nonnull} out_Tmp_381 != 0;
    assume out_Tmp_381 > 0;
    goto anon172_Then;

  anon172_Then:
    out_idx_9 := out_idx_9 + 1;
    goto anon172_Then_dummy;

  anon172_Then_dummy:
    call {:si_unique_call 2453} {:si_old_unique_call 1} out_idx_9, out_Tmp_380, out_Tmp_381 := AvcResponseCompletion_sdv_static_function_7#0_loop_L159(out_idx_9, out_Tmp_380, out_Tmp_381, in_Command_14, in_max_3, in_Opcode_3);
    return;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_7#0_loop_L159(in_idx_9: int, in_Tmp_380: int, in_Tmp_381: int, in_Command_14: int, in_max_3: int, in_Opcode_3: int) returns (out_idx_9: int, out_Tmp_380: int, out_Tmp_381: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcResponseCompletion_sdv_static_function_7#0_loop_L80(in_Tmp_378: int, in_SubunitAddr_8: int, in_ResponseCode_1: int, in_idx_9: int, in_Tmp_380: int, in_Tmp_381: int, in_Tmp_382: int, in_idx_10: int, in_Tmp_384: int, in_sdv_257: int, in_max_1: int, in_Command_14: int, in_Tmp_385: int, in_max_2: int, in_Entry_7: int, in_OpcodesMatch_1: int, in_idx_11: int, in_max_3: int, in_Tmp_387: int, in_Tmp_389: int, in_Tmp_390: int, in_Opcode_3: int) returns (out_Tmp_378: int, out_idx_9: int, out_Tmp_380: int, out_Tmp_381: int, out_Tmp_382: int, out_idx_10: int, out_Tmp_384: int, out_sdv_257: int, out_max_1: int, out_Command_14: int, out_Tmp_385: int, out_max_2: int, out_Entry_7: int, out_OpcodesMatch_1: int, out_idx_11: int, out_max_3: int, out_Tmp_387: int, out_Tmp_389: int, out_Tmp_390: int)
{
  var vslice_dummy_var_2778: int;

  entry:
    out_Tmp_378, out_idx_9, out_Tmp_380, out_Tmp_381, out_Tmp_382, out_idx_10, out_Tmp_384, out_sdv_257, out_max_1, out_Command_14, out_Tmp_385, out_max_2, out_Entry_7, out_OpcodesMatch_1, out_idx_11, out_max_3, out_Tmp_387, out_Tmp_389, out_Tmp_390 := in_Tmp_378, in_idx_9, in_Tmp_380, in_Tmp_381, in_Tmp_382, in_idx_10, in_Tmp_384, in_sdv_257, in_max_1, in_Command_14, in_Tmp_385, in_max_2, in_Entry_7, in_OpcodesMatch_1, in_idx_11, in_max_3, in_Tmp_387, in_Tmp_389, in_Tmp_390;
    goto L80, exit;

  exit:
    return;

  L80:
    goto anon123_Else;

  anon123_Else:
    out_Command_14 := out_Entry_7;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc vslice_dummy_var_2778;
    call {:si_unique_call 2454} out_sdv_257 := AvcSubunitAddrsEqual(in_SubunitAddr_8, vslice_dummy_var_2778);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} out_sdv_257 != 0;
    out_OpcodesMatch_1 := 0;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto L97;

  L97:
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} in_ResponseCode_1 != 8;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} in_ResponseCode_1 == 12;
    goto L147;

  L147:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    out_Command_14 := 0;
    goto L119;

  L119:
    goto anon136_Then;

  anon136_Then:
    assume {:partition} out_Command_14 == 0;
    goto L86;

  L86:
    assume {:nonnull} out_Entry_7 != 0;
    assume out_Entry_7 > 0;
    havoc out_Entry_7;
    out_Command_14 := 0;
    goto L86_dummy;

  L86_dummy:
    call {:si_unique_call 2458} {:si_old_unique_call 1} out_Tmp_378, out_idx_9, out_Tmp_380, out_Tmp_381, out_Tmp_382, out_idx_10, out_Tmp_384, out_sdv_257, out_max_1, out_Command_14, out_Tmp_385, out_max_2, out_Entry_7, out_OpcodesMatch_1, out_idx_11, out_max_3, out_Tmp_387, out_Tmp_389, out_Tmp_390 := AvcResponseCompletion_sdv_static_function_7#0_loop_L80(out_Tmp_378, in_SubunitAddr_8, in_ResponseCode_1, out_idx_9, out_Tmp_380, out_Tmp_381, out_Tmp_382, out_idx_10, out_Tmp_384, out_sdv_257, out_max_1, out_Command_14, out_Tmp_385, out_max_2, out_Entry_7, out_OpcodesMatch_1, out_idx_11, out_max_3, out_Tmp_387, out_Tmp_389, out_Tmp_390, in_Opcode_3);
    return;

  anon141_Then:
    goto L119;

  anon162_Then:
    assume {:partition} in_ResponseCode_1 != 12;
    out_Command_14 := 0;
    goto L119;

  anon127_Then:
    assume {:partition} in_ResponseCode_1 == 8;
    goto L147;

  anon152_Then:
    out_Command_14 := 0;
    goto L119;

  anon153_Then:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} in_ResponseCode_1 != 8;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} in_ResponseCode_1 != 10;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} in_ResponseCode_1 != 13;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} in_ResponseCode_1 == 15;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_390;
    assume {:nonnull} out_Tmp_390 != 0;
    assume out_Tmp_390 > 0;
    havoc out_max_1;
    out_idx_11 := 1;
    goto L110;

  L110:
    call {:si_unique_call 2457} out_Tmp_384, out_idx_11, out_Tmp_389 := AvcResponseCompletion_sdv_static_function_7#0_loop_L110(out_Tmp_384, out_max_1, out_Command_14, out_idx_11, out_Tmp_389, in_Opcode_3);
    goto L110_last;

  L110_last:
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} out_max_1 >= out_idx_11;
    out_Tmp_389 := out_idx_11;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_384;
    assume {:nonnull} out_Tmp_384 != 0;
    assume out_Tmp_384 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    out_OpcodesMatch_1 := 1;
    goto L111;

  L111:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} out_OpcodesMatch_1 != 0;
    goto L119;

  anon135_Then:
    assume {:partition} out_OpcodesMatch_1 == 0;
    out_Command_14 := 0;
    goto L119;

  anon174_Then:
    out_idx_11 := out_idx_11 + 1;
    assume false;
    return;

  anon134_Then:
    assume {:partition} out_idx_11 > out_max_1;
    goto L111;

  anon132_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    out_OpcodesMatch_1 := 0;
    goto L361;

  L361:
    goto L111;

  anon133_Then:
    out_OpcodesMatch_1 := 1;
    goto L361;

  anon131_Then:
    out_Command_14 := 0;
    goto L119;

  anon163_Then:
    assume {:partition} in_ResponseCode_1 != 15;
    out_Command_14 := 0;
    goto L119;

  anon164_Then:
    assume {:partition} in_ResponseCode_1 == 13;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_387;
    assume {:nonnull} out_Tmp_387 != 0;
    assume out_Tmp_387 > 0;
    havoc out_max_2;
    out_idx_10 := 1;
    goto L136;

  L136:
    call {:si_unique_call 2456} out_Tmp_378, out_Tmp_382, out_idx_10 := AvcResponseCompletion_sdv_static_function_7#0_loop_L136(out_Tmp_378, out_Tmp_382, out_idx_10, out_Command_14, out_max_2, in_Opcode_3);
    goto L136_last;

  L136_last:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} out_max_2 >= out_idx_10;
    out_Tmp_382 := out_idx_10;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_378;
    assume {:nonnull} out_Tmp_378 != 0;
    assume out_Tmp_378 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    out_OpcodesMatch_1 := 1;
    goto L137;

  L137:
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} out_OpcodesMatch_1 == 0;
    out_Command_14 := 0;
    goto L119;

  anon140_Then:
    assume {:partition} out_OpcodesMatch_1 != 0;
    goto L119;

  anon173_Then:
    out_idx_10 := out_idx_10 + 1;
    assume false;
    return;

  anon139_Then:
    assume {:partition} out_idx_10 > out_max_2;
    goto L137;

  anon130_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    out_OpcodesMatch_1 := 0;
    goto L350;

  L350:
    goto L137;

  anon138_Then:
    out_OpcodesMatch_1 := 1;
    goto L350;

  anon165_Then:
    assume {:partition} in_ResponseCode_1 == 10;
    goto L100;

  L100:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    out_Command_14 := 0;
    goto L119;

  anon129_Then:
    goto L119;

  anon128_Then:
    assume {:partition} in_ResponseCode_1 == 8;
    goto L100;

  anon154_Then:
    goto L97;

  anon155_Then:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} in_ResponseCode_1 != 8;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} in_ResponseCode_1 != 10;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} in_ResponseCode_1 != 11;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} in_ResponseCode_1 == 12;
    goto L153;

  L153:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_385;
    assume {:nonnull} out_Tmp_385 != 0;
    assume out_Tmp_385 > 0;
    havoc out_max_3;
    out_idx_9 := 1;
    goto L159;

  L159:
    call {:si_unique_call 2455} out_idx_9, out_Tmp_380, out_Tmp_381 := AvcResponseCompletion_sdv_static_function_7#0_loop_L159(out_idx_9, out_Tmp_380, out_Tmp_381, out_Command_14, out_max_3, in_Opcode_3);
    goto L159_last;

  L159_last:
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} out_max_3 >= out_idx_9;
    out_Tmp_380 := out_idx_9;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_381;
    assume {:nonnull} out_Tmp_381 != 0;
    assume out_Tmp_381 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    out_OpcodesMatch_1 := 1;
    goto L160;

  L160:
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} out_OpcodesMatch_1 == 0;
    out_Command_14 := 0;
    goto L119;

  anon146_Then:
    assume {:partition} out_OpcodesMatch_1 != 0;
    goto L119;

  anon172_Then:
    out_idx_9 := out_idx_9 + 1;
    assume false;
    return;

  anon145_Then:
    assume {:partition} out_idx_9 > out_max_3;
    goto L160;

  anon143_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    out_OpcodesMatch_1 := 0;
    goto L335;

  L335:
    goto L160;

  anon144_Then:
    out_OpcodesMatch_1 := 1;
    goto L335;

  anon159_Then:
    assume {:partition} in_ResponseCode_1 != 12;
    out_Command_14 := 0;
    goto L119;

  anon160_Then:
    assume {:partition} in_ResponseCode_1 == 11;
    goto L153;

  anon161_Then:
    assume {:partition} in_ResponseCode_1 == 10;
    goto L152;

  L152:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    out_Command_14 := 0;
    goto L119;

  anon142_Then:
    goto L119;

  anon126_Then:
    assume {:partition} in_ResponseCode_1 == 8;
    goto L152;

  anon170_Then:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} in_ResponseCode_1 != 8;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} in_ResponseCode_1 != 9;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} in_ResponseCode_1 != 10;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} in_ResponseCode_1 == 15;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    goto L174;

  L174:
    out_Command_14 := 0;
    goto L119;

  anon148_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    goto L174;

  anon149_Then:
    goto L119;

  anon156_Then:
    assume {:partition} in_ResponseCode_1 != 15;
    out_Command_14 := 0;
    goto L119;

  anon157_Then:
    assume {:partition} in_ResponseCode_1 == 10;
    goto L171;

  L171:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    out_Command_14 := 0;
    goto L119;

  anon147_Then:
    goto L119;

  anon158_Then:
    assume {:partition} in_ResponseCode_1 == 9;
    goto L171;

  anon125_Then:
    assume {:partition} in_ResponseCode_1 == 8;
    goto L171;

  anon124_Then:
    assume {:partition} out_sdv_257 == 0;
    goto L86;

  anon169_Then:
    goto L86;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_7#0_loop_L80(in_Tmp_378: int, in_SubunitAddr_8: int, in_ResponseCode_1: int, in_idx_9: int, in_Tmp_380: int, in_Tmp_381: int, in_Tmp_382: int, in_idx_10: int, in_Tmp_384: int, in_sdv_257: int, in_max_1: int, in_Command_14: int, in_Tmp_385: int, in_max_2: int, in_Entry_7: int, in_OpcodesMatch_1: int, in_idx_11: int, in_max_3: int, in_Tmp_387: int, in_Tmp_389: int, in_Tmp_390: int, in_Opcode_3: int) returns (out_Tmp_378: int, out_idx_9: int, out_Tmp_380: int, out_Tmp_381: int, out_Tmp_382: int, out_idx_10: int, out_Tmp_384: int, out_sdv_257: int, out_max_1: int, out_Command_14: int, out_Tmp_385: int, out_max_2: int, out_Entry_7: int, out_OpcodesMatch_1: int, out_idx_11: int, out_max_3: int, out_Tmp_387: int, out_Tmp_389: int, out_Tmp_390: int);
  free ensures {:va_keep} out_sdv_257 == 1 || out_sdv_257 == 0 || out_sdv_257 == in_sdv_257;
  free ensures {:va_keep} out_Command_14 == 0 || out_Command_14 == in_Command_14;
  free ensures {:va_keep} out_OpcodesMatch_1 == 0 || out_OpcodesMatch_1 == 1 || out_OpcodesMatch_1 == in_OpcodesMatch_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcResponseCompletion_sdv_static_function_7#1_loop_L110(in_Tmp_384: int, in_max_1: int, in_Command_14: int, in_idx_11: int, in_Tmp_389: int, in_Opcode_3: int) returns (out_Tmp_384: int, out_idx_11: int, out_Tmp_389: int)
{

  entry:
    out_Tmp_384, out_idx_11, out_Tmp_389 := in_Tmp_384, in_idx_11, in_Tmp_389;
    goto L110, exit;

  exit:
    return;

  L110:
    goto anon134_Else;

  anon134_Else:
    assume {:partition} in_max_1 >= out_idx_11;
    out_Tmp_389 := out_idx_11;
    assume {:nonnull} in_Command_14 != 0;
    assume in_Command_14 > 0;
    havoc out_Tmp_384;
    assume {:nonnull} out_Tmp_384 != 0;
    assume out_Tmp_384 > 0;
    goto anon174_Then;

  anon174_Then:
    out_idx_11 := out_idx_11 + 1;
    goto anon174_Then_dummy;

  anon174_Then_dummy:
    call {:si_unique_call 2459} {:si_old_unique_call 1} out_Tmp_384, out_idx_11, out_Tmp_389 := AvcResponseCompletion_sdv_static_function_7#1_loop_L110(out_Tmp_384, in_max_1, in_Command_14, out_idx_11, out_Tmp_389, in_Opcode_3);
    return;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_7#1_loop_L110(in_Tmp_384: int, in_max_1: int, in_Command_14: int, in_idx_11: int, in_Tmp_389: int, in_Opcode_3: int) returns (out_Tmp_384: int, out_idx_11: int, out_Tmp_389: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcResponseCompletion_sdv_static_function_7#1_loop_L136(in_Tmp_378: int, in_Tmp_382: int, in_idx_10: int, in_Command_14: int, in_max_2: int, in_Opcode_3: int) returns (out_Tmp_378: int, out_Tmp_382: int, out_idx_10: int)
{

  entry:
    out_Tmp_378, out_Tmp_382, out_idx_10 := in_Tmp_378, in_Tmp_382, in_idx_10;
    goto L136, exit;

  exit:
    return;

  L136:
    goto anon139_Else;

  anon139_Else:
    assume {:partition} in_max_2 >= out_idx_10;
    out_Tmp_382 := out_idx_10;
    assume {:nonnull} in_Command_14 != 0;
    assume in_Command_14 > 0;
    havoc out_Tmp_378;
    assume {:nonnull} out_Tmp_378 != 0;
    assume out_Tmp_378 > 0;
    goto anon173_Then;

  anon173_Then:
    out_idx_10 := out_idx_10 + 1;
    goto anon173_Then_dummy;

  anon173_Then_dummy:
    call {:si_unique_call 2460} {:si_old_unique_call 1} out_Tmp_378, out_Tmp_382, out_idx_10 := AvcResponseCompletion_sdv_static_function_7#1_loop_L136(out_Tmp_378, out_Tmp_382, out_idx_10, in_Command_14, in_max_2, in_Opcode_3);
    return;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_7#1_loop_L136(in_Tmp_378: int, in_Tmp_382: int, in_idx_10: int, in_Command_14: int, in_max_2: int, in_Opcode_3: int) returns (out_Tmp_378: int, out_Tmp_382: int, out_idx_10: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcResponseCompletion_sdv_static_function_7#1_loop_L159(in_idx_9: int, in_Tmp_380: int, in_Tmp_381: int, in_Command_14: int, in_max_3: int, in_Opcode_3: int) returns (out_idx_9: int, out_Tmp_380: int, out_Tmp_381: int)
{

  entry:
    out_idx_9, out_Tmp_380, out_Tmp_381 := in_idx_9, in_Tmp_380, in_Tmp_381;
    goto L159, exit;

  exit:
    return;

  L159:
    goto anon145_Else;

  anon145_Else:
    assume {:partition} in_max_3 >= out_idx_9;
    out_Tmp_380 := out_idx_9;
    assume {:nonnull} in_Command_14 != 0;
    assume in_Command_14 > 0;
    havoc out_Tmp_381;
    assume {:nonnull} out_Tmp_381 != 0;
    assume out_Tmp_381 > 0;
    goto anon172_Then;

  anon172_Then:
    out_idx_9 := out_idx_9 + 1;
    goto anon172_Then_dummy;

  anon172_Then_dummy:
    call {:si_unique_call 2461} {:si_old_unique_call 1} out_idx_9, out_Tmp_380, out_Tmp_381 := AvcResponseCompletion_sdv_static_function_7#1_loop_L159(out_idx_9, out_Tmp_380, out_Tmp_381, in_Command_14, in_max_3, in_Opcode_3);
    return;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_7#1_loop_L159(in_idx_9: int, in_Tmp_380: int, in_Tmp_381: int, in_Command_14: int, in_max_3: int, in_Opcode_3: int) returns (out_idx_9: int, out_Tmp_380: int, out_Tmp_381: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcResponseCompletion_sdv_static_function_7#1_loop_L80(in_Tmp_378: int, in_SubunitAddr_8: int, in_ResponseCode_1: int, in_idx_9: int, in_Tmp_380: int, in_Tmp_381: int, in_Tmp_382: int, in_idx_10: int, in_Tmp_384: int, in_sdv_257: int, in_max_1: int, in_Command_14: int, in_Tmp_385: int, in_max_2: int, in_Entry_7: int, in_OpcodesMatch_1: int, in_idx_11: int, in_max_3: int, in_Tmp_387: int, in_Tmp_389: int, in_Tmp_390: int, in_Opcode_3: int) returns (out_Tmp_378: int, out_idx_9: int, out_Tmp_380: int, out_Tmp_381: int, out_Tmp_382: int, out_idx_10: int, out_Tmp_384: int, out_sdv_257: int, out_max_1: int, out_Command_14: int, out_Tmp_385: int, out_max_2: int, out_Entry_7: int, out_OpcodesMatch_1: int, out_idx_11: int, out_max_3: int, out_Tmp_387: int, out_Tmp_389: int, out_Tmp_390: int)
{
  var vslice_dummy_var_2779: int;

  entry:
    out_Tmp_378, out_idx_9, out_Tmp_380, out_Tmp_381, out_Tmp_382, out_idx_10, out_Tmp_384, out_sdv_257, out_max_1, out_Command_14, out_Tmp_385, out_max_2, out_Entry_7, out_OpcodesMatch_1, out_idx_11, out_max_3, out_Tmp_387, out_Tmp_389, out_Tmp_390 := in_Tmp_378, in_idx_9, in_Tmp_380, in_Tmp_381, in_Tmp_382, in_idx_10, in_Tmp_384, in_sdv_257, in_max_1, in_Command_14, in_Tmp_385, in_max_2, in_Entry_7, in_OpcodesMatch_1, in_idx_11, in_max_3, in_Tmp_387, in_Tmp_389, in_Tmp_390;
    goto L80, exit;

  exit:
    return;

  L80:
    goto anon123_Else;

  anon123_Else:
    out_Command_14 := out_Entry_7;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc vslice_dummy_var_2779;
    call {:si_unique_call 2462} out_sdv_257 := AvcSubunitAddrsEqual(in_SubunitAddr_8, vslice_dummy_var_2779);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} out_sdv_257 != 0;
    out_OpcodesMatch_1 := 0;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto L97;

  L97:
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} in_ResponseCode_1 != 8;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} in_ResponseCode_1 == 12;
    goto L147;

  L147:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    out_Command_14 := 0;
    goto L119;

  L119:
    goto anon136_Then;

  anon136_Then:
    assume {:partition} out_Command_14 == 0;
    goto L86;

  L86:
    assume {:nonnull} out_Entry_7 != 0;
    assume out_Entry_7 > 0;
    havoc out_Entry_7;
    out_Command_14 := 0;
    goto L86_dummy;

  L86_dummy:
    call {:si_unique_call 2466} {:si_old_unique_call 1} out_Tmp_378, out_idx_9, out_Tmp_380, out_Tmp_381, out_Tmp_382, out_idx_10, out_Tmp_384, out_sdv_257, out_max_1, out_Command_14, out_Tmp_385, out_max_2, out_Entry_7, out_OpcodesMatch_1, out_idx_11, out_max_3, out_Tmp_387, out_Tmp_389, out_Tmp_390 := AvcResponseCompletion_sdv_static_function_7#1_loop_L80(out_Tmp_378, in_SubunitAddr_8, in_ResponseCode_1, out_idx_9, out_Tmp_380, out_Tmp_381, out_Tmp_382, out_idx_10, out_Tmp_384, out_sdv_257, out_max_1, out_Command_14, out_Tmp_385, out_max_2, out_Entry_7, out_OpcodesMatch_1, out_idx_11, out_max_3, out_Tmp_387, out_Tmp_389, out_Tmp_390, in_Opcode_3);
    return;

  anon141_Then:
    goto L119;

  anon162_Then:
    assume {:partition} in_ResponseCode_1 != 12;
    out_Command_14 := 0;
    goto L119;

  anon127_Then:
    assume {:partition} in_ResponseCode_1 == 8;
    goto L147;

  anon152_Then:
    out_Command_14 := 0;
    goto L119;

  anon153_Then:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} in_ResponseCode_1 != 8;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} in_ResponseCode_1 != 10;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} in_ResponseCode_1 != 13;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} in_ResponseCode_1 == 15;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_390;
    assume {:nonnull} out_Tmp_390 != 0;
    assume out_Tmp_390 > 0;
    havoc out_max_1;
    out_idx_11 := 1;
    goto L110;

  L110:
    call {:si_unique_call 2465} out_Tmp_384, out_idx_11, out_Tmp_389 := AvcResponseCompletion_sdv_static_function_7#1_loop_L110(out_Tmp_384, out_max_1, out_Command_14, out_idx_11, out_Tmp_389, in_Opcode_3);
    goto L110_last;

  L110_last:
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} out_max_1 >= out_idx_11;
    out_Tmp_389 := out_idx_11;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_384;
    assume {:nonnull} out_Tmp_384 != 0;
    assume out_Tmp_384 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    out_OpcodesMatch_1 := 1;
    goto L111;

  L111:
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} out_OpcodesMatch_1 != 0;
    goto L119;

  anon135_Then:
    assume {:partition} out_OpcodesMatch_1 == 0;
    out_Command_14 := 0;
    goto L119;

  anon174_Then:
    out_idx_11 := out_idx_11 + 1;
    assume false;
    return;

  anon134_Then:
    assume {:partition} out_idx_11 > out_max_1;
    goto L111;

  anon132_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    out_OpcodesMatch_1 := 0;
    goto L361;

  L361:
    goto L111;

  anon133_Then:
    out_OpcodesMatch_1 := 1;
    goto L361;

  anon131_Then:
    out_Command_14 := 0;
    goto L119;

  anon163_Then:
    assume {:partition} in_ResponseCode_1 != 15;
    out_Command_14 := 0;
    goto L119;

  anon164_Then:
    assume {:partition} in_ResponseCode_1 == 13;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_387;
    assume {:nonnull} out_Tmp_387 != 0;
    assume out_Tmp_387 > 0;
    havoc out_max_2;
    out_idx_10 := 1;
    goto L136;

  L136:
    call {:si_unique_call 2464} out_Tmp_378, out_Tmp_382, out_idx_10 := AvcResponseCompletion_sdv_static_function_7#1_loop_L136(out_Tmp_378, out_Tmp_382, out_idx_10, out_Command_14, out_max_2, in_Opcode_3);
    goto L136_last;

  L136_last:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} out_max_2 >= out_idx_10;
    out_Tmp_382 := out_idx_10;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_378;
    assume {:nonnull} out_Tmp_378 != 0;
    assume out_Tmp_378 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    out_OpcodesMatch_1 := 1;
    goto L137;

  L137:
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} out_OpcodesMatch_1 == 0;
    out_Command_14 := 0;
    goto L119;

  anon140_Then:
    assume {:partition} out_OpcodesMatch_1 != 0;
    goto L119;

  anon173_Then:
    out_idx_10 := out_idx_10 + 1;
    assume false;
    return;

  anon139_Then:
    assume {:partition} out_idx_10 > out_max_2;
    goto L137;

  anon130_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    out_OpcodesMatch_1 := 0;
    goto L350;

  L350:
    goto L137;

  anon138_Then:
    out_OpcodesMatch_1 := 1;
    goto L350;

  anon165_Then:
    assume {:partition} in_ResponseCode_1 == 10;
    goto L100;

  L100:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    out_Command_14 := 0;
    goto L119;

  anon129_Then:
    goto L119;

  anon128_Then:
    assume {:partition} in_ResponseCode_1 == 8;
    goto L100;

  anon154_Then:
    goto L97;

  anon155_Then:
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} in_ResponseCode_1 != 8;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} in_ResponseCode_1 != 10;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} in_ResponseCode_1 != 11;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} in_ResponseCode_1 == 12;
    goto L153;

  L153:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_385;
    assume {:nonnull} out_Tmp_385 != 0;
    assume out_Tmp_385 > 0;
    havoc out_max_3;
    out_idx_9 := 1;
    goto L159;

  L159:
    call {:si_unique_call 2463} out_idx_9, out_Tmp_380, out_Tmp_381 := AvcResponseCompletion_sdv_static_function_7#1_loop_L159(out_idx_9, out_Tmp_380, out_Tmp_381, out_Command_14, out_max_3, in_Opcode_3);
    goto L159_last;

  L159_last:
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} out_max_3 >= out_idx_9;
    out_Tmp_380 := out_idx_9;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    havoc out_Tmp_381;
    assume {:nonnull} out_Tmp_381 != 0;
    assume out_Tmp_381 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    out_OpcodesMatch_1 := 1;
    goto L160;

  L160:
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} out_OpcodesMatch_1 == 0;
    out_Command_14 := 0;
    goto L119;

  anon146_Then:
    assume {:partition} out_OpcodesMatch_1 != 0;
    goto L119;

  anon172_Then:
    out_idx_9 := out_idx_9 + 1;
    assume false;
    return;

  anon145_Then:
    assume {:partition} out_idx_9 > out_max_3;
    goto L160;

  anon143_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    out_OpcodesMatch_1 := 0;
    goto L335;

  L335:
    goto L160;

  anon144_Then:
    out_OpcodesMatch_1 := 1;
    goto L335;

  anon159_Then:
    assume {:partition} in_ResponseCode_1 != 12;
    out_Command_14 := 0;
    goto L119;

  anon160_Then:
    assume {:partition} in_ResponseCode_1 == 11;
    goto L153;

  anon161_Then:
    assume {:partition} in_ResponseCode_1 == 10;
    goto L152;

  L152:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    out_Command_14 := 0;
    goto L119;

  anon142_Then:
    goto L119;

  anon126_Then:
    assume {:partition} in_ResponseCode_1 == 8;
    goto L152;

  anon170_Then:
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} in_ResponseCode_1 != 8;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} in_ResponseCode_1 != 9;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} in_ResponseCode_1 != 10;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} in_ResponseCode_1 == 15;
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    goto L174;

  L174:
    out_Command_14 := 0;
    goto L119;

  anon148_Then:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    goto L174;

  anon149_Then:
    goto L119;

  anon156_Then:
    assume {:partition} in_ResponseCode_1 != 15;
    out_Command_14 := 0;
    goto L119;

  anon157_Then:
    assume {:partition} in_ResponseCode_1 == 10;
    goto L171;

  L171:
    assume {:nonnull} out_Command_14 != 0;
    assume out_Command_14 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    out_Command_14 := 0;
    goto L119;

  anon147_Then:
    goto L119;

  anon158_Then:
    assume {:partition} in_ResponseCode_1 == 9;
    goto L171;

  anon125_Then:
    assume {:partition} in_ResponseCode_1 == 8;
    goto L171;

  anon124_Then:
    assume {:partition} out_sdv_257 == 0;
    goto L86;

  anon169_Then:
    goto L86;
}



procedure {:LoopProcedure} AvcResponseCompletion_sdv_static_function_7#1_loop_L80(in_Tmp_378: int, in_SubunitAddr_8: int, in_ResponseCode_1: int, in_idx_9: int, in_Tmp_380: int, in_Tmp_381: int, in_Tmp_382: int, in_idx_10: int, in_Tmp_384: int, in_sdv_257: int, in_max_1: int, in_Command_14: int, in_Tmp_385: int, in_max_2: int, in_Entry_7: int, in_OpcodesMatch_1: int, in_idx_11: int, in_max_3: int, in_Tmp_387: int, in_Tmp_389: int, in_Tmp_390: int, in_Opcode_3: int) returns (out_Tmp_378: int, out_idx_9: int, out_Tmp_380: int, out_Tmp_381: int, out_Tmp_382: int, out_idx_10: int, out_Tmp_384: int, out_sdv_257: int, out_max_1: int, out_Command_14: int, out_Tmp_385: int, out_max_2: int, out_Entry_7: int, out_OpcodesMatch_1: int, out_idx_11: int, out_max_3: int, out_Tmp_387: int, out_Tmp_389: int, out_Tmp_390: int);
  free ensures {:va_keep} out_sdv_257 == 1 || out_sdv_257 == 0 || out_sdv_257 == in_sdv_257;
  free ensures {:va_keep} out_Command_14 == 0 || out_Command_14 == in_Command_14;
  free ensures {:va_keep} out_OpcodesMatch_1 == 0 || out_OpcodesMatch_1 == 1 || out_OpcodesMatch_1 == in_OpcodesMatch_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcHandleUnitCommand_sdv_static_function_7#0_loop_L32(in_Tmp_425: int, in_Offset_4: int, in_VirtualDevExt: int, in_SubunitInfoBytes: int, in_Tmp_428: int, in_sdv_277: int, in_Entry_8: int, in_BytesUsed_4: int, in_Tmp_433: int) returns (out_Tmp_425: int, out_Offset_4: int, out_VirtualDevExt: int, out_Tmp_428: int, out_sdv_277: int, out_Entry_8: int, out_Tmp_433: int)
{

  entry:
    out_Tmp_425, out_Offset_4, out_VirtualDevExt, out_Tmp_428, out_sdv_277, out_Entry_8, out_Tmp_433 := in_Tmp_425, in_Offset_4, in_VirtualDevExt, in_Tmp_428, in_sdv_277, in_Entry_8, in_Tmp_433;
    goto L32, exit;

  exit:
    return;

  L32:
    goto anon15_Else;

  anon15_Else:
    call {:si_unique_call 2467} out_sdv_277 := sdv_containing_record(out_Entry_8, 72);
    out_VirtualDevExt := out_sdv_277;
    assume {:nonnull} in_BytesUsed_4 != 0;
    assume in_BytesUsed_4 > 0;
    call {:si_unique_call 2468} sdv_KeAcquireSpinLockAtDpcLevel(0);
    out_Tmp_425 := out_Offset_4;
    out_Tmp_428 := in_SubunitInfoBytes + out_Tmp_425 * 4;
    out_Tmp_433 := 32 - out_Offset_4;
    call {:si_unique_call 2469} AvcPackSubunitInfo(out_VirtualDevExt, out_Tmp_433, out_Tmp_428, in_BytesUsed_4);
    assume {:nonnull} in_BytesUsed_4 != 0;
    assume in_BytesUsed_4 > 0;
    havoc out_Offset_4;
    call {:si_unique_call 2470} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} out_Entry_8 != 0;
    assume out_Entry_8 > 0;
    havoc out_Entry_8;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    call {:si_unique_call 2471} {:si_old_unique_call 1} out_Tmp_425, out_Offset_4, out_VirtualDevExt, out_Tmp_428, out_sdv_277, out_Entry_8, out_Tmp_433 := AvcHandleUnitCommand_sdv_static_function_7#0_loop_L32(out_Tmp_425, out_Offset_4, out_VirtualDevExt, in_SubunitInfoBytes, out_Tmp_428, out_sdv_277, out_Entry_8, in_BytesUsed_4, out_Tmp_433);
    return;
}



procedure {:LoopProcedure} AvcHandleUnitCommand_sdv_static_function_7#0_loop_L32(in_Tmp_425: int, in_Offset_4: int, in_VirtualDevExt: int, in_SubunitInfoBytes: int, in_Tmp_428: int, in_sdv_277: int, in_Entry_8: int, in_BytesUsed_4: int, in_Tmp_433: int) returns (out_Tmp_425: int, out_Offset_4: int, out_VirtualDevExt: int, out_Tmp_428: int, out_sdv_277: int, out_Entry_8: int, out_Tmp_433: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation AvcHandleUnitCommand_sdv_static_function_7#1_loop_L32(in_Tmp_425: int, in_Offset_4: int, in_VirtualDevExt: int, in_SubunitInfoBytes: int, in_Tmp_428: int, in_sdv_277: int, in_Entry_8: int, in_BytesUsed_4: int, in_Tmp_433: int) returns (out_Tmp_425: int, out_Offset_4: int, out_VirtualDevExt: int, out_Tmp_428: int, out_sdv_277: int, out_Entry_8: int, out_Tmp_433: int)
{

  entry:
    out_Tmp_425, out_Offset_4, out_VirtualDevExt, out_Tmp_428, out_sdv_277, out_Entry_8, out_Tmp_433 := in_Tmp_425, in_Offset_4, in_VirtualDevExt, in_Tmp_428, in_sdv_277, in_Entry_8, in_Tmp_433;
    goto L32, exit;

  exit:
    return;

  L32:
    goto anon15_Else;

  anon15_Else:
    call {:si_unique_call 2472} out_sdv_277 := sdv_containing_record(out_Entry_8, 72);
    out_VirtualDevExt := out_sdv_277;
    assume {:nonnull} in_BytesUsed_4 != 0;
    assume in_BytesUsed_4 > 0;
    call {:si_unique_call 2473} sdv_KeAcquireSpinLockAtDpcLevel(0);
    out_Tmp_425 := out_Offset_4;
    out_Tmp_428 := in_SubunitInfoBytes + out_Tmp_425 * 4;
    out_Tmp_433 := 32 - out_Offset_4;
    call {:si_unique_call 2474} AvcPackSubunitInfo(out_VirtualDevExt, out_Tmp_433, out_Tmp_428, in_BytesUsed_4);
    assume {:nonnull} in_BytesUsed_4 != 0;
    assume in_BytesUsed_4 > 0;
    havoc out_Offset_4;
    call {:si_unique_call 2475} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} out_Entry_8 != 0;
    assume out_Entry_8 > 0;
    havoc out_Entry_8;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    call {:si_unique_call 2476} {:si_old_unique_call 1} out_Tmp_425, out_Offset_4, out_VirtualDevExt, out_Tmp_428, out_sdv_277, out_Entry_8, out_Tmp_433 := AvcHandleUnitCommand_sdv_static_function_7#1_loop_L32(out_Tmp_425, out_Offset_4, out_VirtualDevExt, in_SubunitInfoBytes, out_Tmp_428, out_sdv_277, out_Entry_8, in_BytesUsed_4, out_Tmp_433);
    return;
}



procedure {:LoopProcedure} AvcHandleUnitCommand_sdv_static_function_7#1_loop_L32(in_Tmp_425: int, in_Offset_4: int, in_VirtualDevExt: int, in_SubunitInfoBytes: int, in_Tmp_428: int, in_sdv_277: int, in_Entry_8: int, in_BytesUsed_4: int, in_Tmp_433: int) returns (out_Tmp_425: int, out_Offset_4: int, out_VirtualDevExt: int, out_Tmp_428: int, out_sdv_277: int, out_Entry_8: int, out_Tmp_433: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



procedure fakeMain() returns (Tmp_518: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_S_0, irp_copy_next, thread_status, irp_status, return_state, lowerDriverFailed, yogi_error, Mem_T.CurrentStackLocation_unnamed_tag_7, sdv_invoke_on_success, sdv_invoke_on_error, sdv_invoke_on_cancel, sdv_compFset, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.MinorFunction__IO_STACK_LOCATION, Mem_T.Status__IO_STATUS_BLOCK, Mem_T.CompletionRoutine__IO_STACK_LOCATION, Mem_T.PendingReturned__IRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(irp_copy_next) == 0 || old(irp_copy_next) == 1;
  free ensures {:va_keep} false || old(irp_status) == 1 || old(irp_status) == 0;
  free ensures {:va_keep} false || old(lowerDriverFailed) == 1 || old(lowerDriverFailed) == 0;
  free ensures {:va_keep} false || old(return_state) == 1 || old(return_state) == 2 || old(return_state) == 0;
  free ensures {:va_keep} false || old(thread_status) == 0 || old(thread_status) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || irp_copy_next == 0 || irp_copy_next == 1;
  free ensures {:va_keep} false || irp_status == 1 || irp_status == 0;
  free ensures {:va_keep} false || lowerDriverFailed == 1 || lowerDriverFailed == 0;
  free ensures {:va_keep} false || return_state == 1 || return_state == 2 || return_state == 0;
  free ensures {:va_keep} false || thread_status == 0 || thread_status == 1;



implementation {:entrypoint} fakeMain() returns (Tmp_518: int, dup_assertVar: bool)
{

  start:
    call Tmp_518, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


