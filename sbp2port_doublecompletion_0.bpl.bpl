var {:scalar} alloc: int;

var {:scalar} yogi_error: int;

var {:pointer} SLAM_guard_S_0: int;

var {:scalar} completion_called: int;

var {:scalar} Mem_T.DeviceExtension__DEVICE_OBJECT: [int]int;

var {:scalar} Mem_T.LogStart__DEBUG_LOG: [int]int;

var {:scalar} Mem_T.PWPP_PROJECT_CONTROL_BLOCK: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WPP_GLOBAL_Control: int;

const EventTraceConfigGuid: int;

const BUS1394_CLASS_GUID: int;

const WmiScsiAddressGuid: int;

const GUID_DEVINTERFACE_STORAGEPORT: int;

const GUID_DEVINTERFACE_FLOPPY: int;

const GUID_DEVICEDUMP_STORAGE_DEVICE: int;

const GUID_DEVINTERFACE_WRITEONCEDISK: int;

const WPP_TRACE_CONTROL_NULL_GUID: int;

const GUID_DEVINTERFACE_TAPE: int;

const GUID_DEVINTERFACE_VOLUME: int;

const GUID_DEVINTERFACE_CDCHANGER: int;

const GUID_DEVINTERFACE_MEDIUMCHANGER: int;

const ScsiRawInterfaceGuid: int;

const GUID_DEVINTERFACE_VMLUN: int;

const DefaultTraceSecurityGuid: int;

const GUID_DEVICEDUMP_DRIVER_STORAGE_PORT: int;

const GUID_DEVINTERFACE_PARTITION: int;

const GUID_DEVINTERFACE_CDROM: int;

const GUID_DEVINTERFACE_HIDDEN_VOLUME: int;

const GUID_DEVINTERFACE_DISK: int;

const SystemTraceControlGuid: int;

const EventTraceGuid: int;

const GUID_DEVINTERFACE_SES: int;

const WPP_ThisDir_CTLGUID_wppCtlGuid: int;

const DATAID_SBP_LUN_INFORMATION: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const p_sdv_fx_dev_object: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_start_irp_already_issued: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_harnessStackLocation: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_fx_dev_object: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_inside_init_entrypoint: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

const sdv_cancelFptr: int;

const SLAM_guard_S_0_init: int;

const KeTickCount: int;

const Sbp2LogLevel: int;

procedure {:origName "WPP_SF_qDDD"} WPP_SF_qDDD(actual_Logger: int, actual_id: int, actual_TraceGuid: int, actual_s_p_e_c_i_a_l_1: int, actual_s_p_e_c_i_a_l_2: int, actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qDDD"} WPP_SF_qDDD(actual_Logger: int, actual_id: int, actual_TraceGuid: int, actual_s_p_e_c_i_a_l_1: int, actual_s_p_e_c_i_a_l_2: int, actual_s_p_e_c_i_a_l_3: int, actual_s_p_e_c_i_a_l_4: int)
{
  var {:pointer} TraceGuid: int;
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 0} vslice_dummy_var_0 := __HAVOC_malloc(4);
    TraceGuid := actual_TraceGuid;
    return;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var {:scalar} Tmp_4: int;
  var vslice_dummy_var_1: int;

  anon0:
    call {:si_unique_call 1} Tmp_4 := __HAVOC_malloc(4);
    call {:si_unique_call 2} vslice_dummy_var_1 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_4 != 0;
    assume Tmp_4 > 0;
    return;
}



procedure {:origName "WPP_SF_qqDD"} WPP_SF_qqDD(actual_Logger_1: int, actual_id_1: int, actual_TraceGuid_1: int, actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int, actual_s_p_e_c_i_a_l_7: int, actual_s_p_e_c_i_a_l_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qqDD"} WPP_SF_qqDD(actual_Logger_1: int, actual_id_1: int, actual_TraceGuid_1: int, actual_s_p_e_c_i_a_l_5: int, actual_s_p_e_c_i_a_l_6: int, actual_s_p_e_c_i_a_l_7: int, actual_s_p_e_c_i_a_l_8: int)
{
  var {:pointer} TraceGuid_1: int;
  var vslice_dummy_var_2: int;

  anon0:
    call {:si_unique_call 3} vslice_dummy_var_2 := __HAVOC_malloc(4);
    TraceGuid_1 := actual_TraceGuid_1;
    return;
}



procedure {:origName "WPP_SF_qdD"} WPP_SF_qdD(actual_Logger_2: int, actual_id_2: int, actual_TraceGuid_2: int, actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int, actual_s_p_e_c_i_a_l_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qdD"} WPP_SF_qdD(actual_Logger_2: int, actual_id_2: int, actual_TraceGuid_2: int, actual_s_p_e_c_i_a_l_9: int, actual_s_p_e_c_i_a_l_10: int, actual_s_p_e_c_i_a_l_11: int)
{
  var {:pointer} TraceGuid_2: int;
  var vslice_dummy_var_3: int;

  anon0:
    call {:si_unique_call 4} vslice_dummy_var_3 := __HAVOC_malloc(4);
    TraceGuid_2 := actual_TraceGuid_2;
    return;
}



procedure {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_13: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_13 == -1073741670 || Tmp_13 == 0 || Tmp_13 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2_ProcessTextualDescriptor"} Sbp2_ProcessTextualDescriptor(actual_TextLeaf: int, actual_uniString: int) returns (Tmp_13: int)
{
  var {:scalar} i: int;
  var {:pointer} Tmp_14: int;
  var {:pointer} Tmp_15: int;
  var {:pointer} Tmp_16: int;
  var {:scalar} Tmp_17: int;
  var {:pointer} Tmp_18: int;
  var {:scalar} u: int;
  var {:scalar} Tmp_19: int;
  var {:pointer} Tmp_20: int;
  var {:scalar} sdv_4: int;
  var {:pointer} Tmp_21: int;
  var {:pointer} pData: int;
  var {:pointer} Tmp_22: int;
  var {:scalar} ulUnicode: int;
  var {:scalar} Tmp_23: int;
  var {:scalar} Tmp_24: int;
  var {:scalar} sdv_6: int;
  var {:scalar} Tmp_26: int;
  var {:pointer} sdv_7: int;
  var {:scalar} Tmp_27: int;
  var {:scalar} dataLength: int;
  var {:pointer} Tmp_28: int;
  var {:pointer} sdv_9: int;
  var {:pointer} Tmp_29: int;
  var {:scalar} Tmp_31: int;
  var {:pointer} Tmp_33: int;
  var {:scalar} Tmp_36: int;
  var {:scalar} Tmp_37: int;
  var {:pointer} Tmp_38: int;
  var {:scalar} status: int;
  var {:pointer} Tmp_39: int;
  var {:scalar} uChar: int;
  var {:scalar} Tmp_40: int;
  var {:scalar} Tmp_41: int;
  var {:pointer} TextLeaf: int;
  var {:pointer} uniString: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_974: int;
  var vslice_dummy_var_975: int;

  anon0:
    call {:si_unique_call 5} u := __HAVOC_malloc(20);
    call {:si_unique_call 6} vslice_dummy_var_4 := __HAVOC_malloc(12);
    TextLeaf := actual_TextLeaf;
    uniString := actual_uniString;
    call {:si_unique_call 7} Tmp_20 := __HAVOC_malloc(4);
    call {:si_unique_call 8} Tmp_22 := __HAVOC_malloc(4);
    call {:si_unique_call 9} Tmp_28 := __HAVOC_malloc(4);
    call {:si_unique_call 10} Tmp_29 := __HAVOC_malloc(4);
    call {:si_unique_call 11} Tmp_38 := __HAVOC_malloc(4);
    status := 0;
    pData := 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L20;

  L20:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_29;
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_33;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_17;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc vslice_dummy_var_974;
    call {:si_unique_call 12} WPP_SF_S(Tmp_17, 122, Tmp_33, vslice_dummy_var_974);
    goto L21;

  L21:
    Tmp_13 := status;
    goto L1;

  L1:
    return;

  anon59_Then:
    goto L21;

  anon76_Then:
    goto L21;

  anon58_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L21;

  anon75_Then:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} u != 0;
    assume u > 0;
    assume {:nonnull} u != 0;
    assume u > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    dataLength := 0;
    goto L37;

  L37:
    ulUnicode := sdv_6;
    Tmp_37 := dataLength * 4 + 2;
    call {:si_unique_call 13} sdv_7 := ExAllocatePoolWithTag(512, Tmp_37, 846226003);
    pData := sdv_7;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} pData == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_28;
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_39;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_36;
    call {:si_unique_call 14} WPP_SF_(Tmp_36, 123, Tmp_39);
    goto L138;

  L138:
    status := -1073741670;
    goto L108;

  L108:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} pData != 0;
    call {:si_unique_call 15} sdv_ExFreePool(0);
    goto L116;

  L116:
    Tmp_13 := status;
    goto L1;

  anon69_Then:
    assume {:partition} pData == 0;
    goto L116;

  anon74_Then:
    goto L138;

  anon84_Then:
    goto L138;

  anon73_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L138;

  anon78_Then:
    assume {:partition} pData != 0;
    Tmp_31 := dataLength * 4 + 2;
    call {:si_unique_call 16} sdv_RtlZeroMemory(0, Tmp_31);
    Tmp_40 := dataLength * 4;
    call {:si_unique_call 17} sdv_RtlCopyMemory(0, 0, Tmp_40);
    i := 0;
    goto L60;

  L60:
    call {:si_unique_call 18} i, Tmp_14, Tmp_16, Tmp_20, Tmp_21, Tmp_26, Tmp_27, uChar := Sbp2_ProcessTextualDescriptor_loop_L60(i, Tmp_14, Tmp_16, Tmp_20, Tmp_21, pData, ulUnicode, Tmp_26, Tmp_27, dataLength, uChar);
    goto L60_last;

  L60_last:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} dataLength * 4 > i;
    Tmp_16 := pData;
    assume {:nonnull} Tmp_16 != 0;
    assume Tmp_16 > 0;
    havoc uChar;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} uChar != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} uChar == 44;
    goto L70;

  L70:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_20;
    assume {:nonnull} Tmp_20 != 0;
    assume Tmp_20 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    Tmp_27 := uChar;
    havoc Tmp_21;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_26;
    call {:si_unique_call 19} WPP_SF_D(Tmp_26, 124, Tmp_21, Tmp_27);
    goto L71;

  L71:
    Tmp_14 := pData;
    assume {:nonnull} Tmp_14 != 0;
    assume Tmp_14 > 0;
    goto L80;

  L80:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    i := i + 1;
    goto L81;

  L81:
    i := i + 1;
    goto L81_dummy;

  L81_dummy:
    assume false;
    return;

  anon65_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    goto L81;

  anon64_Then:
    goto L71;

  anon80_Then:
    goto L71;

  anon63_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L71;

  anon61_Then:
    assume {:partition} uChar != 44;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} 32 <= uChar;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} uChar <= 127;
    goto L80;

  anon66_Then:
    assume {:partition} 127 < uChar;
    goto L70;

  anon62_Then:
    assume {:partition} uChar < 32;
    goto L70;

  anon79_Then:
    assume {:partition} uChar == 0;
    goto L61;

  L61:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_24;
    call {:si_unique_call 20} sdv_9 := ExAllocatePoolWithTag(512, Tmp_24, 846226003);
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_38;
    assume {:nonnull} Tmp_38 != 0;
    assume Tmp_38 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    havoc Tmp_15;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_19;
    call {:si_unique_call 21} WPP_SF_(Tmp_19, 125, Tmp_15);
    goto L128;

  L128:
    status := -1073741670;
    goto L108;

  anon72_Then:
    goto L128;

  anon83_Then:
    goto L128;

  anon71_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L128;

  anon81_Then:
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc Tmp_23;
    call {:si_unique_call 22} sdv_RtlZeroMemory(0, Tmp_23);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(ulUnicode, 0) != 0;
    call {:si_unique_call 23} vslice_dummy_var_5 := corral_nondet();
    goto L107;

  L107:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_22;
    assume {:nonnull} Tmp_22 != 0;
    assume Tmp_22 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    havoc Tmp_18;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_41;
    assume {:nonnull} uniString != 0;
    assume uniString > 0;
    havoc vslice_dummy_var_975;
    call {:si_unique_call 24} WPP_SF_S(Tmp_41, 126, Tmp_18, vslice_dummy_var_975);
    goto L108;

  anon70_Then:
    goto L108;

  anon82_Then:
    goto L108;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L108;

  anon67_Then:
    assume {:partition} BAND(ulUnicode, 0) == 0;
    call {:si_unique_call 25} RtlInitAnsiString(0, 0);
    call {:si_unique_call 26} status := RtlAnsiStringToUnicodeString(0, 0, 0);
    goto L107;

  anon60_Then:
    assume {:partition} i >= dataLength * 4;
    goto L61;

  anon77_Then:
    assume {:nonnull} u != 0;
    assume u > 0;
    havoc dataLength;
    goto L37;

  anon57_Then:
    goto L20;
}



procedure {:origName "Sbp2GetConfigPacket"} Sbp2GetConfigPacket(actual_FdoExtension: int, actual_Packet: int, actual_Generation: int) returns (Tmp_58: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2GetConfigPacket"} Sbp2GetConfigPacket(actual_FdoExtension: int, actual_Packet: int, actual_Generation: int) returns (Tmp_58: int)
{
  var {:pointer} Tmp_59: int;
  var {:pointer} Tmp_60: int;
  var {:pointer} unitDependentDirectory: int;
  var {:pointer} Tmp_61: int;
  var {:pointer} Tmp_62: int;
  var {:pointer} Tmp_63: int;
  var {:scalar} Tmp_64: int;
  var {:pointer} Tmp_65: int;
  var {:pointer} Tmp_66: int;
  var {:pointer} pdoExtension_1: int;
  var {:pointer} Tmp_67: int;
  var {:pointer} Tmp_68: int;
  var {:pointer} Tmp_69: int;
  var {:pointer} Tmp_70: int;
  var {:pointer} Tmp_71: int;
  var {:pointer} Tmp_72: int;
  var {:pointer} Tmp_73: int;
  var {:pointer} Tmp_74: int;
  var {:pointer} Tmp_75: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:pointer} Tmp_78: int;
  var {:pointer} Tmp_79: int;
  var {:pointer} Tmp_81: int;
  var {:pointer} Tmp_82: int;
  var {:pointer} Tmp_83: int;
  var {:pointer} Tmp_84: int;
  var {:pointer} Tmp_85: int;
  var {:pointer} Tmp_86: int;
  var {:scalar} Tmp_87: int;
  var {:scalar} Tmp_88: int;
  var {:pointer} Tmp_89: int;
  var {:pointer} Tmp_90: int;
  var {:pointer} Tmp_91: int;
  var {:pointer} Tmp_92: int;
  var {:pointer} Tmp_93: int;
  var {:scalar} Tmp_94: int;
  var {:pointer} Tmp_95: int;
  var {:pointer} Tmp_96: int;
  var {:pointer} Tmp_97: int;
  var {:scalar} Tmp_98: int;
  var {:pointer} vendorLeaf: int;
  var {:scalar} Tmp_99: int;
  var {:pointer} Tmp_100: int;
  var {:pointer} unitDirectory: int;
  var {:scalar} Tmp_101: int;
  var {:pointer} Tmp_102: int;
  var {:scalar} Tmp_103: int;
  var {:scalar} status_2: int;
  var {:pointer} Tmp_104: int;
  var {:pointer} Tmp_105: int;
  var {:pointer} Tmp_106: int;
  var {:pointer} Tmp_107: int;
  var {:pointer} Tmp_108: int;
  var {:pointer} Tmp_109: int;
  var {:pointer} modelLeaf: int;
  var {:pointer} Tmp_110: int;
  var {:pointer} Tmp_111: int;
  var {:pointer} FdoExtension: int;
  var {:pointer} Packet: int;
  var {:pointer} Generation: int;
  var vslice_dummy_var_976: int;
  var vslice_dummy_var_977: int;
  var vslice_dummy_var_978: int;
  var vslice_dummy_var_979: int;
  var vslice_dummy_var_980: int;
  var vslice_dummy_var_981: int;
  var vslice_dummy_var_982: int;
  var vslice_dummy_var_983: int;

  anon0:
    FdoExtension := actual_FdoExtension;
    Packet := actual_Packet;
    Generation := actual_Generation;
    call {:si_unique_call 27} Tmp_59 := __HAVOC_malloc(4);
    call {:si_unique_call 28} Tmp_63 := __HAVOC_malloc(4);
    call {:si_unique_call 29} Tmp_74 := __HAVOC_malloc(4);
    call {:si_unique_call 30} Tmp_76 := __HAVOC_malloc(4);
    call {:si_unique_call 31} Tmp_100 := __HAVOC_malloc(4);
    call {:si_unique_call 32} Tmp_104 := __HAVOC_malloc(4);
    call {:si_unique_call 33} Tmp_105 := __HAVOC_malloc(4);
    call {:si_unique_call 34} Tmp_109 := __HAVOC_malloc(4);
    pdoExtension_1 := FdoExtension;
    unitDirectory := 0;
    unitDependentDirectory := 0;
    vendorLeaf := 0;
    modelLeaf := 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_91;
    assume {:nonnull} Tmp_91 != 0;
    assume Tmp_91 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_95;
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_79;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_107;
    assume {:nonnull} Tmp_107 != 0;
    assume Tmp_107 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_97;
    assume {:nonnull} Tmp_97 != 0;
    assume Tmp_97 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_108;
    assume {:nonnull} Tmp_108 != 0;
    assume Tmp_108 > 0;
    call {:si_unique_call 35} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} status_2 < 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_74;
    assume {:nonnull} Tmp_74 != 0;
    assume Tmp_74 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    havoc Tmp_85;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_103;
    call {:si_unique_call 36} WPP_SF_D(Tmp_103, 50, Tmp_85, status_2);
    goto L66;

  L66:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} unitDirectory != 0;
    call {:si_unique_call 37} sdv_ExFreePool(0);
    goto L67;

  L67:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} unitDependentDirectory != 0;
    call {:si_unique_call 38} sdv_ExFreePool(0);
    goto L71;

  L71:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} vendorLeaf != 0;
    call {:si_unique_call 39} sdv_ExFreePool(0);
    goto L75;

  L75:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} modelLeaf != 0;
    call {:si_unique_call 40} sdv_ExFreePool(0);
    goto L79;

  L79:
    Tmp_58 := status_2;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon93_Then:
    assume {:partition} modelLeaf == 0;
    goto L79;

  anon92_Then:
    assume {:partition} vendorLeaf == 0;
    goto L75;

  anon91_Then:
    assume {:partition} unitDependentDirectory == 0;
    goto L71;

  anon90_Then:
    assume {:partition} unitDirectory == 0;
    goto L67;

  anon111_Then:
    goto L66;

  anon126_Then:
    goto L66;

  anon110_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L66;

  anon85_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_70;
    assume {:nonnull} Tmp_70 != 0;
    assume Tmp_70 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_63;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    havoc Tmp_73;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_88;
    call {:si_unique_call 41} WPP_SF_q(Tmp_88, 52, Tmp_73, FdoExtension);
    goto L182;

  L182:
    status_2 := -1073741621;
    goto L66;

  anon109_Then:
    goto L182;

  anon125_Then:
    goto L182;

  anon108_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L182;

  anon113_Then:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_72;
    assume {:nonnull} Tmp_72 != 0;
    assume Tmp_72 > 0;
    havoc vslice_dummy_var_976;
    call {:si_unique_call 42} unitDirectory := ExAllocatePoolWithTag(512, vslice_dummy_var_976, -464166317);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} unitDirectory == 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_109;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    havoc Tmp_78;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_64;
    call {:si_unique_call 43} WPP_SF_(Tmp_64, 51, Tmp_78);
    goto L172;

  L172:
    status_2 := -1073741670;
    goto L66;

  anon107_Then:
    goto L172;

  anon124_Then:
    goto L172;

  anon106_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L172;

  anon86_Then:
    assume {:partition} unitDirectory != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_66;
    assume {:nonnull} Tmp_66 != 0;
    assume Tmp_66 > 0;
    havoc vslice_dummy_var_977;
    call {:si_unique_call 44} sdv_RtlZeroMemory(0, vslice_dummy_var_977);
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_96;
    assume {:nonnull} Tmp_96 != 0;
    assume Tmp_96 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_111;
    assume {:nonnull} Tmp_111 != 0;
    assume Tmp_111 > 0;
    havoc vslice_dummy_var_978;
    call {:si_unique_call 45} unitDependentDirectory := ExAllocatePoolWithTag(512, vslice_dummy_var_978, -464166317);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} unitDependentDirectory == 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_105;
    assume {:nonnull} Tmp_105 != 0;
    assume Tmp_105 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc Tmp_71;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_87;
    call {:si_unique_call 46} WPP_SF_(Tmp_87, 53, Tmp_71);
    goto L57;

  L57:
    status_2 := -1073741670;
    goto L66;

  anon89_Then:
    goto L57;

  anon123_Then:
    goto L57;

  anon88_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L57;

  anon87_Then:
    assume {:partition} unitDependentDirectory != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_75;
    assume {:nonnull} Tmp_75 != 0;
    assume Tmp_75 > 0;
    havoc vslice_dummy_var_979;
    call {:si_unique_call 47} sdv_RtlZeroMemory(0, vslice_dummy_var_979);
    goto L44;

  L44:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_61;
    assume {:nonnull} Tmp_61 != 0;
    assume Tmp_61 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_83;
    assume {:nonnull} Tmp_83 != 0;
    assume Tmp_83 > 0;
    havoc vslice_dummy_var_980;
    call {:si_unique_call 48} vendorLeaf := ExAllocatePoolWithTag(512, vslice_dummy_var_980, -329948589);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} vendorLeaf == 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_100;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    havoc Tmp_69;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_99;
    call {:si_unique_call 49} WPP_SF_(Tmp_99, 54, Tmp_69);
    goto L96;

  L96:
    status_2 := -1073741670;
    goto L66;

  anon96_Then:
    goto L96;

  anon122_Then:
    goto L96;

  anon95_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L96;

  anon94_Then:
    assume {:partition} vendorLeaf != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_86;
    assume {:nonnull} Tmp_86 != 0;
    assume Tmp_86 > 0;
    havoc vslice_dummy_var_981;
    call {:si_unique_call 50} sdv_RtlZeroMemory(0, vslice_dummy_var_981);
    goto L83;

  L83:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_93;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_84;
    assume {:nonnull} Tmp_84 != 0;
    assume Tmp_84 > 0;
    havoc vslice_dummy_var_982;
    call {:si_unique_call 51} modelLeaf := ExAllocatePoolWithTag(512, vslice_dummy_var_982, -329948589);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} modelLeaf == 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_104;
    assume {:nonnull} Tmp_104 != 0;
    assume Tmp_104 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    havoc Tmp_110;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_101;
    call {:si_unique_call 52} WPP_SF_(Tmp_101, 55, Tmp_110);
    goto L118;

  L118:
    status_2 := -1073741670;
    goto L66;

  anon99_Then:
    goto L118;

  anon121_Then:
    goto L118;

  anon98_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L118;

  anon97_Then:
    assume {:partition} modelLeaf != 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_92;
    assume {:nonnull} Tmp_92 != 0;
    assume Tmp_92 > 0;
    havoc vslice_dummy_var_983;
    call {:si_unique_call 53} sdv_RtlZeroMemory(0, vslice_dummy_var_983);
    goto L105;

  L105:
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_81;
    assume {:nonnull} Tmp_81 != 0;
    assume Tmp_81 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_77;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    call {:si_unique_call 54} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} status_2 < 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_76;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    havoc Tmp_82;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_98;
    call {:si_unique_call 55} WPP_SF_qD(Tmp_98, 56, Tmp_82, FdoExtension, status_2);
    goto L66;

  anon105_Then:
    goto L66;

  anon120_Then:
    goto L66;

  anon104_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L66;

  anon100_Then:
    assume {:partition} 0 <= status_2;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_106;
    assume {:nonnull} Generation != 0;
    assume Generation > 0;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_62;
    assume {:nonnull} Tmp_62 != 0;
    assume Tmp_62 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_60;
    assume {:nonnull} Tmp_60 != 0;
    assume Tmp_60 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_90;
    assume {:nonnull} FdoExtension != 0;
    assume FdoExtension > 0;
    assume {:nonnull} Tmp_90 != 0;
    assume Tmp_90 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_68;
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_65;
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_67;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    assume {:nonnull} Packet != 0;
    assume Packet > 0;
    havoc Tmp_102;
    assume {:nonnull} Tmp_102 != 0;
    assume Tmp_102 > 0;
    call {:si_unique_call 56} status_2 := Sbp2SendRequest#1(pdoExtension_1, Packet, 2);
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} yogi_error != 1;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} status_2 < 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_59;
    assume {:nonnull} Tmp_59 != 0;
    assume Tmp_59 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    havoc Tmp_89;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_94;
    call {:si_unique_call 57} WPP_SF_qD(Tmp_94, 57, Tmp_89, FdoExtension, status_2);
    goto L66;

  anon103_Then:
    goto L66;

  anon119_Then:
    goto L66;

  anon102_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L66;

  anon101_Then:
    assume {:partition} 0 <= status_2;
    Tmp_58 := status_2;
    goto L1;

  anon118_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L105;

  anon115_Then:
    goto L83;

  anon114_Then:
    goto L44;

  anon112_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2BusResetNotification"} Sbp2BusResetNotification(actual_FdoExtension_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2BusResetNotification"} Sbp2BusResetNotification(actual_FdoExtension_1: int)
{
  var {:pointer} Tmp_213: int;
  var {:pointer} busResetItem: int;
  var {:scalar} Tmp_216: int;
  var {:scalar} Tmp_217: int;
  var {:pointer} Tmp_218: int;
  var {:scalar} Tmp_219: int;
  var {:pointer} sdv_43: int;
  var {:pointer} Tmp_220: int;
  var {:pointer} Tmp_221: int;
  var {:scalar} status_5: int;
  var {:pointer} Tmp_222: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} Tmp_225: int;
  var {:scalar} Tmp_226: int;
  var {:pointer} FdoExtension_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;

  anon0:
    call {:si_unique_call 58} vslice_dummy_var_6 := __HAVOC_malloc(4);
    FdoExtension_1 := actual_FdoExtension_1;
    call {:si_unique_call 59} Tmp_221 := __HAVOC_malloc(4);
    call {:si_unique_call 60} Tmp_222 := __HAVOC_malloc(4);
    call {:si_unique_call 61} Tmp_223 := __HAVOC_malloc(4);
    call {:si_unique_call 62} Tmp_224 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_223;
    assume {:nonnull} Tmp_223 != 0;
    assume Tmp_223 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_220;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_226;
    call {:si_unique_call 63} WPP_SF_q(Tmp_226, 16, Tmp_220, FdoExtension_1);
    goto L1;

  L1:
    return;

  anon35_Then:
    goto L1;

  anon44_Then:
    goto L1;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon33_Then:
    call {:si_unique_call 64} status_5 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} status_5 < 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_213;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_217;
    call {:si_unique_call 65} WPP_SF_q(Tmp_217, 19, Tmp_213, FdoExtension_1);
    goto L1;

  anon43_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon36_Then:
    assume {:partition} 0 <= status_5;
    call {:si_unique_call 66} sdv_43 := ExAllocatePoolWithTag(512, 8, -344497581);
    busResetItem := sdv_43;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} busResetItem == 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_221;
    assume {:nonnull} Tmp_221 != 0;
    assume Tmp_221 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    havoc Tmp_225;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_216;
    call {:si_unique_call 67} WPP_SF_q(Tmp_216, 17, Tmp_225, FdoExtension_1);
    goto L59;

  L59:
    assume {:nonnull} FdoExtension_1 != 0;
    assume FdoExtension_1 > 0;
    call {:si_unique_call 68} vslice_dummy_var_7 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(FdoExtension_1), 0);
    goto L1;

  anon41_Then:
    goto L59;

  anon47_Then:
    goto L59;

  anon40_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon45_Then:
    assume {:partition} busResetItem != 0;
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    call {:si_unique_call 69} boogieTmp := IoAllocateWorkItem(0);
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} busResetItem != 0;
    assume busResetItem > 0;
    call {:si_unique_call 70} IoQueueWorkItem(0, li2bplFunctionConstant389, 0, 0);
    goto L1;

  anon37_Then:
    call {:si_unique_call 71} ExFreePoolWithTag(0, -344497581);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_222;
    assume {:nonnull} Tmp_222 != 0;
    assume Tmp_222 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L59;

  anon46_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto L59;

  anon39_Then:
    havoc Tmp_218;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_219;
    call {:si_unique_call 72} WPP_SF_q(Tmp_219, 18, Tmp_218, FdoExtension_1);
    goto L59;
}



procedure {:origName "WPP_SF_qDDDDDd"} WPP_SF_qDDDDDd(actual_Logger_3: int, actual_id_3: int, actual_TraceGuid_3: int, actual_s_p_e_c_i_a_l_12: int, actual_s_p_e_c_i_a_l_13: int, actual_s_p_e_c_i_a_l_14: int, actual_s_p_e_c_i_a_l_15: int, actual_s_p_e_c_i_a_l_16: int, actual_s_p_e_c_i_a_l_17: int, actual_s_p_e_c_i_a_l_18: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qDDDDDd"} WPP_SF_qDDDDDd(actual_Logger_3: int, actual_id_3: int, actual_TraceGuid_3: int, actual_s_p_e_c_i_a_l_12: int, actual_s_p_e_c_i_a_l_13: int, actual_s_p_e_c_i_a_l_14: int, actual_s_p_e_c_i_a_l_15: int, actual_s_p_e_c_i_a_l_16: int, actual_s_p_e_c_i_a_l_17: int, actual_s_p_e_c_i_a_l_18: int)
{
  var {:pointer} TraceGuid_3: int;
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 73} vslice_dummy_var_8 := __HAVOC_malloc(4);
    TraceGuid_3 := actual_TraceGuid_3;
    return;
}



procedure {:origName "WPP_SF_Dq"} WPP_SF_Dq(actual_Logger_4: int, actual_id_4: int, actual_TraceGuid_4: int, actual_s_p_e_c_i_a_l_19: int, actual_s_p_e_c_i_a_l_20: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_Dq"} WPP_SF_Dq(actual_Logger_4: int, actual_id_4: int, actual_TraceGuid_4: int, actual_s_p_e_c_i_a_l_19: int, actual_s_p_e_c_i_a_l_20: int)
{
  var {:pointer} TraceGuid_4: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 74} vslice_dummy_var_9 := __HAVOC_malloc(4);
    TraceGuid_4 := actual_TraceGuid_4;
    return;
}



procedure {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_FdoExtension_2: int, actual_Sbp2Req: int) returns (Tmp_233: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2Get1394ConfigInfo"} Sbp2Get1394ConfigInfo(actual_FdoExtension_2: int, actual_Sbp2Req: int) returns (Tmp_233: int)
{
  var {:pointer} Tmp_234: int;
  var {:pointer} Tmp_235: int;
  var {:pointer} Tmp_236: int;
  var {:scalar} Tmp_237: int;
  var {:scalar} Tmp_238: int;
  var {:pointer} Tmp_239: int;
  var {:scalar} Tmp_240: int;
  var {:pointer} Tmp_241: int;
  var {:scalar} Tmp_242: int;
  var {:pointer} Tmp_243: int;
  var {:pointer} Tmp_244: int;
  var {:pointer} Tmp_245: int;
  var {:scalar} sdv_48: int;
  var {:pointer} Tmp_246: int;
  var {:pointer} Tmp_247: int;
  var {:pointer} Tmp_248: int;
  var {:pointer} Tmp_249: int;
  var {:scalar} dependentLength: int;
  var {:pointer} sdv_50: int;
  var {:scalar} Tmp_250: int;
  var {:pointer} Tmp_251: int;
  var {:scalar} Tmp_253: int;
  var {:pointer} Tmp_254: int;
  var {:pointer} Tmp_255: int;
  var {:pointer} Tmp_256: int;
  var {:pointer} Tmp_257: int;
  var {:scalar} sdv_52: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Tmp_259: int;
  var {:pointer} Tmp_260: int;
  var {:scalar} Tmp_261: int;
  var {:scalar} Tmp_262: int;
  var {:pointer} Tmp_263: int;
  var {:scalar} Tmp_264: int;
  var {:scalar} sdv_54: int;
  var {:pointer} Tmp_265: int;
  var {:scalar} Tmp_266: int;
  var {:scalar} Tmp_267: int;
  var {:scalar} Tmp_268: int;
  var {:scalar} tmp: int;
  var {:pointer} Tmp_269: int;
  var {:pointer} Tmp_270: int;
  var {:pointer} Tmp_271: int;
  var {:scalar} sdv_55: int;
  var {:scalar} i_1: int;
  var {:pointer} Tmp_272: int;
  var {:pointer} genPacket: int;
  var {:pointer} Tmp_273: int;
  var {:scalar} Tmp_275: int;
  var {:pointer} getConfigInfo: int;
  var {:scalar} Tmp_276: int;
  var {:scalar} Tmp_277: int;
  var {:pointer} Tmp_278: int;
  var {:pointer} Tmp_279: int;
  var {:scalar} j: int;
  var {:scalar} Tmp_281: int;
  var {:scalar} sdv_56: int;
  var {:pointer} Tmp_282: int;
  var {:pointer} Tmp_283: int;
  var {:scalar} Tmp_284: int;
  var {:scalar} sdv_57: int;
  var {:scalar} unitDirEntries: int;
  var {:pointer} Tmp_286: int;
  var {:pointer} Tmp_287: int;
  var {:pointer} Tmp_289: int;
  var {:dopa} {:scalar} currentGeneration: int;
  var {:scalar} Tmp_290: int;
  var {:pointer} sdv_58: int;
  var {:pointer} Tmp_291: int;
  var {:pointer} Tmp_292: int;
  var {:pointer} vendorLeaf_1: int;
  var {:pointer} Tmp_293: int;
  var {:pointer} Tmp_295: int;
  var {:scalar} sdv_59: int;
  var {:scalar} status_6: int;
  var {:scalar} sdv_60: int;
  var {:pointer} Tmp_298: int;
  var {:scalar} offset: int;
  var {:pointer} modelLeaf_1: int;
  var {:pointer} Tmp_299: int;
  var {:scalar} Tmp_300: int;
  var {:pointer} unitDependentDirectory_1: int;
  var {:scalar} sdv_63: int;
  var {:scalar} sdv_64: int;
  var {:pointer} Tmp_301: int;
  var {:scalar} Tmp_302: int;
  var {:scalar} sdv_66: int;
  var {:pointer} Tmp_303: int;
  var {:scalar} sdv_67: int;
  var {:scalar} Tmp_304: int;
  var {:scalar} cromOffset: int;
  var {:pointer} Tmp_305: int;
  var {:pointer} Tmp_306: int;
  var {:scalar} Tmp_307: int;
  var {:pointer} Tmp_309: int;
  var {:pointer} Tmp_310: int;
  var {:scalar} directoryLength: int;
  var {:pointer} sdv_68: int;
  var {:pointer} Tmp_311: int;
  var {:pointer} Tmp_312: int;
  var {:pointer} Tmp_313: int;
  var {:scalar} modelIdCount: int;
  var {:scalar} Tmp_314: int;
  var {:scalar} dirInfoQuad: int;
  var {:pointer} Tmp_315: int;
  var {:scalar} oldIrql: int;
  var {:scalar} devListSize: int;
  var {:scalar} firstOne: int;
  var {:pointer} Tmp_316: int;
  var {:scalar} sdv_70: int;
  var {:pointer} Tmp_317: int;
  var {:pointer} Tmp_318: int;
  var {:pointer} Tmp_319: int;
  var {:scalar} sdv_71: int;
  var {:pointer} Tmp_320: int;
  var {:scalar} directoryLocation: int;
  var {:pointer} Tmp_321: int;
  var {:scalar} sbp2Device: int;
  var {:pointer} Tmp_322: int;
  var {:pointer} firstDevInfo: int;
  var {:scalar} Tmp_323: int;
  var {:pointer} Tmp_324: int;
  var {:pointer} Tmp_326: int;
  var {:scalar} sdv_75: int;
  var {:pointer} ModelLeaf: int;
  var {:pointer} Tmp_327: int;
  var {:pointer} ModelLeaf_1: int;
  var {:scalar} sdv_76: int;
  var {:scalar} Tmp_329: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} Tmp_331: int;
  var {:pointer} Tmp_332: int;
  var {:scalar} Tmp_333: int;
  var {:scalar} Tmp_334: int;
  var {:scalar} Tmp_335: int;
  var {:scalar} Tmp_336: int;
  var {:pointer} Tmp_337: int;
  var {:pointer} Tmp_338: int;
  var {:scalar} Tmp_339: int;
  var {:pointer} Tmp_340: int;
  var {:pointer} devInfo: int;
  var {:pointer} Tmp_341: int;
  var {:scalar} sdv_79: int;
  var {:scalar} sdv_80: int;
  var {:scalar} Tmp_342: int;
  var {:pointer} buffer: int;
  var {:scalar} Tmp_343: int;
  var {:scalar} retries: int;
  var {:scalar} dependentLocation: int;
  var {:scalar} Tmp_344: int;
  var {:scalar} Tmp_345: int;
  var {:pointer} Tmp_346: int;
  var {:pointer} unitDirectory_1: int;
  var {:pointer} ModelLeaf_2: int;
  var {:pointer} packet_1: int;
  var {:pointer} Tmp_347: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} info: int;
  var {:scalar} Tmp_349: int;
  var {:pointer} Tmp_350: int;
  var {:scalar} Tmp_351: int;
  var {:pointer} FdoExtension_2: int;
  var {:pointer} Sbp2Req: int;
  var boogieTmp: int;
  var vslice_dummy_var_984: int;
  var vslice_dummy_var_985: int;
  var vslice_dummy_var_986: int;
  var vslice_dummy_var_987: int;
  var vslice_dummy_var_988: int;
  var vslice_dummy_var_989: int;
  var vslice_dummy_var_990: int;
  var vslice_dummy_var_991: int;
  var vslice_dummy_var_992: int;
  var vslice_dummy_var_993: int;
  var vslice_dummy_var_994: int;
  var vslice_dummy_var_995: int;
  var vslice_dummy_var_996: int;

  anon0:
    call {:si_unique_call 75} genPacket := __HAVOC_malloc(4);
    call {:si_unique_call 76} currentGeneration := __HAVOC_malloc(4);
    call {:si_unique_call 77} cromOffset := __HAVOC_malloc(16);
    call {:si_unique_call 78} directoryLocation := __HAVOC_malloc(16);
    call {:si_unique_call 79} ModelLeaf := __HAVOC_malloc(4);
    call {:si_unique_call 80} ModelLeaf_1 := __HAVOC_malloc(4);
    call {:si_unique_call 81} dependentLocation := __HAVOC_malloc(16);
    call {:si_unique_call 82} ModelLeaf_2 := __HAVOC_malloc(4);
    call {:si_unique_call 83} packet_1 := __HAVOC_malloc(4);
    FdoExtension_2 := actual_FdoExtension_2;
    Sbp2Req := actual_Sbp2Req;
    call {:si_unique_call 84} Tmp_239 := __HAVOC_malloc(4);
    call {:si_unique_call 85} Tmp_243 := __HAVOC_malloc(4);
    call {:si_unique_call 86} Tmp_246 := __HAVOC_malloc(4);
    call {:si_unique_call 87} Tmp_249 := __HAVOC_malloc(4);
    call {:si_unique_call 88} Tmp_256 := __HAVOC_malloc(2680);
    call {:si_unique_call 89} Tmp_263 := __HAVOC_malloc(4);
    call {:si_unique_call 90} Tmp_273 := __HAVOC_malloc(4);
    call {:si_unique_call 91} Tmp_287 := __HAVOC_malloc(4);
    call {:si_unique_call 92} Tmp_293 := __HAVOC_malloc(4);
    call {:si_unique_call 93} Tmp_295 := __HAVOC_malloc(2680);
    call {:si_unique_call 94} Tmp_301 := __HAVOC_malloc(4);
    call {:si_unique_call 95} Tmp_306 := __HAVOC_malloc(4);
    call {:si_unique_call 96} Tmp_309 := __HAVOC_malloc(4);
    call {:si_unique_call 97} Tmp_310 := __HAVOC_malloc(4);
    call {:si_unique_call 98} Tmp_312 := __HAVOC_malloc(4);
    call {:si_unique_call 99} Tmp_313 := __HAVOC_malloc(2680);
    call {:si_unique_call 100} Tmp_318 := __HAVOC_malloc(4);
    call {:si_unique_call 101} Tmp_330 := __HAVOC_malloc(4);
    call {:si_unique_call 102} Tmp_331 := __HAVOC_malloc(4);
    call {:si_unique_call 103} Tmp_332 := __HAVOC_malloc(4);
    call {:si_unique_call 104} Tmp_337 := __HAVOC_malloc(2680);
    call {:si_unique_call 105} Tmp_338 := __HAVOC_malloc(4);
    call {:si_unique_call 106} Tmp_346 := __HAVOC_malloc(4);
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc devListSize;
    modelIdCount := 0;
    unitDirEntries := 0;
    sbp2Device := 0;
    firstOne := 0;
    unitDirectory_1 := 0;
    unitDependentDirectory_1 := 0;
    modelLeaf_1 := 0;
    vendorLeaf_1 := 0;
    buffer := 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 107} AllocateIrpAndIrb(FdoExtension_2, packet_1);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_984;
    call {:si_unique_call 108} status_6 := Sbp2GetConfigPacket(FdoExtension_2, vslice_dummy_var_984, currentGeneration);
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:partition} yogi_error != 1;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume {:partition} status_6 < 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_332;
    assume {:nonnull} Tmp_332 != 0;
    assume Tmp_332 > 0;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    havoc Tmp_348;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_335;
    call {:si_unique_call 109} WPP_SF_Dq(Tmp_335, 31, Tmp_348, status_6, FdoExtension_2);
    goto L136;

  L136:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_985;
    call {:si_unique_call 110} DeAllocateIrpAndIrb(FdoExtension_2, vslice_dummy_var_985);
    goto L137;

  L137:
    goto anon313_Then, anon313_Else;

  anon313_Else:
    assume {:partition} unitDirectory_1 != 0;
    call {:si_unique_call 111} sdv_ExFreePool(0);
    goto L141;

  L141:
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume {:partition} unitDependentDirectory_1 != 0;
    call {:si_unique_call 112} sdv_ExFreePool(0);
    goto L145;

  L145:
    goto anon315_Then, anon315_Else;

  anon315_Else:
    assume {:partition} vendorLeaf_1 != 0;
    call {:si_unique_call 113} sdv_ExFreePool(0);
    goto L149;

  L149:
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume {:partition} modelLeaf_1 != 0;
    call {:si_unique_call 114} sdv_ExFreePool(0);
    goto L153;

  L153:
    goto anon317_Then, anon317_Else;

  anon317_Else:
    assume {:partition} Sbp2Req != 0;
    goto L158;

  L158:
    Tmp_233 := status_6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon317_Then:
    assume {:partition} Sbp2Req == 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    goto L158;

  anon316_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L153;

  anon315_Then:
    assume {:partition} vendorLeaf_1 == 0;
    goto L149;

  anon314_Then:
    assume {:partition} unitDependentDirectory_1 == 0;
    goto L145;

  anon313_Then:
    assume {:partition} unitDirectory_1 == 0;
    goto L141;

  anon312_Then:
    goto L137;

  anon377_Then:
    goto L136;

  anon444_Then:
    goto L136;

  anon376_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L136;

  anon298_Then:
    assume {:partition} 0 <= status_6;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_245;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    getConfigInfo := GetConfigurationInformation_unnamed_tag_72(u__IRB(Tmp_245));
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc vendorLeaf_1;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc modelLeaf_1;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc unitDirectory_1;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    call {:si_unique_call 115} directoryLength := corral_nondet();
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    havoc unitDependentDirectory_1;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} getConfigInfo != 0;
    assume getConfigInfo > 0;
    call {:si_unique_call 116} dependentLength := corral_nondet();
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:partition} Sbp2Req != 0;
    goto L67;

  L67:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_337;
    firstDevInfo := Tmp_337;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    i_1 := 1;
    goto L71;

  L71:
    call {:si_unique_call 117} Tmp_238, i_1, Tmp_344 := Sbp2Get1394ConfigInfo_loop_L71(Tmp_238, i_1, directoryLength, Tmp_344, unitDirectory_1, Sbp2Req);
    goto L71_last;

  L71_last:
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume {:partition} Sbp2Req != 0;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume {:partition} directoryLength > i_1;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_344;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:partition} Tmp_344 == 129;
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_238;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  L95:
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_330;
    assume {:nonnull} Tmp_330 != 0;
    assume Tmp_330 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_333;
    havoc Tmp_322;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_345;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc vslice_dummy_var_986;
    call {:si_unique_call 118} WPP_SF_qqDD(Tmp_345, 33, Tmp_322, FdoExtension_2, unitDirectory_1, vslice_dummy_var_986, Tmp_333);
    goto L101;

  L101:
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 119} Sbp2ParseTextLeaf(FdoExtension_2, unitDirectory_1, cromOffset, Buffer_unnamed_tag_74(RetrieveTextLeaf_unnamed_tag_73(u__SBP2_REQUEST(Sbp2Req))));
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    goto anon306_Then, anon306_Else;

  anon306_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_338;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    havoc Tmp_289;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_300;
    call {:si_unique_call 120} WPP_SF_q(Tmp_300, 34, Tmp_289, FdoExtension_2);
    goto L124;

  L124:
    status_6 := -1073741823;
    goto L72;

  L72:
    i_1 := 1;
    goto L132;

  L132:
    call {:si_unique_call 121} Tmp_234, Tmp_235, Tmp_236, Tmp_240, Tmp_241, Tmp_243, Tmp_244, Tmp_247, Tmp_248, Tmp_249, dependentLength, sdv_50, Tmp_250, Tmp_253, Tmp_255, Tmp_256, Tmp_257, Tmp_259, Tmp_260, Tmp_264, Tmp_265, Tmp_266, Tmp_268, tmp, Tmp_270, Tmp_271, i_1, Tmp_272, Tmp_273, Tmp_275, Tmp_276, Tmp_277, Tmp_278, j, Tmp_281, Tmp_282, Tmp_283, Tmp_284, unitDirEntries, Tmp_286, Tmp_287, Tmp_290, sdv_58, Tmp_291, Tmp_292, Tmp_293, status_6, Tmp_298, offset, Tmp_299, unitDependentDirectory_1, Tmp_301, Tmp_302, Tmp_303, Tmp_304, Tmp_305, Tmp_306, Tmp_310, sdv_68, Tmp_311, Tmp_312, Tmp_313, modelIdCount, Tmp_314, dirInfoQuad, Tmp_315, devListSize, firstOne, Tmp_316, Tmp_317, Tmp_318, Tmp_319, Tmp_320, sbp2Device, Tmp_323, Tmp_324, Tmp_326, Tmp_327, Tmp_329, Tmp_334, Tmp_336, Tmp_339, Tmp_340, devInfo, Tmp_342, Tmp_343, retries, Tmp_346, Tmp_347, info, Tmp_349, Tmp_350, Tmp_351 := Sbp2Get1394ConfigInfo_loop_L132(Tmp_234, Tmp_235, Tmp_236, Tmp_240, Tmp_241, Tmp_243, Tmp_244, sdv_48, Tmp_247, Tmp_248, Tmp_249, dependentLength, sdv_50, Tmp_250, Tmp_253, Tmp_255, Tmp_256, Tmp_257, sdv_52, Tmp_259, Tmp_260, Tmp_264, sdv_54, Tmp_265, Tmp_266, Tmp_268, tmp, Tmp_270, Tmp_271, sdv_55, i_1, Tmp_272, genPacket, Tmp_273, Tmp_275, Tmp_276, Tmp_277, Tmp_278, j, Tmp_281, sdv_56, Tmp_282, Tmp_283, Tmp_284, unitDirEntries, Tmp_286, Tmp_287, currentGeneration, Tmp_290, sdv_58, Tmp_291, Tmp_292, vendorLeaf_1, Tmp_293, sdv_59, status_6, sdv_60, Tmp_298, offset, modelLeaf_1, Tmp_299, unitDependentDirectory_1, sdv_63, sdv_64, Tmp_301, Tmp_302, sdv_66, Tmp_303, sdv_67, Tmp_304, cromOffset, Tmp_305, Tmp_306, Tmp_310, directoryLength, sdv_68, Tmp_311, Tmp_312, Tmp_313, modelIdCount, Tmp_314, dirInfoQuad, Tmp_315, devListSize, firstOne, Tmp_316, sdv_70, Tmp_317, Tmp_318, Tmp_319, sdv_71, Tmp_320, directoryLocation, sbp2Device, firstDevInfo, Tmp_323, Tmp_324, Tmp_326, sdv_75, ModelLeaf, Tmp_327, ModelLeaf_1, sdv_76, Tmp_329, Tmp_334, Tmp_336, Tmp_339, Tmp_340, devInfo, sdv_79, sdv_80, Tmp_342, Tmp_343, retries, dependentLocation, Tmp_346, unitDirectory_1, ModelLeaf_2, packet_1, Tmp_347, info, Tmp_349, Tmp_350, Tmp_351, FdoExtension_2, Sbp2Req);
    goto L132_last;

  L132_last:
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume {:partition} Sbp2Req != 0;
    goto L134;

  L134:
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume {:partition} Sbp2Req != 0;
    goto L136;

  anon310_Then:
    assume {:partition} Sbp2Req == 0;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume {:partition} sbp2Device == 0;
    goto L163;

  L163:
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_239;
    assume {:nonnull} Tmp_239 != 0;
    assume Tmp_239 > 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    havoc Tmp_341;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_307;
    call {:si_unique_call 122} WPP_SF_q(Tmp_307, 49, Tmp_341, FdoExtension_2);
    goto L164;

  L164:
    status_6 := -1073741621;
    goto L136;

  anon320_Then:
    goto L164;

  anon398_Then:
    goto L164;

  anon319_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L164;

  anon311_Then:
    assume {:partition} sbp2Device != 0;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume {:partition} 2 > unitDirEntries;
    goto L163;

  anon318_Then:
    assume {:partition} unitDirEntries >= 2;
    goto L136;

  anon308_Then:
    assume {:partition} Sbp2Req == 0;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume {:partition} directoryLength > i_1;
    Tmp_343 := devListSize;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_256;
    devInfo := Tmp_256 + Tmp_343 * 268;
    Tmp_316 := unitDirectory_1;
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} Tmp_316 != 0;
    assume Tmp_316 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    goto L371;

  L371:
    i_1 := i_1 + 1;
    goto L371_dummy;

  L371_dummy:
    assume false;
    return;

  anon378_Then:
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} firstOne != 0;
    retries := 3;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    havoc offset;
    call {:si_unique_call 123} sdv_58 := IoAllocateMdl(0, dependentLength, 0, 0, 0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_283;
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_350;
    assume {:nonnull} Tmp_350 != 0;
    assume Tmp_350 > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_331;
    assume {:nonnull} Tmp_331 != 0;
    assume Tmp_331 > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    havoc Tmp_279;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_261;
    call {:si_unique_call 124} WPP_SF_q(Tmp_261, 42, Tmp_279, FdoExtension_2);
    goto L136;

  anon347_Then:
    goto L136;

  anon433_Then:
    goto L136;

  anon346_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L136;

  anon412_Then:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_244;
    assume {:nonnull} Tmp_244 != 0;
    assume Tmp_244 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_247;
    assume {:nonnull} Tmp_247 != 0;
    assume Tmp_247 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_315;
    assume {:nonnull} Tmp_315 != 0;
    assume Tmp_315 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_270;
    assume {:nonnull} Tmp_270 != 0;
    assume Tmp_270 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_235;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_317;
    assume {:nonnull} Tmp_317 != 0;
    assume Tmp_317 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_319;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_234;
    assume {:nonnull} Tmp_234 != 0;
    assume Tmp_234 > 0;
    goto L214;

  L214:
    call {:si_unique_call 125} Tmp_243, Tmp_249, Tmp_255, Tmp_265, Tmp_271, Tmp_286, status_6, Tmp_303, Tmp_320, Tmp_323, Tmp_339, retries := Sbp2Get1394ConfigInfo_loop_L214(Tmp_243, Tmp_249, Tmp_255, Tmp_265, Tmp_271, genPacket, Tmp_286, currentGeneration, status_6, Tmp_303, Tmp_320, Tmp_323, Tmp_339, retries, packet_1, FdoExtension_2);
    goto L214_last;

  L214_last:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_271;
    assume {:nonnull} Tmp_271 != 0;
    assume Tmp_271 > 0;
    assume {:nonnull} currentGeneration != 0;
    assume currentGeneration > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_996;
    call {:si_unique_call 176} status_6 := Sbp2SendRequest#1(FdoExtension_2, vslice_dummy_var_996, 2);
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:partition} yogi_error != 1;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume {:partition} status_6 >= 0;
    goto L222;

  L222:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc vslice_dummy_var_987;
    call {:si_unique_call 126} DeAllocateIrpAndIrb(FdoExtension_2, vslice_dummy_var_987);
    goto L223;

  L223:
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:partition} status_6 >= 0;
    call {:si_unique_call 127} dirInfoQuad := corral_nondet();
    dependentLength := dirInfoQuad * 4;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 128} IoFreeMdl(0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_298;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:partition} dependentLength > 256;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_263;
    assume {:nonnull} Tmp_263 != 0;
    assume Tmp_263 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    havoc Tmp_269;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_242;
    call {:si_unique_call 129} WPP_SF_qD(Tmp_242, 45, Tmp_269, FdoExtension_2, dependentLength);
    goto L136;

  anon327_Then:
    goto L136;

  anon415_Then:
    goto L136;

  anon326_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L136;

  anon414_Then:
    assume {:partition} 256 >= dependentLength;
    call {:si_unique_call 130} sdv_ExFreePool(0);
    Tmp_334 := dependentLength + 4;
    call {:si_unique_call 131} sdv_50 := ExAllocatePoolWithTag(512, Tmp_334, -464166317);
    unitDependentDirectory_1 := sdv_50;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:partition} unitDependentDirectory_1 != 0;
    Tmp_253 := dependentLength + 4;
    call {:si_unique_call 132} sdv_68 := IoAllocateMdl(0, Tmp_253, 0, 0, 0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_272;
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_248;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    j := 1;
    goto L273;

  L273:
    call {:si_unique_call 133} Tmp_250, Tmp_259, Tmp_260, Tmp_277, Tmp_278, j, Tmp_281, Tmp_282, unitDirEntries, Tmp_292, status_6, Tmp_305, Tmp_306, Tmp_310, Tmp_311, modelIdCount, Tmp_314, devListSize, Tmp_326 := Sbp2Get1394ConfigInfo_loop_L273(dependentLength, Tmp_250, Tmp_259, Tmp_260, sdv_54, Tmp_277, Tmp_278, j, Tmp_281, Tmp_282, unitDirEntries, Tmp_292, vendorLeaf_1, status_6, sdv_60, offset, unitDependentDirectory_1, sdv_66, cromOffset, Tmp_305, Tmp_306, Tmp_310, Tmp_311, modelIdCount, Tmp_314, devListSize, firstDevInfo, Tmp_326, devInfo, sdv_79, ModelLeaf_2, packet_1, FdoExtension_2);
    goto L273_last;

  L273_last:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_259;
    assume {:nonnull} Tmp_259 != 0;
    assume Tmp_259 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_260;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_278;
    assume {:nonnull} Tmp_278 != 0;
    assume Tmp_278 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_326;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_311;
    assume {:nonnull} Tmp_311 != 0;
    assume Tmp_311 > 0;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc vslice_dummy_var_995;
    call {:si_unique_call 175} status_6 := Sbp2SendRequest#1(FdoExtension_2, vslice_dummy_var_995, 2);
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:partition} yogi_error != 1;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:partition} status_6 < 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_246;
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    havoc Tmp_254;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_237;
    call {:si_unique_call 134} WPP_SF_qD(Tmp_237, 46, Tmp_254, FdoExtension_2, status_6);
    goto L385;

  L385:
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 135} IoFreeMdl(0);
    goto L136;

  anon338_Then:
    goto L385;

  anon428_Then:
    goto L385;

  anon337_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L385;

  anon328_Then:
    assume {:partition} 0 <= status_6;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_250;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} Tmp_250 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_310;
    assume {:nonnull} Tmp_310 != 0;
    assume Tmp_310 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc Tmp_292;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_281;
    call {:si_unique_call 136} WPP_SF_q(Tmp_281, 47, Tmp_292, FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 137} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L311;

  L311:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    goto L316;

  L316:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto L318;

  L318:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L320;

  L320:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L322;

  L322:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L286;

  L286:
    Tmp_305 := unitDependentDirectory_1;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    goto L364;

  L364:
    j := j + 1;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} INTDIV(dependentLength, 4) < j;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 138} IoFreeMdl(0);
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    havoc Tmp_241;
    assume {:nonnull} Tmp_241 != 0;
    assume Tmp_241 > 0;
    goto L371;

  anon424_Then:
    assume {:partition} j <= INTDIV(dependentLength, 4);
    goto anon424_Then_dummy;

  anon424_Then_dummy:
    assume false;
    return;

  anon386_Then:
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_277;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} Tmp_277 != 23;
    goto L364;

  anon425_Then:
    assume {:partition} Tmp_277 == 23;
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 139} Sbp2ParseTextLeaf(FdoExtension_2, unitDependentDirectory_1, cromOffset, ModelLeaf_2);
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_306;
    assume {:nonnull} Tmp_306 != 0;
    assume Tmp_306 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc Tmp_282;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_314;
    call {:si_unique_call 140} WPP_SF_q(Tmp_314, 48, Tmp_282, FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_988;
    call {:si_unique_call 141} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_988, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 142} sdv_ExFreePool(0);
    assume {:nonnull} ModelLeaf_2 != 0;
    assume ModelLeaf_2 > 0;
    goto L344;

  L344:
    modelIdCount := modelIdCount + 1;
    goto L364;

  anon336_Then:
    goto L349;

  anon427_Then:
    goto L349;

  anon335_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L349;

  anon334_Then:
    goto L344;

  anon426_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon387_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L364;

  anon423_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L364;

  anon333_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L322;

  anon332_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L320;

  anon331_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L318;

  anon422_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L316;

  anon330_Then:
    goto L300;

  anon421_Then:
    goto L300;

  anon329_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon420_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L311;

  anon419_Then:
    assume {:partition} Tmp_250 != 20;
    goto L286;

  anon418_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon417_Then:
    goto L136;

  anon416_Then:
    assume {:partition} unitDependentDirectory_1 == 0;
    goto L136;

  anon325_Then:
    assume {:partition} 0 > status_6;
    assume {:nonnull} packet_1 != 0;
    assume packet_1 > 0;
    call {:si_unique_call 143} IoFreeMdl(0);
    goto L136;

  anon324_Then:
    goto L223;

  anon322_Then:
    assume {:partition} 0 > status_6;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} retries > 1;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_249;
    assume {:nonnull} Tmp_249 != 0;
    assume Tmp_249 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc Tmp_286;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_323;
    call {:si_unique_call 144} WPP_SF_qD(Tmp_323, 43, Tmp_286, FdoExtension_2, status_6);
    goto L401;

  L401:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    goto L412;

  L412:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_320;
    assume {:nonnull} Tmp_320 != 0;
    assume Tmp_320 > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_265;
    assume {:nonnull} Tmp_265 != 0;
    assume Tmp_265 > 0;
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc vslice_dummy_var_989;
    call {:si_unique_call 145} status_6 := Sbp2SendRequest#1(FdoExtension_2, vslice_dummy_var_989, 2);
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:partition} yogi_error != 1;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} status_6 < 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_243;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc Tmp_255;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_339;
    call {:si_unique_call 146} WPP_SF_qD(Tmp_339, 44, Tmp_255, FdoExtension_2, status_6);
    goto L424;

  L424:
    assume {:nonnull} genPacket != 0;
    assume genPacket > 0;
    havoc Tmp_303;
    assume {:nonnull} Tmp_303 != 0;
    assume Tmp_303 > 0;
    assume {:nonnull} currentGeneration != 0;
    assume currentGeneration > 0;
    goto L413;

  L413:
    retries := retries - 1;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} retries == 0;
    goto L222;

  anon431_Then:
    assume {:partition} retries != 0;
    goto anon431_Then_dummy;

  anon431_Then_dummy:
    assume false;
    return;

  anon345_Then:
    goto L424;

  anon432_Then:
    goto L424;

  anon344_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L424;

  anon343_Then:
    assume {:partition} 0 <= status_6;
    goto L424;

  anon430_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon342_Then:
    goto L413;

  anon340_Then:
    call {:si_unique_call 147} AllocateIrpAndIrb(FdoExtension_2, genPacket);
    goto L412;

  anon341_Then:
    goto L401;

  anon429_Then:
    goto L401;

  anon339_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L401;

  anon323_Then:
    assume {:partition} 1 >= retries;
    goto L222;

  anon413_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon321_Then:
    assume {:partition} firstOne == 0;
    firstOne := 1;
    j := 0;
    goto L445;

  L445:
    call {:si_unique_call 148} Tmp_236, Tmp_268, Tmp_275, Tmp_276, j, unitDirEntries, Tmp_287, Tmp_291, status_6, Tmp_299, Tmp_301, Tmp_302, modelIdCount, devListSize, Tmp_318, Tmp_327, Tmp_329 := Sbp2Get1394ConfigInfo_loop_L445(Tmp_236, sdv_48, dependentLength, Tmp_268, sdv_55, Tmp_275, Tmp_276, j, unitDirEntries, Tmp_287, Tmp_291, vendorLeaf_1, status_6, modelLeaf_1, Tmp_299, unitDependentDirectory_1, Tmp_301, Tmp_302, sdv_67, cromOffset, modelIdCount, devListSize, Tmp_318, firstDevInfo, Tmp_327, ModelLeaf_1, sdv_76, Tmp_329, devInfo, dependentLocation, FdoExtension_2);
    goto L445_last;

  L445_last:
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:partition} dependentLength > j;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_275;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} Tmp_275 == 20;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} devListSize > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L459;

  L459:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_318;
    assume {:nonnull} Tmp_318 != 0;
    assume Tmp_318 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc Tmp_299;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_276;
    call {:si_unique_call 149} WPP_SF_q(Tmp_276, 40, Tmp_299, FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 150} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L476;

  L476:
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    goto L480;

  L480:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    goto L482;

  L482:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L484;

  L484:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L486;

  L486:
    unitDirEntries := unitDirEntries + 1;
    goto L448;

  L448:
    Tmp_291 := unitDependentDirectory_1;
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} Tmp_291 != 0;
    assume Tmp_291 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} Tmp_291 != 0;
    assume Tmp_291 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    goto L542;

  L542:
    j := j + 1;
    goto L542_dummy;

  L542_dummy:
    assume false;
    return;

  anon388_Then:
    assume {:nonnull} unitDependentDirectory_1 != 0;
    assume unitDependentDirectory_1 > 0;
    havoc Tmp_268;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} Tmp_268 != 23;
    goto L542;

  anon439_Then:
    assume {:partition} Tmp_268 == 23;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} dependentLocation != 0;
    assume dependentLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 151} Sbp2ParseTextLeaf(FdoExtension_2, unitDependentDirectory_1, cromOffset, ModelLeaf_1);
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} ModelLeaf_1 != 0;
    assume ModelLeaf_1 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_990;
    call {:si_unique_call 152} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_990, uniModelId__DEVICE_INFORMATION(devInfo));
    call {:si_unique_call 153} sdv_ExFreePool(0);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_287;
    assume {:nonnull} Tmp_287 != 0;
    assume Tmp_287 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc Tmp_327;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_302;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    havoc vslice_dummy_var_991;
    call {:si_unique_call 154} WPP_SF_S(Tmp_302, 41, Tmp_327, vslice_dummy_var_991);
    goto L512;

  L512:
    modelIdCount := modelIdCount + 1;
    goto L542;

  anon361_Then:
    goto L512;

  anon441_Then:
    goto L512;

  anon360_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L512;

  anon359_Then:
    goto L512;

  anon440_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon358_Then:
    goto L512;

  anon389_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L542;

  anon438_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L542;

  anon355_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L486;

  anon354_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L484;

  anon353_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L482;

  anon437_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L480;

  anon352_Then:
    goto L465;

  anon436_Then:
    goto L465;

  anon351_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L465;

  anon350_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L476;

  anon435_Then:
    assume {:partition} 0 >= devListSize;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_301;
    assume {:nonnull} Tmp_301 != 0;
    assume Tmp_301 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc Tmp_236;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_329;
    call {:si_unique_call 155} WPP_SF_q(Tmp_329, 39, Tmp_236, FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 156} status_6 := Sbp2_ProcessTextualDescriptor(modelLeaf_1, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L459;

  anon357_Then:
    goto L493;

  anon442_Then:
    goto L493;

  anon356_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L493;

  anon349_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L459;

  anon434_Then:
    assume {:partition} Tmp_275 != 20;
    goto L448;

  anon348_Then:
    assume {:partition} j >= dependentLength;
    goto L371;

  anon379_Then:
    assume {:nonnull} unitDirectory_1 != 0;
    assume unitDirectory_1 > 0;
    havoc Tmp_290;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:partition} Tmp_290 == 23;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:partition} devListSize >= modelIdCount;
    Tmp_264 := modelIdCount;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_313;
    info := Tmp_313 + Tmp_264 * 268;
    assume {:nonnull} info != 0;
    assume info > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    assume {:nonnull} directoryLocation != 0;
    assume directoryLocation > 0;
    assume {:nonnull} cromOffset != 0;
    assume cromOffset > 0;
    call {:si_unique_call 157} Sbp2ParseTextLeaf(FdoExtension_2, unitDirectory_1, cromOffset, ModelLeaf);
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} ModelLeaf != 0;
    assume ModelLeaf > 0;
    assume {:nonnull} info != 0;
    assume info > 0;
    havoc vslice_dummy_var_992;
    call {:si_unique_call 158} status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_992, uniModelId__DEVICE_INFORMATION(info));
    call {:si_unique_call 159} sdv_ExFreePool(0);
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_293;
    assume {:nonnull} Tmp_293 != 0;
    assume Tmp_293 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    havoc Tmp_257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_266;
    assume {:nonnull} info != 0;
    assume info > 0;
    havoc vslice_dummy_var_993;
    call {:si_unique_call 160} WPP_SF_S(Tmp_266, 38, Tmp_257, vslice_dummy_var_993);
    goto L562;

  L562:
    modelIdCount := modelIdCount + 1;
    goto L371;

  anon365_Then:
    goto L562;

  anon411_Then:
    goto L562;

  anon364_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L562;

  anon363_Then:
    goto L562;

  anon410_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon409_Then:
    goto L562;

  anon362_Then:
    assume {:partition} modelIdCount > devListSize;
    goto L371;

  anon408_Then:
    assume {:partition} Tmp_290 != 23;
    goto L371;

  anon380_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    sbp2Device := 1;
    goto L371;

  anon381_Then:
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} sdv_63 != 0;
    Tmp_342 := 1;
    goto L605;

  L605:
    tmp := Tmp_342;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:partition} tmp != 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto L371;

  anon407_Then:
    assume {:partition} tmp == 0;
    goto L371;

  anon366_Then:
    assume {:partition} sdv_63 == 0;
    Tmp_342 := 0;
    goto L605;

  anon382_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_312;
    assume {:nonnull} Tmp_312 != 0;
    assume Tmp_312 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    havoc Tmp_340;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_240;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc vslice_dummy_var_994;
    call {:si_unique_call 161} WPP_SF_qD(Tmp_240, 35, Tmp_340, FdoExtension_2, vslice_dummy_var_994);
    goto L371;

  anon367_Then:
    goto L371;

  anon406_Then:
    goto L371;

  anon405_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L371;

  anon383_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc Tmp_351;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:partition} 8 > Tmp_351;
    Tmp_284 := 8;
    goto L633;

  L633:
    tmp := Tmp_284;
    tmp := tmp * 4;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} 16 > tmp - 20;
    Tmp_349 := tmp - 20;
    goto L638;

  L638:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    call {:si_unique_call 162} tmp := corral_nondet();
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon404_Then:
    assume {:partition} tmp - 20 >= 16;
    Tmp_349 := 16;
    goto L638;

  anon403_Then:
    assume {:partition} Tmp_351 >= 8;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    havoc Tmp_284;
    goto L633;

  anon384_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon385_Then:
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon399_Then:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:partition} devListSize != 0;
    goto L661;

  L661:
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} vendorLeaf_1 != 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_346;
    assume {:nonnull} Tmp_346 != 0;
    assume Tmp_346 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    havoc Tmp_324;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_304;
    call {:si_unique_call 163} WPP_SF_q(Tmp_304, 37, Tmp_324, FdoExtension_2);
    goto L667;

  L667:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 164} status_6 := Sbp2_ProcessTextualDescriptor(vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(devInfo));
    goto L678;

  L678:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    devListSize := devListSize + 1;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} firstDevInfo != 0;
    assume firstDevInfo > 0;
    unitDirEntries := unitDirEntries + 1;
    goto L371;

  anon371_Then:
    goto L667;

  anon401_Then:
    goto L667;

  anon370_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L667;

  anon369_Then:
    assume {:partition} vendorLeaf_1 == 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L678;

  anon400_Then:
    assume {:partition} devListSize == 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} modelLeaf_1 != 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_273;
    assume {:nonnull} Tmp_273 != 0;
    assume Tmp_273 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    havoc Tmp_347;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_336;
    call {:si_unique_call 165} WPP_SF_q(Tmp_336, 36, Tmp_347, FdoExtension_2);
    goto L693;

  L693:
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    call {:si_unique_call 166} status_6 := Sbp2_ProcessTextualDescriptor(modelLeaf_1, uniModelId__DEVICE_INFORMATION(devInfo));
    goto L661;

  anon373_Then:
    goto L693;

  anon402_Then:
    goto L693;

  anon372_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L693;

  anon368_Then:
    assume {:partition} modelLeaf_1 == 0;
    goto L661;

  anon309_Then:
    assume {:partition} i_1 >= directoryLength;
    goto L134;

  anon307_Then:
    goto L124;

  anon443_Then:
    goto L124;

  anon306_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L124;

  anon305_Then:
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    assume {:nonnull} Sbp2Req != 0;
    assume Sbp2Req > 0;
    call {:si_unique_call 167} boogieTmp := corral_nondet();
    status_6 := 0;
    goto L72;

  anon397_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon304_Then:
    goto L101;

  anon396_Then:
    goto L101;

  anon395_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L101;

  anon302_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_309;
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    goto L95;

  anon394_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    goto L95;

  anon303_Then:
    havoc Tmp_258;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_262;
    call {:si_unique_call 168} WPP_SF_qq(Tmp_262, 32, Tmp_258, FdoExtension_2, Sbp2Req);
    goto L95;

  anon393_Then:
    goto L75;

  L75:
    i_1 := i_1 + 1;
    goto L75_dummy;

  L75_dummy:
    assume false;
    return;

  anon392_Then:
    assume {:partition} Tmp_344 != 129;
    goto L75;

  anon301_Then:
    goto L75;

  anon300_Then:
    assume {:partition} i_1 >= directoryLength;
    goto L72;

  anon299_Then:
    assume {:partition} Sbp2Req == 0;
    goto L72;

  anon391_Then:
    assume {:partition} Sbp2Req == 0;
    call {:si_unique_call 169} Tmp_251 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    call {:si_unique_call 170} sdv_KeAcquireSpinLock(0, Tmp_251);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    havoc oldIrql;
    i_1 := 0;
    goto L705;

  L705:
    call {:si_unique_call 171} Tmp_267, i_1, Tmp_295, Tmp_321, devInfo, buffer := Sbp2Get1394ConfigInfo_loop_L705(Tmp_267, i_1, Tmp_295, Tmp_321, devInfo, buffer, FdoExtension_2);
    goto L705_last;

  L705_last:
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    Tmp_267 := i_1;
    assume {:nonnull} FdoExtension_2 != 0;
    assume FdoExtension_2 > 0;
    havoc Tmp_295;
    devInfo := Tmp_295 + Tmp_267 * 268;
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    Tmp_321 := uniModelId__DEVICE_INFORMATION(devInfo);
    assume {:nonnull} Tmp_321 != 0;
    assume Tmp_321 > 0;
    call {:si_unique_call 172} buffer := _InlineInterlockedExchangePointer(Buffer__STRING(Tmp_321), 0);
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:partition} buffer != 0;
    call {:si_unique_call 173} sdv_ExFreePool(0);
    assume {:nonnull} devInfo != 0;
    assume devInfo > 0;
    goto L715;

  L715:
    i_1 := i_1 + 1;
    goto L715_dummy;

  L715_dummy:
    assume false;
    return;

  anon375_Then:
    assume {:partition} buffer == 0;
    goto L715;

  anon374_Then:
    call {:si_unique_call 174} sdv_KeReleaseSpinLock(0, oldIrql);
    devListSize := 0;
    goto L67;

  anon390_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon297_Then:
    Tmp_233 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2BusResetNotificationEx"} Sbp2BusResetNotificationEx(actual_BusResetData: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2BusResetNotificationEx"} Sbp2BusResetNotificationEx(actual_BusResetData: int)
{
  var {:pointer} Tmp_352: int;
  var {:pointer} Tmp_354: int;
  var {:scalar} Tmp_355: int;
  var {:pointer} busResetItem_1: int;
  var {:pointer} Tmp_356: int;
  var {:pointer} Tmp_357: int;
  var {:pointer} Tmp_358: int;
  var {:scalar} Tmp_359: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} sdv_84: int;
  var {:scalar} Tmp_361: int;
  var {:pointer} fdoExtension: int;
  var {:pointer} Tmp_362: int;
  var {:scalar} status_7: int;
  var {:pointer} Tmp_364: int;
  var {:scalar} Tmp_365: int;
  var {:pointer} BusResetData: int;
  var boogieTmp: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 177} vslice_dummy_var_10 := __HAVOC_malloc(4);
    BusResetData := actual_BusResetData;
    call {:si_unique_call 178} Tmp_354 := __HAVOC_malloc(4);
    call {:si_unique_call 179} Tmp_356 := __HAVOC_malloc(4);
    call {:si_unique_call 180} Tmp_360 := __HAVOC_malloc(4);
    call {:si_unique_call 181} Tmp_362 := __HAVOC_malloc(4);
    assume {:nonnull} BusResetData != 0;
    assume BusResetData > 0;
    havoc fdoExtension;
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_362;
    assume {:nonnull} Tmp_362 != 0;
    assume Tmp_362 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_364;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_361;
    call {:si_unique_call 182} WPP_SF_q(Tmp_361, 12, Tmp_364, fdoExtension);
    goto L1;

  L1:
    return;

  anon34_Then:
    goto L1;

  anon44_Then:
    goto L1;

  anon33_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon43_Then:
    call {:si_unique_call 183} status_7 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_7 < 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_356;
    assume {:nonnull} Tmp_356 != 0;
    assume Tmp_356 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_357;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_365;
    call {:si_unique_call 184} WPP_SF_q(Tmp_365, 15, Tmp_357, fdoExtension);
    goto L1;

  anon42_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon35_Then:
    assume {:partition} 0 <= status_7;
    call {:si_unique_call 185} sdv_84 := ExAllocatePoolWithTag(512, 8, -344497581);
    busResetItem_1 := sdv_84;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} busResetItem_1 == 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_360;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    havoc Tmp_358;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_359;
    call {:si_unique_call 186} WPP_SF_q(Tmp_359, 13, Tmp_358, fdoExtension);
    goto L61;

  L61:
    assume {:nonnull} fdoExtension != 0;
    assume fdoExtension > 0;
    call {:si_unique_call 187} vslice_dummy_var_11 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension), 0);
    goto L1;

  anon40_Then:
    goto L61;

  anon47_Then:
    goto L61;

  anon39_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L61;

  anon45_Then:
    assume {:partition} busResetItem_1 != 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    call {:si_unique_call 188} boogieTmp := IoAllocateWorkItem(0);
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} BusResetData != 0;
    assume BusResetData > 0;
    assume {:nonnull} busResetItem_1 != 0;
    assume busResetItem_1 > 0;
    call {:si_unique_call 189} IoQueueWorkItem(0, li2bplFunctionConstant389, 0, 0);
    goto L1;

  anon36_Then:
    call {:si_unique_call 190} ExFreePoolWithTag(0, -344497581);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L61;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_354;
    assume {:nonnull} Tmp_354 != 0;
    assume Tmp_354 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto L61;

  anon46_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto L61;

  anon38_Then:
    havoc Tmp_352;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_355;
    call {:si_unique_call 191} WPP_SF_q(Tmp_355, 14, Tmp_352, fdoExtension);
    goto L61;
}



procedure {:origName "WPP_SF_qDDDD"} WPP_SF_qDDDD(actual_Logger_5: int, actual_id_5: int, actual_TraceGuid_5: int, actual_s_p_e_c_i_a_l_21: int, actual_s_p_e_c_i_a_l_22: int, actual_s_p_e_c_i_a_l_23: int, actual_s_p_e_c_i_a_l_24: int, actual_s_p_e_c_i_a_l_25: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qDDDD"} WPP_SF_qDDDD(actual_Logger_5: int, actual_id_5: int, actual_TraceGuid_5: int, actual_s_p_e_c_i_a_l_21: int, actual_s_p_e_c_i_a_l_22: int, actual_s_p_e_c_i_a_l_23: int, actual_s_p_e_c_i_a_l_24: int, actual_s_p_e_c_i_a_l_25: int)
{
  var {:pointer} TraceGuid_5: int;
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 192} vslice_dummy_var_12 := __HAVOC_malloc(4);
    TraceGuid_5 := actual_TraceGuid_5;
    return;
}



procedure {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_FdoExtension_3: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ParseTextLeaf"} Sbp2ParseTextLeaf(actual_FdoExtension_3: int, actual_UnitDepDir: int, actual_ModelLeafLocation: int, actual_ModelLeaf_3: int)
{
  var {:scalar} i_2: int;
  var {:pointer} Tmp_503: int;
  var {:pointer} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_508: int;
  var {:scalar} waitValue_1: int;
  var {:pointer} pdoExtension_4: int;
  var {:pointer} Tmp_509: int;
  var {:scalar} Tmp_511: int;
  var {:pointer} Tmp_513: int;
  var {:pointer} leaf: int;
  var {:pointer} Tmp_515: int;
  var {:pointer} Tmp_516: int;
  var {:pointer} tModelLeaf: int;
  var {:pointer} Tmp_517: int;
  var {:pointer} Tmp_518: int;
  var {:pointer} Tmp_519: int;
  var {:scalar} Tmp_522: int;
  var {:pointer} Tmp_524: int;
  var {:pointer} sdv_146: int;
  var {:pointer} Tmp_525: int;
  var {:pointer} Tmp_526: int;
  var {:scalar} currentGeneration_1: int;
  var {:scalar} Tmp_527: int;
  var {:scalar} retries_1: int;
  var {:pointer} Tmp_528: int;
  var {:scalar} temp_1: int;
  var {:pointer} Tmp_529: int;
  var {:pointer} Tmp_530: int;
  var {:pointer} tModelLeafMdl: int;
  var {:pointer} Tmp_531: int;
  var {:pointer} Tmp_532: int;
  var {:pointer} Tmp_533: int;
  var {:scalar} leafLength: int;
  var {:pointer} Tmp_534: int;
  var {:scalar} Tmp_535: int;
  var {:pointer} Tmp_536: int;
  var {:pointer} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Tmp_539: int;
  var {:scalar} status_11: int;
  var {:pointer} packet_2: int;
  var {:pointer} Tmp_540: int;
  var {:scalar} Tmp_541: int;
  var {:scalar} event: int;
  var {:pointer} Tmp_544: int;
  var {:pointer} FdoExtension_3: int;
  var {:pointer} ModelLeafLocation: int;
  var {:pointer} ModelLeaf_3: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_997: int;
  var vslice_dummy_var_998: int;
  var vslice_dummy_var_999: int;
  var vslice_dummy_var_1000: int;
  var vslice_dummy_var_1001: int;
  var vslice_dummy_var_1002: int;
  var vslice_dummy_var_1003: int;
  var vslice_dummy_var_1004: int;
  var vslice_dummy_var_1005: int;
  var vslice_dummy_var_1006: int;

  anon0:
    call {:si_unique_call 193} waitValue_1 := __HAVOC_malloc(20);
    call {:si_unique_call 194} vslice_dummy_var_13 := __HAVOC_malloc(4);
    call {:si_unique_call 195} packet_2 := __HAVOC_malloc(4);
    call {:si_unique_call 196} event := __HAVOC_malloc(156);
    FdoExtension_3 := actual_FdoExtension_3;
    ModelLeafLocation := actual_ModelLeafLocation;
    ModelLeaf_3 := actual_ModelLeaf_3;
    call {:si_unique_call 197} Tmp_529 := __HAVOC_malloc(4);
    call {:si_unique_call 198} Tmp_532 := __HAVOC_malloc(4);
    call {:si_unique_call 199} Tmp_538 := __HAVOC_malloc(4);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    leaf := 0;
    tModelLeaf := 0;
    tModelLeafMdl := 0;
    pdoExtension_4 := FdoExtension_3;
    call {:si_unique_call 200} AllocateIrpAndIrb(pdoExtension_4, packet_2);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 201} tModelLeaf := ExAllocatePoolWithTag(512, 32, 846226003);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} tModelLeaf != 0;
    call {:si_unique_call 202} tModelLeafMdl := IoAllocateMdl(0, 32, 0, 0, 0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} tModelLeafMdl != 0;
    retries_1 := 3;
    goto L44;

  L44:
    call {:si_unique_call 203} Tmp_504, Tmp_509, Tmp_513, Tmp_518, Tmp_519, Tmp_522, Tmp_525, Tmp_526, currentGeneration_1, retries_1, Tmp_528, Tmp_530, Tmp_531, Tmp_532, Tmp_533, Tmp_539, status_11, Tmp_540, Tmp_544, vslice_dummy_var_14 := Sbp2ParseTextLeaf_loop_L44(Tmp_504, waitValue_1, pdoExtension_4, Tmp_509, Tmp_513, Tmp_518, Tmp_519, Tmp_522, Tmp_525, Tmp_526, currentGeneration_1, retries_1, Tmp_528, Tmp_530, tModelLeafMdl, Tmp_531, Tmp_532, Tmp_533, Tmp_539, status_11, packet_2, Tmp_540, event, Tmp_544, ModelLeafLocation, vslice_dummy_var_14);
    goto L44_last;

  L44_last:
    assume {:CounterLoop 3} {:Counter "retries_1"} true;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} retries_1 != 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_530;
    assume {:nonnull} Tmp_530 != 0;
    assume Tmp_530 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_531;
    assume {:nonnull} Tmp_531 != 0;
    assume Tmp_531 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_997;
    call {:si_unique_call 204} status_11 := Sbp2SendRequest#1(pdoExtension_4, vslice_dummy_var_997, 2);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} status_11 < 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_532;
    assume {:nonnull} Tmp_532 != 0;
    assume Tmp_532 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_513;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_522;
    call {:si_unique_call 205} WPP_SF_qD(Tmp_522, 58, Tmp_513, pdoExtension_4, status_11);
    goto L56;

  L56:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_528;
    assume {:nonnull} Tmp_528 != 0;
    assume Tmp_528 > 0;
    havoc currentGeneration_1;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_509;
    assume {:nonnull} Tmp_509 != 0;
    assume Tmp_509 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_526;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_533;
    assume {:nonnull} Tmp_533 != 0;
    assume Tmp_533 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_525;
    assume {:nonnull} Tmp_525 != 0;
    assume Tmp_525 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_544;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_544 != 0;
    assume Tmp_544 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_539;
    assume {:nonnull} Tmp_539 != 0;
    assume Tmp_539 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_504;
    assume {:nonnull} Tmp_504 != 0;
    assume Tmp_504 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_519;
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_518;
    assume {:nonnull} Tmp_518 != 0;
    assume Tmp_518 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_540;
    assume {:nonnull} Tmp_540 != 0;
    assume Tmp_540 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_998;
    call {:si_unique_call 206} status_11 := Sbp2SendRequest#1(pdoExtension_4, vslice_dummy_var_998, 2);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_11 < 0;
    call {:si_unique_call 207} KeInitializeEvent(event, 0, 0);
    assume {:nonnull} waitValue_1 != 0;
    assume waitValue_1 > 0;
    call {:si_unique_call 208} vslice_dummy_var_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_1);
    retries_1 := retries_1 - 1;
    goto anon55_Else_dummy;

  anon55_Else_dummy:
    assume false;
    return;

  anon55_Then:
    assume {:partition} 0 <= status_11;
    goto L45;

  L45:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} status_11 < 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_529;
    assume {:nonnull} Tmp_529 != 0;
    assume Tmp_529 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_517;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_527;
    call {:si_unique_call 209} WPP_SF_qD(Tmp_527, 59, Tmp_517, pdoExtension_4, status_11);
    goto L177;

  L177:
    call {:si_unique_call 210} IoFreeMdl(0);
    call {:si_unique_call 211} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_999;
    call {:si_unique_call 212} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_999);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon63_Then:
    goto L177;

  anon71_Then:
    goto L177;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L177;

  anon53_Then:
    assume {:partition} 0 <= status_11;
    call {:si_unique_call 213} leafLength := corral_nondet();
    Tmp_506 := tModelLeaf;
    assume {:nonnull} Tmp_506 != 0;
    assume Tmp_506 > 0;
    havoc temp_1;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} leafLength + 4 > 32;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 214} IoFreeMdl(0);
    call {:si_unique_call 215} sdv_ExFreePool(0);
    Tmp_535 := leafLength + 4;
    call {:si_unique_call 216} tModelLeaf := ExAllocatePoolWithTag(512, Tmp_535, 846226003);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} tModelLeaf != 0;
    Tmp_511 := leafLength + 4;
    call {:si_unique_call 217} sdv_146 := IoAllocateMdl(0, Tmp_511, 0, 0, 0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_524;
    assume {:nonnull} Tmp_524 != 0;
    assume Tmp_524 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_515;
    assume {:nonnull} Tmp_515 != 0;
    assume Tmp_515 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    goto L102;

  L102:
    i_2 := 1;
    Tmp_537 := tModelLeaf;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    goto L136;

  L136:
    call {:si_unique_call 218} i_2, Tmp_503, Tmp_505, Tmp_508, Tmp_534, Tmp_536, status_11 := Sbp2ParseTextLeaf_loop_L136(i_2, Tmp_503, Tmp_505, Tmp_508, pdoExtension_4, leafLength, Tmp_534, Tmp_536, status_11, packet_2, ModelLeafLocation);
    goto L136_last;

  L136_last:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_505;
    assume {:nonnull} ModelLeafLocation != 0;
    assume ModelLeafLocation > 0;
    assume {:nonnull} Tmp_505 != 0;
    assume Tmp_505 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_503;
    assume {:nonnull} Tmp_503 != 0;
    assume Tmp_503 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_534;
    assume {:nonnull} Tmp_534 != 0;
    assume Tmp_534 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_508;
    assume {:nonnull} Tmp_508 != 0;
    assume Tmp_508 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc Tmp_536;
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_1006;
    call {:si_unique_call 231} status_11 := Sbp2SendRequest#1(pdoExtension_4, vslice_dummy_var_1006, 2);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_11 < 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_538;
    assume {:nonnull} Tmp_538 != 0;
    assume Tmp_538 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    havoc Tmp_516;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_541;
    call {:si_unique_call 219} WPP_SF_qD(Tmp_541, 60, Tmp_516, pdoExtension_4, status_11);
    goto L159;

  L159:
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 220} IoFreeMdl(0);
    call {:si_unique_call 221} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_1000;
    call {:si_unique_call 222} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_1000);
    goto L1;

  anon61_Then:
    goto L159;

  anon70_Then:
    goto L159;

  anon60_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L159;

  anon59_Then:
    assume {:partition} 0 <= status_11;
    i_2 := i_2 + 1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} INTDIV(leafLength, 4) < i_2;
    leaf := tModelLeaf;
    assume {:nonnull} leaf != 0;
    assume leaf > 0;
    assume {:nonnull} ModelLeaf_3 != 0;
    assume ModelLeaf_3 > 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    call {:si_unique_call 223} IoFreeMdl(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_1001;
    call {:si_unique_call 224} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_1001);
    goto L1;

  anon69_Then:
    assume {:partition} i_2 <= INTDIV(leafLength, 4);
    goto anon69_Then_dummy;

  anon69_Then_dummy:
    assume false;
    return;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon67_Then:
    call {:si_unique_call 225} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_1002;
    call {:si_unique_call 226} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_1002);
    goto L1;

  anon58_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_1003;
    call {:si_unique_call 227} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_1003);
    goto L1;

  anon66_Then:
    assume {:partition} 32 >= leafLength + 4;
    goto L102;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L56;

  anon72_Then:
    goto L56;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon54_Then:
    assume {:partition} 0 <= status_11;
    goto L56;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon52_Then:
    assume {:partition} retries_1 == 0;
    goto L45;

  anon51_Then:
    assume {:partition} tModelLeafMdl == 0;
    call {:si_unique_call 228} sdv_ExFreePool(0);
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_1004;
    call {:si_unique_call 229} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_1004);
    goto L1;

  anon50_Then:
    assume {:partition} tModelLeaf == 0;
    assume {:nonnull} packet_2 != 0;
    assume packet_2 > 0;
    havoc vslice_dummy_var_1005;
    call {:si_unique_call 230} DeAllocateIrpAndIrb(pdoExtension_4, vslice_dummy_var_1005);
    goto L1;

  anon49_Then:
    goto L1;
}



procedure {:origName "Sbp2DeferPendingRequest"} Sbp2DeferPendingRequest(actual_PdoExtension_6: int, actual_Irp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2DeferPendingRequest"} Sbp2DeferPendingRequest(actual_PdoExtension_6: int, actual_Irp: int)
{
  var {:pointer} Tmp_565: int;
  var {:scalar} Tmp_566: int;
  var {:scalar} Tmp_567: int;
  var {:pointer} Tmp_568: int;
  var {:scalar} sdv_158: int;
  var {:scalar} orbLock_1: int;
  var {:pointer} Tmp_569: int;
  var {:scalar} Tmp_570: int;
  var {:pointer} Tmp_571: int;
  var {:pointer} sdv_160: int;
  var {:pointer} Tmp_572: int;
  var {:pointer} Tmp_574: int;
  var {:pointer} Tmp_575: int;
  var {:scalar} Tmp_576: int;
  var {:pointer} sdv_161: int;
  var {:scalar} Tmp_577: int;
  var {:pointer} sdv_162: int;
  var {:pointer} sdv_163: int;
  var {:pointer} oldIrp: int;
  var {:pointer} Tmp_578: int;
  var {:pointer} Tmp_579: int;
  var {:pointer} Tmp_581: int;
  var {:pointer} tail: int;
  var {:pointer} Tmp_582: int;
  var {:pointer} Tmp_583: int;
  var {:pointer} Tmp_584: int;
  var {:pointer} PdoExtension_6: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_1007: int;
  var vslice_dummy_var_1008: int;
  var vslice_dummy_var_1009: int;

  anon0:
    call {:si_unique_call 232} orbLock_1 := __HAVOC_malloc(12);
    call {:si_unique_call 233} vslice_dummy_var_15 := __HAVOC_malloc(4);
    PdoExtension_6 := actual_PdoExtension_6;
    Irp := actual_Irp;
    call {:si_unique_call 234} Tmp_569 := __HAVOC_malloc(4);
    call {:si_unique_call 235} Tmp_571 := __HAVOC_malloc(4);
    call {:si_unique_call 236} Tmp_579 := __HAVOC_malloc(64);
    call {:si_unique_call 237} Tmp_583 := __HAVOC_malloc(4);
    call {:si_unique_call 238} Tmp_584 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} orbLock_1 != 0;
    assume orbLock_1 > 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 239} AcquireOrbListLock(PdoExtension_6, orbLock_1, 0);
    call {:si_unique_call 240} sdv_158 := sdv_IsListEmpty(0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_158 == 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    havoc vslice_dummy_var_1007;
    call {:si_unique_call 241} sdv_161 := sdv_containing_record(vslice_dummy_var_1007, 0);
    tail := sdv_161;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_575;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_574;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    assume {:nonnull} Tmp_574 != 0;
    assume Tmp_574 > 0;
    havoc vslice_dummy_var_1008;
    call {:si_unique_call 242} sdv_162 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), vslice_dummy_var_1008);
    oldIrp := sdv_162;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_569;
    assume {:nonnull} Tmp_569 != 0;
    assume Tmp_569 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_568;
    assume {:nonnull} Tmp_568 != 0;
    assume Tmp_568 > 0;
    havoc Tmp_579;
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    havoc Tmp_566;
    havoc Tmp_582;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_567;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    havoc Tmp_578;
    assume {:nonnull} Tmp_578 != 0;
    assume Tmp_578 > 0;
    havoc vslice_dummy_var_1009;
    call {:si_unique_call 243} WPP_SF_qqqD(Tmp_567, 27, Tmp_582, PdoExtension_6, vslice_dummy_var_1009, oldIrp, Tmp_566);
    goto L52;

  L52:
    assume {:nonnull} tail != 0;
    assume tail > 0;
    assume {:nonnull} tail != 0;
    assume tail > 0;
    call {:si_unique_call 244} vslice_dummy_var_17 := KeCancelTimer(0);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_571;
    assume {:nonnull} Tmp_571 != 0;
    assume Tmp_571 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_565;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_570;
    call {:si_unique_call 245} WPP_SF_qq(Tmp_570, 28, Tmp_565, PdoExtension_6, tail);
    goto L69;

  L69:
    call {:si_unique_call 246} vslice_dummy_var_16 := FreeAsyncRequestContext(PdoExtension_6, tail);
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 247} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(PdoExtension_6));
    goto L18;

  L18:
    call {:si_unique_call 248} ReleaseOrbListLock(PdoExtension_6, orbLock_1, 0);
    goto L1;

  L1:
    return;

  anon38_Then:
    goto L69;

  anon46_Then:
    goto L69;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L69;

  anon36_Then:
    goto L52;

  anon45_Then:
    goto L52;

  anon44_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L52;

  anon43_Then:
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 249} sdv_163 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), 0);
    oldIrp := sdv_163;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_583;
    assume {:nonnull} Tmp_583 != 0;
    assume Tmp_583 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_581;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_576;
    call {:si_unique_call 250} WPP_SF_qq(Tmp_576, 29, Tmp_581, PdoExtension_6, oldIrp);
    goto L18;

  anon39_Then:
    goto L18;

  anon48_Then:
    goto L18;

  anon47_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon33_Then:
    assume {:partition} sdv_158 != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Irp != 0;
    assume {:nonnull} PdoExtension_6 != 0;
    assume PdoExtension_6 > 0;
    call {:si_unique_call 251} sdv_160 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_6), Irp);
    oldIrp := sdv_160;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_584;
    assume {:nonnull} Tmp_584 != 0;
    assume Tmp_584 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_572;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_577;
    call {:si_unique_call 252} WPP_SF_qqq(Tmp_577, 30, Tmp_572, PdoExtension_6, Irp, oldIrp);
    goto L18;

  anon35_Then:
    goto L18;

  anon42_Then:
    goto L18;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon34_Then:
    assume {:partition} Irp == 0;
    goto L18;

  anon40_Then:
    goto L1;
}



procedure {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited(actual_PdoExtension_8: int, actual_StatusFifo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2HandleUnsolicited"} Sbp2HandleUnsolicited(actual_PdoExtension_8: int, actual_StatusFifo: int)
{
  var {:pointer} Tmp_610: int;
  var {:pointer} Tmp_611: int;
  var {:scalar} sdv_184: int;
  var {:pointer} Tmp_612: int;
  var {:pointer} senseBuffer_1: int;
  var {:pointer} Tmp_613: int;
  var {:scalar} Tmp_614: int;
  var {:scalar} Tmp_615: int;
  var {:pointer} Tmp_616: int;
  var {:scalar} status_15: int;
  var {:scalar} state: int;
  var {:pointer} PdoExtension_8: int;
  var {:pointer} StatusFifo: int;
  var boogieTmp: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_1010: int;

  anon0:
    call {:si_unique_call 253} senseBuffer_1 := __HAVOC_malloc(4);
    call {:si_unique_call 254} vslice_dummy_var_18 := __HAVOC_malloc(4);
    call {:si_unique_call 255} state := __HAVOC_malloc(8);
    PdoExtension_8 := actual_PdoExtension_8;
    StatusFifo := actual_StatusFifo;
    call {:si_unique_call 256} Tmp_610 := __HAVOC_malloc(4);
    call {:si_unique_call 257} Tmp_611 := __HAVOC_malloc(4);
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    call {:si_unique_call 258} boogieTmp := __HAVOC_malloc(72);
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} PdoExtension_8 != 0;
    assume PdoExtension_8 > 0;
    havoc Tmp_612;
    assume {:nonnull} Tmp_612 != 0;
    assume Tmp_612 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 259} sdv_184 := ConvertSbp2SenseDataToScsi(StatusFifo, senseBuffer_1, 18);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} sdv_184 != 0;
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} senseBuffer_1 != 0;
    assume senseBuffer_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L1;

  L1:
    return;

  anon31_Then:
    assume {:nonnull} state != 0;
    assume state > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_610;
    assume {:nonnull} Tmp_610 != 0;
    assume Tmp_610 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    havoc Tmp_616;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_614;
    assume {:nonnull} state != 0;
    assume state > 0;
    havoc vslice_dummy_var_1010;
    call {:si_unique_call 260} WPP_SF_D(Tmp_614, 117, Tmp_616, vslice_dummy_var_1010);
    goto L22;

  L22:
    call {:si_unique_call 261} status_15 := PoRequestPowerIrp(0, 2, state, 0, 0, 0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_15 < 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_611;
    assume {:nonnull} Tmp_611 != 0;
    assume Tmp_611 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_613;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_615;
    call {:si_unique_call 262} WPP_SF_D(Tmp_615, 118, Tmp_613, status_15);
    goto L1;

  anon35_Then:
    goto L1;

  anon39_Then:
    goto L1;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon33_Then:
    assume {:partition} 0 <= status_15;
    goto L1;

  anon32_Then:
    goto L22;

  anon38_Then:
    goto L22;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L22;

  anon30_Then:
    goto L1;

  anon29_Then:
    goto L1;

  anon28_Then:
    assume {:partition} sdv_184 == 0;
    goto L1;

  anon36_Then:
    goto L1;

  anon27_Then:
    goto L1;
}



procedure {:origName "WPP_SF_qdSDd"} WPP_SF_qdSDd(actual_Logger_6: int, actual_id_6: int, actual_TraceGuid_6: int, actual_s_p_e_c_i_a_l_26: int, actual_s_p_e_c_i_a_l_27: int, actual_s_p_e_c_i_a_l_28: int, actual_s_p_e_c_i_a_l_29: int, actual_s_p_e_c_i_a_l_30: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qdSDd"} WPP_SF_qdSDd(actual_Logger_6: int, actual_id_6: int, actual_TraceGuid_6: int, actual_s_p_e_c_i_a_l_26: int, actual_s_p_e_c_i_a_l_27: int, actual_s_p_e_c_i_a_l_28: int, actual_s_p_e_c_i_a_l_29: int, actual_s_p_e_c_i_a_l_30: int)
{
  var {:scalar} sdv_186: int;
  var {:pointer} Tmp_622: int;
  var {:scalar} Tmp_623: int;
  var {:pointer} TraceGuid_6: int;
  var {:pointer} s_p_e_c_i_a_l_28: int;
  var vslice_dummy_var_19: int;

  anon0:
    call {:si_unique_call 263} vslice_dummy_var_19 := __HAVOC_malloc(4);
    TraceGuid_6 := actual_TraceGuid_6;
    s_p_e_c_i_a_l_28 := actual_s_p_e_c_i_a_l_28;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_28 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_28 != 0;
    assume s_p_e_c_i_a_l_28 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_623 := (sdv_186 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_28 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_28 != 0;
    assume s_p_e_c_i_a_l_28 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_622 := s_p_e_c_i_a_l_28;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_622 := strConst__li2bpl2;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_28 == 0;
    goto L18;

  anon10_Then:
    Tmp_623 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_28 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qqqD"} WPP_SF_qqqD(actual_Logger_7: int, actual_id_7: int, actual_TraceGuid_7: int, actual_s_p_e_c_i_a_l_31: int, actual_s_p_e_c_i_a_l_32: int, actual_s_p_e_c_i_a_l_33: int, actual_s_p_e_c_i_a_l_34: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qqqD"} WPP_SF_qqqD(actual_Logger_7: int, actual_id_7: int, actual_TraceGuid_7: int, actual_s_p_e_c_i_a_l_31: int, actual_s_p_e_c_i_a_l_32: int, actual_s_p_e_c_i_a_l_33: int, actual_s_p_e_c_i_a_l_34: int)
{
  var {:pointer} TraceGuid_7: int;
  var vslice_dummy_var_20: int;

  anon0:
    call {:si_unique_call 264} vslice_dummy_var_20 := __HAVOC_malloc(4);
    TraceGuid_7 := actual_TraceGuid_7;
    return;
}



procedure {:origName "WPP_SF_qdDD"} WPP_SF_qdDD(actual_Logger_8: int, actual_id_8: int, actual_TraceGuid_8: int, actual_s_p_e_c_i_a_l_35: int, actual_s_p_e_c_i_a_l_36: int, actual_s_p_e_c_i_a_l_37: int, actual_s_p_e_c_i_a_l_38: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qdDD"} WPP_SF_qdDD(actual_Logger_8: int, actual_id_8: int, actual_TraceGuid_8: int, actual_s_p_e_c_i_a_l_35: int, actual_s_p_e_c_i_a_l_36: int, actual_s_p_e_c_i_a_l_37: int, actual_s_p_e_c_i_a_l_38: int)
{
  var {:pointer} TraceGuid_8: int;
  var vslice_dummy_var_21: int;

  anon0:
    call {:si_unique_call 265} vslice_dummy_var_21 := __HAVOC_malloc(4);
    TraceGuid_8 := actual_TraceGuid_8;
    return;
}



procedure {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_713: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_713 == -1073741670 || Tmp_713 == -1073741823 || Tmp_713 == 259 || Tmp_713 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Rbc_Scsi_Conversion"} Rbc_Scsi_Conversion(actual_Srb: int, actual_OriginalSrb: int, actual_RbcHeaderAndPage: int, actual_OutgoingRequest: int, actual_RemovableMedia: int, actual_SetCacheHack: int) returns (Tmp_713: int)
{
  var {:pointer} blockDescriptor: int;
  var {:pointer} Tmp_715: int;
  var {:scalar} Tmp_717: int;
  var {:pointer} Tmp_718: int;
  var {:pointer} systemAddress: int;
  var {:pointer} Tmp_719: int;
  var {:pointer} Tmp_720: int;
  var {:scalar} pageCode: int;
  var {:pointer} cdb: int;
  var {:pointer} Tmp_721: int;
  var {:pointer} Tmp_722: int;
  var {:pointer} Tmp_723: int;
  var {:pointer} Tmp_724: int;
  var {:scalar} Tmp_726: int;
  var {:scalar} availLength: int;
  var {:pointer} Tmp_729: int;
  var {:pointer} Tmp_730: int;
  var {:pointer} Tmp_732: int;
  var {:pointer} Tmp_733: int;
  var {:pointer} Tmp_734: int;
  var {:pointer} Tmp_735: int;
  var {:pointer} Tmp_736: int;
  var {:pointer} Tmp_737: int;
  var {:pointer} sdv_212: int;
  var {:pointer} Tmp_738: int;
  var {:pointer} Tmp_740: int;
  var {:pointer} cdbRbc: int;
  var {:pointer} Tmp_743: int;
  var {:scalar} Tmp_744: int;
  var {:pointer} Tmp_745: int;
  var {:pointer} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} Tmp_749: int;
  var {:pointer} rbcParam: int;
  var {:pointer} Tmp_750: int;
  var {:pointer} Tmp_751: int;
  var {:pointer} sdv_213: int;
  var {:pointer} Tmp_752: int;
  var {:pointer} Tmp_753: int;
  var {:pointer} Tmp_754: int;
  var {:scalar} modeHeaderLength: int;
  var {:pointer} Tmp_756: int;
  var {:pointer} Tmp_758: int;
  var {:pointer} Tmp_759: int;
  var {:pointer} Tmp_760: int;
  var {:pointer} Tmp_761: int;
  var {:pointer} sdv_216: int;
  var {:pointer} Tmp_762: int;
  var {:pointer} Tmp_763: int;
  var {:pointer} Tmp_764: int;
  var {:pointer} Tmp_765: int;
  var {:pointer} Tmp_766: int;
  var {:pointer} modeHeader: int;
  var {:pointer} Tmp_767: int;
  var {:pointer} Tmp_768: int;
  var {:pointer} Tmp_769: int;
  var {:pointer} Tmp_771: int;
  var {:pointer} Tmp_772: int;
  var {:pointer} Tmp_773: int;
  var {:pointer} Tmp_774: int;
  var {:pointer} cachePage: int;
  var {:scalar} status_19: int;
  var {:pointer} Tmp_776: int;
  var {:scalar} wcd: int;
  var {:pointer} Tmp_777: int;
  var {:pointer} Tmp_778: int;
  var {:scalar} Tmp_779: int;
  var {:pointer} Srb: int;
  var {:pointer} OriginalSrb: int;
  var {:pointer} RbcHeaderAndPage: int;
  var {:scalar} OutgoingRequest: int;
  var {:scalar} RemovableMedia: int;
  var {:scalar} SetCacheHack: int;
  var boogieTmp: int;

  anon0:
    Srb := actual_Srb;
    OriginalSrb := actual_OriginalSrb;
    RbcHeaderAndPage := actual_RbcHeaderAndPage;
    OutgoingRequest := actual_OutgoingRequest;
    RemovableMedia := actual_RemovableMedia;
    SetCacheHack := actual_SetCacheHack;
    call {:si_unique_call 266} Tmp_718 := __HAVOC_malloc(8);
    call {:si_unique_call 267} Tmp_719 := __HAVOC_malloc(64);
    call {:si_unique_call 268} Tmp_720 := __HAVOC_malloc(12);
    call {:si_unique_call 269} Tmp_732 := __HAVOC_malloc(20);
    call {:si_unique_call 270} Tmp_735 := __HAVOC_malloc(12);
    call {:si_unique_call 271} Tmp_736 := __HAVOC_malloc(12);
    call {:si_unique_call 272} Tmp_751 := __HAVOC_malloc(12);
    call {:si_unique_call 273} Tmp_754 := __HAVOC_malloc(64);
    call {:si_unique_call 274} Tmp_758 := __HAVOC_malloc(8);
    call {:si_unique_call 275} Tmp_760 := __HAVOC_malloc(8);
    call {:si_unique_call 276} Tmp_761 := __HAVOC_malloc(12);
    call {:si_unique_call 277} Tmp_765 := __HAVOC_malloc(12);
    call {:si_unique_call 278} Tmp_766 := __HAVOC_malloc(12);
    call {:si_unique_call 279} Tmp_768 := __HAVOC_malloc(64);
    call {:si_unique_call 280} Tmp_769 := __HAVOC_malloc(8);
    call {:si_unique_call 281} Tmp_773 := __HAVOC_malloc(64);
    call {:si_unique_call 282} Tmp_776 := __HAVOC_malloc(20);
    call {:si_unique_call 283} Tmp_778 := __HAVOC_malloc(12);
    modeHeader := 0;
    blockDescriptor := 0;
    status_19 := 259;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} OutgoingRequest != 0;
    modeHeaderLength := 12;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdbRbc := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    cdb := Cdb__SCSI_REQUEST_BLOCK(Srb);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L28;

  L28:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L22;

  L22:
    Tmp_713 := status_19;
    goto L1;

  L1:
    return;

  anon86_Then:
    goto L22;

  anon85_Then:
    assume {:nonnull} cdbRbc != 0;
    assume cdbRbc > 0;
    goto L28;

  anon104_Then:
    goto L22;

  anon105_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} RemovableMedia != 0;
    goto L34;

  L34:
    call {:si_unique_call 284} sdv_212 := ExAllocatePoolWithTag(512, 64, 846226035);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_740;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_729;
    assume {:nonnull} Tmp_729 != 0;
    assume Tmp_729 > 0;
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    call {:si_unique_call 285} sdv_213 := IoAllocateMdl(0, 17, 0, 0, 0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_724;
    assume {:nonnull} Tmp_724 != 0;
    assume Tmp_724 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_771;
    assume {:nonnull} Tmp_771 != 0;
    assume Tmp_771 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_738;
    assume {:nonnull} Tmp_738 != 0;
    assume Tmp_738 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_767;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_767 != 0;
    assume Tmp_767 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto L42;

  L42:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_779;
    goto L62;

  L62:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_753;
    assume {:nonnull} Tmp_753 != 0;
    assume Tmp_753 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_722;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    havoc Tmp_744;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    call {:si_unique_call 286} sdv_RtlCopyMemory(0, 0, Tmp_744);
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L22;

  anon89_Then:
    Tmp_779 := 16;
    goto L62;

  anon115_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_756;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_730;
    assume {:nonnull} Tmp_730 != 0;
    assume Tmp_730 > 0;
    assume {:nonnull} Tmp_756 != 0;
    assume Tmp_756 > 0;
    call {:si_unique_call 287} sdv_ExFreePool(0);
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    Tmp_713 := -1073741670;
    goto L1;

  anon114_Then:
    goto L42;

  anon113_Then:
    Tmp_713 := -1073741670;
    goto L1;

  anon87_Then:
    assume {:partition} RemovableMedia == 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 288} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 289} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_778;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_718;
    assume {:nonnull} Tmp_718 != 0;
    assume Tmp_718 > 0;
    assume {:nonnull} Tmp_778 != 0;
    assume Tmp_778 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_720;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_760;
    assume {:nonnull} Tmp_720 != 0;
    assume Tmp_720 > 0;
    assume {:nonnull} Tmp_760 != 0;
    assume Tmp_760 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_735;
    assume {:nonnull} Tmp_735 != 0;
    assume Tmp_735 > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_732;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_751;
    call {:si_unique_call 290} sdv_RtlCopyMemory(0, 0, 3);
    status_19 := 0;
    goto L22;

  anon88_Then:
    goto L34;

  anon84_Then:
    goto L22;

  anon108_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc cachePage;
    cachePage := cachePage + modeHeaderLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    havoc pageCode;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} pageCode == 8;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    wcd := 0;
    goto L262;

  L262:
    goto L96;

  L96:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    call {:si_unique_call 291} sdv_RtlCopyMemory(0, 0, 17);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc modeHeader;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} SetCacheHack != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    havoc Tmp_726;
    goto L108;

  L108:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L109;

  L109:
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} pageCode == 8;
    Tmp_772 := modeHeader;
    assume {:nonnull} Tmp_772 != 0;
    assume Tmp_772 > 0;
    goto L22;

  anon112_Then:
    assume {:partition} pageCode != 8;
    goto L22;

  anon91_Then:
    Tmp_726 := 17;
    goto L108;

  anon111_Then:
    assume {:partition} SetCacheHack == 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    goto L109;

  anon90_Then:
    wcd := 1;
    goto L262;

  anon110_Then:
    assume {:partition} pageCode != 8;
    goto L96;

  anon109_Then:
    goto L22;

  anon107_Then:
    assume {:partition} OutgoingRequest == 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_733;
    assume {:nonnull} Tmp_733 != 0;
    assume Tmp_733 > 0;
    havoc Tmp_719;
    cdb := Tmp_719;
    goto L116;

  L116:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_723;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_759;
    assume {:nonnull} Tmp_723 != 0;
    assume Tmp_723 > 0;
    assume {:nonnull} Tmp_759 != 0;
    assume Tmp_759 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_764;
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    call {:si_unique_call 292} IoFreeMdl(0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_715;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_749;
    assume {:nonnull} Tmp_715 != 0;
    assume Tmp_715 > 0;
    assume {:nonnull} Tmp_749 != 0;
    assume Tmp_749 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_752;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_752 != 0;
    assume Tmp_752 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto L121;

  L121:
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_748;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_748 != 0;
    assume Tmp_748 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_745;
    assume {:nonnull} Tmp_745 != 0;
    assume Tmp_745 > 0;
    havoc Tmp_717;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_743;
    assume {:nonnull} Tmp_743 != 0;
    assume Tmp_743 > 0;
    havoc Tmp_773;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_768;
    call {:si_unique_call 293} sdv_RtlCopyMemory(0, 0, Tmp_717);
    goto L119;

  L119:
    Tmp_713 := -1073741823;
    goto L1;

  anon116_Then:
    goto L121;

  anon94_Then:
    goto L121;

  anon93_Then:
    goto L119;

  anon92_Then:
    modeHeaderLength := 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    systemAddress := 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_737;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_721;
    assume {:nonnull} Tmp_721 != 0;
    assume Tmp_721 > 0;
    assume {:nonnull} Tmp_737 != 0;
    assume Tmp_737 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_734;
    assume {:nonnull} Tmp_734 != 0;
    assume Tmp_734 > 0;
    call {:si_unique_call 294} IoFreeMdl(0);
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_762;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_774;
    assume {:nonnull} Tmp_762 != 0;
    assume Tmp_762 > 0;
    assume {:nonnull} Tmp_774 != 0;
    assume Tmp_774 > 0;
    assume {:nonnull} OriginalSrb != 0;
    assume OriginalSrb > 0;
    havoc Tmp_747;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} Tmp_747 != 0;
    assume Tmp_747 > 0;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_750;
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    call {:si_unique_call 295} systemAddress := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    goto L157;

  L157:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    havoc availLength;
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L161;

  L161:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} availLength >= 12;
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L164;

  L164:
    availLength := availLength - 12;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} modeHeader != 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    cachePage := blockDescriptor;
    cachePage := cachePage + 8;
    goto L170;

  L170:
    call {:si_unique_call 296} sdv_RtlZeroMemory(0, 12);
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L380;

  L380:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L22;

  anon123_Then:
    assume {:nonnull} cachePage != 0;
    assume cachePage > 0;
    goto L380;

  anon122_Then:
    assume {:partition} modeHeader == 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} systemAddress != 0;
    cachePage := systemAddress;
    goto L170;

  anon101_Then:
    assume {:partition} systemAddress == 0;
    Tmp_713 := -1073741670;
    goto L1;

  anon99_Then:
    assume {:nonnull} cdb != 0;
    assume cdb > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    goto L164;

  anon100_Then:
    goto L22;

  anon98_Then:
    assume {:partition} 12 > availLength;
    goto L22;

  anon121_Then:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} availLength >= modeHeaderLength;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} systemAddress != 0;
    modeHeader := systemAddress;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 297} boogieTmp := corral_nondet();
    assume {:nonnull} modeHeader != 0;
    assume modeHeader > 0;
    call {:si_unique_call 298} boogieTmp := corral_nondet();
    blockDescriptor := modeHeader;
    blockDescriptor := blockDescriptor + 4;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_765;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_769;
    assume {:nonnull} Tmp_765 != 0;
    assume Tmp_765 > 0;
    assume {:nonnull} Tmp_769 != 0;
    assume Tmp_769 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_736;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_758;
    assume {:nonnull} Tmp_736 != 0;
    assume Tmp_736 > 0;
    assume {:nonnull} Tmp_758 != 0;
    assume Tmp_758 > 0;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_766;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    havoc Tmp_776;
    assume {:nonnull} blockDescriptor != 0;
    assume blockDescriptor > 0;
    havoc Tmp_761;
    call {:si_unique_call 299} sdv_RtlCopyMemory(0, 0, 3);
    availLength := availLength - modeHeaderLength;
    goto L161;

  anon102_Then:
    assume {:partition} systemAddress == 0;
    Tmp_713 := -1073741670;
    goto L1;

  anon97_Then:
    assume {:partition} modeHeaderLength > availLength;
    goto L161;

  anon120_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_763;
    assume {:nonnull} Tmp_763 != 0;
    assume Tmp_763 > 0;
    call {:si_unique_call 300} systemAddress := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} systemAddress != 0;
    call {:si_unique_call 301} sdv_RtlCopyMemory(0, 0, 17);
    goto L157;

  anon103_Then:
    assume {:partition} systemAddress == 0;
    goto L157;

  anon119_Then:
    Tmp_713 := -1073741823;
    goto L1;

  anon96_Then:
    goto L22;

  anon106_Then:
    goto L22;

  anon117_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_777;
    assume {:nonnull} Tmp_777 != 0;
    assume Tmp_777 > 0;
    call {:si_unique_call 302} sdv_216 := sdv_MmGetSystemAddressForMdlSafe(0, 16);
    rbcParam := sdv_216;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} rbcParam != 0;
    assume {:nonnull} RbcHeaderAndPage != 0;
    assume RbcHeaderAndPage > 0;
    assume {:nonnull} rbcParam != 0;
    assume rbcParam > 0;
    goto L22;

  anon118_Then:
    assume {:partition} rbcParam == 0;
    goto L22;

  anon95_Then:
    goto L22;

  anon83_Then:
    assume {:nonnull} Srb != 0;
    assume Srb > 0;
    havoc Tmp_754;
    cdb := Tmp_754;
    goto L116;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_22: int;

  anon0:
    call {:si_unique_call 303} vslice_dummy_var_22 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_23: int;

  anon0:
    call {:si_unique_call 304} vslice_dummy_var_23 := __HAVOC_malloc(4);
    assume DATAID_SBP_LUN_INFORMATION == 6855;
    return;
}



procedure {:origName "Sbp2SqmInsertLunInformation"} Sbp2SqmInsertLunInformation(actual_DeviceInfo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2SqmInsertLunInformation"} Sbp2SqmInsertLunInformation(actual_DeviceInfo: int)
{
  var {:pointer} sqmStreamEntry: int;
  var {:pointer} DeviceInfo: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;

  anon0:
    call {:si_unique_call 305} vslice_dummy_var_24 := __HAVOC_malloc(4);
    DeviceInfo := actual_DeviceInfo;
    call {:si_unique_call 306} sqmStreamEntry := __HAVOC_malloc(108);
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    assume {:nonnull} DeviceInfo != 0;
    assume DeviceInfo > 0;
    call {:si_unique_call 307} vslice_dummy_var_25 := corral_nondet();
    return;
}



procedure {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_KeAcquireSpinLockAtDpcLevel"} {:osmodel} sdv_KeAcquireSpinLockAtDpcLevel(actual_SpinLock: int)
{
  var vslice_dummy_var_26: int;

  anon0:
    call {:si_unique_call 308} vslice_dummy_var_26 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_27: int;

  anon0:
    call {:si_unique_call 309} vslice_dummy_var_27 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_807: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_807: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    call {:si_unique_call 310} SLIC_sdv_containing_record_entry(strConst__li2bpl3);
    record := Address;
    Tmp_807 := record;
    return;
}



procedure {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoInitializeRemoveLock"} {:osmodel} sdv_IoInitializeRemoveLock(actual_Lock: int, actual_AllocateTag: int, actual_MaxLockedMinutes: int, actual_HighWatermark: int)
{
  var vslice_dummy_var_28: int;

  anon0:
    call {:si_unique_call 311} vslice_dummy_var_28 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock_1: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_29: int;

  anon0:
    call {:si_unique_call 312} vslice_dummy_var_29 := __HAVOC_malloc(4);
    p := actual_p;
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_813: int);
  free ensures {:va_keep} Tmp_813 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_813: int)
{

  anon0:
    Tmp_813 := 1;
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_815: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_815 == 1 || Tmp_815 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer: int, actual_structPtr888DueTime: int, actual_Dpc: int) returns (Tmp_815: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 313} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_815 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_815 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_817: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_MmGetMdlByteCount"} {:osmodel} sdv_MmGetMdlByteCount(actual_Mdl: int) returns (Tmp_817: int)
{
  var {:scalar} x: int;
  var {:pointer} sdv_218: int;

  anon0:
    call {:si_unique_call 314} sdv_218 := __HAVOC_malloc(1);
    x := sdv_218;
    Tmp_817 := x;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_KeReleaseSpinLockFromDpcLevel"} {:osmodel} sdv_KeReleaseSpinLockFromDpcLevel(actual_SpinLock_2: int)
{
  var vslice_dummy_var_30: int;

  anon0:
    call {:si_unique_call 315} vslice_dummy_var_30 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_821: int);
  free ensures {:va_keep} Tmp_821 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeReleaseMutex"} {:osmodel} KeReleaseMutex(actual_Mutex: int, actual_Wait: int) returns (Tmp_821: int)
{

  anon0:
    Tmp_821 := 0;
    return;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_823: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_823: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_823 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_823 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_823 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_825: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_ExInterlockedPopEntrySList"} {:osmodel} sdv_ExInterlockedPopEntrySList(actual_ListHead: int, actual_Lock_1: int) returns (Tmp_825: int)
{
  var {:pointer} sdv_220: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_825 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 316} sdv_220 := __HAVOC_malloc(1);
    Tmp_825 := sdv_220;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_1: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_1: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_31: int;

  anon0:
    call {:si_unique_call 317} vslice_dummy_var_31 := __HAVOC_malloc(4);
    Dpc_1 := actual_Dpc_1;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_1 != 0;
    assume Dpc_1 > 0;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoReleaseRemoveLockAndWait"} {:osmodel} sdv_IoReleaseRemoveLockAndWait(actual_RemoveLock: int, actual_Tag: int)
{
  var vslice_dummy_var_32: int;

  anon0:
    call {:si_unique_call 318} vslice_dummy_var_32 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject: int) returns (Tmp_831: int);
  free ensures {:va_keep} Tmp_831 == -1073741824 || Tmp_831 == -1073741771 || Tmp_831 == -1073741670 || Tmp_831 == -1073741823 || Tmp_831 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject: int) returns (Tmp_831: int)
{
  var {:pointer} DeviceObject: int;

  anon0:
    DeviceObject := actual_DeviceObject;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_831 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_831 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_831 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    Tmp_831 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_inside_init_entrypoint != 0;
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    goto L21;

  L21:
    Tmp_831 := 0;
    goto L1;

  anon11_Then:
    assume {:partition} sdv_inside_init_entrypoint == 0;
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    goto L21;
}



procedure {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoQueueWorkItem"} {:osmodel} IoQueueWorkItem(actual_IoWorkItem: int, actual_WorkerRoutine: int, actual_QueueType: int, actual_Context: int)
{
  var vslice_dummy_var_33: int;

  anon0:
    call {:si_unique_call 319} vslice_dummy_var_33 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_34: int;

  anon0:
    call {:si_unique_call 320} vslice_dummy_var_34 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoAdjustPagingPathCount"} {:osmodel} sdv_IoAdjustPagingPathCount(actual_Count: int, actual_Increment: int)
{
  var vslice_dummy_var_35: int;

  anon0:
    call {:si_unique_call 321} vslice_dummy_var_35 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag_1: int, actual_Depth: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_ExInitializeNPagedLookasideList_NXPoolOptIn"} {:osmodel} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(actual_Lookaside: int, actual_Allocate: int, actual_Free: int, actual_Flags: int, actual_Size: int, actual_Tag_1: int, actual_Depth: int)
{
  var vslice_dummy_var_36: int;

  anon0:
    call {:si_unique_call 322} vslice_dummy_var_36 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_841: int);
  free ensures {:va_keep} Tmp_841 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_841: int)
{

  anon0:
    Tmp_841 := 1;
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_2: int)
{
  var {:pointer} r: int;
  var {:pointer} pirp_2: int;
  var vslice_dummy_var_37: int;

  anon0:
    call {:si_unique_call 323} vslice_dummy_var_37 := __HAVOC_malloc(4);
    pirp_2 := actual_pirp_2;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r != 0;
    assume r > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_3: int)
{
  var vslice_dummy_var_38: int;

  anon0:
    call {:si_unique_call 324} vslice_dummy_var_38 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_847: int);
  free ensures {:va_keep} Tmp_847 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_847: int)
{

  anon0:
    Tmp_847 := 0;
    return;
}



procedure {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_849: int);
  free ensures {:va_keep} Tmp_849 == 0 || Tmp_849 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoCreateUnprotectedSymbolicLink"} {:osmodel} IoCreateUnprotectedSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_849: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_849 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_849 := -1073741823;
    goto L1;
}



procedure {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlInitAnsiString"} {:osmodel} RtlInitAnsiString(actual_DestinationString: int, actual_SourceString: int)
{
  var vslice_dummy_var_39: int;

  anon0:
    call {:si_unique_call 325} vslice_dummy_var_39 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_4: int)
{
  var {:pointer} pirp_4: int;
  var vslice_dummy_var_40: int;

  anon0:
    call {:si_unique_call 326} vslice_dummy_var_40 := __HAVOC_malloc(4);
    pirp_4 := actual_pirp_4;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_4 != 0;
    assume pirp_4 > 0;
    goto L1;
}



procedure {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_855: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_ExInterlockedPushEntrySList"} {:osmodel} sdv_ExInterlockedPushEntrySList(actual_ListHead_1: int, actual_ListEntry: int, actual_Lock_2: int) returns (Tmp_855: int)
{
  var {:pointer} sdv_227: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_855 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 327} sdv_227 := __HAVOC_malloc(1);
    Tmp_855 := sdv_227;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, SLAM_guard_S_0, completion_called, Mem_T.LogStart__DEBUG_LOG, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} sdv_243: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 328} vslice_dummy_var_41 := __HAVOC_malloc(4);
    SLAM_guard_S_0 := sdv_irp;
    assume SLAM_guard_S_0 != 0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 329} sdv_243 := sdv_CheckDispatchRoutines();
    call {:si_unique_call 330} vslice_dummy_var_42 := sdv_CheckStartIoRoutines();
    call {:si_unique_call 331} vslice_dummy_var_43 := sdv_CheckDpcRoutines();
    call {:si_unique_call 332} vslice_dummy_var_44 := sdv_CheckIsrRoutines();
    call {:si_unique_call 333} vslice_dummy_var_45 := sdv_CheckCancelRoutines();
    call {:si_unique_call 334} vslice_dummy_var_46 := sdv_CheckIoDpcRoutines();
    call {:si_unique_call 335} vslice_dummy_var_47 := sdv_IoCompletionRoutines();
    call {:si_unique_call 336} vslice_dummy_var_48 := sdv_CheckWorkerRoutines();
    call {:si_unique_call 337} vslice_dummy_var_49 := sdv_CheckAddDevice();
    call {:si_unique_call 338} vslice_dummy_var_50 := sdv_CheckIrpMjPnp();
    call {:si_unique_call 339} vslice_dummy_var_51 := sdv_CheckIrpMjPower();
    call {:si_unique_call 340} vslice_dummy_var_52 := sdv_CheckDriverUnload();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_243 != 0;
    call {:si_unique_call 341} sdv_stub_driver_init();
    call {:si_unique_call 342} vslice_dummy_var_53 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} sdv_243 == 0;
    goto L1;

  anon7_Then:
    goto L1;
}



procedure {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_859: int);
  free ensures {:va_keep} Tmp_859 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_859: int)
{

  anon0:
    Tmp_859 := 1;
    return;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_861: int);
  free ensures {:va_keep} Tmp_861 == 0 || Tmp_861 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_861: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_861 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_861 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_863: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_863: int)
{
  var {:pointer} sdv_256: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 343} sdv_256 := __HAVOC_malloc(1);
    Tmp_863 := sdv_256;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_863 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_865: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_MmGetSystemAddressForMdlSafe"} {:osmodel} sdv_MmGetSystemAddressForMdlSafe(actual_MDL: int, actual_PRIORITY: int) returns (Tmp_865: int)
{
  var {:pointer} sdv_258: int;
  var {:pointer} p_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 344} sdv_258 := __HAVOC_malloc(1);
    p_1 := sdv_258;
    Tmp_865 := p_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_865 := 0;
    goto L1;
}



procedure {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_867: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_MmGetMdlVirtualAddress"} {:osmodel} sdv_MmGetMdlVirtualAddress(actual_Mdl_1: int) returns (Tmp_867: int)
{
  var {:pointer} x_2: int;
  var {:pointer} sdv_259: int;

  anon0:
    call {:si_unique_call 345} sdv_259 := __HAVOC_malloc(1);
    x_2 := sdv_259;
    Tmp_867 := x_2;
    return;
}



procedure {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_869: int);
  free ensures {:va_keep} Tmp_869 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_869: int)
{

  anon0:
    Tmp_869 := 0;
    return;
}



procedure {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_871: int);
  free ensures {:va_keep} Tmp_871 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_871: int)
{

  anon0:
    Tmp_871 := 1;
    return;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_873: int);
  free ensures {:va_keep} Tmp_873 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_873: int)
{
  var {:scalar} status_20: int;
  var {:pointer} Irp_1: int;

  anon0:
    Irp_1 := actual_Irp_1;
    status_20 := 259;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  L25:
    Tmp_873 := status_20;
    return;

  anon33_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon32_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L19;

  anon40_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon39_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L44;

  anon41_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L28;

  anon31_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_1;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_1;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_1;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_1;
    goto L36;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_2: int, actual_Type_1: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_2: int, actual_Type_1: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_1: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 346} State := __HAVOC_malloc(8);
    call {:si_unique_call 347} r_1 := __HAVOC_malloc(8);
    call {:si_unique_call 348} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_KeRaiseIrql"} {:osmodel} sdv_KeRaiseIrql(actual_new: int, actual_p_2: int)
{
  var {:scalar} new: int;
  var {:pointer} p_2: int;
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 349} vslice_dummy_var_54 := __HAVOC_malloc(4);
    new := actual_new;
    p_2 := actual_p_2;
    assume {:nonnull} p_2 != 0;
    assume p_2 > 0;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_878: int);
  free ensures {:va_keep} Tmp_878 == 1 || Tmp_878 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_1: int) returns (Tmp_878: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_878 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_878 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_55: int;

  anon0:
    call {:si_unique_call 350} vslice_dummy_var_55 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_1: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_5: int, actual_CompletionRoutine: int, actual_Context_1: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} pirp_5: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_1: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_56: int;

  anon0:
    call {:si_unique_call 351} vslice_dummy_var_56 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    CompletionRoutine := actual_CompletionRoutine;
    Context_1 := actual_Context_1;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 352} irpSp := sdv_IoGetNextIrpStackLocation(pirp_5);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    return;
}



procedure {:origName "_sdv_init9"} {:osmodel} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_sdv_init9"} {:osmodel} _sdv_init9()
{
  var vslice_dummy_var_57: int;

  anon0:
    call {:si_unique_call 353} vslice_dummy_var_57 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_inside_init_entrypoint == 0;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume p_sdv_fx_dev_object == sdv_fx_dev_object;
    assume sdv_start_irp_already_issued == 0;
    assume sdv_isr_routine == li2bplFunctionConstant799;
    assume sdv_ke_dpc == li2bplFunctionConstant801;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant804;
    assume sdv_p_devobj_top == sdv_devobj_top;
    assume sdv_MmMapIoSpace_int == 0;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_58: int;

  anon0:
    call {:si_unique_call 354} vslice_dummy_var_58 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_888: int);
  free ensures {:va_keep} Tmp_888 == 1 || Tmp_888 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry: int) returns (Tmp_888: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_888 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_888 := 0;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_2: int)
{
  var vslice_dummy_var_59: int;

  anon0:
    call {:si_unique_call 355} vslice_dummy_var_59 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_892: int);
  free ensures {:va_keep} Tmp_892 == 258 || Tmp_892 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode: int, actual_Alertable: int, actual_Timeout: int) returns (Tmp_892: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_892 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_892 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_892 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_3: int)
{
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 356} vslice_dummy_var_60 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_896: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment_1: int, actual_Wait_1: int) returns (Tmp_896: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_896 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_900: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_6: int) returns (Tmp_900: int)
{
  var {:pointer} pirp_6: int;

  anon0:
    pirp_6 := actual_pirp_6;
    assume {:nonnull} pirp_6 != 0;
    assume pirp_6 > 0;
    havoc Tmp_900;
    return;
}



procedure {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_902: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_902: int)
{

  anon0:
    havoc Tmp_902;
    return;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_4: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_2: int, actual_Irp_3: int) returns (Tmp_904: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_904 == -1073741584 || Tmp_904 == 259 || Tmp_904 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_4: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_2: int, actual_Irp_3: int) returns (Tmp_904: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} structPtr888PowerState: int;

  anon0:
    call {:si_unique_call 357} PowerState := __HAVOC_malloc(8);
    MinorFunction := actual_MinorFunction;
    structPtr888PowerState := actual_structPtr888PowerState;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_904 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_904 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_904 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_906: int, dup_assertVar: bool);
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK, Mem_T.DeviceExtension__DEVICE_OBJECT, SLAM_guard_S_0, completion_called, yogi_error, Mem_T.LogStart__DEBUG_LOG;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} completion_called == 1 || completion_called == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_906: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_907: int;
  var {:scalar} Tmp_908: int;
  var boogieTmp: int;
  var WPP_GLOBAL_Control__Loc: int;
  var EventTraceConfigGuid__Loc: int;
  var BUS1394_CLASS_GUID__Loc: int;
  var WmiScsiAddressGuid__Loc: int;
  var GUID_DEVINTERFACE_STORAGEPORT__Loc: int;
  var GUID_DEVINTERFACE_FLOPPY__Loc: int;
  var GUID_DEVICEDUMP_STORAGE_DEVICE__Loc: int;
  var GUID_DEVINTERFACE_WRITEONCEDISK__Loc: int;
  var WPP_TRACE_CONTROL_NULL_GUID__Loc: int;
  var GUID_DEVINTERFACE_TAPE__Loc: int;
  var GUID_DEVINTERFACE_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_CDCHANGER__Loc: int;
  var GUID_DEVINTERFACE_MEDIUMCHANGER__Loc: int;
  var ScsiRawInterfaceGuid__Loc: int;
  var GUID_DEVINTERFACE_VMLUN__Loc: int;
  var DefaultTraceSecurityGuid__Loc: int;
  var GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc: int;
  var GUID_DEVINTERFACE_PARTITION__Loc: int;
  var GUID_DEVINTERFACE_CDROM__Loc: int;
  var GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc: int;
  var GUID_DEVINTERFACE_DISK__Loc: int;
  var SystemTraceControlGuid__Loc: int;
  var EventTraceGuid__Loc: int;
  var GUID_DEVINTERFACE_SES__Loc: int;
  var WPP_ThisDir_CTLGUID_wppCtlGuid__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_fx_dev_object__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var SLAM_guard_S_0_init__Loc: int;
  var KeTickCount__Loc: int;
  var vslice_dummy_var_536: int;
  var vslice_dummy_var_1011: int;
  var vslice_dummy_var_1012: int;
  var vslice_dummy_var_1013: int;
  var vslice_dummy_var_1014: int;
  var vslice_dummy_var_1015: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 358} WPP_GLOBAL_Control__Loc := __HAVOC_malloc_or_null(4);
    assume WPP_GLOBAL_Control__Loc == WPP_GLOBAL_Control;
    assume WPP_GLOBAL_Control != 0;
    call {:si_unique_call 359} EventTraceConfigGuid__Loc := __HAVOC_malloc_or_null(16);
    assume EventTraceConfigGuid__Loc == EventTraceConfigGuid;
    assume EventTraceConfigGuid != 0;
    call {:si_unique_call 360} BUS1394_CLASS_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume BUS1394_CLASS_GUID__Loc == BUS1394_CLASS_GUID;
    assume BUS1394_CLASS_GUID != 0;
    call {:si_unique_call 361} WmiScsiAddressGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WmiScsiAddressGuid__Loc == WmiScsiAddressGuid;
    assume WmiScsiAddressGuid != 0;
    call {:si_unique_call 362} GUID_DEVINTERFACE_STORAGEPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_STORAGEPORT__Loc == GUID_DEVINTERFACE_STORAGEPORT;
    assume GUID_DEVINTERFACE_STORAGEPORT != 0;
    call {:si_unique_call 363} GUID_DEVINTERFACE_FLOPPY__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_FLOPPY__Loc == GUID_DEVINTERFACE_FLOPPY;
    assume GUID_DEVINTERFACE_FLOPPY != 0;
    call {:si_unique_call 364} GUID_DEVICEDUMP_STORAGE_DEVICE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICEDUMP_STORAGE_DEVICE__Loc == GUID_DEVICEDUMP_STORAGE_DEVICE;
    assume GUID_DEVICEDUMP_STORAGE_DEVICE != 0;
    call {:si_unique_call 365} GUID_DEVINTERFACE_WRITEONCEDISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_WRITEONCEDISK__Loc == GUID_DEVINTERFACE_WRITEONCEDISK;
    assume GUID_DEVINTERFACE_WRITEONCEDISK != 0;
    call {:si_unique_call 366} WPP_TRACE_CONTROL_NULL_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WPP_TRACE_CONTROL_NULL_GUID__Loc == WPP_TRACE_CONTROL_NULL_GUID;
    assume WPP_TRACE_CONTROL_NULL_GUID != 0;
    call {:si_unique_call 367} GUID_DEVINTERFACE_TAPE__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_TAPE__Loc == GUID_DEVINTERFACE_TAPE;
    assume GUID_DEVINTERFACE_TAPE != 0;
    call {:si_unique_call 368} GUID_DEVINTERFACE_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_VOLUME__Loc == GUID_DEVINTERFACE_VOLUME;
    assume GUID_DEVINTERFACE_VOLUME != 0;
    call {:si_unique_call 369} GUID_DEVINTERFACE_CDCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDCHANGER__Loc == GUID_DEVINTERFACE_CDCHANGER;
    assume GUID_DEVINTERFACE_CDCHANGER != 0;
    call {:si_unique_call 370} GUID_DEVINTERFACE_MEDIUMCHANGER__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_MEDIUMCHANGER__Loc == GUID_DEVINTERFACE_MEDIUMCHANGER;
    assume GUID_DEVINTERFACE_MEDIUMCHANGER != 0;
    call {:si_unique_call 371} ScsiRawInterfaceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume ScsiRawInterfaceGuid__Loc == ScsiRawInterfaceGuid;
    assume ScsiRawInterfaceGuid != 0;
    call {:si_unique_call 372} GUID_DEVINTERFACE_VMLUN__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_VMLUN__Loc == GUID_DEVINTERFACE_VMLUN;
    assume GUID_DEVINTERFACE_VMLUN != 0;
    call {:si_unique_call 373} DefaultTraceSecurityGuid__Loc := __HAVOC_malloc_or_null(16);
    assume DefaultTraceSecurityGuid__Loc == DefaultTraceSecurityGuid;
    assume DefaultTraceSecurityGuid != 0;
    call {:si_unique_call 374} GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVICEDUMP_DRIVER_STORAGE_PORT__Loc == GUID_DEVICEDUMP_DRIVER_STORAGE_PORT;
    assume GUID_DEVICEDUMP_DRIVER_STORAGE_PORT != 0;
    call {:si_unique_call 375} GUID_DEVINTERFACE_PARTITION__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_PARTITION__Loc == GUID_DEVINTERFACE_PARTITION;
    assume GUID_DEVINTERFACE_PARTITION != 0;
    call {:si_unique_call 376} GUID_DEVINTERFACE_CDROM__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_CDROM__Loc == GUID_DEVINTERFACE_CDROM;
    assume GUID_DEVINTERFACE_CDROM != 0;
    call {:si_unique_call 377} GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME__Loc == GUID_DEVINTERFACE_HIDDEN_VOLUME;
    assume GUID_DEVINTERFACE_HIDDEN_VOLUME != 0;
    call {:si_unique_call 378} GUID_DEVINTERFACE_DISK__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_DISK__Loc == GUID_DEVINTERFACE_DISK;
    assume GUID_DEVINTERFACE_DISK != 0;
    call {:si_unique_call 379} SystemTraceControlGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SystemTraceControlGuid__Loc == SystemTraceControlGuid;
    assume SystemTraceControlGuid != 0;
    call {:si_unique_call 380} EventTraceGuid__Loc := __HAVOC_malloc_or_null(16);
    assume EventTraceGuid__Loc == EventTraceGuid;
    assume EventTraceGuid != 0;
    call {:si_unique_call 381} GUID_DEVINTERFACE_SES__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_SES__Loc == GUID_DEVINTERFACE_SES;
    assume GUID_DEVINTERFACE_SES != 0;
    call {:si_unique_call 382} WPP_ThisDir_CTLGUID_wppCtlGuid__Loc := __HAVOC_malloc_or_null(16);
    assume WPP_ThisDir_CTLGUID_wppCtlGuid__Loc == WPP_ThisDir_CTLGUID_wppCtlGuid;
    assume WPP_ThisDir_CTLGUID_wppCtlGuid != 0;
    call {:si_unique_call 383} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 384} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 385} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 386} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 387} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 388} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 389} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 390} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 391} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 392} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 393} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 394} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 395} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 396} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 397} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 398} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 399} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 400} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 401} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(44);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 402} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 403} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 404} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 405} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 406} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 407} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 408} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 409} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 410} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 411} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 412} sdv_fx_dev_object__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_fx_dev_object__Loc == sdv_fx_dev_object;
    assume sdv_fx_dev_object != 0;
    call {:si_unique_call 413} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(380);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 414} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 415} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 416} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 417} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 418} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(240);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 419} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(156);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 420} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(536);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 421} SLAM_guard_S_0_init__Loc := __HAVOC_malloc_or_null(240);
    assume SLAM_guard_S_0_init__Loc == SLAM_guard_S_0_init;
    assume SLAM_guard_S_0_init != 0;
    call {:si_unique_call 422} KeTickCount__Loc := __HAVOC_malloc_or_null(12);
    assume KeTickCount__Loc == KeTickCount;
    assume KeTickCount != 0;
    call {:si_unique_call 423} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 424} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 425} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 426} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 427} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 428} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 429} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 430} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 431} boogieTmp := __HAVOC_malloc_or_null(240);
    assume sicrni == boogieTmp;
    call {:si_unique_call 432} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 433} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 434} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 435} boogieTmp := __HAVOC_malloc_or_null(16);
    call {:si_unique_call 436} boogieTmp := __HAVOC_malloc_or_null(48);
    call {:si_unique_call 437} vslice_dummy_var_1011 := __HAVOC_malloc(44);
    call {:si_unique_call 438} vslice_dummy_var_1012 := __HAVOC_malloc(44);
    call {:si_unique_call 439} vslice_dummy_var_1013 := __HAVOC_malloc(44);
    call {:si_unique_call 440} vslice_dummy_var_1014 := __HAVOC_malloc(44);
    call {:si_unique_call 441} vslice_dummy_var_1015 := __HAVOC_malloc(44);
    call {:si_unique_call 442} vslice_dummy_var_536 := __HAVOC_malloc(236);
    assume {:mainInitDone} true;
    call {:si_unique_call 443} corralExtraInit();
    call {:si_unique_call 444} corralExplainErrorInit();
    call {:si_unique_call 445} _sdv_init11();
    call {:si_unique_call 446} _sdv_init1();
    call {:si_unique_call 447} _sdv_init4();
    call {:si_unique_call 448} _sdv_init5();
    call {:si_unique_call 449} _sdv_init3();
    call {:si_unique_call 450} _sdv_init6();
    call {:si_unique_call 451} _sdv_init9();
    call {:si_unique_call 452} _sdv_init7();
    call {:si_unique_call 453} _sdv_init8();
    call {:si_unique_call 454} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_908 := 0;
    goto L34;

  L34:
    assume Tmp_908 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_907 := 0;
    goto L38;

  L38:
    assume Tmp_907 != 0;
    Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(sdv_devobj_pdo)] := sdv_harnessDeviceExtension;
    Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(sdv_devobj_fdo)] := sdv_harnessDeviceExtension_two;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 455} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L32;

  L32:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_907 := 1;
    goto L38;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_908 := 1;
    goto L34;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_7: int)
{
  var {:pointer} pirp_7: int;
  var vslice_dummy_var_61: int;

  anon0:
    call {:si_unique_call 456} vslice_dummy_var_61 := __HAVOC_malloc(4);
    pirp_7 := actual_pirp_7;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_7 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_7 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_7 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_7 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_912: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_912: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_912;
    return;
}



procedure {:origName "sdv_KeGetCurrentThread"} {:osmodel} sdv_KeGetCurrentThread() returns (Tmp_914: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_KeGetCurrentThread"} {:osmodel} sdv_KeGetCurrentThread() returns (Tmp_914: int)
{
  var {:pointer} sdv_266: int;

  anon0:
    call {:si_unique_call 457} sdv_266 := __HAVOC_malloc(4);
    Tmp_914 := sdv_266;
    return;
}



procedure {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_4: int) returns (Tmp_916: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoAllocateMdl"} {:osmodel} IoAllocateMdl(actual_VirtualAddress: int, actual_Length: int, actual_SecondaryBuffer: int, actual_ChargeQuota: int, actual_Irp_4: int) returns (Tmp_916: int)
{
  var {:pointer} sdv_268: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 458} sdv_268 := __HAVOC_malloc(1);
    Tmp_916 := sdv_268;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_916 := 0;
    goto L1;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString_1: int, actual_SourceString_1: int)
{
  var {:pointer} DestinationString_1: int;
  var {:pointer} SourceString_1: int;
  var vslice_dummy_var_62: int;

  anon0:
    call {:si_unique_call 459} vslice_dummy_var_62 := __HAVOC_malloc(4);
    DestinationString_1 := actual_DestinationString_1;
    SourceString_1 := actual_SourceString_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString_1 != 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString_1 == 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    assume {:nonnull} DestinationString_1 != 0;
    assume DestinationString_1 > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString_1 != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString_1 == 0;
    goto L4;
}



procedure {:origName "RtlCompareMemory"} {:osmodel} RtlCompareMemory(actual_Source1: int, actual_Source2: int, actual_Length_1: int) returns (Tmp_920: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlCompareMemory"} {:osmodel} RtlCompareMemory(actual_Source1: int, actual_Source2: int, actual_Length_1: int) returns (Tmp_920: int)
{
  var {:scalar} r_2: int;
  var {:scalar} sdv_269: int;

  anon0:
    r_2 := sdv_269;
    Tmp_920 := r_2;
    return;
}



procedure {:origName "KeAcquireInStackQueuedSpinLockAtDpcLevel"} {:osmodel} KeAcquireInStackQueuedSpinLockAtDpcLevel(actual_SpinLock_3: int, actual_LockHandle: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeAcquireInStackQueuedSpinLockAtDpcLevel"} {:osmodel} KeAcquireInStackQueuedSpinLockAtDpcLevel(actual_SpinLock_3: int, actual_LockHandle: int)
{
  var vslice_dummy_var_63: int;

  anon0:
    call {:si_unique_call 460} vslice_dummy_var_63 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseInStackQueuedSpinLockFromDpcLevel"} {:osmodel} KeReleaseInStackQueuedSpinLockFromDpcLevel(actual_LockHandle_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeReleaseInStackQueuedSpinLockFromDpcLevel"} {:osmodel} KeReleaseInStackQueuedSpinLockFromDpcLevel(actual_LockHandle_1: int)
{
  var vslice_dummy_var_64: int;

  anon0:
    call {:si_unique_call 461} vslice_dummy_var_64 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoBuildPartialMdl"} {:osmodel} IoBuildPartialMdl(actual_SourceMdl: int, actual_TargetMdl: int, actual_VirtualAddress_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_65: int;

  anon0:
    call {:si_unique_call 462} vslice_dummy_var_65 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_928: int);
  free ensures {:va_keep} Tmp_928 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_928: int)
{

  anon0:
    Tmp_928 := 1;
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination: int, actual_Length_3: int)
{
  var vslice_dummy_var_66: int;

  anon0:
    call {:si_unique_call 463} vslice_dummy_var_66 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoFreeMdl"} {:osmodel} IoFreeMdl(actual_Mdl_2: int)
{
  var vslice_dummy_var_67: int;

  anon0:
    call {:si_unique_call 464} vslice_dummy_var_67 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_934: int);
  free ensures {:va_keep} Tmp_934 == 0 || Tmp_934 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value: int, actual_Base: int, actual_String: int) returns (Tmp_934: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_934 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_934 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_68: int;

  anon0:
    call {:si_unique_call 465} vslice_dummy_var_68 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoInvalidateDeviceState"} {:osmodel} IoInvalidateDeviceState(actual_PhysicalDeviceObject: int)
{
  var vslice_dummy_var_69: int;

  anon0:
    call {:si_unique_call 466} vslice_dummy_var_69 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_KeLowerIrql"} {:osmodel} sdv_KeLowerIrql(actual_NewIrql: int)
{
  var {:scalar} NewIrql: int;
  var vslice_dummy_var_70: int;

  anon0:
    call {:si_unique_call 467} vslice_dummy_var_70 := __HAVOC_malloc(4);
    NewIrql := actual_NewIrql;
    return;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_8: int)
{
  var vslice_dummy_var_71: int;

  anon0:
    call {:si_unique_call 468} vslice_dummy_var_71 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po: int, actual_pirp_9: int) returns (Tmp_944: int);
  modifies alloc, completion_called, Mem_T.LogStart__DEBUG_LOG, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po: int, actual_pirp_9: int) returns (Tmp_944: int)
{
  var {:pointer} ps: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_945: int;
  var {:scalar} sdv_279: int;
  var {:scalar} status_22: int;
  var {:scalar} Tmp_947: int;
  var {:pointer} po: int;
  var {:pointer} pirp_9: int;

  anon0:
    po := actual_po;
    pirp_9 := actual_pirp_9;
    status_22 := 0;
    minor := sdv_279;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    havoc ps;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    call {:si_unique_call 469} sdv_SetStatus(pirp_9);
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 470} sdv_stub_dispatch_begin();
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    goto L60;

  L60:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_945 := 0;
    goto L214;

  L214:
    assume Tmp_945 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto L66;

  L66:
    call {:si_unique_call 471} status_22 := Sbp2PnpDeviceControl(po, pirp_9);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    call {:si_unique_call 472} sdv_stub_dispatch_end(status_22, 0);
    assume {:nonnull} pirp_9 != 0;
    assume pirp_9 > 0;
    Tmp_944 := status_22;
    goto LM2;

  LM2:
    return;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L66;

  anon61_Then:
    Tmp_945 := 1;
    goto L214;

  anon59_Then:
    goto L61;

  anon83_Then:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_start_irp_already_issued != 0;
    Tmp_947 := 0;
    goto L220;

  L220:
    assume Tmp_947 != 0;
    goto L60;

  anon58_Then:
    assume {:partition} sdv_start_irp_already_issued == 0;
    Tmp_947 := 1;
    goto L220;

  anon62_Then:
    call {:si_unique_call 473} status_22 := sdv_DoNothing();
    goto L72;

  anon63_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 474} status_22 := Sbp2SystemControl(po, pirp_9);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 475} sdv_SetPowerIrpMinorFunction(pirp_9);
    call {:si_unique_call 476} status_22 := Sbp2PowerControl(po, pirp_9);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 477} status_22 := sdv_DoNothing();
    goto L72;

  anon66_Then:
    call {:si_unique_call 478} status_22 := sdv_DoNothing();
    goto L72;

  anon67_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 479} status_22 := sdv_DoNothing();
    goto L72;

  anon68_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 480} status_22 := Sbp2ScsiRequests(po, pirp_9);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 481} status_22 := Sbp2DeviceControl(po, pirp_9);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 482} status_22 := sdv_DoNothing();
    goto L72;

  anon71_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 483} status_22 := sdv_DoNothing();
    goto L72;

  anon72_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 484} status_22 := sdv_DoNothing();
    goto L72;

  anon73_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 485} status_22 := sdv_DoNothing();
    goto L72;

  anon74_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 486} status_22 := sdv_DoNothing();
    goto L72;

  anon75_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 487} status_22 := sdv_DoNothing();
    goto L72;

  anon76_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 488} status_22 := Sbp2CreateClose(po, pirp_9);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 489} status_22 := Sbp2CreateClose(po, pirp_9);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_948: int);
  free ensures {:va_keep} Tmp_948 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_948: int)
{

  anon0:
    Tmp_948 := 1;
    return;
}



procedure {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_950: int);
  free ensures {:va_keep} Tmp_950 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_950: int)
{

  anon0:
    Tmp_950 := 0;
    return;
}



procedure {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_1: int) returns (Tmp_952: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeResetEvent"} {:osmodel} KeResetEvent(actual_Event_1: int) returns (Tmp_952: int)
{
  var {:scalar} OldState_1: int;
  var {:pointer} Event_1: int;

  anon0:
    Event_1 := actual_Event_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    havoc OldState_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    Tmp_952 := OldState_1;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_4: int, actual_new_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_4: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_72: int;

  anon0:
    call {:si_unique_call 490} vslice_dummy_var_72 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_10: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_10: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_73: int;

  anon0:
    call {:si_unique_call 491} vslice_dummy_var_73 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_958: int);
  free ensures {:va_keep} Tmp_958 == 0 || Tmp_958 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlAnsiStringToUnicodeString"} {:osmodel} RtlAnsiStringToUnicodeString(actual_DestinationString_2: int, actual_SourceString_2: int, actual_AllocateDestinationString: int) returns (Tmp_958: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_958 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_958 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_1: int, actual_Source: int, actual_Length_4: int)
{
  var vslice_dummy_var_74: int;

  anon0:
    call {:si_unique_call 492} vslice_dummy_var_74 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeReleaseInStackQueuedSpinLock"} {:osmodel} KeReleaseInStackQueuedSpinLock(actual_LockHandle_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeReleaseInStackQueuedSpinLock"} {:osmodel} KeReleaseInStackQueuedSpinLock(actual_LockHandle_2: int)
{
  var vslice_dummy_var_75: int;

  anon0:
    call {:si_unique_call 493} vslice_dummy_var_75 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_5: int, actual_ResultLength: int) returns (Tmp_964: int);
  free ensures {:va_keep} Tmp_964 == -1073741811 || Tmp_964 == -1073741823 || Tmp_964 == 0 || Tmp_964 == 5 || Tmp_964 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_5: int, actual_ResultLength: int) returns (Tmp_964: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_291: int;
  var {:scalar} Length_5: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_5 := actual_Length_5;
    ResultLength := actual_ResultLength;
    L := sdv_291;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_964 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_964 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_5;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_5 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_964 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_5 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_5;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_964 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_5 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_964 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_5;
    goto L13;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_76: int;

  anon0:
    call {:si_unique_call 494} vslice_dummy_var_76 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_968: int);
  free ensures {:va_keep} Tmp_968 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_968: int)
{

  anon0:
    Tmp_968 := 0;
    return;
}



procedure {:origName "ExFreePoolWithTag"} {:osmodel} ExFreePoolWithTag(actual_P_1: int, actual_Tag_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ExFreePoolWithTag"} {:osmodel} ExFreePoolWithTag(actual_P_1: int, actual_Tag_2: int)
{
  var vslice_dummy_var_77: int;

  anon0:
    call {:si_unique_call 495} vslice_dummy_var_77 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_5: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State_1: int) returns (Tmp_972: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "PoRegisterDeviceForIdleDetection"} {:osmodel} PoRegisterDeviceForIdleDetection(actual_DeviceObject_5: int, actual_ConservationIdleTime: int, actual_PerformanceIdleTime: int, actual_State_1: int) returns (Tmp_972: int)
{
  var {:pointer} r_3: int;
  var {:pointer} sdv_292: int;

  anon0:
    call {:si_unique_call 496} sdv_292 := __HAVOC_malloc(1);
    r_3 := sdv_292;
    Tmp_972 := r_3;
    return;
}



procedure {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_3: int) returns (Tmp_976: int);
  free ensures {:va_keep} Tmp_976 == -1073741823 || Tmp_976 == -1073741738 || Tmp_976 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoAcquireRemoveLock"} {:osmodel} sdv_IoAcquireRemoveLock(actual_RemoveLock_1: int, actual_Tag_3: int) returns (Tmp_976: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_976 := -1073741823;
    goto L1;

  L1:
    return;

  anon5_Then:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_976 := -1073741738;
    goto L1;

  anon6_Then:
    Tmp_976 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_978: int);
  free ensures {:va_keep} Tmp_978 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_978: int)
{

  anon0:
    Tmp_978 := 1;
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_980: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_980: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_980;
    return;
}



procedure {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ExDeleteNPagedLookasideList"} {:osmodel} ExDeleteNPagedLookasideList(actual_Lookaside_1: int)
{
  var vslice_dummy_var_78: int;

  anon0:
    call {:si_unique_call 497} vslice_dummy_var_78 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_79: int;

  anon0:
    call {:si_unique_call 498} vslice_dummy_var_79 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_986: int);
  free ensures {:va_keep} Tmp_986 == 1 || Tmp_986 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_986: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_986 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_986 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_988: int);
  free ensures {:va_keep} Tmp_988 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_988: int)
{

  anon0:
    Tmp_988 := 1;
    return;
}



procedure {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_990: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoAllocateIrp"} {:osmodel} IoAllocateIrp(actual_StackSize: int, actual_ChargeQuota_1: int) returns (Tmp_990: int)
{
  var {:pointer} irpSp_1: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 499} irpSp_1 := sdv_IoGetNextIrpStackLocation(sdv_other_irp);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    Tmp_990 := sdv_other_irp;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_990 := 0;
    goto L1;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_6: int, actual_Irp_5: int) returns (Tmp_992: int);
  free ensures {:va_keep} Tmp_992 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_6: int, actual_Irp_5: int) returns (Tmp_992: int)
{
  var {:scalar} status_23: int;
  var {:pointer} Irp_5: int;

  anon0:
    Irp_5 := actual_Irp_5;
    status_23 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L25;

  L25:
    Tmp_992 := status_23;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_5;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_5;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_5;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_5;
    goto L36;
}



procedure {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_994: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_ObReferenceObject"} {:osmodel} sdv_ObReferenceObject(actual_Object_1: int) returns (Tmp_994: int)
{
  var {:scalar} p_4: int;

  anon0:
    Tmp_994 := p_4;
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type_2: int, actual_State_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_2: int, actual_Type_2: int, actual_State_2: int)
{
  var {:pointer} Event_2: int;
  var {:scalar} Type_2: int;
  var {:scalar} State_2: int;
  var vslice_dummy_var_80: int;

  anon0:
    call {:si_unique_call 500} vslice_dummy_var_80 := __HAVOC_malloc(4);
    Event_2 := actual_Event_2;
    Type_2 := actual_Type_2;
    State_2 := actual_State_2;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    assume {:nonnull} Event_2 != 0;
    assume Event_2 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_2: int)
{
  var vslice_dummy_var_81: int;

  anon0:
    call {:si_unique_call 501} vslice_dummy_var_81 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_7: int, actual_Irp_6: int) returns (Tmp_1000: int);
  free ensures {:va_keep} Tmp_1000 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_7: int, actual_Irp_6: int) returns (Tmp_1000: int)
{
  var {:pointer} Irp_6: int;

  anon0:
    Irp_6 := actual_Irp_6;
    call {:si_unique_call 502} Tmp_1000 := IofCallDriver(0, Irp_6);
    return;
}



procedure {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoFreeIrp"} {:osmodel} IoFreeIrp(actual_pirp_11: int)
{
  var vslice_dummy_var_82: int;

  anon0:
    call {:si_unique_call 503} vslice_dummy_var_82 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_5: int)
{
  var {:pointer} SpinLock_5: int;
  var vslice_dummy_var_83: int;

  anon0:
    call {:si_unique_call 504} vslice_dummy_var_83 := __HAVOC_malloc(4);
    SpinLock_5 := actual_SpinLock_5;
    assume {:nonnull} SpinLock_5 != 0;
    assume SpinLock_5 > 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_4: int) returns (Tmp_1006: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag_4: int) returns (Tmp_1006: int)
{
  var {:pointer} sdv_301: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 505} sdv_301 := __HAVOC_malloc(NumberOfBytes);
    Tmp_1006 := sdv_301;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1006 := 0;
    goto L1;
}



procedure {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_8: int) returns (Tmp_1008: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoAllocateWorkItem"} {:osmodel} IoAllocateWorkItem(actual_DeviceObject_8: int) returns (Tmp_1008: int)
{
  var {:pointer} ioWorkItem: int;
  var {:pointer} sdv_303: int;
  var {:scalar} Tmp_1010: int;

  anon0:
    call {:si_unique_call 506} sdv_303 := __HAVOC_malloc(1);
    ioWorkItem := sdv_303;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} ioWorkItem == 0;
    Tmp_1010 := 0;
    goto L27;

  L27:
    assume Tmp_1010 != 0;
    assume {:nonnull} ioWorkItem != 0;
    assume ioWorkItem > 0;
    Tmp_1008 := ioWorkItem;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} ioWorkItem != 0;
    Tmp_1010 := 1;
    goto L27;

  anon6_Then:
    Tmp_1008 := 0;
    goto L1;
}



procedure {:origName "KeAcquireInStackQueuedSpinLock"} {:osmodel} KeAcquireInStackQueuedSpinLock(actual_SpinLock_6: int, actual_LockHandle_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "KeAcquireInStackQueuedSpinLock"} {:osmodel} KeAcquireInStackQueuedSpinLock(actual_SpinLock_6: int, actual_LockHandle_3: int)
{
  var vslice_dummy_var_84: int;

  anon0:
    call {:si_unique_call 507} vslice_dummy_var_84 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_85: int;

  anon0:
    call {:si_unique_call 508} vslice_dummy_var_85 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_86: int;

  anon0:
    call {:si_unique_call 509} vslice_dummy_var_86 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_9: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1017: int);
  free ensures {:va_keep} Tmp_1017 == -1073741811 || Tmp_1017 == -1073741808 || Tmp_1017 == -1073741823 || Tmp_1017 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_9: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1017: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1017 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_1017 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_1017 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_1017 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_1019: int);
  free ensures {:va_keep} Tmp_1019 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle: int) returns (Tmp_1019: int)
{

  anon0:
    Tmp_1019 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1021: int);
  free ensures {:va_keep} Tmp_1021 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1021: int)
{

  anon0:
    Tmp_1021 := -1073741823;
    return;
}



procedure {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_1023: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_ExAllocateFromNPagedLookasideList"} {:osmodel} sdv_ExAllocateFromNPagedLookasideList(actual_Lookaside_2: int) returns (Tmp_1023: int)
{
  var {:pointer} sdv_306: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 510} sdv_306 := __HAVOC_malloc(1);
    Tmp_1023 := sdv_306;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1023 := 0;
    goto L1;
}



procedure {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller: int)
{

  anon0:
    call {:si_unique_call 511} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_sdv_IoCompleteRequest_entry"} {:osmodel} SLIC_sdv_IoCompleteRequest_entry(actual_caller_1: int);
  modifies completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "SLIC_sdv_IoCompleteRequest_entry"} {:osmodel} SLIC_sdv_IoCompleteRequest_entry(actual_caller_1: int)
{
  var {:pointer} caller_1: int;

  anon0:
    caller_1 := actual_caller_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} completion_called == 0;
    completion_called := 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon5_Then:
    assume {:partition} completion_called != 0;
    call {:si_unique_call 512} SLIC_ABORT_5_0(caller_1);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init11"} {:osmodel} _sdv_init11();
  modifies SLAM_guard_S_0, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} completion_called == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_sdv_init11"} {:osmodel} _sdv_init11()
{

  anon0:
    SLAM_guard_S_0 := SLAM_guard_S_0_init;
    completion_called := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_4: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_4: int)
{

  anon0:
    call {:si_unique_call 513} SLIC_EXIT_ROUTINE(strConst__li2bpl4);
    return;
}



procedure {:origName "SLIC_ABORT_5_0"} SLIC_ABORT_5_0(actual_caller_5: int);
  modifies yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "SLIC_ABORT_5_0"} SLIC_ABORT_5_0(actual_caller_5: int)
{
  var {:pointer} caller_5: int;

  anon0:
    caller_5 := actual_caller_5;
    call {:si_unique_call 514} SLIC_ERROR_ROUTINE(strConst__li2bpl5);
    return;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_313: int, actual_sdv_314: int) returns (Tmp_1029: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_IoReleaseRemoveLock"} sdv_IoReleaseRemoveLock(actual_sdv_313: int, actual_sdv_314: int) returns (Tmp_1029: int)
{
  var {:scalar} sdv_315: int;

  anon0:
    call {:si_unique_call 515} Tmp_1029 := __HAVOC_malloc(4);
    call {:si_unique_call 516} sdv_315 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1029 != 0;
    assume Tmp_1029 > 0;
    assume {:nonnull} sdv_315 != 0;
    assume sdv_315 > 0;
    return;
}



procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_349: int, actual_sdv_350: int) returns (Tmp_1045: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_349: int, actual_sdv_350: int) returns (Tmp_1045: int)
{
  var {:scalar} sdv_351: int;

  anon0:
    call {:si_unique_call 517} Tmp_1045 := __HAVOC_malloc(4);
    call {:si_unique_call 518} sdv_351 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1045 != 0;
    assume Tmp_1045 > 0;
    assume {:nonnull} sdv_351 != 0;
    assume sdv_351 > 0;
    return;
}



procedure {:origName "Sbp2PowerControl"} Sbp2PowerControl(actual_DeviceObject_10: int, actual_Irp_7: int) returns (Tmp_1053: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2PowerControl"} Sbp2PowerControl(actual_DeviceObject_10: int, actual_Irp_7: int) returns (Tmp_1053: int)
{
  var {:scalar} Tmp_1054: int;
  var {:pointer} irpStack: int;
  var {:pointer} pdoExtension_5: int;
  var {:pointer} Tmp_1055: int;
  var {:pointer} Tmp_1056: int;
  var {:scalar} Tmp_1057: int;
  var {:scalar} Tmp_1058: int;
  var {:pointer} Tmp_1059: int;
  var {:scalar} status_24: int;
  var {:pointer} Tmp_1061: int;
  var {:scalar} Tmp_1062: int;
  var {:pointer} Tmp_1063: int;
  var {:scalar} minorFunction: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_1016: int;

  anon0:
    DeviceObject_10 := actual_DeviceObject_10;
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 519} Tmp_1061 := __HAVOC_malloc(4);
    call {:si_unique_call 520} Tmp_1063 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_10 != 0;
    assume DeviceObject_10 > 0;
    pdoExtension_5 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_10)];
    call {:si_unique_call 521} irpStack := sdv_IoGetCurrentIrpStackLocation(Irp_7);
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc minorFunction;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1061;
    assume {:nonnull} Tmp_1061 != 0;
    assume Tmp_1061 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    Tmp_1062 := minorFunction;
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    Tmp_1056 := strConst__li2bpl7;
    goto L25;

  L25:
    havoc Tmp_1055;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1054;
    call {:si_unique_call 522} WPP_SF_qsqD(Tmp_1054, 34, Tmp_1055, pdoExtension_5, Tmp_1056, Irp_7, Tmp_1062);
    goto L18;

  L18:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    Tmp_1057 := minorFunction;
    call {:si_unique_call 523} Sbp2AddLog(pdoExtension_5, 2, -800893890, Tmp_1057, Irp_7);
    call {:si_unique_call 524} status_24 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_24 < 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1063;
    assume {:nonnull} Tmp_1063 != 0;
    assume Tmp_1063 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_1059;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1058;
    call {:si_unique_call 525} WPP_SF_q(Tmp_1058, 35, Tmp_1059, pdoExtension_5);
    goto L69;

  L69:
    call {:si_unique_call 526} Sbp2AddLog(pdoExtension_5, 2, -800893903, status_24, 0);
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    call {:si_unique_call 527} PoStartNextPowerIrp(0);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume Irp_7 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 528} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L131;

  L131:
    call {:si_unique_call 529} sdv_IoCompleteRequest(0, 0);
    Tmp_1053 := status_24;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    assume !(Irp_7 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L131;

  anon53_Then:
    goto L69;

  anon67_Then:
    goto L69;

  anon52_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L69;

  anon49_Then:
    assume {:partition} 0 <= status_24;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} minorFunction != 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} minorFunction != 1;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} minorFunction != 2;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} minorFunction == 3;
    goto L46;

  L46:
    status_24 := 0;
    goto L56;

  L56:
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    call {:si_unique_call 530} PoStartNextPowerIrp(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume Irp_7 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 531} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto L128;

  L128:
    call {:si_unique_call 532} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_5 != 0;
    assume pdoExtension_5 > 0;
    call {:si_unique_call 533} vslice_dummy_var_87 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_5), Irp_7);
    Tmp_1053 := status_24;
    goto L1;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon51_Then:
    assume !(Irp_7 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L128;

  anon57_Then:
    assume {:partition} minorFunction != 3;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    havoc status_24;
    goto L56;

  anon58_Then:
    assume {:partition} minorFunction == 2;
    assume {:nonnull} irpStack != 0;
    assume irpStack > 0;
    havoc vslice_dummy_var_1016;
    call {:si_unique_call 534} Sbp2AddLog(pdoExtension_5, 2, -800893902, vslice_dummy_var_1016, Irp_7);
    call {:si_unique_call 535} status_24 := Sbp2PdoSetPower(DeviceObject_10, Irp_7);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1053 := status_24;
    goto L1;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    assume {:partition} minorFunction == 1;
    goto L46;

  anon50_Then:
    assume {:partition} minorFunction == 0;
    goto L46;

  anon56_Then:
    status_24 := -1073741810;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    call {:si_unique_call 536} PoStartNextPowerIrp(0);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume Irp_7 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 537} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} yogi_error != 1;
    goto L134;

  L134:
    call {:si_unique_call 538} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    Tmp_1053 := status_24;
    goto L1;

  anon69_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume !(Irp_7 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L134;

  anon47_Then:
    assume {:nonnull} DeviceObject_10 != 0;
    assume DeviceObject_10 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} minorFunction == 2;
    call {:si_unique_call 539} status_24 := Sbp2FdoSetPower(DeviceObject_10, Irp_7);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L96;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:partition} minorFunction != 2;
    call {:si_unique_call 540} PoStartNextPowerIrp(0);
    call {:si_unique_call 541} sdv_IoSkipCurrentIrpStackLocation(Irp_7);
    call {:si_unique_call 542} status_24 := PoCallDriver(0, Irp_7);
    goto L96;

  anon62_Then:
    Tmp_1056 := strConst__li2bpl6;
    goto L25;

  anon48_Then:
    goto L18;

  anon61_Then:
    goto L18;

  anon60_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2PdoCompleteSystemPowerIrp"} Sbp2PdoCompleteSystemPowerIrp(actual_DeviceObject_11: int, actual_Irp_8: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2PdoCompleteSystemPowerIrp"} Sbp2PdoCompleteSystemPowerIrp(actual_DeviceObject_11: int, actual_Irp_8: int)
{
  var {:pointer} Tmp_1064: int;
  var {:pointer} irpStack_1: int;
  var {:pointer} Tmp_1065: int;
  var {:pointer} pdoExtension_6: int;
  var {:scalar} newPowerState: int;
  var {:scalar} Tmp_1066: int;
  var {:scalar} newSystemState: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_8: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_1017: int;

  anon0:
    call {:si_unique_call 543} newPowerState := __HAVOC_malloc(8);
    call {:si_unique_call 544} vslice_dummy_var_88 := __HAVOC_malloc(4);
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_8 := actual_Irp_8;
    call {:si_unique_call 545} Tmp_1064 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_11 != 0;
    assume DeviceObject_11 > 0;
    pdoExtension_6 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_11)];
    call {:si_unique_call 546} irpStack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} irpStack_1 != 0;
    assume irpStack_1 > 0;
    havoc newSystemState;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1064;
    assume {:nonnull} Tmp_1064 != 0;
    assume Tmp_1064 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    havoc Tmp_1065;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1066;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc vslice_dummy_var_1017;
    call {:si_unique_call 547} WPP_SF_qqD(Tmp_1066, 11, Tmp_1065, pdoExtension_6, Irp_8, vslice_dummy_var_1017);
    goto L17;

  L17:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    assume {:nonnull} newPowerState != 0;
    assume newPowerState > 0;
    call {:si_unique_call 548} Sbp2SetPowerState(DeviceObject_11, 0, newPowerState);
    goto L25;

  L25:
    call {:si_unique_call 549} PoStartNextPowerIrp(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume Irp_8 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 550} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto L46;

  L46:
    call {:si_unique_call 551} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_6 != 0;
    assume pdoExtension_6 > 0;
    call {:si_unique_call 552} vslice_dummy_var_89 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_6), Irp_8);
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume !(Irp_8 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L46;

  anon13_Then:
    goto L25;

  anon14_Then:
    goto L17;

  anon17_Then:
    goto L17;

  anon16_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L17;
}



procedure {:origName "Sbp2PdoSetPower"} Sbp2PdoSetPower(actual_DeviceObject_12: int, actual_Irp_9: int) returns (Tmp_1069: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2PdoSetPower"} Sbp2PdoSetPower(actual_DeviceObject_12: int, actual_Irp_9: int) returns (Tmp_1069: int)
{
  var {:pointer} irpStack_2: int;
  var {:pointer} Tmp_1070: int;
  var {:scalar} Tmp_1071: int;
  var {:pointer} Tmp_1072: int;
  var {:pointer} Tmp_1073: int;
  var {:pointer} Tmp_1074: int;
  var {:pointer} pdoExtension_7: int;
  var {:pointer} Tmp_1075: int;
  var {:scalar} Tmp_1076: int;
  var {:scalar} newPowerState_1: int;
  var {:pointer} Tmp_1077: int;
  var {:scalar} Tmp_1078: int;
  var {:pointer} Tmp_1079: int;
  var {:scalar} orbLock_3: int;
  var {:pointer} Tmp_1080: int;
  var {:pointer} Tmp_1081: int;
  var {:scalar} Tmp_1082: int;
  var {:scalar} powerState: int;
  var {:scalar} Tmp_1083: int;
  var {:scalar} Tmp_1084: int;
  var {:pointer} Tmp_1085: int;
  var {:scalar} sdv_367: int;
  var {:pointer} Tmp_1086: int;
  var {:pointer} Tmp_1087: int;
  var {:scalar} newDeviceState: int;
  var {:scalar} Tmp_1088: int;
  var {:scalar} Tmp_1089: int;
  var {:pointer} Tmp_1090: int;
  var {:scalar} Tmp_1091: int;
  var {:pointer} fdoExtension_2: int;
  var {:scalar} Tmp_1092: int;
  var {:scalar} newPowerState_2: int;
  var {:scalar} Tmp_1093: int;
  var {:pointer} Tmp_1094: int;
  var {:pointer} Tmp_1095: int;
  var {:pointer} Tmp_1096: int;
  var {:pointer} Tmp_1097: int;
  var {:scalar} cIrql_2: int;
  var {:scalar} Tmp_1098: int;
  var {:scalar} status_25: int;
  var {:pointer} Tmp_1099: int;
  var {:pointer} Tmp_1100: int;
  var {:scalar} bAsyncPowerUp: int;
  var {:scalar} newSystemState_1: int;
  var {:pointer} Tmp_1101: int;
  var {:scalar} powerType: int;
  var {:pointer} Tmp_1102: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} Irp_9: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_1018: int;
  var vslice_dummy_var_1019: int;
  var vslice_dummy_var_1020: int;

  anon0:
    call {:si_unique_call 553} newPowerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 554} orbLock_3 := __HAVOC_malloc(12);
    call {:si_unique_call 555} powerState := __HAVOC_malloc(8);
    call {:si_unique_call 556} newPowerState_2 := __HAVOC_malloc(8);
    DeviceObject_12 := actual_DeviceObject_12;
    Irp_9 := actual_Irp_9;
    call {:si_unique_call 557} Tmp_1073 := __HAVOC_malloc(4);
    call {:si_unique_call 558} Tmp_1075 := __HAVOC_malloc(4);
    call {:si_unique_call 559} Tmp_1086 := __HAVOC_malloc(4);
    call {:si_unique_call 560} Tmp_1087 := __HAVOC_malloc(4);
    call {:si_unique_call 561} Tmp_1094 := __HAVOC_malloc(4);
    call {:si_unique_call 562} Tmp_1097 := __HAVOC_malloc(4);
    call {:si_unique_call 563} Tmp_1099 := __HAVOC_malloc(4);
    call {:si_unique_call 564} Tmp_1101 := __HAVOC_malloc(4);
    call {:si_unique_call 565} irpStack_2 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    pdoExtension_7 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_12)];
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc powerType;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1094;
    assume {:nonnull} Tmp_1094 != 0;
    assume Tmp_1094 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} powerType != 0;
    Tmp_1102 := strConst__li2bpl9;
    goto L26;

  L26:
    havoc Tmp_1100;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1078;
    call {:si_unique_call 566} WPP_SF_qsq(Tmp_1078, 13, Tmp_1100, pdoExtension_7, Tmp_1102, Irp_9);
    goto L18;

  L18:
    call {:si_unique_call 567} sdv_IoMarkIrpPending(0);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} powerType == 0;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc newSystemState_1;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1086;
    assume {:nonnull} Tmp_1086 != 0;
    assume Tmp_1086 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    Tmp_1083 := newSystemState_1 - 1;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc Tmp_1098;
    havoc Tmp_1095;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1093;
    call {:si_unique_call 568} WPP_SF_qDDq(Tmp_1093, 14, Tmp_1095, pdoExtension_7, Tmp_1098, Tmp_1083, Irp_9);
    goto L158;

  L158:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc vslice_dummy_var_1018;
    call {:si_unique_call 569} Sbp2AddLog(pdoExtension_7, 2, -800893837, vslice_dummy_var_1018, newSystemState_1);
    status_25 := 0;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} newSystemState_1 != 1;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    assume {:nonnull} newPowerState_2 != 0;
    assume newPowerState_2 > 0;
    call {:si_unique_call 570} Sbp2SetPowerState(DeviceObject_12, 0, newPowerState_2);
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 571} status_25 := PoRequestPowerIrp(0, 2, powerState, li2bplFunctionConstant694, 0, 0);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} status_25 < 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1099;
    assume {:nonnull} Tmp_1099 != 0;
    assume Tmp_1099 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    havoc Tmp_1074;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1089;
    call {:si_unique_call 572} WPP_SF_qD(Tmp_1089, 17, Tmp_1074, pdoExtension_7, status_25);
    goto L111;

  L111:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} status_25 == 259;
    goto L119;

  L119:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1075;
    assume {:nonnull} Tmp_1075 != 0;
    assume Tmp_1075 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    havoc Tmp_1081;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1071;
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    call {:si_unique_call 573} WPP_SF_qqD(Tmp_1071, 20, Tmp_1081, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_12)], Irp_9, status_25);
    goto L120;

  L120:
    Tmp_1069 := 259;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon105_Then:
    goto L120;

  anon125_Then:
    goto L120;

  anon104_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L120;

  anon103_Then:
    assume {:partition} status_25 != 259;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 574} Sbp2PdoCompletePowerIrp(DeviceObject_12, Irp_9);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} yogi_error != 1;
    goto L119;

  anon124_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon117_Then:
    goto L111;

  anon138_Then:
    goto L111;

  anon116_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L111;

  anon115_Then:
    assume {:partition} 0 <= status_25;
    status_25 := 259;
    goto L111;

  anon109_Then:
    assume {:partition} newSystemState_1 == 1;
    bAsyncPowerUp := 0;
    call {:si_unique_call 575} Tmp_1090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1090 != 0;
    assume Tmp_1090 > 0;
    call {:si_unique_call 576} sdv_KeAcquireSpinLock(0, Tmp_1090);
    assume {:nonnull} Tmp_1090 != 0;
    assume Tmp_1090 > 0;
    havoc cIrql_2;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc Tmp_1085;
    assume {:nonnull} Tmp_1085 != 0;
    assume Tmp_1085 > 0;
    fdoExtension_2 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1085)];
    assume {:nonnull} fdoExtension_2 != 0;
    assume fdoExtension_2 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1073;
    assume {:nonnull} Tmp_1073 != 0;
    assume Tmp_1073 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_1070;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1091;
    call {:si_unique_call 577} WPP_SF_q(Tmp_1091, 15, Tmp_1070, pdoExtension_7);
    goto L188;

  L188:
    status_25 := -1073741810;
    call {:si_unique_call 578} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L111;

  anon110_Then:
    goto L188;

  anon135_Then:
    goto L188;

  anon134_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon133_Then:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc Tmp_1079;
    assume {:nonnull} Tmp_1079 != 0;
    assume Tmp_1079 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    bAsyncPowerUp := 1;
    goto L199;

  L199:
    call {:si_unique_call 579} sdv_KeReleaseSpinLock(0, cIrql_2);
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 580} vslice_dummy_var_92 := PoRequestPowerIrp(0, 2, powerState, 0, 0, 0);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} status_25 < 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1101;
    assume {:nonnull} Tmp_1101 != 0;
    assume Tmp_1101 > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    havoc Tmp_1072;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1088;
    call {:si_unique_call 581} WPP_SF_qD(Tmp_1088, 16, Tmp_1072, pdoExtension_7, status_25);
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto L111;

  anon114_Then:
    goto L216;

  anon137_Then:
    goto L216;

  anon113_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L216;

  anon111_Then:
    assume {:partition} 0 <= status_25;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} bAsyncPowerUp != 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    goto L213;

  L213:
    status_25 := 0;
    goto L111;

  anon112_Then:
    assume {:partition} bAsyncPowerUp == 0;
    goto L213;

  anon136_Then:
    goto L199;

  anon132_Then:
    goto L111;

  anon108_Then:
    goto L158;

  anon131_Then:
    goto L158;

  anon130_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L158;

  anon95_Then:
    assume {:partition} powerType != 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} powerType == 1;
    assume {:nonnull} irpStack_2 != 0;
    assume irpStack_2 > 0;
    havoc newDeviceState;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1097;
    assume {:nonnull} Tmp_1097 != 0;
    assume Tmp_1097 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Tmp_1092 := newDeviceState - 1;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc Tmp_1084;
    havoc Tmp_1080;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1076;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc vslice_dummy_var_1019;
    call {:si_unique_call 582} WPP_SF_qDDqD(Tmp_1076, 18, Tmp_1080, pdoExtension_7, Tmp_1084, Tmp_1092, Irp_9, vslice_dummy_var_1019);
    goto L41;

  L41:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc vslice_dummy_var_1020;
    call {:si_unique_call 583} Sbp2AddLog(pdoExtension_7, 2, -800893852, vslice_dummy_var_1020, newDeviceState);
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} orbLock_3 != 0;
    assume orbLock_3 > 0;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    assume {:nonnull} newPowerState_1 != 0;
    assume newPowerState_1 > 0;
    call {:si_unique_call 584} Sbp2SetPowerState(DeviceObject_12, 1, newPowerState_1);
    call {:si_unique_call 585} AcquireOrbListLock(pdoExtension_7, orbLock_3, 0);
    call {:si_unique_call 586} sdv_367 := sdv_IsListEmpty(0);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} sdv_367 != 0;
    call {:si_unique_call 587} ReleaseOrbListLock(pdoExtension_7, orbLock_3, 0);
    call {:si_unique_call 588} Tmp_1090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1090 != 0;
    assume Tmp_1090 > 0;
    call {:si_unique_call 589} sdv_KeAcquireSpinLock(0, Tmp_1090);
    assume {:nonnull} Tmp_1090 != 0;
    assume Tmp_1090 > 0;
    havoc cIrql_2;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    havoc Tmp_1096;
    assume {:nonnull} Tmp_1096 != 0;
    assume Tmp_1096 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    call {:si_unique_call 590} sdv_KeReleaseSpinLock(0, cIrql_2);
    call {:si_unique_call 591} status_25 := Sbp2ManagementTransaction#1(pdoExtension_7, 7, -1);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} yogi_error != 1;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1087;
    assume {:nonnull} Tmp_1087 != 0;
    assume Tmp_1087 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    havoc Tmp_1077;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1082;
    call {:si_unique_call 592} WPP_SF_qD(Tmp_1082, 19, Tmp_1077, pdoExtension_7, status_25);
    goto L103;

  L103:
    status_25 := 0;
    goto L111;

  anon102_Then:
    goto L103;

  anon127_Then:
    goto L103;

  anon101_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon126_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon123_Then:
    goto L87;

  L87:
    call {:si_unique_call 593} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L103;

  anon122_Then:
    goto L87;

  anon100_Then:
    assume {:partition} sdv_367 == 0;
    call {:si_unique_call 594} sdv_IoMarkIrpPending(0);
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    call {:si_unique_call 595} vslice_dummy_var_90 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_7), Irp_9);
    call {:si_unique_call 596} ReleaseOrbListLock(pdoExtension_7, orbLock_3, 0);
    Tmp_1069 := 259;
    goto L1;

  anon99_Then:
    call {:si_unique_call 597} Tmp_1090 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1090 != 0;
    assume Tmp_1090 > 0;
    call {:si_unique_call 598} sdv_KeAcquireSpinLock(0, Tmp_1090);
    assume {:nonnull} Tmp_1090 != 0;
    assume Tmp_1090 > 0;
    havoc cIrql_2;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    status_25 := 0;
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    goto L139;

  L139:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    goto L143;

  L143:
    call {:si_unique_call 599} sdv_KeReleaseSpinLock(0, cIrql_2);
    call {:si_unique_call 600} Sbp2StartQueue#1(pdoExtension_7);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} yogi_error != 1;
    goto L111;

  anon129_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon107_Then:
    call {:si_unique_call 601} vslice_dummy_var_91 := Sbp2QueueManagementWorkItem(pdoExtension_7, 4, -1);
    call {:si_unique_call 602} sdv_KeReleaseSpinLock(0, cIrql_2);
    goto L111;

  anon128_Then:
    assume {:nonnull} pdoExtension_7 != 0;
    assume pdoExtension_7 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    goto L143;

  anon106_Then:
    goto L139;

  anon98_Then:
    status_25 := 0;
    goto L111;

  anon97_Then:
    goto L41;

  anon121_Then:
    goto L41;

  anon120_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L41;

  anon96_Then:
    assume {:partition} powerType != 1;
    status_25 := -1073741822;
    goto L111;

  anon94_Then:
    assume {:partition} powerType == 0;
    Tmp_1102 := strConst__li2bpl8;
    goto L26;

  anon93_Then:
    goto L18;

  anon119_Then:
    goto L18;

  anon118_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2FdoSetPower"} Sbp2FdoSetPower(actual_DeviceObject_13: int, actual_Irp_11: int) returns (Tmp_1113: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2FdoSetPower"} Sbp2FdoSetPower(actual_DeviceObject_13: int, actual_Irp_11: int) returns (Tmp_1113: int)
{
  var {:pointer} Tmp_1114: int;
  var {:pointer} Tmp_1115: int;
  var {:pointer} irpStack_4: int;
  var {:pointer} Tmp_1116: int;
  var {:scalar} Tmp_1117: int;
  var {:scalar} Tmp_1118: int;
  var {:scalar} Tmp_1119: int;
  var {:scalar} Tmp_1120: int;
  var {:pointer} Tmp_1121: int;
  var {:scalar} Tmp_1122: int;
  var {:scalar} Tmp_1123: int;
  var {:pointer} Tmp_1124: int;
  var {:scalar} powerState_1: int;
  var {:pointer} Tmp_1125: int;
  var {:scalar} newDeviceState_1: int;
  var {:pointer} fdoExtension_3: int;
  var {:pointer} Tmp_1127: int;
  var {:pointer} Tmp_1128: int;
  var {:scalar} Tmp_1129: int;
  var {:pointer} Tmp_1130: int;
  var {:pointer} Tmp_1131: int;
  var {:scalar} Tmp_1132: int;
  var {:pointer} Tmp_1133: int;
  var {:pointer} Tmp_1134: int;
  var {:scalar} status_27: int;
  var {:scalar} Tmp_1135: int;
  var {:scalar} newSystemState_2: int;
  var {:pointer} Tmp_1136: int;
  var {:pointer} Tmp_1137: int;
  var {:scalar} Tmp_1138: int;
  var {:scalar} powerType_1: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_11: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;

  anon0:
    call {:si_unique_call 603} powerState_1 := __HAVOC_malloc(8);
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_11 := actual_Irp_11;
    call {:si_unique_call 604} Tmp_1121 := __HAVOC_malloc(4);
    call {:si_unique_call 605} Tmp_1124 := __HAVOC_malloc(4);
    call {:si_unique_call 606} Tmp_1125 := __HAVOC_malloc(4);
    call {:si_unique_call 607} Tmp_1128 := __HAVOC_malloc(4);
    call {:si_unique_call 608} Tmp_1133 := __HAVOC_malloc(4);
    call {:si_unique_call 609} Tmp_1137 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    fdoExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_13)];
    call {:si_unique_call 610} irpStack_4 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc powerType_1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1137;
    assume {:nonnull} Tmp_1137 != 0;
    assume Tmp_1137 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} powerType_1 != 0;
    Tmp_1134 := strConst__li2bpl9;
    goto L23;

  L23:
    havoc Tmp_1115;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1120;
    call {:si_unique_call 611} WPP_SF_qsq(Tmp_1120, 28, Tmp_1115, fdoExtension_3, Tmp_1134, Irp_11);
    goto L17;

  L17:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} powerType_1 == 0;
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc newSystemState_2;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1128;
    assume {:nonnull} Tmp_1128 != 0;
    assume Tmp_1128 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    Tmp_1123 := newSystemState_2 - 1;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1138;
    havoc Tmp_1136;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1122;
    call {:si_unique_call 612} WPP_SF_qDDq(Tmp_1122, 29, Tmp_1136, fdoExtension_3, Tmp_1138, Tmp_1123, Irp_11);
    goto L94;

  L94:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    call {:si_unique_call 613} sdv_IoMarkIrpPending(0);
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1125;
    assume {:nonnull} Tmp_1125 != 0;
    assume Tmp_1125 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_1127;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1119;
    call {:si_unique_call 614} WPP_SF_qq(Tmp_1119, 30, Tmp_1127, fdoExtension_3, Irp_11);
    goto L120;

  L120:
    call {:si_unique_call 615} status_27 := PoRequestPowerIrp(0, 2, powerState_1, li2bplFunctionConstant697, 0, 0);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} status_27 < 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1133;
    assume {:nonnull} Tmp_1133 != 0;
    assume Tmp_1133 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_1131;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1132;
    call {:si_unique_call 616} WPP_SF_qD(Tmp_1132, 31, Tmp_1131, fdoExtension_3, status_27);
    goto L137;

  L137:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    call {:si_unique_call 617} PoStartNextPowerIrp(0);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume Irp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 618} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto L188;

  L188:
    call {:si_unique_call 619} sdv_IoCompleteRequest(0, 0);
    goto L135;

  L135:
    status_27 := 259;
    goto L66;

  L66:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1124;
    assume {:nonnull} Tmp_1124 != 0;
    assume Tmp_1124 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} powerType_1 != 0;
    Tmp_1130 := strConst__li2bpl9;
    goto L73;

  L73:
    havoc Tmp_1114;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1129;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    call {:si_unique_call 620} WPP_SF_qsqD(Tmp_1129, 33, Tmp_1114, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_13)], Tmp_1130, Irp_11, status_27);
    goto L67;

  L67:
    Tmp_1113 := status_27;
    goto LM2;

  LM2:
    return;

  anon69_Then:
    assume {:partition} powerType_1 == 0;
    Tmp_1130 := strConst__li2bpl8;
    goto L73;

  anon68_Then:
    goto L67;

  anon83_Then:
    goto L67;

  anon67_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    assume !(Irp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L188;

  anon77_Then:
    goto L137;

  anon89_Then:
    goto L137;

  anon76_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L137;

  anon75_Then:
    assume {:partition} 0 <= status_27;
    goto L135;

  anon74_Then:
    goto L120;

  anon88_Then:
    goto L120;

  anon87_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L120;

  anon73_Then:
    call {:si_unique_call 621} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_11);
    call {:si_unique_call 622} sdv_IoSetCompletionRoutine(Irp_11, li2bplFunctionConstant698, 0, 1, 1, 1);
    call {:si_unique_call 623} vslice_dummy_var_94 := PoCallDriver(0, Irp_11);
    status_27 := 259;
    goto L66;

  anon71_Then:
    call {:si_unique_call 624} PoStartNextPowerIrp(0);
    call {:si_unique_call 625} sdv_IoSkipCurrentIrpStackLocation(Irp_11);
    call {:si_unique_call 626} status_27 := PoCallDriver(0, Irp_11);
    goto L66;

  anon72_Then:
    goto L94;

  anon86_Then:
    goto L94;

  anon85_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L94;

  anon61_Then:
    assume {:partition} powerType_1 != 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} powerType_1 == 1;
    assume {:nonnull} irpStack_4 != 0;
    assume irpStack_4 > 0;
    havoc newDeviceState_1;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1121;
    assume {:nonnull} Tmp_1121 != 0;
    assume Tmp_1121 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    Tmp_1118 := newDeviceState_1 - 1;
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    havoc Tmp_1135;
    havoc Tmp_1116;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1117;
    call {:si_unique_call 627} WPP_SF_qDDq(Tmp_1117, 32, Tmp_1116, fdoExtension_3, Tmp_1135, Tmp_1118, Irp_11);
    goto L37;

  L37:
    call {:si_unique_call 628} sdv_IoMarkIrpPending(0);
    assume {:nonnull} fdoExtension_3 != 0;
    assume fdoExtension_3 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 629} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_11);
    call {:si_unique_call 630} sdv_IoSetCompletionRoutine(Irp_11, li2bplFunctionConstant700, 0, 1, 1, 1);
    goto L59;

  L59:
    call {:si_unique_call 631} vslice_dummy_var_93 := PoCallDriver(0, Irp_11);
    status_27 := 259;
    goto L66;

  anon66_Then:
    call {:si_unique_call 632} PoStartNextPowerIrp(0);
    call {:si_unique_call 633} sdv_IoSkipCurrentIrpStackLocation(Irp_11);
    goto L59;

  anon65_Then:
    goto L37;

  anon82_Then:
    goto L37;

  anon81_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L37;

  anon64_Then:
    assume {:partition} powerType_1 != 1;
    status_27 := -1073741822;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    call {:si_unique_call 634} PoStartNextPowerIrp(0);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume Irp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 635} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L185;

  L185:
    call {:si_unique_call 636} sdv_IoCompleteRequest(0, 0);
    goto L66;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    assume !(Irp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L185;

  anon63_Then:
    assume {:partition} powerType_1 == 0;
    Tmp_1134 := strConst__li2bpl8;
    goto L23;

  anon62_Then:
    goto L17;

  anon80_Then:
    goto L17;

  anon79_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L17;
}



procedure {:origName "Sbp2PdoCompletePowerIrp"} Sbp2PdoCompletePowerIrp(actual_DeviceObject_14: int, actual_Irp_12: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2PdoCompletePowerIrp"} Sbp2PdoCompletePowerIrp(actual_DeviceObject_14: int, actual_Irp_12: int)
{
  var {:pointer} irpStack_5: int;
  var {:scalar} powerType_2: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Irp_12: int;
  var vslice_dummy_var_95: int;

  anon0:
    call {:si_unique_call 637} vslice_dummy_var_95 := __HAVOC_malloc(4);
    DeviceObject_14 := actual_DeviceObject_14;
    Irp_12 := actual_Irp_12;
    call {:si_unique_call 638} irpStack_5 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    assume {:nonnull} irpStack_5 != 0;
    assume irpStack_5 > 0;
    havoc powerType_2;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} powerType_2 != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} powerType_2 == 1;
    call {:si_unique_call 639} Sbp2PdoCompleteDevicePowerIrp(DeviceObject_14, Irp_12);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} powerType_2 != 1;
    call {:si_unique_call 640} PoStartNextPowerIrp(0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume Irp_12 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 641} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto L27;

  L27:
    call {:si_unique_call 642} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume !(Irp_12 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L27;

  anon15_Then:
    assume {:partition} powerType_2 == 0;
    call {:si_unique_call 643} Sbp2PdoCompleteSystemPowerIrp(DeviceObject_14, Irp_12);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "WPP_SF_qsq"} WPP_SF_qsq(actual_Logger_9: int, actual_id_9: int, actual_TraceGuid_9: int, actual_s_p_e_c_i_a_l_39: int, actual_s_p_e_c_i_a_l_40: int, actual_s_p_e_c_i_a_l_41: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qsq"} WPP_SF_qsq(actual_Logger_9: int, actual_id_9: int, actual_TraceGuid_9: int, actual_s_p_e_c_i_a_l_39: int, actual_s_p_e_c_i_a_l_40: int, actual_s_p_e_c_i_a_l_41: int)
{
  var {:scalar} sdv_382: int;
  var {:pointer} TraceGuid_9: int;
  var {:pointer} s_p_e_c_i_a_l_40: int;
  var vslice_dummy_var_96: int;

  anon0:
    call {:si_unique_call 644} vslice_dummy_var_96 := __HAVOC_malloc(4);
    TraceGuid_9 := actual_TraceGuid_9;
    s_p_e_c_i_a_l_40 := actual_s_p_e_c_i_a_l_40;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_40 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_40 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_40 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_40 == 0;
    goto L9;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var {:scalar} Tmp_1146: int;
  var vslice_dummy_var_97: int;

  anon0:
    call {:si_unique_call 645} Tmp_1146 := __HAVOC_malloc(4);
    call {:si_unique_call 646} vslice_dummy_var_97 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1146 != 0;
    assume Tmp_1146 > 0;
    return;
}



procedure {:origName "WPP_SF_qDDqD"} WPP_SF_qDDqD(actual_Logger_10: int, actual_id_10: int, actual_TraceGuid_10: int, actual_s_p_e_c_i_a_l_42: int, actual_s_p_e_c_i_a_l_43: int, actual_s_p_e_c_i_a_l_44: int, actual_s_p_e_c_i_a_l_45: int, actual_s_p_e_c_i_a_l_46: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qDDqD"} WPP_SF_qDDqD(actual_Logger_10: int, actual_id_10: int, actual_TraceGuid_10: int, actual_s_p_e_c_i_a_l_42: int, actual_s_p_e_c_i_a_l_43: int, actual_s_p_e_c_i_a_l_44: int, actual_s_p_e_c_i_a_l_45: int, actual_s_p_e_c_i_a_l_46: int)
{
  var {:pointer} TraceGuid_10: int;
  var vslice_dummy_var_98: int;

  anon0:
    call {:si_unique_call 647} vslice_dummy_var_98 := __HAVOC_malloc(4);
    TraceGuid_10 := actual_TraceGuid_10;
    return;
}



procedure {:origName "WPP_SF_qsqD"} WPP_SF_qsqD(actual_Logger_11: int, actual_id_11: int, actual_TraceGuid_11: int, actual_s_p_e_c_i_a_l_47: int, actual_s_p_e_c_i_a_l_48: int, actual_s_p_e_c_i_a_l_49: int, actual_s_p_e_c_i_a_l_50: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qsqD"} WPP_SF_qsqD(actual_Logger_11: int, actual_id_11: int, actual_TraceGuid_11: int, actual_s_p_e_c_i_a_l_47: int, actual_s_p_e_c_i_a_l_48: int, actual_s_p_e_c_i_a_l_49: int, actual_s_p_e_c_i_a_l_50: int)
{
  var {:scalar} sdv_385: int;
  var {:pointer} TraceGuid_11: int;
  var {:pointer} s_p_e_c_i_a_l_48: int;
  var vslice_dummy_var_99: int;

  anon0:
    call {:si_unique_call 648} vslice_dummy_var_99 := __HAVOC_malloc(4);
    TraceGuid_11 := actual_TraceGuid_11;
    s_p_e_c_i_a_l_48 := actual_s_p_e_c_i_a_l_48;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_48 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_48 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_48 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_48 == 0;
    goto L9;
}



procedure {:origName "WPP_SF_qssd"} WPP_SF_qssd(actual_Logger_12: int, actual_id_12: int, actual_TraceGuid_12: int, actual_s_p_e_c_i_a_l_51: int, actual_s_p_e_c_i_a_l_52: int, actual_s_p_e_c_i_a_l_53: int, actual_s_p_e_c_i_a_l_54: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qssd"} WPP_SF_qssd(actual_Logger_12: int, actual_id_12: int, actual_TraceGuid_12: int, actual_s_p_e_c_i_a_l_51: int, actual_s_p_e_c_i_a_l_52: int, actual_s_p_e_c_i_a_l_53: int, actual_s_p_e_c_i_a_l_54: int)
{
  var {:scalar} sdv_387: int;
  var {:scalar} sdv_388: int;
  var {:pointer} TraceGuid_12: int;
  var {:pointer} s_p_e_c_i_a_l_52: int;
  var {:pointer} s_p_e_c_i_a_l_53: int;
  var vslice_dummy_var_100: int;

  anon0:
    call {:si_unique_call 649} vslice_dummy_var_100 := __HAVOC_malloc(4);
    TraceGuid_12 := actual_TraceGuid_12;
    s_p_e_c_i_a_l_52 := actual_s_p_e_c_i_a_l_52;
    s_p_e_c_i_a_l_53 := actual_s_p_e_c_i_a_l_53;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_53 != 0;
    goto L9;

  L9:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} s_p_e_c_i_a_l_53 != 0;
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_52 != 0;
    goto L18;

  L18:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} s_p_e_c_i_a_l_52 != 0;
    goto L21;

  L21:
    return;

  anon12_Then:
    assume {:partition} s_p_e_c_i_a_l_52 == 0;
    goto L21;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_52 == 0;
    goto L18;

  anon10_Then:
    assume {:partition} s_p_e_c_i_a_l_53 == 0;
    goto L12;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_53 == 0;
    goto L9;
}



procedure {:origName "Sbp2SetPowerState"} Sbp2SetPowerState(actual_DeviceObject_15: int, actual_Type_3: int, actual_structPtr888NewState: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2SetPowerState"} Sbp2SetPowerState(actual_DeviceObject_15: int, actual_Type_3: int, actual_structPtr888NewState: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:scalar} NewState: int;
  var {:pointer} Tmp_1164: int;
  var {:pointer} Tmp_1165: int;
  var {:pointer} devExt: int;
  var {:scalar} sdv: int;
  var {:scalar} Tmp_1166: int;
  var {:pointer} Tmp_1168: int;
  var {:scalar} Tmp_1169: int;
  var {:pointer} Tmp_1171: int;
  var {:pointer} DeviceObject_15: int;
  var {:scalar} Type_3: int;
  var {:pointer} structPtr888NewState: int;
  var vslice_dummy_var_101: int;

  anon0:
    call {:si_unique_call 650} NewState := __HAVOC_malloc(8);
    call {:si_unique_call 651} sdv := __HAVOC_malloc(8);
    call {:si_unique_call 652} vslice_dummy_var_101 := __HAVOC_malloc(4);
    DeviceObject_15 := actual_DeviceObject_15;
    Type_3 := actual_Type_3;
    structPtr888NewState := actual_structPtr888NewState;
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    assume {:nonnull} structPtr888NewState != 0;
    assume structPtr888NewState > 0;
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    assume {:nonnull} structPtr888NewState != 0;
    assume structPtr888NewState > 0;
    call {:si_unique_call 653} Tmp_1168 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    devExt := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_15)];
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1168;
    assume {:nonnull} Tmp_1168 != 0;
    assume Tmp_1168 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} NewState != 0;
    assume NewState > 0;
    havoc Tmp_1169;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Type_3 != 0;
    Tmp_1165 := strConst__li2bpl9;
    goto L18;

  L18:
    assume {:nonnull} devExt != 0;
    assume devExt > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1171 := strConst__li2bpl11;
    goto L21;

  L21:
    havoc Tmp_1164;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1166;
    call {:si_unique_call 654} WPP_SF_qssd(Tmp_1166, 10, Tmp_1164, devExt, Tmp_1171, Tmp_1165, Tmp_1169);
    goto L9;

  L9:
    call {:si_unique_call 655} structPtr888sdv := PoSetPowerState(0, Type_3, NewState);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    return;

  anon12_Then:
    Tmp_1171 := strConst__li2bpl10;
    goto L21;

  anon15_Then:
    assume {:partition} Type_3 == 0;
    Tmp_1165 := strConst__li2bpl8;
    goto L18;

  anon11_Then:
    goto L9;

  anon14_Then:
    goto L9;

  anon13_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L9;
}



procedure {:origName "Sbp2PdoCompleteDevicePowerIrp"} Sbp2PdoCompleteDevicePowerIrp(actual_DeviceObject_16: int, actual_Irp_13: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2PdoCompleteDevicePowerIrp"} Sbp2PdoCompleteDevicePowerIrp(actual_DeviceObject_16: int, actual_Irp_13: int)
{
  var {:pointer} irpStack_6: int;
  var {:scalar} Tmp_1172: int;
  var {:pointer} Tmp_1173: int;
  var {:pointer} pdoExtension_8: int;
  var {:pointer} Tmp_1174: int;
  var {:pointer} Tmp_1175: int;
  var {:scalar} newPowerState_3: int;
  var {:scalar} newDeviceState_2: int;
  var {:pointer} Tmp_1177: int;
  var {:scalar} cIrql_4: int;
  var {:scalar} status_28: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_1021: int;

  anon0:
    call {:si_unique_call 656} newPowerState_3 := __HAVOC_malloc(8);
    call {:si_unique_call 657} vslice_dummy_var_102 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_13 := actual_Irp_13;
    call {:si_unique_call 658} Tmp_1177 := __HAVOC_malloc(4);
    call {:si_unique_call 659} irpStack_6 := sdv_IoGetCurrentIrpStackLocation(Irp_13);
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    pdoExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_16)];
    assume {:nonnull} irpStack_6 != 0;
    assume irpStack_6 > 0;
    havoc newDeviceState_2;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    havoc status_28;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1177;
    assume {:nonnull} Tmp_1177 != 0;
    assume Tmp_1177 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    havoc Tmp_1174;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1172;
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    havoc vslice_dummy_var_1021;
    call {:si_unique_call 660} WPP_SF_qqDD(Tmp_1172, 12, Tmp_1174, pdoExtension_8, Irp_13, status_28, vslice_dummy_var_1021);
    goto L20;

  L20:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_28 != -1073741810;
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} newPowerState_3 != 0;
    assume newPowerState_3 > 0;
    call {:si_unique_call 661} Sbp2SetPowerState(DeviceObject_16, 1, newPowerState_3);
    goto L28;

  L28:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} newDeviceState_2 == 1;
    call {:si_unique_call 662} Tmp_1173 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1173 != 0;
    assume Tmp_1173 > 0;
    call {:si_unique_call 663} sdv_KeAcquireSpinLock(0, Tmp_1173);
    assume {:nonnull} Tmp_1173 != 0;
    assume Tmp_1173 > 0;
    havoc cIrql_4;
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    havoc Tmp_1175;
    assume {:nonnull} Tmp_1175 != 0;
    assume Tmp_1175 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    goto L44;

  L44:
    call {:si_unique_call 664} sdv_KeReleaseSpinLock(0, cIrql_4);
    goto L37;

  L37:
    call {:si_unique_call 665} PoStartNextPowerIrp(0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume Irp_13 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 666} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L66;

  L66:
    call {:si_unique_call 667} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_8 != 0;
    assume pdoExtension_8 > 0;
    call {:si_unique_call 668} vslice_dummy_var_103 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_8), Irp_13);
    goto LM2;

  LM2:
    return;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon25_Then:
    assume !(Irp_13 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L66;

  anon29_Then:
    goto L44;

  anon28_Then:
    assume {:partition} newDeviceState_2 != 1;
    goto L37;

  anon24_Then:
    goto L28;

  anon23_Then:
    assume {:partition} status_28 == -1073741810;
    goto L28;

  anon21_Then:
    goto L28;

  anon22_Then:
    goto L20;

  anon27_Then:
    goto L20;

  anon26_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L20;
}



procedure {:origName "WPP_SF_qDDq"} WPP_SF_qDDq(actual_Logger_13: int, actual_id_13: int, actual_TraceGuid_13: int, actual_s_p_e_c_i_a_l_55: int, actual_s_p_e_c_i_a_l_56: int, actual_s_p_e_c_i_a_l_57: int, actual_s_p_e_c_i_a_l_58: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qDDq"} WPP_SF_qDDq(actual_Logger_13: int, actual_id_13: int, actual_TraceGuid_13: int, actual_s_p_e_c_i_a_l_55: int, actual_s_p_e_c_i_a_l_56: int, actual_s_p_e_c_i_a_l_57: int, actual_s_p_e_c_i_a_l_58: int)
{
  var {:pointer} TraceGuid_13: int;
  var vslice_dummy_var_104: int;

  anon0:
    call {:si_unique_call 669} vslice_dummy_var_104 := __HAVOC_malloc(4);
    TraceGuid_13 := actual_TraceGuid_13;
    return;
}



procedure {:origName "Sbp2SetDeferLoginTimer"} Sbp2SetDeferLoginTimer(actual_PdoExtension_14: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2SetDeferLoginTimer"} Sbp2SetDeferLoginTimer(actual_PdoExtension_14: int)
{
  var {:scalar} Tmp_1183: int;
  var {:scalar} dueTime_1: int;
  var {:pointer} Tmp_1185: int;
  var {:pointer} Tmp_1186: int;
  var {:pointer} PdoExtension_14: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_1022: int;

  anon0:
    call {:si_unique_call 670} vslice_dummy_var_105 := __HAVOC_malloc(4);
    PdoExtension_14 := actual_PdoExtension_14;
    call {:si_unique_call 671} Tmp_1186 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    dueTime_1 := 1;
    goto L9;

  L9:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1186;
    assume {:nonnull} Tmp_1186 != 0;
    assume Tmp_1186 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    havoc Tmp_1185;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1183;
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    havoc vslice_dummy_var_1022;
    call {:si_unique_call 672} WPP_SF_qD(Tmp_1183, 27, Tmp_1185, PdoExtension_14, vslice_dummy_var_1022);
    goto L14;

  L14:
    call {:si_unique_call 673} Sbp2AddLog(PdoExtension_14, 64, -999919028, 0, 0);
    call {:si_unique_call 674} Sbp2SetManagementTimer(PdoExtension_14, dueTime_1);
    goto L1;

  L1:
    return;

  anon13_Then:
    goto L14;

  anon15_Then:
    goto L14;

  anon14_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L14;

  anon12_Then:
    assume {:nonnull} PdoExtension_14 != 0;
    assume PdoExtension_14 > 0;
    call {:si_unique_call 675} dueTime_1 := corral_nondet();
    goto L9;

  anon11_Then:
    goto L1;
}



procedure {:origName "CheckStatusResponseValue"} CheckStatusResponseValue(actual_StatusBlock: int) returns (Tmp_1189: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1189 == -1073741275 || Tmp_1189 == -1073741649 || Tmp_1189 == -1073741823 || Tmp_1189 == -1073741503 || Tmp_1189 == -1073741811 || Tmp_1189 == 17 || Tmp_1189 == -1073741434 || Tmp_1189 == -1073741248 || Tmp_1189 == -1073741292 || Tmp_1189 == -1073741670 || Tmp_1189 == -1073741790 || Tmp_1189 == -1073741637 || Tmp_1189 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "CheckStatusResponseValue"} CheckStatusResponseValue(actual_StatusBlock: int) returns (Tmp_1189: int)
{
  var {:scalar} Tmp_1190: int;
  var {:pointer} Tmp_1191: int;
  var {:scalar} resp: int;
  var {:scalar} Tmp_1192: int;
  var {:scalar} Tmp_1193: int;
  var {:scalar} status_29: int;
  var {:scalar} Tmp_1196: int;
  var {:pointer} Tmp_1197: int;
  var {:scalar} statusFlags: int;
  var {:pointer} StatusBlock: int;

  anon0:
    StatusBlock := actual_StatusBlock;
    call {:si_unique_call 676} Tmp_1197 := __HAVOC_malloc(4);
    assume {:nonnull} StatusBlock != 0;
    assume StatusBlock > 0;
    havoc statusFlags;
    Tmp_1193 := BAND(statusFlags, BOR(16384, 32768));
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} 32768 == Tmp_1193;
    Tmp_1189 := -1073741275;
    goto L1;

  L1:
    return;

  anon78_Then:
    assume {:partition} 32768 != Tmp_1193;
    call {:si_unique_call 677} resp := corral_nondet();
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} resp != 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} resp != 1;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} resp == 2;
    status_29 := -1073741649;
    goto L18;

  L18:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} status_29 != 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1197;
    assume {:nonnull} Tmp_1197 != 0;
    assume Tmp_1197 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    Tmp_1196 := statusFlags;
    Tmp_1192 := resp;
    havoc Tmp_1191;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1190;
    call {:si_unique_call 678} WPP_SF_DD(Tmp_1190, 23, Tmp_1191, Tmp_1192, Tmp_1196);
    goto L19;

  L19:
    Tmp_1189 := status_29;
    goto L1;

  anon58_Then:
    goto L19;

  anon80_Then:
    goto L19;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L19;

  anon56_Then:
    assume {:partition} status_29 == 0;
    goto L19;

  anon59_Then:
    assume {:partition} resp != 2;
    status_29 := -1073741823;
    goto L18;

  anon60_Then:
    assume {:partition} resp == 1;
    resp := BAND(statusFlags, BOR(BOR(BOR(1, 2), 4), 8));
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} resp != 2;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} resp != 4;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} resp != 5;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} resp != 6;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} resp != 12;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} resp != 13;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} resp != 14;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} resp == 15;
    status_29 := -1073741503;
    goto L18;

  anon71_Then:
    assume {:partition} resp != 15;
    status_29 := -1073741823;
    goto L18;

  anon72_Then:
    assume {:partition} resp == 14;
    status_29 := -1073741811;
    goto L18;

  anon73_Then:
    assume {:partition} resp == 13;
    goto L35;

  L35:
    status_29 := -1073741434;
    goto L18;

  anon74_Then:
    assume {:partition} resp == 12;
    goto L35;

  anon75_Then:
    assume {:partition} resp == 6;
    goto L36;

  L36:
    status_29 := 17;
    goto L18;

  anon76_Then:
    assume {:partition} resp == 5;
    goto L36;

  anon77_Then:
    assume {:partition} resp == 4;
    goto L36;

  anon81_Then:
    assume {:partition} resp == 2;
    goto L35;

  anon79_Then:
    assume {:partition} resp == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(statusFlags, 255) != 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} BAND(statusFlags, 255) != 1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} BAND(statusFlags, 255) != 2;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} BAND(statusFlags, 255) != 3;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} BAND(statusFlags, 255) != 4;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} BAND(statusFlags, 255) != 5;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(statusFlags, 255) != 8;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} BAND(statusFlags, 255) != 9;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} BAND(statusFlags, 255) != 10;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} BAND(statusFlags, 255) != 11;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} BAND(statusFlags, 255) == 12;
    status_29 := -1073741248;
    goto L18;

  anon61_Then:
    assume {:partition} BAND(statusFlags, 255) != 12;
    status_29 := -1073741823;
    goto L18;

  anon62_Then:
    assume {:partition} BAND(statusFlags, 255) == 11;
    goto L46;

  L46:
    status_29 := 0;
    goto L18;

  anon63_Then:
    assume {:partition} BAND(statusFlags, 255) == 10;
    status_29 := -1073741292;
    goto L18;

  anon64_Then:
    assume {:partition} BAND(statusFlags, 255) == 9;
    status_29 := -1073741649;
    goto L18;

  anon65_Then:
    assume {:partition} BAND(statusFlags, 255) == 8;
    status_29 := -1073741670;
    goto L18;

  anon66_Then:
    assume {:partition} BAND(statusFlags, 255) == 5;
    goto L48;

  L48:
    status_29 := -1073741790;
    goto L18;

  anon67_Then:
    assume {:partition} BAND(statusFlags, 255) == 4;
    goto L48;

  anon68_Then:
    assume {:partition} BAND(statusFlags, 255) == 3;
    goto L47;

  L47:
    status_29 := -1073741637;
    goto L18;

  anon69_Then:
    assume {:partition} BAND(statusFlags, 255) == 2;
    goto L47;

  anon70_Then:
    assume {:partition} BAND(statusFlags, 255) == 1;
    goto L47;

  anon55_Then:
    assume {:partition} BAND(statusFlags, 255) == 0;
    goto L46;
}



procedure {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension: int, actual_Context_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Free1394DataMapping"} Free1394DataMapping(actual_DeviceExtension: int, actual_Context_3: int)
{
  var {:pointer} Tmp_1198: int;
  var {:pointer} Tmp_1199: int;
  var {:pointer} Tmp_1200: int;
  var {:pointer} Tmp_1201: int;
  var {:pointer} Tmp_1202: int;
  var {:pointer} Tmp_1203: int;
  var {:scalar} Tmp_1204: int;
  var {:scalar} routine: int;
  var {:scalar} cIrql_5: int;
  var {:pointer} Tmp_1205: int;
  var {:pointer} packet_8: int;
  var {:scalar} status_30: int;
  var {:pointer} Tmp_1206: int;
  var {:pointer} Tmp_1208: int;
  var {:pointer} DeviceExtension: int;
  var {:pointer} Context_3: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_1023: int;
  var vslice_dummy_var_1024: int;

  anon0:
    call {:si_unique_call 679} packet_8 := __HAVOC_malloc(4);
    call {:si_unique_call 680} vslice_dummy_var_106 := __HAVOC_malloc(4);
    DeviceExtension := actual_DeviceExtension;
    Context_3 := actual_Context_3;
    call {:si_unique_call 681} Tmp_1206 := __HAVOC_malloc(4);
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 682} AllocateIrpAndIrb(DeviceExtension, packet_8);
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1208;
    assume {:nonnull} Tmp_1208 != 0;
    assume Tmp_1208 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1202;
    assume {:nonnull} Tmp_1202 != 0;
    assume Tmp_1202 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1205;
    assume {:nonnull} Tmp_1205 != 0;
    assume Tmp_1205 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1200;
    assume {:nonnull} Tmp_1200 != 0;
    assume Tmp_1200 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1201;
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    assume {:nonnull} Tmp_1201 != 0;
    assume Tmp_1201 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc Tmp_1203;
    assume {:nonnull} Tmp_1203 != 0;
    assume Tmp_1203 > 0;
    call {:si_unique_call 683} Tmp_1199 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    call {:si_unique_call 684} sdv_KeRaiseIrql(2, Tmp_1199);
    assume {:nonnull} Tmp_1199 != 0;
    assume Tmp_1199 > 0;
    havoc cIrql_5;
    assume {:nonnull} DeviceExtension != 0;
    assume DeviceExtension > 0;
    havoc routine;
    assume routine == 0;
    call {:si_unique_call 685} sdv_KeLowerIrql(cIrql_5);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_30 < 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1206;
    assume {:nonnull} Tmp_1206 != 0;
    assume Tmp_1206 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1198;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1204;
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    havoc vslice_dummy_var_1023;
    call {:si_unique_call 686} WPP_SF_qD(Tmp_1204, 15, Tmp_1198, vslice_dummy_var_1023, status_30);
    goto L35;

  L35:
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 687} IoFreeMdl(0);
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    goto L36;

  L36:
    assume {:nonnull} Context_3 != 0;
    assume Context_3 > 0;
    assume {:nonnull} packet_8 != 0;
    assume packet_8 > 0;
    havoc vslice_dummy_var_1024;
    call {:si_unique_call 688} DeAllocateIrpAndIrb(DeviceExtension, vslice_dummy_var_1024);
    goto L1;

  L1:
    return;

  anon18_Then:
    goto L36;

  anon20_Then:
    goto L35;

  anon21_Then:
    goto L35;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L35;

  anon17_Then:
    assume {:partition} 0 <= status_30;
    goto L35;

  anon16_Then:
    goto L1;

  anon15_Then:
    goto L1;
}



procedure {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_1209: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1209 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2RemoveByKeyDeviceQueueIfBusy"} Sbp2RemoveByKeyDeviceQueueIfBusy(actual_DeviceQueue: int, actual_SortKey: int) returns (Tmp_1209: int)
{
  var {:pointer} nextEntry: int;
  var {:pointer} queueEntry: int;
  var {:scalar} sdv_397: int;
  var {:pointer} sdv_398: int;
  var {:pointer} sdv_400: int;
  var {:pointer} DeviceQueue: int;
  var {:scalar} SortKey: int;
  var vslice_dummy_var_107: int;

  anon0:
    DeviceQueue := actual_DeviceQueue;
    SortKey := actual_SortKey;
    queueEntry := 0;
    call {:si_unique_call 689} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 690} sdv_397 := sdv_IsListEmpty(0);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_397 != 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    queueEntry := 0;
    goto L18;

  L18:
    call {:si_unique_call 691} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_1209 := queueEntry;
    return;

  anon12_Then:
    assume {:partition} sdv_397 == 0;
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    havoc nextEntry;
    goto L22;

  L22:
    call {:si_unique_call 692} nextEntry, queueEntry, sdv_398 := Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(nextEntry, queueEntry, sdv_398, SortKey);
    goto L22_last;

  L22_last:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 693} sdv_398 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_398;
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} nextEntry != 0;
    assume nextEntry > 0;
    havoc nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    assume false;
    return;

  anon15_Then:
    goto L23;

  L23:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 694} vslice_dummy_var_107 := sdv_RemoveEntryList(0);
    goto L37;

  L37:
    assume {:nonnull} queueEntry != 0;
    assume queueEntry > 0;
    goto L18;

  anon14_Then:
    assume {:nonnull} DeviceQueue != 0;
    assume DeviceQueue > 0;
    call {:si_unique_call 695} nextEntry := RemoveHeadList(DeviceListHead__KDEVICE_QUEUE(DeviceQueue));
    call {:si_unique_call 696} sdv_400 := sdv_containing_record(nextEntry, 0);
    queueEntry := sdv_400;
    goto L37;

  anon13_Then:
    goto L23;

  anon11_Then:
    queueEntry := 0;
    goto L18;
}



procedure {:origName "ReleaseOrbListLock"} ReleaseOrbListLock(actual_DeviceExtension_1: int, actual_orbLock_4: int, actual_fFromDpcLevel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ReleaseOrbListLock"} ReleaseOrbListLock(actual_DeviceExtension_1: int, actual_orbLock_4: int, actual_fFromDpcLevel: int)
{
  var {:pointer} currThread: int;
  var {:pointer} DeviceExtension_1: int;
  var {:scalar} fFromDpcLevel: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_1025: int;
  var vslice_dummy_var_1026: int;
  var vslice_dummy_var_1027: int;

  anon0:
    call {:si_unique_call 697} vslice_dummy_var_108 := __HAVOC_malloc(4);
    DeviceExtension_1 := actual_DeviceExtension_1;
    fFromDpcLevel := actual_fFromDpcLevel;
    call {:si_unique_call 698} currThread := sdv_KeGetCurrentThread();
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_1025;
    call {:si_unique_call 699} Sbp2AddLog(DeviceExtension_1, 256, -982751918, currThread, vslice_dummy_var_1025);
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_1026;
    call {:si_unique_call 700} Sbp2AddLog(DeviceExtension_1, 256, 543974738, currThread, vslice_dummy_var_1026);
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} fFromDpcLevel != 0;
    call {:si_unique_call 701} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L12;

  L12:
    assume {:nonnull} DeviceExtension_1 != 0;
    assume DeviceExtension_1 > 0;
    havoc vslice_dummy_var_1027;
    call {:si_unique_call 702} Sbp2AddLog(DeviceExtension_1, 256, -663984814, currThread, vslice_dummy_var_1027);
    return;

  anon9_Then:
    assume {:partition} fFromDpcLevel == 0;
    call {:si_unique_call 703} KeReleaseInStackQueuedSpinLock(0);
    goto L12;

  anon8_Then:
    goto L12;

  anon7_Then:
    goto L12;
}



procedure {:origName "Sbp2SetManagementTimer"} Sbp2SetManagementTimer(actual_PdoExtension_15: int, actual_DueTime_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2SetManagementTimer"} Sbp2SetManagementTimer(actual_PdoExtension_15: int, actual_DueTime_1: int)
{
  var {:scalar} Tmp_1213: int;
  var {:pointer} Tmp_1214: int;
  var {:pointer} Tmp_1216: int;
  var {:pointer} Tmp_1217: int;
  var {:scalar} Tmp_1219: int;
  var {:scalar} dueTime_2: int;
  var {:pointer} Tmp_1220: int;
  var {:pointer} PdoExtension_15: int;
  var {:scalar} DueTime_1: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_1028: int;

  anon0:
    call {:si_unique_call 704} vslice_dummy_var_109 := __HAVOC_malloc(4);
    call {:si_unique_call 705} dueTime_2 := __HAVOC_malloc(20);
    PdoExtension_15 := actual_PdoExtension_15;
    DueTime_1 := actual_DueTime_1;
    call {:si_unique_call 706} Tmp_1220 := __HAVOC_malloc(4);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} DueTime_1 != 0;
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;

  L10:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1220;
    assume {:nonnull} Tmp_1220 != 0;
    assume Tmp_1220 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    havoc Tmp_1219;
    havoc Tmp_1216;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1213;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc vslice_dummy_var_1028;
    call {:si_unique_call 707} WPP_SF_qDd(Tmp_1213, 26, Tmp_1216, PdoExtension_15, vslice_dummy_var_1028, Tmp_1219);
    goto L11;

  L11:
    call {:si_unique_call 708} Sbp2AddLog(PdoExtension_15, 64, -848007822, DueTime_1, 0);
    call {:si_unique_call 709} vslice_dummy_var_110 := KeSetTimer(0, dueTime_2, 0);
    return;

  anon13_Then:
    goto L11;

  anon14_Then:
    goto L11;

  anon12_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L11;

  anon11_Then:
    assume {:partition} DueTime_1 == 0;
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_1217;
    assume {:nonnull} Tmp_1217 != 0;
    assume Tmp_1217 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} PdoExtension_15 != 0;
    assume PdoExtension_15 > 0;
    havoc Tmp_1214;
    assume {:nonnull} Tmp_1214 != 0;
    assume Tmp_1214 > 0;
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;

  anon15_Then:
    assume {:nonnull} dueTime_2 != 0;
    assume dueTime_2 > 0;
    goto L10;
}



procedure {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_2: int, actual_Context_4: int) returns (Tmp_1221: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "FreeAsyncRequestContext"} FreeAsyncRequestContext(actual_DeviceExtension_2: int, actual_Context_4: int) returns (Tmp_1221: int)
{
  var {:pointer} Tmp_1222: int;
  var {:scalar} sdv_405: int;
  var {:pointer} Tmp_1223: int;
  var {:pointer} Tmp_1224: int;
  var {:scalar} Tmp_1225: int;
  var {:pointer} Tmp_1226: int;
  var {:scalar} Tmp_1227: int;
  var {:pointer} Tmp_1228: int;
  var {:pointer} DeviceExtension_2: int;
  var {:pointer} Context_4: int;
  var vslice_dummy_var_111: int;

  anon0:
    DeviceExtension_2 := actual_DeviceExtension_2;
    Context_4 := actual_Context_4;
    call {:si_unique_call 710} Tmp_1223 := __HAVOC_malloc(4);
    call {:si_unique_call 711} Tmp_1224 := __HAVOC_malloc(4);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Context_4 == 0;
    goto L37;

  L37:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1223;
    assume {:nonnull} Tmp_1223 != 0;
    assume Tmp_1223 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1228;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1225;
    call {:si_unique_call 712} WPP_SF_q(Tmp_1225, 16, Tmp_1228, Context_4);
    goto L38;

  L38:
    Tmp_1221 := 0;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto L38;

  anon28_Then:
    goto L38;

  anon26_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L38;

  anon21_Then:
    assume {:partition} Context_4 != 0;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L37;

  anon22_Then:
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    call {:si_unique_call 713} Free1394DataMapping(DeviceExtension_2, Context_4);
    goto L9;

  L9:
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L22;

  L22:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1224;
    assume {:nonnull} Tmp_1224 != 0;
    assume Tmp_1224 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_1222;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1227;
    call {:si_unique_call 714} WPP_SF_q(Tmp_1227, 17, Tmp_1222, Context_4);
    goto L23;

  L23:
    call {:si_unique_call 715} vslice_dummy_var_111 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    call {:si_unique_call 716} Tmp_1226 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_2 != 0;
    assume DeviceExtension_2 > 0;
    assume {:nonnull} Tmp_1226 != 0;
    assume Tmp_1226 > 0;
    call {:si_unique_call 717} sdv_405 := sdv_InterlockedDecrement(Tmp_1226);
    assume {:nonnull} DeviceExtension_2 != 0;
    assume DeviceExtension_2 > 0;
    assume {:nonnull} Tmp_1226 != 0;
    assume Tmp_1226 > 0;
    Tmp_1221 := sdv_405;
    goto L1;

  anon25_Then:
    goto L23;

  anon30_Then:
    goto L23;

  anon24_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L23;

  anon29_Then:
    call {:si_unique_call 718} sdv_ExFreePool(0);
    assume {:nonnull} Context_4 != 0;
    assume Context_4 > 0;
    goto L22;

  anon23_Then:
    goto L9;
}



procedure {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject_1: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_1229: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1229 == -1073741811 || Tmp_1229 == -1073741823 || Tmp_1229 == 0 || Tmp_1229 == 5 || Tmp_1229 == -1073741789 || Tmp_1229 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2GetRegistryValue"} Sbp2GetRegistryValue(actual_PhysicalDeviceObject_1: int, actual_ValueName_1: int, actual_DwData: int) returns (Tmp_1229: int)
{
  var {:pointer} Tmp_1230: int;
  var {:scalar} Tmp_1231: int;
  var {:pointer} RootHandle: int;
  var {:pointer} Tmp_1232: int;
  var {:scalar} ResultLength_1: int;
  var {:pointer} Tmp_1233: int;
  var {:scalar} Tmp_1234: int;
  var {:scalar} Tmp_1235: int;
  var {:pointer} Tmp_1236: int;
  var {:pointer} Tmp_1237: int;
  var {:pointer} Tmp_1238: int;
  var {:pointer} sdv_408: int;
  var {:pointer} sdv_409: int;
  var {:scalar} Tmp_1239: int;
  var {:scalar} KeyLength: int;
  var {:scalar} status_31: int;
  var {:scalar} uniTempName: int;
  var {:pointer} KeyInfo: int;
  var {:pointer} PhysicalDeviceObject_1: int;
  var {:pointer} DwData: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_1029: int;

  anon0:
    call {:si_unique_call 719} uniTempName := __HAVOC_malloc(12);
    PhysicalDeviceObject_1 := actual_PhysicalDeviceObject_1;
    DwData := actual_DwData;
    call {:si_unique_call 720} Tmp_1232 := __HAVOC_malloc(4);
    call {:si_unique_call 721} Tmp_1238 := __HAVOC_malloc(4);
    status_31 := 0;
    RootHandle := 0;
    call {:si_unique_call 722} sdv_do_paged_code_check();
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 723} status_31 := IoOpenDeviceRegistryKey(0, 1, 131097, 0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_31 >= 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_1235;
    call {:si_unique_call 724} sdv_408 := ExAllocatePoolWithTag(512, Tmp_1235, 846226003);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    KeyLength := 20;
    call {:si_unique_call 725} sdv_409 := ExAllocatePoolWithTag(512, KeyLength, 846226003);
    KeyInfo := sdv_409;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} KeyInfo != 0;
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    havoc Tmp_1234;
    call {:si_unique_call 726} sdv_RtlZeroMemory(0, Tmp_1234);
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    call {:si_unique_call 727} vslice_dummy_var_113 := corral_nondet();
    call {:si_unique_call 728} Tmp_1236 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1236 != 0;
    assume Tmp_1236 > 0;
    call {:si_unique_call 729} status_31 := ZwQueryValueKey(0, 0, 2, 0, KeyLength, Tmp_1236);
    assume {:nonnull} Tmp_1236 != 0;
    assume Tmp_1236 > 0;
    havoc ResultLength_1;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_31 < 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1238;
    assume {:nonnull} Tmp_1238 != 0;
    assume Tmp_1238 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    havoc Tmp_1233;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1231;
    assume {:nonnull} PhysicalDeviceObject_1 != 0;
    assume PhysicalDeviceObject_1 > 0;
    call {:si_unique_call 730} WPP_SF_qD(Tmp_1231, 25, Tmp_1233, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(PhysicalDeviceObject_1)], status_31);
    goto L58;

  L58:
    call {:si_unique_call 731} sdv_ExFreePool(0);
    goto L68;

  L68:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} RootHandle != 0;
    call {:si_unique_call 732} vslice_dummy_var_112 := ZwClose(0);
    goto L69;

  L69:
    assume {:nonnull} uniTempName != 0;
    assume uniTempName > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 733} sdv_ExFreePool(0);
    goto L73;

  L73:
    Tmp_1229 := status_31;
    return;

  anon29_Then:
    goto L73;

  anon28_Then:
    assume {:partition} RootHandle == 0;
    goto L69;

  anon31_Then:
    goto L58;

  anon36_Then:
    goto L58;

  anon30_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L58;

  anon26_Then:
    assume {:partition} 0 <= status_31;
    assume {:nonnull} KeyInfo != 0;
    assume KeyInfo > 0;
    Tmp_1237 := Data__KEY_VALUE_PARTIAL_INFORMATION(KeyInfo);
    assume {:nonnull} DwData != 0;
    assume DwData > 0;
    assume {:nonnull} Tmp_1237 != 0;
    assume Tmp_1237 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1232;
    assume {:nonnull} Tmp_1232 != 0;
    assume Tmp_1232 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1230;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1239;
    assume {:nonnull} DwData != 0;
    assume DwData > 0;
    assume {:nonnull} PhysicalDeviceObject_1 != 0;
    assume PhysicalDeviceObject_1 > 0;
    havoc vslice_dummy_var_1029;
    call {:si_unique_call 734} WPP_SF_qD(Tmp_1239, 24, Tmp_1230, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(PhysicalDeviceObject_1)], vslice_dummy_var_1029);
    goto L58;

  anon27_Then:
    goto L58;

  anon35_Then:
    goto L58;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L58;

  anon33_Then:
    assume {:partition} KeyInfo == 0;
    status_31 := -1073741670;
    goto L68;

  anon32_Then:
    status_31 := -1073741670;
    goto L68;

  anon25_Then:
    assume {:partition} 0 > status_31;
    status_31 := -1073741670;
    goto L68;
}



procedure {:origName "AcquireOrbListLock"} AcquireOrbListLock(actual_DeviceExtension_3: int, actual_orbLock_5: int, actual_fFromDpcLevel_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "AcquireOrbListLock"} AcquireOrbListLock(actual_DeviceExtension_3: int, actual_orbLock_5: int, actual_fFromDpcLevel_1: int)
{
  var {:pointer} currThread_1: int;
  var {:pointer} prevOwner: int;
  var {:pointer} sdv_413: int;
  var {:pointer} sdv_414: int;
  var {:pointer} DeviceExtension_3: int;
  var {:scalar} fFromDpcLevel_1: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_1030: int;
  var vslice_dummy_var_1031: int;
  var vslice_dummy_var_1032: int;

  anon0:
    call {:si_unique_call 735} vslice_dummy_var_114 := __HAVOC_malloc(4);
    DeviceExtension_3 := actual_DeviceExtension_3;
    fFromDpcLevel_1 := actual_fFromDpcLevel_1;
    call {:si_unique_call 736} currThread_1 := sdv_KeGetCurrentThread();
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_1030;
    call {:si_unique_call 737} Sbp2AddLog(DeviceExtension_3, 256, -982424767, currThread_1, vslice_dummy_var_1030);
    goto L12;

  L12:
    call {:si_unique_call 738} prevOwner, sdv_413, sdv_414 := AcquireOrbListLock_loop_L12(currThread_1, prevOwner, sdv_413, sdv_414, DeviceExtension_3, fFromDpcLevel_1);
    goto L12_last;

  L12_last:
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 746} sdv_413 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(DeviceExtension_3), currThread_1, 0);
    prevOwner := sdv_413;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} prevOwner == currThread_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_1031;
    call {:si_unique_call 739} Sbp2AddLog(DeviceExtension_3, 256, 544301889, currThread_1, vslice_dummy_var_1031);
    goto L22;

  L22:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} prevOwner == currThread_1;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    havoc vslice_dummy_var_1032;
    call {:si_unique_call 740} Sbp2AddLog(DeviceExtension_3, 256, -663657663, currThread_1, vslice_dummy_var_1032);
    return;

  anon14_Then:
    assume {:partition} prevOwner != currThread_1;
    goto anon14_Then_dummy;

  anon14_Then_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:partition} prevOwner != currThread_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} fFromDpcLevel_1 != 0;
    call {:si_unique_call 741} KeAcquireInStackQueuedSpinLockAtDpcLevel(0, 0);
    goto L32;

  L32:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} prevOwner != 0;
    assume {:nonnull} DeviceExtension_3 != 0;
    assume DeviceExtension_3 > 0;
    call {:si_unique_call 742} sdv_414 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(DeviceExtension_3), currThread_1, 0);
    prevOwner := sdv_414;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} prevOwner != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} fFromDpcLevel_1 != 0;
    call {:si_unique_call 743} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L22;

  anon16_Then:
    assume {:partition} fFromDpcLevel_1 == 0;
    call {:si_unique_call 744} KeReleaseInStackQueuedSpinLock(0);
    goto L22;

  anon18_Then:
    assume {:partition} prevOwner == 0;
    goto L22;

  anon15_Then:
    assume {:partition} prevOwner == 0;
    goto L22;

  anon13_Then:
    assume {:partition} fFromDpcLevel_1 == 0;
    call {:si_unique_call 745} KeAcquireInStackQueuedSpinLock(0, 0);
    goto L32;
}



procedure {:origName "WPP_SF_qqDq"} WPP_SF_qqDq(actual_Logger_14: int, actual_id_14: int, actual_TraceGuid_14: int, actual_s_p_e_c_i_a_l_59: int, actual_s_p_e_c_i_a_l_60: int, actual_s_p_e_c_i_a_l_61: int, actual_s_p_e_c_i_a_l_62: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qqDq"} WPP_SF_qqDq(actual_Logger_14: int, actual_id_14: int, actual_TraceGuid_14: int, actual_s_p_e_c_i_a_l_59: int, actual_s_p_e_c_i_a_l_60: int, actual_s_p_e_c_i_a_l_61: int, actual_s_p_e_c_i_a_l_62: int)
{
  var {:pointer} TraceGuid_14: int;
  var vslice_dummy_var_115: int;

  anon0:
    call {:si_unique_call 747} vslice_dummy_var_115 := __HAVOC_malloc(4);
    TraceGuid_14 := actual_TraceGuid_14;
    return;
}



procedure {:origName "Sbp2AddLog"} Sbp2AddLog(actual_PdoExt: int, actual_Mask: int, actual_Sig: int, actual_Data1: int, actual_Data2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2AddLog"} Sbp2AddLog(actual_PdoExt: int, actual_Mask: int, actual_Sig: int, actual_Data1: int, actual_Data2: int)
{
  var {:scalar} sdv_430: int;
  var {:pointer} logEntry: int;
  var {:scalar} sigRev: int;
  var {:scalar} index: int;
  var {:scalar} sig: int;
  var {:pointer} Tmp_1263: int;
  var {:pointer} log: int;
  var {:pointer} PdoExt: int;
  var {:scalar} Mask: int;
  var {:scalar} Sig: int;
  var {:scalar} Data1: int;
  var {:scalar} Data2: int;
  var vslice_dummy_var_116: int;

  anon0:
    call {:si_unique_call 748} sigRev := __HAVOC_malloc(20);
    call {:si_unique_call 749} sig := __HAVOC_malloc(20);
    call {:si_unique_call 750} vslice_dummy_var_116 := __HAVOC_malloc(4);
    PdoExt := actual_PdoExt;
    Mask := actual_Mask;
    Sig := actual_Sig;
    Data1 := actual_Data1;
    Data2 := actual_Data2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} BAND(Sbp2LogLevel, Mask) != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} PdoExt != 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.LogStart__DEBUG_LOG[LogStart__DEBUG_LOG(DbgLog__DEVICE_EXTENSION(PdoExt))] != 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} sig != 0;
    assume sig > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    log := DbgLog__DEVICE_EXTENSION(PdoExt);
    call {:si_unique_call 751} Tmp_1263 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    assume {:nonnull} log != 0;
    assume log > 0;
    call {:si_unique_call 752} sdv_430 := sdv_InterlockedDecrement(Tmp_1263);
    assume {:nonnull} Tmp_1263 != 0;
    assume Tmp_1263 > 0;
    assume {:nonnull} log != 0;
    assume log > 0;
    index := sdv_430;
    assume {:nonnull} log != 0;
    assume log > 0;
    havoc index;
    assume {:nonnull} log != 0;
    assume log > 0;
    logEntry := Mem_T.LogStart__DEBUG_LOG[LogStart__DEBUG_LOG(log)];
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} sigRev != 0;
    assume sigRev > 0;
    assume {:nonnull} PdoExt != 0;
    assume PdoExt > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    assume {:nonnull} logEntry != 0;
    assume logEntry > 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} Mem_T.LogStart__DEBUG_LOG[LogStart__DEBUG_LOG(DbgLog__DEVICE_EXTENSION(PdoExt))] == 0;
    goto L1;

  anon8_Then:
    assume {:partition} PdoExt == 0;
    goto L1;

  anon7_Then:
    assume {:partition} BAND(Sbp2LogLevel, Mask) == 0;
    goto L1;
}



procedure {:origName "WPP_SF_DD"} WPP_SF_DD(actual_Logger_15: int, actual_id_15: int, actual_TraceGuid_15: int, actual_s_p_e_c_i_a_l_63: int, actual_s_p_e_c_i_a_l_64: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_DD"} WPP_SF_DD(actual_Logger_15: int, actual_id_15: int, actual_TraceGuid_15: int, actual_s_p_e_c_i_a_l_63: int, actual_s_p_e_c_i_a_l_64: int)
{
  var {:pointer} TraceGuid_15: int;
  var vslice_dummy_var_117: int;

  anon0:
    call {:si_unique_call 753} vslice_dummy_var_117 := __HAVOC_malloc(4);
    TraceGuid_15 := actual_TraceGuid_15;
    return;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var {:scalar} Tmp_1313: int;
  var vslice_dummy_var_118: int;

  anon0:
    call {:si_unique_call 754} vslice_dummy_var_118 := __HAVOC_malloc(4);
    call {:si_unique_call 755} Tmp_1313 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1313 != 0;
    assume Tmp_1313 > 0;
    return;
}



procedure {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_6: int, actual_Packet_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "AllocateIrpAndIrb"} AllocateIrpAndIrb(actual_DeviceExtension_6: int, actual_Packet_1: int)
{
  var {:pointer} pkt: int;
  var {:pointer} Tmp_1314: int;
  var {:scalar} Tmp_1315: int;
  var {:pointer} Tmp_1316: int;
  var {:pointer} sdv_443: int;
  var {:pointer} sdv_444: int;
  var {:pointer} sdv_445: int;
  var {:pointer} Tmp_1319: int;
  var {:pointer} Tmp_1320: int;
  var {:pointer} DeviceExtension_6: int;
  var {:pointer} Packet_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_1033: int;
  var vslice_dummy_var_1034: int;
  var vslice_dummy_var_1035: int;

  anon0:
    call {:si_unique_call 756} vslice_dummy_var_119 := __HAVOC_malloc(4);
    DeviceExtension_6 := actual_DeviceExtension_6;
    Packet_1 := actual_Packet_1;
    call {:si_unique_call 757} Tmp_1316 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 758} sdv_443 := sdv_ExInterlockedPopEntrySList(0, 0);
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    goto L10;

  L10:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 759} sdv_444 := ExAllocatePoolWithTag(512, 24, -347053485);
    pkt := sdv_444;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} pkt != 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    call {:si_unique_call 760} sdv_445 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    havoc Tmp_1320;
    assume {:nonnull} Tmp_1320 != 0;
    assume Tmp_1320 > 0;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    havoc vslice_dummy_var_1033;
    call {:si_unique_call 761} boogieTmp := IoAllocateIrp(vslice_dummy_var_1033, 0);
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1316;
    assume {:nonnull} Tmp_1316 != 0;
    assume Tmp_1316 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceExtension_6 != 0;
    assume DeviceExtension_6 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_1314 := strConst__li2bpl13;
    goto L46;

  L46:
    havoc Tmp_1319;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1315;
    assume {:nonnull} pkt != 0;
    assume pkt > 0;
    havoc vslice_dummy_var_1034;
    havoc vslice_dummy_var_1035;
    call {:si_unique_call 762} WPP_SF_sqq(Tmp_1315, 10, Tmp_1319, Tmp_1314, vslice_dummy_var_1034, vslice_dummy_var_1035);
    goto L40;

  L40:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    goto L1;

  L1:
    return;

  anon24_Then:
    Tmp_1314 := strConst__li2bpl12;
    goto L46;

  anon23_Then:
    goto L40;

  anon27_Then:
    goto L40;

  anon22_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L40;

  anon21_Then:
    call {:si_unique_call 763} sdv_ExFreePool(0);
    call {:si_unique_call 764} sdv_ExFreePool(0);
    goto L1;

  anon26_Then:
    call {:si_unique_call 765} sdv_ExFreePool(0);
    goto L1;

  anon25_Then:
    assume {:partition} pkt == 0;
    goto L1;

  anon20_Then:
    goto L1;

  anon19_Then:
    assume {:nonnull} Packet_1 != 0;
    assume Packet_1 > 0;
    goto L10;
}



procedure {:origName "Sbp2QueueManagementWorkItem"} Sbp2QueueManagementWorkItem(actual_PdoExtension_18: int, actual_Action: int, actual_Generation_5: int) returns (Tmp_1321: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1321 == -1073741823 || Tmp_1321 == -1073741738 || Tmp_1321 == 0 || Tmp_1321 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2QueueManagementWorkItem"} Sbp2QueueManagementWorkItem(actual_PdoExtension_18: int, actual_Action: int, actual_Generation_5: int) returns (Tmp_1321: int)
{
  var {:pointer} Tmp_1322: int;
  var {:pointer} workItem: int;
  var {:scalar} Tmp_1324: int;
  var {:scalar} Tmp_1325: int;
  var {:pointer} sdv_448: int;
  var {:scalar} sdv_449: int;
  var {:pointer} Tmp_1326: int;
  var {:pointer} Tmp_1327: int;
  var {:scalar} status_35: int;
  var {:pointer} entry_1: int;
  var {:pointer} Tmp_1328: int;
  var {:pointer} PdoExtension_18: int;
  var {:scalar} Action: int;
  var {:scalar} Generation_5: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_1036: int;
  var vslice_dummy_var_1037: int;

  anon0:
    PdoExtension_18 := actual_PdoExtension_18;
    Action := actual_Action;
    Generation_5 := actual_Generation_5;
    call {:si_unique_call 766} Tmp_1322 := __HAVOC_malloc(4);
    call {:si_unique_call 767} Tmp_1327 := __HAVOC_malloc(4);
    call {:si_unique_call 768} status_35 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_35 >= 0;
    call {:si_unique_call 769} sdv_448 := ExAllocatePoolWithTag(512, 16, -344497581);
    entry_1 := sdv_448;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} entry_1 != 0;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    call {:si_unique_call 770} InitializeListHead(Link__BUS_RESET_ENTRY(entry_1));
    call {:si_unique_call 771} sdv_449 := sdv_IsListEmpty(0);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_449 == 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1327;
    assume {:nonnull} Tmp_1327 != 0;
    assume Tmp_1327 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_1326;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1325;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    havoc vslice_dummy_var_1036;
    call {:si_unique_call 772} WPP_SF_qD(Tmp_1325, 29, Tmp_1326, PdoExtension_18, vslice_dummy_var_1036);
    goto L60;

  L60:
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    call {:si_unique_call 773} vslice_dummy_var_120 := sdv_InsertTailList(BusResetEntry__DEVICE_EXTENSION(PdoExtension_18), Link__BUS_RESET_ENTRY(entry_1));
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 774} vslice_dummy_var_121 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    goto L54;

  L54:
    Tmp_1321 := status_35;
    goto L1;

  L1:
    return;

  anon27_Then:
    goto L60;

  anon30_Then:
    goto L60;

  anon26_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon22_Then:
    assume {:partition} sdv_449 != 0;
    call {:si_unique_call 775} workItem := IoAllocateWorkItem(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} workItem != 0;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    call {:si_unique_call 776} InsertHeadList(BusResetEntry__DEVICE_EXTENSION(PdoExtension_18), Link__BUS_RESET_ENTRY(entry_1));
    call {:si_unique_call 777} IoQueueWorkItem(0, li2bplFunctionConstant461, 1, 0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1322;
    assume {:nonnull} Tmp_1322 != 0;
    assume Tmp_1322 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    havoc Tmp_1328;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1324;
    assume {:nonnull} entry_1 != 0;
    assume entry_1 > 0;
    havoc vslice_dummy_var_1037;
    call {:si_unique_call 778} WPP_SF_qDd(Tmp_1324, 28, Tmp_1328, PdoExtension_18, vslice_dummy_var_1037, Generation_5);
    goto L46;

  L46:
    status_35 := 0;
    goto L54;

  anon25_Then:
    goto L46;

  anon29_Then:
    goto L46;

  anon24_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon23_Then:
    assume {:partition} workItem == 0;
    status_35 := -1073741670;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 779} vslice_dummy_var_122 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    Tmp_1321 := status_35;
    goto L1;

  anon28_Then:
    assume {:partition} entry_1 == 0;
    status_35 := -1073741670;
    assume {:nonnull} PdoExtension_18 != 0;
    assume PdoExtension_18 > 0;
    call {:si_unique_call 780} vslice_dummy_var_123 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_18), 0);
    Tmp_1321 := status_35;
    goto L1;

  anon21_Then:
    assume {:partition} 0 > status_35;
    Tmp_1321 := status_35;
    goto L1;
}



procedure {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_1329: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2InsertByKeyDeviceQueue"} Sbp2InsertByKeyDeviceQueue(actual_DeviceQueue_1: int, actual_DeviceQueueEntry: int, actual_SortKey_1: int) returns (Tmp_1329: int)
{
  var {:pointer} irpStack_7: int;
  var {:pointer} nextEntry_1: int;
  var {:scalar} inserted: int;
  var {:pointer} queueEntry_1: int;
  var {:pointer} sdv_451: int;
  var {:pointer} queueEntry2: int;
  var {:pointer} sdv_453: int;
  var {:pointer} irp_1: int;
  var {:pointer} queue: int;
  var {:pointer} DeviceQueue_1: int;
  var {:pointer} DeviceQueueEntry: int;
  var {:scalar} SortKey_1: int;

  anon0:
    DeviceQueue_1 := actual_DeviceQueue_1;
    DeviceQueueEntry := actual_DeviceQueueEntry;
    SortKey_1 := actual_SortKey_1;
    queue := DeviceQueue_1;
    queueEntry_1 := DeviceQueueEntry;
    call {:si_unique_call 781} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    call {:si_unique_call 782} sdv_451 := sdv_containing_record(DeviceQueueEntry, 64);
    irp_1 := sdv_451;
    call {:si_unique_call 783} irpStack_7 := sdv_IoGetCurrentIrpStackLocation(irp_1);
    assume {:nonnull} irpStack_7 != 0;
    assume irpStack_7 > 0;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    inserted := 1;
    assume {:nonnull} queue != 0;
    assume queue > 0;
    havoc nextEntry_1;
    goto L31;

  L31:
    call {:si_unique_call 784} nextEntry_1, queueEntry2, sdv_453 := Sbp2InsertByKeyDeviceQueue_loop_L31(nextEntry_1, queueEntry2, sdv_453, SortKey_1);
    goto L31_last;

  L31_last:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 785} sdv_453 := sdv_containing_record(nextEntry_1, 0);
    queueEntry2 := sdv_453;
    assume {:nonnull} queueEntry2 != 0;
    assume queueEntry2 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    assume false;
    return;

  anon9_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_1 != 0;
    assume nextEntry_1 > 0;
    havoc nextEntry_1;
    assume {:nonnull} queueEntry_1 != 0;
    assume queueEntry_1 > 0;
    call {:si_unique_call 786} InsertHeadList(nextEntry_1, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_1));
    goto L43;

  L43:
    call {:si_unique_call 787} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_1329 := inserted;
    return;

  anon7_Then:
    goto L32;

  anon8_Then:
    assume {:nonnull} queue != 0;
    assume queue > 0;
    inserted := 0;
    goto L43;
}



procedure {:origName "WPP_SF_sqq"} WPP_SF_sqq(actual_Logger_16: int, actual_id_16: int, actual_TraceGuid_16: int, actual_s_p_e_c_i_a_l_67: int, actual_s_p_e_c_i_a_l_68: int, actual_s_p_e_c_i_a_l_69: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_sqq"} WPP_SF_sqq(actual_Logger_16: int, actual_id_16: int, actual_TraceGuid_16: int, actual_s_p_e_c_i_a_l_67: int, actual_s_p_e_c_i_a_l_68: int, actual_s_p_e_c_i_a_l_69: int)
{
  var {:scalar} sdv_454: int;
  var {:pointer} TraceGuid_16: int;
  var {:pointer} s_p_e_c_i_a_l_67: int;
  var vslice_dummy_var_124: int;

  anon0:
    call {:si_unique_call 788} vslice_dummy_var_124 := __HAVOC_malloc(4);
    TraceGuid_16 := actual_TraceGuid_16;
    s_p_e_c_i_a_l_67 := actual_s_p_e_c_i_a_l_67;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} s_p_e_c_i_a_l_67 != 0;
    goto L9;

  L9:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} s_p_e_c_i_a_l_67 != 0;
    goto L12;

  L12:
    return;

  anon6_Then:
    assume {:partition} s_p_e_c_i_a_l_67 == 0;
    goto L12;

  anon5_Then:
    assume {:partition} s_p_e_c_i_a_l_67 == 0;
    goto L9;
}



procedure {:origName "Sbp2AllocateLog"} Sbp2AllocateLog(actual_PdoExtension_19: int);
  modifies alloc, Mem_T.LogStart__DEBUG_LOG;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2AllocateLog"} Sbp2AllocateLog(actual_PdoExtension_19: int)
{
  var {:scalar} logSize: int;
  var {:pointer} Tmp_1355: int;
  var {:pointer} PdoExtension_19: int;
  var vslice_dummy_var_125: int;

  anon0:
    call {:si_unique_call 789} vslice_dummy_var_125 := __HAVOC_malloc(4);
    PdoExtension_19 := actual_PdoExtension_19;
    call {:si_unique_call 790} Tmp_1355 := __HAVOC_malloc(4);
    logSize := 4096;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    havoc Tmp_1355;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    Mem_T.LogStart__DEBUG_LOG[LogStart__DEBUG_LOG(DbgLog__DEVICE_EXTENSION(PdoExtension_19))] := Tmp_1355;
    assume {:nonnull} PdoExtension_19 != 0;
    assume PdoExtension_19 > 0;
    return;
}



procedure {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_8: int, actual_Packet_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "DeAllocateIrpAndIrb"} DeAllocateIrpAndIrb(actual_DeviceExtension_8: int, actual_Packet_2: int)
{
  var {:pointer} DeviceExtension_8: int;
  var {:pointer} Packet_2: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;

  anon0:
    call {:si_unique_call 791} vslice_dummy_var_126 := __HAVOC_malloc(4);
    DeviceExtension_8 := actual_DeviceExtension_8;
    Packet_2 := actual_Packet_2;
    assume {:nonnull} Packet_2 != 0;
    assume Packet_2 > 0;
    assume {:nonnull} Packet_2 != 0;
    assume Packet_2 > 0;
    assume {:nonnull} DeviceExtension_8 != 0;
    assume DeviceExtension_8 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 792} vslice_dummy_var_127 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    call {:si_unique_call 793} IoFreeIrp(0);
    call {:si_unique_call 794} sdv_ExFreePool(0);
    call {:si_unique_call 795} sdv_ExFreePool(0);
    goto L1;
}



procedure {:origName "WPP_SF_DDD"} WPP_SF_DDD(actual_Logger_17: int, actual_id_17: int, actual_TraceGuid_17: int, actual_s_p_e_c_i_a_l_70: int, actual_s_p_e_c_i_a_l_71: int, actual_s_p_e_c_i_a_l_72: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_DDD"} WPP_SF_DDD(actual_Logger_17: int, actual_id_17: int, actual_TraceGuid_17: int, actual_s_p_e_c_i_a_l_70: int, actual_s_p_e_c_i_a_l_71: int, actual_s_p_e_c_i_a_l_72: int)
{
  var {:pointer} TraceGuid_17: int;
  var vslice_dummy_var_128: int;

  anon0:
    call {:si_unique_call 796} vslice_dummy_var_128 := __HAVOC_malloc(4);
    TraceGuid_17 := actual_TraceGuid_17;
    return;
}



procedure {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_20: int, actual_DeviceInfo_1: int) returns (Tmp_1389: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1389 == -1073741811 || Tmp_1389 == -1073741823 || Tmp_1389 == 0 || Tmp_1389 == 5 || Tmp_1389 == -1073741789 || Tmp_1389 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ConfigLegacyDevice"} Sbp2ConfigLegacyDevice(actual_DeviceObject_20: int, actual_DeviceInfo_1: int) returns (Tmp_1389: int)
{
  var {:pointer} Tmp_1390: int;
  var {:pointer} Tmp_1391: int;
  var {:scalar} sdv_465: int;
  var {:pointer} Tmp_1392: int;
  var {:pointer} Tmp_1393: int;
  var {:pointer} Tmp_1394: int;
  var {:scalar} sdv_466: int;
  var {:pointer} Tmp_1395: int;
  var {:scalar} devType: int;
  var {:pointer} Tmp_1396: int;
  var {:scalar} fw: int;
  var {:scalar} sdv_468: int;
  var {:pointer} Tmp_1397: int;
  var {:scalar} sdv_469: int;
  var {:scalar} sdv_470: int;
  var {:scalar} sdv_471: int;
  var {:scalar} sdv_472: int;
  var {:scalar} sdv_473: int;
  var {:pointer} Tmp_1398: int;
  var {:scalar} sdv_474: int;
  var {:scalar} sdv_475: int;
  var {:pointer} Tmp_1400: int;
  var {:scalar} uniTemp: int;
  var {:scalar} sdv_476: int;
  var {:scalar} status_38: int;
  var {:pointer} Tmp_1401: int;
  var {:pointer} Tmp_1402: int;
  var {:pointer} Tmp_1403: int;
  var {:scalar} sdv_477: int;
  var {:pointer} DeviceObject_20: int;
  var {:pointer} DeviceInfo_1: int;

  anon0:
    call {:si_unique_call 797} uniTemp := __HAVOC_malloc(12);
    DeviceObject_20 := actual_DeviceObject_20;
    DeviceInfo_1 := actual_DeviceInfo_1;
    call {:si_unique_call 798} Tmp_1390 := __HAVOC_malloc(144);
    call {:si_unique_call 799} Tmp_1391 := __HAVOC_malloc(20);
    call {:si_unique_call 800} Tmp_1392 := __HAVOC_malloc(76);
    call {:si_unique_call 801} Tmp_1393 := __HAVOC_malloc(40);
    call {:si_unique_call 802} Tmp_1394 := __HAVOC_malloc(68);
    call {:si_unique_call 803} Tmp_1395 := __HAVOC_malloc(32);
    call {:si_unique_call 804} Tmp_1396 := __HAVOC_malloc(36);
    call {:si_unique_call 805} Tmp_1397 := __HAVOC_malloc(68);
    call {:si_unique_call 806} Tmp_1398 := __HAVOC_malloc(32);
    call {:si_unique_call 807} Tmp_1400 := __HAVOC_malloc(48);
    call {:si_unique_call 808} Tmp_1401 := __HAVOC_malloc(64);
    call {:si_unique_call 809} Tmp_1402 := __HAVOC_malloc(40);
    call {:si_unique_call 810} Tmp_1403 := __HAVOC_malloc(40);
    status_38 := 0;
    call {:si_unique_call 811} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Tmp_1400 := strConst__li2bpl23;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    call {:si_unique_call 812} status_38 := Sbp2GetRegistryValue(DeviceObject_20, Tmp_1400, LegacyFlags__DEVICE_INFORMATION(DeviceInfo_1));
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    havoc devType;
    call {:si_unique_call 813} fw := corral_nondet();
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} devType == 5;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Tmp_1403 := strConst__li2bpl24;
    call {:si_unique_call 814} RtlInitUnicodeString(uniTemp, Tmp_1403);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L45;

  L45:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L46;

  L46:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L48;

  L48:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L50;

  L50:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L52;

  L52:
    Tmp_1389 := status_38;
    return;

  anon80_Then:
    goto L52;

  anon79_Then:
    goto L50;

  anon78_Then:
    goto L48;

  anon77_Then:
    goto L46;

  anon73_Then:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} sdv_471 != 0;
    goto L45;

  anon74_Then:
    assume {:partition} sdv_471 == 0;
    Tmp_1390 := strConst__li2bpl15;
    call {:si_unique_call 815} RtlInitUnicodeString(uniTemp, Tmp_1390);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L45;

  anon75_Then:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} sdv_473 != 0;
    goto L45;

  anon76_Then:
    assume {:partition} sdv_473 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon108_Then:
    assume {:partition} devType != 5;
    Tmp_1396 := strConst__li2bpl14;
    call {:si_unique_call 816} RtlInitUnicodeString(uniTemp, Tmp_1396);
    call {:si_unique_call 817} sdv_474 := corral_nondet();
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} sdv_474 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L58;

  L58:
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} devType != 14;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} devType == 0;
    goto L60;

  L60:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    Tmp_1394 := strConst__li2bpl25;
    call {:si_unique_call 818} RtlInitUnicodeString(uniTemp, Tmp_1394);
    call {:si_unique_call 819} sdv_475 := corral_nondet();
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} sdv_475 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L70;

  L70:
    Tmp_1401 := strConst__li2bpl16;
    call {:si_unique_call 820} RtlInitUnicodeString(uniTemp, Tmp_1401);
    call {:si_unique_call 821} sdv_468 := corral_nondet();
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} sdv_468 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L78;

  L78:
    Tmp_1393 := strConst__li2bpl17;
    call {:si_unique_call 822} RtlInitUnicodeString(uniTemp, Tmp_1393);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} sdv_476 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L83;

  L83:
    Tmp_1398 := strConst__li2bpl18;
    call {:si_unique_call 823} RtlInitUnicodeString(uniTemp, Tmp_1398);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} sdv_470 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L93;

  L93:
    Tmp_1395 := strConst__li2bpl19;
    call {:si_unique_call 824} RtlInitUnicodeString(uniTemp, Tmp_1395);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} sdv_469 == 0;
    Tmp_1392 := strConst__li2bpl20;
    call {:si_unique_call 825} RtlInitUnicodeString(uniTemp, Tmp_1392);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} sdv_477 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L103;

  L103:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} fw != 0;
    goto L120;

  L120:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_38 >= 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto L121;

  L121:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} fw != 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} fw != 40;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} fw != 41;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} fw != 4097;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} fw != 41144;
    goto L128;

  L128:
    Tmp_1391 := strConst__li2bpl21;
    call {:si_unique_call 826} RtlInitUnicodeString(uniTemp, Tmp_1391);
    call {:si_unique_call 827} sdv_472 := corral_nondet();
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} sdv_472 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon100_Then:
    assume {:partition} sdv_472 == 0;
    Tmp_1397 := strConst__li2bpl22;
    call {:si_unique_call 828} RtlInitUnicodeString(uniTemp, Tmp_1397);
    call {:si_unique_call 829} sdv_465 := corral_nondet();
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} sdv_465 != 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon101_Then:
    assume {:partition} sdv_465 == 0;
    Tmp_1402 := strConst__li2bpl17;
    call {:si_unique_call 830} RtlInitUnicodeString(uniTemp, Tmp_1402);
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    assume {:nonnull} uniTemp != 0;
    assume uniTemp > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} sdv_466 == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L45;

  anon103_Then:
    assume {:partition} sdv_466 != 0;
    goto L45;

  anon102_Then:
    goto L45;

  anon104_Then:
    assume {:partition} fw == 41144;
    goto L126;

  L126:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L128;

  anon105_Then:
    assume {:partition} fw == 4097;
    goto L126;

  anon106_Then:
    assume {:partition} fw == 41;
    goto L126;

  anon107_Then:
    assume {:partition} fw == 40;
    goto L126;

  anon97_Then:
    assume {:partition} fw == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto L128;

  anon99_Then:
    goto L126;

  anon98_Then:
    goto L45;

  anon96_Then:
    assume {:partition} 0 > status_38;
    goto L121;

  anon91_Then:
    assume {:partition} fw == 0;
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} DeviceInfo_1 != 0;
    assume DeviceInfo_1 > 0;
    goto L120;

  anon95_Then:
    goto L120;

  anon94_Then:
    assume {:partition} sdv_477 != 0;
    goto L103;

  anon93_Then:
    goto L103;

  anon92_Then:
    assume {:partition} sdv_469 != 0;
    goto L103;

  anon90_Then:
    goto L103;

  anon89_Then:
    assume {:partition} sdv_470 != 0;
    goto L93;

  anon88_Then:
    goto L93;

  anon87_Then:
    assume {:partition} sdv_476 != 0;
    goto L83;

  anon86_Then:
    goto L83;

  anon85_Then:
    assume {:partition} sdv_468 == 0;
    goto L78;

  anon84_Then:
    assume {:partition} sdv_475 == 0;
    goto L70;

  anon83_Then:
    assume {:partition} devType != 0;
    goto L45;

  anon82_Then:
    assume {:partition} devType == 14;
    goto L60;

  anon81_Then:
    assume {:partition} sdv_474 == 0;
    goto L58;
}



procedure {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_22: int, actual_Context_8: int, actual_ErrorId: int, actual_Status: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2CreateRequestErrorLog"} Sbp2CreateRequestErrorLog(actual_DeviceObject_22: int, actual_Context_8: int, actual_ErrorId: int, actual_Status: int)
{
  var {:scalar} Tmp_1406: int;
  var {:pointer} sdv_480: int;
  var {:pointer} errorLogEntry: int;
  var {:scalar} Tmp_1409: int;
  var {:pointer} Tmp_1410: int;
  var {:pointer} Tmp_1411: int;
  var {:pointer} Tmp_1413: int;
  var {:pointer} Tmp_1414: int;
  var {:pointer} Tmp_1415: int;
  var {:pointer} DeviceObject_22: int;
  var {:pointer} Context_8: int;
  var {:scalar} ErrorId: int;
  var {:scalar} Status: int;
  var vslice_dummy_var_129: int;

  anon0:
    call {:si_unique_call 831} vslice_dummy_var_129 := __HAVOC_malloc(4);
    DeviceObject_22 := actual_DeviceObject_22;
    Context_8 := actual_Context_8;
    ErrorId := actual_ErrorId;
    Status := actual_Status;
    call {:si_unique_call 832} Tmp_1411 := __HAVOC_malloc(4);
    call {:si_unique_call 833} Tmp_1413 := __HAVOC_malloc(4);
    call {:si_unique_call 834} Tmp_1414 := __HAVOC_malloc(4);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Status != -1073741810;
    call {:si_unique_call 835} sdv_480 := IoAllocateErrorLogEntry(0, 88);
    errorLogEntry := sdv_480;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} errorLogEntry == 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1411;
    assume {:nonnull} Tmp_1411 != 0;
    assume Tmp_1411 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    havoc Tmp_1410;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1406;
    assume {:nonnull} DeviceObject_22 != 0;
    assume DeviceObject_22 > 0;
    call {:si_unique_call 836} WPP_SF_q(Tmp_1406, 22, Tmp_1410, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_22)]);
    goto L1;

  L1:
    return;

  anon38_Then:
    goto L1;

  anon48_Then:
    goto L1;

  anon37_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon45_Then:
    assume {:partition} errorLogEntry != 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Status != -1073741811;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Status != -1073741808;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Status != -1073741670;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Status != -1073741666;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Status != -1073741434;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} Status != -1073741248;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Status == 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  L23:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Context_8 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_1413;
    call {:si_unique_call 837} sdv_RtlCopyMemory(0, 0, 40);
    goto L35;

  L35:
    call {:si_unique_call 838} IoWriteErrorLogEntry(0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1414;
    assume {:nonnull} Tmp_1414 != 0;
    assume Tmp_1414 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    havoc Tmp_1415;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1409;
    assume {:nonnull} DeviceObject_22 != 0;
    assume DeviceObject_22 > 0;
    call {:si_unique_call 839} WPP_SF_qqDq(Tmp_1409, 21, Tmp_1415, Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_22)], DeviceObject_22, Status, Context_8);
    goto L1;

  anon36_Then:
    goto L1;

  anon47_Then:
    goto L1;

  anon35_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon46_Then:
    assume {:partition} Context_8 == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L35;

  anon39_Then:
    assume {:partition} Status != 258;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon40_Then:
    assume {:partition} Status == -1073741248;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon41_Then:
    assume {:partition} Status == -1073741434;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon42_Then:
    assume {:partition} Status == -1073741666;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon43_Then:
    assume {:partition} Status == -1073741670;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon44_Then:
    assume {:partition} Status == -1073741808;
    goto L16;

  L16:
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto L23;

  anon34_Then:
    assume {:partition} Status == -1073741811;
    goto L16;

  anon33_Then:
    assume {:partition} Status == -1073741810;
    goto L1;
}



procedure {:origName "WPP_SF_qqqDD"} WPP_SF_qqqDD(actual_Logger_18: int, actual_id_18: int, actual_TraceGuid_18: int, actual_s_p_e_c_i_a_l_73: int, actual_s_p_e_c_i_a_l_74: int, actual_s_p_e_c_i_a_l_75: int, actual_s_p_e_c_i_a_l_76: int, actual_s_p_e_c_i_a_l_77: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qqqDD"} WPP_SF_qqqDD(actual_Logger_18: int, actual_id_18: int, actual_TraceGuid_18: int, actual_s_p_e_c_i_a_l_73: int, actual_s_p_e_c_i_a_l_74: int, actual_s_p_e_c_i_a_l_75: int, actual_s_p_e_c_i_a_l_76: int, actual_s_p_e_c_i_a_l_77: int)
{
  var {:pointer} TraceGuid_18: int;
  var vslice_dummy_var_130: int;

  anon0:
    call {:si_unique_call 840} vslice_dummy_var_130 := __HAVOC_malloc(4);
    TraceGuid_18 := actual_TraceGuid_18;
    return;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var {:scalar} Tmp_1453: int;
  var vslice_dummy_var_131: int;

  anon0:
    call {:si_unique_call 841} Tmp_1453 := __HAVOC_malloc(4);
    call {:si_unique_call 842} vslice_dummy_var_131 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1453 != 0;
    assume Tmp_1453 > 0;
    return;
}



procedure {:origName "WPP_SF_qDqDD"} WPP_SF_qDqDD(actual_Logger_19: int, actual_id_19: int, actual_TraceGuid_19: int, actual_s_p_e_c_i_a_l_78: int, actual_s_p_e_c_i_a_l_79: int, actual_s_p_e_c_i_a_l_80: int, actual_s_p_e_c_i_a_l_81: int, actual_s_p_e_c_i_a_l_82: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qDqDD"} WPP_SF_qDqDD(actual_Logger_19: int, actual_id_19: int, actual_TraceGuid_19: int, actual_s_p_e_c_i_a_l_78: int, actual_s_p_e_c_i_a_l_79: int, actual_s_p_e_c_i_a_l_80: int, actual_s_p_e_c_i_a_l_81: int, actual_s_p_e_c_i_a_l_82: int)
{
  var {:pointer} TraceGuid_19: int;
  var vslice_dummy_var_132: int;

  anon0:
    call {:si_unique_call 843} vslice_dummy_var_132 := __HAVOC_malloc(4);
    TraceGuid_19 := actual_TraceGuid_19;
    return;
}



procedure {:origName "Sbp2ScsiPassThrough"} Sbp2ScsiPassThrough(actual_DeviceObject_23: int, actual_Irp_15: int, actual_Direct: int) returns (Tmp_1459: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ScsiPassThrough"} Sbp2ScsiPassThrough(actual_DeviceObject_23: int, actual_Irp_15: int, actual_Direct: int) returns (Tmp_1459: int)
{
  var {:pointer} irpStack_9: int;
  var {:pointer} Tmp_1461: int;
  var {:pointer} pdoExtension_10: int;
  var {:pointer} Tmp_1462: int;
  var {:scalar} Tmp_1463: int;
  var {:pointer} Tmp_1464: int;
  var {:scalar} maxPhysicalPages: int;
  var {:scalar} Tmp_1465: int;
  var {:pointer} Tmp_1466: int;
  var {:pointer} Tmp_1467: int;
  var {:scalar} maxTransferLength: int;
  var {:scalar} status_40: int;
  var {:pointer} DeviceObject_23: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_133: int;

  anon0:
    DeviceObject_23 := actual_DeviceObject_23;
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 844} Tmp_1461 := __HAVOC_malloc(4);
    call {:si_unique_call 845} Tmp_1462 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_23 != 0;
    assume DeviceObject_23 > 0;
    pdoExtension_10 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_23)];
    call {:si_unique_call 846} sdv_do_paged_code_check();
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1462;
    assume {:nonnull} Tmp_1462 != 0;
    assume Tmp_1462 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_1466;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1465;
    call {:si_unique_call 847} WPP_SF_qq(Tmp_1465, 61, Tmp_1466, pdoExtension_10, DeviceObject_23);
    goto L14;

  L14:
    call {:si_unique_call 848} irpStack_9 := sdv_IoGetCurrentIrpStackLocation(Irp_15);
    assume {:nonnull} irpStack_9 != 0;
    assume irpStack_9 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L29;

  L29:
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    havoc Tmp_1467;
    assume {:nonnull} Tmp_1467 != 0;
    assume Tmp_1467 > 0;
    havoc maxTransferLength;
    maxPhysicalPages := INTDIV(maxTransferLength, 4096);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 511 > maxPhysicalPages;
    maxPhysicalPages := maxPhysicalPages + 1;
    goto L32;

  L32:
    call {:si_unique_call 849} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 850} vslice_dummy_var_133 := corral_nondet();
    status_40 := 259;
    goto L40;

  L40:
    Tmp_1459 := status_40;
    goto LM2;

  LM2:
    return;

  anon30_Then:
    assume {:partition} maxPhysicalPages >= 511;
    goto L32;

  anon25_Then:
    assume {:nonnull} pdoExtension_10 != 0;
    assume pdoExtension_10 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1461;
    assume {:nonnull} Tmp_1461 != 0;
    assume Tmp_1461 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    havoc Tmp_1464;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1463;
    call {:si_unique_call 851} WPP_SF_(Tmp_1463, 62, Tmp_1464);
    goto L45;

  L45:
    status_40 := -1073741808;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume Irp_15 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 852} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L67;

  L67:
    call {:si_unique_call 853} sdv_IoCompleteRequest(0, 0);
    goto L40;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume !(Irp_15 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L67;

  anon28_Then:
    goto L45;

  anon31_Then:
    goto L45;

  anon27_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon26_Then:
    goto L29;

  anon24_Then:
    goto L14;

  anon29_Then:
    goto L14;

  anon23_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L14;
}



procedure {:origName "WPP_SF_dq"} WPP_SF_dq(actual_Logger_20: int, actual_id_20: int, actual_TraceGuid_20: int, actual_s_p_e_c_i_a_l_83: int, actual_s_p_e_c_i_a_l_84: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_dq"} WPP_SF_dq(actual_Logger_20: int, actual_id_20: int, actual_TraceGuid_20: int, actual_s_p_e_c_i_a_l_83: int, actual_s_p_e_c_i_a_l_84: int)
{
  var {:pointer} TraceGuid_20: int;
  var vslice_dummy_var_134: int;

  anon0:
    call {:si_unique_call 854} vslice_dummy_var_134 := __HAVOC_malloc(4);
    TraceGuid_20 := actual_TraceGuid_20;
    return;
}



procedure {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_9: int) returns (Tmp_1471: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1471 == -1073741670 || Tmp_1471 == -1073741823 || Tmp_1471 == 259 || Tmp_1471 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2_SCSI_RBC_Conversion"} Sbp2_SCSI_RBC_Conversion(actual_Context_9: int) returns (Tmp_1471: int)
{
  var {:pointer} Tmp_1472: int;
  var {:pointer} Tmp_1473: int;
  var {:pointer} Tmp_1474: int;
  var {:pointer} Tmp_1475: int;
  var {:pointer} cdb_1: int;
  var {:scalar} Tmp_1476: int;
  var {:scalar} Tmp_1477: int;
  var {:pointer} Tmp_1478: int;
  var {:pointer} pdoExtension_11: int;
  var {:pointer} Tmp_1479: int;
  var {:pointer} Tmp_1480: int;
  var {:pointer} Tmp_1481: int;
  var {:pointer} Tmp_1482: int;
  var {:pointer} Tmp_1483: int;
  var {:pointer} Tmp_1484: int;
  var {:pointer} Tmp_1485: int;
  var {:pointer} Tmp_1487: int;
  var {:pointer} Tmp_1488: int;
  var {:pointer} Tmp_1489: int;
  var {:pointer} Tmp_1490: int;
  var {:pointer} Tmp_1491: int;
  var {:pointer} Tmp_1492: int;
  var {:scalar} Tmp_1493: int;
  var {:pointer} Tmp_1494: int;
  var {:scalar} Tmp_1495: int;
  var {:scalar} Tmp_1496: int;
  var {:pointer} Tmp_1497: int;
  var {:pointer} Tmp_1498: int;
  var {:pointer} Tmp_1499: int;
  var {:pointer} Tmp_1500: int;
  var {:scalar} Tmp_1501: int;
  var {:scalar} Tmp_1502: int;
  var {:pointer} Tmp_1503: int;
  var {:scalar} Tmp_1504: int;
  var {:pointer} Tmp_1505: int;
  var {:pointer} Tmp_1506: int;
  var {:pointer} Tmp_1507: int;
  var {:scalar} bSetCacheHack: int;
  var {:pointer} Tmp_1508: int;
  var {:scalar} Tmp_1509: int;
  var {:pointer} Tmp_1510: int;
  var {:pointer} Tmp_1511: int;
  var {:pointer} Tmp_1512: int;
  var {:pointer} Tmp_1513: int;
  var {:pointer} Tmp_1514: int;
  var {:pointer} Tmp_1515: int;
  var {:pointer} Tmp_1516: int;
  var {:pointer} Tmp_1517: int;
  var {:pointer} Tmp_1518: int;
  var {:pointer} Tmp_1519: int;
  var {:pointer} Context_9: int;
  var vslice_dummy_var_1038: int;
  var vslice_dummy_var_1039: int;
  var vslice_dummy_var_1040: int;
  var vslice_dummy_var_1041: int;

  anon0:
    call {:si_unique_call 855} Tmp_1472 := __HAVOC_malloc(4);
    call {:si_unique_call 856} Tmp_1481 := __HAVOC_malloc(4);
    Context_9 := actual_Context_9;
    call {:si_unique_call 857} Tmp_1473 := __HAVOC_malloc(64);
    call {:si_unique_call 858} Tmp_1478 := __HAVOC_malloc(4);
    call {:si_unique_call 859} Tmp_1485 := __HAVOC_malloc(64);
    call {:si_unique_call 860} Tmp_1490 := __HAVOC_malloc(64);
    call {:si_unique_call 861} Tmp_1498 := __HAVOC_malloc(64);
    call {:si_unique_call 862} Tmp_1505 := __HAVOC_malloc(64);
    call {:si_unique_call 863} Tmp_1506 := __HAVOC_malloc(64);
    call {:si_unique_call 864} Tmp_1507 := __HAVOC_malloc(64);
    call {:si_unique_call 865} Tmp_1510 := __HAVOC_malloc(64);
    call {:si_unique_call 866} Tmp_1515 := __HAVOC_malloc(64);
    call {:si_unique_call 867} Tmp_1519 := __HAVOC_malloc(64);
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1494;
    assume {:nonnull} Tmp_1494 != 0;
    assume Tmp_1494 > 0;
    pdoExtension_11 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1494)];
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1489;
    assume {:nonnull} Tmp_1489 != 0;
    assume Tmp_1489 > 0;
    havoc Tmp_1507;
    Tmp_1496 := Tmp_1507;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1508;
    assume {:nonnull} Tmp_1508 != 0;
    assume Tmp_1508 > 0;
    havoc Tmp_1501;
    call {:si_unique_call 868} Sbp2AddLog(pdoExtension_11, 128, -1016831415, Tmp_1501, Tmp_1496);
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} Tmp_1481 != 0;
    assume Tmp_1481 > 0;
    Tmp_1491 := Tmp_1481;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc vslice_dummy_var_1038;
    havoc vslice_dummy_var_1039;
    call {:si_unique_call 869} Tmp_1471 := Rbc_Scsi_Conversion(vslice_dummy_var_1038, Tmp_1491, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension_11), 0, vslice_dummy_var_1039, 0);
    goto L1;

  L1:
    return;

  anon41_Then:
    goto L14;

  L14:
    Tmp_1471 := 259;
    goto L1;

  anon48_Then:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc Tmp_1474;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1518;
    assume {:nonnull} Tmp_1474 != 0;
    assume Tmp_1474 > 0;
    assume {:nonnull} Tmp_1518 != 0;
    assume Tmp_1518 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1478;
    assume {:nonnull} Tmp_1478 != 0;
    assume Tmp_1478 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1514;
    assume {:nonnull} Tmp_1514 != 0;
    assume Tmp_1514 > 0;
    havoc Tmp_1505;
    assume {:nonnull} Tmp_1505 != 0;
    assume Tmp_1505 > 0;
    havoc Tmp_1502;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1484;
    assume {:nonnull} Tmp_1484 != 0;
    assume Tmp_1484 > 0;
    havoc Tmp_1493;
    havoc Tmp_1487;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1476;
    call {:si_unique_call 870} WPP_SF_DD(Tmp_1476, 41, Tmp_1487, Tmp_1493, Tmp_1502);
    goto L25;

  L25:
    Tmp_1471 := -1073741823;
    goto L1;

  anon43_Then:
    goto L25;

  anon50_Then:
    goto L25;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon49_Then:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1500;
    assume {:nonnull} Tmp_1500 != 0;
    assume Tmp_1500 > 0;
    havoc Tmp_1510;
    Tmp_1477 := Tmp_1510;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1492;
    assume {:nonnull} Tmp_1492 != 0;
    assume Tmp_1492 > 0;
    havoc Tmp_1509;
    call {:si_unique_call 871} Sbp2AddLog(pdoExtension_11, 128, -1016831409, Tmp_1509, Tmp_1477);
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1513;
    assume {:nonnull} Tmp_1513 != 0;
    assume Tmp_1513 > 0;
    havoc Tmp_1519;
    assume {:nonnull} Tmp_1519 != 0;
    assume Tmp_1519 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Tmp_1519 != 0;
    assume Tmp_1519 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Tmp_1519 != 0;
    assume Tmp_1519 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1499;
    assume {:nonnull} Tmp_1499 != 0;
    assume Tmp_1499 > 0;
    havoc Tmp_1490;
    assume {:nonnull} Tmp_1490 != 0;
    assume Tmp_1490 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1516;
    assume {:nonnull} Tmp_1516 != 0;
    assume Tmp_1516 > 0;
    havoc Tmp_1506;
    assume {:nonnull} Tmp_1506 != 0;
    assume Tmp_1506 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1497;
    assume {:nonnull} Tmp_1497 != 0;
    assume Tmp_1497 > 0;
    havoc Tmp_1485;
    assume {:nonnull} Tmp_1485 != 0;
    assume Tmp_1485 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1503;
    assume {:nonnull} Tmp_1503 != 0;
    assume Tmp_1503 > 0;
    havoc Tmp_1515;
    assume {:nonnull} Tmp_1515 != 0;
    assume Tmp_1515 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc Tmp_1475;
    assume {:nonnull} Tmp_1475 != 0;
    assume Tmp_1475 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    Tmp_1471 := -1073741823;
    goto L1;

  anon60_Then:
    goto L40;

  L40:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc Tmp_1482;
    assume {:nonnull} Tmp_1482 != 0;
    assume Tmp_1482 > 0;
    havoc Tmp_1504;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} Tmp_1504 == 0;
    bSetCacheHack := 0;
    goto L121;

  L121:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} Tmp_1472 != 0;
    assume Tmp_1472 > 0;
    Tmp_1488 := Tmp_1472;
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc vslice_dummy_var_1040;
    havoc vslice_dummy_var_1041;
    call {:si_unique_call 872} Tmp_1471 := Rbc_Scsi_Conversion(vslice_dummy_var_1040, Tmp_1488, DeviceModeHeaderAndPage__DEVICE_EXTENSION(pdoExtension_11), 1, vslice_dummy_var_1041, bSetCacheHack);
    goto L1;

  anon53_Then:
    assume {:partition} Tmp_1504 != 0;
    bSetCacheHack := 1;
    goto L121;

  anon44_Then:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1517;
    assume {:nonnull} Tmp_1517 != 0;
    assume Tmp_1517 > 0;
    havoc Tmp_1473;
    assume {:nonnull} Tmp_1473 != 0;
    assume Tmp_1473 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1512;
    assume {:nonnull} Tmp_1512 != 0;
    assume Tmp_1512 > 0;
    havoc Tmp_1498;
    cdb_1 := Tmp_1498;
    assume {:nonnull} cdb_1 != 0;
    assume cdb_1 > 0;
    goto L14;

  anon54_Then:
    goto L14;

  anon45_Then:
    goto L14;

  anon59_Then:
    goto L40;

  anon58_Then:
    goto L40;

  anon57_Then:
    goto L40;

  anon56_Then:
    goto L40;

  anon46_Then:
    goto L40;

  anon47_Then:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1511;
    assume {:nonnull} Tmp_1511 != 0;
    assume Tmp_1511 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_1495 := 3;
    goto L52;

  L52:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1479;
    assume {:nonnull} Tmp_1479 != 0;
    assume Tmp_1479 > 0;
    goto L40;

  anon55_Then:
    assume {:nonnull} Context_9 != 0;
    assume Context_9 > 0;
    havoc Tmp_1480;
    assume {:nonnull} Tmp_1480 != 0;
    assume Tmp_1480 > 0;
    havoc Tmp_1495;
    goto L52;

  anon51_Then:
    assume {:nonnull} pdoExtension_11 != 0;
    assume pdoExtension_11 > 0;
    havoc Tmp_1483;
    assume {:nonnull} Tmp_1483 != 0;
    assume Tmp_1483 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    Tmp_1471 := -1073741823;
    goto L1;

  anon52_Then:
    goto L40;
}



procedure {:origName "Sbp2ScsiRequests"} Sbp2ScsiRequests(actual_DeviceObject_25: int, actual_Irp_17: int) returns (Tmp_1590: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ScsiRequests"} Sbp2ScsiRequests(actual_DeviceObject_25: int, actual_Irp_17: int) returns (Tmp_1590: int)
{
  var {:pointer} Tmp_1591: int;
  var {:pointer} irpStack_11: int;
  var {:pointer} Tmp_1592: int;
  var {:pointer} Tmp_1593: int;
  var {:pointer} Tmp_1594: int;
  var {:scalar} Tmp_1595: int;
  var {:pointer} pdoExtension_12: int;
  var {:pointer} Tmp_1596: int;
  var {:pointer} Tmp_1597: int;
  var {:pointer} Tmp_1598: int;
  var {:scalar} Tmp_1599: int;
  var {:scalar} Tmp_1600: int;
  var {:pointer} Tmp_1601: int;
  var {:pointer} Tmp_1602: int;
  var {:scalar} Tmp_1603: int;
  var {:scalar} orbLock_8: int;
  var {:scalar} Tmp_1604: int;
  var {:pointer} Tmp_1605: int;
  var {:pointer} Tmp_1606: int;
  var {:pointer} Tmp_1607: int;
  var {:pointer} Tmp_1608: int;
  var {:pointer} Tmp_1609: int;
  var {:scalar} Tmp_1610: int;
  var {:pointer} Tmp_1611: int;
  var {:scalar} Tmp_1612: int;
  var {:scalar} Tmp_1613: int;
  var {:pointer} sdv_518: int;
  var {:pointer} Tmp_1614: int;
  var {:pointer} Tmp_1615: int;
  var {:pointer} Tmp_1616: int;
  var {:pointer} Tmp_1617: int;
  var {:scalar} cIrql_7: int;
  var {:scalar} Tmp_1618: int;
  var {:scalar} Tmp_1619: int;
  var {:pointer} srb_5: int;
  var {:scalar} status_43: int;
  var {:pointer} tIrp: int;
  var {:pointer} Tmp_1620: int;
  var {:scalar} Tmp_1621: int;
  var {:pointer} Tmp_1622: int;
  var {:pointer} DeviceObject_25: int;
  var {:pointer} Irp_17: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_1042: int;
  var vslice_dummy_var_1043: int;
  var vslice_dummy_var_1044: int;
  var vslice_dummy_var_1045: int;

  anon0:
    call {:si_unique_call 873} orbLock_8 := __HAVOC_malloc(12);
    DeviceObject_25 := actual_DeviceObject_25;
    Irp_17 := actual_Irp_17;
    call {:si_unique_call 874} Tmp_1591 := __HAVOC_malloc(64);
    call {:si_unique_call 875} Tmp_1592 := __HAVOC_malloc(4);
    call {:si_unique_call 876} Tmp_1593 := __HAVOC_malloc(4);
    call {:si_unique_call 877} Tmp_1594 := __HAVOC_malloc(4);
    call {:si_unique_call 878} Tmp_1596 := __HAVOC_malloc(4);
    call {:si_unique_call 879} Tmp_1605 := __HAVOC_malloc(4);
    call {:si_unique_call 880} Tmp_1607 := __HAVOC_malloc(4);
    call {:si_unique_call 881} Tmp_1608 := __HAVOC_malloc(4);
    call {:si_unique_call 882} Tmp_1611 := __HAVOC_malloc(4);
    call {:si_unique_call 883} Tmp_1616 := __HAVOC_malloc(4);
    call {:si_unique_call 884} irpStack_11 := sdv_IoGetCurrentIrpStackLocation(Irp_17);
    assume {:nonnull} DeviceObject_25 != 0;
    assume DeviceObject_25 > 0;
    pdoExtension_12 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_25)];
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    assume {:nonnull} orbLock_8 != 0;
    assume orbLock_8 > 0;
    call {:si_unique_call 885} status_43 := sdv_IoAcquireRemoveLock(0, 0);
    assume {:nonnull} irpStack_11 != 0;
    assume irpStack_11 > 0;
    havoc srb_5;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} status_43 >= 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1604;
    call {:si_unique_call 886} Sbp2AddLog(pdoExtension_12, 64, -748457111, Irp_17, Tmp_1604);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1608;
    assume {:nonnull} Tmp_1608 != 0;
    assume Tmp_1608 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    havoc Tmp_1606;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1610;
    call {:si_unique_call 887} WPP_SF_q(Tmp_1610, 16, Tmp_1606, pdoExtension_12);
    goto L52;

  L52:
    call {:si_unique_call 888} Tmp_1601 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    call {:si_unique_call 889} sdv_KeAcquireSpinLock(0, Tmp_1601);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 890} sdv_KeReleaseSpinLock(0, cIrql_7);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 891} sdv_518 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_12), 0);
    tIrp := sdv_518;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} tIrp != 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1596;
    assume {:nonnull} Tmp_1596 != 0;
    assume Tmp_1596 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    havoc Tmp_1602;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1612;
    call {:si_unique_call 892} WPP_SF_qq(Tmp_1612, 17, Tmp_1602, pdoExtension_12, tIrp);
    goto L77;

  L77:
    call {:si_unique_call 893} Sbp2StartPacket#1(DeviceObject_25, tIrp, 0);
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    call {:si_unique_call 894} Tmp_1601 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    call {:si_unique_call 895} sdv_KeRaiseIrql(2, Tmp_1601);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    havoc vslice_dummy_var_1042;
    call {:si_unique_call 896} Sbp2StartNextPacketByKey#1(DeviceObject_25, vslice_dummy_var_1042);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 897} sdv_KeLowerIrql(cIrql_7);
    goto L87;

  L87:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    status_43 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  L103:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 898} vslice_dummy_var_139 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_12), Irp_17);
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume Irp_17 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 899} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} yogi_error != 1;
    goto L440;

  L440:
    call {:si_unique_call 900} sdv_IoCompleteRequest(0, 0);
    Tmp_1590 := status_43;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon209_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon161_Then:
    assume !(Irp_17 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L440;

  anon159_Then:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    call {:si_unique_call 901} AcquireOrbListLock(pdoExtension_12, orbLock_8, 0);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    havoc vslice_dummy_var_1043;
    call {:si_unique_call 902} vslice_dummy_var_135 := FreeAsyncRequestContext(pdoExtension_12, vslice_dummy_var_1043);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto L116;

  L116:
    call {:si_unique_call 903} ReleaseOrbListLock(pdoExtension_12, orbLock_8, 0);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    call {:si_unique_call 904} Tmp_1601 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    call {:si_unique_call 905} sdv_KeAcquireSpinLock(0, Tmp_1601);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 906} sdv_KeReleaseSpinLock(0, cIrql_7);
    goto L125;

  L125:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume Irp_17 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 907} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} yogi_error != 1;
    goto L443;

  L443:
    call {:si_unique_call 908} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    call {:si_unique_call 909} Tmp_1601 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    call {:si_unique_call 910} sdv_KeRaiseIrql(2, Tmp_1601);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    havoc vslice_dummy_var_1044;
    call {:si_unique_call 911} Sbp2StartNextPacketByKey#1(DeviceObject_25, vslice_dummy_var_1044);
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 912} sdv_KeLowerIrql(cIrql_7);
    goto L138;

  L138:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 913} vslice_dummy_var_136 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_12), Irp_17);
    Tmp_1590 := 0;
    goto L1;

  anon224_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon164_Then:
    goto L138;

  anon223_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon222_Then:
    assume !(Irp_17 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L443;

  anon163_Then:
    goto L125;

  anon162_Then:
    goto L116;

  anon160_Then:
    status_43 := 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon221_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon156_Then:
    goto L87;

  anon220_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon158_Then:
    goto L77;

  anon219_Then:
    goto L77;

  anon157_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L77;

  anon218_Then:
    assume {:partition} tIrp == 0;
    goto L72;

  anon155_Then:
    goto L52;

  anon217_Then:
    goto L52;

  anon154_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L52;

  anon192_Then:
    status_43 := -1073741637;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1607;
    assume {:nonnull} Tmp_1607 != 0;
    assume Tmp_1607 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1619;
    havoc Tmp_1622;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1618;
    call {:si_unique_call 914} WPP_SF_qD(Tmp_1618, 19, Tmp_1622, pdoExtension_12, Tmp_1619);
    goto L103;

  anon191_Then:
    goto L103;

  anon226_Then:
    goto L103;

  anon225_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon193_Then:
    call {:si_unique_call 915} Tmp_1601 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    call {:si_unique_call 916} sdv_KeAcquireSpinLock(0, Tmp_1601);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    call {:si_unique_call 917} sdv_KeReleaseSpinLock(0, cIrql_7);
    status_43 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon165_Then:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 918} sdv_KeReleaseSpinLock(0, cIrql_7);
    status_43 := 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1594;
    assume {:nonnull} Tmp_1594 != 0;
    assume Tmp_1594 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    havoc Tmp_1615;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1600;
    call {:si_unique_call 919} WPP_SF_q(Tmp_1600, 15, Tmp_1615, pdoExtension_12);
    goto L103;

  anon166_Then:
    goto L103;

  anon216_Then:
    goto L103;

  anon215_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon194_Then:
    goto L195;

  L195:
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1616;
    assume {:nonnull} Tmp_1616 != 0;
    assume Tmp_1616 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    havoc Tmp_1609;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1595;
    call {:si_unique_call 920} WPP_SF_q(Tmp_1595, 12, Tmp_1609, pdoExtension_12);
    goto L196;

  L196:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1592;
    assume {:nonnull} Tmp_1592 != 0;
    assume Tmp_1592 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    havoc Tmp_1620;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1599;
    call {:si_unique_call 921} WPP_SF_q(Tmp_1599, 13, Tmp_1620, pdoExtension_12);
    goto L214;

  L214:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_43 := 0;
    goto L103;

  anon174_Then:
    goto L214;

  anon212_Then:
    goto L214;

  anon173_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L214;

  anon171_Then:
    call {:si_unique_call 922} CleanupOrbList#1(pdoExtension_12, -1073741248);
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_43 := 0;
    goto L103;

  anon211_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon172_Then:
    goto L196;

  anon210_Then:
    goto L196;

  anon170_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon195_Then:
    call {:si_unique_call 923} status_43 := Sbp2Issue1394BusReset#1(pdoExtension_12);
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} yogi_error != 1;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1611;
    assume {:nonnull} Tmp_1611 != 0;
    assume Tmp_1611 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    havoc Tmp_1598;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1613;
    call {:si_unique_call 924} WPP_SF_q(Tmp_1613, 14, Tmp_1598, pdoExtension_12);
    goto L183;

  L183:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} status_43 >= 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon168_Then:
    assume {:partition} 0 > status_43;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L103;

  anon169_Then:
    goto L183;

  anon214_Then:
    goto L183;

  anon167_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L183;

  anon213_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon196_Then:
    goto L195;

  anon197_Then:
    call {:si_unique_call 925} Tmp_1601 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    call {:si_unique_call 926} sdv_KeAcquireSpinLock(0, Tmp_1601);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 927} sdv_KeReleaseSpinLock(0, cIrql_7);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_43 := 0;
    goto L103;

  anon198_Then:
    call {:si_unique_call 928} Tmp_1601 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    call {:si_unique_call 929} sdv_KeAcquireSpinLock(0, Tmp_1601);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    status_43 := 17;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L235;

  L235:
    call {:si_unique_call 930} sdv_KeReleaseSpinLock(0, cIrql_7);
    goto L103;

  anon175_Then:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    status_43 := 0;
    goto L235;

  anon153_Then:
    call {:si_unique_call 931} Tmp_1601 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    call {:si_unique_call 932} sdv_KeAcquireSpinLock(0, Tmp_1601);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    havoc cIrql_7;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 933} sdv_KeReleaseSpinLock(0, cIrql_7);
    status_43 := -1073741632;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1593;
    assume {:nonnull} Tmp_1593 != 0;
    assume Tmp_1593 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    havoc Tmp_1614;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1621;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    havoc vslice_dummy_var_1045;
    call {:si_unique_call 934} WPP_SF_qDD(Tmp_1621, 10, Tmp_1614, pdoExtension_12, vslice_dummy_var_1045, status_43);
    goto L254;

  L254:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 935} vslice_dummy_var_137 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_12), Irp_17);
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume Irp_17 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 936} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} yogi_error != 1;
    goto L434;

  L434:
    call {:si_unique_call 937} sdv_IoCompleteRequest(0, 0);
    Tmp_1590 := status_43;
    goto L1;

  anon202_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon178_Then:
    assume !(Irp_17 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L434;

  anon177_Then:
    goto L254;

  anon201_Then:
    goto L254;

  anon200_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L254;

  anon176_Then:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    havoc Tmp_1617;
    assume {:nonnull} Tmp_1617 != 0;
    assume Tmp_1617 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    havoc Tmp_1591;
    assume {:nonnull} Tmp_1591 != 0;
    assume Tmp_1591 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    goto L273;

  L273:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto L269;

  L269:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    call {:si_unique_call 938} sdv_KeReleaseSpinLock(0, cIrql_7);
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1605;
    assume {:nonnull} Tmp_1605 != 0;
    assume Tmp_1605 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    havoc Tmp_1597;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1603;
    call {:si_unique_call 939} WPP_SF_qq(Tmp_1603, 11, Tmp_1597, pdoExtension_12, Irp_17);
    goto L285;

  L285:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    call {:si_unique_call 940} vslice_dummy_var_138 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_12), Irp_17);
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume Irp_17 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 941} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} yogi_error != 1;
    goto L437;

  L437:
    call {:si_unique_call 942} sdv_IoCompleteRequest(0, 0);
    Tmp_1590 := -1073741823;
    goto L1;

  anon206_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon185_Then:
    assume !(Irp_17 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L437;

  anon184_Then:
    goto L285;

  anon205_Then:
    goto L285;

  anon183_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L285;

  anon182_Then:
    goto L274;

  L274:
    call {:si_unique_call 943} sdv_IoMarkIrpPending(0);
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    goto L308;

  L308:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    call {:si_unique_call 944} sdv_KeReleaseSpinLock(0, cIrql_7);
    call {:si_unique_call 945} Tmp_1601 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    call {:si_unique_call 946} sdv_KeRaiseIrql(2, Tmp_1601);
    assume {:nonnull} Tmp_1601 != 0;
    assume Tmp_1601 > 0;
    havoc cIrql_7;
    call {:si_unique_call 947} Sbp2StartIo#1(DeviceObject_25, Irp_17);
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 948} sdv_KeLowerIrql(cIrql_7);
    goto L324;

  L324:
    Tmp_1590 := 259;
    goto L1;

  anon207_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon190_Then:
    call {:si_unique_call 949} sdv_KeReleaseSpinLock(0, cIrql_7);
    call {:si_unique_call 950} Sbp2DeferPendingRequest(pdoExtension_12, Irp_17);
    call {:si_unique_call 951} Sbp2SetDeferLoginTimer(pdoExtension_12);
    goto L324;

  anon188_Then:
    assume {:nonnull} pdoExtension_12 != 0;
    assume pdoExtension_12 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    call {:si_unique_call 952} sdv_KeReleaseSpinLock(0, cIrql_7);
    call {:si_unique_call 953} Sbp2DeferPendingRequest(pdoExtension_12, Irp_17);
    goto L324;

  anon189_Then:
    goto L308;

  anon187_Then:
    goto L302;

  L302:
    call {:si_unique_call 954} sdv_KeReleaseSpinLock(0, cIrql_7);
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    call {:si_unique_call 955} Sbp2StartPacket#1(DeviceObject_25, Irp_17, QueueSortKey__SCSI_REQUEST_BLOCK(srb_5));
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} yogi_error != 1;
    goto L324;

  anon208_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon186_Then:
    goto L302;

  anon179_Then:
    goto L274;

  anon180_Then:
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    goto L273;

  anon181_Then:
    goto L269;

  anon204_Then:
    goto L269;

  anon203_Then:
    goto L269;

  anon199_Then:
    assume {:partition} 0 > status_43;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} srb_5 != 0;
    assume srb_5 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume Irp_17 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 956} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} yogi_error != 1;
    goto L446;

  L446:
    call {:si_unique_call 957} sdv_IoCompleteRequest(0, 0);
    Tmp_1590 := status_43;
    goto L1;

  anon228_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon227_Then:
    assume !(Irp_17 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L446;
}



procedure {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_9: int, actual_CallbackContext_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2InitializeOrb"} Sbp2InitializeOrb(actual_DeviceExtension_9: int, actual_CallbackContext_1: int)
{
  var {:scalar} i_3: int;
  var {:pointer} Tmp_1623: int;
  var {:scalar} size: int;
  var {:pointer} Tmp_1627: int;
  var {:pointer} Tmp_1628: int;
  var {:pointer} Tmp_1629: int;
  var {:pointer} Tmp_1630: int;
  var {:pointer} Tmp_1631: int;
  var {:pointer} Tmp_1632: int;
  var {:pointer} Tmp_1633: int;
  var {:pointer} Tmp_1634: int;
  var {:pointer} Tmp_1635: int;
  var {:pointer} Tmp_1636: int;
  var {:scalar} sdv_519: int;
  var {:scalar} Tmp_1637: int;
  var {:pointer} Tmp_1638: int;
  var {:pointer} Tmp_1639: int;
  var {:pointer} Tmp_1640: int;
  var {:pointer} Tmp_1641: int;
  var {:pointer} Tmp_1642: int;
  var {:scalar} sdv_520: int;
  var {:pointer} Tmp_1644: int;
  var {:pointer} Tmp_1646: int;
  var {:scalar} sdv_521: int;
  var {:scalar} Tmp_1648: int;
  var {:pointer} Tmp_1649: int;
  var {:pointer} Tmp_1650: int;
  var {:pointer} Tmp_1651: int;
  var {:scalar} sdv_522: int;
  var {:scalar} sdv_523: int;
  var {:scalar} sdv_524: int;
  var {:pointer} Tmp_1654: int;
  var {:pointer} Tmp_1655: int;
  var {:pointer} Tmp_1656: int;
  var {:pointer} Tmp_1657: int;
  var {:pointer} Tmp_1658: int;
  var {:scalar} Tmp_1660: int;
  var {:pointer} Tmp_1661: int;
  var {:pointer} Tmp_1663: int;
  var {:scalar} sdv_525: int;
  var {:pointer} Tmp_1664: int;
  var {:pointer} Tmp_1665: int;
  var {:pointer} Tmp_1666: int;
  var {:pointer} Tmp_1667: int;
  var {:pointer} Tmp_1668: int;
  var {:pointer} Tmp_1669: int;
  var {:pointer} Tmp_1670: int;
  var {:pointer} Tmp_1671: int;
  var {:pointer} Tmp_1672: int;
  var {:pointer} DeviceExtension_9: int;
  var {:pointer} CallbackContext_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_140: int;

  anon0:
    call {:si_unique_call 958} vslice_dummy_var_140 := __HAVOC_malloc(4);
    DeviceExtension_9 := actual_DeviceExtension_9;
    CallbackContext_1 := actual_CallbackContext_1;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1623;
    assume {:nonnull} Tmp_1623 != 0;
    assume Tmp_1623 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1657;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1657 != 0;
    assume Tmp_1657 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1657 != 0;
    assume Tmp_1657 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1657 != 0;
    assume Tmp_1657 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1657 != 0;
    assume Tmp_1657 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1664;
    assume {:nonnull} Tmp_1664 != 0;
    assume Tmp_1664 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1632;
    assume {:nonnull} Tmp_1632 != 0;
    assume Tmp_1632 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L22;

  L22:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1654;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1638;
    assume {:nonnull} Tmp_1638 != 0;
    assume Tmp_1638 > 0;
    assume {:nonnull} Tmp_1654 != 0;
    assume Tmp_1654 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1670;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1670 != 0;
    assume Tmp_1670 > 0;
    goto L24;

  L24:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1642;
    assume {:nonnull} Tmp_1642 != 0;
    assume Tmp_1642 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1666;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} Tmp_1666 != 0;
    assume Tmp_1666 > 0;
    call {:si_unique_call 959} boogieTmp := corral_nondet();
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1646;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1672;
    assume {:nonnull} Tmp_1646 != 0;
    assume Tmp_1646 > 0;
    assume {:nonnull} Tmp_1672 != 0;
    assume Tmp_1672 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1671;
    assume {:nonnull} Tmp_1671 != 0;
    assume Tmp_1671 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1663;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1627;
    assume {:nonnull} Tmp_1627 != 0;
    assume Tmp_1627 > 0;
    assume {:nonnull} Tmp_1663 != 0;
    assume Tmp_1663 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1636;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1644;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1636 != 0;
    assume Tmp_1636 > 0;
    assume {:nonnull} Tmp_1644 != 0;
    assume Tmp_1644 > 0;
    goto L31;

  L31:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1639;
    assume {:nonnull} Tmp_1639 != 0;
    assume Tmp_1639 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_1660 := 16;
    goto L34;

  L34:
    size := Tmp_1660;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 960} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    call {:si_unique_call 961} sdv_RtlCopyMemory(0, 0, size);
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1634;
    assume {:nonnull} Tmp_1634 != 0;
    assume Tmp_1634 > 0;
    return;

  anon26_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1635;
    assume {:nonnull} Tmp_1635 != 0;
    assume Tmp_1635 > 0;
    havoc Tmp_1660;
    goto L34;

  anon25_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1661;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1633;
    assume {:nonnull} Tmp_1633 != 0;
    assume Tmp_1633 > 0;
    assume {:nonnull} Tmp_1661 != 0;
    assume Tmp_1661 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1649;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1651;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1649 != 0;
    assume Tmp_1649 > 0;
    assume {:nonnull} Tmp_1651 != 0;
    assume Tmp_1651 > 0;
    goto L31;

  anon20_Then:
    goto L20;

  L20:
    i_3 := 0;
    goto L46;

  L46:
    call {:si_unique_call 962} i_3, Tmp_1637, Tmp_1648, Tmp_1650, Tmp_1669 := Sbp2InitializeOrb_loop_L46(i_3, Tmp_1637, Tmp_1648, Tmp_1650, sdv_523, sdv_524, Tmp_1669, CallbackContext_1);
    goto L46_last;

  L46_last:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_1637 := i_3;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1669;
    assume {:nonnull} Tmp_1669 != 0;
    assume Tmp_1669 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    Tmp_1648 := i_3;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1650;
    assume {:nonnull} Tmp_1650 != 0;
    assume Tmp_1650 > 0;
    i_3 := i_3 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    assume false;
    return;

  anon21_Then:
    goto L22;

  anon24_Then:
    goto L20;

  anon19_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1658;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1630;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} Tmp_1630 != 0;
    assume Tmp_1630 > 0;
    assume {:nonnull} Tmp_1658 != 0;
    assume Tmp_1658 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1629;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    Tmp_1655 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_9);
    assume {:nonnull} Tmp_1629 != 0;
    assume Tmp_1629 > 0;
    assume {:nonnull} Tmp_1655 != 0;
    assume Tmp_1655 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1631;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    Tmp_1640 := InitiatorAddressId__DEVICE_EXTENSION(DeviceExtension_9);
    assume {:nonnull} Tmp_1631 != 0;
    assume Tmp_1631 > 0;
    assume {:nonnull} Tmp_1640 != 0;
    assume Tmp_1640 > 0;
    goto L63;

  L63:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1665;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1668;
    assume {:nonnull} Tmp_1665 != 0;
    assume Tmp_1665 > 0;
    assume {:nonnull} Tmp_1668 != 0;
    assume Tmp_1668 > 0;
    goto L24;

  anon22_Then:
    goto L59;

  L59:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1656;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1656 != 0;
    assume Tmp_1656 > 0;
    assume {:nonnull} DeviceExtension_9 != 0;
    assume DeviceExtension_9 > 0;
    assume {:nonnull} Tmp_1656 != 0;
    assume Tmp_1656 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1667;
    assume {:nonnull} Tmp_1667 != 0;
    assume Tmp_1667 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1628;
    assume {:nonnull} Tmp_1628 != 0;
    assume Tmp_1628 > 0;
    goto L63;

  anon27_Then:
    goto L59;

  anon23_Then:
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    assume {:nonnull} CallbackContext_1 != 0;
    assume CallbackContext_1 > 0;
    havoc Tmp_1641;
    assume {:nonnull} Tmp_1641 != 0;
    assume Tmp_1641 > 0;
    goto L24;
}



procedure {:origName "Sbp2ScsiGetCapabilities"} Sbp2ScsiGetCapabilities(actual_DeviceObject_26: int, actual_Irp_18: int) returns (Tmp_1673: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ScsiGetCapabilities"} Sbp2ScsiGetCapabilities(actual_DeviceObject_26: int, actual_Irp_18: int) returns (Tmp_1673: int)
{
  var {:pointer} irpStack_12: int;
  var {:pointer} pdoExtension_13: int;
  var {:pointer} Tmp_1674: int;
  var {:pointer} ioCapabilities: int;
  var {:scalar} status_44: int;
  var {:pointer} DeviceObject_26: int;
  var {:pointer} Irp_18: int;

  anon0:
    DeviceObject_26 := actual_DeviceObject_26;
    Irp_18 := actual_Irp_18;
    call {:si_unique_call 963} irpStack_12 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    havoc ioCapabilities;
    assume {:nonnull} DeviceObject_26 != 0;
    assume DeviceObject_26 > 0;
    pdoExtension_13 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_26)];
    call {:si_unique_call 964} sdv_do_paged_code_check();
    assume {:nonnull} irpStack_12 != 0;
    assume irpStack_12 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    status_44 := -1073741789;
    goto L21;

  L21:
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume Irp_18 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 965} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    goto L40;

  L40:
    call {:si_unique_call 966} sdv_IoCompleteRequest(0, 0);
    Tmp_1673 := status_44;
    goto LM2;

  LM2:
    return;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume !(Irp_18 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L40;

  anon9_Then:
    call {:si_unique_call 967} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} pdoExtension_13 != 0;
    assume pdoExtension_13 > 0;
    havoc Tmp_1674;
    assume {:nonnull} Tmp_1674 != 0;
    assume Tmp_1674 > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    goto L30;

  L30:
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} DeviceObject_26 != 0;
    assume DeviceObject_26 > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    assume {:nonnull} ioCapabilities != 0;
    assume ioCapabilities > 0;
    status_44 := 0;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    goto L21;

  anon12_Then:
    goto L30;
}



procedure {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_10: int, actual_Scsiop: int) returns (Tmp_1676: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2IssueInternalCommand"} Sbp2IssueInternalCommand(actual_DeviceExtension_10: int, actual_Scsiop: int) returns (Tmp_1676: int)
{
  var {:scalar} Tmp_1677: int;
  var {:scalar} waitValue_3: int;
  var {:pointer} cdb_2: int;
  var {:pointer} Tmp_1678: int;
  var {:pointer} modeMdl: int;
  var {:pointer} Tmp_1679: int;
  var {:pointer} Tmp_1680: int;
  var {:pointer} Tmp_1681: int;
  var {:pointer} Tmp_1682: int;
  var {:scalar} Tmp_1683: int;
  var {:pointer} Tmp_1684: int;
  var {:pointer} Tmp_1685: int;
  var {:scalar} Tmp_1686: int;
  var {:scalar} Tmp_1687: int;
  var {:scalar} Tmp_1688: int;
  var {:pointer} Tmp_1689: int;
  var {:pointer} Tmp_1690: int;
  var {:pointer} Tmp_1691: int;
  var {:pointer} sdv_530: int;
  var {:scalar} Tmp_1692: int;
  var {:pointer} irp_4: int;
  var {:pointer} senseInfoBuffer: int;
  var {:pointer} Tmp_1693: int;
  var {:pointer} Tmp_1694: int;
  var {:pointer} Tmp_1695: int;
  var {:pointer} Tmp_1696: int;
  var {:pointer} srb_6: int;
  var {:scalar} Tmp_1697: int;
  var {:pointer} Tmp_1698: int;
  var {:pointer} Tmp_1699: int;
  var {:scalar} event_1: int;
  var {:scalar} Tmp_1700: int;
  var {:scalar} Tmp_1701: int;
  var {:scalar} Tmp_1702: int;
  var {:scalar} Tmp_1703: int;
  var {:scalar} i_4: int;
  var {:pointer} Tmp_1704: int;
  var {:pointer} Tmp_1705: int;
  var {:pointer} irpStack_13: int;
  var {:pointer} Tmp_1706: int;
  var {:pointer} Tmp_1707: int;
  var {:pointer} inquiryMdl: int;
  var {:pointer} sdv_533: int;
  var {:pointer} context_1: int;
  var {:scalar} Tmp_1708: int;
  var {:pointer} sdv_534: int;
  var {:pointer} Tmp_1709: int;
  var {:scalar} Tmp_1710: int;
  var {:scalar} Tmp_1711: int;
  var {:scalar} Tmp_1712: int;
  var {:scalar} cIrql_8: int;
  var {:pointer} Tmp_1713: int;
  var {:scalar} Tmp_1714: int;
  var {:scalar} status_45: int;
  var {:scalar} Tmp_1715: int;
  var {:scalar} retryCount: int;
  var {:scalar} Tmp_1716: int;
  var {:pointer} Tmp_1717: int;
  var {:pointer} DeviceExtension_10: int;
  var {:scalar} Scsiop: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_1046: int;
  var vslice_dummy_var_1047: int;

  anon0:
    call {:si_unique_call 968} waitValue_3 := __HAVOC_malloc(20);
    call {:si_unique_call 969} event_1 := __HAVOC_malloc(156);
    DeviceExtension_10 := actual_DeviceExtension_10;
    Scsiop := actual_Scsiop;
    call {:si_unique_call 970} Tmp_1679 := __HAVOC_malloc(4);
    call {:si_unique_call 971} Tmp_1685 := __HAVOC_malloc(4);
    call {:si_unique_call 972} Tmp_1689 := __HAVOC_malloc(4);
    call {:si_unique_call 973} Tmp_1693 := __HAVOC_malloc(4);
    call {:si_unique_call 974} Tmp_1695 := __HAVOC_malloc(4);
    call {:si_unique_call 975} Tmp_1696 := __HAVOC_malloc(4);
    call {:si_unique_call 976} Tmp_1698 := __HAVOC_malloc(4);
    call {:si_unique_call 977} Tmp_1707 := __HAVOC_malloc(4);
    call {:si_unique_call 978} Tmp_1709 := __HAVOC_malloc(4);
    call {:si_unique_call 979} Tmp_1717 := __HAVOC_malloc(4);
    status_45 := -1073741670;
    retryCount := 0;
    context_1 := 0;
    inquiryMdl := 0;
    modeMdl := 0;
    call {:si_unique_call 980} Tmp_1713 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    call {:si_unique_call 981} sdv_KeAcquireSpinLock(0, Tmp_1713);
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    havoc cIrql_8;
    call {:si_unique_call 982} sdv_533 := sdv_ExAllocateFromNPagedLookasideList(0);
    context_1 := sdv_533;
    call {:si_unique_call 983} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} context_1 == 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1679;
    assume {:nonnull} Tmp_1679 != 0;
    assume Tmp_1679 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    havoc Tmp_1684;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1683;
    call {:si_unique_call 984} WPP_SF_q(Tmp_1683, 51, Tmp_1684, DeviceExtension_10);
    goto L320;

  L320:
    Tmp_1676 := status_45;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon148_Then:
    goto L320;

  anon171_Then:
    goto L320;

  anon147_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L320;

  anon115_Then:
    assume {:partition} context_1 != 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    call {:si_unique_call 985} sdv_534 := ExAllocatePoolWithTag(516, 18, 846226035);
    senseInfoBuffer := sdv_534;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} senseInfoBuffer == 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1689;
    assume {:nonnull} Tmp_1689 != 0;
    assume Tmp_1689 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    havoc Tmp_1694;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1714;
    call {:si_unique_call 986} WPP_SF_q(Tmp_1714, 52, Tmp_1694, DeviceExtension_10);
    goto L311;

  L311:
    Tmp_1676 := status_45;
    goto L1;

  anon146_Then:
    goto L311;

  anon170_Then:
    goto L311;

  anon145_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L311;

  anon150_Then:
    assume {:partition} senseInfoBuffer != 0;
    call {:si_unique_call 987} sdv_530 := ExAllocatePoolWithTag(516, 64, 846226035);
    srb_6 := sdv_530;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} srb_6 != 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc Tmp_1681;
    assume {:nonnull} Tmp_1681 != 0;
    assume Tmp_1681 > 0;
    havoc vslice_dummy_var_1046;
    call {:si_unique_call 988} irp_4 := IoAllocateIrp(vslice_dummy_var_1046, 0);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} irp_4 != 0;
    goto L63;

  L63:
    call {:si_unique_call 989} Tmp_1677, cdb_2, modeMdl, Tmp_1680, Tmp_1682, Tmp_1685, Tmp_1686, Tmp_1687, Tmp_1688, Tmp_1690, Tmp_1691, Tmp_1692, Tmp_1693, Tmp_1695, Tmp_1697, Tmp_1700, Tmp_1701, i_4, Tmp_1704, Tmp_1705, irpStack_13, Tmp_1707, inquiryMdl, Tmp_1709, Tmp_1711, status_45, Tmp_1715, retryCount, Tmp_1716, vslice_dummy_var_141, vslice_dummy_var_142 := Sbp2IssueInternalCommand_loop_L63(Tmp_1677, waitValue_3, cdb_2, modeMdl, Tmp_1680, Tmp_1682, Tmp_1685, Tmp_1686, Tmp_1687, Tmp_1688, Tmp_1690, Tmp_1691, Tmp_1692, irp_4, senseInfoBuffer, Tmp_1693, Tmp_1695, srb_6, Tmp_1697, event_1, Tmp_1700, Tmp_1701, i_4, Tmp_1704, Tmp_1705, irpStack_13, Tmp_1707, inquiryMdl, context_1, Tmp_1709, Tmp_1711, status_45, Tmp_1715, retryCount, Tmp_1716, DeviceExtension_10, Scsiop, vslice_dummy_var_141, vslice_dummy_var_142);
    goto L63_last;

  L63_last:
    call {:si_unique_call 1026} irpStack_13 := sdv_IoGetNextIrpStackLocation(irp_4);
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    assume {:nonnull} irpStack_13 != 0;
    assume irpStack_13 > 0;
    call {:si_unique_call 1027} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    cdb_2 := Cdb__SCSI_REQUEST_BLOCK(srb_6);
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} Scsiop != 18;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} Scsiop == 26;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} retryCount != 0;
    goto L96;

  L96:
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto L84;

  L84:
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} context_1 != 0;
    assume context_1 > 0;
    call {:si_unique_call 990} KeInitializeEvent(Event__REQUEST_CONTEXT(context_1), 0, 0);
    call {:si_unique_call 991} sdv_IoSetCompletionRoutine(irp_4, li2bplFunctionConstant523, context_1, 1, 1, 1);
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1685;
    assume {:nonnull} Tmp_1685 != 0;
    assume Tmp_1685 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    Tmp_1716 := Scsiop;
    havoc Tmp_1704;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1677;
    call {:si_unique_call 992} WPP_SF_qDq(Tmp_1677, 55, Tmp_1704, DeviceExtension_10, Tmp_1716, irp_4);
    goto L157;

  L157:
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc vslice_dummy_var_1047;
    call {:si_unique_call 993} status_45 := sdv_IoCallDriver(vslice_dummy_var_1047, irp_4);
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    goto L171;

  L171:
    call {:si_unique_call 994} vslice_dummy_var_141 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1715;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} Tmp_1715 != 1;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1707;
    assume {:nonnull} Tmp_1707 != 0;
    assume Tmp_1707 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1687;
    Tmp_1688 := Scsiop;
    havoc Tmp_1705;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1701;
    call {:si_unique_call 995} WPP_SF_qDD(Tmp_1701, 57, Tmp_1705, DeviceExtension_10, Tmp_1688, Tmp_1687);
    goto L181;

  L181:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1711;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} Tmp_1711 == 18;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1709;
    assume {:nonnull} Tmp_1709 != 0;
    assume Tmp_1709 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    havoc Tmp_1691;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1700;
    call {:si_unique_call 996} WPP_SF_q(Tmp_1700, 58, Tmp_1691, DeviceExtension_10);
    goto L197;

  L197:
    status_45 := 0;
    goto L205;

  L205:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} status_45 != 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} 5 > retryCount;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1695;
    assume {:nonnull} Tmp_1695 != 0;
    assume Tmp_1695 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    havoc Tmp_1680;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1697;
    call {:si_unique_call 997} WPP_SF_q(Tmp_1697, 60, Tmp_1680, DeviceExtension_10);
    goto L213;

  L213:
    i_4 := 0;
    goto L221;

  L221:
    call {:si_unique_call 998} i_4, vslice_dummy_var_142 := Sbp2IssueInternalCommand_loop_L221(waitValue_3, event_1, i_4, DeviceExtension_10, vslice_dummy_var_142);
    goto L221_last;

  L221_last:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} 6 > i_4;
    call {:si_unique_call 999} KeInitializeEvent(event_1, 0, 0);
    assume {:nonnull} waitValue_3 != 0;
    assume waitValue_3 > 0;
    call {:si_unique_call 1000} vslice_dummy_var_142 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_3);
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    i_4 := i_4 + 1;
    goto anon136_Else_dummy;

  anon136_Else_dummy:
    assume false;
    return;

  anon136_Then:
    goto L206;

  L206:
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} 3 > retryCount;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} status_45 == 0;
    goto L104;

  L104:
    call {:si_unique_call 1001} sdv_ExFreePool(0);
    call {:si_unique_call 1002} sdv_ExFreePool(0);
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    call {:si_unique_call 1003} IoFreeMdl(0);
    goto L111;

  L111:
    call {:si_unique_call 1004} IoFreeIrp(0);
    call {:si_unique_call 1005} Tmp_1713 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    call {:si_unique_call 1006} sdv_KeAcquireSpinLock(0, Tmp_1713);
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    havoc cIrql_8;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 1007} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1008} sdv_KeReleaseSpinLock(0, cIrql_8);
    Tmp_1676 := status_45;
    goto L1;

  anon160_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon118_Then:
    goto L111;

  anon137_Then:
    assume {:partition} status_45 != 0;
    goto anon137_Then_dummy;

  anon137_Then_dummy:
    assume false;
    return;

  anon130_Then:
    assume {:partition} retryCount >= 3;
    goto L104;

  anon135_Then:
    assume {:partition} i_4 >= 6;
    goto L206;

  anon134_Then:
    goto L213;

  anon159_Then:
    goto L213;

  anon133_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L213;

  anon132_Then:
    assume {:partition} retryCount >= 5;
    goto L206;

  anon131_Then:
    goto L206;

  anon129_Then:
    assume {:partition} status_45 == 0;
    goto L206;

  anon128_Then:
    goto L197;

  anon158_Then:
    goto L197;

  anon127_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L197;

  anon157_Then:
    assume {:partition} Tmp_1711 != 18;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} senseInfoBuffer != 0;
    assume senseInfoBuffer > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    status_45 := -1073741808;
    retryCount := retryCount + 1;
    goto L205;

  anon138_Then:
    goto L233;

  L233:
    retryCount := retryCount + 1;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1693;
    assume {:nonnull} Tmp_1693 != 0;
    assume Tmp_1693 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    Tmp_1692 := Scsiop;
    havoc Tmp_1690;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1686;
    call {:si_unique_call 1009} WPP_SF_qDd(Tmp_1686, 59, Tmp_1690, DeviceExtension_10, Tmp_1692, retryCount);
    goto L241;

  L241:
    status_45 := -1073741823;
    goto L205;

  anon139_Then:
    goto L241;

  anon162_Then:
    goto L241;

  anon161_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L241;

  anon126_Then:
    goto L233;

  anon125_Then:
    goto L181;

  anon156_Then:
    goto L181;

  anon124_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L181;

  anon155_Then:
    assume {:partition} Tmp_1715 == 1;
    status_45 := 0;
    goto L206;

  anon122_Then:
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} status_45 != 259;
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    havoc status_45;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1696;
    assume {:nonnull} Tmp_1696 != 0;
    assume Tmp_1696 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    havoc Tmp_1703;
    Tmp_1712 := Scsiop;
    havoc Tmp_1706;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1708;
    call {:si_unique_call 1010} WPP_SF_qDqDD(Tmp_1708, 56, Tmp_1706, DeviceExtension_10, Tmp_1712, irp_4, status_45, Tmp_1703);
    goto L104;

  anon140_Then:
    goto L104;

  anon164_Then:
    goto L104;

  anon163_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L104;

  anon123_Then:
    assume {:partition} status_45 == 259;
    goto L171;

  anon121_Then:
    goto L157;

  anon154_Then:
    goto L157;

  anon120_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L157;

  anon165_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 1011} modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} modeMdl == 0;
    goto L104;

  anon117_Then:
    assume {:partition} modeMdl != 0;
    goto L96;

  anon149_Then:
    assume {:partition} Scsiop != 26;
    goto L84;

  anon152_Then:
    assume {:partition} Scsiop == 18;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} srb_6 != 0;
    assume srb_6 > 0;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    havoc Tmp_1682;
    assume {:nonnull} Tmp_1682 != 0;
    assume Tmp_1682 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    assume {:nonnull} cdb_2 != 0;
    assume cdb_2 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} retryCount != 0;
    goto L138;

  L138:
    assume {:nonnull} irp_4 != 0;
    assume irp_4 > 0;
    goto L84;

  anon153_Then:
    assume {:partition} retryCount == 0;
    call {:si_unique_call 1012} inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} inquiryMdl != 0;
    goto L138;

  anon119_Then:
    assume {:partition} inquiryMdl == 0;
    goto L104;

  anon116_Then:
    assume {:partition} irp_4 == 0;
    call {:si_unique_call 1013} sdv_ExFreePool(0);
    call {:si_unique_call 1014} sdv_ExFreePool(0);
    call {:si_unique_call 1015} Tmp_1713 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    call {:si_unique_call 1016} sdv_KeAcquireSpinLock(0, Tmp_1713);
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    havoc cIrql_8;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 1017} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1018} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1698;
    assume {:nonnull} Tmp_1698 != 0;
    assume Tmp_1698 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    havoc Tmp_1678;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1710;
    call {:si_unique_call 1019} WPP_SF_q(Tmp_1710, 54, Tmp_1678, DeviceExtension_10);
    goto L281;

  L281:
    Tmp_1676 := status_45;
    goto L1;

  anon142_Then:
    goto L281;

  anon167_Then:
    goto L281;

  anon141_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L281;

  anon166_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon151_Then:
    assume {:partition} srb_6 == 0;
    call {:si_unique_call 1020} sdv_ExFreePool(0);
    call {:si_unique_call 1021} Tmp_1713 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    call {:si_unique_call 1022} sdv_KeAcquireSpinLock(0, Tmp_1713);
    assume {:nonnull} Tmp_1713 != 0;
    assume Tmp_1713 > 0;
    havoc cIrql_8;
    assume {:nonnull} DeviceExtension_10 != 0;
    assume DeviceExtension_10 > 0;
    call {:si_unique_call 1023} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_10), context_1);
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1024} sdv_KeReleaseSpinLock(0, cIrql_8);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1717;
    assume {:nonnull} Tmp_1717 != 0;
    assume Tmp_1717 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    havoc Tmp_1699;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1702;
    call {:si_unique_call 1025} WPP_SF_q(Tmp_1702, 53, Tmp_1699, DeviceExtension_10);
    goto L302;

  L302:
    Tmp_1676 := status_45;
    goto L1;

  anon144_Then:
    goto L302;

  anon169_Then:
    goto L302;

  anon143_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L302;

  anon168_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "ConvertSbp2SenseDataToScsi"} ConvertSbp2SenseDataToScsi(actual_StatusBlock_1: int, actual_SenseBuffer: int, actual_SenseBufferLength: int) returns (Tmp_1718: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1718 == 1 || Tmp_1718 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ConvertSbp2SenseDataToScsi"} ConvertSbp2SenseDataToScsi(actual_StatusBlock_1: int, actual_SenseBuffer: int, actual_SenseBufferLength: int) returns (Tmp_1718: int)
{
  var {:pointer} Tmp_1719: int;
  var {:pointer} Tmp_1720: int;
  var {:pointer} Tmp_1721: int;
  var {:pointer} Tmp_1722: int;
  var {:pointer} Tmp_1723: int;
  var {:pointer} Tmp_1726: int;
  var {:pointer} Tmp_1727: int;
  var {:pointer} Tmp_1728: int;
  var {:scalar} Tmp_1729: int;
  var {:pointer} Tmp_1730: int;
  var {:scalar} validSense: int;
  var {:pointer} Tmp_1731: int;
  var {:pointer} Tmp_1732: int;
  var {:pointer} Tmp_1733: int;
  var {:pointer} Tmp_1734: int;
  var {:pointer} Tmp_1735: int;
  var {:pointer} Tmp_1736: int;
  var {:pointer} Tmp_1737: int;
  var {:pointer} Tmp_1738: int;
  var {:pointer} Tmp_1739: int;
  var {:pointer} Tmp_1740: int;
  var {:pointer} StatusBlock_1: int;
  var {:pointer} SenseBuffer: int;
  var {:scalar} SenseBufferLength: int;
  var boogieTmp: int;

  anon0:
    StatusBlock_1 := actual_StatusBlock_1;
    SenseBuffer := actual_SenseBuffer;
    SenseBufferLength := actual_SenseBufferLength;
    call {:si_unique_call 1028} Tmp_1719 := __HAVOC_malloc(228);
    call {:si_unique_call 1029} Tmp_1720 := __HAVOC_malloc(228);
    call {:si_unique_call 1030} Tmp_1721 := __HAVOC_malloc(228);
    call {:si_unique_call 1031} Tmp_1722 := __HAVOC_malloc(228);
    call {:si_unique_call 1032} Tmp_1723 := __HAVOC_malloc(228);
    call {:si_unique_call 1033} Tmp_1726 := __HAVOC_malloc(228);
    call {:si_unique_call 1034} Tmp_1727 := __HAVOC_malloc(228);
    call {:si_unique_call 1035} Tmp_1728 := __HAVOC_malloc(228);
    call {:si_unique_call 1036} Tmp_1730 := __HAVOC_malloc(228);
    call {:si_unique_call 1037} Tmp_1731 := __HAVOC_malloc(228);
    call {:si_unique_call 1038} Tmp_1732 := __HAVOC_malloc(228);
    call {:si_unique_call 1039} Tmp_1733 := __HAVOC_malloc(228);
    call {:si_unique_call 1040} Tmp_1734 := __HAVOC_malloc(228);
    call {:si_unique_call 1041} Tmp_1735 := __HAVOC_malloc(228);
    call {:si_unique_call 1042} Tmp_1736 := __HAVOC_malloc(228);
    call {:si_unique_call 1043} Tmp_1737 := __HAVOC_malloc(228);
    call {:si_unique_call 1044} Tmp_1738 := __HAVOC_malloc(228);
    call {:si_unique_call 1045} Tmp_1739 := __HAVOC_malloc(228);
    call {:si_unique_call 1046} Tmp_1740 := __HAVOC_malloc(228);
    validSense := 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} SenseBuffer != 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} 14 <= SenseBufferLength;
    call {:si_unique_call 1047} sdv_RtlZeroMemory(0, SenseBufferLength);
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1727;
    assume {:nonnull} Tmp_1727 != 0;
    assume Tmp_1727 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1720;
    assume {:nonnull} Tmp_1720 != 0;
    assume Tmp_1720 > 0;
    havoc Tmp_1729;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Tmp_1729 == 1;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    validSense := 1;
    goto L15;

  L15:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} validSense != 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1726;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1726 != 0;
    assume Tmp_1726 > 0;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1735;
    assume {:nonnull} Tmp_1735 != 0;
    assume Tmp_1735 > 0;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    call {:si_unique_call 1048} boogieTmp := corral_nondet();
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1721;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1721 != 0;
    assume Tmp_1721 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1739;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1739 != 0;
    assume Tmp_1739 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1737;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1737 != 0;
    assume Tmp_1737 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1732;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1732 != 0;
    assume Tmp_1732 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1738;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1738 != 0;
    assume Tmp_1738 > 0;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1740;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1740 != 0;
    assume Tmp_1740 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1723;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1723 != 0;
    assume Tmp_1723 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1733;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1733 != 0;
    assume Tmp_1733 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1730;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1730 != 0;
    assume Tmp_1730 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1731;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1731 != 0;
    assume Tmp_1731 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1719;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1719 != 0;
    assume Tmp_1719 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} SenseBufferLength >= 18;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1722;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1722 != 0;
    assume Tmp_1722 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1734;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1734 != 0;
    assume Tmp_1734 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1736;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1736 != 0;
    assume Tmp_1736 > 0;
    assume {:nonnull} StatusBlock_1 != 0;
    assume StatusBlock_1 > 0;
    havoc Tmp_1728;
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    assume {:nonnull} Tmp_1728 != 0;
    assume Tmp_1728 > 0;
    goto L18;

  L18:
    Tmp_1718 := validSense;
    goto L1;

  L1:
    return;

  anon18_Then:
    assume {:partition} 18 > SenseBufferLength;
    goto L18;

  anon14_Then:
    assume {:partition} validSense == 0;
    goto L18;

  anon17_Then:
    assume {:partition} Tmp_1729 != 1;
    goto L15;

  anon16_Then:
    assume {:nonnull} SenseBuffer != 0;
    assume SenseBuffer > 0;
    validSense := 1;
    goto L15;

  anon13_Then:
    assume {:partition} SenseBufferLength < 14;
    goto L6;

  L6:
    Tmp_1718 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} SenseBuffer == 0;
    goto L6;
}



procedure {:origName "WPP_SF_qDq"} WPP_SF_qDq(actual_Logger_21: int, actual_id_21: int, actual_TraceGuid_21: int, actual_s_p_e_c_i_a_l_85: int, actual_s_p_e_c_i_a_l_86: int, actual_s_p_e_c_i_a_l_87: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qDq"} WPP_SF_qDq(actual_Logger_21: int, actual_id_21: int, actual_TraceGuid_21: int, actual_s_p_e_c_i_a_l_85: int, actual_s_p_e_c_i_a_l_86: int, actual_s_p_e_c_i_a_l_87: int)
{
  var {:pointer} TraceGuid_21: int;
  var vslice_dummy_var_143: int;

  anon0:
    call {:si_unique_call 1049} vslice_dummy_var_143 := __HAVOC_malloc(4);
    TraceGuid_21 := actual_TraceGuid_21;
    return;
}



procedure {:origName "Sbp2BuildMiniportDescriptor"} Sbp2BuildMiniportDescriptor(actual_DeviceObject_27: int, actual_Descriptor: int, actual_DescriptorLength: int) returns (Tmp_1780: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1780 == -1073741808 || Tmp_1780 == -1073741789 || Tmp_1780 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2BuildMiniportDescriptor"} Sbp2BuildMiniportDescriptor(actual_DeviceObject_27: int, actual_Descriptor: int, actual_DescriptorLength: int) returns (Tmp_1780: int)
{
  var {:pointer} Descriptor: int;
  var {:pointer} DescriptorLength: int;

  anon0:
    Descriptor := actual_Descriptor;
    DescriptorLength := actual_DescriptorLength;
    call {:si_unique_call 1050} sdv_do_paged_code_check();
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1780 := -1073741808;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1780 := -1073741789;
    goto L1;

  anon10_Then:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1780 := 0;
    goto L1;

  anon12_Then:
    goto L13;

  L13:
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} Descriptor != 0;
    assume Descriptor > 0;
    assume {:nonnull} DescriptorLength != 0;
    assume DescriptorLength > 0;
    Tmp_1780 := 0;
    goto L1;

  anon11_Then:
    goto L13;
}



procedure {:origName "Sbp2QueryProperty"} Sbp2QueryProperty(actual_DeviceObject_28: int, actual_QueryIrp: int) returns (Tmp_1782: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2QueryProperty"} Sbp2QueryProperty(actual_DeviceObject_28: int, actual_QueryIrp: int) returns (Tmp_1782: int)
{
  var {:pointer} irpStack_14: int;
  var {:pointer} Tmp_1783: int;
  var {:pointer} query: int;
  var {:pointer} Tmp_1784: int;
  var {:dopa} {:scalar} queryLength: int;
  var {:scalar} status_47: int;
  var {:pointer} Tmp_1785: int;
  var {:pointer} deviceExtension_5: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} QueryIrp: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_1048: int;
  var vslice_dummy_var_1049: int;
  var vslice_dummy_var_1050: int;

  anon0:
    call {:si_unique_call 1051} queryLength := __HAVOC_malloc(4);
    DeviceObject_28 := actual_DeviceObject_28;
    QueryIrp := actual_QueryIrp;
    call {:si_unique_call 1052} irpStack_14 := sdv_IoGetCurrentIrpStackLocation(QueryIrp);
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    deviceExtension_5 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_28)];
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    havoc query;
    assume {:nonnull} irpStack_14 != 0;
    assume irpStack_14 > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    call {:si_unique_call 1053} sdv_do_paged_code_check();
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    status_47 := -1073741585;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume QueryIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1054} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto L77;

  L77:
    call {:si_unique_call 1055} sdv_IoCompleteRequest(0, 0);
    Tmp_1782 := status_47;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon38_Then:
    assume !(QueryIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L77;

  anon29_Then:
    call {:si_unique_call 1056} status_47 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_47 >= 0;
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    status_47 := 0;
    goto L42;

  L42:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} deviceExtension_5 != 0;
    assume deviceExtension_5 > 0;
    call {:si_unique_call 1057} vslice_dummy_var_144 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_5), 0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume QueryIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1058} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} yogi_error != 1;
    goto L80;

  L80:
    call {:si_unique_call 1059} sdv_IoCompleteRequest(0, 1);
    Tmp_1782 := status_47;
    goto L1;

  anon40_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon35_Then:
    assume !(QueryIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L80;

  anon34_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1784 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1784 != 0;
    assume Tmp_1784 > 0;
    havoc vslice_dummy_var_1048;
    call {:si_unique_call 1060} status_47 := Sbp2BuildMiniportDescriptor(DeviceObject_28, vslice_dummy_var_1048, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon36_Then:
    status_47 := -1073741585;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    goto L42;

  anon37_Then:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    status_47 := 0;
    goto L42;

  anon33_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1785 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1785 != 0;
    assume Tmp_1785 > 0;
    havoc vslice_dummy_var_1049;
    call {:si_unique_call 1061} status_47 := Sbp2BuildAdapterDescriptor(DeviceObject_28, vslice_dummy_var_1049, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon31_Then:
    assume {:nonnull} query != 0;
    assume query > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    status_47 := 0;
    goto L42;

  anon32_Then:
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    Tmp_1783 := AssociatedIrp__IRP(QueryIrp);
    assume {:nonnull} Tmp_1783 != 0;
    assume Tmp_1783 > 0;
    havoc vslice_dummy_var_1050;
    call {:si_unique_call 1062} status_47 := Sbp2BuildDeviceDescriptor(DeviceObject_28, vslice_dummy_var_1050, queryLength);
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} queryLength != 0;
    assume queryLength > 0;
    goto L42;

  anon30_Then:
    assume {:partition} 0 > status_47;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    assume {:nonnull} QueryIrp != 0;
    assume QueryIrp > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume QueryIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1063} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto L83;

  L83:
    call {:si_unique_call 1064} sdv_IoCompleteRequest(0, 0);
    Tmp_1782 := status_47;
    goto L1;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    assume !(QueryIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L83;
}



procedure {:origName "Sbp2BuildAdapterDescriptor"} Sbp2BuildAdapterDescriptor(actual_DeviceObject_29: int, actual_Descriptor_1: int, actual_DescriptorLength_1: int) returns (Tmp_1787: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1787 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2BuildAdapterDescriptor"} Sbp2BuildAdapterDescriptor(actual_DeviceObject_29: int, actual_Descriptor_1: int, actual_DescriptorLength_1: int) returns (Tmp_1787: int)
{
  var {:scalar} realLength: int;
  var {:scalar} tmp_1: int;
  var {:pointer} Tmp_1789: int;
  var {:pointer} deviceExtension_6: int;
  var {:pointer} DeviceObject_29: int;
  var {:pointer} DescriptorLength_1: int;
  var vslice_dummy_var_1051: int;

  anon0:
    call {:si_unique_call 1065} tmp_1 := __HAVOC_malloc(56);
    DeviceObject_29 := actual_DeviceObject_29;
    DescriptorLength_1 := actual_DescriptorLength_1;
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    deviceExtension_6 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_29)];
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    call {:si_unique_call 1066} sdv_do_paged_code_check();
    realLength := 32;
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L30;

  L30:
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    havoc vslice_dummy_var_1051;
    call {:si_unique_call 1067} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_1051);
    Tmp_1787 := 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} deviceExtension_6 != 0;
    assume deviceExtension_6 > 0;
    havoc Tmp_1789;
    assume {:nonnull} Tmp_1789 != 0;
    assume Tmp_1789 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L38;

  L38:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1068} sdv_RtlCopyMemory(0, 0, 30);
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto L55;

  L55:
    Tmp_1787 := 0;
    goto L1;

  anon15_Then:
    call {:si_unique_call 1069} sdv_RtlCopyMemory(0, 0, 32);
    assume {:nonnull} DescriptorLength_1 != 0;
    assume DescriptorLength_1 > 0;
    goto L55;

  anon14_Then:
    goto L38;

  anon11_Then:
    goto L26;

  L26:
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    assume {:nonnull} tmp_1 != 0;
    assume tmp_1 > 0;
    goto L30;

  anon13_Then:
    goto L26;
}



procedure {:origName "Sbp2BuildDeviceDescriptor"} Sbp2BuildDeviceDescriptor(actual_DeviceObject_30: int, actual_Descriptor_2: int, actual_DescriptorLength_2: int) returns (Tmp_1790: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1790 == 0 || Tmp_1790 == 17;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2BuildDeviceDescriptor"} Sbp2BuildDeviceDescriptor(actual_DeviceObject_30: int, actual_Descriptor_2: int, actual_DescriptorLength_2: int) returns (Tmp_1790: int)
{
  var {:scalar} Tmp_1791: int;
  var {:scalar} bytesRemaining: int;
  var {:scalar} infoLength: int;
  var {:scalar} maxLength: int;
  var {:pointer} Tmp_1792: int;
  var {:pointer} Tmp_1793: int;
  var {:pointer} Tmp_1794: int;
  var {:pointer} Tmp_1795: int;
  var {:scalar} Tmp_1796: int;
  var {:pointer} inquiryData: int;
  var {:scalar} Tmp_1797: int;
  var {:pointer} Tmp_1798: int;
  var {:pointer} Tmp_1799: int;
  var {:pointer} Tmp_1800: int;
  var {:pointer} currentOffset: int;
  var {:pointer} Tmp_1802: int;
  var {:pointer} Tmp_1803: int;
  var {:pointer} Tmp_1804: int;
  var {:scalar} realLength_1: int;
  var {:scalar} tmp_2: int;
  var {:scalar} status_48: int;
  var {:pointer} deviceExtension_7: int;
  var {:pointer} Tmp_1805: int;
  var {:pointer} DeviceObject_30: int;
  var {:pointer} Descriptor_2: int;
  var {:pointer} DescriptorLength_2: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_1052: int;
  var vslice_dummy_var_1053: int;
  var vslice_dummy_var_1054: int;

  anon0:
    call {:si_unique_call 1070} tmp_2 := __HAVOC_malloc(52);
    DeviceObject_30 := actual_DeviceObject_30;
    Descriptor_2 := actual_Descriptor_2;
    DescriptorLength_2 := actual_DescriptorLength_2;
    call {:si_unique_call 1071} Tmp_1793 := __HAVOC_malloc(28);
    call {:si_unique_call 1072} Tmp_1794 := __HAVOC_malloc(8);
    call {:si_unique_call 1073} Tmp_1795 := __HAVOC_malloc(36);
    call {:si_unique_call 1074} Tmp_1798 := __HAVOC_malloc(8);
    call {:si_unique_call 1075} Tmp_1802 := __HAVOC_malloc(16);
    call {:si_unique_call 1076} Tmp_1803 := __HAVOC_malloc(20);
    call {:si_unique_call 1077} Tmp_1804 := __HAVOC_malloc(32);
    status_48 := 0;
    assume {:nonnull} DescriptorLength_2 != 0;
    assume DescriptorLength_2 > 0;
    havoc maxLength;
    bytesRemaining := maxLength;
    realLength_1 := 40;
    currentOffset := Descriptor_2;
    assume {:nonnull} DeviceObject_30 != 0;
    assume DeviceObject_30 > 0;
    deviceExtension_7 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_30)];
    call {:si_unique_call 1078} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    inquiryData := InquiryData__DEVICE_EXTENSION(deviceExtension_7);
    infoLength := 48;
    realLength_1 := realLength_1 + infoLength;
    call {:si_unique_call 1079} sdv_RtlZeroMemory(0, maxLength);
    call {:si_unique_call 1080} sdv_RtlZeroMemory(0, 40);
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L36;

  L36:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} DeviceObject_30 != 0;
    assume DeviceObject_30 > 0;
    goto L38;

  L38:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} bytesRemaining > 40;
    Tmp_1797 := 40;
    goto L43;

  L43:
    call {:si_unique_call 1081} sdv_RtlCopyMemory(0, 0, Tmp_1797);
    bytesRemaining := bytesRemaining - 40;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 0 >= bytesRemaining;
    Tmp_1790 := status_48;
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} bytesRemaining > 0;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_1804;
    assume {:nonnull} Tmp_1804 != 0;
    assume Tmp_1804 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L54;

  L54:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} 8 >= bytesRemaining;
    Tmp_1790 := 0;
    goto L1;

  anon22_Then:
    assume {:partition} bytesRemaining > 8;
    call {:si_unique_call 1082} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 9;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} 16 >= bytesRemaining;
    Tmp_1790 := status_48;
    goto L1;

  anon28_Then:
    assume {:partition} bytesRemaining > 16;
    call {:si_unique_call 1083} sdv_RtlCopyMemory(0, 0, 16);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 17;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} 4 >= bytesRemaining;
    Tmp_1790 := status_48;
    goto L1;

  anon29_Then:
    assume {:partition} bytesRemaining > 4;
    call {:si_unique_call 1084} sdv_RtlCopyMemory(0, 0, 4);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    bytesRemaining := bytesRemaining - 5;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} 16 >= bytesRemaining;
    Tmp_1790 := status_48;
    goto L1;

  anon30_Then:
    assume {:partition} bytesRemaining > 16;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_1805;
    assume {:nonnull} Tmp_1805 != 0;
    assume Tmp_1805 > 0;
    havoc Tmp_1792;
    assume {:nonnull} Tmp_1792 != 0;
    assume Tmp_1792 > 0;
    havoc Tmp_1794;
    assume {:nonnull} Tmp_1794 != 0;
    assume Tmp_1794 > 0;
    havoc Tmp_1796;
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    havoc Tmp_1799;
    assume {:nonnull} Tmp_1799 != 0;
    assume Tmp_1799 > 0;
    havoc Tmp_1800;
    assume {:nonnull} Tmp_1800 != 0;
    assume Tmp_1800 > 0;
    havoc Tmp_1798;
    assume {:nonnull} Tmp_1798 != 0;
    assume Tmp_1798 > 0;
    havoc Tmp_1791;
    Tmp_1795 := strConst__li2bpl29;
    call {:si_unique_call 1085} vslice_dummy_var_145 := RtlStringCbPrintfA(currentOffset, bytesRemaining, Tmp_1795);
    assume {:nonnull} Descriptor_2 != 0;
    assume Descriptor_2 > 0;
    assume {:nonnull} DescriptorLength_2 != 0;
    assume DescriptorLength_2 > 0;
    Tmp_1790 := status_48;
    goto L1;

  anon27_Then:
    Tmp_1793 := strConst__li2bpl26;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_1052;
    call {:si_unique_call 1086} vslice_dummy_var_146 := RtlStringCbPrintfA(vslice_dummy_var_1052, 8, Tmp_1793);
    Tmp_1803 := strConst__li2bpl27;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_1053;
    call {:si_unique_call 1087} vslice_dummy_var_147 := RtlStringCbPrintfA(vslice_dummy_var_1053, 16, Tmp_1803);
    Tmp_1802 := strConst__li2bpl28;
    assume {:nonnull} inquiryData != 0;
    assume inquiryData > 0;
    havoc vslice_dummy_var_1054;
    call {:si_unique_call 1088} vslice_dummy_var_148 := RtlStringCbPrintfA(vslice_dummy_var_1054, 4, Tmp_1802);
    assume {:nonnull} deviceExtension_7 != 0;
    assume deviceExtension_7 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    status_48 := 17;
    goto L54;

  anon23_Then:
    goto L54;

  anon25_Then:
    assume {:partition} 40 >= bytesRemaining;
    Tmp_1797 := bytesRemaining;
    goto L43;

  anon24_Then:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} tmp_2 != 0;
    assume tmp_2 > 0;
    goto L38;

  anon21_Then:
    goto L36;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_149: int;

  anon0:
    call {:si_unique_call 1089} vslice_dummy_var_149 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "WPP_SF_qS"} WPP_SF_qS(actual_Logger_22: int, actual_id_22: int, actual_TraceGuid_22: int, actual_s_p_e_c_i_a_l_88: int, actual_s_p_e_c_i_a_l_89: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qS"} WPP_SF_qS(actual_Logger_22: int, actual_id_22: int, actual_TraceGuid_22: int, actual_s_p_e_c_i_a_l_88: int, actual_s_p_e_c_i_a_l_89: int)
{
  var {:pointer} Tmp_1808: int;
  var {:scalar} sdv_558: int;
  var {:scalar} Tmp_1810: int;
  var {:pointer} TraceGuid_22: int;
  var {:pointer} s_p_e_c_i_a_l_89: int;
  var vslice_dummy_var_150: int;

  anon0:
    call {:si_unique_call 1090} vslice_dummy_var_150 := __HAVOC_malloc(4);
    TraceGuid_22 := actual_TraceGuid_22;
    s_p_e_c_i_a_l_89 := actual_s_p_e_c_i_a_l_89;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_89 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_89 != 0;
    assume s_p_e_c_i_a_l_89 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_1810 := (sdv_558 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_89 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_89 != 0;
    assume s_p_e_c_i_a_l_89 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1808 := s_p_e_c_i_a_l_89;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_1808 := strConst__li2bpl2;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_89 == 0;
    goto L18;

  anon10_Then:
    Tmp_1810 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_89 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qqq"} WPP_SF_qqq(actual_Logger_23: int, actual_id_23: int, actual_TraceGuid_23: int, actual_s_p_e_c_i_a_l_90: int, actual_s_p_e_c_i_a_l_91: int, actual_s_p_e_c_i_a_l_92: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qqq"} WPP_SF_qqq(actual_Logger_23: int, actual_id_23: int, actual_TraceGuid_23: int, actual_s_p_e_c_i_a_l_90: int, actual_s_p_e_c_i_a_l_91: int, actual_s_p_e_c_i_a_l_92: int)
{
  var {:pointer} TraceGuid_23: int;
  var vslice_dummy_var_151: int;

  anon0:
    call {:si_unique_call 1091} vslice_dummy_var_151 := __HAVOC_malloc(4);
    TraceGuid_23 := actual_TraceGuid_23;
    return;
}



procedure {:origName "IsRetryLogin"} IsRetryLogin(actual_PdoExtension_23: int, actual_NtStatus_2: int) returns (Tmp_1824: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1824 == 1 || Tmp_1824 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IsRetryLogin"} IsRetryLogin(actual_PdoExtension_23: int, actual_NtStatus_2: int) returns (Tmp_1824: int)
{
  var {:pointer} Tmp_1825: int;
  var {:scalar} sdv_563: int;
  var {:pointer} PdoExtension_23: int;
  var {:scalar} NtStatus_2: int;

  anon0:
    PdoExtension_23 := actual_PdoExtension_23;
    NtStatus_2 := actual_NtStatus_2;
    call {:si_unique_call 1092} Sbp2AddLog(PdoExtension_23, 1, -766742681, NtStatus_2, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} NtStatus_2 == -1072562032;
    Tmp_1824 := 1;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} NtStatus_2 != -1072562032;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} NtStatus_2 != -1073741810;
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1093} Tmp_1825 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    assume {:nonnull} Tmp_1825 != 0;
    assume Tmp_1825 > 0;
    call {:si_unique_call 1094} sdv_563 := sdv_InterlockedDecrement(Tmp_1825);
    assume {:nonnull} PdoExtension_23 != 0;
    assume PdoExtension_23 > 0;
    assume {:nonnull} Tmp_1825 != 0;
    assume Tmp_1825 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_563 > 0;
    Tmp_1824 := 1;
    goto L1;

  anon12_Then:
    assume {:partition} 0 >= sdv_563;
    goto L9;

  L9:
    Tmp_1824 := 0;
    goto L1;

  anon11_Then:
    goto L9;

  anon10_Then:
    assume {:partition} NtStatus_2 == -1073741810;
    goto L9;
}



procedure {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_1826: int);
  free ensures {:va_keep} Tmp_1826 == 0 || Tmp_1826 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlStringVPrintfWorkerW_sdv_static_function_1"} RtlStringVPrintfWorkerW_sdv_static_function_1(actual_pszDest: int, actual_cchDest: int, actual_pcchNewDestLength: int, actual_pszFormat: int, actual_argList: int) returns (Tmp_1826: int)
{
  var {:scalar} cchNewDestLength: int;
  var {:scalar} iRet: int;
  var {:scalar} cchMax: int;
  var {:scalar} status_49: int;
  var {:pointer} pszDest: int;
  var {:scalar} cchDest: int;
  var {:pointer} pcchNewDestLength: int;

  anon0:
    pszDest := actual_pszDest;
    cchDest := actual_cchDest;
    pcchNewDestLength := actual_pcchNewDestLength;
    status_49 := 0;
    cchNewDestLength := 0;
    cchMax := cchDest - 1;
    call {:si_unique_call 1095} iRet := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet;
    goto L16;

  L16:
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    cchNewDestLength := cchMax;
    status_49 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength != 0;
    assume {:nonnull} pcchNewDestLength != 0;
    assume pcchNewDestLength > 0;
    goto L21;

  L21:
    Tmp_1826 := status_49;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet <= cchMax;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet == cchMax;
    assume {:nonnull} pszDest != 0;
    assume pszDest > 0;
    cchNewDestLength := cchMax;
    goto L20;

  anon12_Then:
    assume {:partition} iRet != cchMax;
    cchNewDestLength := iRet;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax < iRet;
    goto L16;
}



procedure {:origName "WPP_SF_qDdd"} WPP_SF_qDdd(actual_Logger_24: int, actual_id_24: int, actual_TraceGuid_24: int, actual_s_p_e_c_i_a_l_93: int, actual_s_p_e_c_i_a_l_94: int, actual_s_p_e_c_i_a_l_95: int, actual_s_p_e_c_i_a_l_96: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qDdd"} WPP_SF_qDdd(actual_Logger_24: int, actual_id_24: int, actual_TraceGuid_24: int, actual_s_p_e_c_i_a_l_93: int, actual_s_p_e_c_i_a_l_94: int, actual_s_p_e_c_i_a_l_95: int, actual_s_p_e_c_i_a_l_96: int)
{
  var {:pointer} TraceGuid_24: int;
  var vslice_dummy_var_152: int;

  anon0:
    call {:si_unique_call 1096} vslice_dummy_var_152 := __HAVOC_malloc(4);
    TraceGuid_24 := actual_TraceGuid_24;
    return;
}



procedure {:origName "Sbp2ReInitializePdo"} Sbp2ReInitializePdo(actual_FdoExtension_4: int, actual_DeviceInfo_2: int, actual_InstanceNumber: int) returns (Tmp_1831: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ReInitializePdo"} Sbp2ReInitializePdo(actual_FdoExtension_4: int, actual_DeviceInfo_2: int, actual_InstanceNumber: int) returns (Tmp_1831: int)
{
  var {:pointer} Tmp_1832: int;
  var {:scalar} size_1: int;
  var {:pointer} Tmp_1833: int;
  var {:scalar} Tmp_1834: int;
  var {:pointer} symlinkBuffer: int;
  var {:pointer} pdoExtension_14: int;
  var {:scalar} uniDeviceName: int;
  var {:pointer} Tmp_1835: int;
  var {:pointer} Tmp_1836: int;
  var {:pointer} Tmp_1837: int;
  var {:pointer} Tmp_1838: int;
  var {:scalar} Tmp_1839: int;
  var {:pointer} Tmp_1840: int;
  var {:pointer} Tmp_1841: int;
  var {:pointer} Tmp_1842: int;
  var {:pointer} Tmp_1843: int;
  var {:pointer} Tmp_1845: int;
  var {:pointer} Tmp_1846: int;
  var {:scalar} Tmp_1847: int;
  var {:pointer} sdv_568: int;
  var {:pointer} Tmp_1848: int;
  var {:pointer} Tmp_1849: int;
  var {:pointer} Tmp_1850: int;
  var {:scalar} Tmp_1851: int;
  var {:scalar} sdv_569: int;
  var {:scalar} sdv_570: int;
  var {:scalar} prevRemoveLock: int;
  var {:pointer} Tmp_1853: int;
  var {:pointer} Tmp_1854: int;
  var {:scalar} status_50: int;
  var {:pointer} Tmp_1855: int;
  var {:scalar} prevDeviceFlags: int;
  var {:pointer} FdoExtension_4: int;
  var {:pointer} DeviceInfo_2: int;
  var {:scalar} InstanceNumber: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_1055: int;

  anon0:
    call {:si_unique_call 1097} uniDeviceName := __HAVOC_malloc(12);
    call {:si_unique_call 1098} prevRemoveLock := __HAVOC_malloc(168);
    FdoExtension_4 := actual_FdoExtension_4;
    DeviceInfo_2 := actual_DeviceInfo_2;
    InstanceNumber := actual_InstanceNumber;
    call {:si_unique_call 1099} Tmp_1832 := __HAVOC_malloc(4);
    call {:si_unique_call 1100} Tmp_1840 := __HAVOC_malloc(4);
    call {:si_unique_call 1101} Tmp_1843 := __HAVOC_malloc(180);
    call {:si_unique_call 1102} vslice_dummy_var_153 := __HAVOC_malloc(8);
    call {:si_unique_call 1103} Tmp_1849 := __HAVOC_malloc(4);
    call {:si_unique_call 1104} Tmp_1850 := __HAVOC_malloc(4);
    call {:si_unique_call 1105} vslice_dummy_var_154 := __HAVOC_malloc(8);
    call {:si_unique_call 1106} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1846;
    assume {:nonnull} Tmp_1846 != 0;
    assume Tmp_1846 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1841;
    assume {:nonnull} Tmp_1841 != 0;
    assume Tmp_1841 > 0;
    goto L15;

  L15:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1835;
    assume {:nonnull} Tmp_1835 != 0;
    assume Tmp_1835 > 0;
    pdoExtension_14 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1835)];
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc prevDeviceFlags;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    call {:si_unique_call 1107} sdv_RtlZeroMemory(0, 1160);
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} prevRemoveLock != 0;
    assume prevRemoveLock > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    havoc Tmp_1836;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} Tmp_1836 != 0;
    assume Tmp_1836 > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    call {:si_unique_call 1108} KeInitializeEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_14), 0, 0);
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    call {:si_unique_call 1109} KeInitializeEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_14), 0, 0);
    call {:si_unique_call 1110} Tmp_1854 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1854 != 0;
    assume Tmp_1854 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    call {:si_unique_call 1111} sdv_KeInitializeSpinLock(Tmp_1854);
    assume {:nonnull} Tmp_1854 != 0;
    assume Tmp_1854 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1840;
    assume {:nonnull} Tmp_1840 != 0;
    assume Tmp_1840 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    havoc Tmp_1855;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1834;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc vslice_dummy_var_1055;
    call {:si_unique_call 1112} WPP_SF_S(Tmp_1834, 109, Tmp_1855, vslice_dummy_var_1055);
    goto L42;

  L42:
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1838;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1845;
    assume {:nonnull} Tmp_1838 != 0;
    assume Tmp_1838 > 0;
    assume {:nonnull} Tmp_1845 != 0;
    assume Tmp_1845 > 0;
    call {:si_unique_call 1113} status_50 := Sbp2PreAllocateLists(pdoExtension_14);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_50 >= 0;
    size_1 := 1536;
    call {:si_unique_call 1114} sdv_568 := ExAllocatePoolWithTag(1, size_1, -330079661);
    symlinkBuffer := sdv_568;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} symlinkBuffer == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1850;
    assume {:nonnull} Tmp_1850 != 0;
    assume Tmp_1850 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    havoc Tmp_1837;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1839;
    call {:si_unique_call 1115} WPP_SF_(Tmp_1839, 112, Tmp_1837);
    goto L95;

  L95:
    status_50 := 0;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1848;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    havoc Tmp_1833;
    assume {:nonnull} Tmp_1833 != 0;
    assume Tmp_1833 > 0;
    assume {:nonnull} Tmp_1848 != 0;
    assume Tmp_1848 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto L105;

  L105:
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    call {:si_unique_call 1116} InitializeListHead(BusResetEntry__DEVICE_EXTENSION(pdoExtension_14));
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    Tmp_1831 := status_50;
    goto LM2;

  LM2:
    return;

  anon44_Then:
    goto L95;

  anon51_Then:
    goto L95;

  anon43_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon48_Then:
    assume {:partition} symlinkBuffer != 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    assume {:nonnull} FdoExtension_4 != 0;
    assume FdoExtension_4 > 0;
    Tmp_1843 := strConst__li2bpl30;
    call {:si_unique_call 1117} vslice_dummy_var_155 := RtlStringCbPrintfW(symlinkBuffer, size_1, Tmp_1843);
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    call {:si_unique_call 1118} RtlInitUnicodeString(UniSymLinkName__DEVICE_EXTENSION(pdoExtension_14), symlinkBuffer);
    call {:si_unique_call 1119} RtlInitUnicodeString(uniDeviceName, symlinkBuffer);
    call {:si_unique_call 1120} status_50 := IoCreateUnprotectedSymbolicLink(0, 0);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_50 < 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1832;
    assume {:nonnull} Tmp_1832 != 0;
    assume Tmp_1832 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    havoc Tmp_1853;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1847;
    call {:si_unique_call 1121} WPP_SF_D(Tmp_1847, 111, Tmp_1853, status_50);
    goto L95;

  anon42_Then:
    goto L95;

  anon50_Then:
    goto L95;

  anon41_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon38_Then:
    assume {:partition} 0 <= status_50;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1849;
    assume {:nonnull} Tmp_1849 != 0;
    assume Tmp_1849 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    havoc Tmp_1842;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1851;
    call {:si_unique_call 1122} WPP_SF_S(Tmp_1851, 110, Tmp_1842, symlinkBuffer);
    goto L95;

  anon40_Then:
    goto L95;

  anon49_Then:
    goto L95;

  anon39_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon37_Then:
    assume {:partition} 0 > status_50;
    assume {:nonnull} DeviceInfo_2 != 0;
    assume DeviceInfo_2 > 0;
    assume {:nonnull} pdoExtension_14 != 0;
    assume pdoExtension_14 > 0;
    goto L105;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    goto L42;

  anon46_Then:
    goto L42;

  anon35_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L42;

  anon45_Then:
    goto L15;
}



procedure {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_1856: int);
  free ensures {:va_keep} Tmp_1856 == 0 || Tmp_1856 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlStringValidateDestW_sdv_static_function_1"} RtlStringValidateDestW_sdv_static_function_1(actual_pszDest_1: int, actual_cchDest_1: int, actual_cchMax_1: int) returns (Tmp_1856: int)
{
  var {:scalar} status_51: int;
  var {:scalar} cchDest_1: int;
  var {:scalar} cchMax_1: int;

  anon0:
    cchDest_1 := actual_cchDest_1;
    cchMax_1 := actual_cchMax_1;
    status_51 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_1 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_1 <= cchMax_1;
    goto L8;

  L8:
    Tmp_1856 := status_51;
    return;

  anon5_Then:
    assume {:partition} cchMax_1 < cchDest_1;
    goto L6;

  L6:
    status_51 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_1 == 0;
    goto L6;
}



procedure {:origName "Sbp2SystemControl"} Sbp2SystemControl(actual_DeviceObject_31: int, actual_Irp_19: int) returns (Tmp_1858: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2SystemControl"} Sbp2SystemControl(actual_DeviceObject_31: int, actual_Irp_19: int) returns (Tmp_1858: int)
{
  var {:pointer} Tmp_1859: int;
  var {:scalar} Tmp_1860: int;
  var {:pointer} Tmp_1861: int;
  var {:scalar} status_52: int;
  var {:pointer} deviceExtension_8: int;
  var {:pointer} DeviceObject_31: int;
  var {:pointer} Irp_19: int;
  var vslice_dummy_var_1056: int;

  anon0:
    DeviceObject_31 := actual_DeviceObject_31;
    Irp_19 := actual_Irp_19;
    call {:si_unique_call 1123} Tmp_1861 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    deviceExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_31)];
    call {:si_unique_call 1124} sdv_do_paged_code_check();
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1861;
    assume {:nonnull} Tmp_1861 != 0;
    assume Tmp_1861 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    havoc Tmp_1859;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1860;
    call {:si_unique_call 1125} WPP_SF_qq(Tmp_1860, 101, Tmp_1859, deviceExtension_8, Irp_19);
    goto L15;

  L15:
    call {:si_unique_call 1126} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_19);
    assume {:nonnull} deviceExtension_8 != 0;
    assume deviceExtension_8 > 0;
    havoc vslice_dummy_var_1056;
    call {:si_unique_call 1127} Tmp_1858 := sdv_IoCallDriver(vslice_dummy_var_1056, Irp_19);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon15_Then:
    goto L15;

  anon16_Then:
    goto L15;

  anon14_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L15;

  anon13_Then:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    havoc status_52;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume Irp_19 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1128} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  L37:
    call {:si_unique_call 1129} sdv_IoCompleteRequest(0, 0);
    Tmp_1858 := status_52;
    goto L1;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    assume !(Irp_19 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L37;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var {:scalar} Tmp_1865: int;
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 1130} vslice_dummy_var_156 := __HAVOC_malloc(4);
    call {:si_unique_call 1131} Tmp_1865 := __HAVOC_malloc(4);
    Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] := WPP_GLOBAL_Control;
    assume {:nonnull} Tmp_1865 != 0;
    assume Tmp_1865 > 0;
    assume Sbp2LogLevel == 15;
    return;
}



procedure {:origName "WPP_SF_qqD"} WPP_SF_qqD(actual_Logger_25: int, actual_id_25: int, actual_TraceGuid_25: int, actual_s_p_e_c_i_a_l_97: int, actual_s_p_e_c_i_a_l_98: int, actual_s_p_e_c_i_a_l_99: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qqD"} WPP_SF_qqD(actual_Logger_25: int, actual_id_25: int, actual_TraceGuid_25: int, actual_s_p_e_c_i_a_l_97: int, actual_s_p_e_c_i_a_l_98: int, actual_s_p_e_c_i_a_l_99: int)
{
  var {:pointer} TraceGuid_25: int;
  var vslice_dummy_var_157: int;

  anon0:
    call {:si_unique_call 1132} vslice_dummy_var_157 := __HAVOC_malloc(4);
    TraceGuid_25 := actual_TraceGuid_25;
    return;
}



procedure {:origName "RtlStringValidateDestA_sdv_static_function_1"} RtlStringValidateDestA_sdv_static_function_1(actual_pszDest_2: int, actual_cchDest_2: int, actual_cchMax_2: int) returns (Tmp_1869: int);
  free ensures {:va_keep} Tmp_1869 == 0 || Tmp_1869 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlStringValidateDestA_sdv_static_function_1"} RtlStringValidateDestA_sdv_static_function_1(actual_pszDest_2: int, actual_cchDest_2: int, actual_cchMax_2: int) returns (Tmp_1869: int)
{
  var {:scalar} status_53: int;
  var {:scalar} cchDest_2: int;
  var {:scalar} cchMax_2: int;

  anon0:
    cchDest_2 := actual_cchDest_2;
    cchMax_2 := actual_cchMax_2;
    status_53 := 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_2 != 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} cchDest_2 <= cchMax_2;
    goto L8;

  L8:
    Tmp_1869 := status_53;
    return;

  anon5_Then:
    assume {:partition} cchMax_2 < cchDest_2;
    goto L6;

  L6:
    status_53 := -1073741811;
    goto L8;

  anon6_Then:
    assume {:partition} cchDest_2 == 0;
    goto L6;
}



procedure {:origName "Sbp2DeviceControl"} Sbp2DeviceControl(actual_DeviceObject_32: int, actual_Irp_20: int) returns (Tmp_1871: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2DeviceControl"} Sbp2DeviceControl(actual_DeviceObject_32: int, actual_Irp_20: int) returns (Tmp_1871: int)
{
  var {:pointer} irpStack_15: int;
  var {:pointer} pdoExtension_15: int;
  var {:scalar} Tmp_1872: int;
  var {:pointer} Tmp_1874: int;
  var {:pointer} Tmp_1875: int;
  var {:scalar} status_54: int;
  var {:pointer} DeviceObject_32: int;
  var {:pointer} Irp_20: int;
  var vslice_dummy_var_1057: int;

  anon0:
    DeviceObject_32 := actual_DeviceObject_32;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 1133} Tmp_1875 := __HAVOC_malloc(4);
    call {:si_unique_call 1134} irpStack_15 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} DeviceObject_32 != 0;
    assume DeviceObject_32 > 0;
    pdoExtension_15 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_32)];
    call {:si_unique_call 1135} sdv_do_paged_code_check();
    assume {:nonnull} pdoExtension_15 != 0;
    assume pdoExtension_15 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1875;
    assume {:nonnull} Tmp_1875 != 0;
    assume Tmp_1875 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_1874;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1872;
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    havoc vslice_dummy_var_1057;
    call {:si_unique_call 1136} WPP_SF_qqD(Tmp_1872, 66, Tmp_1874, pdoExtension_15, Irp_20, vslice_dummy_var_1057);
    goto L56;

  L56:
    status_54 := -1073741637;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1137} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto L87;

  L87:
    call {:si_unique_call 1138} sdv_IoCompleteRequest(0, 0);
    goto L44;

  L44:
    Tmp_1871 := status_54;
    goto LM2;

  LM2:
    return;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L87;

  anon47_Then:
    goto L56;

  anon59_Then:
    goto L56;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon48_Then:
    assume {:nonnull} irpStack_15 != 0;
    assume irpStack_15 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    status_54 := -1073741811;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1139} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto L84;

  L84:
    call {:si_unique_call 1140} sdv_IoCompleteRequest(0, 0);
    goto L44;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L84;

  anon45_Then:
    call {:si_unique_call 1141} status_54 := Sbp2QueryProperty(DeviceObject_32, Irp_20);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon58_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon49_Then:
    call {:si_unique_call 1142} status_54 := Sbp2HandleApiRequest(pdoExtension_15, Irp_20);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon55_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    call {:si_unique_call 1143} status_54 := Sbp2ScsiPassThrough(DeviceObject_32, Irp_20, 1);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon51_Then:
    call {:si_unique_call 1144} status_54 := Sbp2ScsiPassThrough(DeviceObject_32, Irp_20, 0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon53_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    call {:si_unique_call 1145} status_54 := Sbp2ScsiGetCapabilities(DeviceObject_32, Irp_20);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    goto L44;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon43_Then:
    status_54 := -1073741637;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume Irp_20 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1146} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} yogi_error != 1;
    goto L90;

  L90:
    call {:si_unique_call 1147} sdv_IoCompleteRequest(0, 0);
    goto L44;

  anon63_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon62_Then:
    assume !(Irp_20 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L90;
}



procedure {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "InsertHeadList"} InsertHeadList(actual_ListHead_3: int, actual_Entry_1: int)
{
  var {:pointer} NextEntry: int;
  var {:pointer} ListHead_3: int;
  var {:pointer} Entry_1: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_1058: int;

  anon0:
    call {:si_unique_call 1148} vslice_dummy_var_158 := __HAVOC_malloc(4);
    ListHead_3 := actual_ListHead_3;
    Entry_1 := actual_Entry_1;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    havoc NextEntry;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    assume {:nonnull} Entry_1 != 0;
    assume Entry_1 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    havoc vslice_dummy_var_1058;
    call {:si_unique_call 1149} FatalListEntryError(ListHead_3, NextEntry, vslice_dummy_var_1058);
    goto L8;

  L8:
    assume {:nonnull} NextEntry != 0;
    assume NextEntry > 0;
    assume {:nonnull} ListHead_3 != 0;
    assume ListHead_3 > 0;
    return;

  anon3_Then:
    goto L8;
}



procedure {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_3: int, actual_uniCompatIds: int) returns (Tmp_1878: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1878 == -1073741670 || Tmp_1878 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2_BuildCompatIds"} Sbp2_BuildCompatIds(actual_DeviceInfo_3: int, actual_uniCompatIds: int) returns (Tmp_1878: int)
{
  var {:pointer} Tmp_1879: int;
  var {:scalar} Tmp_1880: int;
  var {:scalar} Tmp_1881: int;
  var {:pointer} Tmp_1882: int;
  var {:pointer} sdv_580: int;
  var {:scalar} Tmp_1883: int;
  var {:scalar} Tmp_1884: int;
  var {:pointer} Tmp_1885: int;
  var {:scalar} Tmp_1887: int;
  var {:scalar} status_55: int;
  var {:pointer} DeviceInfo_3: int;
  var {:pointer} uniCompatIds: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_1059: int;

  anon0:
    DeviceInfo_3 := actual_DeviceInfo_3;
    uniCompatIds := actual_uniCompatIds;
    call {:si_unique_call 1150} Tmp_1879 := __HAVOC_malloc(4);
    call {:si_unique_call 1151} Tmp_1882 := __HAVOC_malloc(56);
    status_55 := 0;
    call {:si_unique_call 1152} sdv_do_paged_code_check();
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1881;
    call {:si_unique_call 1153} sdv_580 := ExAllocatePoolWithTag(1, Tmp_1881, 846226003);
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1879;
    assume {:nonnull} Tmp_1879 != 0;
    assume Tmp_1879 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_1885;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1887;
    call {:si_unique_call 1154} WPP_SF_(Tmp_1887, 106, Tmp_1885);
    goto L30;

  L30:
    status_55 := -1073741670;
    goto L28;

  L28:
    Tmp_1878 := status_55;
    return;

  anon10_Then:
    goto L30;

  anon12_Then:
    goto L30;

  anon9_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L30;

  anon11_Then:
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1883;
    call {:si_unique_call 1155} sdv_RtlZeroMemory(0, Tmp_1883);
    assume {:nonnull} DeviceInfo_3 != 0;
    assume DeviceInfo_3 > 0;
    havoc Tmp_1884;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc Tmp_1880;
    Tmp_1882 := strConst__li2bpl31;
    assume {:nonnull} uniCompatIds != 0;
    assume uniCompatIds > 0;
    havoc vslice_dummy_var_1059;
    call {:si_unique_call 1156} vslice_dummy_var_159 := RtlStringCbPrintfW(vslice_dummy_var_1059, Tmp_1880, Tmp_1882);
    goto L28;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead_4: int)
{
  var {:pointer} ListHead_4: int;
  var vslice_dummy_var_160: int;

  anon0:
    call {:si_unique_call 1157} vslice_dummy_var_160 := __HAVOC_malloc(4);
    ListHead_4 := actual_ListHead_4;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    assume {:nonnull} ListHead_4 != 0;
    assume ListHead_4 > 0;
    return;
}



procedure {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_33: int, actual_Irp_21: int) returns (Tmp_1890: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ForwardIrpSynchronous"} Sbp2ForwardIrpSynchronous(actual_DeviceObject_33: int, actual_Irp_21: int) returns (Tmp_1890: int)
{
  var {:pointer} newIrpSp: int;
  var {:pointer} newIrp: int;
  var {:scalar} status_56: int;
  var {:scalar} event_2: int;
  var {:pointer} DeviceObject_33: int;
  var {:pointer} Irp_21: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_1060: int;

  anon0:
    call {:si_unique_call 1158} event_2 := __HAVOC_malloc(156);
    DeviceObject_33 := actual_DeviceObject_33;
    Irp_21 := actual_Irp_21;
    status_56 := 0;
    call {:si_unique_call 1159} sdv_do_paged_code_check();
    assume {:nonnull} DeviceObject_33 != 0;
    assume DeviceObject_33 > 0;
    havoc vslice_dummy_var_1060;
    call {:si_unique_call 1160} newIrp := IoAllocateIrp(vslice_dummy_var_1060, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} newIrp != 0;
    call {:si_unique_call 1161} vslice_dummy_var_161 := sdv_IoGetCurrentIrpStackLocation(Irp_21);
    call {:si_unique_call 1162} newIrpSp := sdv_IoGetNextIrpStackLocation(newIrp);
    call {:si_unique_call 1163} sdv_RtlCopyMemory(0, 0, 28);
    assume {:nonnull} newIrpSp != 0;
    assume newIrpSp > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    call {:si_unique_call 1164} KeInitializeEvent(event_2, 0, 0);
    call {:si_unique_call 1165} sdv_IoSetCompletionRoutine(newIrp, li2bplFunctionConstant399, event_2, 1, 1, 1);
    call {:si_unique_call 1166} status_56 := sdv_IoCallDriver(DeviceObject_33, newIrp);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} status_56 == 259;
    call {:si_unique_call 1167} vslice_dummy_var_162 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L42;

  L42:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    havoc status_56;
    call {:si_unique_call 1168} IoFreeIrp(0);
    goto L49;

  L49:
    Tmp_1890 := status_56;
    return;

  anon6_Then:
    assume {:partition} status_56 != 259;
    goto L42;

  anon5_Then:
    assume {:partition} newIrp == 0;
    status_56 := -1073741670;
    goto L49;
}



procedure {:origName "WPP_SF_qDd"} WPP_SF_qDd(actual_Logger_26: int, actual_id_26: int, actual_TraceGuid_26: int, actual_s_p_e_c_i_a_l_100: int, actual_s_p_e_c_i_a_l_101: int, actual_s_p_e_c_i_a_l_102: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qDd"} WPP_SF_qDd(actual_Logger_26: int, actual_id_26: int, actual_TraceGuid_26: int, actual_s_p_e_c_i_a_l_100: int, actual_s_p_e_c_i_a_l_101: int, actual_s_p_e_c_i_a_l_102: int)
{
  var {:pointer} TraceGuid_26: int;
  var vslice_dummy_var_163: int;

  anon0:
    call {:si_unique_call 1169} vslice_dummy_var_163 := __HAVOC_malloc(4);
    TraceGuid_26 := actual_TraceGuid_26;
    return;
}



procedure {:origName "WPP_SF_"} WPP_SF_(actual_Logger_27: int, actual_id_27: int, actual_TraceGuid_27: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_"} WPP_SF_(actual_Logger_27: int, actual_id_27: int, actual_TraceGuid_27: int)
{
  var {:pointer} TraceGuid_27: int;
  var vslice_dummy_var_164: int;

  anon0:
    call {:si_unique_call 1170} vslice_dummy_var_164 := __HAVOC_malloc(4);
    TraceGuid_27 := actual_TraceGuid_27;
    return;
}



procedure {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_4: int, actual_uniDeviceText: int) returns (Tmp_1898: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1898 == -1073741670 || Tmp_1898 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2_BuildDeviceText"} Sbp2_BuildDeviceText(actual_TextType: int, actual_DeviceInfo_4: int, actual_uniDeviceText: int) returns (Tmp_1898: int)
{
  var {:scalar} Tmp_1899: int;
  var {:pointer} Tmp_1901: int;
  var {:pointer} Tmp_1902: int;
  var {:scalar} Tmp_1903: int;
  var {:scalar} Tmp_1904: int;
  var {:pointer} sdv_589: int;
  var {:scalar} Tmp_1905: int;
  var {:scalar} Tmp_1906: int;
  var {:pointer} Tmp_1907: int;
  var {:pointer} Tmp_1908: int;
  var {:pointer} Tmp_1909: int;
  var {:scalar} status_57: int;
  var {:pointer} Tmp_1910: int;
  var {:scalar} Tmp_1911: int;
  var {:scalar} TextType: int;
  var {:pointer} DeviceInfo_4: int;
  var {:pointer} uniDeviceText: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_1061: int;
  var vslice_dummy_var_1062: int;
  var vslice_dummy_var_1063: int;

  anon0:
    TextType := actual_TextType;
    DeviceInfo_4 := actual_DeviceInfo_4;
    uniDeviceText := actual_uniDeviceText;
    call {:si_unique_call 1171} Tmp_1902 := __HAVOC_malloc(188);
    call {:si_unique_call 1172} Tmp_1907 := __HAVOC_malloc(120);
    call {:si_unique_call 1173} Tmp_1909 := __HAVOC_malloc(4);
    call {:si_unique_call 1174} Tmp_1910 := __HAVOC_malloc(28);
    status_57 := 0;
    call {:si_unique_call 1175} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1899;
    call {:si_unique_call 1176} sdv_589 := ExAllocatePoolWithTag(1, Tmp_1899, 846226003);
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1909;
    assume {:nonnull} Tmp_1909 != 0;
    assume Tmp_1909 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    havoc Tmp_1901;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1906;
    call {:si_unique_call 1177} WPP_SF_(Tmp_1906, 108, Tmp_1901);
    goto L43;

  L43:
    status_57 := -1073741670;
    goto L26;

  L26:
    Tmp_1898 := status_57;
    return;

  anon22_Then:
    goto L43;

  anon24_Then:
    goto L43;

  anon21_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L43;

  anon23_Then:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1903;
    call {:si_unique_call 1178} sdv_RtlZeroMemory(0, Tmp_1903);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} TextType != 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} TextType == 1;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1911;
    Tmp_1910 := strConst__li2bpl33;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_1061;
    call {:si_unique_call 1179} vslice_dummy_var_165 := RtlStringCbPrintfW(vslice_dummy_var_1061, Tmp_1911, Tmp_1910);
    goto L26;

  anon19_Then:
    assume {:partition} TextType != 1;
    goto L26;

  anon17_Then:
    assume {:partition} TextType == 0;
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} DeviceInfo_4 != 0;
    assume DeviceInfo_4 > 0;
    havoc Tmp_1908;
    goto L35;

  L35:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1904;
    Tmp_1907 := strConst__li2bpl34;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_1062;
    call {:si_unique_call 1180} vslice_dummy_var_166 := RtlStringCbPrintfW(vslice_dummy_var_1062, Tmp_1904, Tmp_1907);
    goto L26;

  anon20_Then:
    Tmp_1908 := strConst__li2bpl32;
    goto L35;

  anon18_Then:
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc Tmp_1905;
    Tmp_1902 := strConst__li2bpl35;
    assume {:nonnull} uniDeviceText != 0;
    assume uniDeviceText > 0;
    havoc vslice_dummy_var_1063;
    call {:si_unique_call 1181} vslice_dummy_var_167 := RtlStringCbPrintfW(vslice_dummy_var_1063, Tmp_1905, Tmp_1902);
    goto L26;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_1912: int);
  modifies alloc;
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_5: int) returns (Tmp_1912: int)
{
  var {:pointer} NextEntry_1: int;
  var {:pointer} Entry_2: int;
  var {:pointer} ListHead_5: int;

  anon0:
    ListHead_5 := actual_ListHead_5;
    call {:si_unique_call 1182} SLIC_RemoveHeadList_entry(strConst__li2bpl3);
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    havoc Entry_2;
    assume {:nonnull} Entry_2 != 0;
    assume Entry_2 > 0;
    havoc NextEntry_1;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto L9;

  L9:
    call {:si_unique_call 1183} FatalListEntryError(ListHead_5, Entry_2, NextEntry_1);
    goto L12;

  L12:
    assume {:nonnull} ListHead_5 != 0;
    assume ListHead_5 > 0;
    assume {:nonnull} NextEntry_1 != 0;
    assume NextEntry_1 > 0;
    Tmp_1912 := Entry_2;
    return;

  anon6_Then:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto L12;

  anon5_Then:
    goto L9;
}



procedure {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_35: int, actual_Irp_22: int) returns (Tmp_1943: int);
  modifies alloc, completion_called, Mem_T.LogStart__DEBUG_LOG, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2FDOPnpDeviceControl"} Sbp2FDOPnpDeviceControl(actual_DeviceObject_35: int, actual_Irp_22: int) returns (Tmp_1943: int)
{
  var {:pointer} deviceRelations: int;
  var {:pointer} irpStack_16: int;
  var {:pointer} Tmp_1944: int;
  var {:scalar} Tmp_1945: int;
  var {:pointer} Tmp_1946: int;
  var {:scalar} Tmp_1947: int;
  var {:pointer} Tmp_1948: int;
  var {:pointer} deviceCapabilities: int;
  var {:pointer} fdoExtension_6: int;
  var {:pointer} sdv_614: int;
  var {:pointer} Tmp_1949: int;
  var {:scalar} status_59: int;
  var {:scalar} event_3: int;
  var {:pointer} DeviceObject_35: int;
  var {:pointer} Irp_22: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_1064: int;
  var vslice_dummy_var_1065: int;
  var vslice_dummy_var_1066: int;
  var vslice_dummy_var_1067: int;

  anon0:
    call {:si_unique_call 1184} event_3 := __HAVOC_malloc(156);
    DeviceObject_35 := actual_DeviceObject_35;
    Irp_22 := actual_Irp_22;
    call {:si_unique_call 1185} Tmp_1948 := __HAVOC_malloc(4);
    call {:si_unique_call 1186} Tmp_1949 := __HAVOC_malloc(4);
    call {:si_unique_call 1187} irpStack_16 := sdv_IoGetCurrentIrpStackLocation(Irp_22);
    assume {:nonnull} DeviceObject_35 != 0;
    assume DeviceObject_35 > 0;
    fdoExtension_6 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_35)];
    call {:si_unique_call 1188} status_59 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_59 >= 0;
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L34;

  L34:
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    call {:si_unique_call 1189} vslice_dummy_var_168 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_6), 0);
    call {:si_unique_call 1190} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_22);
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc vslice_dummy_var_1064;
    call {:si_unique_call 1191} status_59 := sdv_IoCallDriver(vslice_dummy_var_1064, Irp_22);
    Tmp_1943 := status_59;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon69_Then:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto L34;

  anon70_Then:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    havoc deviceCapabilities;
    assume {:nonnull} deviceCapabilities != 0;
    assume deviceCapabilities > 0;
    goto L34;

  anon71_Then:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1949;
    assume {:nonnull} Tmp_1949 != 0;
    assume Tmp_1949 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    havoc Tmp_1944;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1947;
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    havoc vslice_dummy_var_1065;
    call {:si_unique_call 1192} WPP_SF_qD(Tmp_1947, 97, Tmp_1944, fdoExtension_6, vslice_dummy_var_1065);
    goto L48;

  L48:
    assume {:nonnull} irpStack_16 != 0;
    assume irpStack_16 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 1193} sdv_614 := ExAllocatePoolWithTag(1, 48, -230399405);
    deviceRelations := sdv_614;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} deviceRelations == 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1948;
    assume {:nonnull} Tmp_1948 != 0;
    assume Tmp_1948 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    havoc Tmp_1946;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1945;
    call {:si_unique_call 1194} WPP_SF_q(Tmp_1945, 98, Tmp_1946, fdoExtension_6);
    goto L86;

  L86:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    call {:si_unique_call 1195} vslice_dummy_var_173 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_6), 0);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume Irp_22 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1196} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L173;

  L173:
    call {:si_unique_call 1197} sdv_IoCompleteRequest(0, 0);
    Tmp_1943 := -1073741670;
    goto L1;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume !(Irp_22 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L173;

  anon64_Then:
    goto L86;

  anon81_Then:
    goto L86;

  anon63_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L86;

  anon77_Then:
    assume {:partition} deviceRelations != 0;
    call {:si_unique_call 1198} status_59 := Sbp2CreateDeviceRelations(fdoExtension_6, deviceRelations);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} status_59 >= 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto L34;

  anon79_Then:
    assume {:partition} 0 > status_59;
    call {:si_unique_call 1199} ExFreePoolWithTag(0, -230399405);
    deviceRelations := 0;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    call {:si_unique_call 1200} vslice_dummy_var_172 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_6), 0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume Irp_22 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1201} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L170;

  L170:
    call {:si_unique_call 1202} sdv_IoCompleteRequest(0, 0);
    Tmp_1943 := status_59;
    goto L1;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon62_Then:
    assume !(Irp_22 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L170;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L34;

  anon61_Then:
    goto L48;

  anon76_Then:
    goto L48;

  anon59_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L48;

  anon72_Then:
    call {:si_unique_call 1203} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 1204} vslice_dummy_var_169 := Sbp2CleanDeviceExtension#1(DeviceObject_35, 1, 1);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1205} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_22);
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc vslice_dummy_var_1066;
    call {:si_unique_call 1206} status_59 := sdv_IoCallDriver(vslice_dummy_var_1066, Irp_22);
    call {:si_unique_call 1207} IoDetachDevice(0);
    call {:si_unique_call 1208} IoDeleteDevice(0);
    Tmp_1943 := status_59;
    goto L1;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    call {:si_unique_call 1209} KeInitializeEvent(event_3, 1, 0);
    call {:si_unique_call 1210} sdv_IoCopyCurrentIrpStackLocationToNext(Irp_22);
    call {:si_unique_call 1211} sdv_IoSetCompletionRoutine(Irp_22, li2bplFunctionConstant385, event_3, 1, 1, 1);
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    havoc vslice_dummy_var_1067;
    call {:si_unique_call 1212} status_59 := sdv_IoCallDriver(vslice_dummy_var_1067, Irp_22);
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L131;

  L131:
    call {:si_unique_call 1213} vslice_dummy_var_170 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    call {:si_unique_call 1214} status_59 := Sbp2StartDevice(DeviceObject_35);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L138;

  L138:
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    assume {:nonnull} fdoExtension_6 != 0;
    assume fdoExtension_6 > 0;
    call {:si_unique_call 1215} vslice_dummy_var_171 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(fdoExtension_6), 0);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume Irp_22 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1216} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L167;

  L167:
    call {:si_unique_call 1217} sdv_IoCompleteRequest(0, 0);
    Tmp_1943 := status_59;
    goto L1;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    assume !(Irp_22 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L167;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} status_59 != 259;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    havoc status_59;
    goto L138;

  anon67_Then:
    assume {:partition} status_59 == 259;
    goto L131;

  anon57_Then:
    assume {:partition} 0 > status_59;
    assume {:nonnull} Irp_22 != 0;
    assume Irp_22 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume Irp_22 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1218} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L176;

  L176:
    call {:si_unique_call 1219} sdv_IoCompleteRequest(0, 0);
    Tmp_1943 := status_59;
    goto L1;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon83_Then:
    assume !(Irp_22 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L176;
}



procedure {:origName "WPP_SF_q"} WPP_SF_q(actual_Logger_28: int, actual_id_28: int, actual_TraceGuid_28: int, actual_s_p_e_c_i_a_l_103: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_q"} WPP_SF_q(actual_Logger_28: int, actual_id_28: int, actual_TraceGuid_28: int, actual_s_p_e_c_i_a_l_103: int)
{
  var {:pointer} TraceGuid_28: int;
  var vslice_dummy_var_174: int;

  anon0:
    call {:si_unique_call 1220} vslice_dummy_var_174 := __HAVOC_malloc(4);
    TraceGuid_28 := actual_TraceGuid_28;
    return;
}



procedure {:origName "RtlStringCbPrintfA"} RtlStringCbPrintfA(actual_pszDest_3: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_1954: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1954 == 0 || Tmp_1954 == 5 || Tmp_1954 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlStringCbPrintfA"} RtlStringCbPrintfA(actual_pszDest_3: int, actual_cbDest: int, actual_pszFormat_1: int) returns (Tmp_1954: int)
{
  var {:scalar} cchDest_3: int;
  var {:pointer} argList_1: int;
  var {:scalar} status_60: int;
  var {:pointer} pszDest_3: int;
  var {:scalar} cbDest: int;
  var {:pointer} pszFormat_1: int;
  var vslice_dummy_var_1068: int;

  anon0:
    pszDest_3 := actual_pszDest_3;
    cbDest := actual_cbDest;
    call {:si_unique_call 1221} pszFormat_1 := __HAVOC_malloc(4);
    cchDest_3 := INTDIV(cbDest, 1);
    call {:si_unique_call 1222} status_60 := RtlStringValidateDestA_sdv_static_function_1(pszDest_3, cchDest_3, -1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_60 >= 0;
    argList_1 := pszFormat_1;
    assume {:nonnull} pszFormat_1 != 0;
    assume pszFormat_1 > 0;
    havoc vslice_dummy_var_1068;
    call {:si_unique_call 1223} status_60 := RtlStringVPrintfWorkerA_sdv_static_function_1(pszDest_3, cchDest_3, 0, vslice_dummy_var_1068, argList_1);
    argList_1 := 0;
    goto L19;

  L19:
    Tmp_1954 := status_60;
    return;

  anon5_Then:
    assume {:partition} 0 > status_60;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_3 > 0;
    assume {:nonnull} pszDest_3 != 0;
    assume pszDest_3 > 0;
    goto L19;

  anon6_Then:
    assume {:partition} 0 >= cchDest_3;
    goto L19;
}



procedure {:origName "_InlineInterlockedCompareExchangePointer"} _InlineInterlockedCompareExchangePointer(actual_Destination_2: int, actual_ExChange: int, actual_Comperand: int) returns (Tmp_1956: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_InlineInterlockedCompareExchangePointer"} _InlineInterlockedCompareExchangePointer(actual_Destination_2: int, actual_ExChange: int, actual_Comperand: int) returns (Tmp_1956: int)
{
  var {:scalar} sdv_620: int;

  anon0:
    Tmp_1956 := sdv_620;
    return;
}



procedure {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_5: int, actual_uniHardwareIds: int) returns (Tmp_1958: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1958 == -1073741670 || Tmp_1958 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2_BuildHardwareIds"} Sbp2_BuildHardwareIds(actual_DeviceInfo_5: int, actual_uniHardwareIds: int) returns (Tmp_1958: int)
{
  var {:pointer} Tmp_1969: int;
  var {:scalar} uniCmdSetId: int;
  var {:pointer} Tmp_1973: int;
  var {:pointer} sdv_637: int;
  var {:scalar} Tmp_1975: int;
  var {:scalar} Tmp_1976: int;
  var {:pointer} Tmp_1977: int;
  var {:scalar} Tmp_1978: int;
  var {:pointer} Tmp_1980: int;
  var {:scalar} Tmp_1984: int;
  var {:scalar} Tmp_1985: int;
  var {:scalar} uniModelId: int;
  var {:scalar} uniLunNumber: int;
  var {:scalar} Tmp_1986: int;
  var {:pointer} Tmp_1988: int;
  var {:scalar} uniRevision: int;
  var {:pointer} sdv_649: int;
  var {:pointer} sdv_651: int;
  var {:pointer} Tmp_1989: int;
  var {:pointer} Tmp_1990: int;
  var {:scalar} Tmp_1991: int;
  var {:scalar} Tmp_1993: int;
  var {:scalar} Tmp_1994: int;
  var {:pointer} sdv_658: int;
  var {:scalar} status_61: int;
  var {:scalar} Tmp_1996: int;
  var {:scalar} Tmp_1999: int;
  var {:scalar} Tmp_2001: int;
  var {:scalar} Tmp_2002: int;
  var {:pointer} DeviceInfo_5: int;
  var {:pointer} uniHardwareIds: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_1069: int;

  anon0:
    call {:si_unique_call 1224} uniCmdSetId := __HAVOC_malloc(12);
    call {:si_unique_call 1225} uniModelId := __HAVOC_malloc(12);
    call {:si_unique_call 1226} uniLunNumber := __HAVOC_malloc(12);
    call {:si_unique_call 1227} uniRevision := __HAVOC_malloc(12);
    DeviceInfo_5 := actual_DeviceInfo_5;
    uniHardwareIds := actual_uniHardwareIds;
    call {:si_unique_call 1228} vslice_dummy_var_191 := __HAVOC_malloc(116);
    call {:si_unique_call 1229} vslice_dummy_var_192 := __HAVOC_malloc(16);
    call {:si_unique_call 1230} vslice_dummy_var_193 := __HAVOC_malloc(8);
    call {:si_unique_call 1231} vslice_dummy_var_194 := __HAVOC_malloc(116);
    call {:si_unique_call 1232} vslice_dummy_var_195 := __HAVOC_malloc(116);
    call {:si_unique_call 1233} vslice_dummy_var_196 := __HAVOC_malloc(24);
    call {:si_unique_call 1234} vslice_dummy_var_197 := __HAVOC_malloc(20);
    call {:si_unique_call 1235} vslice_dummy_var_198 := __HAVOC_malloc(36);
    call {:si_unique_call 1236} vslice_dummy_var_199 := __HAVOC_malloc(8);
    call {:si_unique_call 1237} Tmp_1969 := __HAVOC_malloc(4);
    call {:si_unique_call 1238} vslice_dummy_var_200 := __HAVOC_malloc(16);
    call {:si_unique_call 1239} vslice_dummy_var_201 := __HAVOC_malloc(36);
    call {:si_unique_call 1240} vslice_dummy_var_202 := __HAVOC_malloc(24);
    call {:si_unique_call 1241} Tmp_1973 := __HAVOC_malloc(56);
    call {:si_unique_call 1242} vslice_dummy_var_203 := __HAVOC_malloc(8);
    call {:si_unique_call 1243} Tmp_1977 := __HAVOC_malloc(4);
    call {:si_unique_call 1244} vslice_dummy_var_204 := __HAVOC_malloc(24);
    call {:si_unique_call 1245} vslice_dummy_var_205 := __HAVOC_malloc(8);
    call {:si_unique_call 1246} vslice_dummy_var_206 := __HAVOC_malloc(8);
    call {:si_unique_call 1247} vslice_dummy_var_207 := __HAVOC_malloc(24);
    call {:si_unique_call 1248} vslice_dummy_var_208 := __HAVOC_malloc(8);
    call {:si_unique_call 1249} Tmp_1989 := __HAVOC_malloc(4);
    call {:si_unique_call 1250} vslice_dummy_var_209 := __HAVOC_malloc(8);
    call {:si_unique_call 1251} vslice_dummy_var_210 := __HAVOC_malloc(8);
    call {:si_unique_call 1252} vslice_dummy_var_211 := __HAVOC_malloc(8);
    call {:si_unique_call 1253} vslice_dummy_var_212 := __HAVOC_malloc(24);
    call {:si_unique_call 1254} vslice_dummy_var_213 := __HAVOC_malloc(116);
    status_61 := 0;
    call {:si_unique_call 1255} sdv_do_paged_code_check();
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_1986;
    call {:si_unique_call 1256} sdv_637 := ExAllocatePoolWithTag(1, Tmp_1986, 846226003);
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1977;
    assume {:nonnull} Tmp_1977 != 0;
    assume Tmp_1977 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    havoc Tmp_1980;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1999;
    call {:si_unique_call 1257} WPP_SF_(Tmp_1999, 103, Tmp_1980);
    goto L252;

  L252:
    status_61 := -1073741670;
    goto L218;

  L218:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    call {:si_unique_call 1258} sdv_ExFreePool(0);
    goto L219;

  L219:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1259} sdv_ExFreePool(0);
    goto L223;

  L223:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    call {:si_unique_call 1260} sdv_ExFreePool(0);
    goto L227;

  L227:
    Tmp_1958 := status_61;
    return;

  anon55_Then:
    goto L227;

  anon54_Then:
    goto L223;

  anon53_Then:
    goto L219;

  anon61_Then:
    goto L252;

  anon69_Then:
    goto L252;

  anon60_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L252;

  anon62_Then:
    assume {:nonnull} uniLunNumber != 0;
    assume uniLunNumber > 0;
    havoc Tmp_2001;
    call {:si_unique_call 1261} sdv_RtlZeroMemory(0, Tmp_2001);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc Tmp_1991;
    call {:si_unique_call 1262} vslice_dummy_var_214 := RtlIntegerToUnicodeString(Tmp_1991, 16, 0);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    havoc Tmp_1985;
    call {:si_unique_call 1263} sdv_649 := ExAllocatePoolWithTag(1, Tmp_1985, 846226003);
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    havoc Tmp_2002;
    call {:si_unique_call 1264} sdv_RtlZeroMemory(0, Tmp_2002);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc Tmp_1996;
    call {:si_unique_call 1265} vslice_dummy_var_215 := RtlIntegerToUnicodeString(Tmp_1996, 16, 0);
    goto L35;

  L35:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_1976;
    call {:si_unique_call 1266} sdv_651 := ExAllocatePoolWithTag(1, Tmp_1976, 846226003);
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1989;
    assume {:nonnull} Tmp_1989 != 0;
    assume Tmp_1989 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    havoc Tmp_1990;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1993;
    call {:si_unique_call 1267} WPP_SF_(Tmp_1993, 104, Tmp_1990);
    goto L242;

  L242:
    status_61 := -1073741670;
    goto L218;

  anon59_Then:
    goto L242;

  anon68_Then:
    goto L242;

  anon58_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L242;

  anon64_Then:
    assume {:nonnull} uniCmdSetId != 0;
    assume uniCmdSetId > 0;
    havoc Tmp_1975;
    call {:si_unique_call 1268} sdv_RtlZeroMemory(0, Tmp_1975);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    havoc vslice_dummy_var_1069;
    call {:si_unique_call 1269} vslice_dummy_var_175 := RtlIntegerToUnicodeString(vslice_dummy_var_1069, 16, 0);
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    assume {:nonnull} uniModelId != 0;
    assume uniModelId > 0;
    goto L76;

  L76:
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_1984;
    call {:si_unique_call 1270} sdv_658 := ExAllocatePoolWithTag(1, Tmp_1984, 846226003);
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1969;
    assume {:nonnull} Tmp_1969 != 0;
    assume Tmp_1969 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_1988;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1978;
    call {:si_unique_call 1271} WPP_SF_(Tmp_1978, 105, Tmp_1988);
    goto L232;

  L232:
    status_61 := -1073741670;
    goto L218;

  anon57_Then:
    goto L232;

  anon67_Then:
    goto L232;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L232;

  anon65_Then:
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    havoc Tmp_1994;
    call {:si_unique_call 1272} sdv_RtlZeroMemory(0, Tmp_1994);
    call {:si_unique_call 1273} vslice_dummy_var_216 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 1274} vslice_dummy_var_176 := corral_nondet();
    call {:si_unique_call 1275} vslice_dummy_var_217 := corral_nondet();
    call {:si_unique_call 1276} vslice_dummy_var_177 := corral_nondet();
    goto L107;

  L107:
    call {:si_unique_call 1277} vslice_dummy_var_218 := corral_nondet();
    call {:si_unique_call 1278} vslice_dummy_var_219 := corral_nondet();
    call {:si_unique_call 1279} vslice_dummy_var_178 := corral_nondet();
    call {:si_unique_call 1280} vslice_dummy_var_220 := corral_nondet();
    call {:si_unique_call 1281} vslice_dummy_var_179 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1282} vslice_dummy_var_221 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    call {:si_unique_call 1283} vslice_dummy_var_180 := corral_nondet();
    call {:si_unique_call 1284} vslice_dummy_var_222 := corral_nondet();
    call {:si_unique_call 1285} vslice_dummy_var_181 := corral_nondet();
    goto L139;

  L139:
    call {:si_unique_call 1286} vslice_dummy_var_223 := corral_nondet();
    call {:si_unique_call 1287} vslice_dummy_var_224 := corral_nondet();
    call {:si_unique_call 1288} vslice_dummy_var_182 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    assume {:nonnull} uniRevision != 0;
    assume uniRevision > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 1289} vslice_dummy_var_225 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 1290} vslice_dummy_var_183 := corral_nondet();
    call {:si_unique_call 1291} vslice_dummy_var_226 := corral_nondet();
    call {:si_unique_call 1292} vslice_dummy_var_184 := corral_nondet();
    goto L169;

  L169:
    call {:si_unique_call 1293} vslice_dummy_var_227 := corral_nondet();
    call {:si_unique_call 1294} vslice_dummy_var_228 := corral_nondet();
    call {:si_unique_call 1295} vslice_dummy_var_185 := corral_nondet();
    call {:si_unique_call 1296} vslice_dummy_var_229 := corral_nondet();
    call {:si_unique_call 1297} vslice_dummy_var_186 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    goto L150;

  L150:
    call {:si_unique_call 1298} vslice_dummy_var_230 := corral_nondet();
    assume {:nonnull} DeviceInfo_5 != 0;
    assume DeviceInfo_5 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 1299} vslice_dummy_var_187 := corral_nondet();
    call {:si_unique_call 1300} vslice_dummy_var_231 := corral_nondet();
    call {:si_unique_call 1301} vslice_dummy_var_188 := corral_nondet();
    goto L198;

  L198:
    call {:si_unique_call 1302} vslice_dummy_var_232 := corral_nondet();
    call {:si_unique_call 1303} vslice_dummy_var_233 := corral_nondet();
    call {:si_unique_call 1304} vslice_dummy_var_189 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1305} vslice_dummy_var_234 := corral_nondet();
    call {:si_unique_call 1306} vslice_dummy_var_190 := corral_nondet();
    assume {:nonnull} uniHardwareIds != 0;
    assume uniHardwareIds > 0;
    call {:si_unique_call 1307} vslice_dummy_var_235 := corral_nondet();
    goto L218;

  anon52_Then:
    call {:si_unique_call 1308} vslice_dummy_var_236 := corral_nondet();
    goto L198;

  anon51_Then:
    call {:si_unique_call 1309} vslice_dummy_var_237 := corral_nondet();
    goto L169;

  anon66_Then:
    goto L150;

  anon50_Then:
    call {:si_unique_call 1310} vslice_dummy_var_238 := corral_nondet();
    goto L139;

  anon49_Then:
    call {:si_unique_call 1311} vslice_dummy_var_239 := corral_nondet();
    goto L107;

  anon48_Then:
    Tmp_1973 := strConst__li2bpl32;
    call {:si_unique_call 1312} RtlInitUnicodeString(uniModelId, Tmp_1973);
    goto L76;

  anon63_Then:
    goto L35;

  anon47_Then:
    goto L35;
}



procedure {:origName "FatalListEntryError"} FatalListEntryError(actual_p1: int, actual_p2: int, actual_p3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "FatalListEntryError"} FatalListEntryError(actual_p1: int, actual_p2: int, actual_p3: int)
{
  var vslice_dummy_var_240: int;

  anon0:
    call {:si_unique_call 1313} vslice_dummy_var_240 := __HAVOC_malloc(4);
    call {:si_unique_call 1314} RtlFailFast(3);
    return;
}



procedure {:origName "Sbp2CreateNiveusId"} Sbp2CreateNiveusId(actual_devInfo_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2CreateNiveusId"} Sbp2CreateNiveusId(actual_devInfo_1: int)
{
  var {:pointer} Tmp_2130: int;
  var {:scalar} Tmp_2131: int;
  var {:scalar} sdv_683: int;
  var {:scalar} sdv_684: int;
  var {:scalar} uniTemp_1: int;
  var {:pointer} devInfo_1: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;

  anon0:
    call {:si_unique_call 1315} uniTemp_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1316} vslice_dummy_var_241 := __HAVOC_malloc(4);
    devInfo_1 := actual_devInfo_1;
    call {:si_unique_call 1317} Tmp_2130 := __HAVOC_malloc(28);
    call {:si_unique_call 1318} vslice_dummy_var_242 := __HAVOC_malloc(36);
    call {:si_unique_call 1319} vslice_dummy_var_243 := __HAVOC_malloc(20);
    Tmp_2130 := strConst__li2bpl42;
    call {:si_unique_call 1320} RtlInitUnicodeString(uniTemp_1, Tmp_2130);
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    call {:si_unique_call 1321} sdv_683 := corral_nondet();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_683 != 0;
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    call {:si_unique_call 1322} sdv_684 := RtlCompareMemory(0, 0, 8);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_684 == 8;
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} devInfo_1 != 0;
    assume devInfo_1 > 0;
    havoc Tmp_2131;
    call {:si_unique_call 1323} sdv_RtlCopyMemory(0, 0, Tmp_2131);
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L1;

  anon14_Then:
    goto L1;

  anon13_Then:
    assume {:partition} sdv_684 != 8;
    goto L1;

  anon12_Then:
    assume {:partition} sdv_683 == 0;
    goto L1;

  anon11_Then:
    goto L1;
}



procedure {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_37: int, actual_Irp_23: int) returns (Tmp_2137: int);
  modifies alloc, completion_called, Mem_T.LogStart__DEBUG_LOG, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2PnpDeviceControl"} Sbp2PnpDeviceControl(actual_DeviceObject_37: int, actual_Irp_23: int) returns (Tmp_2137: int)
{
  var {:scalar} uniRetString: int;
  var {:pointer} Tmp_2138: int;
  var {:pointer} Tmp_2139: int;
  var {:pointer} Tmp_2140: int;
  var {:scalar} Tmp_2141: int;
  var {:pointer} Tmp_2142: int;
  var {:scalar} Tmp_2143: int;
  var {:pointer} DevInfo: int;
  var {:scalar} Tmp_2144: int;
  var {:scalar} Tmp_2145: int;
  var {:pointer} Tmp_2146: int;
  var {:scalar} Tmp_2147: int;
  var {:pointer} sdv_687: int;
  var {:pointer} Tmp_2148: int;
  var {:pointer} Tmp_2149: int;
  var {:pointer} Tmp_2150: int;
  var {:scalar} Tmp_2151: int;
  var {:pointer} Tmp_2152: int;
  var {:pointer} Tmp_2153: int;
  var {:pointer} Tmp_2154: int;
  var {:pointer} Tmp_2155: int;
  var {:pointer} Tmp_2156: int;
  var {:scalar} Tmp_2157: int;
  var {:pointer} Tmp_2158: int;
  var {:pointer} Tmp_2159: int;
  var {:scalar} Tmp_2160: int;
  var {:pointer} Tmp_2162: int;
  var {:scalar} Tmp_2163: int;
  var {:scalar} Tmp_2164: int;
  var {:pointer} Tmp_2165: int;
  var {:scalar} Tmp_2166: int;
  var {:scalar} i_6: int;
  var {:pointer} Tmp_2167: int;
  var {:pointer} DeviceInfo_6: int;
  var {:pointer} irpStack_17: int;
  var {:pointer} Tmp_2168: int;
  var {:pointer} Tmp_2169: int;
  var {:scalar} Tmp_2170: int;
  var {:pointer} Tmp_2171: int;
  var {:scalar} Tmp_2172: int;
  var {:pointer} Tmp_2173: int;
  var {:scalar} Tmp_2174: int;
  var {:pointer} Tmp_2175: int;
  var {:pointer} Tmp_2176: int;
  var {:scalar} reportedMissing: int;
  var {:pointer} Tmp_2177: int;
  var {:scalar} sdv_693: int;
  var {:pointer} Tmp_2178: int;
  var {:pointer} Tmp_2179: int;
  var {:scalar} Tmp_2180: int;
  var {:pointer} Tmp_2181: int;
  var {:pointer} Tmp_2182: int;
  var {:pointer} Tmp_2183: int;
  var {:pointer} fdoExtension_8: int;
  var {:pointer} Tmp_2184: int;
  var {:pointer} Tmp_2185: int;
  var {:scalar} Tmp_2186: int;
  var {:pointer} Tmp_2187: int;
  var {:pointer} Tmp_2188: int;
  var {:scalar} status_64: int;
  var {:pointer} sdv_697: int;
  var {:pointer} Tmp_2189: int;
  var {:pointer} Tmp_2190: int;
  var {:pointer} Tmp_2192: int;
  var {:pointer} Tmp_2194: int;
  var {:pointer} Tmp_2195: int;
  var {:pointer} Tmp_2196: int;
  var {:pointer} Tmp_2197: int;
  var {:scalar} Tmp_2198: int;
  var {:pointer} Tmp_2199: int;
  var {:pointer} count: int;
  var {:pointer} Tmp_2200: int;
  var {:pointer} Tmp_2201: int;
  var {:pointer} Tmp_2202: int;
  var {:pointer} pdoExtension_18: int;
  var {:pointer} Tmp_2203: int;
  var {:scalar} Tmp_2204: int;
  var {:scalar} Tmp_2205: int;
  var {:pointer} Tmp_2206: int;
  var {:pointer} Tmp_2207: int;
  var {:pointer} Tmp_2208: int;
  var {:pointer} Tmp_2209: int;
  var {:pointer} Tmp_2210: int;
  var {:pointer} Tmp_2211: int;
  var {:pointer} Tmp_2212: int;
  var {:pointer} Tmp_2213: int;
  var {:scalar} Tmp_2214: int;
  var {:pointer} Tmp_2215: int;
  var {:pointer} irp_7: int;
  var {:scalar} Tmp_2217: int;
  var {:pointer} Tmp_2218: int;
  var {:scalar} Tmp_2219: int;
  var {:pointer} Tmp_2220: int;
  var {:scalar} Tmp_2221: int;
  var {:pointer} Tmp_2223: int;
  var {:pointer} Tmp_2224: int;
  var {:pointer} Tmp_2225: int;
  var {:pointer} Tmp_2227: int;
  var {:pointer} deviceRelations_1: int;
  var {:pointer} Tmp_2228: int;
  var {:pointer} Tmp_2229: int;
  var {:pointer} Tmp_2230: int;
  var {:scalar} Tmp_2231: int;
  var {:scalar} Tmp_2232: int;
  var {:scalar} Tmp_2233: int;
  var {:pointer} Tmp_2234: int;
  var {:pointer} Tmp_2235: int;
  var {:scalar} Tmp_2236: int;
  var {:pointer} Tmp_2237: int;
  var {:pointer} Tmp_2238: int;
  var {:pointer} Tmp_2239: int;
  var {:pointer} Tmp_2240: int;
  var {:pointer} Tmp_2241: int;
  var {:scalar} Tmp_2242: int;
  var {:pointer} deviceCapabilities_1: int;
  var {:pointer} Tmp_2243: int;
  var {:pointer} Tmp_2244: int;
  var {:pointer} Tmp_2245: int;
  var {:pointer} Tmp_2246: int;
  var {:scalar} Tmp_2247: int;
  var {:scalar} cIrql_10: int;
  var {:pointer} Tmp_2248: int;
  var {:pointer} Tmp_2249: int;
  var {:pointer} Tmp_2250: int;
  var {:scalar} reported: int;
  var {:pointer} Tmp_2251: int;
  var {:pointer} Tmp_2252: int;
  var {:pointer} Tmp_2253: int;
  var {:pointer} DeviceObject_37: int;
  var {:pointer} Irp_23: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_1070: int;
  var vslice_dummy_var_1071: int;
  var vslice_dummy_var_1072: int;
  var vslice_dummy_var_1073: int;
  var vslice_dummy_var_1074: int;
  var vslice_dummy_var_1075: int;
  var vslice_dummy_var_1076: int;
  var vslice_dummy_var_1077: int;
  var vslice_dummy_var_1078: int;
  var vslice_dummy_var_1079: int;
  var vslice_dummy_var_1080: int;
  var vslice_dummy_var_1081: int;
  var vslice_dummy_var_1082: int;
  var vslice_dummy_var_1083: int;

  anon0:
    call {:si_unique_call 1324} uniRetString := __HAVOC_malloc(12);
    DeviceObject_37 := actual_DeviceObject_37;
    Irp_23 := actual_Irp_23;
    call {:si_unique_call 1325} Tmp_2138 := __HAVOC_malloc(2680);
    call {:si_unique_call 1326} Tmp_2142 := __HAVOC_malloc(4);
    call {:si_unique_call 1327} Tmp_2148 := __HAVOC_malloc(4);
    call {:si_unique_call 1328} Tmp_2149 := __HAVOC_malloc(28);
    call {:si_unique_call 1329} Tmp_2150 := __HAVOC_malloc(4);
    call {:si_unique_call 1330} Tmp_2153 := __HAVOC_malloc(4);
    call {:si_unique_call 1331} Tmp_2155 := __HAVOC_malloc(4);
    call {:si_unique_call 1332} Tmp_2159 := __HAVOC_malloc(4);
    call {:si_unique_call 1333} Tmp_2167 := __HAVOC_malloc(2680);
    call {:si_unique_call 1334} Tmp_2168 := __HAVOC_malloc(4);
    call {:si_unique_call 1335} Tmp_2176 := __HAVOC_malloc(4);
    call {:si_unique_call 1336} Tmp_2177 := __HAVOC_malloc(4);
    call {:si_unique_call 1337} Tmp_2181 := __HAVOC_malloc(2680);
    call {:si_unique_call 1338} Tmp_2187 := __HAVOC_malloc(4);
    call {:si_unique_call 1339} Tmp_2190 := __HAVOC_malloc(4);
    call {:si_unique_call 1340} Tmp_2195 := __HAVOC_malloc(4);
    call {:si_unique_call 1341} Tmp_2197 := __HAVOC_malloc(4);
    call {:si_unique_call 1342} Tmp_2199 := __HAVOC_malloc(4);
    call {:si_unique_call 1343} Tmp_2201 := __HAVOC_malloc(28);
    call {:si_unique_call 1344} Tmp_2203 := __HAVOC_malloc(4);
    call {:si_unique_call 1345} Tmp_2206 := __HAVOC_malloc(2680);
    call {:si_unique_call 1346} Tmp_2207 := __HAVOC_malloc(4);
    call {:si_unique_call 1347} Tmp_2208 := __HAVOC_malloc(4);
    call {:si_unique_call 1348} Tmp_2215 := __HAVOC_malloc(4);
    call {:si_unique_call 1349} Tmp_2218 := __HAVOC_malloc(4);
    call {:si_unique_call 1350} Tmp_2220 := __HAVOC_malloc(4);
    call {:si_unique_call 1351} Tmp_2223 := __HAVOC_malloc(4);
    call {:si_unique_call 1352} Tmp_2227 := __HAVOC_malloc(4);
    call {:si_unique_call 1353} Tmp_2229 := __HAVOC_malloc(4);
    call {:si_unique_call 1354} Tmp_2235 := __HAVOC_malloc(4);
    call {:si_unique_call 1355} Tmp_2237 := __HAVOC_malloc(28);
    call {:si_unique_call 1356} Tmp_2244 := __HAVOC_malloc(28);
    call {:si_unique_call 1357} Tmp_2249 := __HAVOC_malloc(28);
    assume {:nonnull} DeviceObject_37 != 0;
    assume DeviceObject_37 > 0;
    pdoExtension_18 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_37)];
    call {:si_unique_call 1358} irpStack_17 := sdv_IoGetCurrentIrpStackLocation(Irp_23);
    DevInfo := 0;
    assume {:nonnull} DeviceObject_37 != 0;
    assume DeviceObject_37 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume Irp_23 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1359} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} yogi_error != 1;
    goto L881;

  L881:
    call {:si_unique_call 1360} sdv_IoCompleteRequest(0, 0);
    Tmp_2137 := -1073741810;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon431_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon430_Then:
    assume !(Irp_23 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L881;

  anon429_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    call {:si_unique_call 1361} status_64 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:partition} status_64 >= 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc DeviceInfo_6;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc Tmp_2164;
    call {:si_unique_call 1362} Sbp2AddLog(pdoExtension_18, 1, -798076866, Tmp_2164, 0);
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    status_64 := 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  L74:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1363} vslice_dummy_var_244 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_18), 0);
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume Irp_23 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1364} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} yogi_error != 1;
    goto L884;

  L884:
    call {:si_unique_call 1365} sdv_IoCompleteRequest(0, 0);
    Tmp_2137 := status_64;
    goto L1;

  anon434_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon340_Then:
    assume !(Irp_23 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L884;

  anon408_Then:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    goto L74;

  anon409_Then:
    reportedMissing := 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2169;
    assume {:nonnull} Tmp_2169 != 0;
    assume Tmp_2169 > 0;
    fdoExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2169)];
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc vslice_dummy_var_1070;
    call {:si_unique_call 1366} Sbp2AddLog(pdoExtension_18, 1, -747278254, fdoExtension_8, vslice_dummy_var_1070);
    call {:si_unique_call 1367} Tmp_2210 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 1368} sdv_KeAcquireSpinLock(0, Tmp_2210);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    reportedMissing := 0;
    goto L94;

  L94:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1369} vslice_dummy_var_259 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_18), 0, 0);
    call {:si_unique_call 1370} sdv_KeReleaseSpinLock(0, cIrql_10);
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:partition} reportedMissing != 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2192;
    assume {:nonnull} Tmp_2192 != 0;
    assume Tmp_2192 > 0;
    call {:si_unique_call 1371} vslice_dummy_var_260 := Sbp2EnableBusResetNotification#1(Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2192)], 0);
    goto anon489_Then, anon489_Else;

  anon489_Else:
    assume {:partition} yogi_error != 1;
    goto L103;

  L103:
    call {:si_unique_call 1372} Tmp_2210 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 1373} sdv_KeRaiseIrql(2, Tmp_2210);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1374} sdv_687 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_18), 0);
    irp_7 := sdv_687;
    goto anon490_Then, anon490_Else;

  anon490_Else:
    assume {:partition} irp_7 != 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc vslice_dummy_var_1071;
    call {:si_unique_call 1375} Sbp2StartIo#1(vslice_dummy_var_1071, irp_7);
    goto anon491_Then, anon491_Else;

  anon491_Else:
    assume {:partition} yogi_error != 1;
    goto L114;

  L114:
    call {:si_unique_call 1376} Sbp2StartNextPacketByKey#1(DeviceObject_37, 0);
    goto anon492_Then, anon492_Else;

  anon492_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1377} sdv_KeLowerIrql(cIrql_10);
    call {:si_unique_call 1378} vslice_dummy_var_245 := Sbp2CleanDeviceExtension#1(DeviceObject_37, 1, 0);
    goto anon493_Then, anon493_Else;

  anon493_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon493_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon492_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon491_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon490_Then:
    assume {:partition} irp_7 == 0;
    goto L114;

  anon489_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon342_Then:
    assume {:partition} reportedMissing == 0;
    goto L103;

  anon341_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon494_Then, anon494_Else;

  anon494_Else:
    reportedMissing := 1;
    goto L94;

  anon494_Then:
    goto L94;

  anon410_Then:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    count := HibernateCount__DEVICE_EXTENSION(pdoExtension_18);
    goto L134;

  L134:
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} count != 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc vslice_dummy_var_1072;
    call {:si_unique_call 1379} status_64 := Sbp2ForwardIrpSynchronous(vslice_dummy_var_1072, Irp_23);
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} status_64 >= 0;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc vslice_dummy_var_1073;
    call {:si_unique_call 1380} sdv_IoAdjustPagingPathCount(0, vslice_dummy_var_1073);
    goto L141;

  L141:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon344_Then:
    assume {:partition} 0 > status_64;
    goto L141;

  anon343_Then:
    assume {:partition} count == 0;
    status_64 := -1073741637;
    goto L141;

  anon428_Then:
    count := 0;
    goto L134;

  anon339_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    count := PagingPathCount__DEVICE_EXTENSION(pdoExtension_18);
    goto L134;

  anon411_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2227;
    assume {:nonnull} Tmp_2227 != 0;
    assume Tmp_2227 > 0;
    goto anon486_Then, anon486_Else;

  anon486_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc Tmp_2185;
    havoc Tmp_2154;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2163;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc vslice_dummy_var_1074;
    call {:si_unique_call 1381} WPP_SF_qqD(Tmp_2163, 90, Tmp_2154, pdoExtension_18, Tmp_2185, vslice_dummy_var_1074);
    goto L153;

  L153:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    goto L74;

  anon347_Then:
    goto L153;

  anon486_Then:
    goto L153;

  anon346_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L153;

  anon338_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    call {:si_unique_call 1382} Tmp_2210 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 1383} sdv_KeAcquireSpinLock(0, Tmp_2210);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1384} sdv_KeReleaseSpinLock(0, cIrql_10);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon487_Then, anon487_Else;

  anon487_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2195;
    assume {:nonnull} Tmp_2195 != 0;
    assume Tmp_2195 > 0;
    goto anon488_Then, anon488_Else;

  anon488_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc Tmp_2179;
    havoc Tmp_2171;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2172;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc vslice_dummy_var_1075;
    call {:si_unique_call 1385} WPP_SF_qqD(Tmp_2172, 91, Tmp_2171, pdoExtension_18, Tmp_2179, vslice_dummy_var_1075);
    goto L153;

  anon349_Then:
    goto L153;

  anon488_Then:
    goto L153;

  anon487_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L153;

  anon348_Then:
    goto L153;

  anon345_Then:
    goto L153;

  anon412_Then:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2220;
    assume {:nonnull} Tmp_2220 != 0;
    assume Tmp_2220 > 0;
    goto anon467_Then, anon467_Else;

  anon467_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    havoc Tmp_2152;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2143;
    call {:si_unique_call 1386} WPP_SF_(Tmp_2143, 76, Tmp_2152);
    goto L186;

  L186:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon468_Then, anon468_Else;

  anon468_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2155;
    assume {:nonnull} Tmp_2155 != 0;
    assume Tmp_2155 > 0;
    goto anon485_Then, anon485_Else;

  anon485_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    havoc Tmp_2211;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2221;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc vslice_dummy_var_1076;
    call {:si_unique_call 1387} WPP_SF_qD(Tmp_2221, 89, Tmp_2211, pdoExtension_18, vslice_dummy_var_1076);
    goto L361;

  L361:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    goto L239;

  L239:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon377_Then:
    goto L361;

  anon485_Then:
    goto L361;

  anon376_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L361;

  anon425_Then:
    goto anon352_Then, anon352_Else;

  anon352_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2148;
    assume {:nonnull} Tmp_2148 != 0;
    assume Tmp_2148 > 0;
    goto anon481_Then, anon481_Else;

  anon481_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    havoc Tmp_2140;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2217;
    call {:si_unique_call 1388} WPP_SF_(Tmp_2217, 86, Tmp_2140);
    goto L211;

  L211:
    call {:si_unique_call 1389} status_64 := Sbp2_BuildInstanceId(DeviceInfo_6, uniRetString);
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume {:partition} status_64 < 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2168;
    assume {:nonnull} Tmp_2168 != 0;
    assume Tmp_2168 > 0;
    goto anon484_Then, anon484_Else;

  anon484_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc Tmp_2182;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2231;
    call {:si_unique_call 1390} WPP_SF_D(Tmp_2231, 87, Tmp_2182, status_64);
    goto L239;

  anon357_Then:
    goto L239;

  anon484_Then:
    goto L239;

  anon356_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon354_Then:
    assume {:partition} 0 <= status_64;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon482_Then, anon482_Else;

  anon482_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon482_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2203;
    assume {:nonnull} Tmp_2203 != 0;
    assume Tmp_2203 > 0;
    goto anon483_Then, anon483_Else;

  anon483_Else:
    goto L239;

  anon483_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L239;

  anon355_Then:
    havoc Tmp_2183;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2233;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_1077;
    call {:si_unique_call 1391} WPP_SF_S(Tmp_2233, 88, Tmp_2183, vslice_dummy_var_1077);
    goto L239;

  anon353_Then:
    goto L211;

  anon481_Then:
    goto L211;

  anon352_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L211;

  anon426_Then:
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2190;
    assume {:nonnull} Tmp_2190 != 0;
    assume Tmp_2190 > 0;
    goto anon477_Then, anon477_Else;

  anon477_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    havoc Tmp_2241;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2157;
    call {:si_unique_call 1392} WPP_SF_(Tmp_2157, 83, Tmp_2241);
    goto L250;

  L250:
    call {:si_unique_call 1393} status_64 := Sbp2_BuildCompatIds(DeviceInfo_6, uniRetString);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} status_64 < 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2197;
    assume {:nonnull} Tmp_2197 != 0;
    assume Tmp_2197 > 0;
    goto anon480_Then, anon480_Else;

  anon480_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    havoc Tmp_2238;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2160;
    call {:si_unique_call 1394} WPP_SF_D(Tmp_2160, 84, Tmp_2238, status_64);
    goto L239;

  anon363_Then:
    goto L239;

  anon480_Then:
    goto L239;

  anon362_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon360_Then:
    assume {:partition} 0 <= status_64;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon478_Then, anon478_Else;

  anon478_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2229;
    assume {:nonnull} Tmp_2229 != 0;
    assume Tmp_2229 > 0;
    goto anon479_Then, anon479_Else;

  anon479_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc Tmp_2252;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2205;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_1078;
    call {:si_unique_call 1395} WPP_SF_S(Tmp_2205, 85, Tmp_2252, vslice_dummy_var_1078);
    goto L239;

  anon361_Then:
    goto L239;

  anon479_Then:
    goto L239;

  anon478_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon359_Then:
    goto L250;

  anon477_Then:
    goto L250;

  anon358_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L250;

  anon427_Then:
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2199;
    assume {:nonnull} Tmp_2199 != 0;
    assume Tmp_2199 > 0;
    goto anon473_Then, anon473_Else;

  anon473_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    havoc Tmp_2250;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2144;
    call {:si_unique_call 1396} WPP_SF_(Tmp_2144, 80, Tmp_2250);
    goto L287;

  L287:
    call {:si_unique_call 1397} status_64 := Sbp2_BuildHardwareIds(DeviceInfo_6, uniRetString);
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} status_64 < 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2142;
    assume {:nonnull} Tmp_2142 != 0;
    assume Tmp_2142 > 0;
    goto anon476_Then, anon476_Else;

  anon476_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    havoc Tmp_2228;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2180;
    call {:si_unique_call 1398} WPP_SF_D(Tmp_2180, 81, Tmp_2228, status_64);
    goto L239;

  anon369_Then:
    goto L239;

  anon476_Then:
    goto L239;

  anon368_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon366_Then:
    assume {:partition} 0 <= status_64;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon474_Then, anon474_Else;

  anon474_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2235;
    assume {:nonnull} Tmp_2235 != 0;
    assume Tmp_2235 > 0;
    goto anon475_Then, anon475_Else;

  anon475_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    havoc Tmp_2245;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2186;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_1079;
    call {:si_unique_call 1399} WPP_SF_S(Tmp_2186, 82, Tmp_2245, vslice_dummy_var_1079);
    goto L239;

  anon367_Then:
    goto L239;

  anon475_Then:
    goto L239;

  anon474_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon365_Then:
    goto L287;

  anon473_Then:
    goto L287;

  anon364_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L287;

  anon468_Then:
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2159;
    assume {:nonnull} Tmp_2159 != 0;
    assume Tmp_2159 > 0;
    goto anon469_Then, anon469_Else;

  anon469_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    havoc Tmp_2246;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2219;
    call {:si_unique_call 1400} WPP_SF_(Tmp_2219, 77, Tmp_2246);
    goto L324;

  L324:
    call {:si_unique_call 1401} status_64 := Sbp2_BuildDeviceId(DeviceInfo_6, uniRetString);
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:partition} status_64 < 0;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2187;
    assume {:nonnull} Tmp_2187 != 0;
    assume Tmp_2187 > 0;
    goto anon472_Then, anon472_Else;

  anon472_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    havoc Tmp_2202;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2141;
    call {:si_unique_call 1402} WPP_SF_D(Tmp_2141, 78, Tmp_2202, status_64);
    goto L239;

  anon375_Then:
    goto L239;

  anon472_Then:
    goto L239;

  anon374_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon372_Then:
    assume {:partition} 0 <= status_64;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon470_Then, anon470_Else;

  anon470_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2215;
    assume {:nonnull} Tmp_2215 != 0;
    assume Tmp_2215 > 0;
    goto anon471_Then, anon471_Else;

  anon471_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    havoc Tmp_2212;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2147;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_1080;
    call {:si_unique_call 1403} WPP_SF_S(Tmp_2147, 79, Tmp_2212, vslice_dummy_var_1080);
    goto L239;

  anon373_Then:
    goto L239;

  anon471_Then:
    goto L239;

  anon470_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L239;

  anon371_Then:
    goto L324;

  anon469_Then:
    goto L324;

  anon370_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L324;

  anon351_Then:
    goto L186;

  anon467_Then:
    goto L186;

  anon350_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L186;

  anon413_Then:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    status_64 := -1073741637;
    goto L375;

  L375:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon378_Then:
    goto L370;

  L370:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc vslice_dummy_var_1081;
    call {:si_unique_call 1404} status_64 := Sbp2_BuildDeviceText(vslice_dummy_var_1081, DeviceInfo_6, uniRetString);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    goto anon465_Then, anon465_Else;

  anon465_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2176;
    assume {:nonnull} Tmp_2176 != 0;
    assume Tmp_2176 > 0;
    goto anon466_Then, anon466_Else;

  anon466_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    havoc Tmp_2240;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2204;
    assume {:nonnull} uniRetString != 0;
    assume uniRetString > 0;
    havoc vslice_dummy_var_1082;
    call {:si_unique_call 1405} WPP_SF_qS(Tmp_2204, 75, Tmp_2240, pdoExtension_18, vslice_dummy_var_1082);
    goto L375;

  anon379_Then:
    goto L375;

  anon466_Then:
    goto L375;

  anon465_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L375;

  anon337_Then:
    goto L370;

  anon414_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2189;
    assume {:nonnull} Tmp_2189 != 0;
    assume Tmp_2189 > 0;
    fdoExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2189)];
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2162;
    assume {:nonnull} DeviceObject_37 != 0;
    assume DeviceObject_37 > 0;
    assume {:nonnull} Tmp_2162 != 0;
    assume Tmp_2162 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    goto L74;

  anon415_Then:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc deviceCapabilities_1;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2239;
    assume {:nonnull} Tmp_2239 != 0;
    assume Tmp_2239 > 0;
    goto anon463_Then, anon463_Else;

  anon463_Else:
    assume {:nonnull} Tmp_2239 != 0;
    assume Tmp_2239 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    goto L404;

  L404:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2249;
    assume {:nonnull} Tmp_2249 != 0;
    assume Tmp_2249 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2149;
    assume {:nonnull} Tmp_2149 != 0;
    assume Tmp_2149 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2237;
    assume {:nonnull} Tmp_2237 != 0;
    assume Tmp_2237 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2244;
    assume {:nonnull} Tmp_2244 != 0;
    assume Tmp_2244 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    havoc Tmp_2201;
    assume {:nonnull} Tmp_2201 != 0;
    assume Tmp_2201 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon423_Then:
    goto L398;

  L398:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2194;
    assume {:nonnull} Tmp_2194 != 0;
    assume Tmp_2194 > 0;
    goto anon464_Then, anon464_Else;

  anon464_Else:
    assume {:nonnull} Tmp_2194 != 0;
    assume Tmp_2194 > 0;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    goto L400;

  L400:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L404;

  anon424_Then:
    assume {:nonnull} deviceCapabilities_1 != 0;
    assume deviceCapabilities_1 > 0;
    goto L404;

  anon464_Then:
    goto L400;

  anon463_Then:
    goto L398;

  anon416_Then:
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2207;
    assume {:nonnull} Tmp_2207 != 0;
    assume Tmp_2207 > 0;
    goto anon461_Then, anon461_Else;

  anon461_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    havoc Tmp_2146;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2151;
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    havoc vslice_dummy_var_1083;
    call {:si_unique_call 1406} WPP_SF_qD(Tmp_2151, 74, Tmp_2146, pdoExtension_18, vslice_dummy_var_1083);
    goto L420;

  L420:
    assume {:nonnull} irpStack_17 != 0;
    assume irpStack_17 > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    goto L74;

  anon381_Then:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc deviceRelations_1;
    goto L435;

  L435:
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_2145;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    havoc Tmp_2153;
    assume {:nonnull} Tmp_2153 != 0;
    assume Tmp_2153 > 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    call {:si_unique_call 1407} vslice_dummy_var_258 := sdv_ObReferenceObject(0);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon383_Then:
    call {:si_unique_call 1408} sdv_697 := ExAllocatePoolWithTag(1, 8, 846226003);
    deviceRelations_1 := sdv_697;
    goto anon462_Then, anon462_Else;

  anon462_Else:
    assume {:partition} deviceRelations_1 != 0;
    assume {:nonnull} deviceRelations_1 != 0;
    assume deviceRelations_1 > 0;
    goto L435;

  anon462_Then:
    assume {:partition} deviceRelations_1 == 0;
    status_64 := -1073741670;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon382_Then:
    goto L420;

  anon461_Then:
    goto L420;

  anon380_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L420;

  anon417_Then:
    goto L58;

  L58:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    goto L74;

  anon418_Then:
    goto L58;

  anon419_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2234;
    assume {:nonnull} Tmp_2234 != 0;
    assume Tmp_2234 > 0;
    call {:si_unique_call 1409} vslice_dummy_var_257 := Sbp2EnableBusResetNotification#1(Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2234)], 0);
    goto anon457_Then, anon457_Else;

  anon457_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1410} vslice_dummy_var_246 := PoRegisterDeviceForIdleDetection(0, 0, 0, 4);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1411} Tmp_2210 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 1412} sdv_KeAcquireSpinLock(0, Tmp_2210);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1413} sdv_KeReleaseSpinLock(0, cIrql_10);
    call {:si_unique_call 1414} vslice_dummy_var_247 := KeCancelTimer(0);
    goto L469;

  L469:
    status_64 := 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon384_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1415} sdv_KeReleaseSpinLock(0, cIrql_10);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2156;
    assume {:nonnull} Tmp_2156 != 0;
    assume Tmp_2156 > 0;
    fdoExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2156)];
    call {:si_unique_call 1416} ExAcquireFastMutex(0);
    call {:si_unique_call 1417} vslice_dummy_var_248 := Sbp2ManagementTransaction#1(pdoExtension_18, 7, -1);
    goto anon458_Then, anon458_Else;

  anon458_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1418} ExReleaseFastMutex(0);
    call {:si_unique_call 1419} vslice_dummy_var_249 := Sbp2CleanDeviceExtension#1(DeviceObject_37, 0, 0);
    goto anon459_Then, anon459_Else;

  anon459_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1420} vslice_dummy_var_250 := Sbp2InitializeDeviceExtension#1(pdoExtension_18);
    goto anon460_Then, anon460_Else;

  anon460_Else:
    assume {:partition} yogi_error != 1;
    goto L469;

  anon460_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon459_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon458_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon457_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon420_Then:
    call {:si_unique_call 1421} Tmp_2210 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 1422} sdv_KeAcquireSpinLock(0, Tmp_2210);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1423} sdv_KeReleaseSpinLock(0, cIrql_10);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    goto L74;

  anon421_Then:
    status_64 := 0;
    call {:si_unique_call 1424} Tmp_2210 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 1425} sdv_KeAcquireSpinLock(0, Tmp_2210);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    call {:si_unique_call 1426} vslice_dummy_var_251 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1427} vslice_dummy_var_254 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_18), 0, 0);
    goto L504;

  L504:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    reported := 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2184;
    assume {:nonnull} Tmp_2184 != 0;
    assume Tmp_2184 > 0;
    fdoExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2184)];
    i_6 := 0;
    goto L517;

  L517:
    call {:si_unique_call 1428} Tmp_2138, i_6, Tmp_2174 := Sbp2PnpDeviceControl_loop_L517(Tmp_2138, i_6, Tmp_2174, fdoExtension_8, DeviceObject_37);
    goto L517_last;

  L517_last:
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    Tmp_2174 := i_6;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2138;
    assume {:nonnull} Tmp_2138 != 0;
    assume Tmp_2138 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    reported := 1;
    goto L518;

  L518:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1429} vslice_dummy_var_255 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_18), 0, 0);
    call {:si_unique_call 1430} sdv_KeReleaseSpinLock(0, cIrql_10);
    call {:si_unique_call 1431} Tmp_2210 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 1432} sdv_KeRaiseIrql(2, Tmp_2210);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    havoc cIrql_10;
    call {:si_unique_call 1433} Sbp2StartNextPacketByKey#1(DeviceObject_37, 0);
    goto anon437_Then, anon437_Else;

  anon437_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1434} sdv_KeLowerIrql(cIrql_10);
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2218;
    assume {:nonnull} Tmp_2218 != 0;
    assume Tmp_2218 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    havoc Tmp_2230;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2242;
    call {:si_unique_call 1435} WPP_SF_qq(Tmp_2242, 92, Tmp_2230, pdoExtension_18, DeviceObject_37);
    goto L542;

  L542:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1436} vslice_dummy_var_256 := KeCancelTimer(0);
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:partition} reported != 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume Irp_23 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1437} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    goto L887;

  L887:
    call {:si_unique_call 1438} sdv_IoCompleteRequest(0, 0);
    Tmp_2137 := 0;
    goto L1;

  anon440_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon439_Then:
    assume !(Irp_23 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L887;

  anon390_Then:
    assume {:partition} reported == 0;
    call {:si_unique_call 1439} sdv_IoReleaseRemoveLockAndWait(0, 0);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2243;
    assume {:nonnull} Tmp_2243 != 0;
    assume Tmp_2243 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2196;
    assume {:nonnull} Tmp_2196 != 0;
    assume Tmp_2196 > 0;
    call {:si_unique_call 1440} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2178;
    assume {:nonnull} Tmp_2178 != 0;
    assume Tmp_2178 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2251;
    assume {:nonnull} Tmp_2251 != 0;
    assume Tmp_2251 > 0;
    goto L563;

  L563:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2139;
    assume {:nonnull} Tmp_2139 != 0;
    assume Tmp_2139 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2213;
    assume {:nonnull} Tmp_2213 != 0;
    assume Tmp_2213 > 0;
    call {:si_unique_call 1441} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2253;
    assume {:nonnull} Tmp_2253 != 0;
    assume Tmp_2253 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2173;
    assume {:nonnull} Tmp_2173 != 0;
    assume Tmp_2173 > 0;
    goto L569;

  L569:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2188;
    assume {:nonnull} Tmp_2188 != 0;
    assume Tmp_2188 > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2224;
    assume {:nonnull} Tmp_2224 != 0;
    assume Tmp_2224 > 0;
    call {:si_unique_call 1442} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2175;
    assume {:nonnull} Tmp_2175 != 0;
    assume Tmp_2175 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2165;
    assume {:nonnull} Tmp_2165 != 0;
    assume Tmp_2165 > 0;
    goto L575;

  L575:
    call {:si_unique_call 1443} Tmp_2210 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 1444} sdv_KeAcquireSpinLock(0, Tmp_2210);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    havoc cIrql_10;
    i_6 := 0;
    goto L584;

  L584:
    call {:si_unique_call 1445} i_6, Tmp_2167, Tmp_2206, Tmp_2232, Tmp_2247 := Sbp2PnpDeviceControl_loop_L584(i_6, Tmp_2167, fdoExtension_8, Tmp_2206, Tmp_2232, Tmp_2247, DeviceObject_37);
    goto L584_last;

  L584_last:
    Tmp_2247 := i_6;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2167;
    assume {:nonnull} Tmp_2167 != 0;
    assume Tmp_2167 > 0;
    goto anon444_Then, anon444_Else;

  anon444_Else:
    Tmp_2232 := i_6;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2206;
    assume {:nonnull} Tmp_2206 != 0;
    assume Tmp_2206 > 0;
    goto anon445_Then, anon445_Else;

  anon445_Else:
    Tmp_2198 := i_6;
    assume {:nonnull} fdoExtension_8 != 0;
    assume fdoExtension_8 > 0;
    havoc Tmp_2181;
    DevInfo := Tmp_2181 + Tmp_2198 * 268;
    goto L585;

  L585:
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:partition} DevInfo != 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon446_Then, anon446_Else;

  anon446_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1446} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L595;

  L595:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1447} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L601;

  L601:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    call {:si_unique_call 1448} sdv_ExFreePool(0);
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    assume {:nonnull} DevInfo != 0;
    assume DevInfo > 0;
    goto L590;

  L590:
    call {:si_unique_call 1449} sdv_KeReleaseSpinLock(0, cIrql_10);
    call {:si_unique_call 1450} IoDeleteDevice(0);
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2150;
    assume {:nonnull} Tmp_2150 != 0;
    assume Tmp_2150 > 0;
    goto anon447_Then, anon447_Else;

  anon447_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    havoc Tmp_2200;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2214;
    call {:si_unique_call 1451} WPP_SF_qq(Tmp_2214, 93, Tmp_2200, pdoExtension_18, DeviceObject_37);
    goto L619;

  L619:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon448_Then, anon448_Else;

  anon448_Else:
    assume Irp_23 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1452} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon449_Then, anon449_Else;

  anon449_Else:
    assume {:partition} yogi_error != 1;
    goto L890;

  L890:
    call {:si_unique_call 1453} sdv_IoCompleteRequest(0, 0);
    Tmp_2137 := status_64;
    goto L1;

  anon449_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon448_Then:
    assume !(Irp_23 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L890;

  anon395_Then:
    goto L619;

  anon447_Then:
    goto L619;

  anon394_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L619;

  anon393_Then:
    goto L590;

  anon392_Then:
    goto L601;

  anon446_Then:
    goto L595;

  anon391_Then:
    assume {:partition} DevInfo == 0;
    goto L590;

  anon445_Then:
    i_6 := i_6 + 1;
    goto anon445_Then_dummy;

  anon445_Then_dummy:
    assume false;
    return;

  anon444_Then:
    goto L585;

  anon443_Then:
    goto L575;

  anon442_Then:
    goto L569;

  anon441_Then:
    goto L563;

  anon389_Then:
    goto L542;

  anon438_Then:
    goto L542;

  anon388_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L542;

  anon437_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon436_Then:
    i_6 := i_6 + 1;
    goto anon436_Then_dummy;

  anon436_Then_dummy:
    assume false;
    return;

  anon387_Then:
    goto L518;

  anon385_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2223;
    assume {:nonnull} Tmp_2223 != 0;
    assume Tmp_2223 > 0;
    goto anon450_Then, anon450_Else;

  anon450_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    havoc Tmp_2225;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2236;
    call {:si_unique_call 1454} WPP_SF_q(Tmp_2236, 94, Tmp_2225, pdoExtension_18);
    goto L638;

  L638:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    havoc Tmp_2248;
    assume {:nonnull} Tmp_2248 != 0;
    assume Tmp_2248 > 0;
    fdoExtension_8 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2248)];
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon451_Then, anon451_Else;

  anon451_Else:
    call {:si_unique_call 1455} vslice_dummy_var_252 := KeCancelTimer(0);
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto L647;

  L647:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1456} sdv_KeReleaseSpinLock(0, cIrql_10);
    call {:si_unique_call 1457} ExAcquireFastMutex(0);
    call {:si_unique_call 1458} vslice_dummy_var_253 := Sbp2ManagementTransaction#1(pdoExtension_18, 7, -1);
    goto anon452_Then, anon452_Else;

  anon452_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1459} ExReleaseFastMutex(0);
    call {:si_unique_call 1460} Tmp_2210 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 1461} sdv_KeAcquireSpinLock(0, Tmp_2210);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    havoc cIrql_10;
    goto L633;

  L633:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto L669;

  L669:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1462} sdv_KeReleaseSpinLock(0, cIrql_10);
    call {:si_unique_call 1463} sdv_693 := Sbp2CleanDeviceExtension#1(DeviceObject_37, 1, 0);
    goto anon453_Then, anon453_Else;

  anon453_Else:
    assume {:partition} yogi_error != 1;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:partition} sdv_693 == 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2208;
    assume {:nonnull} Tmp_2208 != 0;
    assume Tmp_2208 > 0;
    goto anon454_Then, anon454_Else;

  anon454_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    havoc Tmp_2158;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2170;
    call {:si_unique_call 1464} WPP_SF_q(Tmp_2170, 96, Tmp_2158, pdoExtension_18);
    goto L680;

  L680:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon403_Then:
    goto L680;

  anon454_Then:
    goto L680;

  anon402_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L680;

  anon401_Then:
    assume {:partition} sdv_693 != 0;
    goto L680;

  anon453_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon452_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon400_Then:
    goto L633;

  anon451_Then:
    goto L647;

  anon399_Then:
    goto L638;

  anon450_Then:
    goto L638;

  anon398_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L638;

  anon397_Then:
    goto L633;

  anon386_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon455_Then, anon455_Else;

  anon455_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2177;
    assume {:nonnull} Tmp_2177 != 0;
    assume Tmp_2177 > 0;
    goto anon456_Then, anon456_Else;

  anon456_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    havoc Tmp_2209;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2166;
    call {:si_unique_call 1465} WPP_SF_q(Tmp_2166, 95, Tmp_2209, pdoExtension_18);
    goto L669;

  anon404_Then:
    goto L669;

  anon456_Then:
    goto L669;

  anon455_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L669;

  anon396_Then:
    goto L669;

  anon435_Then:
    goto L504;

  anon422_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    goto L704;

  L704:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    goto L74;

  anon336_Then:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    call {:si_unique_call 1466} Tmp_2210 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    call {:si_unique_call 1467} sdv_KeAcquireSpinLock(0, Tmp_2210);
    assume {:nonnull} Tmp_2210 != 0;
    assume Tmp_2210 > 0;
    havoc cIrql_10;
    assume {:nonnull} pdoExtension_18 != 0;
    assume pdoExtension_18 > 0;
    call {:si_unique_call 1468} sdv_KeReleaseSpinLock(0, cIrql_10);
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    havoc status_64;
    goto L74;

  anon406_Then:
    goto L704;

  anon405_Then:
    goto L704;

  anon335_Then:
    call {:si_unique_call 1469} status_64 := Sbp2StartDevice(DeviceObject_37);
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto L74;

  anon433_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon334_Then:
    assume {:partition} 0 > status_64;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon495_Then, anon495_Else;

  anon495_Else:
    assume Irp_23 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1470} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon496_Then, anon496_Else;

  anon496_Else:
    assume {:partition} yogi_error != 1;
    goto L893;

  L893:
    call {:si_unique_call 1471} sdv_IoCompleteRequest(0, 0);
    Tmp_2137 := status_64;
    goto L1;

  anon496_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon495_Then:
    assume !(Irp_23 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L893;

  anon407_Then:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    goto anon497_Then, anon497_Else;

  anon497_Else:
    assume Irp_23 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1472} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon498_Then, anon498_Else;

  anon498_Else:
    assume {:partition} yogi_error != 1;
    goto L896;

  L896:
    call {:si_unique_call 1473} sdv_IoCompleteRequest(0, 0);
    Tmp_2137 := -1073741810;
    goto L1;

  anon498_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon497_Then:
    assume !(Irp_23 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L896;

  anon333_Then:
    call {:si_unique_call 1474} Tmp_2137 := Sbp2FDOPnpDeviceControl(DeviceObject_37, Irp_23);
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon432_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_7: int, actual_uniDeviceId: int) returns (Tmp_2254: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2254 == -1073741670 || Tmp_2254 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2_BuildDeviceId"} Sbp2_BuildDeviceId(actual_DeviceInfo_7: int, actual_uniDeviceId: int) returns (Tmp_2254: int)
{
  var {:scalar} Tmp_2255: int;
  var {:pointer} Tmp_2256: int;
  var {:pointer} sdv_714: int;
  var {:scalar} Tmp_2257: int;
  var {:scalar} Tmp_2258: int;
  var {:pointer} Tmp_2259: int;
  var {:pointer} Tmp_2260: int;
  var {:scalar} Tmp_2261: int;
  var {:pointer} Tmp_2262: int;
  var {:scalar} Tmp_2263: int;
  var {:pointer} Tmp_2264: int;
  var {:scalar} Tmp_2265: int;
  var {:pointer} Tmp_2266: int;
  var {:scalar} Tmp_2267: int;
  var {:scalar} status_65: int;
  var {:pointer} Tmp_2268: int;
  var {:pointer} DeviceInfo_7: int;
  var {:pointer} uniDeviceId: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_1084: int;
  var vslice_dummy_var_1085: int;
  var vslice_dummy_var_1086: int;

  anon0:
    DeviceInfo_7 := actual_DeviceInfo_7;
    uniDeviceId := actual_uniDeviceId;
    call {:si_unique_call 1475} Tmp_2259 := __HAVOC_malloc(4);
    call {:si_unique_call 1476} Tmp_2260 := __HAVOC_malloc(100);
    call {:si_unique_call 1477} Tmp_2266 := __HAVOC_malloc(76);
    call {:si_unique_call 1478} Tmp_2268 := __HAVOC_malloc(160);
    status_65 := 0;
    call {:si_unique_call 1479} sdv_do_paged_code_check();
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2261;
    call {:si_unique_call 1480} sdv_714 := ExAllocatePoolWithTag(1, Tmp_2261, -498638253);
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2259;
    assume {:nonnull} Tmp_2259 != 0;
    assume Tmp_2259 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_2256;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2265;
    call {:si_unique_call 1481} WPP_SF_(Tmp_2265, 102, Tmp_2256);
    goto L49;

  L49:
    status_65 := -1073741670;
    goto L38;

  L38:
    Tmp_2254 := status_65;
    return;

  anon21_Then:
    goto L49;

  anon24_Then:
    goto L49;

  anon20_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon22_Then:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2257;
    call {:si_unique_call 1482} sdv_RtlZeroMemory(0, Tmp_2257);
    call {:si_unique_call 1483} Sbp2CreateNiveusId(DeviceInfo_7);
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2267;
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2262;
    goto L34;

  L34:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2255;
    Tmp_2260 := strConst__li2bpl45;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_1084;
    call {:si_unique_call 1484} vslice_dummy_var_261 := RtlStringCbPrintfW(vslice_dummy_var_1084, Tmp_2255, Tmp_2260);
    goto L38;

  anon23_Then:
    Tmp_2262 := strConst__li2bpl32;
    goto L34;

  anon18_Then:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} DeviceInfo_7 != 0;
    assume DeviceInfo_7 > 0;
    havoc Tmp_2264;
    goto L41;

  L41:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2258;
    Tmp_2266 := strConst__li2bpl46;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_1085;
    call {:si_unique_call 1485} vslice_dummy_var_262 := RtlStringCbPrintfW(vslice_dummy_var_1085, Tmp_2258, Tmp_2266);
    goto L38;

  anon19_Then:
    Tmp_2264 := strConst__li2bpl32;
    goto L41;

  anon17_Then:
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc Tmp_2263;
    Tmp_2268 := strConst__li2bpl47;
    assume {:nonnull} uniDeviceId != 0;
    assume uniDeviceId > 0;
    havoc vslice_dummy_var_1086;
    call {:si_unique_call 1486} vslice_dummy_var_263 := RtlStringCbPrintfW(vslice_dummy_var_1086, Tmp_2263, Tmp_2268);
    goto L38;
}



procedure {:origName "WPP_SF_qSD"} WPP_SF_qSD(actual_Logger_29: int, actual_id_29: int, actual_TraceGuid_29: int, actual_s_p_e_c_i_a_l_104: int, actual_s_p_e_c_i_a_l_105: int, actual_s_p_e_c_i_a_l_106: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qSD"} WPP_SF_qSD(actual_Logger_29: int, actual_id_29: int, actual_TraceGuid_29: int, actual_s_p_e_c_i_a_l_104: int, actual_s_p_e_c_i_a_l_105: int, actual_s_p_e_c_i_a_l_106: int)
{
  var {:scalar} Tmp_2276: int;
  var {:scalar} sdv_719: int;
  var {:pointer} Tmp_2277: int;
  var {:pointer} TraceGuid_29: int;
  var {:pointer} s_p_e_c_i_a_l_105: int;
  var vslice_dummy_var_264: int;

  anon0:
    call {:si_unique_call 1487} vslice_dummy_var_264 := __HAVOC_malloc(4);
    TraceGuid_29 := actual_TraceGuid_29;
    s_p_e_c_i_a_l_105 := actual_s_p_e_c_i_a_l_105;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_105 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_105 != 0;
    assume s_p_e_c_i_a_l_105 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2276 := (sdv_719 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_105 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_105 != 0;
    assume s_p_e_c_i_a_l_105 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2277 := s_p_e_c_i_a_l_105;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2277 := strConst__li2bpl2;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_105 == 0;
    goto L18;

  anon10_Then:
    Tmp_2276 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_105 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_D"} WPP_SF_D(actual_Logger_30: int, actual_id_30: int, actual_TraceGuid_30: int, actual_s_p_e_c_i_a_l_107: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_D"} WPP_SF_D(actual_Logger_30: int, actual_id_30: int, actual_TraceGuid_30: int, actual_s_p_e_c_i_a_l_107: int)
{
  var {:pointer} TraceGuid_30: int;
  var vslice_dummy_var_265: int;

  anon0:
    call {:si_unique_call 1488} vslice_dummy_var_265 := __HAVOC_malloc(4);
    TraceGuid_30 := actual_TraceGuid_30;
    return;
}



procedure {:origName "Sbp2CreateClose"} Sbp2CreateClose(actual_DeviceObject_38: int, actual_Irp_24: int) returns (Tmp_2286: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2CreateClose"} Sbp2CreateClose(actual_DeviceObject_38: int, actual_Irp_24: int) returns (Tmp_2286: int)
{
  var {:pointer} Tmp_2287: int;
  var {:pointer} irpStack_18: int;
  var {:scalar} waitValue_4: int;
  var {:scalar} Tmp_2288: int;
  var {:pointer} pdoExtension_19: int;
  var {:scalar} Tmp_2289: int;
  var {:pointer} Tmp_2290: int;
  var {:pointer} Tmp_2291: int;
  var {:pointer} Tmp_2292: int;
  var {:pointer} Tmp_2293: int;
  var {:pointer} Tmp_2294: int;
  var {:scalar} Tmp_2295: int;
  var {:scalar} Tmp_2296: int;
  var {:pointer} Tmp_2297: int;
  var {:pointer} Tmp_2298: int;
  var {:scalar} cIrql_11: int;
  var {:scalar} status_66: int;
  var {:pointer} Tmp_2299: int;
  var {:pointer} DeviceObject_38: int;
  var {:pointer} Irp_24: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_1087: int;
  var vslice_dummy_var_1088: int;
  var vslice_dummy_var_1089: int;

  anon0:
    call {:si_unique_call 1489} waitValue_4 := __HAVOC_malloc(20);
    DeviceObject_38 := actual_DeviceObject_38;
    Irp_24 := actual_Irp_24;
    call {:si_unique_call 1490} Tmp_2290 := __HAVOC_malloc(4);
    call {:si_unique_call 1491} Tmp_2292 := __HAVOC_malloc(4);
    call {:si_unique_call 1492} Tmp_2293 := __HAVOC_malloc(4);
    call {:si_unique_call 1493} Tmp_2299 := __HAVOC_malloc(4);
    status_66 := 0;
    call {:si_unique_call 1494} irpStack_18 := sdv_IoGetCurrentIrpStackLocation(Irp_24);
    assume {:nonnull} DeviceObject_38 != 0;
    assume DeviceObject_38 > 0;
    pdoExtension_19 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_38)];
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L17;

  L17:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto L21;

  L21:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume Irp_24 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1495} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} yogi_error != 1;
    goto L188;

  L188:
    call {:si_unique_call 1496} sdv_IoCompleteRequest(0, 0);
    Tmp_2286 := status_66;
    goto LM2;

  LM2:
    return;

  anon91_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon90_Then:
    assume !(Irp_24 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L188;

  anon70_Then:
    call {:si_unique_call 1497} status_66 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_66 >= 0;
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} irpStack_18 != 0;
    assume irpStack_18 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L44;

  L44:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2299;
    assume {:nonnull} Tmp_2299 != 0;
    assume Tmp_2299 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    havoc Tmp_2297;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2289;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_1087;
    call {:si_unique_call 1498} WPP_SF_qd(Tmp_2289, 71, Tmp_2297, pdoExtension_19, vslice_dummy_var_1087);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2293;
    assume {:nonnull} Tmp_2293 != 0;
    assume Tmp_2293 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    havoc Tmp_2294;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2295;
    call {:si_unique_call 1499} WPP_SF_q(Tmp_2295, 72, Tmp_2294, pdoExtension_19);
    goto L59;

  L59:
    call {:si_unique_call 1500} Tmp_2291 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    call {:si_unique_call 1501} sdv_KeAcquireSpinLock(0, Tmp_2291);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    havoc cIrql_11;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1502} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 1503} vslice_dummy_var_267 := Sbp2ManagementTransaction#1(pdoExtension_19, 7, -1);
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1504} CleanupOrbList#1(pdoExtension_19, -1073741248);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} yogi_error != 1;
    goto L31;

  L31:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1505} vslice_dummy_var_266 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_19), 0);
    goto L21;

  anon99_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon98_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    goto L59;

  anon97_Then:
    goto L59;

  anon78_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L59;

  anon77_Then:
    goto L31;

  anon75_Then:
    goto L31;

  anon76_Then:
    goto L45;

  anon96_Then:
    goto L45;

  anon74_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon73_Then:
    call {:si_unique_call 1506} Tmp_2291 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1507} vslice_dummy_var_272 := sdv_InterlockedDecrement(Tmp_2291);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto L44;

  anon88_Then:
    goto L31;

  anon72_Then:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2290;
    assume {:nonnull} Tmp_2290 != 0;
    assume Tmp_2290 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    havoc Tmp_2298;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2296;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_1088;
    call {:si_unique_call 1508} WPP_SF_qd(Tmp_2296, 69, Tmp_2298, pdoExtension_19, vslice_dummy_var_1088);
    goto L81;

  L81:
    call {:si_unique_call 1509} Tmp_2291 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    call {:si_unique_call 1510} sdv_KeAcquireSpinLock(0, Tmp_2291);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    havoc cIrql_11;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    call {:si_unique_call 1511} sdv_KeReleaseSpinLock(0, cIrql_11);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2292;
    assume {:nonnull} Tmp_2292 != 0;
    assume Tmp_2292 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    havoc Tmp_2287;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2288;
    call {:si_unique_call 1512} WPP_SF_q(Tmp_2288, 70, Tmp_2287, pdoExtension_19);
    goto L102;

  L102:
    call {:si_unique_call 1513} status_66 := Sbp2ManagementTransaction#1(pdoExtension_19, 0, -1);
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} yogi_error != 1;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} status_66 == 259;
    assume {:nonnull} waitValue_4 != 0;
    assume waitValue_4 > 0;
    call {:si_unique_call 1514} vslice_dummy_var_269 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_4);
    call {:si_unique_call 1515} Tmp_2291 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    call {:si_unique_call 1516} sdv_KeAcquireSpinLock(0, Tmp_2291);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    havoc cIrql_11;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    status_66 := -1073741823;
    goto L126;

  L126:
    call {:si_unique_call 1517} sdv_KeReleaseSpinLock(0, cIrql_11);
    goto L114;

  L114:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} status_66 == 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    havoc vslice_dummy_var_1089;
    call {:si_unique_call 1518} vslice_dummy_var_268 := Sbp2Reset#1(vslice_dummy_var_1089, 1);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1519} Tmp_2291 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    call {:si_unique_call 1520} sdv_KeAcquireSpinLock(0, Tmp_2291);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    havoc cIrql_11;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1521} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 1522} Tmp_2291 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1523} vslice_dummy_var_270 := sdv_InterlockedIncrement(Tmp_2291);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto L31;

  anon95_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    assume {:partition} status_66 != 0;
    goto L31;

  anon87_Then:
    status_66 := 0;
    goto L126;

  anon85_Then:
    assume {:partition} status_66 != 259;
    goto L114;

  anon94_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon84_Then:
    goto L102;

  anon93_Then:
    goto L102;

  anon83_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L102;

  anon82_Then:
    call {:si_unique_call 1524} sdv_KeReleaseSpinLock(0, cIrql_11);
    call {:si_unique_call 1525} Tmp_2291 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    call {:si_unique_call 1526} vslice_dummy_var_271 := sdv_InterlockedIncrement(Tmp_2291);
    assume {:nonnull} Tmp_2291 != 0;
    assume Tmp_2291 > 0;
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto L31;

  anon81_Then:
    goto L81;

  anon92_Then:
    goto L81;

  anon80_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L81;

  anon71_Then:
    assume {:partition} 0 > status_66;
    goto L21;

  anon68_Then:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto L21;

  anon69_Then:
    goto L17;

  anon89_Then:
    assume {:nonnull} pdoExtension_19 != 0;
    assume pdoExtension_19 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    status_66 := -1073741810;
    goto L21;

  anon67_Then:
    goto L21;
}



procedure {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_4: int, actual_cbDest_1: int, actual_pszFormat_2: int) returns (Tmp_2300: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2300 == 0 || Tmp_2300 == 5 || Tmp_2300 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlStringCbPrintfW"} RtlStringCbPrintfW(actual_pszDest_4: int, actual_cbDest_1: int, actual_pszFormat_2: int) returns (Tmp_2300: int)
{
  var {:scalar} cchDest_4: int;
  var {:pointer} argList_2: int;
  var {:scalar} status_67: int;
  var {:pointer} pszDest_4: int;
  var {:scalar} cbDest_1: int;
  var {:pointer} pszFormat_2: int;
  var vslice_dummy_var_1090: int;

  anon0:
    pszDest_4 := actual_pszDest_4;
    cbDest_1 := actual_cbDest_1;
    call {:si_unique_call 1527} pszFormat_2 := __HAVOC_malloc(4);
    cchDest_4 := INTDIV(cbDest_1, 2);
    call {:si_unique_call 1528} status_67 := RtlStringValidateDestW_sdv_static_function_1(pszDest_4, cchDest_4, -1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_67 >= 0;
    argList_2 := pszFormat_2;
    assume {:nonnull} pszFormat_2 != 0;
    assume pszFormat_2 > 0;
    havoc vslice_dummy_var_1090;
    call {:si_unique_call 1529} status_67 := RtlStringVPrintfWorkerW_sdv_static_function_1(pszDest_4, cchDest_4, 0, vslice_dummy_var_1090, argList_2);
    argList_2 := 0;
    goto L19;

  L19:
    Tmp_2300 := status_67;
    return;

  anon5_Then:
    assume {:partition} 0 > status_67;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} cchDest_4 > 0;
    assume {:nonnull} pszDest_4 != 0;
    assume pszDest_4 > 0;
    goto L19;

  anon6_Then:
    assume {:partition} 0 >= cchDest_4;
    goto L19;
}



procedure {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension_6: int, actual_DeviceInfo_8: int, actual_InstanceNumber_1: int) returns (Tmp_2302: int);
  modifies alloc, Mem_T.LogStart__DEBUG_LOG, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2CreatePdo"} Sbp2CreatePdo(actual_FdoExtension_6: int, actual_DeviceInfo_8: int, actual_InstanceNumber_1: int) returns (Tmp_2302: int)
{
  var {:pointer} Tmp_2303: int;
  var {:scalar} Tmp_2304: int;
  var {:pointer} Tmp_2307: int;
  var {:pointer} Tmp_2308: int;
  var {:pointer} Tmp_2309: int;
  var {:scalar} size_2: int;
  var {:scalar} Tmp_2310: int;
  var {:pointer} symlinkBuffer_1: int;
  var {:pointer} Tmp_2312: int;
  var {:pointer} pdoExtension_20: int;
  var {:scalar} uniDeviceName_1: int;
  var {:pointer} Tmp_2313: int;
  var {:scalar} Tmp_2315: int;
  var {:pointer} Tmp_2316: int;
  var {:scalar} sdv_738: int;
  var {:pointer} Tmp_2317: int;
  var {:pointer} sdv_739: int;
  var {:scalar} Tmp_2319: int;
  var {:scalar} devType_1: int;
  var {:scalar} Tmp_2320: int;
  var {:pointer} sdv_740: int;
  var {:pointer} sdv_741: int;
  var {:scalar} sdv_742: int;
  var {:pointer} Tmp_2324: int;
  var {:scalar} sdv_745: int;
  var {:pointer} Tmp_2326: int;
  var {:scalar} sdv_747: int;
  var {:scalar} sdv_748: int;
  var {:pointer} Tmp_2328: int;
  var {:pointer} Tmp_2331: int;
  var {:pointer} Tmp_2332: int;
  var {:scalar} Tmp_2333: int;
  var {:pointer} Tmp_2334: int;
  var {:scalar} status_68: int;
  var {:pointer} devnameBuffer: int;
  var {:pointer} Tmp_2336: int;
  var {:pointer} Tmp_2337: int;
  var {:pointer} Tmp_2338: int;
  var {:pointer} Tmp_2339: int;
  var {:pointer} Tmp_2340: int;
  var {:pointer} Tmp_2341: int;
  var {:pointer} Tmp_2344: int;
  var {:scalar} sdv_757: int;
  var {:pointer} FdoExtension_6: int;
  var {:pointer} DeviceInfo_8: int;
  var {:scalar} InstanceNumber_1: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_1091: int;

  anon0:
    call {:si_unique_call 1530} uniDeviceName_1 := __HAVOC_malloc(12);
    FdoExtension_6 := actual_FdoExtension_6;
    DeviceInfo_8 := actual_DeviceInfo_8;
    InstanceNumber_1 := actual_InstanceNumber_1;
    call {:si_unique_call 1531} vslice_dummy_var_273 := __HAVOC_malloc(56);
    call {:si_unique_call 1532} vslice_dummy_var_274 := __HAVOC_malloc(44);
    call {:si_unique_call 1533} vslice_dummy_var_275 := __HAVOC_malloc(56);
    call {:si_unique_call 1534} Tmp_2312 := __HAVOC_malloc(272);
    call {:si_unique_call 1535} Tmp_2313 := __HAVOC_malloc(180);
    call {:si_unique_call 1536} vslice_dummy_var_276 := __HAVOC_malloc(36);
    call {:si_unique_call 1537} Tmp_2317 := __HAVOC_malloc(4);
    call {:si_unique_call 1538} vslice_dummy_var_277 := __HAVOC_malloc(32);
    call {:si_unique_call 1539} vslice_dummy_var_278 := __HAVOC_malloc(8);
    call {:si_unique_call 1540} vslice_dummy_var_279 := __HAVOC_malloc(56);
    call {:si_unique_call 1541} vslice_dummy_var_280 := __HAVOC_malloc(44);
    call {:si_unique_call 1542} vslice_dummy_var_281 := __HAVOC_malloc(44);
    call {:si_unique_call 1543} vslice_dummy_var_282 := __HAVOC_malloc(8);
    call {:si_unique_call 1544} vslice_dummy_var_283 := __HAVOC_malloc(8);
    call {:si_unique_call 1545} Tmp_2331 := __HAVOC_malloc(4);
    call {:si_unique_call 1546} Tmp_2334 := __HAVOC_malloc(4);
    call {:si_unique_call 1547} vslice_dummy_var_284 := __HAVOC_malloc(8);
    call {:si_unique_call 1548} Tmp_2338 := __HAVOC_malloc(4);
    call {:si_unique_call 1549} Tmp_2339 := __HAVOC_malloc(188);
    call {:si_unique_call 1550} vslice_dummy_var_285 := __HAVOC_malloc(8);
    call {:si_unique_call 1551} vslice_dummy_var_286 := __HAVOC_malloc(44);
    call {:si_unique_call 1552} vslice_dummy_var_287 := __HAVOC_malloc(32);
    call {:si_unique_call 1553} vslice_dummy_var_288 := __HAVOC_malloc(8);
    devnameBuffer := 0;
    symlinkBuffer_1 := 0;
    call {:si_unique_call 1554} sdv_do_paged_code_check();
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    goto L18;

  L18:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    devType_1 := 25;
    goto L24;

  L24:
    size_2 := 2560;
    call {:si_unique_call 1555} sdv_739 := ExAllocatePoolWithTag(512, size_2, -330079661);
    devnameBuffer := sdv_739;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} devnameBuffer != 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2308;
    goto L44;

  L44:
    Tmp_2339 := strConst__li2bpl49;
    call {:si_unique_call 1556} status_68 := RtlStringCbPrintfW(devnameBuffer, size_2, Tmp_2339);
    goto L48;

  L48:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} status_68 >= 0;
    call {:si_unique_call 1557} RtlInitUnicodeString(uniDeviceName_1, devnameBuffer);
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    call {:si_unique_call 1558} status_68 := IoCreateDevice(0, 5256, 0, devType_1, 0, 0, DeviceObject__DEVICE_INFORMATION(DeviceInfo_8));
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} status_68 >= 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2341;
    assume {:nonnull} Tmp_2341 != 0;
    assume Tmp_2341 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2326;
    assume {:nonnull} Tmp_2326 != 0;
    assume Tmp_2326 > 0;
    goto L64;

  L64:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2324;
    assume {:nonnull} Tmp_2324 != 0;
    assume Tmp_2324 > 0;
    pdoExtension_20 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2324)];
    call {:si_unique_call 1559} sdv_RtlZeroMemory(0, 1160);
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    havoc Tmp_2337;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} Tmp_2337 != 0;
    assume Tmp_2337 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1560} KeInitializeEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_20), 0, 0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1561} KeInitializeEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_20), 0, 0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1562} Tmp_2328 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2328 != 0;
    assume Tmp_2328 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1563} sdv_KeInitializeSpinLock(Tmp_2328);
    assume {:nonnull} Tmp_2328 != 0;
    assume Tmp_2328 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1564} sdv_IoInitializeRemoveLock(0, 846226003, 2, 8192);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1565} Sbp2AllocateLog(pdoExtension_20);
    call {:si_unique_call 1566} Sbp2AddLog(pdoExtension_20, 1, -917616300, pdoExtension_20, 0);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2310;
    call {:si_unique_call 1567} sdv_741 := ExAllocatePoolWithTag(512, Tmp_2310, -498638253);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2334;
    assume {:nonnull} Tmp_2334 != 0;
    assume Tmp_2334 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    havoc Tmp_2309;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2333;
    call {:si_unique_call 1568} WPP_SF_(Tmp_2333, 14, Tmp_2309);
    goto L148;

  L148:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2340;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2303;
    assume {:nonnull} Tmp_2303 != 0;
    assume Tmp_2303 > 0;
    assume {:nonnull} Tmp_2340 != 0;
    assume Tmp_2340 > 0;
    call {:si_unique_call 1569} status_68 := Sbp2PreAllocateLists(pdoExtension_20);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} yogi_error != 1;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} status_68 >= 0;
    size_2 := 1536;
    call {:si_unique_call 1570} sdv_740 := ExAllocatePoolWithTag(1, size_2, -330079661);
    symlinkBuffer_1 := sdv_740;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} symlinkBuffer_1 != 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    Tmp_2313 := strConst__li2bpl30;
    call {:si_unique_call 1571} status_68 := RtlStringCbPrintfW(symlinkBuffer_1, size_2, Tmp_2313);
    goto L183;

  L183:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} status_68 >= 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1572} RtlInitUnicodeString(UniSymLinkName__DEVICE_EXTENSION(pdoExtension_20), symlinkBuffer_1);
    call {:si_unique_call 1573} status_68 := IoCreateUnprotectedSymbolicLink(0, 0);
    goto L184;

  L184:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_68 < 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2331;
    assume {:nonnull} Tmp_2331 != 0;
    assume Tmp_2331 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    havoc Tmp_2307;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2319;
    call {:si_unique_call 1574} WPP_SF_qD(Tmp_2319, 16, Tmp_2307, pdoExtension_20, status_68);
    goto L227;

  L227:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} symlinkBuffer_1 != 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1575} ExFreePoolWithTag(0, -330079661);
    symlinkBuffer_1 := 0;
    goto L235;

  L235:
    status_68 := 0;
    goto L199;

  L199:
    call {:si_unique_call 1576} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1577} KeInitializeDpc(DeviceManagementTimeoutDpc__DEVICE_EXTENSION(pdoExtension_20), li2bplFunctionConstant375, 0);
    call {:si_unique_call 1578} KeInitializeTimer(0);
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1579} InitializeListHead(BusResetEntry__DEVICE_EXTENSION(pdoExtension_20));
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    assume {:nonnull} pdoExtension_20 != 0;
    assume pdoExtension_20 > 0;
    call {:si_unique_call 1580} Sbp2SqmInsertLunInformation(DeviceInfo_8);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2336;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2316;
    assume {:nonnull} Tmp_2316 != 0;
    assume Tmp_2316 > 0;
    assume {:nonnull} Tmp_2336 != 0;
    assume Tmp_2336 > 0;
    Tmp_2302 := status_68;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon100_Then:
    assume {:partition} symlinkBuffer_1 == 0;
    goto L235;

  anon101_Then:
    goto L227;

  anon125_Then:
    goto L227;

  anon99_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L227;

  anon96_Then:
    assume {:partition} 0 <= status_68;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2338;
    assume {:nonnull} Tmp_2338 != 0;
    assume Tmp_2338 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    havoc Tmp_2332;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2304;
    call {:si_unique_call 1581} WPP_SF_qS(Tmp_2304, 15, Tmp_2332, pdoExtension_20, symlinkBuffer_1);
    goto L199;

  anon98_Then:
    goto L199;

  anon124_Then:
    goto L199;

  anon97_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L199;

  anon95_Then:
    assume {:partition} 0 > status_68;
    goto L184;

  anon123_Then:
    assume {:partition} symlinkBuffer_1 == 0;
    status_68 := -1073741670;
    goto L183;

  anon94_Then:
    assume {:partition} 0 > status_68;
    call {:si_unique_call 1582} IoDeleteDevice(0);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    Tmp_2302 := status_68;
    goto L1;

  anon122_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon103_Then:
    goto L148;

  anon126_Then:
    goto L148;

  anon102_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon120_Then:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc Tmp_2315;
    call {:si_unique_call 1583} sdv_RtlZeroMemory(0, Tmp_2315);
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    goto L114;

  L114:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto L118;

  L118:
    call {:si_unique_call 1584} vslice_dummy_var_289 := corral_nondet();
    goto L147;

  L147:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2317;
    assume {:nonnull} Tmp_2317 != 0;
    assume Tmp_2317 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    havoc Tmp_2344;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2320;
    assume {:nonnull} DeviceInfo_8 != 0;
    assume DeviceInfo_8 > 0;
    havoc vslice_dummy_var_1091;
    call {:si_unique_call 1585} WPP_SF_qS(Tmp_2320, 13, Tmp_2344, pdoExtension_20, vslice_dummy_var_1091);
    goto L148;

  anon93_Then:
    goto L148;

  anon121_Then:
    goto L148;

  anon92_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon109_Then:
    call {:si_unique_call 1586} vslice_dummy_var_297 := corral_nondet();
    goto L147;

  anon110_Then:
    call {:si_unique_call 1587} vslice_dummy_var_296 := corral_nondet();
    goto L147;

  anon111_Then:
    call {:si_unique_call 1588} vslice_dummy_var_295 := corral_nondet();
    goto L147;

  anon112_Then:
    call {:si_unique_call 1589} vslice_dummy_var_294 := corral_nondet();
    goto L147;

  anon113_Then:
    call {:si_unique_call 1590} vslice_dummy_var_293 := corral_nondet();
    goto L147;

  anon114_Then:
    call {:si_unique_call 1591} vslice_dummy_var_292 := corral_nondet();
    goto L147;

  anon115_Then:
    call {:si_unique_call 1592} vslice_dummy_var_291 := corral_nondet();
    goto L147;

  anon116_Then:
    call {:si_unique_call 1593} vslice_dummy_var_290 := corral_nondet();
    goto L147;

  anon91_Then:
    goto L118;

  anon108_Then:
    call {:si_unique_call 1594} vslice_dummy_var_298 := corral_nondet();
    goto L147;

  anon90_Then:
    goto L114;

  anon119_Then:
    goto L64;

  anon89_Then:
    assume {:partition} 0 > status_68;
    call {:si_unique_call 1595} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    Tmp_2302 := status_68;
    goto L1;

  anon88_Then:
    assume {:partition} 0 > status_68;
    call {:si_unique_call 1596} ExFreePoolWithTag(0, -330079661);
    devnameBuffer := 0;
    Tmp_2302 := status_68;
    goto L1;

  anon118_Then:
    Tmp_2308 := strConst__li2bpl48;
    goto L44;

  anon87_Then:
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    assume {:nonnull} FdoExtension_6 != 0;
    assume FdoExtension_6 > 0;
    Tmp_2312 := strConst__li2bpl59;
    call {:si_unique_call 1597} status_68 := RtlStringCbPrintfW(devnameBuffer, size_2, Tmp_2312);
    goto L48;

  anon117_Then:
    assume {:partition} devnameBuffer == 0;
    Tmp_2302 := -1073741670;
    goto L1;

  anon105_Then:
    goto L19;

  L19:
    devType_1 := 45;
    goto L24;

  anon106_Then:
    goto L19;

  anon107_Then:
    devType_1 := 24;
    goto L24;

  anon86_Then:
    goto L19;

  anon104_Then:
    devType_1 := 34;
    goto L24;

  anon85_Then:
    goto L18;
}



procedure {:origName "RtlStringVPrintfWorkerA_sdv_static_function_1"} RtlStringVPrintfWorkerA_sdv_static_function_1(actual_pszDest_5: int, actual_cchDest_5: int, actual_pcchNewDestLength_1: int, actual_pszFormat_3: int, actual_argList_3: int) returns (Tmp_2347: int);
  free ensures {:va_keep} Tmp_2347 == 0 || Tmp_2347 == 5;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlStringVPrintfWorkerA_sdv_static_function_1"} RtlStringVPrintfWorkerA_sdv_static_function_1(actual_pszDest_5: int, actual_cchDest_5: int, actual_pcchNewDestLength_1: int, actual_pszFormat_3: int, actual_argList_3: int) returns (Tmp_2347: int)
{
  var {:scalar} cchNewDestLength_1: int;
  var {:scalar} iRet_1: int;
  var {:scalar} cchMax_3: int;
  var {:scalar} status_69: int;
  var {:pointer} pszDest_5: int;
  var {:scalar} cchDest_5: int;
  var {:pointer} pcchNewDestLength_1: int;

  anon0:
    pszDest_5 := actual_pszDest_5;
    cchDest_5 := actual_cchDest_5;
    pcchNewDestLength_1 := actual_pcchNewDestLength_1;
    status_69 := 0;
    cchNewDestLength_1 := 0;
    cchMax_3 := cchDest_5 - 1;
    call {:si_unique_call 1598} iRet_1 := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} 0 > iRet_1;
    goto L16;

  L16:
    assume {:nonnull} pszDest_5 != 0;
    assume pszDest_5 > 0;
    cchNewDestLength_1 := cchMax_3;
    status_69 := 5;
    goto L20;

  L20:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} pcchNewDestLength_1 != 0;
    assume {:nonnull} pcchNewDestLength_1 != 0;
    assume pcchNewDestLength_1 > 0;
    goto L21;

  L21:
    Tmp_2347 := status_69;
    return;

  anon11_Then:
    assume {:partition} pcchNewDestLength_1 == 0;
    goto L21;

  anon9_Then:
    assume {:partition} iRet_1 >= 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} iRet_1 <= cchMax_3;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} iRet_1 == cchMax_3;
    assume {:nonnull} pszDest_5 != 0;
    assume pszDest_5 > 0;
    cchNewDestLength_1 := cchMax_3;
    goto L20;

  anon12_Then:
    assume {:partition} iRet_1 != cchMax_3;
    cchNewDestLength_1 := iRet_1;
    goto L20;

  anon10_Then:
    assume {:partition} cchMax_3 < iRet_1;
    goto L16;
}



procedure {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_9: int, actual_uniInstanceId: int) returns (Tmp_2349: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2349 == -1073741670 || Tmp_2349 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2_BuildInstanceId"} Sbp2_BuildInstanceId(actual_DeviceInfo_9: int, actual_uniInstanceId: int) returns (Tmp_2349: int)
{
  var {:pointer} Tmp_2350: int;
  var {:scalar} Tmp_2351: int;
  var {:pointer} Tmp_2352: int;
  var {:pointer} sdv_759: int;
  var {:scalar} Tmp_2353: int;
  var {:pointer} Tmp_2354: int;
  var {:scalar} sdv_760: int;
  var {:scalar} Tmp_2355: int;
  var {:pointer} Tmp_2356: int;
  var {:scalar} sdv_761: int;
  var {:pointer} Tmp_2357: int;
  var {:scalar} Tmp_2358: int;
  var {:scalar} status_70: int;
  var {:pointer} DeviceInfo_9: int;
  var {:pointer} uniInstanceId: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_1092: int;

  anon0:
    DeviceInfo_9 := actual_DeviceInfo_9;
    uniInstanceId := actual_uniInstanceId;
    call {:si_unique_call 1599} Tmp_2354 := __HAVOC_malloc(4);
    call {:si_unique_call 1600} Tmp_2356 := __HAVOC_malloc(36);
    call {:si_unique_call 1601} vslice_dummy_var_299 := __HAVOC_malloc(8);
    call {:si_unique_call 1602} vslice_dummy_var_300 := __HAVOC_malloc(8);
    status_70 := 0;
    call {:si_unique_call 1603} sdv_do_paged_code_check();
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2358;
    call {:si_unique_call 1604} sdv_759 := ExAllocatePoolWithTag(1, Tmp_2358, 846226003);
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2354;
    assume {:nonnull} Tmp_2354 != 0;
    assume Tmp_2354 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    havoc Tmp_2352;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2351;
    call {:si_unique_call 1605} WPP_SF_(Tmp_2351, 107, Tmp_2352);
    goto L37;

  L37:
    status_70 := -1073741670;
    goto L35;

  L35:
    Tmp_2349 := status_70;
    return;

  anon10_Then:
    goto L37;

  anon12_Then:
    goto L37;

  anon9_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L37;

  anon11_Then:
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2355;
    call {:si_unique_call 1606} sdv_RtlZeroMemory(0, Tmp_2355);
    assume {:nonnull} DeviceInfo_9 != 0;
    assume DeviceInfo_9 > 0;
    havoc Tmp_2350;
    assume {:nonnull} Tmp_2350 != 0;
    assume Tmp_2350 > 0;
    assume {:nonnull} DeviceInfo_9 != 0;
    assume DeviceInfo_9 > 0;
    havoc Tmp_2357;
    assume {:nonnull} Tmp_2357 != 0;
    assume Tmp_2357 > 0;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc Tmp_2353;
    Tmp_2356 := strConst__li2bpl29;
    assume {:nonnull} uniInstanceId != 0;
    assume uniInstanceId > 0;
    havoc vslice_dummy_var_1092;
    call {:si_unique_call 1607} vslice_dummy_var_301 := RtlStringCbPrintfW(vslice_dummy_var_1092, Tmp_2353, Tmp_2356);
    goto L35;
}



procedure {:origName "_InlineInterlockedExchangePointer"} _InlineInterlockedExchangePointer(actual_Destination_3: int, actual_Value_1: int) returns (Tmp_2362: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "_InlineInterlockedExchangePointer"} _InlineInterlockedExchangePointer(actual_Destination_3: int, actual_Value_1: int) returns (Tmp_2362: int)
{
  var {:scalar} sdv_763: int;

  anon0:
    Tmp_2362 := sdv_763;
    return;
}



procedure {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_PdoExtension_24: int) returns (Tmp_2364: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2PreAllocateLists"} Sbp2PreAllocateLists(actual_PdoExtension_24: int) returns (Tmp_2364: int)
{
  var {:pointer} Tmp_2365: int;
  var {:pointer} Tmp_2366: int;
  var {:scalar} cnt: int;
  var {:pointer} Tmp_2367: int;
  var {:pointer} sdv_766: int;
  var {:pointer} context_3: int;
  var {:pointer} Tmp_2368: int;
  var {:pointer} Tmp_2369: int;
  var {:pointer} Tmp_2370: int;
  var {:pointer} sdv_767: int;
  var {:pointer} Tmp_2371: int;
  var {:pointer} Tmp_2372: int;
  var {:pointer} Tmp_2373: int;
  var {:pointer} sdv_768: int;
  var {:pointer} sdv_770: int;
  var {:pointer} Tmp_2374: int;
  var {:pointer} Tmp_2375: int;
  var {:pointer} sdv_771: int;
  var {:pointer} Tmp_2377: int;
  var {:pointer} Tmp_2378: int;
  var {:pointer} Tmp_2379: int;
  var {:pointer} statusFifoElement_1: int;
  var {:pointer} Tmp_2380: int;
  var {:pointer} Tmp_2381: int;
  var {:pointer} packet_15: int;
  var {:scalar} status_71: int;
  var {:pointer} Tmp_2382: int;
  var {:pointer} Tmp_2383: int;
  var {:pointer} Tmp_2384: int;
  var {:pointer} Tmp_2385: int;
  var {:pointer} PdoExtension_24: int;
  var boogieTmp: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_1093: int;
  var vslice_dummy_var_1094: int;
  var vslice_dummy_var_1095: int;
  var vslice_dummy_var_1096: int;
  var vslice_dummy_var_1097: int;

  anon0:
    call {:si_unique_call 1608} packet_15 := __HAVOC_malloc(4);
    PdoExtension_24 := actual_PdoExtension_24;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1609} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(PdoExtension_24));
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1610} InitializeSListHead(FreeContextListHead__DEVICE_EXTENSION(PdoExtension_24));
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1611} InitializeSListHead(BusRequestIrpIrbListHead__DEVICE_EXTENSION(PdoExtension_24));
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1612} InitializeSListHead(StatusFifoListHead__DEVICE_EXTENSION(PdoExtension_24));
    call {:si_unique_call 1613} sdv_ExInitializeNPagedLookasideList_NXPoolOptIn(0, 0, 0, 0, 32, 846226003, 0);
    call {:si_unique_call 1614} Tmp_2369 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    call {:si_unique_call 1615} sdv_KeInitializeSpinLock(Tmp_2369);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    call {:si_unique_call 1616} Tmp_2369 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    call {:si_unique_call 1617} sdv_KeInitializeSpinLock(Tmp_2369);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    call {:si_unique_call 1618} Tmp_2369 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    call {:si_unique_call 1619} sdv_KeInitializeSpinLock(Tmp_2369);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    call {:si_unique_call 1620} Tmp_2369 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    call {:si_unique_call 1621} sdv_KeInitializeSpinLock(Tmp_2369);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    call {:si_unique_call 1622} Tmp_2369 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    call {:si_unique_call 1623} sdv_KeInitializeSpinLock(Tmp_2369);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} Tmp_2369 != 0;
    assume Tmp_2369 > 0;
    cnt := 0;
    goto L41;

  L41:
    call {:si_unique_call 1624} cnt, sdv_766, sdv_770, Tmp_2374, boogieTmp, vslice_dummy_var_302 := Sbp2PreAllocateLists_loop_L41(cnt, sdv_766, sdv_770, Tmp_2374, packet_15, PdoExtension_24, boogieTmp, vslice_dummy_var_302);
    goto L41_last;

  L41_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} 8 > cnt;
    call {:si_unique_call 1625} sdv_766 := ExAllocatePoolWithTag(512, 24, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto L74;

  L74:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc vslice_dummy_var_1093;
    call {:si_unique_call 1626} vslice_dummy_var_304 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_1093, 1, 0);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    Tmp_2364 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    call {:si_unique_call 1627} sdv_770 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc Tmp_2374;
    assume {:nonnull} Tmp_2374 != 0;
    assume Tmp_2374 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_1094;
    call {:si_unique_call 1628} boogieTmp := IoAllocateIrp(vslice_dummy_var_1094, 0);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 1629} vslice_dummy_var_302 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    assume false;
    return;

  anon30_Then:
    call {:si_unique_call 1630} sdv_ExFreePool(0);
    call {:si_unique_call 1631} ExFreePoolWithTag(0, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto L74;

  anon38_Then:
    call {:si_unique_call 1632} ExFreePoolWithTag(0, -347053485);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto L74;

  anon29_Then:
    assume {:partition} cnt >= 8;
    cnt := 640;
    call {:si_unique_call 1633} sdv_767 := ExAllocatePoolWithTag(512, cnt, -430742957);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    cnt := 0;
    goto L88;

  L88:
    call {:si_unique_call 1634} cnt, statusFifoElement_1, boogieTmp, vslice_dummy_var_303 := Sbp2PreAllocateLists_loop_L88(cnt, statusFifoElement_1, PdoExtension_24, boogieTmp, vslice_dummy_var_303);
    goto L88_last;

  L88_last:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} 15 > cnt;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc statusFifoElement_1;
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    call {:si_unique_call 1635} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} statusFifoElement_1 != 0;
    assume statusFifoElement_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1636} vslice_dummy_var_303 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    assume false;
    return;

  anon32_Then:
    goto L74;

  anon31_Then:
    assume {:partition} cnt >= 15;
    cnt := 1600;
    call {:si_unique_call 1637} sdv_768 := ExAllocatePoolWithTag(512, cnt, -499031469);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 1638} sdv_RtlZeroMemory(0, cnt);
    call {:si_unique_call 1639} AllocateIrpAndIrb(PdoExtension_24, packet_15);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    cnt := 0;
    goto L120;

  L120:
    call {:si_unique_call 1640} Tmp_2365, Tmp_2366, cnt, Tmp_2367, context_3, Tmp_2368, Tmp_2370, Tmp_2371, Tmp_2372, Tmp_2373, Tmp_2375, sdv_771, Tmp_2377, Tmp_2378, Tmp_2379, Tmp_2380, Tmp_2381, status_71, Tmp_2382, Tmp_2383, Tmp_2384, Tmp_2385, vslice_dummy_var_305 := Sbp2PreAllocateLists_loop_L120(Tmp_2365, Tmp_2366, cnt, Tmp_2367, context_3, Tmp_2368, Tmp_2370, Tmp_2371, Tmp_2372, Tmp_2373, Tmp_2375, sdv_771, Tmp_2377, Tmp_2378, Tmp_2379, Tmp_2380, Tmp_2381, packet_15, status_71, Tmp_2382, Tmp_2383, Tmp_2384, Tmp_2385, PdoExtension_24, vslice_dummy_var_305);
    goto L120_last;

  L120_last:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} 8 > cnt;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    havoc context_3;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 1641} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(context_3), li2bplFunctionConstant378, 0);
    call {:si_unique_call 1642} KeInitializeTimer(0);
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2384;
    assume {:nonnull} Tmp_2384 != 0;
    assume Tmp_2384 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2371;
    assume {:nonnull} Tmp_2371 != 0;
    assume Tmp_2371 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2377;
    assume {:nonnull} Tmp_2377 != 0;
    assume Tmp_2377 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2367;
    assume {:nonnull} Tmp_2367 != 0;
    assume Tmp_2367 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2368;
    assume {:nonnull} Tmp_2368 != 0;
    assume Tmp_2368 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2379;
    assume {:nonnull} Tmp_2379 != 0;
    assume Tmp_2379 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2372;
    assume {:nonnull} Tmp_2372 != 0;
    assume Tmp_2372 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2366;
    assume {:nonnull} Tmp_2366 != 0;
    assume Tmp_2366 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2370;
    assume {:nonnull} Tmp_2370 != 0;
    assume Tmp_2370 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2373;
    assume {:nonnull} Tmp_2373 != 0;
    assume Tmp_2373 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2380;
    assume {:nonnull} Tmp_2380 != 0;
    assume Tmp_2380 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2378;
    assume {:nonnull} Tmp_2378 != 0;
    assume Tmp_2378 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2382;
    assume {:nonnull} Tmp_2382 != 0;
    assume Tmp_2382 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2383;
    assume {:nonnull} Tmp_2383 != 0;
    assume Tmp_2383 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2375;
    assume {:nonnull} Tmp_2375 != 0;
    assume Tmp_2375 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2385;
    assume {:nonnull} Tmp_2385 != 0;
    assume Tmp_2385 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_1095;
    call {:si_unique_call 1643} status_71 := Sbp2SendRequest#1(PdoExtension_24, vslice_dummy_var_1095, 2);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_71 >= 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2381;
    assume {:nonnull} Tmp_2381 != 0;
    assume Tmp_2381 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    call {:si_unique_call 1644} sdv_771 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc Tmp_2365;
    assume {:nonnull} Tmp_2365 != 0;
    assume Tmp_2365 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    assume {:nonnull} context_3 != 0;
    assume context_3 > 0;
    call {:si_unique_call 1645} vslice_dummy_var_305 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    cnt := cnt + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} 0 > status_71;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_1096;
    call {:si_unique_call 1646} DeAllocateIrpAndIrb(PdoExtension_24, vslice_dummy_var_1096);
    goto L74;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    assume {:partition} cnt >= 8;
    assume {:nonnull} packet_15 != 0;
    assume packet_15 > 0;
    havoc vslice_dummy_var_1097;
    call {:si_unique_call 1647} DeAllocateIrpAndIrb(PdoExtension_24, vslice_dummy_var_1097);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    call {:si_unique_call 1648} boogieTmp := IoAllocateMdl(0, 4, 0, 0, 0);
    assume {:nonnull} PdoExtension_24 != 0;
    assume PdoExtension_24 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    Tmp_2364 := 0;
    goto L1;

  anon36_Then:
    goto L74;

  anon33_Then:
    goto L74;

  anon41_Then:
    goto L74;

  anon40_Then:
    goto L74;
}



procedure {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "InitializeSListHead"} InitializeSListHead(actual_SListHead: int)
{
  var vslice_dummy_var_306: int;

  anon0:
    call {:si_unique_call 1649} vslice_dummy_var_306 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "WPP_SF_qq"} WPP_SF_qq(actual_Logger_31: int, actual_id_31: int, actual_TraceGuid_31: int, actual_s_p_e_c_i_a_l_108: int, actual_s_p_e_c_i_a_l_109: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qq"} WPP_SF_qq(actual_Logger_31: int, actual_id_31: int, actual_TraceGuid_31: int, actual_s_p_e_c_i_a_l_108: int, actual_s_p_e_c_i_a_l_109: int)
{
  var {:pointer} TraceGuid_31: int;
  var vslice_dummy_var_307: int;

  anon0:
    call {:si_unique_call 1650} vslice_dummy_var_307 := __HAVOC_malloc(4);
    TraceGuid_31 := actual_TraceGuid_31;
    return;
}



procedure {:origName "WPP_SF_qdSdd"} WPP_SF_qdSdd(actual_Logger_32: int, actual_id_32: int, actual_TraceGuid_32: int, actual_s_p_e_c_i_a_l_110: int, actual_s_p_e_c_i_a_l_111: int, actual_s_p_e_c_i_a_l_112: int, actual_s_p_e_c_i_a_l_113: int, actual_s_p_e_c_i_a_l_114: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qdSdd"} WPP_SF_qdSdd(actual_Logger_32: int, actual_id_32: int, actual_TraceGuid_32: int, actual_s_p_e_c_i_a_l_110: int, actual_s_p_e_c_i_a_l_111: int, actual_s_p_e_c_i_a_l_112: int, actual_s_p_e_c_i_a_l_113: int, actual_s_p_e_c_i_a_l_114: int)
{
  var {:pointer} Tmp_2391: int;
  var {:scalar} Tmp_2394: int;
  var {:scalar} sdv_779: int;
  var {:pointer} TraceGuid_32: int;
  var {:pointer} s_p_e_c_i_a_l_112: int;
  var vslice_dummy_var_308: int;

  anon0:
    call {:si_unique_call 1651} vslice_dummy_var_308 := __HAVOC_malloc(4);
    TraceGuid_32 := actual_TraceGuid_32;
    s_p_e_c_i_a_l_112 := actual_s_p_e_c_i_a_l_112;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_112 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_112 != 0;
    assume s_p_e_c_i_a_l_112 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2394 := (sdv_779 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_112 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_112 != 0;
    assume s_p_e_c_i_a_l_112 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2391 := s_p_e_c_i_a_l_112;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2391 := strConst__li2bpl2;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_112 == 0;
    goto L18;

  anon10_Then:
    Tmp_2394 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_112 == 0;
    goto L12;
}



procedure {:origName "GET_LUN"} GET_LUN(actual_PdoExtension_25: int) returns (Tmp_2398: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "GET_LUN"} GET_LUN(actual_PdoExtension_25: int) returns (Tmp_2398: int)
{
  var {:pointer} Tmp_2399: int;
  var {:pointer} PdoExtension_25: int;

  anon0:
    PdoExtension_25 := actual_PdoExtension_25;
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} PdoExtension_25 != 0;
    assume PdoExtension_25 > 0;
    havoc Tmp_2399;
    assume {:nonnull} Tmp_2399 != 0;
    assume Tmp_2399 > 0;
    havoc Tmp_2398;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_2398 := 0;
    goto L1;
}



procedure {:origName "WPP_SF_qSDD"} WPP_SF_qSDD(actual_Logger_33: int, actual_id_33: int, actual_TraceGuid_33: int, actual_s_p_e_c_i_a_l_115: int, actual_s_p_e_c_i_a_l_116: int, actual_s_p_e_c_i_a_l_117: int, actual_s_p_e_c_i_a_l_118: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qSDD"} WPP_SF_qSDD(actual_Logger_33: int, actual_id_33: int, actual_TraceGuid_33: int, actual_s_p_e_c_i_a_l_115: int, actual_s_p_e_c_i_a_l_116: int, actual_s_p_e_c_i_a_l_117: int, actual_s_p_e_c_i_a_l_118: int)
{
  var {:scalar} Tmp_2402: int;
  var {:scalar} sdv_781: int;
  var {:pointer} Tmp_2405: int;
  var {:pointer} TraceGuid_33: int;
  var {:pointer} s_p_e_c_i_a_l_116: int;
  var vslice_dummy_var_309: int;

  anon0:
    call {:si_unique_call 1652} vslice_dummy_var_309 := __HAVOC_malloc(4);
    TraceGuid_33 := actual_TraceGuid_33;
    s_p_e_c_i_a_l_116 := actual_s_p_e_c_i_a_l_116;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_116 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_116 != 0;
    assume s_p_e_c_i_a_l_116 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2402 := (sdv_781 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_116 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_116 != 0;
    assume s_p_e_c_i_a_l_116 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2405 := s_p_e_c_i_a_l_116;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2405 := strConst__li2bpl2;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_116 == 0;
    goto L18;

  anon10_Then:
    Tmp_2402 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_116 == 0;
    goto L12;
}



procedure {:origName "RtlFailFast"} RtlFailFast(actual_Code: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "RtlFailFast"} RtlFailFast(actual_Code: int)
{
  var vslice_dummy_var_310: int;

  anon0:
    call {:si_unique_call 1653} vslice_dummy_var_310 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "GET_DEVICE_NAME"} GET_DEVICE_NAME(actual_PdoExtension_27: int) returns (Tmp_2439: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "GET_DEVICE_NAME"} GET_DEVICE_NAME(actual_PdoExtension_27: int) returns (Tmp_2439: int)
{
  var {:pointer} Tmp_2441: int;
  var {:pointer} Tmp_2442: int;
  var {:pointer} PdoExtension_27: int;

  anon0:
    PdoExtension_27 := actual_PdoExtension_27;
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    havoc Tmp_2442;
    assume {:nonnull} Tmp_2442 != 0;
    assume Tmp_2442 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} PdoExtension_27 != 0;
    assume PdoExtension_27 > 0;
    havoc Tmp_2441;
    assume {:nonnull} Tmp_2441 != 0;
    assume Tmp_2441 > 0;
    havoc Tmp_2439;
    goto L1;

  L1:
    return;

  anon6_Then:
    goto L4;

  L4:
    Tmp_2439 := strConst__li2bpl60;
    goto L1;

  anon5_Then:
    goto L4;
}



procedure {:origName "WPP_SF_qDD"} WPP_SF_qDD(actual_Logger_34: int, actual_id_34: int, actual_TraceGuid_34: int, actual_s_p_e_c_i_a_l_119: int, actual_s_p_e_c_i_a_l_120: int, actual_s_p_e_c_i_a_l_121: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qDD"} WPP_SF_qDD(actual_Logger_34: int, actual_id_34: int, actual_TraceGuid_34: int, actual_s_p_e_c_i_a_l_119: int, actual_s_p_e_c_i_a_l_120: int, actual_s_p_e_c_i_a_l_121: int)
{
  var {:pointer} TraceGuid_34: int;
  var vslice_dummy_var_311: int;

  anon0:
    call {:si_unique_call 1654} vslice_dummy_var_311 := __HAVOC_malloc(4);
    TraceGuid_34 := actual_TraceGuid_34;
    return;
}



procedure {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_8: int, actual_DeviceRelations: int) returns (Tmp_2446: int);
  modifies alloc, Mem_T.LogStart__DEBUG_LOG, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2CreateDeviceRelations"} Sbp2CreateDeviceRelations(actual_FdoExtension_8: int, actual_DeviceRelations: int) returns (Tmp_2446: int)
{
  var {:scalar} i_8: int;
  var {:scalar} Tmp_2447: int;
  var {:pointer} Tmp_2448: int;
  var {:scalar} Tmp_2449: int;
  var {:scalar} Tmp_2450: int;
  var {:scalar} Tmp_2451: int;
  var {:scalar} subStatus: int;
  var {:pointer} Tmp_2453: int;
  var {:pointer} pdoExtension_21: int;
  var {:pointer} workItem_1: int;
  var {:scalar} Status_2: int;
  var {:scalar} Tmp_2455: int;
  var {:scalar} Tmp_2456: int;
  var {:pointer} Tmp_2457: int;
  var {:pointer} Tmp_2458: int;
  var {:pointer} Tmp_2459: int;
  var {:scalar} Tmp_2460: int;
  var {:pointer} Tmp_2461: int;
  var {:pointer} Tmp_2462: int;
  var {:pointer} Tmp_2463: int;
  var {:scalar} Tmp_2464: int;
  var {:pointer} PdoExtension_28: int;
  var {:scalar} Tmp_2465: int;
  var {:pointer} Tmp_2466: int;
  var {:pointer} Tmp_2467: int;
  var {:scalar} Tmp_2468: int;
  var {:scalar} Tmp_2469: int;
  var {:pointer} Tmp_2470: int;
  var {:pointer} Tmp_2471: int;
  var {:pointer} Tmp_2473: int;
  var {:pointer} Tmp_2474: int;
  var {:pointer} Tmp_2475: int;
  var {:pointer} Tmp_2476: int;
  var {:scalar} Tmp_2477: int;
  var {:pointer} Tmp_2478: int;
  var {:scalar} status_73: int;
  var {:scalar} instanceNum: int;
  var {:pointer} Tmp_2479: int;
  var {:scalar} Tmp_2480: int;
  var {:scalar} Tmp_2481: int;
  var {:scalar} OrgLUNCount: int;
  var {:scalar} Tmp_2482: int;
  var {:scalar} Tmp_2483: int;
  var {:pointer} Tmp_2484: int;
  var {:pointer} Tmp_2485: int;
  var {:pointer} FdoExtension_8: int;
  var {:pointer} DeviceRelations: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;

  anon0:
    FdoExtension_8 := actual_FdoExtension_8;
    DeviceRelations := actual_DeviceRelations;
    call {:si_unique_call 1655} Tmp_2448 := __HAVOC_malloc(2680);
    call {:si_unique_call 1656} Tmp_2453 := __HAVOC_malloc(4);
    call {:si_unique_call 1657} Tmp_2459 := __HAVOC_malloc(2680);
    call {:si_unique_call 1658} Tmp_2462 := __HAVOC_malloc(4);
    call {:si_unique_call 1659} Tmp_2463 := __HAVOC_malloc(2680);
    call {:si_unique_call 1660} Tmp_2466 := __HAVOC_malloc(2680);
    call {:si_unique_call 1661} Tmp_2467 := __HAVOC_malloc(2680);
    call {:si_unique_call 1662} Tmp_2470 := __HAVOC_malloc(2680);
    call {:si_unique_call 1663} Tmp_2471 := __HAVOC_malloc(2680);
    call {:si_unique_call 1664} Tmp_2473 := __HAVOC_malloc(2680);
    call {:si_unique_call 1665} Tmp_2476 := __HAVOC_malloc(2680);
    call {:si_unique_call 1666} Tmp_2478 := __HAVOC_malloc(4);
    call {:si_unique_call 1667} Tmp_2479 := __HAVOC_malloc(2680);
    call {:si_unique_call 1668} Tmp_2484 := __HAVOC_malloc(2680);
    call {:si_unique_call 1669} Tmp_2485 := __HAVOC_malloc(2680);
    status_73 := 0;
    instanceNum := 0;
    OrgLUNCount := 0;
    PdoExtension_28 := 0;
    call {:si_unique_call 1670} sdv_do_paged_code_check();
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc OrgLUNCount;
    call {:si_unique_call 1671} status_73 := Sbp2Get1394ConfigInfo(FdoExtension_8, 0);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} status_73 >= 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    status_73 := -1073741823;
    goto L27;

  L27:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2484;
    assume {:nonnull} Tmp_2484 != 0;
    assume Tmp_2484 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2466;
    assume {:nonnull} Tmp_2466 != 0;
    assume Tmp_2466 > 0;
    havoc Tmp_2457;
    assume {:nonnull} Tmp_2457 != 0;
    assume Tmp_2457 > 0;
    PdoExtension_28 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2457)];
    goto L28;

  L28:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} PdoExtension_28 != 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2485;
    assume {:nonnull} Tmp_2485 != 0;
    assume Tmp_2485 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    i_8 := 0;
    goto L35;

  L35:
    call {:si_unique_call 1672} i_8, Tmp_2468, Tmp_2473 := Sbp2CreateDeviceRelations_loop_L35(i_8, Tmp_2468, Tmp_2473, OrgLUNCount, FdoExtension_8);
    goto L35_last;

  L35_last:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} OrgLUNCount > i_8;
    Tmp_2468 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2473;
    assume {:nonnull} Tmp_2473 != 0;
    assume Tmp_2473 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    i_8 := i_8 + 1;
    goto anon60_Else_dummy;

  anon60_Else_dummy:
    assume false;
    return;

  anon60_Then:
    goto L36;

  L36:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_73 < 0;
    call {:si_unique_call 1673} Status_2 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Status_2 >= 0;
    call {:si_unique_call 1674} workItem_1 := IoAllocateWorkItem(0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} workItem_1 != 0;
    call {:si_unique_call 1675} IoQueueWorkItem(0, li2bplFunctionConstant389, 0, 0);
    goto L30;

  L30:
    Tmp_2446 := status_73;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon50_Then:
    assume {:partition} workItem_1 == 0;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    call {:si_unique_call 1676} vslice_dummy_var_312 := sdv_IoReleaseRemoveLock(RemoveLock__FDO_DEVICE_EXTENSION(FdoExtension_8), 0);
    goto L30;

  anon49_Then:
    assume {:partition} 0 > Status_2;
    goto L30;

  anon61_Then:
    assume {:partition} 0 <= status_73;
    goto L30;

  anon48_Then:
    assume {:partition} i_8 >= OrgLUNCount;
    goto L36;

  anon59_Then:
    goto L30;

  anon47_Then:
    assume {:partition} PdoExtension_28 == 0;
    goto L30;

  anon58_Then:
    goto L28;

  anon46_Then:
    status_73 := 0;
    i_8 := 0;
    goto L58;

  L58:
    call {:si_unique_call 1677} i_8, Tmp_2447, Tmp_2448, Tmp_2449, Tmp_2450, Tmp_2451, subStatus, Tmp_2453, pdoExtension_21, Tmp_2455, Tmp_2456, Tmp_2458, Tmp_2459, Tmp_2460, Tmp_2461, Tmp_2463, Tmp_2464, Tmp_2465, Tmp_2467, Tmp_2469, Tmp_2470, Tmp_2471, Tmp_2475, Tmp_2476, Tmp_2477, Tmp_2478, status_73, instanceNum, Tmp_2479, Tmp_2481, Tmp_2482, Tmp_2483, vslice_dummy_var_313, vslice_dummy_var_314 := Sbp2CreateDeviceRelations_loop_L58(i_8, Tmp_2447, Tmp_2448, Tmp_2449, Tmp_2450, Tmp_2451, subStatus, Tmp_2453, pdoExtension_21, Tmp_2455, Tmp_2456, Tmp_2458, Tmp_2459, Tmp_2460, Tmp_2461, Tmp_2463, Tmp_2464, Tmp_2465, Tmp_2467, Tmp_2469, Tmp_2470, Tmp_2471, Tmp_2475, Tmp_2476, Tmp_2477, Tmp_2478, status_73, instanceNum, Tmp_2479, Tmp_2481, Tmp_2482, Tmp_2483, FdoExtension_8, DeviceRelations, vslice_dummy_var_313, vslice_dummy_var_314);
    goto L58_last;

  L58_last:
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    Tmp_2482 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2467;
    assume {:nonnull} Tmp_2467 != 0;
    assume Tmp_2467 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    subStatus := 0;
    Tmp_2451 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2459;
    assume {:nonnull} Tmp_2459 != 0;
    assume Tmp_2459 > 0;
    havoc Tmp_2458;
    assume {:nonnull} Tmp_2458 != 0;
    assume Tmp_2458 > 0;
    pdoExtension_21 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2458)];
    assume {:nonnull} pdoExtension_21 != 0;
    assume pdoExtension_21 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_2469 := instanceNum;
    instanceNum := instanceNum + 1;
    Tmp_2456 := Tmp_2469;
    Tmp_2477 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2476;
    Tmp_2461 := Tmp_2476 + Tmp_2477 * 268;
    call {:si_unique_call 1678} subStatus := Sbp2ReInitializePdo(FdoExtension_8, Tmp_2461, Tmp_2456);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L66;

  L66:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} subStatus >= 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2483;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2478;
    Tmp_2450 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2471;
    assume {:nonnull} Tmp_2471 != 0;
    assume Tmp_2471 > 0;
    assume {:nonnull} Tmp_2478 != 0;
    assume Tmp_2478 > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_2481 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2448;
    assume {:nonnull} Tmp_2448 != 0;
    assume Tmp_2448 > 0;
    call {:si_unique_call 1679} vslice_dummy_var_313 := sdv_ObReferenceObject(0);
    goto L73;

  L73:
    i_8 := i_8 + 1;
    goto L73_dummy;

  L73_dummy:
    assume false;
    return;

  anon52_Then:
    assume {:partition} 0 > subStatus;
    goto L73;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    goto L66;

  anon62_Then:
    instanceNum := 0;
    goto L80;

  L80:
    call {:si_unique_call 1680} Tmp_2447, Tmp_2455, Tmp_2463, Tmp_2465, Tmp_2475, status_73, instanceNum := Sbp2CreateDeviceRelations_loop_L80(i_8, Tmp_2447, Tmp_2455, Tmp_2463, Tmp_2465, Tmp_2475, status_73, instanceNum, FdoExtension_8);
    goto L80_last;

  L80_last:
    Tmp_2455 := instanceNum;
    instanceNum := instanceNum + 1;
    Tmp_2465 := Tmp_2455;
    Tmp_2447 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2463;
    Tmp_2475 := Tmp_2463 + Tmp_2447 * 268;
    call {:si_unique_call 1683} status_73 := Sbp2CreatePdo(FdoExtension_8, Tmp_2475, Tmp_2465);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} status_73 != -1073741771;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} status_73 < 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2462;
    assume {:nonnull} Tmp_2462 != 0;
    assume Tmp_2462 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_2474;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2480;
    call {:si_unique_call 1681} WPP_SF_D(Tmp_2480, 100, Tmp_2474, status_73);
    goto L98;

  L98:
    Tmp_2446 := status_73;
    goto L1;

  anon56_Then:
    goto L98;

  anon66_Then:
    goto L98;

  anon55_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L98;

  anon54_Then:
    assume {:partition} 0 <= status_73;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2464;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    havoc Tmp_2453;
    Tmp_2460 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2479;
    assume {:nonnull} Tmp_2453 != 0;
    assume Tmp_2453 > 0;
    assume {:nonnull} Tmp_2479 != 0;
    assume Tmp_2479 > 0;
    assume {:nonnull} DeviceRelations != 0;
    assume DeviceRelations > 0;
    Tmp_2449 := i_8;
    assume {:nonnull} FdoExtension_8 != 0;
    assume FdoExtension_8 > 0;
    havoc Tmp_2470;
    assume {:nonnull} Tmp_2470 != 0;
    assume Tmp_2470 > 0;
    call {:si_unique_call 1682} vslice_dummy_var_314 := sdv_ObReferenceObject(0);
    goto L73;

  anon53_Then:
    assume {:partition} status_73 == -1073741771;
    goto anon53_Then_dummy;

  anon53_Then_dummy:
    assume false;
    return;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon51_Then:
    goto L27;

  anon45_Then:
    assume {:partition} 0 > status_73;
    Tmp_2446 := status_73;
    goto L1;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_39: int) returns (Tmp_2486: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2StartDevice"} Sbp2StartDevice(actual_DeviceObject_39: int) returns (Tmp_2486: int)
{
  var {:scalar} Tmp_2487: int;
  var {:scalar} errorId: int;
  var {:scalar} waitValue_6: int;
  var {:pointer} sdv_806: int;
  var {:scalar} Tmp_2488: int;
  var {:pointer} Tmp_2489: int;
  var {:pointer} pdoExtension_22: int;
  var {:pointer} Tmp_2490: int;
  var {:pointer} Tmp_2491: int;
  var {:pointer} Tmp_2492: int;
  var {:pointer} Tmp_2493: int;
  var {:pointer} Tmp_2494: int;
  var {:pointer} Tmp_2495: int;
  var {:pointer} Tmp_2496: int;
  var {:scalar} sdv_808: int;
  var {:scalar} sdv_809: int;
  var {:pointer} Tmp_2497: int;
  var {:scalar} Tmp_2498: int;
  var {:scalar} Tmp_2499: int;
  var {:pointer} sdv_811: int;
  var {:pointer} Tmp_2500: int;
  var {:pointer} Tmp_2501: int;
  var {:pointer} Tmp_2502: int;
  var {:pointer} Tmp_2503: int;
  var {:scalar} Tmp_2504: int;
  var {:pointer} Tmp_2505: int;
  var {:scalar} Tmp_2506: int;
  var {:pointer} Tmp_2507: int;
  var {:pointer} Tmp_2508: int;
  var {:pointer} Tmp_2509: int;
  var {:pointer} Tmp_2510: int;
  var {:scalar} Tmp_2511: int;
  var {:scalar} Tmp_2512: int;
  var {:scalar} enabledBusResetNotification: int;
  var {:pointer} Tmp_2513: int;
  var {:scalar} Tmp_2514: int;
  var {:pointer} Tmp_2515: int;
  var {:pointer} Tmp_2516: int;
  var {:pointer} Tmp_2517: int;
  var {:pointer} Tmp_2518: int;
  var {:pointer} Tmp_2519: int;
  var {:pointer} Tmp_2520: int;
  var {:pointer} Tmp_2521: int;
  var {:pointer} Tmp_2522: int;
  var {:scalar} Tmp_2523: int;
  var {:pointer} Tmp_2524: int;
  var {:pointer} Tmp_2525: int;
  var {:pointer} Tmp_2526: int;
  var {:scalar} Tmp_2527: int;
  var {:pointer} fdoDeviceExtension: int;
  var {:scalar} Tmp_2528: int;
  var {:scalar} Tmp_2529: int;
  var {:pointer} Tmp_2530: int;
  var {:pointer} Tmp_2531: int;
  var {:scalar} Tmp_2532: int;
  var {:pointer} Tmp_2533: int;
  var {:pointer} Tmp_2534: int;
  var {:pointer} fdoExtension_9: int;
  var {:scalar} Tmp_2535: int;
  var {:pointer} sdv_822: int;
  var {:pointer} Tmp_2536: int;
  var {:pointer} Tmp_2537: int;
  var {:pointer} Tmp_2538: int;
  var {:scalar} Tmp_2539: int;
  var {:scalar} status_74: int;
  var {:scalar} Tmp_2541: int;
  var {:pointer} Tmp_2542: int;
  var {:scalar} Tmp_2543: int;
  var {:scalar} Tmp_2545: int;
  var {:pointer} DeviceObject_39: int;
  var boogieTmp: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_1098: int;
  var vslice_dummy_var_1099: int;
  var vslice_dummy_var_1100: int;
  var vslice_dummy_var_1101: int;
  var vslice_dummy_var_1102: int;

  anon0:
    call {:si_unique_call 1684} waitValue_6 := __HAVOC_malloc(20);
    DeviceObject_39 := actual_DeviceObject_39;
    call {:si_unique_call 1685} Tmp_2492 := __HAVOC_malloc(4);
    call {:si_unique_call 1686} Tmp_2493 := __HAVOC_malloc(4);
    call {:si_unique_call 1687} Tmp_2494 := __HAVOC_malloc(4);
    call {:si_unique_call 1688} Tmp_2495 := __HAVOC_malloc(4);
    call {:si_unique_call 1689} Tmp_2497 := __HAVOC_malloc(4);
    call {:si_unique_call 1690} Tmp_2500 := __HAVOC_malloc(4);
    call {:si_unique_call 1691} Tmp_2501 := __HAVOC_malloc(4);
    call {:si_unique_call 1692} Tmp_2509 := __HAVOC_malloc(4);
    call {:si_unique_call 1693} Tmp_2510 := __HAVOC_malloc(4);
    call {:si_unique_call 1694} Tmp_2531 := __HAVOC_malloc(4);
    call {:si_unique_call 1695} Tmp_2533 := __HAVOC_malloc(4);
    call {:si_unique_call 1696} Tmp_2538 := __HAVOC_malloc(4);
    call {:si_unique_call 1697} Tmp_2542 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_39 != 0;
    assume DeviceObject_39 > 0;
    pdoExtension_22 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_39)];
    assume {:nonnull} DeviceObject_39 != 0;
    assume DeviceObject_39 > 0;
    fdoExtension_9 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_39)];
    enabledBusResetNotification := 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    Tmp_2486 := -1073741130;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon166_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2517;
    assume {:nonnull} Tmp_2517 != 0;
    assume Tmp_2517 > 0;
    fdoDeviceExtension := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2517)];
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_1098;
    call {:si_unique_call 1698} vslice_dummy_var_321 := Sbp2ConfigLegacyDevice(DeviceObject_39, vslice_dummy_var_1098);
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2502;
    assume {:nonnull} Tmp_2502 != 0;
    assume Tmp_2502 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} fdoDeviceExtension != 0;
    assume fdoDeviceExtension > 0;
    goto L20;

  L20:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1699} status_74 := Sbp2InitializeDeviceExtension#1(pdoExtension_22);
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} yogi_error != 1;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} status_74 >= 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2493;
    assume {:nonnull} Tmp_2493 != 0;
    assume Tmp_2493 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    havoc Tmp_2537;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2543;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2508;
    assume {:nonnull} Tmp_2508 != 0;
    assume Tmp_2508 > 0;
    havoc vslice_dummy_var_1099;
    call {:si_unique_call 1700} WPP_SF_qD(Tmp_2543, 17, Tmp_2537, pdoExtension_22, vslice_dummy_var_1099);
    goto L31;

  L31:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2489;
    assume {:nonnull} Tmp_2489 != 0;
    assume Tmp_2489 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:nonnull} Tmp_2489 != 0;
    assume Tmp_2489 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} Tmp_2489 != 0;
    assume Tmp_2489 > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    goto L42;

  L42:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2501;
    assume {:nonnull} Tmp_2501 != 0;
    assume Tmp_2501 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    havoc Tmp_2518;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2529;
    call {:si_unique_call 1701} WPP_SF_q(Tmp_2529, 18, Tmp_2518, pdoExtension_22);
    goto L39;

  L39:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2505;
    assume {:nonnull} Tmp_2505 != 0;
    assume Tmp_2505 > 0;
    call {:si_unique_call 1702} status_74 := Sbp2EnableBusResetNotification#1(Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2505)], 1);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} yogi_error != 1;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} status_74 >= 0;
    enabledBusResetNotification := 1;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1703} vslice_dummy_var_318 := KeResetEvent(StartEvent__DEVICE_EXTENSION(pdoExtension_22));
    call {:si_unique_call 1704} status_74 := Sbp2Issue1394BusReset#1(pdoExtension_22);
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} yogi_error != 1;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:partition} status_74 < 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2538;
    assume {:nonnull} Tmp_2538 != 0;
    assume Tmp_2538 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    havoc Tmp_2536;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2541;
    call {:si_unique_call 1705} WPP_SF_qD(Tmp_2541, 19, Tmp_2536, pdoExtension_22, status_74);
    goto L265;

  L265:
    call {:si_unique_call 1706} sdv_808 := IsDeviceGone#1(pdoExtension_22, status_74);
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} yogi_error != 1;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} sdv_808 != 0;
    errorId := 997;
    goto L169;

  L169:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} status_74 >= 0;
    assume {:nonnull} DeviceObject_39 != 0;
    assume DeviceObject_39 > 0;
    goto L174;

  L174:
    Tmp_2486 := status_74;
    goto L1;

  anon189_Then:
    assume {:partition} 0 > status_74;
    call {:si_unique_call 1707} Sbp2CreateRequestErrorLog(DeviceObject_39, 0, errorId, status_74);
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2542;
    assume {:nonnull} Tmp_2542 != 0;
    assume Tmp_2542 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    havoc Tmp_2521;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2488;
    call {:si_unique_call 1708} WPP_SF_qD(Tmp_2488, 28, Tmp_2521, pdoExtension_22, status_74);
    goto L179;

  L179:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} enabledBusResetNotification != 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2507;
    assume {:nonnull} Tmp_2507 != 0;
    assume Tmp_2507 > 0;
    call {:si_unique_call 1709} vslice_dummy_var_319 := Sbp2EnableBusResetNotification#1(Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2507)], 0);
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} yogi_error != 1;
    goto L174;

  anon224_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon223_Then:
    assume {:partition} enabledBusResetNotification == 0;
    goto L174;

  anon191_Then:
    goto L179;

  anon222_Then:
    goto L179;

  anon190_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L179;

  anon207_Then:
    assume {:partition} sdv_808 == 0;
    goto L73;

  L73:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2500;
    assume {:nonnull} Tmp_2500 != 0;
    assume Tmp_2500 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1710} Tmp_2514 := corral_nondet();
    call {:si_unique_call 1711} sdv_822 := GET_DEVICE_NAME(pdoExtension_22);
    call {:si_unique_call 1712} sdv_809 := GET_LUN(pdoExtension_22);
    havoc Tmp_2515;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2539;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2503;
    assume {:nonnull} Tmp_2503 != 0;
    assume Tmp_2503 > 0;
    havoc vslice_dummy_var_1100;
    call {:si_unique_call 1713} WPP_SF_qdSdd(Tmp_2539, 20, Tmp_2515, pdoExtension_22, sdv_809, sdv_822, vslice_dummy_var_1100, Tmp_2514);
    goto L74;

  L74:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2520;
    assume {:nonnull} Tmp_2520 != 0;
    assume Tmp_2520 > 0;
    assume {:nonnull} waitValue_6 != 0;
    assume waitValue_6 > 0;
    call {:si_unique_call 1714} status_74 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} status_74 != 0;
    goto L99;

  L99:
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2492;
    assume {:nonnull} Tmp_2492 != 0;
    assume Tmp_2492 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    call {:si_unique_call 1715} sdv_811 := GET_DEVICE_NAME(pdoExtension_22);
    havoc Tmp_2519;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2498;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc vslice_dummy_var_1101;
    call {:si_unique_call 1716} WPP_SF_qSDD(Tmp_2498, 21, Tmp_2519, pdoExtension_22, sdv_811, status_74, vslice_dummy_var_1101);
    goto L100;

  L100:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    goto L251;

  L251:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2497;
    assume {:nonnull} Tmp_2497 != 0;
    assume Tmp_2497 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    call {:si_unique_call 1717} sdv_806 := GET_DEVICE_NAME(pdoExtension_22);
    havoc Tmp_2496;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2504;
    call {:si_unique_call 1718} WPP_SF_qSD(Tmp_2504, 22, Tmp_2496, pdoExtension_22, sdv_806, status_74);
    goto L252;

  L252:
    errorId := 1052;
    goto L169;

  anon204_Then:
    goto L252;

  anon221_Then:
    goto L252;

  anon203_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L252;

  anon178_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    goto L251;

  anon180_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1719} vslice_dummy_var_315 := Sbp2AccessRegister#1(pdoExtension_22, Reserved__DEVICE_EXTENSION(pdoExtension_22), 258);
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1720} vslice_dummy_var_316 := Sbp2AccessRegister#1(pdoExtension_22, Reserved__DEVICE_EXTENSION(pdoExtension_22), 272);
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto L126;

  L126:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    call {:si_unique_call 1721} status_74 := Sbp2IssueInternalCommand(pdoExtension_22, 18);
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:partition} yogi_error != 1;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} status_74 >= 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2495;
    assume {:nonnull} Tmp_2495 != 0;
    assume Tmp_2495 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2527;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2516;
    assume {:nonnull} Tmp_2516 != 0;
    assume Tmp_2516 > 0;
    havoc Tmp_2487;
    havoc Tmp_2526;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2545;
    call {:si_unique_call 1722} WPP_SF_qDD(Tmp_2545, 23, Tmp_2526, pdoExtension_22, Tmp_2487, Tmp_2527);
    goto L129;

  L129:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2490;
    assume {:nonnull} Tmp_2490 != 0;
    assume Tmp_2490 > 0;
    havoc Tmp_2499;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2510;
    assume {:nonnull} Tmp_2510 != 0;
    assume Tmp_2510 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2491;
    assume {:nonnull} Tmp_2491 != 0;
    assume Tmp_2491 > 0;
    havoc Tmp_2511;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2535;
    havoc Tmp_2524;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2523;
    call {:si_unique_call 1723} WPP_SF_qDD(Tmp_2523, 26, Tmp_2524, pdoExtension_22, Tmp_2535, Tmp_2511);
    goto L210;

  L210:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc Tmp_2525;
    assume {:nonnull} Tmp_2525 != 0;
    assume Tmp_2525 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto L205;

  L205:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    goto L221;

  L221:
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} status_74 >= 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1724} CleanupOrbList#1(pdoExtension_22, -1073741248);
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1725} vslice_dummy_var_317 := Sbp2ManagementTransaction#1(pdoExtension_22, 7, -1);
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} yogi_error != 1;
    goto L169;

  anon234_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon233_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon197_Then:
    assume {:partition} 0 > status_74;
    goto L169;

  anon193_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} status_74 >= 0;
    call {:si_unique_call 1726} status_74 := Sbp2IssueInternalCommand(pdoExtension_22, 26);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} status_74 < 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2509;
    assume {:nonnull} Tmp_2509 != 0;
    assume Tmp_2509 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    havoc Tmp_2522;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2512;
    call {:si_unique_call 1727} WPP_SF_q(Tmp_2512, 27, Tmp_2522, pdoExtension_22);
    goto L241;

  L241:
    errorId := 1196;
    goto L169;

  anon202_Then:
    goto L241;

  anon236_Then:
    goto L241;

  anon201_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L241;

  anon200_Then:
    assume {:partition} 0 <= status_74;
    goto L169;

  anon235_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon199_Then:
    assume {:partition} 0 > status_74;
    goto L169;

  anon198_Then:
    goto L169;

  anon196_Then:
    goto L221;

  anon195_Then:
    goto L210;

  anon232_Then:
    goto L210;

  anon194_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L210;

  anon231_Then:
    goto L205;

  anon184_Then:
    goto L129;

  anon230_Then:
    goto L129;

  anon183_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L129;

  anon181_Then:
    assume {:partition} 0 > status_74;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} status_74 == -1073741632;
    goto L153;

  L153:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2533;
    assume {:nonnull} Tmp_2533 != 0;
    assume Tmp_2533 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_2534;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2506;
    call {:si_unique_call 1728} WPP_SF_qD(Tmp_2506, 24, Tmp_2534, pdoExtension_22, status_74);
    goto L154;

  L154:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1729} vslice_dummy_var_320 := Sbp2ManagementTransaction#1(pdoExtension_22, 7, -1);
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} yogi_error != 1;
    goto L162;

  L162:
    status_74 := -1073741435;
    errorId := 1136;
    goto L169;

  anon238_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon187_Then:
    goto L162;

  anon188_Then:
    goto L154;

  anon237_Then:
    goto L154;

  anon186_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L154;

  anon182_Then:
    assume {:partition} status_74 != -1073741632;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:partition} status_74 != 17;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2494;
    assume {:nonnull} Tmp_2494 != 0;
    assume Tmp_2494 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_2513;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2532;
    call {:si_unique_call 1730} WPP_SF_qD(Tmp_2532, 25, Tmp_2513, pdoExtension_22, status_74);
    goto L196;

  L196:
    status_74 := 0;
    goto L129;

  anon192_Then:
    goto L196;

  anon240_Then:
    goto L196;

  anon239_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon185_Then:
    assume {:partition} status_74 == 17;
    goto L153;

  anon229_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon228_Then:
    goto L129;

  anon227_Then:
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1731} boogieTmp := PoRegisterDeviceForIdleDetection(0, -1, -1, 4);
    goto L126;

  anon226_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon225_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon179_Then:
    goto L100;

  anon220_Then:
    goto L100;

  anon177_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L100;

  anon176_Then:
    assume {:partition} status_74 == 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    havoc status_74;
    goto L99;

  anon175_Then:
    goto L74;

  anon219_Then:
    goto L74;

  anon174_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L74;

  anon242_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon206_Then:
    goto L265;

  anon241_Then:
    goto L265;

  anon205_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L265;

  anon173_Then:
    assume {:partition} 0 <= status_74;
    goto L73;

  anon218_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon172_Then:
    assume {:partition} 0 > status_74;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    assume {:nonnull} pdoExtension_22 != 0;
    assume pdoExtension_22 > 0;
    call {:si_unique_call 1732} CleanupOrbList#1(pdoExtension_22, -1073741248);
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    errorId := 975;
    goto L169;

  anon243_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon217_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon171_Then:
    goto L39;

  anon216_Then:
    goto L39;

  anon215_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L39;

  anon209_Then:
    goto L39;

  anon210_Then:
    goto L42;

  anon214_Then:
    goto L42;

  anon170_Then:
    goto L31;

  anon213_Then:
    goto L31;

  anon169_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L31;

  anon168_Then:
    assume {:partition} 0 > status_74;
    errorId := 941;
    goto L169;

  anon212_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon244_Then:
    goto L20;

  anon167_Then:
    goto L20;

  anon211_Then:
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2531;
    assume {:nonnull} Tmp_2531 != 0;
    assume Tmp_2531 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    havoc Tmp_2530;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2528;
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    havoc vslice_dummy_var_1102;
    call {:si_unique_call 1733} WPP_SF_qD(Tmp_2528, 29, Tmp_2530, fdoExtension_9, vslice_dummy_var_1102);
    goto L300;

  L300:
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    assume {:nonnull} fdoExtension_9 != 0;
    assume fdoExtension_9 > 0;
    status_74 := 0;
    goto L174;

  anon208_Then:
    goto L300;

  anon246_Then:
    goto L300;

  anon245_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon165_Then:
    status_74 := -1073741810;
    goto L174;
}



procedure {:origName "WPP_SF_qd"} WPP_SF_qd(actual_Logger_35: int, actual_id_35: int, actual_TraceGuid_35: int, actual_s_p_e_c_i_a_l_122: int, actual_s_p_e_c_i_a_l_123: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qd"} WPP_SF_qd(actual_Logger_35: int, actual_id_35: int, actual_TraceGuid_35: int, actual_s_p_e_c_i_a_l_122: int, actual_s_p_e_c_i_a_l_123: int)
{
  var {:pointer} TraceGuid_35: int;
  var vslice_dummy_var_322: int;

  anon0:
    call {:si_unique_call 1734} vslice_dummy_var_322 := __HAVOC_malloc(4);
    TraceGuid_35 := actual_TraceGuid_35;
    return;
}



procedure {:origName "Sbp2HandleApiRequest"} Sbp2HandleApiRequest(actual_DeviceExtension_12: int, actual_Irp_25: int) returns (Tmp_2549: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2HandleApiRequest"} Sbp2HandleApiRequest(actual_DeviceExtension_12: int, actual_Irp_25: int) returns (Tmp_2549: int)
{
  var {:pointer} Tmp_2550: int;
  var {:pointer} irpStack_19: int;
  var {:pointer} Tmp_2551: int;
  var {:scalar} Tmp_2552: int;
  var {:pointer} Tmp_2554: int;
  var {:pointer} sbp2Req: int;
  var {:pointer} Tmp_2555: int;
  var {:scalar} Tmp_2556: int;
  var {:scalar} status_75: int;
  var {:pointer} Tmp_2557: int;
  var {:pointer} DeviceExtension_12: int;
  var {:pointer} Irp_25: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_1103: int;

  anon0:
    DeviceExtension_12 := actual_DeviceExtension_12;
    Irp_25 := actual_Irp_25;
    call {:si_unique_call 1735} Tmp_2550 := __HAVOC_malloc(4);
    call {:si_unique_call 1736} Tmp_2557 := __HAVOC_malloc(4);
    call {:si_unique_call 1737} irpStack_19 := sdv_IoGetCurrentIrpStackLocation(Irp_25);
    call {:si_unique_call 1738} status_75 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_75 >= 0;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    havoc sbp2Req;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2550;
    assume {:nonnull} Tmp_2550 != 0;
    assume Tmp_2550 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    havoc Tmp_2555;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2556;
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    havoc vslice_dummy_var_1103;
    call {:si_unique_call 1739} WPP_SF_qDD(Tmp_2556, 67, Tmp_2555, DeviceExtension_12, vslice_dummy_var_1103, 24);
    goto L25;

  L25:
    status_75 := -1073741811;
    goto L34;

  L34:
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    call {:si_unique_call 1740} vslice_dummy_var_323 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_12), Irp_25);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume Irp_25 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1741} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} yogi_error != 1;
    goto L79;

  L79:
    call {:si_unique_call 1742} sdv_IoCompleteRequest(0, 0);
    Tmp_2549 := status_75;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon46_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon40_Then:
    assume !(Irp_25 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L79;

  anon39_Then:
    goto L25;

  anon45_Then:
    goto L25;

  anon38_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon44_Then:
    goto L20;

  L20:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sbp2Req == 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2557;
    assume {:nonnull} Tmp_2557 != 0;
    assume Tmp_2557 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_2551;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2552;
    call {:si_unique_call 1743} WPP_SF_q(Tmp_2552, 68, Tmp_2551, DeviceExtension_12);
    goto L56;

  L56:
    status_75 := -1073741811;
    goto L34;

  anon43_Then:
    goto L56;

  anon49_Then:
    goto L56;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon37_Then:
    assume {:partition} sbp2Req != 0;
    status_75 := -1073741822;
    assume {:nonnull} sbp2Req != 0;
    assume sbp2Req > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} DeviceExtension_12 != 0;
    assume DeviceExtension_12 > 0;
    havoc Tmp_2554;
    assume {:nonnull} Tmp_2554 != 0;
    assume Tmp_2554 > 0;
    call {:si_unique_call 1744} status_75 := Sbp2Get1394ConfigInfo(Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2554)], sbp2Req);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    goto L34;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    goto L34;

  anon47_Then:
    status_75 := -1073741811;
    goto L34;

  anon36_Then:
    assume {:nonnull} irpStack_19 != 0;
    assume irpStack_19 > 0;
    havoc sbp2Req;
    goto L20;

  anon35_Then:
    assume {:partition} 0 > status_75;
    assume {:nonnull} Irp_25 != 0;
    assume Irp_25 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume Irp_25 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1745} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    goto L82;

  L82:
    call {:si_unique_call 1746} sdv_IoCompleteRequest(0, 0);
    Tmp_2549 := status_75;
    goto L1;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    assume !(Irp_25 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L82;
}



procedure {:origName "WPP_SF_S"} WPP_SF_S(actual_Logger_36: int, actual_id_36: int, actual_TraceGuid_36: int, actual_s_p_e_c_i_a_l_124: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_S"} WPP_SF_S(actual_Logger_36: int, actual_id_36: int, actual_TraceGuid_36: int, actual_s_p_e_c_i_a_l_124: int)
{
  var {:scalar} sdv_829: int;
  var {:pointer} Tmp_2561: int;
  var {:scalar} Tmp_2564: int;
  var {:pointer} TraceGuid_36: int;
  var {:pointer} s_p_e_c_i_a_l_124: int;
  var vslice_dummy_var_324: int;

  anon0:
    call {:si_unique_call 1747} vslice_dummy_var_324 := __HAVOC_malloc(4);
    TraceGuid_36 := actual_TraceGuid_36;
    s_p_e_c_i_a_l_124 := actual_s_p_e_c_i_a_l_124;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} s_p_e_c_i_a_l_124 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_124 != 0;
    assume s_p_e_c_i_a_l_124 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    Tmp_2564 := (sdv_829 + 1) * 2;
    goto L11;

  L11:
    goto L12;

  L12:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} s_p_e_c_i_a_l_124 != 0;
    assume {:nonnull} s_p_e_c_i_a_l_124 != 0;
    assume s_p_e_c_i_a_l_124 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_2561 := s_p_e_c_i_a_l_124;
    goto L17;

  L17:
    goto L18;

  L18:
    return;

  anon12_Then:
    Tmp_2561 := strConst__li2bpl2;
    goto L17;

  anon11_Then:
    assume {:partition} s_p_e_c_i_a_l_124 == 0;
    goto L18;

  anon10_Then:
    Tmp_2564 := 14;
    goto L11;

  anon9_Then:
    assume {:partition} s_p_e_c_i_a_l_124 == 0;
    goto L12;
}



procedure {:origName "WPP_SF_qD"} WPP_SF_qD(actual_Logger_37: int, actual_id_37: int, actual_TraceGuid_37: int, actual_s_p_e_c_i_a_l_125: int, actual_s_p_e_c_i_a_l_126: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "WPP_SF_qD"} WPP_SF_qD(actual_Logger_37: int, actual_id_37: int, actual_TraceGuid_37: int, actual_s_p_e_c_i_a_l_125: int, actual_s_p_e_c_i_a_l_126: int)
{
  var {:pointer} TraceGuid_37: int;
  var vslice_dummy_var_325: int;

  anon0:
    call {:si_unique_call 1748} vslice_dummy_var_325 := __HAVOC_malloc(4);
    TraceGuid_37 := actual_TraceGuid_37;
    return;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.AR_Length__ADDRESS_RANGE"} {:fieldname "AR_Length"} AR_Length__ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Abandoned__DISPATCHER_HEADER"} {:fieldname "Abandoned"} Abandoned__DISPATCHER_HEADER(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Absolute__DISPATCHER_HEADER"} {:fieldname "Absolute"} Absolute__DISPATCHER_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AcceleratedTransfer"} AcceleratedTransfer__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Action__BUS_RESET_ENTRY"} {:fieldname "Action"} Action__BUS_RESET_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__IO_SCSI_CAPABILITIES"} {:fieldname "AdapterScansDown"} AdapterScansDown__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterScansDown"} AdapterScansDown__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__IO_SCSI_CAPABILITIES"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AdapterUsesPio"} AdapterUsesPio__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AddressAndStatus__STATUS_FIFO_BLOCK"} {:fieldname "AddressAndStatus"} AddressAndStatus__STATUS_FIFO_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "AddressContext"} AddressContext__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "AddressHandle"} AddressHandle__ADDRESS_CONTEXT(x: int) : int
{
  x + 156
}

function {:inline true} {:fieldmap "Mem_T.AddressType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AddressType"} AddressType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "Address"} Address__ADDRESS_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "AddressesReturned"} AddressesReturned__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.AffinitySet__DISPATCHER_HEADER"} {:fieldname "AffinitySet"} AffinitySet__DISPATCHER_HEADER(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__IO_SCSI_CAPABILITIES"} {:fieldname "AlignmentMask"} AlignmentMask__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "AlignmentMask"} AlignmentMask__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AlignmentRequirement__DEVICE_OBJECT"} {:fieldname "AlignmentRequirement"} AlignmentRequirement__DEVICE_OBJECT(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.AllocateAddressRange_unnamed_tag_72"} {:fieldname "AllocateAddressRange"} AllocateAddressRange_unnamed_tag_72(x: int) : int
{
  x + 472
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__CDB6INQUIRY"} {:fieldname "AllocationLength"} AllocationLength__CDB6INQUIRY(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.AllocationLength__MODE_SENSE"} {:fieldname "AllocationLength"} AllocationLength__MODE_SENSE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AppendToNextContextToFree__DEVICE_EXTENSION"} {:fieldname "AppendToNextContextToFree"} AppendToNextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 748
}

function {:inline true} {:fieldmap "Mem_T.Argument1_unnamed_tag_42"} {:fieldname "Argument1"} Argument1_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_1"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.AsyncContextBase__DEVICE_EXTENSION"} {:fieldname "AsyncContextBase"} AsyncContextBase__DEVICE_EXTENSION(x: int) : int
{
  x + 4524
}

function {:inline true} {:fieldmap "Mem_T.AsyncRead_unnamed_tag_72"} {:fieldname "AsyncRead"} AsyncRead_unnamed_tag_72(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncReqCtx__ARCP_ORB"} {:fieldname "AsyncReqCtx"} AsyncReqCtx__ARCP_ORB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AsyncWrite_unnamed_tag_72"} {:fieldname "AsyncWrite"} AsyncWrite_unnamed_tag_72(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BlockDescriptorLength__MODE_PARAMETER_HEADER"} {:fieldname "BlockDescriptorLength"} BlockDescriptorLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BlockLength__MODE_PARAMETER_BLOCK"} {:fieldname "BlockLength"} BlockLength__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Buffer"} Buffer__STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Buffer"} Buffer_unnamed_tag_74(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BusAddress__OCTLET"} {:fieldname "BusAddress"} BusAddress__OCTLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusFdo__DEVICE_EXTENSION"} {:fieldname "BusFdo"} BusFdo__DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMajorVersion"} BusMajorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusMinorVersion"} BusMinorVersion__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T._NPAGED_LOOKASIDE_LIST"} {:fieldname "BusRequestContextPool"} BusRequestContextPool__DEVICE_EXTENSION(x: int) : int
{
  x + 4388
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "BusRequestIrpIrbListHead"} BusRequestIrpIrbListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4500
}

function {:inline true} {:fieldmap "Mem_T.BusRequestLock__DEVICE_EXTENSION"} {:fieldname "BusRequestLock"} BusRequestLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4516
}

function {:inline true} {:fieldmap "Mem_T.BusResetEntryCount__DEVICE_EXTENSION"} {:fieldname "BusResetEntryCount"} BusResetEntryCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4776
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "BusResetEntry"} BusResetEntry__DEVICE_EXTENSION(x: int) : int
{
  x + 4768
}

function {:inline true} {:fieldmap "Mem_T.BusResetGeneration__BUS_RESET_ENTRY"} {:fieldname "BusResetGeneration"} BusResetGeneration__BUS_RESET_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.BusResetGeneration__DEVICE_EXTENSION"} {:fieldname "BusResetGeneration"} BusResetGeneration__DEVICE_EXTENSION(x: int) : int
{
  x + 1424
}

function {:inline true} {:fieldmap "Mem_T.BusResetNotification_unnamed_tag_72"} {:fieldname "BusResetNotification"} BusResetNotification_unnamed_tag_72(x: int) : int
{
  x + 1060
}

function {:inline true} {:fieldmap "Mem_T.BusResetPacket__FDO_DEVICE_EXTENSION"} {:fieldname "BusResetPacket"} BusResetPacket__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3468
}

function {:inline true} {:fieldmap "Mem_T.BusReset_unnamed_tag_72"} {:fieldname "BusReset"} BusReset_unnamed_tag_72(x: int) : int
{
  x + 972
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.BusType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "BusType"} BusType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Busy__KDEVICE_QUEUE"} {:fieldname "Busy"} Busy__KDEVICE_QUEUE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte0_unnamed_tag_78"} {:fieldname "Byte0"} Byte0_unnamed_tag_78(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Byte1_unnamed_tag_78"} {:fieldname "Byte1"} Byte1_unnamed_tag_78(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Byte2_unnamed_tag_78"} {:fieldname "Byte2"} Byte2_unnamed_tag_78(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Byte3_unnamed_tag_78"} {:fieldname "Byte3"} Byte3_unnamed_tag_78(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Byte4_unnamed_tag_70"} {:fieldname "Byte4"} Byte4_unnamed_tag_70(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Byte5_unnamed_tag_70"} {:fieldname "Byte5"} Byte5_unnamed_tag_70(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Byte6_unnamed_tag_70"} {:fieldname "Byte6"} Byte6_unnamed_tag_70(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Byte7_unnamed_tag_70"} {:fieldname "Byte7"} Byte7_unnamed_tag_70(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ByteArray__OCTLET"} {:fieldname "ByteArray"} ByteArray__OCTLET(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.CDB10__CDB"} {:fieldname "CDB10"} CDB10__CDB(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.CDB6GENERIC__CDB"} {:fieldname "CDB6GENERIC"} CDB6GENERIC__CDB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CDB6INQUIRY__CDB"} {:fieldname "CDB6INQUIRY"} CDB6INQUIRY__CDB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.CR_Node_UniqueID__CONFIG_ROM"} {:fieldname "CR_Node_UniqueID"} CR_Node_UniqueID__CONFIG_ROM(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Callback"} Callback__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_30"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_30(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CdbLength__SCSI_REQUEST_BLOCK"} {:fieldname "CdbLength"} CdbLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Cdb"} Cdb__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Characteristics__DEVICE_OBJECT"} {:fieldname "Characteristics"} Characteristics__DEVICE_OBJECT(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._OCTLET"} {:fieldname "CmdOrbAddress"} CmdOrbAddress__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.CmdOrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "CmdOrb"} CmdOrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CmdOrbs__COMMON_BUFFER_DATA"} {:fieldname "CmdOrbs"} CmdOrbs__COMMON_BUFFER_DATA(x: int) : int
{
  x + 916
}

function {:inline true} {:fieldmap "Mem_T.CmdSetId__DEVICE_INFORMATION"} {:fieldname "CmdSetId"} CmdSetId__DEVICE_INFORMATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.CmdSetSpecId__DEVICE_INFORMATION"} {:fieldname "CmdSetSpecId"} CmdSetSpecId__DEVICE_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.CommandQueueing__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "CommandQueueing"} CommandQueueing__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "CommonBufferContext"} CommonBufferContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1864
}

function {:inline true} {:fieldmap "Mem_T.CommonBuffer__DEVICE_EXTENSION"} {:fieldname "CommonBuffer"} CommonBuffer__DEVICE_EXTENSION(x: int) : int
{
  x + 1860
}

function {:inline true} {:fieldmap "Mem_T.Common__IO_REMOVE_LOCK"} {:fieldname "Common"} Common__IO_REMOVE_LOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Complete"} Complete__REQUEST_CONTEXT(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__DEVICE_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__DEVICE_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T._CONFIG_ROM"} {:fieldname "ConfigRom"} ConfigRom__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3272
}

function {:inline true} {:fieldmap "Mem_T.ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ConfigRom"} ConfigRom__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ConsecutiveFailedRequestCount__DEVICE_EXTENSION"} {:fieldname "ConsecutiveFailedRequestCount"} ConsecutiveFailedRequestCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4788
}

function {:inline true} {:fieldmap "Mem_T.Contents__STATUS_FIFO_BLOCK"} {:fieldname "Contents"} Contents__STATUS_FIFO_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Context"} Context__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Context__NOTIFICATION_INFO_WXP"} {:fieldname "Context"} Context__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Control_WPP_PROJECT_CONTROL_BLOCK"} {:fieldname "Control"} Control_WPP_PROJECT_CONTROL_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Control__CDB6INQUIRY"} {:fieldname "Control"} Control__CDB6INQUIRY(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Control__IO_STACK_LOCATION"} {:fieldname "Control"} Control__IO_STACK_LOCATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Count__DEVICE_RELATIONS"} {:fieldname "Count"} Count__DEVICE_RELATIONS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CounterProfiling__DISPATCHER_HEADER"} {:fieldname "CounterProfiling"} CounterProfiling__DISPATCHER_HEADER(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.CrashDumpCount__DEVICE_EXTENSION"} {:fieldname "CrashDumpCount"} CrashDumpCount__DEVICE_EXTENSION(x: int) : int
{
  x + 780
}

function {:inline true} {:fieldmap "Mem_T.CsrRegisterBase__DEVICE_INFORMATION"} {:fieldname "CsrRegisterBase"} CsrRegisterBase__DEVICE_INFORMATION(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_High__LOGIN_RESPONSE"} {:fieldname "Csr_Off_High"} Csr_Off_High__LOGIN_RESPONSE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Csr_Off_Low__LOGIN_RESPONSE"} {:fieldname "Csr_Off_Low"} Csr_Off_Low__LOGIN_RESPONSE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.CurrentGeneration__DEVICE_EXTENSION"} {:fieldname "CurrentGeneration"} CurrentGeneration__DEVICE_EXTENSION(x: int) : int
{
  x + 1420
}

function {:inline true} {:fieldmap "Mem_T.CurrentKey__DEVICE_EXTENSION"} {:fieldname "CurrentKey"} CurrentKey__DEVICE_EXTENSION(x: int) : int
{
  x + 436
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_6"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_6(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CycleProfiling__DISPATCHER_HEADER"} {:fieldname "CycleProfiling"} CycleProfiling__DISPATCHER_HEADER(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.D1Latency__DEVICE_CAPABILITIES"} {:fieldname "D1Latency"} D1Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.D2Latency__DEVICE_CAPABILITIES"} {:fieldname "D2Latency"} D2Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.D3Latency__DEVICE_CAPABILITIES"} {:fieldname "D3Latency"} D3Latency__DEVICE_CAPABILITIES(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.DI_Length__DIRECTORY_INFO"} {:fieldname "DI_Length"} DI_Length__DIRECTORY_INFO(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1_LOG_ENTRY32"} {:fieldname "Data1"} Data1_LOG_ENTRY32(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2_LOG_ENTRY32"} {:fieldname "Data2"} Data2_LOG_ENTRY32(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "DataBuffer"} DataBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.DataDescriptor__ORB_EXT_CMD"} {:fieldname "DataDescriptor"} DataDescriptor__ORB_EXT_CMD(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "DataMappingHandle"} DataMappingHandle__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.DataTransferLength__SCSI_REQUEST_BLOCK"} {:fieldname "DataTransferLength"} DataTransferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.PINT4"} {:fieldname "Data"} Data__KEY_VALUE_PARTIAL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE"} {:fieldname "Dbd"} Dbd__MODE_SENSE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Dbd__MODE_SENSE10"} {:fieldname "Dbd"} Dbd__MODE_SENSE10(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._DEBUG_LOG"} {:fieldname "DbgLog"} DbgLog__DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.DebugActive__DISPATCHER_HEADER"} {:fieldname "DebugActive"} DebugActive__DISPATCHER_HEADER(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "DeferredPowerRequest"} DeferredPowerRequest__DEVICE_EXTENSION(x: int) : int
{
  x + 764
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DensityCode__MODE_PARAMETER_BLOCK"} {:fieldname "DensityCode"} DensityCode__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Depth__GENERAL_LOOKASIDE"} {:fieldname "Depth"} Depth__GENERAL_LOOKASIDE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Depth__SLIST_HEADER"} {:fieldname "Depth"} Depth__SLIST_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_READ"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DestinationAddress__IRB_REQ_ASYNC_WRITE"} {:fieldname "DestinationAddress"} DestinationAddress__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "DeviceExtension"} DeviceExtension__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__REQUEST_CONTEXT"} {:fieldname "DeviceExtension"} DeviceExtension__REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.DeviceFlags__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceFlags"} DeviceFlags__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 204
}

function {:inline true} {:fieldmap "Mem_T.DeviceInfo__DEVICE_EXTENSION"} {:fieldname "DeviceInfo"} DeviceInfo__DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListEntry"} DeviceListEntry__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "DeviceListHead"} DeviceListHead__KDEVICE_QUEUE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceListSize__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceListSize"} DeviceListSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 584
}

function {:inline true} {:fieldmap "Mem_T.DeviceList__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceList"} DeviceList__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 592
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "DeviceManagementTimeoutDpc"} DeviceManagementTimeoutDpc__DEVICE_EXTENSION(x: int) : int
{
  x + 4532
}

function {:inline true} {:fieldmap "Mem_T._MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "DeviceModeHeaderAndPage"} DeviceModeHeaderAndPage__DEVICE_EXTENSION(x: int) : int
{
  x + 1316
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ADDRESS_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ADDRESS_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__ASYNC_REQUEST_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.P_DEVICE_OBJECT"} {:fieldname "DeviceObject"} DeviceObject__DEVICE_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 192
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 752
}

function {:inline true} {:fieldmap "Mem_T.DevicePowerState__FDO_DEVICE_EXTENSION"} {:fieldname "DevicePowerState"} DevicePowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE_ENTRY"} {:fieldname "DeviceQueueEntry"} DeviceQueueEntry_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KDEVICE_QUEUE"} {:fieldname "DeviceQueue"} DeviceQueue__DEVICE_OBJECT(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.DeviceSpecificParameter__MODE_PARAMETER_HEADER"} {:fieldname "DeviceSpecificParameter"} DeviceSpecificParameter__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceTextType_unnamed_tag_35"} {:fieldname "DeviceTextType"} DeviceTextType_unnamed_tag_35(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceTypeModifier__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceTypeModifier"} DeviceTypeModifier__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__INQUIRYDATA"} {:fieldname "DeviceType"} DeviceType__INQUIRYDATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.DeviceType__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "DeviceType"} DeviceType__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.DirectoryHeader_unnamed_tag_80"} {:fieldname "DirectoryHeader"} DirectoryHeader_unnamed_tag_80(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DisableIncrement__DISPATCHER_HEADER"} {:fieldname "DisableIncrement"} DisableIncrement__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DpcActive__DISPATCHER_HEADER"} {:fieldname "DpcActive"} DpcActive__DISPATCHER_HEADER(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "DummyContext"} DummyContext__DEVICE_EXTENSION(x: int) : int
{
  x + 1688
}

function {:inline true} {:fieldmap "Mem_T._ORB_EXT_CMD"} {:fieldname "Dummy"} Dummy__DEVICE_EXTENSION(x: int) : int
{
  x + 1460
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Elements__QUERY_LOGIN_RESPONSE"} {:fieldname "Elements"} Elements__QUERY_LOGIN_RESPONSE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.EncodedTolerableDelay__DISPATCHER_HEADER"} {:fieldname "EncodedTolerableDelay"} EncodedTolerableDelay__DISPATCHER_HEADER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "Event"} Event__REQUEST_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Expired__DISPATCHER_HEADER"} {:fieldname "Expired"} Expired__DISPATCHER_HEADER(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.ExtensionDataSpinLock__DEVICE_EXTENSION"} {:fieldname "ExtensionDataSpinLock"} ExtensionDataSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4528
}

function {:inline true} {:fieldmap "Mem_T.FifoMdl__ADDRESS_FIFO"} {:fieldname "FifoMdl"} FifoMdl__ADDRESS_FIFO(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSListHead"} FifoSListHead__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "FifoSpinLock"} FifoSpinLock__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Fifo__NOTIFICATION_INFO_WXP"} {:fieldname "Fifo"} Fifo__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirmwareVersion__DEVICE_INFORMATION"} {:fieldname "FirmwareVersion"} FirmwareVersion__DEVICE_INFORMATION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.Flag_LOG_ENTRY32"} {:fieldname "Flag"} Flag_LOG_ENTRY32(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__ASYNC_REQUEST_CONTEXT"} {:fieldname "Flags"} Flags__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__IRB"} {:fieldname "Flags"} Flags__IRB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flags__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Flags"} Flags__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FreeAddressRange_unnamed_tag_72"} {:fieldname "FreeAddressRange"} FreeAddressRange_unnamed_tag_72(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "FreeContextListHead"} FreeContextListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4372
}

function {:inline true} {:fieldmap "Mem_T.FreeContextLock__DEVICE_EXTENSION"} {:fieldname "FreeContextLock"} FreeContextLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4520
}

function {:inline true} {:fieldmap "Mem_T.FreeMisses__GENERAL_LOOKASIDE"} {:fieldname "FreeMisses"} FreeMisses__GENERAL_LOOKASIDE(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Free__GENERAL_LOOKASIDE"} {:fieldname "Free"} Free__GENERAL_LOOKASIDE(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.FunctionNumber__IRB"} {:fieldname "FunctionNumber"} FunctionNumber__IRB(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Function__SCSI_REQUEST_BLOCK"} {:fieldname "Function"} Function__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__BUS_RESET_DATA"} {:fieldname "GenerationCount"} GenerationCount__BUS_RESET_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GenerationCount__IRB_REQ_GET_GENERATION_COUNT"} {:fieldname "GenerationCount"} GenerationCount__IRB_REQ_GET_GENERATION_COUNT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Generation__SBP2_BUSRESET_WORKITEM"} {:fieldname "Generation"} Generation__SBP2_BUSRESET_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Get1394AddressFromDeviceObject_unnamed_tag_72"} {:fieldname "Get1394AddressFromDeviceObject"} Get1394AddressFromDeviceObject_unnamed_tag_72(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T._IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "GetConfigurationInformation"} GetConfigurationInformation_unnamed_tag_72(x: int) : int
{
  x + 880
}

function {:inline true} {:fieldmap "Mem_T.GetGenerationCount_unnamed_tag_72"} {:fieldname "GetGenerationCount"} GetGenerationCount_unnamed_tag_72(x: int) : int
{
  x + 976
}

function {:inline true} {:fieldmap "Mem_T.GetLocalHostInformation_unnamed_tag_72"} {:fieldname "GetLocalHostInformation"} GetLocalHostInformation_unnamed_tag_72(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.GetMaxSpeedBetweenDevices_unnamed_tag_72"} {:fieldname "GetMaxSpeedBetweenDevices"} GetMaxSpeedBetweenDevices_unnamed_tag_72(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "GlobalStatusContext"} GlobalStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 4176
}

function {:inline true} {:fieldmap "Mem_T.GroupScheduling__DISPATCHER_HEADER"} {:fieldname "GroupScheduling"} GroupScheduling__DISPATCHER_HEADER(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.Hand__DISPATCHER_HEADER"} {:fieldname "Hand"} Hand__DISPATCHER_HEADER(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.HandleCount__DEVICE_EXTENSION"} {:fieldname "HandleCount"} HandleCount__DEVICE_EXTENSION(x: int) : int
{
  x + 784
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "HibernateCount"} HibernateCount__DEVICE_EXTENSION(x: int) : int
{
  x + 776
}

function {:inline true} {:fieldmap "Mem_T.High1Time__KSYSTEM_TIME"} {:fieldname "High1Time"} High1Time__KSYSTEM_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.High2Time__KSYSTEM_TIME"} {:fieldname "High2Time"} High2Time__KSYSTEM_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HighQuad_unnamed_tag_68"} {:fieldname "HighQuad"} HighQuad_unnamed_tag_68(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO2"} {:fieldname "HostControllerInformation"} HostControllerInformation__DEVICE_EXTENSION(x: int) : int
{
  x + 1440
}

function {:inline true} {:fieldmap "Mem_T.HostDDIMajorVersion__FDO_DEVICE_EXTENSION"} {:fieldname "HostDDIMajorVersion"} HostDDIMajorVersion__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3472
}

function {:inline true} {:fieldmap "Mem_T.HostDDIMinorVersion__FDO_DEVICE_EXTENSION"} {:fieldname "HostDDIMinorVersion"} HostDDIMinorVersion__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 3476
}

function {:inline true} {:fieldmap "Mem_T._GET_LOCAL_HOST_INFO4"} {:fieldname "HostRoutineAPI"} HostRoutineAPI__DEVICE_EXTENSION(x: int) : int
{
  x + 1452
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_ID__IO_ADDRESS"} {:fieldname "IA_Destination_ID"} IA_Destination_ID__IO_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IA_Destination_Offset__IO_ADDRESS"} {:fieldname "IA_Destination_Offset"} IA_Destination_Offset__IO_ADDRESS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IReserved__CDB6INQUIRY"} {:fieldname "IReserved"} IReserved__CDB6INQUIRY(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_34"} {:fieldname "IdType"} IdType_unnamed_tag_34(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IdleCounter__DEVICE_EXTENSION"} {:fieldname "IdleCounter"} IdleCounter__DEVICE_EXTENSION(x: int) : int
{
  x + 788
}

function {:inline true} {:fieldmap "Mem_T.InPath_unnamed_tag_36"} {:fieldname "InPath"} InPath_unnamed_tag_36(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Index__DEBUG_LOG"} {:fieldname "Index"} Index__DEBUG_LOG(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Index__DISPATCHER_HEADER"} {:fieldname "Index"} Index__DISPATCHER_HEADER(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "Information"} Information__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._NODE_ADDRESS"} {:fieldname "InitiatorAddressId"} InitiatorAddressId__DEVICE_EXTENSION(x: int) : int
{
  x + 1412
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_22"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_22(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._INQUIRYDATA"} {:fieldname "InquiryData"} InquiryData__DEVICE_EXTENSION(x: int) : int
{
  x + 804
}

function {:inline true} {:fieldmap "Mem_T.Inserted__DISPATCHER_HEADER"} {:fieldname "Inserted"} Inserted__DISPATCHER_HEADER(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.Inserted__KDEVICE_QUEUE_ENTRY"} {:fieldname "Inserted"} Inserted__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.InternalStatus__SCSI_REQUEST_BLOCK"} {:fieldname "InternalStatus"} InternalStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_22"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_22(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoCount__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "IoCount"} IoCount__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IoTimeoutValue__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "IoTimeoutValue"} IoTimeoutValue__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.IoWi__SBP2_BUSRESET_WORKITEM"} {:fieldname "IoWi"} IoWi__SBP2_BUSRESET_WORKITEM(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irb__IRBIRP"} {:fieldname "Irb"} Irb__IRBIRP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irp__IRBIRP"} {:fieldname "Irp"} Irp__IRBIRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Key_unnamed_tag_74"} {:fieldname "Key"} Key_unnamed_tag_74(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LUNResetSupported__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "LUNResetSupported"} LUNResetSupported__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.L__NPAGED_LOOKASIDE_LIST"} {:fieldname "L"} L__NPAGED_LOOKASIDE_LIST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LastStatusBlock__DEVICE_EXTENSION"} {:fieldname "LastStatusBlock"} LastStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.LastTransactionStatus__DEVICE_EXTENSION"} {:fieldname "LastTransactionStatus"} LastTransactionStatus__DEVICE_EXTENSION(x: int) : int
{
  x + 796
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "LegacyFlags"} LegacyFlags__DEVICE_INFORMATION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.LengthAndLoginId__LOGIN_RESPONSE"} {:fieldname "LengthAndLoginId"} LengthAndLoginId__LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthAndNumLogins__QUERY_LOGIN_RESPONSE"} {:fieldname "LengthAndNumLogins"} LengthAndNumLogins__QUERY_LOGIN_RESPONSE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.LengthInfo__ORB_QUERY_LOGIN"} {:fieldname "LengthInfo"} LengthInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_18"} {:fieldname "Length"} Length_unnamed_tag_18(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Level__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Level"} Level__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "Link"} Link__BUS_RESET_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "ListHead"} ListHead__GENERAL_LOOKASIDE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ListPointer__IRBIRP"} {:fieldname "ListPointer"} ListPointer__IRBIRP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.List__WORK_QUEUE_ITEM"} {:fieldname "List"} List__WORK_QUEUE_ITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LoadEject__START_STOP_RBC"} {:fieldname "LoadEject"} LoadEject__START_STOP_RBC(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LockNV__DISPATCHER_HEADER"} {:fieldname "LockNV"} LockNV__DISPATCHER_HEADER(x: int) : int
{
  x + 140
}

function {:inline true} {:fieldmap "Mem_T.LockQueue__KLOCK_QUEUE_HANDLE"} {:fieldname "LockQueue"} LockQueue__KLOCK_QUEUE_HANDLE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Lock__DISPATCHER_HEADER"} {:fieldname "Lock"} Lock__DISPATCHER_HEADER(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.Lock__KSPIN_LOCK_QUEUE"} {:fieldname "Lock"} Lock__KSPIN_LOCK_QUEUE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.LogEnd__DEBUG_LOG"} {:fieldname "LogEnd"} LogEnd__DEBUG_LOG(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LogEntry__DEVICE_EXTENSION"} {:fieldname "LogEntry"} LogEntry__DEVICE_EXTENSION(x: int) : int
{
  x + 4792
}

function {:inline true} {:fieldmap "Mem_T.LogStart__DEBUG_LOG"} {:fieldname "LogStart"} LogStart__DEBUG_LOG(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Logger__WPP_TRACE_CONTROL_BLOCK"} {:fieldname "Logger"} Logger__WPP_TRACE_CONTROL_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "LogicalBlockSize"} LogicalBlockSize__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.LogicalUnitNumber__CDB6INQUIRY"} {:fieldname "LogicalUnitNumber"} LogicalUnitNumber__CDB6INQUIRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.LoginRespContext__DEVICE_EXTENSION"} {:fieldname "LoginRespContext"} LoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2704
}

function {:inline true} {:fieldmap "Mem_T.LoginResponseAddress__ORB_LOGIN"} {:fieldname "LoginResponseAddress"} LoginResponseAddress__ORB_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T._LOGIN_RESPONSE"} {:fieldname "LoginResponse"} LoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.LoginResponse__DEVICE_EXTENSION"} {:fieldname "LoginResponse"} LoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2700
}

function {:inline true} {:fieldmap "Mem_T.LowPart__KSYSTEM_TIME"} {:fieldname "LowPart"} LowPart__KSYSTEM_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowQuad_unnamed_tag_68"} {:fieldname "LowQuad"} LowQuad_unnamed_tag_68(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__FDO_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 196
}

function {:inline true} {:fieldmap "Mem_T.Lun__DEVICE_INFORMATION"} {:fieldname "Lun"} Lun__DEVICE_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MODE_SELECT__CDB"} {:fieldname "MODE_SELECT"} MODE_SELECT__CDB(x: int) : int
{
  x + 1944
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE10__CDB"} {:fieldname "MODE_SENSE10"} MODE_SENSE10__CDB(x: int) : int
{
  x + 1888
}

function {:inline true} {:fieldmap "Mem_T.MODE_SENSE__CDB"} {:fieldname "MODE_SENSE"} MODE_SENSE__CDB(x: int) : int
{
  x + 1852
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorVersion__GET_LOCAL_HOST_INFO8"} {:fieldname "MajorVersion"} MajorVersion__GET_LOCAL_HOST_INFO8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ManagementAgentBaseReg__DEVICE_INFORMATION"} {:fieldname "ManagementAgentBaseReg"} ManagementAgentBaseReg__DEVICE_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "ManagementEvent"} ManagementEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 2388
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrbContext__DEVICE_EXTENSION"} {:fieldname "ManagementOrbContext"} ManagementOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2216
}

function {:inline true} {:fieldmap "Mem_T._STATUS_FIFO_BLOCK"} {:fieldname "ManagementOrbStatusBlock"} ManagementOrbStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 3224
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "ManagementOrbStatusContext"} ManagementOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3528
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrbTimeout__DEVICE_INFORMATION"} {:fieldname "ManagementOrbTimeout"} ManagementOrbTimeout__DEVICE_INFORMATION(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T._ORB_MNG"} {:fieldname "ManagementOrb"} ManagementOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.ManagementOrb__DEVICE_EXTENSION"} {:fieldname "ManagementOrb"} ManagementOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 2212
}

function {:inline true} {:fieldmap "Mem_T.Mask__DEBUG_LOG"} {:fieldname "Mask"} Mask__DEBUG_LOG(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncReadRequest"} MaxAsyncReadRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2"} {:fieldname "MaxAsyncWriteRequest"} MaxAsyncWriteRequest__GET_LOCAL_HOST_INFO2(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaxCdbLength__DEVICE_INFORMATION"} {:fieldname "MaxCdbLength"} MaxCdbLength__DEVICE_INFORMATION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__DEVICE_INFORMATION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__DEVICE_INFORMATION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.MaxClassTransferSize__FDO_DEVICE_EXTENSION"} {:fieldname "MaxClassTransferSize"} MaxClassTransferSize__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.MaxControllerPhySpeed__DEVICE_EXTENSION"} {:fieldname "MaxControllerPhySpeed"} MaxControllerPhySpeed__DEVICE_EXTENSION(x: int) : int
{
  x + 1428
}

function {:inline true} {:fieldmap "Mem_T.MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP"} {:fieldname "MaxDmaBufferSize"} MaxDmaBufferSize__GET_LOCAL_HOST_INFO7_WXP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaxOrbListDepth__DEVICE_EXTENSION"} {:fieldname "MaxOrbListDepth"} MaxOrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.MaxPages__PAGE_TABLE_CONTEXT"} {:fieldname "MaxPages"} MaxPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "MaxSegmentSize"} MaxSegmentSize__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__STRING"} {:fieldname "MaximumLength"} MaximumLength__STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__IO_SCSI_CAPABILITIES"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumPhysicalPages"} MaximumPhysicalPages__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__IO_SCSI_CAPABILITIES"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "MaximumTransferLength"} MaximumTransferLength__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.MdlAddress__IRP"} {:fieldname "MdlAddress"} MdlAddress__IRP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_READ"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Mdl__IRB_REQ_ASYNC_WRITE"} {:fieldname "Mdl"} Mdl__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.MediumType__MODE_PARAMETER_HEADER"} {:fieldname "MediumType"} MediumType__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MinorVersion__GET_LOCAL_HOST_INFO8"} {:fieldname "MinorVersion"} MinorVersion__GET_LOCAL_HOST_INFO8(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ModeDataLength__MODE_PARAMETER_HEADER"} {:fieldname "ModeDataLength"} ModeDataLength__MODE_PARAMETER_HEADER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeafBufferSize"} ModelLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "ModelLeaf"} ModelLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MultiplicationFactor__MODE_CACHING_PAGE"} {:fieldname "MultiplicationFactor"} MultiplicationFactor__MODE_CACHING_PAGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.NA_Bus_Number__NODE_ADDRESS"} {:fieldname "NA_Bus_Number"} NA_Bus_Number__NODE_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NA_Node_Number__NODE_ADDRESS"} {:fieldname "NA_Node_Number"} NA_Node_Number__NODE_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NextContextToFree__DEVICE_EXTENSION"} {:fieldname "NextContextToFree"} NextContextToFree__DEVICE_EXTENSION(x: int) : int
{
  x + 744
}

function {:inline true} {:fieldmap "Mem_T.NextOrbAddress__ORB_EXT_CMD"} {:fieldname "NextOrbAddress"} NextOrbAddress__ORB_EXT_CMD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__KSPIN_LOCK_QUEUE"} {:fieldname "Next"} Next__KSPIN_LOCK_QUEUE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Next__SINGLE_LIST_ENTRY"} {:fieldname "Next"} Next__SINGLE_LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT"} {:fieldname "NodeAddress"} NodeAddress__IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NodeAndLoginId__QUERY_RESPONSE_ELEMENT"} {:fieldname "NodeAndLoginId"} NodeAndLoginId__QUERY_RESPONSE_ELEMENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.NodeId__B1394_ADDRESS"} {:fieldname "NodeId"} NodeId__B1394_ADDRESS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumPDOsStarted__FDO_DEVICE_EXTENSION"} {:fieldname "NumPDOsStarted"} NumPDOsStarted__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.NumberOfBlocks__MODE_PARAMETER_BLOCK"} {:fieldname "NumberOfBlocks"} NumberOfBlocks__MODE_PARAMETER_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "NumberOfLogicalBlocks"} NumberOfLogicalBlocks__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.NumberOfPages__PAGE_TABLE_CONTEXT"} {:fieldname "NumberOfPages"} NumberOfPages__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Objects__DEVICE_RELATIONS"} {:fieldname "Objects"} Objects__DEVICE_RELATIONS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OctletPart__OCTLET"} {:fieldname "OctletPart"} OctletPart__OCTLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Octlet__IRBIRP"} {:fieldname "Octlet"} Octlet__IRBIRP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Off_High__ADDRESS_OFFSET"} {:fieldname "Off_High"} Off_High__ADDRESS_OFFSET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_High__B1394_ADDRESS"} {:fieldname "Off_High"} Off_High__B1394_ADDRESS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__ADDRESS_OFFSET"} {:fieldname "Off_Low"} Off_Low__ADDRESS_OFFSET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Off_Low__B1394_ADDRESS"} {:fieldname "Off_Low"} Off_Low__B1394_ADDRESS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.OldIrql__KLOCK_QUEUE_HANDLE"} {:fieldname "OldIrql"} OldIrql__KLOCK_QUEUE_HANDLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB10"} {:fieldname "OperationCode"} OperationCode__CDB10(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OperationCode__CDB6GENERIC"} {:fieldname "OperationCode"} OperationCode__CDB6GENERIC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_EXT_CMD"} {:fieldname "OrbInfo"} OrbInfo__ORB_EXT_CMD(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_MNG"} {:fieldname "OrbInfo"} OrbInfo__ORB_MNG(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_QUERY_LOGIN"} {:fieldname "OrbInfo"} OrbInfo__ORB_QUERY_LOGIN(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbInfo__ORB_TASK_MNG"} {:fieldname "OrbInfo"} OrbInfo__ORB_TASK_MNG(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__ASYNC_REQUEST_CONTEXT"} {:fieldname "OrbListDepth"} OrbListDepth__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 548
}

function {:inline true} {:fieldmap "Mem_T.OrbListDepth__DEVICE_EXTENSION"} {:fieldname "OrbListDepth"} OrbListDepth__DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.OrbListOwnedCount__DEVICE_EXTENSION"} {:fieldname "OrbListOwnedCount"} OrbListOwnedCount__DEVICE_EXTENSION(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.P_KTHREAD"} {:fieldname "OrbListOwner"} OrbListOwner__DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T.OrbListSpinLock__DEVICE_EXTENSION"} {:fieldname "OrbListSpinLock"} OrbListSpinLock__DEVICE_EXTENSION(x: int) : int
{
  x + 412
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "OrbList"} OrbList__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OrbPoolContext__DEVICE_EXTENSION"} {:fieldname "OrbPoolContext"} OrbPoolContext__DEVICE_EXTENSION(x: int) : int
{
  x + 3052
}

function {:inline true} {:fieldmap "Mem_T.OrbReadPayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbReadPayloadMask"} OrbReadPayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1432
}

function {:inline true} {:fieldmap "Mem_T.OrbWritePayloadMask__DEVICE_EXTENSION"} {:fieldname "OrbWritePayloadMask"} OrbWritePayloadMask__DEVICE_EXTENSION(x: int) : int
{
  x + 1436
}

function {:inline true} {:fieldmap "Mem_T._ORB_EXT_CMD"} {:fieldname "Orb"} Orb__ARCP_ORB(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalRequest__SCSI_REQUEST_BLOCK"} {:fieldname "OriginalRequest"} OriginalRequest__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.OriginalSrb__ASYNC_REQUEST_CONTEXT"} {:fieldname "OriginalSrb"} OriginalSrb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 544
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_22"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_22(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_5"} {:fieldname "Overlay"} Overlay_unnamed_tag_5(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PFBit__MODE_SELECT"} {:fieldname "PFBit"} PFBit__MODE_SELECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Packet__ASYNC_REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 540
}

function {:inline true} {:fieldmap "Mem_T.Packet__REQUEST_CONTEXT"} {:fieldname "Packet"} Packet__REQUEST_CONTEXT(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.PageCode__CDB6INQUIRY"} {:fieldname "PageCode"} PageCode__CDB6INQUIRY(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_CACHING_PAGE"} {:fieldname "PageCode"} PageCode__MODE_CACHING_PAGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PageCode__MODE_SENSE"} {:fieldname "PageCode"} PageCode__MODE_SENSE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PageLength__MODE_CACHING_PAGE"} {:fieldname "PageLength"} PageLength__MODE_CACHING_PAGE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PageSavable__MODE_CACHING_PAGE"} {:fieldname "PageSavable"} PageSavable__MODE_CACHING_PAGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PageTableContext__ASYNC_REQUEST_CONTEXT"} {:fieldname "PageTableContext"} PageTableContext__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.PageTable__PAGE_TABLE_CONTEXT"} {:fieldname "PageTable"} PageTable__PAGE_TABLE_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE"} {:fieldname "Page"} Page__MODE_RBC_DEVICE_PARAMETERS_HEADER_AND_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PagingPathCount"} PagingPathCount__DEVICE_EXTENSION(x: int) : int
{
  x + 772
}

function {:inline true} {:fieldmap "Mem_T.ParameterListLength__MODE_SELECT"} {:fieldname "ParameterListLength"} ParameterListLength__MODE_SELECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PartialMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "PartialMdl"} PartialMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.Password__ORB_LOGIN"} {:fieldname "Password"} Password__ORB_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pc__MODE_SENSE"} {:fieldname "Pc"} Pc__MODE_SENSE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Pdo__FDO_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PendingOrbList"} PendingOrbList__DEVICE_EXTENSION(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "PendingPowerIrp"} PendingPowerIrp__DEVICE_EXTENSION(x: int) : int
{
  x + 768
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4"} {:fieldname "PhysAddrMappingRoutine"} PhysAddrMappingRoutine__GET_LOCAL_HOST_INFO4(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Pointer__IO_STATUS_BLOCK"} {:fieldname "Pointer"} Pointer__IO_STATUS_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Portdriver__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Portdriver"} Portdriver__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PowerConditions__START_STOP_RBC"} {:fieldname "PowerConditions"} PowerConditions__START_STOP_RBC(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "PowerDeferredIrp"} PowerDeferredIrp__DEVICE_EXTENSION(x: int) : int
{
  x + 760
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.Processor__DISPATCHER_HEADER"} {:fieldname "Processor"} Processor__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductIdOffset"} ProductIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ProductId__INQUIRYDATA"} {:fieldname "ProductId"} ProductId__INQUIRYDATA(x: int) : int
{
  x + 180
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionLevel__INQUIRYDATA"} {:fieldname "ProductRevisionLevel"} ProductRevisionLevel__INQUIRYDATA(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T.ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "ProductRevisionOffset"} ProductRevisionOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.PropertyId__STORAGE_PROPERTY_QUERY"} {:fieldname "PropertyId"} PropertyId__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__QUADLET"} {:fieldname "QuadPart"} QuadPart__QUADLET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__ULARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__ULARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceText_unnamed_tag_8"} {:fieldname "QueryDeviceText"} QueryDeviceText_unnamed_tag_8(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginRespContext__DEVICE_EXTENSION"} {:fieldname "QueryLoginRespContext"} QueryLoginRespContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2880
}

function {:inline true} {:fieldmap "Mem_T._QUERY_LOGIN_RESPONSE"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__COMMON_BUFFER_DATA(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.QueryLoginResponse__DEVICE_EXTENSION"} {:fieldname "QueryLoginResponse"} QueryLoginResponse__DEVICE_EXTENSION(x: int) : int
{
  x + 2876
}

function {:inline true} {:fieldmap "Mem_T.QueryResponseAddress__ORB_QUERY_LOGIN"} {:fieldname "QueryResponseAddress"} QueryResponseAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.QueryType__STORAGE_PROPERTY_QUERY"} {:fieldname "QueryType"} QueryType__STORAGE_PROPERTY_QUERY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.QueueControlFlags__DISPATCHER_HEADER"} {:fieldname "QueueControlFlags"} QueueControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "QueueSortKey"} QueueSortKey__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RawDeviceOK__DEVICE_CAPABILITIES"} {:fieldname "RawDeviceOK"} RawDeviceOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.ReLoginCount__DEVICE_EXTENSION"} {:fieldname "ReLoginCount"} ReLoginCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4784
}

function {:inline true} {:fieldmap "Mem_T.ReadDisableCache__MODE_CACHING_PAGE"} {:fieldname "ReadDisableCache"} ReadDisableCache__MODE_CACHING_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ReadRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "ReadRetensionPriority"} ReadRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.ReconnectHold__DEVICE_INFORMATION"} {:fieldname "ReconnectHold"} ReconnectHold__DEVICE_INFORMATION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__INQUIRYDATA"} {:fieldname "RemovableMedia"} RemovableMedia__INQUIRYDATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.RemovableMedia__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "RemovableMedia"} RemovableMedia__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Removable__DEVICE_CAPABILITIES"} {:fieldname "Removable"} Removable__DEVICE_CAPABILITIES(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.RemoveEvent__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "RemoveEvent"} RemoveEvent__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T._IO_REMOVE_LOCK"} {:fieldname "RemoveLock"} RemoveLock__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 208
}

function {:inline true} {:fieldmap "Mem_T.Removed__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "Removed"} Removed__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ADDRESS_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ADDRESS_CONTEXT(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.RequestMdl__ASYNC_REQUEST_CONTEXT"} {:fieldname "RequestMdl"} RequestMdl__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.RequestNumber__SBP2_REQUEST"} {:fieldname "RequestNumber"} RequestNumber__SBP2_REQUEST(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RequestType__REQUEST_CONTEXT"} {:fieldname "RequestType"} RequestType__REQUEST_CONTEXT(x: int) : int
{
  x + 160
}

function {:inline true} {:fieldmap "Mem_T.RequestorMode__IRP"} {:fieldname "RequestorMode"} RequestorMode__IRP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "Required1394Offset"} Required1394Offset__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__CDB6INQUIRY"} {:fieldname "Reserved1"} Reserved1__CDB6INQUIRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Reserved1__DISPATCHER_HEADER"} {:fieldname "Reserved1"} Reserved1__DISPATCHER_HEADER(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Reserved2__DISPATCHER_HEADER"} {:fieldname "Reserved2"} Reserved2__DISPATCHER_HEADER(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Reserved3__DISPATCHER_HEADER"} {:fieldname "Reserved3"} Reserved3__DISPATCHER_HEADER(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.Reserved5__DISPATCHER_HEADER"} {:fieldname "Reserved5"} Reserved5__DISPATCHER_HEADER(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.ReservedMdl__DEVICE_EXTENSION"} {:fieldname "ReservedMdl"} ReservedMdl__DEVICE_EXTENSION(x: int) : int
{
  x + 800
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ADDRESS_CONTEXT"} {:fieldname "Reserved"} Reserved__ADDRESS_CONTEXT(x: int) : int
{
  x + 168
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Reserved"} Reserved__DEVICE_EXTENSION(x: int) : int
{
  x + 792
}

function {:inline true} {:fieldmap "Mem_T.Reserved__IO_REMOVE_LOCK_COMMON_BLOCK"} {:fieldname "Reserved"} Reserved__IO_REMOVE_LOCK_COMMON_BLOCK(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Reserved__ORB_QUERY_LOGIN"} {:fieldname "Reserved"} Reserved__ORB_QUERY_LOGIN(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__BUS_RESET_DATA"} {:fieldname "ResetContext"} ResetContext__BUS_RESET_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetContext"} ResetContext__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION"} {:fieldname "ResetRoutine"} ResetRoutine__IRB_REQ_BUS_RESET_NOTIFICATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.RetrieveTextLeaf_unnamed_tag_73"} {:fieldname "RetrieveTextLeaf"} RetrieveTextLeaf_unnamed_tag_73(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SPBit__MODE_SELECT"} {:fieldname "SPBit"} SPBit__MODE_SELECT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.START_STOP_RBC__CDB_RBC"} {:fieldname "START_STOP_RBC"} START_STOP_RBC__CDB_RBC(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.ScsiStatus__SCSI_REQUEST_BLOCK"} {:fieldname "ScsiStatus"} ScsiStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Scsi_unnamed_tag_8"} {:fieldname "Scsi"} Scsi_unnamed_tag_8(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBufferLength__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBufferLength"} SenseInfoBufferLength__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SenseInfoBuffer__SCSI_REQUEST_BLOCK"} {:fieldname "SenseInfoBuffer"} SenseInfoBuffer__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SenseKey__SENSE_DATA"} {:fieldname "SenseKey"} SenseKey__SENSE_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "SerialNumberOffset"} SerialNumberOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Sig_LOG_ENTRY32"} {:fieldname "Sig"} Sig_LOG_ENTRY32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 144
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.SilentInstall__DEVICE_CAPABILITIES"} {:fieldname "SilentInstall"} SilentInstall__DEVICE_CAPABILITIES(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Size__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Size"} Size__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SortKey__KDEVICE_QUEUE_ENTRY"} {:fieldname "SortKey"} SortKey__KDEVICE_QUEUE_ENTRY(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SrbFlags__SCSI_REQUEST_BLOCK"} {:fieldname "SrbFlags"} SrbFlags__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SrbStatus__SCSI_REQUEST_BLOCK"} {:fieldname "SrbStatus"} SrbStatus__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SrbType__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "SrbType"} SrbType__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Srb__ASYNC_REQUEST_CONTEXT"} {:fieldname "Srb"} Srb__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Srb_unnamed_tag_26"} {:fieldname "Srb"} Srb_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StackSize__DEVICE_OBJECT"} {:fieldname "StackSize"} StackSize__DEVICE_OBJECT(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "StartEvent"} StartEvent__DEVICE_EXTENSION(x: int) : int
{
  x + 2544
}

function {:inline true} {:fieldmap "Mem_T.StartNextPacketCount__DEVICE_EXTENSION"} {:fieldname "StartNextPacketCount"} StartNextPacketCount__DEVICE_EXTENSION(x: int) : int
{
  x + 4780
}

function {:inline true} {:fieldmap "Mem_T.Start__START_STOP_RBC"} {:fieldname "Start"} Start__START_STOP_RBC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_39"} {:fieldname "State"} State_unnamed_tag_39(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_MNG"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_MNG(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_QUERY_LOGIN"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_QUERY_LOGIN(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusBlockAddress__ORB_TASK_MNG"} {:fieldname "StatusBlockAddress"} StatusBlockAddress__ORB_TASK_MNG(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.StatusFifoBase__DEVICE_EXTENSION"} {:fieldname "StatusFifoBase"} StatusFifoBase__DEVICE_EXTENSION(x: int) : int
{
  x + 4368
}

function {:inline true} {:fieldmap "Mem_T._SLIST_HEADER"} {:fieldname "StatusFifoListHead"} StatusFifoListHead__DEVICE_EXTENSION(x: int) : int
{
  x + 4348
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "StatusFifoLock"} StatusFifoLock__DEVICE_EXTENSION(x: int) : int
{
  x + 4364
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SupportedAsynchronousEvents__IO_SCSI_CAPABILITIES"} {:fieldname "SupportedAsynchronousEvents"} SupportedAsynchronousEvents__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SurpriseRemovalOK__DEVICE_CAPABILITIES"} {:fieldname "SurpriseRemovalOK"} SurpriseRemovalOK__DEVICE_CAPABILITIES(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_1"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_1(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__DEVICE_EXTENSION(x: int) : int
{
  x + 756
}

function {:inline true} {:fieldmap "Mem_T.SystemPowerState__FDO_DEVICE_EXTENSION"} {:fieldname "SystemPowerState"} SystemPowerState__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TL_Length__TEXTUAL_LEAF"} {:fieldname "TL_Length"} TL_Length__TEXTUAL_LEAF(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Tag__ASYNC_REQUEST_CONTEXT"} {:fieldname "Tag"} Tag__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.TaggedQueuing__IO_SCSI_CAPABILITIES"} {:fieldname "TaggedQueuing"} TaggedQueuing__IO_SCSI_CAPABILITIES(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TargetResetSupported__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "TargetResetSupported"} TargetResetSupported__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.TaskOrbContext__DEVICE_EXTENSION"} {:fieldname "TaskOrbContext"} TaskOrbContext__DEVICE_EXTENSION(x: int) : int
{
  x + 2040
}

function {:inline true} {:fieldmap "Mem_T._STATUS_FIFO_BLOCK"} {:fieldname "TaskOrbStatusBlock"} TaskOrbStatusBlock__DEVICE_EXTENSION(x: int) : int
{
  x + 3700
}

function {:inline true} {:fieldmap "Mem_T._ADDRESS_CONTEXT"} {:fieldname "TaskOrbStatusContext"} TaskOrbStatusContext__DEVICE_EXTENSION(x: int) : int
{
  x + 4004
}

function {:inline true} {:fieldmap "Mem_T._ORB_TASK_MNG"} {:fieldname "TaskOrb"} TaskOrb__COMMON_BUFFER_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.TaskOrb__DEVICE_EXTENSION"} {:fieldname "TaskOrb"} TaskOrb__DEVICE_EXTENSION(x: int) : int
{
  x + 2036
}

function {:inline true} {:fieldmap "Mem_T.ThreadControlFlags__DISPATCHER_HEADER"} {:fieldname "ThreadControlFlags"} ThreadControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.TimeOutValue__SCSI_REQUEST_BLOCK"} {:fieldname "TimeOutValue"} TimeOutValue__SCSI_REQUEST_BLOCK(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.Timer2CancelPending__DISPATCHER_HEADER"} {:fieldname "Timer2CancelPending"} Timer2CancelPending__DISPATCHER_HEADER(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.Timer2Disabled__DISPATCHER_HEADER"} {:fieldname "Timer2Disabled"} Timer2Disabled__DISPATCHER_HEADER(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.Timer2Expiring__DISPATCHER_HEADER"} {:fieldname "Timer2Expiring"} Timer2Expiring__DISPATCHER_HEADER(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Timer2Flags__DISPATCHER_HEADER"} {:fieldname "Timer2Flags"} Timer2Flags__DISPATCHER_HEADER(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.Timer2Inserted__DISPATCHER_HEADER"} {:fieldname "Timer2Inserted"} Timer2Inserted__DISPATCHER_HEADER(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Timer2Running__DISPATCHER_HEADER"} {:fieldname "Timer2Running"} Timer2Running__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Timer2SetPending__DISPATCHER_HEADER"} {:fieldname "Timer2SetPending"} Timer2SetPending__DISPATCHER_HEADER(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.TimerControlFlags__DISPATCHER_HEADER"} {:fieldname "TimerControlFlags"} TimerControlFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TimerDpc"} TimerDpc__ASYNC_REQUEST_CONTEXT(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.TimerMiscFlags__DISPATCHER_HEADER"} {:fieldname "TimerMiscFlags"} TimerMiscFlags__DISPATCHER_HEADER(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.TotalFrees__GENERAL_LOOKASIDE"} {:fieldname "TotalFrees"} TotalFrees__GENERAL_LOOKASIDE(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.TransactionType__ADDRESS_CONTEXT"} {:fieldname "TransactionType"} TransactionType__ADDRESS_CONTEXT(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.Type__DEVICE_EXTENSION"} {:fieldname "Type"} Type__DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.Type__FDO_DEVICE_EXTENSION"} {:fieldname "Type"} Type__FDO_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_28"} {:fieldname "Type"} Type_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_36"} {:fieldname "Type"} Type_unnamed_tag_36(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_39"} {:fieldname "Type"} Type_unnamed_tag_39(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "UniSymLinkName"} UniSymLinkName__DEVICE_EXTENSION(x: int) : int
{
  x + 1304
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UniqueID__DEVICE_CAPABILITIES"} {:fieldname "UniqueID"} UniqueID__DEVICE_CAPABILITIES(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitCharacteristics__DEVICE_INFORMATION"} {:fieldname "UnitCharacteristics"} UnitCharacteristics__DEVICE_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryBufferSize"} UnitDependentDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectoryLocation"} UnitDependentDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDependentDirectory"} UnitDependentDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryBufferSize"} UnitDirectoryBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectoryLocation"} UnitDirectoryLocation__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "UnitDirectory"} UnitDirectory__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.UsageNotification_unnamed_tag_8"} {:fieldname "UsageNotification"} UsageNotification_unnamed_tag_8(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "VendorIdOffset"} VendorIdOffset__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.VendorId__INQUIRYDATA"} {:fieldname "VendorId"} VendorId__INQUIRYDATA(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeafBufferSize"} VendorLeafBufferSize__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION"} {:fieldname "VendorLeaf"} VendorLeaf__IRB_REQ_GET_CONFIGURATION_INFORMATION(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_ADAPTER_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_ADAPTER_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_DEVICE_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_DEVICE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Version__STORAGE_MINIPORT_DESCRIPTOR"} {:fieldname "Version"} Version__STORAGE_MINIPORT_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WaitListHead__DISPATCHER_HEADER"} {:fieldname "WaitListHead"} WaitListHead__DISPATCHER_HEADER(x: int) : int
{
  x + 148
}

function {:inline true} {:fieldmap "Mem_T.Wake__DISPATCHER_HEADER"} {:fieldname "Wake"} Wake__DISPATCHER_HEADER(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.WorkItem__IO_WORKITEM"} {:fieldname "WorkItem"} WorkItem__IO_WORKITEM(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE"} {:fieldname "WriteCacheDisable"} WriteCacheDisable__MODE_RBC_DEVICE_PARAMETERS_PAGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteCacheEnable__MODE_CACHING_PAGE"} {:fieldname "WriteCacheEnable"} WriteCacheEnable__MODE_CACHING_PAGE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.WriteRetensionPriority__MODE_CACHING_PAGE"} {:fieldname "WriteRetensionPriority"} WriteRetensionPriority__MODE_CACHING_PAGE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.asUlong_unnamed_tag_80"} {:fieldname "asUlong"} asUlong_unnamed_tag_80(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.b__LOG_SIGNATURE"} {:fieldname "b"} b__LOG_SIGNATURE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulAccessType"} fulAccessType__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_READ"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_ASYNC_WRITE"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.fulFlags__IRB_REQ_BUS_RESET"} {:fieldname "fulFlags"} fulFlags__IRB_REQ_BUS_RESET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.fulNotificationOptions__NOTIFICATION_INFO_WXP"} {:fieldname "fulNotificationOptions"} fulNotificationOptions__NOTIFICATION_INFO_WXP(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "fulSpeed"} fulSpeed__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "hAddressRange"} hAddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.l__LOG_SIGNATURE"} {:fieldname "l"} l__LOG_SIGNATURE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "nAddressesToFree"} nAddressesToFree__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_READ"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nBlockSize__IRB_REQ_ASYNC_WRITE"} {:fieldname "nBlockSize"} nBlockSize__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "nLength"} nLength__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION"} {:fieldname "nLevel"} nLevel__IRB_REQ_GET_LOCAL_HOST_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToRead__IRB_REQ_ASYNC_READ"} {:fieldname "nNumberOfBytesToRead"} nNumberOfBytesToRead__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE"} {:fieldname "nNumberOfBytesToWrite"} nNumberOfBytesToWrite__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.nSpeed__IRB_REQ_ASYNC_READ"} {:fieldname "nSpeed"} nSpeed__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_ALLOCATE_ADDRESS_RANGE(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "p1394AddressRange"} p1394AddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE"} {:fieldname "pAddressRange"} pAddressRange__IRB_REQ_FREE_ADDRESS_RANGE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__IRB"} {:fieldname "u"} u__IRB(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.u__OCTLET"} {:fieldname "u"} u__OCTLET(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.u__QUADLET"} {:fieldname "u"} u__QUADLET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.u__SBP2_REQUEST"} {:fieldname "u"} u__SBP2_REQUEST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_READ"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_READ(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulGeneration__IRB_REQ_ASYNC_WRITE"} {:fieldname "ulGeneration"} ulGeneration__IRB_REQ_ASYNC_WRITE(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ulLength_unnamed_tag_74"} {:fieldname "ulLength"} ulLength_unnamed_tag_74(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES"} {:fieldname "ulNumberOfDestinations"} ulNumberOfDestinations__IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniGenericName"} uniGenericName__DEVICE_INFORMATION(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniModelId"} uniModelId__DEVICE_INFORMATION(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "uniVendorId"} uniVendorId__DEVICE_INFORMATION(x: int) : int
{
  x + 232
}

const {:string "%08x%08x"} unique strConst__li2bpl29: int;

const {:string "%ws %ws IEEE 1394 SBP2 Device"} unique strConst__li2bpl34: int;

const {:string "&"} unique strConst__li2bpl38: int;

const {:string "&REV"} unique strConst__li2bpl41: int;

const {:string "1.0"} unique strConst__li2bpl28: int;

const {:string "<NULL>"} unique strConst__li2bpl2: int;

const {:string "CmdSetId"} unique strConst__li2bpl39: int;

const {:string "D"} unique strConst__li2bpl9: int;

const {:string "F"} unique strConst__li2bpl10: int;

const {:string "FireLite Drive  "} unique strConst__li2bpl22: int;

const {:string "FireREX Storage"} unique strConst__li2bpl16: int;

const {:string "GSA-5163D Super Multi DVD Rewriter"} unique strConst__li2bpl15: int;

const {:string "GenCdRom"} unique strConst__li2bpl55: int;

const {:string "GenChanger"} unique strConst__li2bpl58: int;

const {:string "GenDisk"} unique strConst__li2bpl51: int;

const {:string "GenOptical"} unique strConst__li2bpl57: int;

const {:string "GenPrinter"} unique strConst__li2bpl53: int;

const {:string "GenSbp2Device"} unique strConst__li2bpl50: int;

const {:string "GenScanner"} unique strConst__li2bpl56: int;

const {:string "GenSequential"} unique strConst__li2bpl52: int;

const {:string "GenWorm"} unique strConst__li2bpl54: int;

const {:string "HDD USB 2.0/1394A"} unique strConst__li2bpl20: int;

const {:string "HL-DT-ST"} unique strConst__li2bpl24: int;

const {:string "IV00"} unique strConst__li2bpl43: int;

const {:string "IV00XXXX"} unique strConst__li2bpl44: int;

const {:string "Iomega"} unique strConst__li2bpl19: int;

const {:string "LUN"} unique strConst__li2bpl40: int;

const {:string "LUN %d"} unique strConst__li2bpl33: int;

const {:string "LegacyFlags"} unique strConst__li2bpl23: int;

const {:string "NULL"} unique strConst__li2bpl1: int;

const {:string "Niveus"} unique strConst__li2bpl42: int;

const {:string "P"} unique strConst__li2bpl11: int;

const {:string "PL3507"} unique strConst__li2bpl18: int;

const {:string "Prolific"} unique strConst__li2bpl17: int;

const {:string "S"} unique strConst__li2bpl8: int;

const {:string "SBP2\\"} unique strConst__li2bpl36: int;

const {:string "SBP2\\%d&%d&%d"} unique strConst__li2bpl31: int;

const {:string "SBP2\\%ws&%ws&LUN%x"} unique strConst__li2bpl46: int;

const {:string "SBP2\\%ws&%ws&LUN%x&REV%x"} unique strConst__li2bpl45: int;

const {:string "SBP2\\UNKNOWN VENDOR&UNKNOWN MODEL&LUN%x"} unique strConst__li2bpl47: int;

const {:string "Sbp2"} unique strConst__li2bpl27: int;

const {:string "TI STORAGELYNX!!"} unique strConst__li2bpl25: int;

const {:string "The driver is calling IoCompleteRequest twice."} unique strConst__li2bpl5: int;

const {:string "UNKNOWN MODEL"} unique strConst__li2bpl32: int;

const {:string "UNKNOWN VENDOR AND MODEL IEEE 1394 SBP2 Device"} unique strConst__li2bpl35: int;

const {:string "UNKNOWN VENDOR&UNKNOWN MODEL"} unique strConst__li2bpl37: int;

const {:string "UNKNOWN_MODEL"} unique strConst__li2bpl48: int;

const {:string "Unknown"} unique strConst__li2bpl60: int;

const {:string "VGP-XL1B"} unique strConst__li2bpl14: int;

const {:string "Vendor"} unique strConst__li2bpl26: int;

const {:string "\\Device\\Sbp2\\%ws&%ws&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl49: int;

const {:string "\\Device\\Sbp2\\UNKNOWN_VENDOR&UNKNOWN_MODEL&%x&%08x_%08x_Instance%02d"} unique strConst__li2bpl59: int;

const {:string "\\DosDevices\\Sbp2&LUN%x&%08x%08x&Instance%02d"} unique strConst__li2bpl30: int;

const {:string "callee"} unique strConst__li2bpl3: int;

const {:string "caller"} unique strConst__li2bpl0: int;

const {:string "f"} unique strConst__li2bpl12: int;

const {:string "fdo"} unique strConst__li2bpl7: int;

const {:string "halt"} unique strConst__li2bpl4: int;

const {:string "iPod"} unique strConst__li2bpl21: int;

const {:string "p"} unique strConst__li2bpl13: int;

const {:string "pdo"} unique strConst__li2bpl6: int;

const {:allocated} li2bplFunctionConstant375: int;

axiom li2bplFunctionConstant375 == 375;

const {:allocated} li2bplFunctionConstant378: int;

axiom li2bplFunctionConstant378 == 378;

const {:allocated} li2bplFunctionConstant385: int;

axiom li2bplFunctionConstant385 == 385;

const {:allocated} li2bplFunctionConstant389: int;

axiom li2bplFunctionConstant389 == 389;

const {:allocated} li2bplFunctionConstant391: int;

axiom li2bplFunctionConstant391 == 391;

const {:allocated} li2bplFunctionConstant392: int;

axiom li2bplFunctionConstant392 == 392;

const {:allocated} li2bplFunctionConstant399: int;

axiom li2bplFunctionConstant399 == 399;

const {:allocated} li2bplFunctionConstant461: int;

axiom li2bplFunctionConstant461 == 461;

const {:allocated} li2bplFunctionConstant463: int;

axiom li2bplFunctionConstant463 == 463;

const {:allocated} li2bplFunctionConstant464: int;

axiom li2bplFunctionConstant464 == 464;

const {:allocated} li2bplFunctionConstant465: int;

axiom li2bplFunctionConstant465 == 465;

const {:allocated} li2bplFunctionConstant523: int;

axiom li2bplFunctionConstant523 == 523;

const {:allocated} li2bplFunctionConstant641: int;

axiom li2bplFunctionConstant641 == 641;

const {:allocated} li2bplFunctionConstant694: int;

axiom li2bplFunctionConstant694 == 694;

const {:allocated} li2bplFunctionConstant697: int;

axiom li2bplFunctionConstant697 == 697;

const {:allocated} li2bplFunctionConstant698: int;

axiom li2bplFunctionConstant698 == 698;

const {:allocated} li2bplFunctionConstant700: int;

axiom li2bplFunctionConstant700 == 700;

const {:allocated} li2bplFunctionConstant799: int;

axiom li2bplFunctionConstant799 == 799;

const {:allocated} li2bplFunctionConstant801: int;

axiom li2bplFunctionConstant801 == 801;

const {:allocated} li2bplFunctionConstant804: int;

axiom li2bplFunctionConstant804 == 804;

implementation {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#0(actual_PdoExtension_1: int) returns (Tmp_165: int)
{
  var {:pointer} Tmp_166: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} Tmp_168: int;
  var {:pointer} Tmp_169: int;
  var {:scalar} Tmp_170: int;
  var {:scalar} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:pointer} Tmp_173: int;
  var {:pointer} Tmp_174: int;
  var {:scalar} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:pointer} Tmp_178: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:pointer} Tmp_183: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:scalar} Tmp_187: int;
  var {:scalar} Tmp_188: int;
  var {:scalar} Tmp_189: int;
  var {:pointer} Tmp_190: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} getLocalHostInfo7: int;
  var {:scalar} Tmp_192: int;
  var {:pointer} Tmp_193: int;
  var {:pointer} Tmp_194: int;
  var {:scalar} Tmp_195: int;
  var {:scalar} Tmp_196: int;
  var {:scalar} Tmp_197: int;
  var {:pointer} Tmp_198: int;
  var {:pointer} Tmp_199: int;
  var {:scalar} Tmp_200: int;
  var {:scalar} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:pointer} packet: int;
  var {:scalar} status_4: int;
  var {:pointer} Tmp_203: int;
  var {:pointer} Tmp_204: int;
  var {:scalar} Tmp_205: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:pointer} Tmp_209: int;
  var {:scalar} Tmp_210: int;
  var {:pointer} Tmp_211: int;
  var {:pointer} Tmp_212: int;
  var {:pointer} PdoExtension_1: int;

  anon0:
    call {:si_unique_call 1749} getLocalHostInfo7 := __HAVOC_malloc(24);
    call {:si_unique_call 1750} packet := __HAVOC_malloc(4);
    PdoExtension_1 := actual_PdoExtension_1;
    call {:si_unique_call 1751} Tmp_167 := __HAVOC_malloc(4);
    call {:si_unique_call 1752} Tmp_169 := __HAVOC_malloc(4);
    call {:si_unique_call 1753} Tmp_185 := __HAVOC_malloc(4);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1754} AllocateIrpAndIrb(PdoExtension_1, packet);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_178;
    assume {:nonnull} Tmp_178 != 0;
    assume Tmp_178 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_173;
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_172;
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_180;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    assume false;
    return;

  anon91_Then:
    Tmp_165 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;
}



procedure {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#0(actual_PdoExtension_1: int) returns (Tmp_165: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_165 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#1(actual_PdoExtension_1: int) returns (Tmp_165: int)
{
  var {:pointer} Tmp_166: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} Tmp_168: int;
  var {:pointer} Tmp_169: int;
  var {:scalar} Tmp_170: int;
  var {:scalar} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:pointer} Tmp_173: int;
  var {:pointer} Tmp_174: int;
  var {:scalar} Tmp_175: int;
  var {:pointer} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:pointer} Tmp_178: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} Tmp_180: int;
  var {:pointer} Tmp_181: int;
  var {:pointer} Tmp_182: int;
  var {:pointer} Tmp_183: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:scalar} Tmp_187: int;
  var {:scalar} Tmp_188: int;
  var {:scalar} Tmp_189: int;
  var {:pointer} Tmp_190: int;
  var {:scalar} Tmp_191: int;
  var {:scalar} getLocalHostInfo7: int;
  var {:scalar} Tmp_192: int;
  var {:pointer} Tmp_193: int;
  var {:pointer} Tmp_194: int;
  var {:scalar} Tmp_195: int;
  var {:scalar} Tmp_196: int;
  var {:scalar} Tmp_197: int;
  var {:pointer} Tmp_198: int;
  var {:pointer} Tmp_199: int;
  var {:scalar} Tmp_200: int;
  var {:scalar} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:pointer} packet: int;
  var {:scalar} status_4: int;
  var {:pointer} Tmp_203: int;
  var {:pointer} Tmp_204: int;
  var {:scalar} Tmp_205: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} Tmp_207: int;
  var {:pointer} Tmp_209: int;
  var {:scalar} Tmp_210: int;
  var {:pointer} Tmp_211: int;
  var {:pointer} Tmp_212: int;
  var {:pointer} PdoExtension_1: int;
  var vslice_dummy_var_1104: int;
  var vslice_dummy_var_1105: int;
  var vslice_dummy_var_1106: int;
  var vslice_dummy_var_1107: int;
  var vslice_dummy_var_1108: int;
  var vslice_dummy_var_1109: int;
  var vslice_dummy_var_1110: int;
  var vslice_dummy_var_1111: int;

  anon0:
    call {:si_unique_call 1755} getLocalHostInfo7 := __HAVOC_malloc(24);
    call {:si_unique_call 1756} packet := __HAVOC_malloc(4);
    PdoExtension_1 := actual_PdoExtension_1;
    call {:si_unique_call 1757} Tmp_167 := __HAVOC_malloc(4);
    call {:si_unique_call 1758} Tmp_169 := __HAVOC_malloc(4);
    call {:si_unique_call 1759} Tmp_185 := __HAVOC_malloc(4);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    call {:si_unique_call 1760} AllocateIrpAndIrb(PdoExtension_1, packet);
    assume {:nonnull} packet != 0;
    assume packet > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_178;
    assume {:nonnull} Tmp_178 != 0;
    assume Tmp_178 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_173;
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_172;
    assume {:nonnull} Tmp_172 != 0;
    assume Tmp_172 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_180;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_1104;
    call {:si_unique_call 1761} status_4 := Sbp2SendRequest#0(PdoExtension_1, vslice_dummy_var_1104, 2);
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} yogi_error != 1;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} status_4 < 0;
    goto L121;

  L121:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_1105;
    call {:si_unique_call 1762} DeAllocateIrpAndIrb(PdoExtension_1, vslice_dummy_var_1105);
    Tmp_165 := status_4;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon92_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_199;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  L32:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_204;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_190;
    assume {:nonnull} Tmp_190 != 0;
    assume Tmp_190 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_193;
    assume {:nonnull} Tmp_193 != 0;
    assume Tmp_193 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_166;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_166 != 0;
    assume Tmp_166 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_1106;
    call {:si_unique_call 1763} status_4 := Sbp2SendRequest#0(PdoExtension_1, vslice_dummy_var_1106, 2);
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} yogi_error != 1;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} status_4 < 0;
    goto L121;

  anon93_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    Tmp_189 := 160;
    goto L50;

  L50:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    Tmp_191 := 160;
    goto L71;

  L71:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  L64:
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_212;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_174;
    assume {:nonnull} Tmp_174 != 0;
    assume Tmp_174 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_211;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_209;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_1107;
    call {:si_unique_call 1764} status_4 := Sbp2SendRequest#0(PdoExtension_1, vslice_dummy_var_1107, 2);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} yogi_error != 1;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} status_4 < 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_169;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    havoc Tmp_182;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_187;
    call {:si_unique_call 1765} WPP_SF_q(Tmp_187, 119, Tmp_182, PdoExtension_1);
    goto L121;

  anon114_Then:
    goto L121;

  anon135_Then:
    goto L121;

  anon113_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L121;

  anon104_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_183;
    assume {:nonnull} Tmp_183 != 0;
    assume Tmp_183 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_206;
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_202;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc Tmp_207;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    assume {:nonnull} packet != 0;
    assume packet > 0;
    havoc vslice_dummy_var_1108;
    call {:si_unique_call 1766} status_4 := Sbp2SendRequest#0(PdoExtension_1, vslice_dummy_var_1108, 2);
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} yogi_error != 1;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} status_4 < 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_185;
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    havoc Tmp_177;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_196;
    call {:si_unique_call 1767} WPP_SF_q(Tmp_196, 120, Tmp_177, PdoExtension_1);
    goto L139;

  L139:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_176;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    status_4 := 0;
    goto L121;

  anon112_Then:
    goto L139;

  anon134_Then:
    goto L139;

  anon111_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L139;

  anon105_Then:
    assume {:partition} 0 <= status_4;
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_175;
    goto L113;

  L113:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_198;
    assume {:nonnull} Tmp_198 != 0;
    assume Tmp_198 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_179;
    assume {:nonnull} Tmp_179 != 0;
    assume Tmp_179 > 0;
    havoc Tmp_205;
    goto L116;

  L116:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_186;
    assume {:nonnull} Tmp_186 != 0;
    assume Tmp_186 > 0;
    goto L120;

  L120:
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_167;
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    havoc Tmp_184;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_197;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_168;
    assume {:nonnull} Tmp_168 != 0;
    assume Tmp_168 > 0;
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc vslice_dummy_var_1109;
    havoc vslice_dummy_var_1110;
    havoc vslice_dummy_var_1111;
    call {:si_unique_call 1768} WPP_SF_qDDD(Tmp_197, 121, Tmp_184, PdoExtension_1, vslice_dummy_var_1109, vslice_dummy_var_1110, vslice_dummy_var_1111);
    goto L121;

  anon110_Then:
    goto L121;

  anon132_Then:
    goto L121;

  anon109_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L121;

  anon131_Then:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} getLocalHostInfo7 != 0;
    assume getLocalHostInfo7 > 0;
    havoc Tmp_195;
    goto L134;

  L134:
    Tmp_205 := Tmp_195;
    goto L116;

  anon108_Then:
    Tmp_195 := 2093056;
    goto L134;

  anon107_Then:
    Tmp_175 := 2093056;
    goto L113;

  anon106_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_181;
    assume {:nonnull} Tmp_181 != 0;
    assume Tmp_181 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_203;
    assume {:nonnull} Tmp_203 != 0;
    assume Tmp_203 > 0;
    havoc Tmp_192;
    goto L137;

  L137:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_194;
    assume {:nonnull} Tmp_194 != 0;
    assume Tmp_194 > 0;
    goto L120;

  anon133_Then:
    Tmp_192 := 2093056;
    goto L137;

  anon130_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon129_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon103_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_191;
    goto L71;

  anon123_Then:
    goto L64;

  anon124_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    Tmp_200 := 144;
    goto L75;

  L75:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon102_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_200;
    goto L75;

  anon125_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    Tmp_201 := 128;
    goto L79;

  L79:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon101_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_201;
    goto L79;

  anon95_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    Tmp_210 := 112;
    goto L83;

  L83:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L64;

  anon100_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_210;
    goto L83;

  anon99_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_189;
    goto L50;

  anon120_Then:
    goto L43;

  anon121_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    Tmp_188 := 144;
    goto L54;

  L54:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon98_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_188;
    goto L54;

  anon122_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    Tmp_171 := 128;
    goto L58;

  L58:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon97_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_171;
    goto L58;

  anon94_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_170 := 112;
    goto L62;

  L62:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L43;

  anon96_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    havoc Tmp_170;
    goto L62;

  anon128_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon115_Then:
    goto L23;

  L23:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon116_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon117_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon118_Then:
    goto L23;

  anon119_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon127_Then:
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    assume {:nonnull} PdoExtension_1 != 0;
    assume PdoExtension_1 > 0;
    goto L32;

  anon126_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon91_Then:
    Tmp_165 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetControllerInfo"} Sbp2GetControllerInfo#1(actual_PdoExtension_1: int) returns (Tmp_165: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest#0(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1292: int)
{
  var {:pointer} Tmp_1293: int;
  var {:scalar} Tmp_1294: int;
  var {:scalar} tick: int;
  var {:pointer} s_p_e_c_i_a_l_65: int;
  var {:pointer} Tmp_1295: int;
  var {:pointer} pdoExtension_9: int;
  var {:pointer} Tmp_1296: int;
  var {:pointer} Tmp_1297: int;
  var {:pointer} sdv_435: int;
  var {:scalar} Tmp_1298: int;
  var {:pointer} Tmp_1299: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_1300: int;
  var {:pointer} pComplete: int;
  var {:scalar} Tmp_1301: int;
  var {:pointer} Tmp_1302: int;
  var {:pointer} Tmp_1303: int;
  var {:scalar} sdv_437: int;
  var {:pointer} sdv_438: int;
  var {:pointer} Tmp_1304: int;
  var {:pointer} s_p_e_c_i_a_l_66: int;
  var {:pointer} Tmp_1305: int;
  var {:scalar} delay: int;
  var {:scalar} sdv_439: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:pointer} Tmp_1306: int;
  var {:scalar} cIrql_6: int;
  var {:scalar} sdv_442: int;
  var {:scalar} status_34: int;
  var {:pointer} Tmp_1307: int;
  var {:pointer} Tmp_1308: int;
  var {:scalar} completed: int;
  var {:pointer} Tmp_1309: int;
  var {:pointer} Tmp_1310: int;
  var {:pointer} DeviceExtension_5: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_1112: int;
  var vslice_dummy_var_1113: int;
  var vslice_dummy_var_1114: int;
  var vslice_dummy_var_1115: int;
  var vslice_dummy_var_1116: int;
  var vslice_dummy_var_1117: int;
  var vslice_dummy_var_1118: int;

  anon0:
    call {:si_unique_call 1769} tick := __HAVOC_malloc(20);
    call {:si_unique_call 1770} delay := __HAVOC_malloc(20);
    DeviceExtension_5 := actual_DeviceExtension_5;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    call {:si_unique_call 1771} Tmp_1304 := __HAVOC_malloc(4);
    call {:si_unique_call 1772} Tmp_1308 := __HAVOC_malloc(4);
    call {:si_unique_call 1773} Tmp_1310 := __HAVOC_malloc(4);
    originalTransferMode := TransferMode;
    requestContext := 0;
    pdoExtension_9 := 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1305;
    assume {:nonnull} Tmp_1305 != 0;
    assume Tmp_1305 > 0;
    goto L13;

  L13:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    pdoExtension_9 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1299;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    Tmp_1292 := -1073741823;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon78_Then:
    goto L20;

  L20:
    call {:si_unique_call 1774} Tmp_1300 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1300 != 0;
    assume Tmp_1300 > 0;
    call {:si_unique_call 1775} sdv_KeAcquireSpinLock(0, Tmp_1300);
    assume {:nonnull} Tmp_1300 != 0;
    assume Tmp_1300 > 0;
    havoc cIrql_6;
    call {:si_unique_call 1776} sdv_438 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_438;
    call {:si_unique_call 1777} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L32;

  L32:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} requestContext == 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1310;
    assume {:nonnull} Tmp_1310 != 0;
    assume Tmp_1310 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    havoc Tmp_1303;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1301;
    call {:si_unique_call 1778} WPP_SF_(Tmp_1301, 18, Tmp_1303);
    goto L152;

  L152:
    Tmp_1292 := -1073741670;
    goto L1;

  anon75_Then:
    goto L152;

  anon87_Then:
    goto L152;

  anon74_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon60_Then:
    assume {:partition} requestContext != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 1779} sdv_439 := sdv_KeGetCurrentIrql();
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_439 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L37;

  L37:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  L51:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_1112;
    call {:si_unique_call 1780} nextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_1112);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_1113;
    call {:si_unique_call 1781} sdv_IoSetCompletionRoutine(vslice_dummy_var_1113, li2bplFunctionConstant523, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_1114;
    havoc vslice_dummy_var_1115;
    call {:si_unique_call 1782} status_34 := sdv_IoCallDriver(vslice_dummy_var_1114, vslice_dummy_var_1115);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_34 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1307;
    assume {:nonnull} Tmp_1307 != 0;
    assume Tmp_1307 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  L82:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1308;
    assume {:nonnull} Tmp_1308 != 0;
    assume Tmp_1308 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1295;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1294;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1306;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1293;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    havoc vslice_dummy_var_1116;
    havoc vslice_dummy_var_1117;
    havoc vslice_dummy_var_1118;
    call {:si_unique_call 1783} WPP_SF_DDD(Tmp_1294, 20, Tmp_1295, vslice_dummy_var_1116, vslice_dummy_var_1117, vslice_dummy_var_1118);
    goto L83;

  L83:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    pdoExtension_9 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto L66;

  L66:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    Tmp_1309 := KeTickCount;
    assume {:nonnull} Tmp_1309 != 0;
    assume Tmp_1309 > 0;
    havoc s_p_e_c_i_a_l_65;
    goto L121;

  L121:
    call {:si_unique_call 1784} Sbp2SendRequest#0_loop_L121(s_p_e_c_i_a_l_65, delay);
    goto L121_last;

  L121_last:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    call {:si_unique_call 1785} sdv_442 := corral_nondet();
    assume {:nonnull} delay != 0;
    assume delay > 0;
    goto L132;

  L132:
    call {:si_unique_call 1786} Tmp_1302, s_p_e_c_i_a_l_66 := Sbp2SendRequest#0_loop_L132(tick, pComplete, Tmp_1302, s_p_e_c_i_a_l_66, delay);
    goto L132_last;

  L132_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    Tmp_1302 := KeTickCount;
    assume {:nonnull} Tmp_1302 != 0;
    assume Tmp_1302 > 0;
    havoc s_p_e_c_i_a_l_66;
    goto L142;

  L142:
    call {:si_unique_call 1787} Sbp2SendRequest#0_loop_L142(tick, s_p_e_c_i_a_l_66);
    goto L142_last;

  L142_last:
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L137;

  L137:
    completed := sdv_437;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} completed == 0;
    Tmp_1292 := -1073741823;
    goto L1;

  anon85_Then:
    assume {:partition} completed != 0;
    goto L97;

  L97:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    call {:si_unique_call 1788} Tmp_1300 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1300 != 0;
    assume Tmp_1300 > 0;
    call {:si_unique_call 1789} sdv_KeAcquireSpinLock(0, Tmp_1300);
    assume {:nonnull} Tmp_1300 != 0;
    assume Tmp_1300 > 0;
    havoc cIrql_6;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1790} ExFreeToNPagedLookasideList#0(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_5), requestContext);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1791} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L113;

  L113:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1296;
    assume {:nonnull} Tmp_1296 != 0;
    assume Tmp_1296 > 0;
    havoc Tmp_1292;
    goto L1;

  anon83_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon71_Then:
    call {:si_unique_call 1792} sdv_ExFreePool(0);
    goto L113;

  anon73_Then:
    goto anon73_Then_dummy;

  anon73_Then_dummy:
    assume false;
    return;

  anon86_Then:
    goto anon86_Then_dummy;

  anon86_Then_dummy:
    assume false;
    return;

  anon72_Then:
    goto L137;

  anon84_Then:
    goto anon84_Then_dummy;

  anon84_Then_dummy:
    assume false;
    return;

  anon69_Then:
    assume {:partition} TransferMode == 2;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} status_34 == 259;
    call {:si_unique_call 1793} vslice_dummy_var_326 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L97;

  anon70_Then:
    assume {:partition} status_34 != 259;
    goto L97;

  anon64_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_1292 := status_34;
    goto L1;

  anon67_Then:
    goto L66;

  anon68_Then:
    goto L83;

  anon82_Then:
    goto L83;

  anon66_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon80_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1304;
    assume {:nonnull} Tmp_1304 != 0;
    assume Tmp_1304 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L82;

  anon81_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L82;

  anon65_Then:
    havoc Tmp_1297;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1298;
    call {:si_unique_call 1794} WPP_SF_(Tmp_1298, 19, Tmp_1297);
    goto L82;

  anon63_Then:
    assume {:partition} status_34 != -1072562032;
    goto L66;

  anon79_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  anon62_Then:
    assume {:partition} 2 > sdv_439;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 1795} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L37;

  anon61_Then:
    assume {:partition} TransferMode != 2;
    goto L37;

  anon77_Then:
    goto L20;

  anon59_Then:
    call {:si_unique_call 1796} sdv_435 := ExAllocatePoolWithTag(512, 32, -481140141);
    requestContext := sdv_435;
    goto L32;

  anon76_Then:
    assume {:partition} originalTransferMode == 2;
    goto L13;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest#0(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1292: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2SendRequest"} Sbp2SendRequest#1(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1292: int)
{
  var {:pointer} Tmp_1293: int;
  var {:scalar} Tmp_1294: int;
  var {:scalar} tick: int;
  var {:pointer} s_p_e_c_i_a_l_65: int;
  var {:pointer} Tmp_1295: int;
  var {:pointer} pdoExtension_9: int;
  var {:pointer} Tmp_1296: int;
  var {:pointer} Tmp_1297: int;
  var {:pointer} sdv_435: int;
  var {:scalar} Tmp_1298: int;
  var {:pointer} Tmp_1299: int;
  var {:pointer} requestContext: int;
  var {:pointer} Tmp_1300: int;
  var {:pointer} pComplete: int;
  var {:scalar} Tmp_1301: int;
  var {:pointer} Tmp_1302: int;
  var {:pointer} Tmp_1303: int;
  var {:scalar} sdv_437: int;
  var {:pointer} sdv_438: int;
  var {:pointer} Tmp_1304: int;
  var {:pointer} s_p_e_c_i_a_l_66: int;
  var {:pointer} Tmp_1305: int;
  var {:scalar} delay: int;
  var {:scalar} sdv_439: int;
  var {:pointer} nextIrpStack: int;
  var {:scalar} originalTransferMode: int;
  var {:pointer} Tmp_1306: int;
  var {:scalar} cIrql_6: int;
  var {:scalar} sdv_442: int;
  var {:scalar} status_34: int;
  var {:pointer} Tmp_1307: int;
  var {:pointer} Tmp_1308: int;
  var {:scalar} completed: int;
  var {:pointer} Tmp_1309: int;
  var {:pointer} Tmp_1310: int;
  var {:pointer} DeviceExtension_5: int;
  var {:pointer} RequestPacket: int;
  var {:scalar} TransferMode: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_1119: int;
  var vslice_dummy_var_1120: int;
  var vslice_dummy_var_1121: int;
  var vslice_dummy_var_1122: int;
  var vslice_dummy_var_1123: int;
  var vslice_dummy_var_1124: int;
  var vslice_dummy_var_1125: int;

  anon0:
    call {:si_unique_call 1797} tick := __HAVOC_malloc(20);
    call {:si_unique_call 1798} delay := __HAVOC_malloc(20);
    DeviceExtension_5 := actual_DeviceExtension_5;
    RequestPacket := actual_RequestPacket;
    TransferMode := actual_TransferMode;
    call {:si_unique_call 1799} Tmp_1304 := __HAVOC_malloc(4);
    call {:si_unique_call 1800} Tmp_1308 := __HAVOC_malloc(4);
    call {:si_unique_call 1801} Tmp_1310 := __HAVOC_malloc(4);
    originalTransferMode := TransferMode;
    requestContext := 0;
    pdoExtension_9 := 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} originalTransferMode != 2;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1305;
    assume {:nonnull} Tmp_1305 != 0;
    assume Tmp_1305 > 0;
    goto L13;

  L13:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    pdoExtension_9 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1299;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    Tmp_1292 := -1073741823;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon78_Then:
    goto L20;

  L20:
    call {:si_unique_call 1802} Tmp_1300 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1300 != 0;
    assume Tmp_1300 > 0;
    call {:si_unique_call 1803} sdv_KeAcquireSpinLock(0, Tmp_1300);
    assume {:nonnull} Tmp_1300 != 0;
    assume Tmp_1300 > 0;
    havoc cIrql_6;
    call {:si_unique_call 1804} sdv_438 := sdv_ExAllocateFromNPagedLookasideList(0);
    requestContext := sdv_438;
    call {:si_unique_call 1805} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L32;

  L32:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} requestContext == 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1310;
    assume {:nonnull} Tmp_1310 != 0;
    assume Tmp_1310 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    havoc Tmp_1303;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1301;
    call {:si_unique_call 1806} WPP_SF_(Tmp_1301, 18, Tmp_1303);
    goto L152;

  L152:
    Tmp_1292 := -1073741670;
    goto L1;

  anon75_Then:
    goto L152;

  anon87_Then:
    goto L152;

  anon74_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon60_Then:
    assume {:partition} requestContext != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} TransferMode == 2;
    call {:si_unique_call 1807} sdv_439 := sdv_KeGetCurrentIrql();
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_439 >= 2;
    TransferMode := 3;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L37;

  L37:
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} TransferMode == 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  L51:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_1119;
    call {:si_unique_call 1808} nextIrpStack := sdv_IoGetNextIrpStackLocation(vslice_dummy_var_1119);
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    assume {:nonnull} nextIrpStack != 0;
    assume nextIrpStack > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_1120;
    call {:si_unique_call 1809} sdv_IoSetCompletionRoutine(vslice_dummy_var_1120, li2bplFunctionConstant523, requestContext, 1, 1, 1);
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc vslice_dummy_var_1121;
    havoc vslice_dummy_var_1122;
    call {:si_unique_call 1810} status_34 := sdv_IoCallDriver(vslice_dummy_var_1121, vslice_dummy_var_1122);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_34 == -1072562032;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1307;
    assume {:nonnull} Tmp_1307 != 0;
    assume Tmp_1307 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  L82:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1308;
    assume {:nonnull} Tmp_1308 != 0;
    assume Tmp_1308 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1295;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1294;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1306;
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1293;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    assume {:nonnull} Tmp_1293 != 0;
    assume Tmp_1293 > 0;
    assume {:nonnull} Tmp_1306 != 0;
    assume Tmp_1306 > 0;
    havoc vslice_dummy_var_1123;
    havoc vslice_dummy_var_1124;
    havoc vslice_dummy_var_1125;
    call {:si_unique_call 1811} WPP_SF_DDD(Tmp_1294, 20, Tmp_1295, vslice_dummy_var_1123, vslice_dummy_var_1124, vslice_dummy_var_1125);
    goto L83;

  L83:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    pdoExtension_9 := DeviceExtension_5;
    assume {:nonnull} pdoExtension_9 != 0;
    assume pdoExtension_9 > 0;
    goto L66;

  L66:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} originalTransferMode == 2;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    pComplete := Complete__REQUEST_CONTEXT(requestContext);
    Tmp_1309 := KeTickCount;
    assume {:nonnull} Tmp_1309 != 0;
    assume Tmp_1309 > 0;
    havoc s_p_e_c_i_a_l_65;
    goto L121;

  L121:
    call {:si_unique_call 1812} Sbp2SendRequest#1_loop_L121(s_p_e_c_i_a_l_65, delay);
    goto L121_last;

  L121_last:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} s_p_e_c_i_a_l_65 != 0;
    assume s_p_e_c_i_a_l_65 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    call {:si_unique_call 1813} sdv_442 := corral_nondet();
    assume {:nonnull} delay != 0;
    assume delay > 0;
    goto L132;

  L132:
    call {:si_unique_call 1814} Tmp_1302, s_p_e_c_i_a_l_66 := Sbp2SendRequest#1_loop_L132(tick, pComplete, Tmp_1302, s_p_e_c_i_a_l_66, delay);
    goto L132_last;

  L132_last:
    assume {:nonnull} pComplete != 0;
    assume pComplete > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    Tmp_1302 := KeTickCount;
    assume {:nonnull} Tmp_1302 != 0;
    assume Tmp_1302 > 0;
    havoc s_p_e_c_i_a_l_66;
    goto L142;

  L142:
    call {:si_unique_call 1815} Sbp2SendRequest#1_loop_L142(tick, s_p_e_c_i_a_l_66);
    goto L142_last;

  L142_last:
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    assume {:nonnull} s_p_e_c_i_a_l_66 != 0;
    assume s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} delay != 0;
    assume delay > 0;
    assume {:nonnull} tick != 0;
    assume tick > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto L137;

  L137:
    completed := sdv_437;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} completed == 0;
    Tmp_1292 := -1073741823;
    goto L1;

  anon85_Then:
    assume {:partition} completed != 0;
    goto L97;

  L97:
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    call {:si_unique_call 1816} Tmp_1300 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1300 != 0;
    assume Tmp_1300 > 0;
    call {:si_unique_call 1817} sdv_KeAcquireSpinLock(0, Tmp_1300);
    assume {:nonnull} Tmp_1300 != 0;
    assume Tmp_1300 > 0;
    havoc cIrql_6;
    assume {:nonnull} DeviceExtension_5 != 0;
    assume DeviceExtension_5 > 0;
    call {:si_unique_call 1818} ExFreeToNPagedLookasideList#1(BusRequestContextPool__DEVICE_EXTENSION(DeviceExtension_5), requestContext);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1819} sdv_KeReleaseSpinLock(0, cIrql_6);
    goto L113;

  L113:
    assume {:nonnull} RequestPacket != 0;
    assume RequestPacket > 0;
    havoc Tmp_1296;
    assume {:nonnull} Tmp_1296 != 0;
    assume Tmp_1296 > 0;
    havoc Tmp_1292;
    goto L1;

  anon83_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon71_Then:
    call {:si_unique_call 1820} sdv_ExFreePool(0);
    goto L113;

  anon73_Then:
    goto anon73_Then_dummy;

  anon73_Then_dummy:
    assume false;
    return;

  anon86_Then:
    goto anon86_Then_dummy;

  anon86_Then_dummy:
    assume false;
    return;

  anon72_Then:
    goto L137;

  anon84_Then:
    goto anon84_Then_dummy;

  anon84_Then_dummy:
    assume false;
    return;

  anon69_Then:
    assume {:partition} TransferMode == 2;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} status_34 == 259;
    call {:si_unique_call 1821} vslice_dummy_var_327 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L97;

  anon70_Then:
    assume {:partition} status_34 != 259;
    goto L97;

  anon64_Then:
    assume {:partition} originalTransferMode != 2;
    Tmp_1292 := status_34;
    goto L1;

  anon67_Then:
    goto L66;

  anon68_Then:
    goto L83;

  anon82_Then:
    goto L83;

  anon66_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon80_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1304;
    assume {:nonnull} Tmp_1304 != 0;
    assume Tmp_1304 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L82;

  anon81_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L82;

  anon65_Then:
    havoc Tmp_1297;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1298;
    call {:si_unique_call 1822} WPP_SF_(Tmp_1298, 19, Tmp_1297);
    goto L82;

  anon63_Then:
    assume {:partition} status_34 != -1072562032;
    goto L66;

  anon79_Then:
    assume {:partition} TransferMode != 2;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    goto L51;

  anon62_Then:
    assume {:partition} 2 > sdv_439;
    assume {:nonnull} requestContext != 0;
    assume requestContext > 0;
    call {:si_unique_call 1823} KeInitializeEvent(Event__REQUEST_CONTEXT(requestContext), 0, 0);
    goto L37;

  anon61_Then:
    assume {:partition} TransferMode != 2;
    goto L37;

  anon77_Then:
    goto L20;

  anon59_Then:
    call {:si_unique_call 1824} sdv_435 := ExAllocatePoolWithTag(512, 32, -481140141);
    requestContext := sdv_435;
    goto L32;

  anon76_Then:
    assume {:partition} originalTransferMode == 2;
    goto L13;
}



procedure {:origName "Sbp2SendRequest"} Sbp2SendRequest#1(actual_DeviceExtension_5: int, actual_RequestPacket: int, actual_TransferMode: int) returns (Tmp_1292: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_2410: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;

  anon0:
    call {:si_unique_call 1825} vslice_dummy_var_328 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_2410 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_2410 != 0;
    assume Tmp_2410 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1826} Sbp2AllocComplete#0(Entry_3);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1827} Sbp2BusResetNotification(Entry_3);
    goto L1;

  anon26_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1828} Sbp2BusResetNotificationEx(Entry_3);
    goto L1;

  anon25_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1829} vslice_dummy_var_331 := Sbp2GlobalStatusCallback#0(Entry_3);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1830} vslice_dummy_var_330 := Sbp2ManagementOrbStatusCallback#0(Entry_3);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon31_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1831} vslice_dummy_var_329 := Sbp2TaskOrbStatusCallback#0(Entry_3);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L1;

  anon23_Then:
    call {:si_unique_call 1832} vslice_dummy_var_332 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#0(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_3: int)
{
  var {:pointer} Tmp_2410: int;
  var {:pointer} Lookaside_3: int;
  var {:pointer} Entry_3: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;

  anon0:
    call {:si_unique_call 1833} vslice_dummy_var_333 := __HAVOC_malloc(4);
    Lookaside_3 := actual_Lookaside_3;
    Entry_3 := actual_Entry_3;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    Tmp_2410 := ListHead__GENERAL_LOOKASIDE(L__NPAGED_LOOKASIDE_LIST(Lookaside_3));
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    assume {:nonnull} Tmp_2410 != 0;
    assume Tmp_2410 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1834} Sbp2AllocComplete#1(Entry_3);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1835} Sbp2BusResetNotification(Entry_3);
    goto L1;

  anon26_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1836} Sbp2BusResetNotificationEx(Entry_3);
    goto L1;

  anon25_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1837} vslice_dummy_var_336 := Sbp2GlobalStatusCallback#1(Entry_3);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon32_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1838} vslice_dummy_var_335 := Sbp2ManagementOrbStatusCallback#1(Entry_3);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon31_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Lookaside_3 != 0;
    assume Lookaside_3 > 0;
    call {:si_unique_call 1839} vslice_dummy_var_334 := Sbp2TaskOrbStatusCallback#1(Entry_3);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L1;

  anon23_Then:
    call {:si_unique_call 1840} vslice_dummy_var_337 := __HAVOC_malloc(1);
    goto L1;
}



procedure {:origName "ExFreeToNPagedLookasideList"} ExFreeToNPagedLookasideList#1(actual_Lookaside_3: int, actual_Entry_3: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#0(actual_NotificationInfo: int) returns (Tmp_42: int)
{
  var {:scalar} Tmp_43: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} deviceObject: int;
  var {:scalar} Tmp_45: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} Tmp_47: int;
  var {:scalar} Tmp_48: int;
  var {:pointer} Tmp_49: int;
  var {:scalar} sdv_12: int;
  var {:pointer} Tmp_50: int;
  var {:scalar} sdv_13: int;
  var {:pointer} Tmp_52: int;
  var {:scalar} Tmp_53: int;
  var {:pointer} Tmp_54: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:scalar} Tmp_57: int;
  var {:scalar} status_1: int;
  var {:pointer} NotificationInfo: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_1126: int;
  var vslice_dummy_var_1127: int;
  var vslice_dummy_var_1128: int;
  var vslice_dummy_var_1129: int;
  var vslice_dummy_var_1130: int;
  var vslice_dummy_var_1131: int;
  var vslice_dummy_var_1132: int;

  anon0:
    NotificationInfo := actual_NotificationInfo;
    call {:si_unique_call 1841} Tmp_46 := __HAVOC_malloc(4);
    call {:si_unique_call 1842} Tmp_47 := __HAVOC_malloc(4);
    call {:si_unique_call 1843} Tmp_50 := __HAVOC_malloc(4);
    call {:si_unique_call 1844} Tmp_54 := __HAVOC_malloc(4);
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    havoc deviceObject;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    pdoExtension := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject)];
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    Tmp_42 := 6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon66_Then:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 1845} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1846} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_42 := 0;
    goto L1;

  anon54_Then:
    call {:si_unique_call 1847} vslice_dummy_var_338 := KeCancelTimer(0);
    call {:si_unique_call 1848} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1849} status_1 := CheckStatusResponseValue(TaskOrbStatusBlock__DEVICE_EXTENSION(pdoExtension));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_1 != 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_54;
    assume {:nonnull} Tmp_54 != 0;
    assume Tmp_54 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc Tmp_52;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_43;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1126;
    havoc vslice_dummy_var_1127;
    call {:si_unique_call 1850} WPP_SF_qDd(Tmp_43, 115, Tmp_52, pdoExtension, vslice_dummy_var_1126, vslice_dummy_var_1127);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1128;
    call {:si_unique_call 1851} vslice_dummy_var_339 := Sbp2Reset#0(vslice_dummy_var_1128, 1);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_50;
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_44;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_45;
    call {:si_unique_call 1852} WPP_SF_q(Tmp_45, 116, Tmp_44, pdoExtension);
    goto L82;

  L82:
    call {:si_unique_call 1853} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1854} Sbp2AddLog(pdoExtension, 1, -732793996, status_1, 0);
    goto L94;

  L94:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_57 := 5;
    goto L101;

  L101:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1855} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1856} CleanupOrbList#0(pdoExtension, -1073741248);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1129;
    call {:si_unique_call 1857} Sbp2StartNextPacketByKey#0(vslice_dummy_var_1129, 0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_42 := 0;
    goto L1;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_57;
    goto L101;

  anon72_Then:
    goto L94;

  anon62_Then:
    goto L82;

  anon71_Then:
    goto L82;

  anon61_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L45;

  anon69_Then:
    goto L45;

  anon59_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon56_Then:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_46;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_49;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_53;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1130;
    call {:si_unique_call 1858} WPP_SF_qDd(Tmp_53, 114, Tmp_49, pdoExtension, vslice_dummy_var_1130, 15);
    goto L56;

  L56:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1131;
    call {:si_unique_call 1859} Sbp2CreateRequestErrorLog(vslice_dummy_var_1131, 0, 4381, 16);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1132;
    call {:si_unique_call 1860} vslice_dummy_var_340 := Sbp2Reset#0(vslice_dummy_var_1132, 5);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    Tmp_42 := 0;
    goto L1;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto L56;

  anon67_Then:
    goto L56;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon55_Then:
    assume {:partition} status_1 == 0;
    goto L45;

  anon53_Then:
    call {:si_unique_call 1861} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_55;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_48;
    call {:si_unique_call 1862} WPP_SF_q(Tmp_48, 113, Tmp_55, pdoExtension);
    goto L115;

  L115:
    Tmp_42 := 0;
    goto L1;

  anon65_Then:
    goto L115;

  anon75_Then:
    goto L115;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L115;

  anon52_Then:
    goto L13;

  anon51_Then:
    Tmp_42 := 0;
    goto L1;
}



procedure {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#0(actual_NotificationInfo: int) returns (Tmp_42: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#1(actual_NotificationInfo: int) returns (Tmp_42: int)
{
  var {:scalar} Tmp_43: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} deviceObject: int;
  var {:scalar} Tmp_45: int;
  var {:pointer} pdoExtension: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} Tmp_47: int;
  var {:scalar} Tmp_48: int;
  var {:pointer} Tmp_49: int;
  var {:scalar} sdv_12: int;
  var {:pointer} Tmp_50: int;
  var {:scalar} sdv_13: int;
  var {:pointer} Tmp_52: int;
  var {:scalar} Tmp_53: int;
  var {:pointer} Tmp_54: int;
  var {:pointer} Tmp_55: int;
  var {:pointer} Tmp_56: int;
  var {:scalar} Tmp_57: int;
  var {:scalar} status_1: int;
  var {:pointer} NotificationInfo: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_1133: int;
  var vslice_dummy_var_1134: int;
  var vslice_dummy_var_1135: int;
  var vslice_dummy_var_1136: int;
  var vslice_dummy_var_1137: int;
  var vslice_dummy_var_1138: int;
  var vslice_dummy_var_1139: int;

  anon0:
    NotificationInfo := actual_NotificationInfo;
    call {:si_unique_call 1863} Tmp_46 := __HAVOC_malloc(4);
    call {:si_unique_call 1864} Tmp_47 := __HAVOC_malloc(4);
    call {:si_unique_call 1865} Tmp_50 := __HAVOC_malloc(4);
    call {:si_unique_call 1866} Tmp_54 := __HAVOC_malloc(4);
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    havoc Tmp_56;
    assume {:nonnull} Tmp_56 != 0;
    assume Tmp_56 > 0;
    havoc deviceObject;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    pdoExtension := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject)];
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    Tmp_42 := 6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon66_Then:
    assume {:nonnull} NotificationInfo != 0;
    assume NotificationInfo > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    call {:si_unique_call 1867} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1868} sdv_KeReleaseSpinLockFromDpcLevel(0);
    Tmp_42 := 0;
    goto L1;

  anon54_Then:
    call {:si_unique_call 1869} vslice_dummy_var_341 := KeCancelTimer(0);
    call {:si_unique_call 1870} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1871} status_1 := CheckStatusResponseValue(TaskOrbStatusBlock__DEVICE_EXTENSION(pdoExtension));
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_1 != 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_54;
    assume {:nonnull} Tmp_54 != 0;
    assume Tmp_54 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    havoc Tmp_52;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_43;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1133;
    havoc vslice_dummy_var_1134;
    call {:si_unique_call 1872} WPP_SF_qDd(Tmp_43, 115, Tmp_52, pdoExtension, vslice_dummy_var_1133, vslice_dummy_var_1134);
    goto L45;

  L45:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1135;
    call {:si_unique_call 1873} vslice_dummy_var_342 := Sbp2Reset#1(vslice_dummy_var_1135, 1);
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_50;
    assume {:nonnull} Tmp_50 != 0;
    assume Tmp_50 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    havoc Tmp_44;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_45;
    call {:si_unique_call 1874} WPP_SF_q(Tmp_45, 116, Tmp_44, pdoExtension);
    goto L82;

  L82:
    call {:si_unique_call 1875} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1876} Sbp2AddLog(pdoExtension, 1, -732793996, status_1, 0);
    goto L94;

  L94:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_57 := 5;
    goto L101;

  L101:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    call {:si_unique_call 1877} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 1878} CleanupOrbList#1(pdoExtension, -1073741248);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1136;
    call {:si_unique_call 1879} Sbp2StartNextPacketByKey#1(vslice_dummy_var_1136, 0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto L13;

  L13:
    Tmp_42 := 0;
    goto L1;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc Tmp_57;
    goto L101;

  anon72_Then:
    goto L94;

  anon62_Then:
    goto L82;

  anon71_Then:
    goto L82;

  anon61_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L82;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    goto L45;

  anon69_Then:
    goto L45;

  anon59_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L45;

  anon56_Then:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_46;
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_49;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_53;
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1137;
    call {:si_unique_call 1880} WPP_SF_qDd(Tmp_53, 114, Tmp_49, pdoExtension, vslice_dummy_var_1137, 15);
    goto L56;

  L56:
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1138;
    call {:si_unique_call 1881} Sbp2CreateRequestErrorLog(vslice_dummy_var_1138, 0, 4381, 16);
    assume {:nonnull} pdoExtension != 0;
    assume pdoExtension > 0;
    havoc vslice_dummy_var_1139;
    call {:si_unique_call 1882} vslice_dummy_var_343 := Sbp2Reset#1(vslice_dummy_var_1139, 5);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    Tmp_42 := 0;
    goto L1;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto L56;

  anon67_Then:
    goto L56;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon55_Then:
    assume {:partition} status_1 == 0;
    goto L45;

  anon53_Then:
    call {:si_unique_call 1883} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_47;
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_55;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_48;
    call {:si_unique_call 1884} WPP_SF_q(Tmp_48, 113, Tmp_55, pdoExtension);
    goto L115;

  L115:
    Tmp_42 := 0;
    goto L1;

  anon65_Then:
    goto L115;

  anon75_Then:
    goto L115;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L115;

  anon52_Then:
    goto L13;

  anon51_Then:
    Tmp_42 := 0;
    goto L1;
}



procedure {:origName "Sbp2TaskOrbStatusCallback"} Sbp2TaskOrbStatusCallback#1(actual_NotificationInfo: int) returns (Tmp_42: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2Reset"} Sbp2Reset#0(actual_DeviceObject_34: int, actual_ResetLevel: int) returns (Tmp_1914: int)
{
  var {:pointer} Tmp_1915: int;
  var {:pointer} Tmp_1916: int;
  var {:pointer} Tmp_1917: int;
  var {:scalar} transTimeout: int;
  var {:scalar} retry: int;
  var {:pointer} pdoExtension_16: int;
  var {:pointer} Tmp_1918: int;
  var {:pointer} Tmp_1919: int;
  var {:pointer} Tmp_1920: int;
  var {:pointer} Tmp_1921: int;
  var {:scalar} Tmp_1922: int;
  var {:scalar} sdv_595: int;
  var {:pointer} Tmp_1923: int;
  var {:pointer} Tmp_1924: int;
  var {:pointer} Tmp_1925: int;
  var {:scalar} transType: int;
  var {:scalar} sdv_597: int;
  var {:pointer} Tmp_1926: int;
  var {:scalar} sdv_599: int;
  var {:scalar} Tmp_1927: int;
  var {:pointer} Tmp_1928: int;
  var {:scalar} Tmp_1929: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} Tmp_1930: int;
  var {:pointer} Tmp_1931: int;
  var {:pointer} fdoExtension_5: int;
  var {:scalar} sdv_601: int;
  var {:pointer} Tmp_1932: int;
  var {:pointer} Tmp_1933: int;
  var {:pointer} Tmp_1934: int;
  var {:pointer} irp_5: int;
  var {:pointer} Tmp_1935: int;
  var {:scalar} Tmp_1936: int;
  var {:pointer} Tmp_1937: int;
  var {:scalar} Tmp_1938: int;
  var {:pointer} sdv_605: int;
  var {:scalar} status_58: int;
  var {:pointer} Tmp_1939: int;
  var {:pointer} Tmp_1940: int;
  var {:pointer} Tmp_1941: int;
  var {:pointer} Tmp_1942: int;
  var {:pointer} DeviceObject_34: int;
  var {:scalar} ResetLevel: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_1140: int;
  var vslice_dummy_var_1141: int;
  var vslice_dummy_var_1142: int;

  anon0:
    DeviceObject_34 := actual_DeviceObject_34;
    ResetLevel := actual_ResetLevel;
    call {:si_unique_call 1885} Tmp_1921 := __HAVOC_malloc(4);
    call {:si_unique_call 1886} Tmp_1925 := __HAVOC_malloc(4);
    call {:si_unique_call 1887} Tmp_1926 := __HAVOC_malloc(4);
    call {:si_unique_call 1888} Tmp_1931 := __HAVOC_malloc(4);
    call {:si_unique_call 1889} Tmp_1941 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    pdoExtension_16 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_34)];
    status_58 := 0;
    retry := 2;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1923;
    assume {:nonnull} Tmp_1923 != 0;
    assume Tmp_1923 > 0;
    fdoExtension_5 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1923)];
    call {:si_unique_call 1890} Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    call {:si_unique_call 1891} sdv_KeAcquireSpinLock(0, Tmp_1934);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 1892} sdv_KeReleaseSpinLock(0, oldIrql_5);
    Tmp_1914 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon79_Then:
    call {:si_unique_call 1893} sdv_KeReleaseSpinLock(0, oldIrql_5);
    goto L26;

  L26:
    call {:si_unique_call 1894} Tmp_1915, Tmp_1916, Tmp_1917, transTimeout, retry, Tmp_1918, Tmp_1919, Tmp_1920, Tmp_1921, Tmp_1922, Tmp_1924, Tmp_1925, transType, sdv_597, Tmp_1926, Tmp_1927, Tmp_1928, Tmp_1929, oldIrql_5, Tmp_1930, Tmp_1931, Tmp_1932, Tmp_1933, Tmp_1934, Tmp_1935, Tmp_1936, Tmp_1937, Tmp_1938, status_58, Tmp_1939, Tmp_1940, Tmp_1941, Tmp_1942, vslice_dummy_var_344, vslice_dummy_var_346, vslice_dummy_var_347 := Sbp2Reset#0_loop_L26(Tmp_1915, Tmp_1916, Tmp_1917, transTimeout, retry, pdoExtension_16, Tmp_1918, Tmp_1919, Tmp_1920, Tmp_1921, Tmp_1922, sdv_595, Tmp_1924, Tmp_1925, transType, sdv_597, Tmp_1926, sdv_599, Tmp_1927, Tmp_1928, Tmp_1929, oldIrql_5, Tmp_1930, Tmp_1931, fdoExtension_5, sdv_601, Tmp_1932, Tmp_1933, Tmp_1934, Tmp_1935, Tmp_1936, Tmp_1937, Tmp_1938, status_58, Tmp_1939, Tmp_1940, Tmp_1941, Tmp_1942, ResetLevel, vslice_dummy_var_344, vslice_dummy_var_346, vslice_dummy_var_347);
    goto L26_last;

  L26_last:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} 0 >= retry;
    Tmp_1914 := status_58;
    goto L1;

  anon80_Then:
    assume {:partition} retry > 0;
    retry := retry - 1;
    call {:si_unique_call 1895} Sbp2AddLog(pdoExtension_16, 1, -227314626, ResetLevel, 0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} ResetLevel != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} ResetLevel != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} ResetLevel != 2;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} ResetLevel != 3;
    goto L187;

  L187:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1925;
    assume {:nonnull} Tmp_1925 != 0;
    assume Tmp_1925 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_1930;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1938;
    call {:si_unique_call 1896} WPP_SF_q(Tmp_1938, 64, Tmp_1930, pdoExtension_16);
    goto L188;

  L188:
    call {:si_unique_call 1897} Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    call {:si_unique_call 1898} sdv_KeAcquireSpinLock(0, Tmp_1934);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    goto L201;

  L201:
    call {:si_unique_call 1899} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 1900} CleanupOrbList#0(pdoExtension_16, -1073741248);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1901} status_58 := Sbp2QueueManagementWorkItem(pdoExtension_16, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 1902} Sbp2AddLog(pdoExtension_16, 1, -227314639, status_58, retry);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} status_58 == -1072562032;
    goto L98;

  L98:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} retry != 0;
    call {:si_unique_call 1903} vslice_dummy_var_344 := KeCancelTimer(0);
    call {:si_unique_call 1904} status_58 := Sbp2UpdateNodeInformation#0(pdoExtension_16);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1941;
    assume {:nonnull} Tmp_1941 != 0;
    assume Tmp_1941 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc Tmp_1935;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1929;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_1140;
    call {:si_unique_call 1905} WPP_SF_qDD(Tmp_1929, 65, Tmp_1935, pdoExtension_16, status_58, vslice_dummy_var_1140);
    goto anon89_Else_dummy;

  anon89_Else_dummy:
    assume false;
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    assume false;
    return;

  anon103_Then:
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    assume false;
    return;

  anon88_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon88_Then_dummy;

  anon88_Then_dummy:
    assume false;
    return;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    assume {:partition} retry == 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} 3 > ResetLevel;
    Tmp_1914 := status_58;
    goto L1;

  anon87_Then:
    assume {:partition} ResetLevel >= 3;
    call {:si_unique_call 1906} Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    call {:si_unique_call 1907} sdv_KeAcquireSpinLock(0, Tmp_1934);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1908} sdv_KeReleaseSpinLock(0, oldIrql_5);
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1909} sdv_605 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_16), 0);
    irp_5 := sdv_605;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} irp_5 != 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_1141;
    call {:si_unique_call 1910} Sbp2StartIo#0(vslice_dummy_var_1141, irp_5);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_1142;
    call {:si_unique_call 1911} Sbp2StartNextPacketByKey#0(vslice_dummy_var_1142, 0);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1914 := status_58;
    goto L1;

  anon106_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon104_Then:
    assume {:partition} irp_5 == 0;
    goto L133;

  anon84_Then:
    assume {:partition} status_58 != -1072562032;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} status_58 != -1073741248;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} status_58 >= 0;
    goto L144;

  L144:
    Tmp_1914 := status_58;
    goto L1;

  anon90_Then:
    assume {:partition} 0 > status_58;
    call {:si_unique_call 1912} vslice_dummy_var_345 := KeCancelTimer(0);
    call {:si_unique_call 1913} IoInvalidateDeviceState(0);
    goto L144;

  anon85_Then:
    assume {:partition} status_58 == -1073741248;
    goto L98;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L201;

  anon97_Then:
    goto L188;

  anon115_Then:
    goto L188;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon98_Then:
    assume {:partition} ResetLevel == 3;
    goto L187;

  anon99_Then:
    assume {:partition} ResetLevel == 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1926;
    assume {:nonnull} Tmp_1926 != 0;
    assume Tmp_1926 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_1933;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1927;
    call {:si_unique_call 1914} WPP_SF_q(Tmp_1927, 63, Tmp_1933, pdoExtension_16);
    goto L46;

  L46:
    transType := 12;
    transTimeout := 2;
    retry := 0;
    call {:si_unique_call 1915} Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    call {:si_unique_call 1916} sdv_KeAcquireSpinLock(0, Tmp_1934);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1920;
    assume {:nonnull} Tmp_1920 != 0;
    assume Tmp_1920 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1919;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1942;
    assume {:nonnull} Tmp_1919 != 0;
    assume Tmp_1919 > 0;
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1939;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1918;
    assume {:nonnull} Tmp_1918 != 0;
    assume Tmp_1918 > 0;
    assume {:nonnull} Tmp_1939 != 0;
    assume Tmp_1939 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1916;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1932;
    assume {:nonnull} Tmp_1916 != 0;
    assume Tmp_1916 > 0;
    assume {:nonnull} Tmp_1932 != 0;
    assume Tmp_1932 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1937;
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1915;
    assume {:nonnull} Tmp_1915 != 0;
    assume Tmp_1915 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1940;
    assume {:nonnull} Tmp_1940 != 0;
    assume Tmp_1940 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1928;
    assume {:nonnull} Tmp_1928 != 0;
    assume Tmp_1928 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1917} Sbp2SetManagementTimer(pdoExtension_16, transTimeout);
    call {:si_unique_call 1918} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 1919} CleanupOrbList#0(pdoExtension_16, -1073741248);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1920} status_58 := Sbp2AccessRegister#0(pdoExtension_16, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(pdoExtension_16)), 1024);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon83_Then:
    goto L46;

  anon112_Then:
    goto L46;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon100_Then:
    assume {:partition} ResetLevel == 1;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1921;
    assume {:nonnull} Tmp_1921 != 0;
    assume Tmp_1921 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    havoc Tmp_1924;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1936;
    call {:si_unique_call 1921} WPP_SF_q(Tmp_1936, 62, Tmp_1924, pdoExtension_16);
    goto L149;

  L149:
    call {:si_unique_call 1922} sdv_597 := sdv_KeGetCurrentIrql();
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} 2 > sdv_597;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1923} vslice_dummy_var_346 := Sbp2AccessRegister#0(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 320);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1924} status_58 := Sbp2AccessRegister#0(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 258);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon109_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon108_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon93_Then:
    assume {:partition} sdv_597 >= 2;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1925} vslice_dummy_var_347 := Sbp2AccessRegister#0(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 1088);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1926} status_58 := Sbp2AccessRegister#0(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 1026);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon92_Then:
    goto L149;

  anon107_Then:
    goto L149;

  anon91_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon81_Then:
    assume {:partition} ResetLevel == 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1931;
    assume {:nonnull} Tmp_1931 != 0;
    assume Tmp_1931 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_1917;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1922;
    call {:si_unique_call 1927} WPP_SF_q(Tmp_1922, 61, Tmp_1917, pdoExtension_16);
    goto L178;

  L178:
    retry := 0;
    goto L92;

  anon95_Then:
    goto L178;

  anon101_Then:
    goto L178;

  anon94_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:origName "Sbp2Reset"} Sbp2Reset#0(actual_DeviceObject_34: int, actual_ResetLevel: int) returns (Tmp_1914: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2Reset"} Sbp2Reset#1(actual_DeviceObject_34: int, actual_ResetLevel: int) returns (Tmp_1914: int)
{
  var {:pointer} Tmp_1915: int;
  var {:pointer} Tmp_1916: int;
  var {:pointer} Tmp_1917: int;
  var {:scalar} transTimeout: int;
  var {:scalar} retry: int;
  var {:pointer} pdoExtension_16: int;
  var {:pointer} Tmp_1918: int;
  var {:pointer} Tmp_1919: int;
  var {:pointer} Tmp_1920: int;
  var {:pointer} Tmp_1921: int;
  var {:scalar} Tmp_1922: int;
  var {:scalar} sdv_595: int;
  var {:pointer} Tmp_1923: int;
  var {:pointer} Tmp_1924: int;
  var {:pointer} Tmp_1925: int;
  var {:scalar} transType: int;
  var {:scalar} sdv_597: int;
  var {:pointer} Tmp_1926: int;
  var {:scalar} sdv_599: int;
  var {:scalar} Tmp_1927: int;
  var {:pointer} Tmp_1928: int;
  var {:scalar} Tmp_1929: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} Tmp_1930: int;
  var {:pointer} Tmp_1931: int;
  var {:pointer} fdoExtension_5: int;
  var {:scalar} sdv_601: int;
  var {:pointer} Tmp_1932: int;
  var {:pointer} Tmp_1933: int;
  var {:pointer} Tmp_1934: int;
  var {:pointer} irp_5: int;
  var {:pointer} Tmp_1935: int;
  var {:scalar} Tmp_1936: int;
  var {:pointer} Tmp_1937: int;
  var {:scalar} Tmp_1938: int;
  var {:pointer} sdv_605: int;
  var {:scalar} status_58: int;
  var {:pointer} Tmp_1939: int;
  var {:pointer} Tmp_1940: int;
  var {:pointer} Tmp_1941: int;
  var {:pointer} Tmp_1942: int;
  var {:pointer} DeviceObject_34: int;
  var {:scalar} ResetLevel: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_1143: int;
  var vslice_dummy_var_1144: int;
  var vslice_dummy_var_1145: int;

  anon0:
    DeviceObject_34 := actual_DeviceObject_34;
    ResetLevel := actual_ResetLevel;
    call {:si_unique_call 1928} Tmp_1921 := __HAVOC_malloc(4);
    call {:si_unique_call 1929} Tmp_1925 := __HAVOC_malloc(4);
    call {:si_unique_call 1930} Tmp_1926 := __HAVOC_malloc(4);
    call {:si_unique_call 1931} Tmp_1931 := __HAVOC_malloc(4);
    call {:si_unique_call 1932} Tmp_1941 := __HAVOC_malloc(4);
    assume {:nonnull} DeviceObject_34 != 0;
    assume DeviceObject_34 > 0;
    pdoExtension_16 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_34)];
    status_58 := 0;
    retry := 2;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1923;
    assume {:nonnull} Tmp_1923 != 0;
    assume Tmp_1923 > 0;
    fdoExtension_5 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1923)];
    call {:si_unique_call 1933} Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    call {:si_unique_call 1934} sdv_KeAcquireSpinLock(0, Tmp_1934);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    call {:si_unique_call 1935} sdv_KeReleaseSpinLock(0, oldIrql_5);
    Tmp_1914 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon79_Then:
    call {:si_unique_call 1936} sdv_KeReleaseSpinLock(0, oldIrql_5);
    goto L26;

  L26:
    call {:si_unique_call 1937} Tmp_1915, Tmp_1916, Tmp_1917, transTimeout, retry, Tmp_1918, Tmp_1919, Tmp_1920, Tmp_1921, Tmp_1922, Tmp_1924, Tmp_1925, transType, sdv_597, Tmp_1926, Tmp_1927, Tmp_1928, Tmp_1929, oldIrql_5, Tmp_1930, Tmp_1931, Tmp_1932, Tmp_1933, Tmp_1934, Tmp_1935, Tmp_1936, Tmp_1937, Tmp_1938, status_58, Tmp_1939, Tmp_1940, Tmp_1941, Tmp_1942, vslice_dummy_var_348, vslice_dummy_var_350, vslice_dummy_var_351 := Sbp2Reset#1_loop_L26(Tmp_1915, Tmp_1916, Tmp_1917, transTimeout, retry, pdoExtension_16, Tmp_1918, Tmp_1919, Tmp_1920, Tmp_1921, Tmp_1922, sdv_595, Tmp_1924, Tmp_1925, transType, sdv_597, Tmp_1926, sdv_599, Tmp_1927, Tmp_1928, Tmp_1929, oldIrql_5, Tmp_1930, Tmp_1931, fdoExtension_5, sdv_601, Tmp_1932, Tmp_1933, Tmp_1934, Tmp_1935, Tmp_1936, Tmp_1937, Tmp_1938, status_58, Tmp_1939, Tmp_1940, Tmp_1941, Tmp_1942, ResetLevel, vslice_dummy_var_348, vslice_dummy_var_350, vslice_dummy_var_351);
    goto L26_last;

  L26_last:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} 0 >= retry;
    Tmp_1914 := status_58;
    goto L1;

  anon80_Then:
    assume {:partition} retry > 0;
    retry := retry - 1;
    call {:si_unique_call 1938} Sbp2AddLog(pdoExtension_16, 1, -227314626, ResetLevel, 0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} ResetLevel != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} ResetLevel != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} ResetLevel != 2;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} ResetLevel != 3;
    goto L187;

  L187:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1925;
    assume {:nonnull} Tmp_1925 != 0;
    assume Tmp_1925 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc Tmp_1930;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1938;
    call {:si_unique_call 1939} WPP_SF_q(Tmp_1938, 64, Tmp_1930, pdoExtension_16);
    goto L188;

  L188:
    call {:si_unique_call 1940} Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    call {:si_unique_call 1941} sdv_KeAcquireSpinLock(0, Tmp_1934);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} fdoExtension_5 != 0;
    assume fdoExtension_5 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    goto L201;

  L201:
    call {:si_unique_call 1942} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 1943} CleanupOrbList#1(pdoExtension_16, -1073741248);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1944} status_58 := Sbp2QueueManagementWorkItem(pdoExtension_16, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 1945} Sbp2AddLog(pdoExtension_16, 1, -227314639, status_58, retry);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} status_58 == -1072562032;
    goto L98;

  L98:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} retry != 0;
    call {:si_unique_call 1946} vslice_dummy_var_348 := KeCancelTimer(0);
    call {:si_unique_call 1947} status_58 := Sbp2UpdateNodeInformation#1(pdoExtension_16);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1941;
    assume {:nonnull} Tmp_1941 != 0;
    assume Tmp_1941 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc Tmp_1935;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1929;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_1143;
    call {:si_unique_call 1948} WPP_SF_qDD(Tmp_1929, 65, Tmp_1935, pdoExtension_16, status_58, vslice_dummy_var_1143);
    goto anon89_Else_dummy;

  anon89_Else_dummy:
    assume false;
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    assume false;
    return;

  anon103_Then:
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    assume false;
    return;

  anon88_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon88_Then_dummy;

  anon88_Then_dummy:
    assume false;
    return;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon86_Then:
    assume {:partition} retry == 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} 3 > ResetLevel;
    Tmp_1914 := status_58;
    goto L1;

  anon87_Then:
    assume {:partition} ResetLevel >= 3;
    call {:si_unique_call 1949} Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    call {:si_unique_call 1950} sdv_KeAcquireSpinLock(0, Tmp_1934);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1951} sdv_KeReleaseSpinLock(0, oldIrql_5);
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1952} sdv_605 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_16), 0);
    irp_5 := sdv_605;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} irp_5 != 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_1144;
    call {:si_unique_call 1953} Sbp2StartIo#1(vslice_dummy_var_1144, irp_5);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc vslice_dummy_var_1145;
    call {:si_unique_call 1954} Sbp2StartNextPacketByKey#1(vslice_dummy_var_1145, 0);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1914 := status_58;
    goto L1;

  anon106_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon104_Then:
    assume {:partition} irp_5 == 0;
    goto L133;

  anon84_Then:
    assume {:partition} status_58 != -1072562032;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} status_58 != -1073741248;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} status_58 >= 0;
    goto L144;

  L144:
    Tmp_1914 := status_58;
    goto L1;

  anon90_Then:
    assume {:partition} 0 > status_58;
    call {:si_unique_call 1955} vslice_dummy_var_349 := KeCancelTimer(0);
    call {:si_unique_call 1956} IoInvalidateDeviceState(0);
    goto L144;

  anon85_Then:
    assume {:partition} status_58 == -1073741248;
    goto L98;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L201;

  anon97_Then:
    goto L188;

  anon115_Then:
    goto L188;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon98_Then:
    assume {:partition} ResetLevel == 3;
    goto L187;

  anon99_Then:
    assume {:partition} ResetLevel == 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1926;
    assume {:nonnull} Tmp_1926 != 0;
    assume Tmp_1926 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_1933;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1927;
    call {:si_unique_call 1957} WPP_SF_q(Tmp_1927, 63, Tmp_1933, pdoExtension_16);
    goto L46;

  L46:
    transType := 12;
    transTimeout := 2;
    retry := 0;
    call {:si_unique_call 1958} Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    call {:si_unique_call 1959} sdv_KeAcquireSpinLock(0, Tmp_1934);
    assume {:nonnull} Tmp_1934 != 0;
    assume Tmp_1934 > 0;
    havoc oldIrql_5;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1920;
    assume {:nonnull} Tmp_1920 != 0;
    assume Tmp_1920 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1919;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1942;
    assume {:nonnull} Tmp_1919 != 0;
    assume Tmp_1919 > 0;
    assume {:nonnull} Tmp_1942 != 0;
    assume Tmp_1942 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1939;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1918;
    assume {:nonnull} Tmp_1918 != 0;
    assume Tmp_1918 > 0;
    assume {:nonnull} Tmp_1939 != 0;
    assume Tmp_1939 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1916;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1932;
    assume {:nonnull} Tmp_1916 != 0;
    assume Tmp_1916 > 0;
    assume {:nonnull} Tmp_1932 != 0;
    assume Tmp_1932 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1937;
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} Tmp_1937 != 0;
    assume Tmp_1937 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1915;
    assume {:nonnull} Tmp_1915 != 0;
    assume Tmp_1915 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1940;
    assume {:nonnull} Tmp_1940 != 0;
    assume Tmp_1940 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    havoc Tmp_1928;
    assume {:nonnull} Tmp_1928 != 0;
    assume Tmp_1928 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1960} Sbp2SetManagementTimer(pdoExtension_16, transTimeout);
    call {:si_unique_call 1961} sdv_KeReleaseSpinLock(0, oldIrql_5);
    call {:si_unique_call 1962} CleanupOrbList#1(pdoExtension_16, -1073741248);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1963} status_58 := Sbp2AccessRegister#1(pdoExtension_16, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(pdoExtension_16)), 1024);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon83_Then:
    goto L46;

  anon112_Then:
    goto L46;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon100_Then:
    assume {:partition} ResetLevel == 1;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1921;
    assume {:nonnull} Tmp_1921 != 0;
    assume Tmp_1921 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    havoc Tmp_1924;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1936;
    call {:si_unique_call 1964} WPP_SF_q(Tmp_1936, 62, Tmp_1924, pdoExtension_16);
    goto L149;

  L149:
    call {:si_unique_call 1965} sdv_597 := sdv_KeGetCurrentIrql();
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} 2 > sdv_597;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1966} vslice_dummy_var_350 := Sbp2AccessRegister#1(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 320);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1967} status_58 := Sbp2AccessRegister#1(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 258);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon109_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon108_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon93_Then:
    assume {:partition} sdv_597 >= 2;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1968} vslice_dummy_var_351 := Sbp2AccessRegister#1(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 1088);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_16 != 0;
    assume pdoExtension_16 > 0;
    call {:si_unique_call 1969} status_58 := Sbp2AccessRegister#1(pdoExtension_16, Reserved__DEVICE_EXTENSION(pdoExtension_16), 1026);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon92_Then:
    goto L149;

  anon107_Then:
    goto L149;

  anon91_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon81_Then:
    assume {:partition} ResetLevel == 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1931;
    assume {:nonnull} Tmp_1931 != 0;
    assume Tmp_1931 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_1917;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1922;
    call {:si_unique_call 1970} WPP_SF_q(Tmp_1922, 61, Tmp_1917, pdoExtension_16);
    goto L178;

  L178:
    retry := 0;
    goto L92;

  anon95_Then:
    goto L178;

  anon101_Then:
    goto L178;

  anon94_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:origName "Sbp2Reset"} Sbp2Reset#1(actual_DeviceObject_34: int, actual_ResetLevel: int) returns (Tmp_1914: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "CleanupOrbList"} CleanupOrbList#0(actual_DeviceExtension_4: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_1242: int;
  var {:pointer} Tmp_1244: int;
  var {:pointer} Tmp_1245: int;
  var {:scalar} pendingOrbListHead: int;
  var {:pointer} Tmp_1246: int;
  var {:scalar} Tmp_1247: int;
  var {:scalar} sdv_416: int;
  var {:scalar} orbLock_6: int;
  var {:pointer} pEntry: int;
  var {:scalar} Tmp_1249: int;
  var {:pointer} Tmp_1250: int;
  var {:pointer} Tmp_1251: int;
  var {:pointer} requestIrp_1: int;
  var {:pointer} Tmp_1252: int;
  var {:pointer} Tmp_1253: int;
  var {:pointer} sdv_423: int;
  var {:pointer} Tmp_1254: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_1255: int;
  var {:scalar} sdv_425: int;
  var {:pointer} Tmp_1256: int;
  var {:pointer} DeviceExtension_4: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_1146: int;
  var vslice_dummy_var_1147: int;

  anon0:
    call {:si_unique_call 1971} vslice_dummy_var_352 := __HAVOC_malloc(4);
    call {:si_unique_call 1972} pendingOrbListHead := __HAVOC_malloc(8);
    call {:si_unique_call 1973} orbLock_6 := __HAVOC_malloc(12);
    DeviceExtension_4 := actual_DeviceExtension_4;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 1974} Tmp_1245 := __HAVOC_malloc(4);
    call {:si_unique_call 1975} Tmp_1254 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    call {:si_unique_call 1976} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 1977} Sbp2AddLog(DeviceExtension_4, 32, -1018203550, DeviceExtension_4, CompletionStatus);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc vslice_dummy_var_1146;
    call {:si_unique_call 1978} vslice_dummy_var_353 := FreeAsyncRequestContext(DeviceExtension_4, vslice_dummy_var_1146);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto L18;

  L18:
    call {:si_unique_call 1979} sdv_416 := sdv_IsListEmpty(0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_416 != 0;
    call {:si_unique_call 1980} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon44_Then:
    assume {:partition} sdv_416 == 0;
    call {:si_unique_call 1981} InitializeListHead(pendingOrbListHead);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 1982} vslice_dummy_var_354 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4), pendingOrbListHead);
    call {:si_unique_call 1983} vslice_dummy_var_355 := sdv_RemoveEntryList(0);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 1984} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4));
    goto L42;

  L42:
    call {:si_unique_call 1985} Tmp_1242, Tmp_1244, Tmp_1245, Tmp_1246, Tmp_1247, pEntry, Tmp_1249, Tmp_1250, Tmp_1251, requestIrp_1, Tmp_1252, Tmp_1253, sdv_423, Tmp_1254, currentListItem_1, Tmp_1255, sdv_425, Tmp_1256, vslice_dummy_var_356, vslice_dummy_var_358, vslice_dummy_var_359, vslice_dummy_var_360, vslice_dummy_var_361, vslice_dummy_var_362 := CleanupOrbList#0_loop_L42(Tmp_1242, Tmp_1244, Tmp_1245, pendingOrbListHead, Tmp_1246, Tmp_1247, orbLock_6, pEntry, Tmp_1249, Tmp_1250, Tmp_1251, requestIrp_1, Tmp_1252, Tmp_1253, sdv_423, Tmp_1254, currentListItem_1, Tmp_1255, sdv_425, Tmp_1256, DeviceExtension_4, CompletionStatus, vslice_dummy_var_356, vslice_dummy_var_358, vslice_dummy_var_359, vslice_dummy_var_360, vslice_dummy_var_361, vslice_dummy_var_362);
    goto L42_last;

  L42_last:
    call {:si_unique_call 2003} pEntry := RemoveHeadList(pendingOrbListHead);
    call {:si_unique_call 2004} InitializeListHead(pEntry);
    call {:si_unique_call 2005} sdv_423 := sdv_containing_record(pEntry, 0);
    currentListItem_1 := sdv_423;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1986} vslice_dummy_var_356 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 1987} sdv_425 := sdv_IsListEmpty(0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_425 != 0;
    call {:si_unique_call 1988} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 1989} vslice_dummy_var_357 := Sbp2RestartPendingPowerIrp#0(DeviceExtension_4);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    assume {:partition} sdv_425 == 0;
    goto anon45_Then_dummy;

  anon45_Then_dummy:
    assume false;
    return;

  anon56_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 1990} vslice_dummy_var_360 := KeCancelTimer(0);
    call {:si_unique_call 1991} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 1992} vslice_dummy_var_358 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1254;
    assume {:nonnull} Tmp_1254 != 0;
    assume Tmp_1254 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_1250;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1247;
    call {:si_unique_call 1993} WPP_SF_q(Tmp_1247, 11, Tmp_1250, currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1255;
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    havoc requestIrp_1;
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1256;
    assume {:nonnull} Tmp_1256 != 0;
    assume Tmp_1256 > 0;
    goto L98;

  L98:
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1244;
    assume {:nonnull} Tmp_1244 != 0;
    assume Tmp_1244 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 1994} Sbp2DeferPendingRequest(DeviceExtension_4, requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 1995} vslice_dummy_var_361 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 1996} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L58;

  anon60_Then:
    goto L105;

  L105:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1242;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_1242 != 0;
    assume Tmp_1242 > 0;
    havoc vslice_dummy_var_1147;
    call {:si_unique_call 1997} Sbp2StartPacket#0(vslice_dummy_var_1147, requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_1242));
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    goto L105;

  anon49_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 1998} vslice_dummy_var_362 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1245;
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    havoc Tmp_1251;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1249;
    call {:si_unique_call 1999} WPP_SF_qq(Tmp_1249, 12, Tmp_1251, DeviceExtension_4, requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2000} vslice_dummy_var_359 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_4), requestIrp_1);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume requestIrp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2001} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    call {:si_unique_call 2002} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon63_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    assume !(requestIrp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L154;

  anon52_Then:
    goto L123;

  anon62_Then:
    goto L123;

  anon51_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon48_Then:
    goto L99;

  anon54_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1246;
    assume {:nonnull} Tmp_1246 != 0;
    assume Tmp_1246 > 0;
    goto L98;

  anon55_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1253;
    assume {:nonnull} Tmp_1253 != 0;
    assume Tmp_1253 > 0;
    goto L98;

  anon59_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1252;
    assume {:nonnull} Tmp_1252 != 0;
    assume Tmp_1252 > 0;
    goto L98;

  anon47_Then:
    goto L83;

  anon58_Then:
    goto L83;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon43_Then:
    goto L18;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList#0(actual_DeviceExtension_4: int, actual_CompletionStatus: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "CleanupOrbList"} CleanupOrbList#1(actual_DeviceExtension_4: int, actual_CompletionStatus: int)
{
  var {:pointer} Tmp_1242: int;
  var {:pointer} Tmp_1244: int;
  var {:pointer} Tmp_1245: int;
  var {:scalar} pendingOrbListHead: int;
  var {:pointer} Tmp_1246: int;
  var {:scalar} Tmp_1247: int;
  var {:scalar} sdv_416: int;
  var {:scalar} orbLock_6: int;
  var {:pointer} pEntry: int;
  var {:scalar} Tmp_1249: int;
  var {:pointer} Tmp_1250: int;
  var {:pointer} Tmp_1251: int;
  var {:pointer} requestIrp_1: int;
  var {:pointer} Tmp_1252: int;
  var {:pointer} Tmp_1253: int;
  var {:pointer} sdv_423: int;
  var {:pointer} Tmp_1254: int;
  var {:pointer} currentListItem_1: int;
  var {:pointer} Tmp_1255: int;
  var {:scalar} sdv_425: int;
  var {:pointer} Tmp_1256: int;
  var {:pointer} DeviceExtension_4: int;
  var {:scalar} CompletionStatus: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_1148: int;
  var vslice_dummy_var_1149: int;

  anon0:
    call {:si_unique_call 2006} vslice_dummy_var_363 := __HAVOC_malloc(4);
    call {:si_unique_call 2007} pendingOrbListHead := __HAVOC_malloc(8);
    call {:si_unique_call 2008} orbLock_6 := __HAVOC_malloc(12);
    DeviceExtension_4 := actual_DeviceExtension_4;
    CompletionStatus := actual_CompletionStatus;
    call {:si_unique_call 2009} Tmp_1245 := __HAVOC_malloc(4);
    call {:si_unique_call 2010} Tmp_1254 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    assume {:nonnull} orbLock_6 != 0;
    assume orbLock_6 > 0;
    call {:si_unique_call 2011} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2012} Sbp2AddLog(DeviceExtension_4, 32, -1018203550, DeviceExtension_4, CompletionStatus);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    havoc vslice_dummy_var_1148;
    call {:si_unique_call 2013} vslice_dummy_var_364 := FreeAsyncRequestContext(DeviceExtension_4, vslice_dummy_var_1148);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto L18;

  L18:
    call {:si_unique_call 2014} sdv_416 := sdv_IsListEmpty(0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_416 != 0;
    call {:si_unique_call 2015} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon44_Then:
    assume {:partition} sdv_416 == 0;
    call {:si_unique_call 2016} InitializeListHead(pendingOrbListHead);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2017} vslice_dummy_var_365 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4), pendingOrbListHead);
    call {:si_unique_call 2018} vslice_dummy_var_366 := sdv_RemoveEntryList(0);
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2019} InitializeListHead(PendingOrbList__DEVICE_EXTENSION(DeviceExtension_4));
    goto L42;

  L42:
    call {:si_unique_call 2020} Tmp_1242, Tmp_1244, Tmp_1245, Tmp_1246, Tmp_1247, pEntry, Tmp_1249, Tmp_1250, Tmp_1251, requestIrp_1, Tmp_1252, Tmp_1253, sdv_423, Tmp_1254, currentListItem_1, Tmp_1255, sdv_425, Tmp_1256, vslice_dummy_var_367, vslice_dummy_var_369, vslice_dummy_var_370, vslice_dummy_var_371, vslice_dummy_var_372, vslice_dummy_var_373 := CleanupOrbList#1_loop_L42(Tmp_1242, Tmp_1244, Tmp_1245, pendingOrbListHead, Tmp_1246, Tmp_1247, orbLock_6, pEntry, Tmp_1249, Tmp_1250, Tmp_1251, requestIrp_1, Tmp_1252, Tmp_1253, sdv_423, Tmp_1254, currentListItem_1, Tmp_1255, sdv_425, Tmp_1256, DeviceExtension_4, CompletionStatus, vslice_dummy_var_367, vslice_dummy_var_369, vslice_dummy_var_370, vslice_dummy_var_371, vslice_dummy_var_372, vslice_dummy_var_373);
    goto L42_last;

  L42_last:
    call {:si_unique_call 2038} pEntry := RemoveHeadList(pendingOrbListHead);
    call {:si_unique_call 2039} InitializeListHead(pEntry);
    call {:si_unique_call 2040} sdv_423 := sdv_containing_record(pEntry, 0);
    currentListItem_1 := sdv_423;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 2021} vslice_dummy_var_367 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 2022} sdv_425 := sdv_IsListEmpty(0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_425 != 0;
    call {:si_unique_call 2023} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2024} vslice_dummy_var_368 := Sbp2RestartPendingPowerIrp#1(DeviceExtension_4);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon45_Then:
    assume {:partition} sdv_425 == 0;
    goto anon45_Then_dummy;

  anon45_Then_dummy:
    assume false;
    return;

  anon56_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2025} vslice_dummy_var_371 := KeCancelTimer(0);
    call {:si_unique_call 2026} ReleaseOrbListLock(DeviceExtension_4, orbLock_6, 0);
    call {:si_unique_call 2027} vslice_dummy_var_369 := Sbp2_SCSI_RBC_Conversion(currentListItem_1);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1254;
    assume {:nonnull} Tmp_1254 != 0;
    assume Tmp_1254 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_1250;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1247;
    call {:si_unique_call 2028} WPP_SF_q(Tmp_1247, 11, Tmp_1250, currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1255;
    assume {:nonnull} Tmp_1255 != 0;
    assume Tmp_1255 > 0;
    havoc requestIrp_1;
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} CompletionStatus != -1073741643;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} CompletionStatus != -1073741632;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} CompletionStatus == -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1256;
    assume {:nonnull} Tmp_1256 != 0;
    assume Tmp_1256 > 0;
    goto L98;

  L98:
    assume {:nonnull} requestIrp_1 != 0;
    assume requestIrp_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1244;
    assume {:nonnull} Tmp_1244 != 0;
    assume Tmp_1244 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 2029} Sbp2DeferPendingRequest(DeviceExtension_4, requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2030} vslice_dummy_var_372 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 2031} AcquireOrbListLock(DeviceExtension_4, orbLock_6, 0);
    goto L58;

  anon60_Then:
    goto L105;

  L105:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1242;
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    assume {:nonnull} Tmp_1242 != 0;
    assume Tmp_1242 > 0;
    havoc vslice_dummy_var_1149;
    call {:si_unique_call 2032} Sbp2StartPacket#1(vslice_dummy_var_1149, requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(Tmp_1242));
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon50_Then:
    goto L105;

  anon49_Then:
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    call {:si_unique_call 2033} vslice_dummy_var_373 := FreeAsyncRequestContext(DeviceExtension_4, currentListItem_1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1245;
    assume {:nonnull} Tmp_1245 != 0;
    assume Tmp_1245 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    havoc Tmp_1251;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1249;
    call {:si_unique_call 2034} WPP_SF_qq(Tmp_1249, 12, Tmp_1251, DeviceExtension_4, requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} DeviceExtension_4 != 0;
    assume DeviceExtension_4 > 0;
    call {:si_unique_call 2035} vslice_dummy_var_370 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(DeviceExtension_4), requestIrp_1);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume requestIrp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2036} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    call {:si_unique_call 2037} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon63_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    assume !(requestIrp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L154;

  anon52_Then:
    goto L123;

  anon62_Then:
    goto L123;

  anon51_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon48_Then:
    goto L99;

  anon54_Then:
    assume {:partition} CompletionStatus != -1073741248;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1246;
    assume {:nonnull} Tmp_1246 != 0;
    assume Tmp_1246 > 0;
    goto L98;

  anon55_Then:
    assume {:partition} CompletionStatus == -1073741632;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1253;
    assume {:nonnull} Tmp_1253 != 0;
    assume Tmp_1253 > 0;
    goto L98;

  anon59_Then:
    assume {:partition} CompletionStatus == -1073741643;
    assume {:nonnull} currentListItem_1 != 0;
    assume currentListItem_1 > 0;
    havoc Tmp_1252;
    assume {:nonnull} Tmp_1252 != 0;
    assume Tmp_1252 > 0;
    goto L98;

  anon47_Then:
    goto L83;

  anon58_Then:
    goto L83;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon43_Then:
    goto L18;
}



procedure {:origName "CleanupOrbList"} CleanupOrbList#1(actual_DeviceExtension_4: int, actual_CompletionStatus: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#0(actual_PdoExtension_13: int) returns (Tmp_1103: int)
{
  var {:pointer} irpStack_3: int;
  var {:pointer} Irp_10: int;
  var {:pointer} Tmp_1104: int;
  var {:pointer} Tmp_1105: int;
  var {:pointer} sdv_372: int;
  var {:pointer} Tmp_1106: int;
  var {:pointer} Tmp_1107: int;
  var {:pointer} Tmp_1108: int;
  var {:pointer} Tmp_1109: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} status_26: int;
  var {:scalar} Tmp_1110: int;
  var {:scalar} Tmp_1111: int;
  var {:scalar} Tmp_1112: int;
  var {:pointer} PdoExtension_13: int;
  var vslice_dummy_var_1150: int;

  anon0:
    PdoExtension_13 := actual_PdoExtension_13;
    call {:si_unique_call 2041} Tmp_1104 := __HAVOC_malloc(4);
    call {:si_unique_call 2042} Tmp_1109 := __HAVOC_malloc(4);
    status_26 := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2043} sdv_372 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(PdoExtension_13), 0);
    Irp_10 := sdv_372;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Irp_10 != 0;
    call {:si_unique_call 2044} Sbp2AddLog(PdoExtension_13, 2, -800492944, Irp_10, 0);
    call {:si_unique_call 2045} irpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1109;
    assume {:nonnull} Tmp_1109 != 0;
    assume Tmp_1109 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc Tmp_1112;
    havoc Tmp_1105;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1110;
    call {:si_unique_call 2046} WPP_SF_qD(Tmp_1110, 36, Tmp_1105, PdoExtension_13, Tmp_1112);
    goto L25;

  L25:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 2047} Tmp_1106 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1106 != 0;
    assume Tmp_1106 > 0;
    call {:si_unique_call 2048} sdv_KeAcquireSpinLock(0, Tmp_1106);
    assume {:nonnull} Tmp_1106 != 0;
    assume Tmp_1106 > 0;
    havoc cIrql_3;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_1107;
    assume {:nonnull} Tmp_1107 != 0;
    assume Tmp_1107 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2049} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 2050} status_26 := Sbp2ManagementTransaction#0(PdoExtension_13, 7, -1);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} yogi_error != 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1104;
    assume {:nonnull} Tmp_1104 != 0;
    assume Tmp_1104 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_1108;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1111;
    call {:si_unique_call 2051} WPP_SF_qD(Tmp_1111, 37, Tmp_1108, PdoExtension_13, status_26);
    goto L56;

  L56:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc vslice_dummy_var_1150;
    call {:si_unique_call 2052} Sbp2PdoCompletePowerIrp(vslice_dummy_var_1150, Irp_10);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1103 := status_26;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    goto L56;

  anon41_Then:
    goto L56;

  anon33_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon40_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon38_Then:
    goto L40;

  L40:
    call {:si_unique_call 2053} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L56;

  anon37_Then:
    goto L40;

  anon30_Then:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 2054} status_26 := Sbp2Issue1394BusReset#0(PdoExtension_13);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto L56;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    goto L56;

  anon31_Then:
    goto L25;

  anon36_Then:
    goto L25;

  anon29_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon35_Then:
    assume {:partition} Irp_10 == 0;
    Tmp_1103 := 0;
    goto L1;
}



procedure {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#0(actual_PdoExtension_13: int) returns (Tmp_1103: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#1(actual_PdoExtension_13: int) returns (Tmp_1103: int)
{
  var {:pointer} irpStack_3: int;
  var {:pointer} Irp_10: int;
  var {:pointer} Tmp_1104: int;
  var {:pointer} Tmp_1105: int;
  var {:pointer} sdv_372: int;
  var {:pointer} Tmp_1106: int;
  var {:pointer} Tmp_1107: int;
  var {:pointer} Tmp_1108: int;
  var {:pointer} Tmp_1109: int;
  var {:scalar} cIrql_3: int;
  var {:scalar} status_26: int;
  var {:scalar} Tmp_1110: int;
  var {:scalar} Tmp_1111: int;
  var {:scalar} Tmp_1112: int;
  var {:pointer} PdoExtension_13: int;
  var vslice_dummy_var_1151: int;

  anon0:
    PdoExtension_13 := actual_PdoExtension_13;
    call {:si_unique_call 2055} Tmp_1104 := __HAVOC_malloc(4);
    call {:si_unique_call 2056} Tmp_1109 := __HAVOC_malloc(4);
    status_26 := 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2057} sdv_372 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(PdoExtension_13), 0);
    Irp_10 := sdv_372;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Irp_10 != 0;
    call {:si_unique_call 2058} Sbp2AddLog(PdoExtension_13, 2, -800492944, Irp_10, 0);
    call {:si_unique_call 2059} irpStack_3 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1109;
    assume {:nonnull} Tmp_1109 != 0;
    assume Tmp_1109 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    havoc Tmp_1112;
    havoc Tmp_1105;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1110;
    call {:si_unique_call 2060} WPP_SF_qD(Tmp_1110, 36, Tmp_1105, PdoExtension_13, Tmp_1112);
    goto L25;

  L25:
    assume {:nonnull} irpStack_3 != 0;
    assume irpStack_3 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 2061} Tmp_1106 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1106 != 0;
    assume Tmp_1106 > 0;
    call {:si_unique_call 2062} sdv_KeAcquireSpinLock(0, Tmp_1106);
    assume {:nonnull} Tmp_1106 != 0;
    assume Tmp_1106 > 0;
    havoc cIrql_3;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc Tmp_1107;
    assume {:nonnull} Tmp_1107 != 0;
    assume Tmp_1107 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    call {:si_unique_call 2063} sdv_KeReleaseSpinLock(0, cIrql_3);
    call {:si_unique_call 2064} status_26 := Sbp2ManagementTransaction#1(PdoExtension_13, 7, -1);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} yogi_error != 1;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1104;
    assume {:nonnull} Tmp_1104 != 0;
    assume Tmp_1104 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    havoc Tmp_1108;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1111;
    call {:si_unique_call 2065} WPP_SF_qD(Tmp_1111, 37, Tmp_1108, PdoExtension_13, status_26);
    goto L56;

  L56:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    havoc vslice_dummy_var_1151;
    call {:si_unique_call 2066} Sbp2PdoCompletePowerIrp(vslice_dummy_var_1151, Irp_10);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1103 := status_26;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    goto L56;

  anon41_Then:
    goto L56;

  anon33_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon40_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon38_Then:
    goto L40;

  L40:
    call {:si_unique_call 2067} sdv_KeReleaseSpinLock(0, cIrql_3);
    goto L56;

  anon37_Then:
    goto L40;

  anon30_Then:
    assume {:nonnull} PdoExtension_13 != 0;
    assume PdoExtension_13 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 2068} status_26 := Sbp2Issue1394BusReset#1(PdoExtension_13);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto L56;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    goto L56;

  anon31_Then:
    goto L25;

  anon36_Then:
    goto L25;

  anon29_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon35_Then:
    assume {:partition} Irp_10 == 0;
    Tmp_1103 := 0;
    goto L1;
}



procedure {:origName "Sbp2RestartPendingPowerIrp"} Sbp2RestartPendingPowerIrp#1(actual_PdoExtension_13: int) returns (Tmp_1103: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#0(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_585: int)
{
  var {:scalar} Tmp_586: int;
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_167: int;
  var {:pointer} Tmp_587: int;
  var {:pointer} Tmp_588: int;
  var {:scalar} Tmp_589: int;
  var {:scalar} Tmp_590: int;
  var {:pointer} Tmp_591: int;
  var {:pointer} Tmp_592: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:pointer} Tmp_595: int;
  var {:scalar} sdv_170: int;
  var {:scalar} regType: int;
  var {:scalar} sdv_171: int;
  var {:scalar} Tmp_597: int;
  var {:scalar} sdv_172: int;
  var {:scalar} bSync: int;
  var {:pointer} Tmp_598: int;
  var {:scalar} sdv_177: int;
  var {:scalar} sdv_178: int;
  var {:scalar} sdv_179: int;
  var {:pointer} Tmp_599: int;
  var {:scalar} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:pointer} Tmp_602: int;
  var {:scalar} sdv_180: int;
  var {:pointer} Tmp_603: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_181: int;
  var {:pointer} Tmp_604: int;
  var {:scalar} sdv_182: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_605: int;
  var {:scalar} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:pointer} sbpRequest_2: int;
  var {:pointer} Tmp_608: int;
  var {:pointer} PdoExtension_7: int;
  var {:scalar} Type: int;
  var {:scalar} Generation_3: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_1152: int;

  anon0:
    call {:si_unique_call 2069} waitValue_2 := __HAVOC_malloc(20);
    PdoExtension_7 := actual_PdoExtension_7;
    Type := actual_Type;
    Generation_3 := actual_Generation_3;
    call {:si_unique_call 2070} Tmp_587 := __HAVOC_malloc(4);
    call {:si_unique_call 2071} Tmp_593 := __HAVOC_malloc(4);
    call {:si_unique_call 2072} Tmp_594 := __HAVOC_malloc(4);
    call {:si_unique_call 2073} Tmp_595 := __HAVOC_malloc(4);
    call {:si_unique_call 2074} Tmp_598 := __HAVOC_malloc(4);
    call {:si_unique_call 2075} Tmp_608 := __HAVOC_malloc(4);
    call {:si_unique_call 2076} Sbp2AddLog(PdoExtension_7, 1, -848859842, Type, 0);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    Tmp_585 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon75_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc sbpRequest_2;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} sbpRequest_2 != 0;
    call {:si_unique_call 2077} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Type != 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Type != 1;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} Type != 3;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Type == 7;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    status_14 := 0;
    goto L39;

  L39:
    call {:si_unique_call 2078} Sbp2AddLog(PdoExtension_7, 1, -848859844, Type, status_14);
    Tmp_585 := status_14;
    goto L1;

  anon76_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_608;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_604;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_586;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc vslice_dummy_var_1152;
    call {:si_unique_call 2079} WPP_SF_qD(Tmp_586, 88, Tmp_604, PdoExtension_7, vslice_dummy_var_1152);
    goto L25;

  L25:
    call {:si_unique_call 2080} status_14 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_591;
    assume {:nonnull} Tmp_591 != 0;
    assume Tmp_591 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    call {:si_unique_call 2081} sdv_182 := sdv_KeGetCurrentIrql();
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} 2 > sdv_182;
    bSync := 1;
    regType := 256;
    goto L160;

  L160:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2082} vslice_dummy_var_374 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    Tmp_597 := bSync;
    call {:si_unique_call 2083} Sbp2AddLog(PdoExtension_7, 1, -848859855, Type, Tmp_597);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2084} status_14 := Sbp2AccessRegister#0(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), regType);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} status_14 < 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_595;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_599;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_590;
    call {:si_unique_call 2085} WPP_SF_qdD(Tmp_590, 91, Tmp_599, PdoExtension_7, Type, status_14);
    goto L218;

  L218:
    call {:si_unique_call 2086} Sbp2AddLog(PdoExtension_7, 1, -848859852, Type, status_14);
    goto L176;

  L176:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2087} vslice_dummy_var_375 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_7), 0);
    goto L39;

  anon95_Then:
    goto L218;

  anon111_Then:
    goto L218;

  anon94_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L218;

  anon86_Then:
    assume {:partition} 0 <= status_14;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} bSync != 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_602;
    assume {:nonnull} Tmp_602 != 0;
    assume Tmp_602 > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    call {:si_unique_call 2088} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    call {:si_unique_call 2089} Sbp2AddLog(PdoExtension_7, 1, -848859854, Type, status_14);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} status_14 == 258;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_593;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc Tmp_603;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_606;
    call {:si_unique_call 2090} WPP_SF_qd(Tmp_606, 89, Tmp_603, PdoExtension_7, Type);
    goto L193;

  L193:
    status_14 := -1073741823;
    goto L176;

  anon91_Then:
    goto L193;

  anon109_Then:
    goto L193;

  anon90_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L193;

  anon88_Then:
    assume {:partition} status_14 != 258;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} status_14 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc status_14;
    call {:si_unique_call 2091} Sbp2AddLog(PdoExtension_7, 1, -848859853, status_14, 0);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_594;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    havoc Tmp_592;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_605;
    call {:si_unique_call 2092} WPP_SF_qD(Tmp_605, 90, Tmp_592, PdoExtension_7, status_14);
    goto L176;

  anon93_Then:
    goto L176;

  anon110_Then:
    goto L176;

  anon92_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L176;

  anon89_Then:
    assume {:partition} status_14 != 0;
    goto L176;

  anon87_Then:
    assume {:partition} bSync == 0;
    goto L176;

  anon108_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon85_Then:
    assume {:partition} sdv_182 >= 2;
    bSync := 0;
    regType := 1024;
    goto L160;

  anon84_Then:
    assume {:partition} 0 > status_14;
    Tmp_585 := status_14;
    goto L1;

  anon77_Then:
    goto L25;

  anon107_Then:
    goto L25;

  anon106_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon96_Then:
    assume {:partition} Type != 7;
    goto L25;

  anon97_Then:
    assume {:partition} Type == 3;
    call {:si_unique_call 2093} status_14 := Sbp2DoReconnect#0(PdoExtension_7, Generation_3);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon105_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon98_Then:
    assume {:partition} Type == 1;
    queryOrb := sbpRequest_2;
    call {:si_unique_call 2094} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_607;
    assume {:nonnull} Tmp_607 != 0;
    assume Tmp_607 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2095} vslice_dummy_var_376 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2096} status_14 := Sbp2AccessRegister#0(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), 256);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} status_14 < 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_587;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_601;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_589;
    call {:si_unique_call 2097} WPP_SF_qD(Tmp_589, 86, Tmp_601, PdoExtension_7, status_14);
    goto L123;

  L123:
    Tmp_585 := status_14;
    goto L1;

  anon83_Then:
    goto L123;

  anon104_Then:
    goto L123;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon78_Then:
    assume {:partition} 0 <= status_14;
    call {:si_unique_call 2098} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} status_14 == 258;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_598;
    assume {:nonnull} Tmp_598 != 0;
    assume Tmp_598 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    havoc Tmp_588;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_600;
    call {:si_unique_call 2099} WPP_SF_q(Tmp_600, 87, Tmp_588, PdoExtension_7);
    goto L114;

  L114:
    Tmp_585 := -1073741823;
    goto L1;

  anon81_Then:
    goto L114;

  anon103_Then:
    goto L114;

  anon80_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L114;

  anon79_Then:
    assume {:partition} status_14 != 258;
    goto L39;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon100_Then:
    assume {:partition} Type == 0;
    call {:si_unique_call 2100} status_14 := Sbp2DoLogin#0(PdoExtension_7, Generation_3);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon101_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon99_Then:
    assume {:partition} sbpRequest_2 == 0;
    Tmp_585 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#0(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_585: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#1(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_585: int)
{
  var {:scalar} Tmp_586: int;
  var {:scalar} waitValue_2: int;
  var {:scalar} sdv_167: int;
  var {:pointer} Tmp_587: int;
  var {:pointer} Tmp_588: int;
  var {:scalar} Tmp_589: int;
  var {:scalar} Tmp_590: int;
  var {:pointer} Tmp_591: int;
  var {:pointer} Tmp_592: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:pointer} Tmp_595: int;
  var {:scalar} sdv_170: int;
  var {:scalar} regType: int;
  var {:scalar} sdv_171: int;
  var {:scalar} Tmp_597: int;
  var {:scalar} sdv_172: int;
  var {:scalar} bSync: int;
  var {:pointer} Tmp_598: int;
  var {:scalar} sdv_177: int;
  var {:scalar} sdv_178: int;
  var {:scalar} sdv_179: int;
  var {:pointer} Tmp_599: int;
  var {:scalar} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:pointer} Tmp_602: int;
  var {:scalar} sdv_180: int;
  var {:pointer} Tmp_603: int;
  var {:pointer} queryOrb: int;
  var {:scalar} sdv_181: int;
  var {:pointer} Tmp_604: int;
  var {:scalar} sdv_182: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_605: int;
  var {:scalar} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:pointer} sbpRequest_2: int;
  var {:pointer} Tmp_608: int;
  var {:pointer} PdoExtension_7: int;
  var {:scalar} Type: int;
  var {:scalar} Generation_3: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_1153: int;

  anon0:
    call {:si_unique_call 2101} waitValue_2 := __HAVOC_malloc(20);
    PdoExtension_7 := actual_PdoExtension_7;
    Type := actual_Type;
    Generation_3 := actual_Generation_3;
    call {:si_unique_call 2102} Tmp_587 := __HAVOC_malloc(4);
    call {:si_unique_call 2103} Tmp_593 := __HAVOC_malloc(4);
    call {:si_unique_call 2104} Tmp_594 := __HAVOC_malloc(4);
    call {:si_unique_call 2105} Tmp_595 := __HAVOC_malloc(4);
    call {:si_unique_call 2106} Tmp_598 := __HAVOC_malloc(4);
    call {:si_unique_call 2107} Tmp_608 := __HAVOC_malloc(4);
    call {:si_unique_call 2108} Sbp2AddLog(PdoExtension_7, 1, -848859842, Type, 0);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    Tmp_585 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon75_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc sbpRequest_2;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} sbpRequest_2 != 0;
    call {:si_unique_call 2109} sdv_RtlZeroMemory(0, 32);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} Type != 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Type != 1;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} Type != 3;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Type == 7;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    status_14 := 0;
    goto L39;

  L39:
    call {:si_unique_call 2110} Sbp2AddLog(PdoExtension_7, 1, -848859844, Type, status_14);
    Tmp_585 := status_14;
    goto L1;

  anon76_Then:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_608;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    havoc Tmp_604;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_586;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc vslice_dummy_var_1153;
    call {:si_unique_call 2111} WPP_SF_qD(Tmp_586, 88, Tmp_604, PdoExtension_7, vslice_dummy_var_1153);
    goto L25;

  L25:
    call {:si_unique_call 2112} status_14 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_591;
    assume {:nonnull} Tmp_591 != 0;
    assume Tmp_591 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    assume {:nonnull} sbpRequest_2 != 0;
    assume sbpRequest_2 > 0;
    call {:si_unique_call 2113} sdv_182 := sdv_KeGetCurrentIrql();
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} 2 > sdv_182;
    bSync := 1;
    regType := 256;
    goto L160;

  L160:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2114} vslice_dummy_var_377 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    Tmp_597 := bSync;
    call {:si_unique_call 2115} Sbp2AddLog(PdoExtension_7, 1, -848859855, Type, Tmp_597);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2116} status_14 := Sbp2AccessRegister#1(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), regType);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} status_14 < 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_595;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc Tmp_599;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_590;
    call {:si_unique_call 2117} WPP_SF_qdD(Tmp_590, 91, Tmp_599, PdoExtension_7, Type, status_14);
    goto L218;

  L218:
    call {:si_unique_call 2118} Sbp2AddLog(PdoExtension_7, 1, -848859852, Type, status_14);
    goto L176;

  L176:
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2119} vslice_dummy_var_378 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_7), 0);
    goto L39;

  anon95_Then:
    goto L218;

  anon111_Then:
    goto L218;

  anon94_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L218;

  anon86_Then:
    assume {:partition} 0 <= status_14;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} bSync != 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_602;
    assume {:nonnull} Tmp_602 != 0;
    assume Tmp_602 > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    call {:si_unique_call 2120} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    call {:si_unique_call 2121} Sbp2AddLog(PdoExtension_7, 1, -848859854, Type, status_14);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} status_14 == 258;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_593;
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    havoc Tmp_603;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_606;
    call {:si_unique_call 2122} WPP_SF_qd(Tmp_606, 89, Tmp_603, PdoExtension_7, Type);
    goto L193;

  L193:
    status_14 := -1073741823;
    goto L176;

  anon91_Then:
    goto L193;

  anon109_Then:
    goto L193;

  anon90_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L193;

  anon88_Then:
    assume {:partition} status_14 != 258;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} status_14 == 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc status_14;
    call {:si_unique_call 2123} Sbp2AddLog(PdoExtension_7, 1, -848859853, status_14, 0);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_594;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    havoc Tmp_592;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_605;
    call {:si_unique_call 2124} WPP_SF_qD(Tmp_605, 90, Tmp_592, PdoExtension_7, status_14);
    goto L176;

  anon93_Then:
    goto L176;

  anon110_Then:
    goto L176;

  anon92_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L176;

  anon89_Then:
    assume {:partition} status_14 != 0;
    goto L176;

  anon87_Then:
    assume {:partition} bSync == 0;
    goto L176;

  anon108_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon85_Then:
    assume {:partition} sdv_182 >= 2;
    bSync := 0;
    regType := 1024;
    goto L160;

  anon84_Then:
    assume {:partition} 0 > status_14;
    Tmp_585 := status_14;
    goto L1;

  anon77_Then:
    goto L25;

  anon107_Then:
    goto L25;

  anon106_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon96_Then:
    assume {:partition} Type != 7;
    goto L25;

  anon97_Then:
    assume {:partition} Type == 3;
    call {:si_unique_call 2125} status_14 := Sbp2DoReconnect#1(PdoExtension_7, Generation_3);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon105_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon98_Then:
    assume {:partition} Type == 1;
    queryOrb := sbpRequest_2;
    call {:si_unique_call 2126} sdv_RtlZeroMemory(0, 72);
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    havoc Tmp_607;
    assume {:nonnull} Tmp_607 != 0;
    assume Tmp_607 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} queryOrb != 0;
    assume queryOrb > 0;
    assume {:nonnull} waitValue_2 != 0;
    assume waitValue_2 > 0;
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2127} vslice_dummy_var_379 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_7));
    assume {:nonnull} PdoExtension_7 != 0;
    assume PdoExtension_7 > 0;
    call {:si_unique_call 2128} status_14 := Sbp2AccessRegister#1(PdoExtension_7, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_7)), 256);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} status_14 < 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_587;
    assume {:nonnull} Tmp_587 != 0;
    assume Tmp_587 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc Tmp_601;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_589;
    call {:si_unique_call 2129} WPP_SF_qD(Tmp_589, 86, Tmp_601, PdoExtension_7, status_14);
    goto L123;

  L123:
    Tmp_585 := status_14;
    goto L1;

  anon83_Then:
    goto L123;

  anon104_Then:
    goto L123;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon78_Then:
    assume {:partition} 0 <= status_14;
    call {:si_unique_call 2130} status_14 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_2);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} status_14 == 258;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_598;
    assume {:nonnull} Tmp_598 != 0;
    assume Tmp_598 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    havoc Tmp_588;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_600;
    call {:si_unique_call 2131} WPP_SF_q(Tmp_600, 87, Tmp_588, PdoExtension_7);
    goto L114;

  L114:
    Tmp_585 := -1073741823;
    goto L1;

  anon81_Then:
    goto L114;

  anon103_Then:
    goto L114;

  anon80_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L114;

  anon79_Then:
    assume {:partition} status_14 != 258;
    goto L39;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon100_Then:
    assume {:partition} Type == 0;
    call {:si_unique_call 2132} status_14 := Sbp2DoLogin#1(PdoExtension_7, Generation_3);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon101_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon99_Then:
    assume {:partition} sbpRequest_2 == 0;
    Tmp_585 := -1073741632;
    goto L1;
}



procedure {:origName "Sbp2ManagementTransaction"} Sbp2ManagementTransaction#1(actual_PdoExtension_7: int, actual_Type: int, actual_Generation_3: int) returns (Tmp_585: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin#0(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_366: int)
{
  var {:pointer} Tmp_367: int;
  var {:scalar} Tmp_368: int;
  var {:scalar} waitValue: int;
  var {:pointer} Tmp_369: int;
  var {:pointer} Tmp_370: int;
  var {:scalar} sdv_87: int;
  var {:scalar} sdv_88: int;
  var {:scalar} Tmp_371: int;
  var {:scalar} Tmp_372: int;
  var {:scalar} sdv_90: int;
  var {:pointer} Tmp_373: int;
  var {:scalar} sdv_91: int;
  var {:scalar} sdv_92: int;
  var {:scalar} Tmp_374: int;
  var {:pointer} Tmp_375: int;
  var {:pointer} sdv_94: int;
  var {:pointer} loginOrb: int;
  var {:scalar} Tmp_376: int;
  var {:pointer} Tmp_377: int;
  var {:pointer} Tmp_378: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} sdv_97: int;
  var {:pointer} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} Tmp_384: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} Tmp_386: int;
  var {:scalar} sdv_98: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} Tmp_391: int;
  var {:scalar} Tmp_392: int;
  var {:pointer} Tmp_393: int;
  var {:pointer} Tmp_394: int;
  var {:scalar} Tmp_395: int;
  var {:scalar} sdv_100: int;
  var {:pointer} Tmp_396: int;
  var {:scalar} Tmp_397: int;
  var {:scalar} sdv_101: int;
  var {:scalar} sdv_102: int;
  var {:scalar} sdv_103: int;
  var {:pointer} Tmp_398: int;
  var {:scalar} sdv_104: int;
  var {:pointer} Tmp_399: int;
  var {:pointer} Tmp_400: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} Tmp_401: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_402: int;
  var {:pointer} Tmp_403: int;
  var {:pointer} sbpRequest: int;
  var {:scalar} sdv_107: int;
  var {:pointer} PdoExtension_2: int;
  var {:scalar} Generation_1: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_1154: int;
  var vslice_dummy_var_1155: int;
  var vslice_dummy_var_1156: int;
  var vslice_dummy_var_1157: int;
  var vslice_dummy_var_1158: int;
  var vslice_dummy_var_1159: int;
  var vslice_dummy_var_1160: int;

  anon0:
    call {:si_unique_call 2133} waitValue := __HAVOC_malloc(20);
    PdoExtension_2 := actual_PdoExtension_2;
    Generation_1 := actual_Generation_1;
    call {:si_unique_call 2134} Tmp_370 := __HAVOC_malloc(4);
    call {:si_unique_call 2135} Tmp_373 := __HAVOC_malloc(4);
    call {:si_unique_call 2136} Tmp_377 := __HAVOC_malloc(4);
    call {:si_unique_call 2137} Tmp_380 := __HAVOC_malloc(4);
    call {:si_unique_call 2138} Tmp_385 := __HAVOC_malloc(4);
    call {:si_unique_call 2139} Tmp_387 := __HAVOC_malloc(4);
    call {:si_unique_call 2140} Tmp_388 := __HAVOC_malloc(4);
    call {:si_unique_call 2141} Tmp_390 := __HAVOC_malloc(4);
    call {:si_unique_call 2142} Tmp_391 := __HAVOC_malloc(4);
    call {:si_unique_call 2143} Tmp_400 := __HAVOC_malloc(4);
    call {:si_unique_call 2144} vslice_dummy_var_380 := sdv_KeGetCurrentIrql();
    call {:si_unique_call 2145} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2146} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2147} Sbp2AddLog(PdoExtension_2, 1, -867219650, 0, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_388;
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    havoc Tmp_402;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_371;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1154;
    call {:si_unique_call 2148} WPP_SF_qD(Tmp_371, 68, Tmp_402, PdoExtension_2, vslice_dummy_var_1154);
    goto L25;

  L25:
    call {:si_unique_call 2149} Sbp2AddLog(PdoExtension_2, 1, -867219663, 0, 0);
    call {:si_unique_call 2150} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_366 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon118_Then:
    goto L25;

  anon149_Then:
    goto L25;

  anon117_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon115_Then:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2151} Sbp2AddLog(PdoExtension_2, 1, -867219662, 0, 0);
    goto L39;

  L39:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2152} sdv_KeReleaseSpinLock(0, cIrql_1);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1155;
    call {:si_unique_call 2153} sdv_101 := Sbp2CleanDeviceExtension#0(vslice_dummy_var_1155, 0, 0);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} yogi_error != 1;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} sdv_101 == 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_370;
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    havoc Tmp_389;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_382;
    call {:si_unique_call 2154} WPP_SF_q(Tmp_382, 69, Tmp_389, PdoExtension_2);
    goto L54;

  L54:
    call {:si_unique_call 2155} status_8 := Sbp2InitializeDeviceExtension#0(PdoExtension_2);
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} yogi_error != 1;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} status_8 < 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_377;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    havoc Tmp_394;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_386;
    call {:si_unique_call 2156} WPP_SF_qD(Tmp_386, 70, Tmp_394, PdoExtension_2, status_8);
    goto L315;

  L315:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    Tmp_366 := status_8;
    goto L1;

  anon145_Then:
    goto L315;

  anon170_Then:
    goto L315;

  anon144_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L315;

  anon120_Then:
    assume {:partition} 0 <= status_8;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc sbpRequest;
    loginOrb := sbpRequest;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_380;
    assume {:nonnull} Tmp_380 != 0;
    assume Tmp_380 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    call {:si_unique_call 2157} sdv_94 := GET_DEVICE_NAME(PdoExtension_2);
    call {:si_unique_call 2158} sdv_104 := GET_LUN(PdoExtension_2);
    havoc Tmp_401;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_395;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1156;
    call {:si_unique_call 2159} WPP_SF_qdSDd(Tmp_395, 71, Tmp_401, PdoExtension_2, sdv_104, sdv_94, vslice_dummy_var_1156, Generation_1);
    goto L68;

  L68:
    call {:si_unique_call 2160} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_367;
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    goto L107;

  L107:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L106;

  L106:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_379;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2161} vslice_dummy_var_383 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_2));
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2162} status_8 := Sbp2AccessRegisterEx#0(PdoExtension_2, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_2)), 256, Generation_1);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2163} Sbp2AddLog(PdoExtension_2, 1, -867219660, status_8, 0);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} status_8 < 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc Tmp_393;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_372;
    call {:si_unique_call 2164} WPP_SF_qD(Tmp_372, 76, Tmp_393, PdoExtension_2, status_8);
    goto L254;

  L254:
    call {:si_unique_call 2165} Sbp2AddLog(PdoExtension_2, 1, -867219658, status_8, 0);
    call {:si_unique_call 2166} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2167} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} status_8 == -1072562032;
    goto L270;

  L270:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2168} Sbp2SetManagementTimer(PdoExtension_2, 3);
    call {:si_unique_call 2169} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_366 := 0;
    goto L1;

  anon166_Then:
    assume {:partition} status_8 != -1072562032;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} status_8 != -1073741248;
    call {:si_unique_call 2170} sdv_88 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} sdv_88 == 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_387;
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    havoc Tmp_403;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_392;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1157;
    call {:si_unique_call 2171} WPP_SF_qD(Tmp_392, 77, Tmp_403, PdoExtension_2, vslice_dummy_var_1157);
    goto L298;

  L298:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_375;
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    call {:si_unique_call 2172} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2173} Sbp2LoginErrorHandler#0(PdoExtension_2, status_8, 2793);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} yogi_error != 1;
    Tmp_366 := status_8;
    goto L1;

  anon169_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon143_Then:
    goto L298;

  anon168_Then:
    goto L298;

  anon142_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L298;

  anon141_Then:
    assume {:partition} sdv_88 != 0;
    call {:si_unique_call 2174} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2175} vslice_dummy_var_382 := Sbp2Issue1394BusReset#0(PdoExtension_2);
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2176} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2177} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2178} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  L193:
    Tmp_366 := status_8;
    goto L1;

  anon167_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon140_Then:
    assume {:partition} status_8 == -1073741248;
    goto L270;

  anon139_Then:
    goto L254;

  anon165_Then:
    goto L254;

  anon138_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L254;

  anon122_Then:
    assume {:partition} 0 <= status_8;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_400;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    havoc Tmp_381;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_374;
    call {:si_unique_call 2179} WPP_SF_qD(Tmp_374, 72, Tmp_381, PdoExtension_2, status_8);
    goto L146;

  L146:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_369;
    assume {:nonnull} Tmp_369 != 0;
    assume Tmp_369 > 0;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    call {:si_unique_call 2180} status_8 := KeWaitForSingleObject(0, 0, 0, 0, waitValue);
    call {:si_unique_call 2181} Sbp2AddLog(PdoExtension_2, 1, -867219659, status_8, 0);
    call {:si_unique_call 2182} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2183} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} status_8 == 258;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_390;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    havoc Tmp_399;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_376;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    havoc vslice_dummy_var_1158;
    call {:si_unique_call 2184} WPP_SF_qd(Tmp_376, 73, Tmp_399, PdoExtension_2, vslice_dummy_var_1158);
    goto L171;

  L171:
    status_8 := -1073741643;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto L180;

  L180:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    status_8 := -1073741810;
    goto L181;

  L181:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} status_8 < 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    havoc Tmp_398;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_397;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1159;
    call {:si_unique_call 2185} WPP_SF_qDd(Tmp_397, 74, Tmp_398, PdoExtension_2, status_8, vslice_dummy_var_1159);
    goto L204;

  L204:
    call {:si_unique_call 2186} Sbp2AddLog(PdoExtension_2, 1, -867219657, status_8, 0);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} status_8 != 29;
    call {:si_unique_call 2187} sdv_103 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} sdv_103 == 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_391;
    assume {:nonnull} Tmp_391 != 0;
    assume Tmp_391 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    havoc Tmp_378;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_368;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1160;
    call {:si_unique_call 2188} WPP_SF_qD(Tmp_368, 75, Tmp_378, PdoExtension_2, vslice_dummy_var_1160);
    goto L237;

  L237:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_396;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    call {:si_unique_call 2189} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2190} Sbp2LoginErrorHandler#0(PdoExtension_2, status_8, 2707);
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} yogi_error != 1;
    Tmp_366 := status_8;
    goto L1;

  anon164_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon137_Then:
    goto L237;

  anon163_Then:
    goto L237;

  anon136_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L237;

  anon133_Then:
    assume {:partition} sdv_103 != 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} status_8 != -1072562032;
    call {:si_unique_call 2191} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2192} sdv_100 := Sbp2Issue1394BusReset#0(PdoExtension_2);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} yogi_error != 1;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_100 >= 0;
    goto L233;

  L233:
    call {:si_unique_call 2193} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2194} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    goto L186;

  L186:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} status_8 != 0;
    goto L190;

  L190:
    call {:si_unique_call 2195} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  anon129_Then:
    assume {:partition} status_8 == 0;
    call {:si_unique_call 2196} Sbp2AddLog(PdoExtension_2, 1, -867219655, status_8, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2197} vslice_dummy_var_381 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_2), 0, 0);
    goto L197;

  L197:
    assume false;
    return;

  anon159_Then:
    goto L197;

  anon135_Then:
    assume {:partition} 0 > sdv_100;
    call {:si_unique_call 2198} Sbp2SetDeferLoginTimer(PdoExtension_2);
    goto L233;

  anon162_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon134_Then:
    assume {:partition} status_8 == -1072562032;
    goto L186;

  anon132_Then:
    assume {:partition} status_8 == 29;
    goto L186;

  anon131_Then:
    goto L204;

  anon161_Then:
    goto L204;

  anon130_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L204;

  anon128_Then:
    assume {:partition} 0 <= status_8;
    goto L186;

  anon127_Then:
    goto L181;

  anon126_Then:
    goto L171;

  anon158_Then:
    goto L171;

  anon125_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L171;

  anon157_Then:
    assume {:partition} status_8 != 258;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc status_8;
    goto L180;

  anon124_Then:
    goto L146;

  anon156_Then:
    goto L146;

  anon123_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L146;

  anon155_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon148_Then:
    goto L106;

  anon154_Then:
    goto L107;

  anon121_Then:
    goto L68;

  anon153_Then:
    goto L68;

  anon152_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L68;

  anon151_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon147_Then:
    goto L54;

  anon171_Then:
    goto L54;

  anon146_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon119_Then:
    assume {:partition} sdv_101 != 0;
    goto L54;

  anon150_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L39;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin#0(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_366: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2DoLogin"} Sbp2DoLogin#1(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_366: int)
{
  var {:pointer} Tmp_367: int;
  var {:scalar} Tmp_368: int;
  var {:scalar} waitValue: int;
  var {:pointer} Tmp_369: int;
  var {:pointer} Tmp_370: int;
  var {:scalar} sdv_87: int;
  var {:scalar} sdv_88: int;
  var {:scalar} Tmp_371: int;
  var {:scalar} Tmp_372: int;
  var {:scalar} sdv_90: int;
  var {:pointer} Tmp_373: int;
  var {:scalar} sdv_91: int;
  var {:scalar} sdv_92: int;
  var {:scalar} Tmp_374: int;
  var {:pointer} Tmp_375: int;
  var {:pointer} sdv_94: int;
  var {:pointer} loginOrb: int;
  var {:scalar} Tmp_376: int;
  var {:pointer} Tmp_377: int;
  var {:pointer} Tmp_378: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} sdv_97: int;
  var {:pointer} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} Tmp_384: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} Tmp_386: int;
  var {:scalar} sdv_98: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} Tmp_391: int;
  var {:scalar} Tmp_392: int;
  var {:pointer} Tmp_393: int;
  var {:pointer} Tmp_394: int;
  var {:scalar} Tmp_395: int;
  var {:scalar} sdv_100: int;
  var {:pointer} Tmp_396: int;
  var {:scalar} Tmp_397: int;
  var {:scalar} sdv_101: int;
  var {:scalar} sdv_102: int;
  var {:scalar} sdv_103: int;
  var {:pointer} Tmp_398: int;
  var {:scalar} sdv_104: int;
  var {:pointer} Tmp_399: int;
  var {:pointer} Tmp_400: int;
  var {:scalar} cIrql_1: int;
  var {:pointer} Tmp_401: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_402: int;
  var {:pointer} Tmp_403: int;
  var {:pointer} sbpRequest: int;
  var {:scalar} sdv_107: int;
  var {:pointer} PdoExtension_2: int;
  var {:scalar} Generation_1: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_1161: int;
  var vslice_dummy_var_1162: int;
  var vslice_dummy_var_1163: int;
  var vslice_dummy_var_1164: int;
  var vslice_dummy_var_1165: int;
  var vslice_dummy_var_1166: int;
  var vslice_dummy_var_1167: int;

  anon0:
    call {:si_unique_call 2199} waitValue := __HAVOC_malloc(20);
    PdoExtension_2 := actual_PdoExtension_2;
    Generation_1 := actual_Generation_1;
    call {:si_unique_call 2200} Tmp_370 := __HAVOC_malloc(4);
    call {:si_unique_call 2201} Tmp_373 := __HAVOC_malloc(4);
    call {:si_unique_call 2202} Tmp_377 := __HAVOC_malloc(4);
    call {:si_unique_call 2203} Tmp_380 := __HAVOC_malloc(4);
    call {:si_unique_call 2204} Tmp_385 := __HAVOC_malloc(4);
    call {:si_unique_call 2205} Tmp_387 := __HAVOC_malloc(4);
    call {:si_unique_call 2206} Tmp_388 := __HAVOC_malloc(4);
    call {:si_unique_call 2207} Tmp_390 := __HAVOC_malloc(4);
    call {:si_unique_call 2208} Tmp_391 := __HAVOC_malloc(4);
    call {:si_unique_call 2209} Tmp_400 := __HAVOC_malloc(4);
    call {:si_unique_call 2210} vslice_dummy_var_384 := sdv_KeGetCurrentIrql();
    call {:si_unique_call 2211} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2212} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2213} Sbp2AddLog(PdoExtension_2, 1, -867219650, 0, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_388;
    assume {:nonnull} Tmp_388 != 0;
    assume Tmp_388 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    havoc Tmp_402;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_371;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1161;
    call {:si_unique_call 2214} WPP_SF_qD(Tmp_371, 68, Tmp_402, PdoExtension_2, vslice_dummy_var_1161);
    goto L25;

  L25:
    call {:si_unique_call 2215} Sbp2AddLog(PdoExtension_2, 1, -867219663, 0, 0);
    call {:si_unique_call 2216} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_366 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon118_Then:
    goto L25;

  anon149_Then:
    goto L25;

  anon117_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L25;

  anon115_Then:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2217} Sbp2AddLog(PdoExtension_2, 1, -867219662, 0, 0);
    goto L39;

  L39:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2218} sdv_KeReleaseSpinLock(0, cIrql_1);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1162;
    call {:si_unique_call 2219} sdv_101 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_1162, 0, 0);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} yogi_error != 1;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} sdv_101 == 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_370;
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    havoc Tmp_389;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_382;
    call {:si_unique_call 2220} WPP_SF_q(Tmp_382, 69, Tmp_389, PdoExtension_2);
    goto L54;

  L54:
    call {:si_unique_call 2221} status_8 := Sbp2InitializeDeviceExtension#1(PdoExtension_2);
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} yogi_error != 1;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} status_8 < 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_377;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    havoc Tmp_394;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_386;
    call {:si_unique_call 2222} WPP_SF_qD(Tmp_386, 70, Tmp_394, PdoExtension_2, status_8);
    goto L315;

  L315:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    Tmp_366 := status_8;
    goto L1;

  anon145_Then:
    goto L315;

  anon170_Then:
    goto L315;

  anon144_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L315;

  anon120_Then:
    assume {:partition} 0 <= status_8;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc sbpRequest;
    loginOrb := sbpRequest;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_380;
    assume {:nonnull} Tmp_380 != 0;
    assume Tmp_380 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    call {:si_unique_call 2223} sdv_94 := GET_DEVICE_NAME(PdoExtension_2);
    call {:si_unique_call 2224} sdv_104 := GET_LUN(PdoExtension_2);
    havoc Tmp_401;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_395;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1163;
    call {:si_unique_call 2225} WPP_SF_qdSDd(Tmp_395, 71, Tmp_401, PdoExtension_2, sdv_104, sdv_94, vslice_dummy_var_1163, Generation_1);
    goto L68;

  L68:
    call {:si_unique_call 2226} sdv_RtlZeroMemory(0, 16);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_367;
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Tmp_367 != 0;
    assume Tmp_367 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    goto L107;

  L107:
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    goto L106;

  L106:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_379;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} sbpRequest != 0;
    assume sbpRequest > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} loginOrb != 0;
    assume loginOrb > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2227} vslice_dummy_var_388 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_2));
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2228} status_8 := Sbp2AccessRegisterEx#1(PdoExtension_2, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_2)), 256, Generation_1);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2229} Sbp2AddLog(PdoExtension_2, 1, -867219660, status_8, 0);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} status_8 < 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_373 != 0;
    assume Tmp_373 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    havoc Tmp_393;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_372;
    call {:si_unique_call 2230} WPP_SF_qD(Tmp_372, 76, Tmp_393, PdoExtension_2, status_8);
    goto L254;

  L254:
    call {:si_unique_call 2231} Sbp2AddLog(PdoExtension_2, 1, -867219658, status_8, 0);
    call {:si_unique_call 2232} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2233} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} status_8 == -1072562032;
    goto L270;

  L270:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2234} Sbp2SetManagementTimer(PdoExtension_2, 3);
    call {:si_unique_call 2235} sdv_KeReleaseSpinLock(0, cIrql_1);
    Tmp_366 := 0;
    goto L1;

  anon166_Then:
    assume {:partition} status_8 != -1072562032;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} status_8 != -1073741248;
    call {:si_unique_call 2236} sdv_88 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} sdv_88 == 0;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_387;
    assume {:nonnull} Tmp_387 != 0;
    assume Tmp_387 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    havoc Tmp_403;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_392;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1164;
    call {:si_unique_call 2237} WPP_SF_qD(Tmp_392, 77, Tmp_403, PdoExtension_2, vslice_dummy_var_1164);
    goto L298;

  L298:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_375;
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    call {:si_unique_call 2238} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2239} Sbp2LoginErrorHandler#1(PdoExtension_2, status_8, 2793);
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} yogi_error != 1;
    Tmp_366 := status_8;
    goto L1;

  anon169_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon143_Then:
    goto L298;

  anon168_Then:
    goto L298;

  anon142_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L298;

  anon141_Then:
    assume {:partition} sdv_88 != 0;
    call {:si_unique_call 2240} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2241} vslice_dummy_var_387 := Sbp2Issue1394BusReset#1(PdoExtension_2);
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2242} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2243} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    call {:si_unique_call 2244} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  L193:
    Tmp_366 := status_8;
    goto L1;

  anon167_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon140_Then:
    assume {:partition} status_8 == -1073741248;
    goto L270;

  anon139_Then:
    goto L254;

  anon165_Then:
    goto L254;

  anon138_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L254;

  anon122_Then:
    assume {:partition} 0 <= status_8;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_400;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    havoc Tmp_381;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_374;
    call {:si_unique_call 2245} WPP_SF_qD(Tmp_374, 72, Tmp_381, PdoExtension_2, status_8);
    goto L146;

  L146:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_369;
    assume {:nonnull} Tmp_369 != 0;
    assume Tmp_369 > 0;
    assume {:nonnull} waitValue != 0;
    assume waitValue > 0;
    call {:si_unique_call 2246} status_8 := KeWaitForSingleObject(0, 0, 0, 0, waitValue);
    call {:si_unique_call 2247} Sbp2AddLog(PdoExtension_2, 1, -867219659, status_8, 0);
    call {:si_unique_call 2248} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2249} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} status_8 == 258;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_390;
    assume {:nonnull} Tmp_390 != 0;
    assume Tmp_390 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    havoc Tmp_399;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_376;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    havoc vslice_dummy_var_1165;
    call {:si_unique_call 2250} WPP_SF_qd(Tmp_376, 73, Tmp_399, PdoExtension_2, vslice_dummy_var_1165);
    goto L171;

  L171:
    status_8 := -1073741643;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto L180;

  L180:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    status_8 := -1073741810;
    goto L181;

  L181:
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} status_8 < 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_385;
    assume {:nonnull} Tmp_385 != 0;
    assume Tmp_385 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    havoc Tmp_398;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_397;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1166;
    call {:si_unique_call 2251} WPP_SF_qDd(Tmp_397, 74, Tmp_398, PdoExtension_2, status_8, vslice_dummy_var_1166);
    goto L204;

  L204:
    call {:si_unique_call 2252} Sbp2AddLog(PdoExtension_2, 1, -867219657, status_8, 0);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} status_8 != 29;
    call {:si_unique_call 2253} sdv_103 := IsRetryLogin(PdoExtension_2, status_8);
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} sdv_103 == 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_391;
    assume {:nonnull} Tmp_391 != 0;
    assume Tmp_391 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    havoc Tmp_378;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_368;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc vslice_dummy_var_1167;
    call {:si_unique_call 2254} WPP_SF_qD(Tmp_368, 75, Tmp_378, PdoExtension_2, vslice_dummy_var_1167);
    goto L237;

  L237:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc Tmp_396;
    assume {:nonnull} Tmp_396 != 0;
    assume Tmp_396 > 0;
    call {:si_unique_call 2255} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2256} Sbp2LoginErrorHandler#1(PdoExtension_2, status_8, 2707);
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} yogi_error != 1;
    Tmp_366 := status_8;
    goto L1;

  anon164_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon137_Then:
    goto L237;

  anon163_Then:
    goto L237;

  anon136_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L237;

  anon133_Then:
    assume {:partition} sdv_103 != 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} status_8 != -1072562032;
    call {:si_unique_call 2257} sdv_KeReleaseSpinLock(0, cIrql_1);
    call {:si_unique_call 2258} sdv_100 := Sbp2Issue1394BusReset#1(PdoExtension_2);
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:partition} yogi_error != 1;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_100 >= 0;
    goto L233;

  L233:
    call {:si_unique_call 2259} Tmp_384 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    call {:si_unique_call 2260} sdv_KeAcquireSpinLock(0, Tmp_384);
    assume {:nonnull} Tmp_384 != 0;
    assume Tmp_384 > 0;
    havoc cIrql_1;
    goto L186;

  L186:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} status_8 != 0;
    goto L190;

  L190:
    call {:si_unique_call 2261} sdv_KeReleaseSpinLock(0, cIrql_1);
    goto L193;

  anon129_Then:
    assume {:partition} status_8 == 0;
    call {:si_unique_call 2262} Sbp2AddLog(PdoExtension_2, 1, -867219655, status_8, 0);
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    call {:si_unique_call 2263} vslice_dummy_var_386 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_2), 0, 0);
    goto L197;

  L197:
    call {:si_unique_call 2264} vslice_dummy_var_385 := Sbp2RestartPendingPowerIrp#0(PdoExtension_2);
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} yogi_error != 1;
    goto L190;

  anon160_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon159_Then:
    goto L197;

  anon135_Then:
    assume {:partition} 0 > sdv_100;
    call {:si_unique_call 2265} Sbp2SetDeferLoginTimer(PdoExtension_2);
    goto L233;

  anon162_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon134_Then:
    assume {:partition} status_8 == -1072562032;
    goto L186;

  anon132_Then:
    assume {:partition} status_8 == 29;
    goto L186;

  anon131_Then:
    goto L204;

  anon161_Then:
    goto L204;

  anon130_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L204;

  anon128_Then:
    assume {:partition} 0 <= status_8;
    goto L186;

  anon127_Then:
    goto L181;

  anon126_Then:
    goto L171;

  anon158_Then:
    goto L171;

  anon125_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L171;

  anon157_Then:
    assume {:partition} status_8 != 258;
    assume {:nonnull} PdoExtension_2 != 0;
    assume PdoExtension_2 > 0;
    havoc status_8;
    goto L180;

  anon124_Then:
    goto L146;

  anon156_Then:
    goto L146;

  anon123_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L146;

  anon155_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon148_Then:
    goto L106;

  anon154_Then:
    goto L107;

  anon121_Then:
    goto L68;

  anon153_Then:
    goto L68;

  anon152_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L68;

  anon151_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon147_Then:
    goto L54;

  anon171_Then:
    goto L54;

  anon146_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon119_Then:
    assume {:partition} sdv_101 != 0;
    goto L54;

  anon150_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon116_Then:
    goto L39;
}



procedure {:origName "Sbp2DoLogin"} Sbp2DoLogin#1(actual_PdoExtension_2: int, actual_Generation_1: int) returns (Tmp_366: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_36: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2005: int)
{
  var {:scalar} Tmp_2006: int;
  var {:scalar} Tmp_2007: int;
  var {:pointer} Tmp_2009: int;
  var {:scalar} Tmp_2010: int;
  var {:scalar} Tmp_2011: int;
  var {:pointer} Tmp_2012: int;
  var {:pointer} Tmp_2013: int;
  var {:scalar} Tmp_2014: int;
  var {:pointer} Tmp_2016: int;
  var {:pointer} pdoExtension_17: int;
  var {:scalar} Tmp_2018: int;
  var {:scalar} Tmp_2019: int;
  var {:pointer} Tmp_2020: int;
  var {:pointer} Tmp_2021: int;
  var {:pointer} Tmp_2022: int;
  var {:scalar} Tmp_2023: int;
  var {:pointer} Tmp_2024: int;
  var {:pointer} Tmp_2025: int;
  var {:pointer} Tmp_2026: int;
  var {:pointer} Tmp_2027: int;
  var {:pointer} Tmp_2028: int;
  var {:pointer} sdv_668: int;
  var {:pointer} Tmp_2029: int;
  var {:scalar} Tmp_2030: int;
  var {:pointer} Tmp_2031: int;
  var {:pointer} Tmp_2032: int;
  var {:pointer} Tmp_2033: int;
  var {:scalar} Tmp_2034: int;
  var {:scalar} Tmp_2035: int;
  var {:pointer} sdv_669: int;
  var {:pointer} sdv_670: int;
  var {:scalar} Tmp_2036: int;
  var {:pointer} Tmp_2037: int;
  var {:pointer} Tmp_2038: int;
  var {:pointer} Tmp_2039: int;
  var {:pointer} sdv_671: int;
  var {:pointer} Tmp_2040: int;
  var {:pointer} Tmp_2041: int;
  var {:pointer} sdv_672: int;
  var {:scalar} Tmp_2042: int;
  var {:pointer} Tmp_2043: int;
  var {:pointer} Tmp_2044: int;
  var {:pointer} irp_6: int;
  var {:pointer} Tmp_2045: int;
  var {:pointer} Tmp_2046: int;
  var {:pointer} Tmp_2047: int;
  var {:pointer} Tmp_2048: int;
  var {:scalar} sdv_674: int;
  var {:pointer} Tmp_2049: int;
  var {:pointer} Tmp_2050: int;
  var {:scalar} Tmp_2051: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} Tmp_2052: int;
  var {:pointer} sdv_675: int;
  var {:scalar} Tmp_2053: int;
  var {:pointer} Tmp_2054: int;
  var {:pointer} Tmp_2055: int;
  var {:pointer} Tmp_2056: int;
  var {:scalar} valid: int;
  var {:pointer} Tmp_2058: int;
  var {:scalar} Tmp_2059: int;
  var {:scalar} status_62: int;
  var {:pointer} Tmp_2060: int;
  var {:scalar} Tmp_2061: int;
  var {:pointer} Tmp_2062: int;
  var {:scalar} Tmp_2063: int;
  var {:pointer} Tmp_2064: int;
  var {:pointer} Tmp_2065: int;
  var {:scalar} Tmp_2066: int;
  var {:pointer} Tmp_2067: int;
  var {:scalar} Tmp_2068: int;
  var {:scalar} i_5: int;
  var {:pointer} Tmp_2069: int;
  var {:pointer} Tmp_2070: int;
  var {:pointer} Tmp_2071: int;
  var {:pointer} Tmp_2072: int;
  var {:scalar} Tmp_2073: int;
  var {:scalar} Tmp_2074: int;
  var {:pointer} Tmp_2075: int;
  var {:scalar} Tmp_2076: int;
  var {:scalar} Tmp_2077: int;
  var {:scalar} Tmp_2079: int;
  var {:pointer} Tmp_2081: int;
  var {:pointer} Tmp_2082: int;
  var {:pointer} Tmp_2083: int;
  var {:scalar} Tmp_2084: int;
  var {:scalar} Tmp_2087: int;
  var {:scalar} Tmp_2088: int;
  var {:pointer} context_2: int;
  var {:scalar} Tmp_2089: int;
  var {:scalar} Tmp_2090: int;
  var {:scalar} Tmp_2091: int;
  var {:scalar} Tmp_2093: int;
  var {:pointer} Tmp_2094: int;
  var {:pointer} Tmp_2095: int;
  var {:scalar} Tmp_2096: int;
  var {:pointer} Tmp_2097: int;
  var {:scalar} Tmp_2098: int;
  var {:pointer} Tmp_2099: int;
  var {:pointer} Tmp_2100: int;
  var {:pointer} Tmp_2101: int;
  var {:pointer} Tmp_2102: int;
  var {:scalar} Tmp_2103: int;
  var {:pointer} sdv_678: int;
  var {:scalar} sdv_679: int;
  var {:pointer} Tmp_2104: int;
  var {:scalar} Tmp_2105: int;
  var {:pointer} fdoExtension_7: int;
  var {:pointer} Tmp_2106: int;
  var {:pointer} Tmp_2107: int;
  var {:pointer} Tmp_2108: int;
  var {:pointer} Tmp_2109: int;
  var {:pointer} Tmp_2110: int;
  var {:pointer} Tmp_2111: int;
  var {:pointer} Tmp_2112: int;
  var {:scalar} Tmp_2113: int;
  var {:scalar} Tmp_2114: int;
  var {:pointer} Tmp_2115: int;
  var {:scalar} Tmp_2116: int;
  var {:scalar} cIrql_9: int;
  var {:pointer} Tmp_2117: int;
  var {:scalar} Tmp_2119: int;
  var {:scalar} status_63: int;
  var {:pointer} packet_13: int;
  var {:scalar} Tmp_2120: int;
  var {:scalar} Tmp_2121: int;
  var {:pointer} Tmp_2122: int;
  var {:scalar} Tmp_2123: int;
  var {:scalar} Tmp_2124: int;
  var {:pointer} Tmp_2125: int;
  var {:pointer} Tmp_2126: int;
  var {:pointer} Tmp_2127: int;
  var {:scalar} Tmp_2128: int;
  var {:pointer} Tmp_2129: int;
  var {:pointer} DeviceObject_36: int;
  var {:scalar} FreeLists: int;
  var {:scalar} OnRemove: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_1168: int;
  var vslice_dummy_var_1169: int;
  var vslice_dummy_var_1170: int;
  var vslice_dummy_var_1171: int;
  var vslice_dummy_var_1172: int;

  anon0:
    DeviceObject_36 := actual_DeviceObject_36;
    FreeLists := actual_FreeLists;
    OnRemove := actual_OnRemove;
    call {:si_unique_call 2266} Tmp_2009 := __HAVOC_malloc(2680);
    call {:si_unique_call 2267} Tmp_2013 := __HAVOC_malloc(2680);
    call {:si_unique_call 2268} Tmp_2020 := __HAVOC_malloc(4);
    call {:si_unique_call 2269} Tmp_2021 := __HAVOC_malloc(2680);
    call {:si_unique_call 2270} Tmp_2022 := __HAVOC_malloc(2680);
    call {:si_unique_call 2271} Tmp_2024 := __HAVOC_malloc(2680);
    call {:si_unique_call 2272} Tmp_2025 := __HAVOC_malloc(2680);
    call {:si_unique_call 2273} Tmp_2026 := __HAVOC_malloc(2680);
    call {:si_unique_call 2274} Tmp_2028 := __HAVOC_malloc(2680);
    call {:si_unique_call 2275} Tmp_2033 := __HAVOC_malloc(2680);
    call {:si_unique_call 2276} Tmp_2038 := __HAVOC_malloc(2680);
    call {:si_unique_call 2277} Tmp_2039 := __HAVOC_malloc(4);
    call {:si_unique_call 2278} Tmp_2040 := __HAVOC_malloc(2680);
    call {:si_unique_call 2279} Tmp_2041 := __HAVOC_malloc(4);
    call {:si_unique_call 2280} Tmp_2043 := __HAVOC_malloc(2680);
    call {:si_unique_call 2281} Tmp_2044 := __HAVOC_malloc(2680);
    call {:si_unique_call 2282} Tmp_2047 := __HAVOC_malloc(4);
    call {:si_unique_call 2283} Tmp_2050 := __HAVOC_malloc(2680);
    call {:si_unique_call 2284} Tmp_2054 := __HAVOC_malloc(2680);
    call {:si_unique_call 2285} Tmp_2055 := __HAVOC_malloc(2680);
    call {:si_unique_call 2286} Tmp_2062 := __HAVOC_malloc(2680);
    call {:si_unique_call 2287} Tmp_2064 := __HAVOC_malloc(2680);
    call {:si_unique_call 2288} Tmp_2069 := __HAVOC_malloc(4);
    call {:si_unique_call 2289} Tmp_2070 := __HAVOC_malloc(4);
    call {:si_unique_call 2290} Tmp_2071 := __HAVOC_malloc(2680);
    call {:si_unique_call 2291} Tmp_2075 := __HAVOC_malloc(4);
    call {:si_unique_call 2292} Tmp_2081 := __HAVOC_malloc(2680);
    call {:si_unique_call 2293} Tmp_2083 := __HAVOC_malloc(2680);
    call {:si_unique_call 2294} Tmp_2094 := __HAVOC_malloc(2680);
    call {:si_unique_call 2295} Tmp_2097 := __HAVOC_malloc(4);
    call {:si_unique_call 2296} Tmp_2099 := __HAVOC_malloc(2680);
    call {:si_unique_call 2297} Tmp_2100 := __HAVOC_malloc(4);
    call {:si_unique_call 2298} Tmp_2102 := __HAVOC_malloc(2680);
    call {:si_unique_call 2299} Tmp_2104 := __HAVOC_malloc(2680);
    call {:si_unique_call 2300} Tmp_2106 := __HAVOC_malloc(2680);
    call {:si_unique_call 2301} Tmp_2108 := __HAVOC_malloc(2680);
    call {:si_unique_call 2302} Tmp_2111 := __HAVOC_malloc(2680);
    call {:si_unique_call 2303} Tmp_2117 := __HAVOC_malloc(2680);
    call {:si_unique_call 2304} Tmp_2122 := __HAVOC_malloc(2680);
    call {:si_unique_call 2305} Tmp_2126 := __HAVOC_malloc(4);
    call {:si_unique_call 2306} Tmp_2127 := __HAVOC_malloc(2680);
    call {:si_unique_call 2307} Tmp_2129 := __HAVOC_malloc(2680);
    valid := 0;
    assume {:nonnull} DeviceObject_36 != 0;
    assume DeviceObject_36 > 0;
    pdoExtension_17 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_36)];
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2041;
    assume {:nonnull} Tmp_2041 != 0;
    assume Tmp_2041 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    Tmp_2105 := FreeLists;
    havoc Tmp_2016;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2128;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_1168;
    call {:si_unique_call 2308} WPP_SF_qDd(Tmp_2128, 31, Tmp_2016, pdoExtension_17, vslice_dummy_var_1168, Tmp_2105);
    goto L19;

  L19:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2037;
    assume {:nonnull} Tmp_2037 != 0;
    assume Tmp_2037 > 0;
    fdoExtension_7 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2037)];
    Tmp_2119 := FreeLists;
    call {:si_unique_call 2309} Sbp2AddLog(pdoExtension_17, 1, -1016304048, Tmp_2119, fdoExtension_7);
    i_5 := 0;
    goto L33;

  L33:
    call {:si_unique_call 2310} Tmp_2018, i_5, Tmp_2089, Tmp_2099, Tmp_2104 := Sbp2CleanDeviceExtension#0_loop_L33(Tmp_2018, i_5, Tmp_2089, Tmp_2099, Tmp_2104, fdoExtension_7, DeviceObject_36);
    goto L33_last;

  L33_last:
    Tmp_2089 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2104;
    assume {:nonnull} Tmp_2104 != 0;
    assume Tmp_2104 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    Tmp_2018 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2099;
    assume {:nonnull} Tmp_2099 != 0;
    assume Tmp_2099 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    valid := 1;
    goto L34;

  L34:
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    call {:si_unique_call 2311} vslice_dummy_var_389 := KeCancelTimer(0);
    assume false;
    return;

  anon166_Then:
    goto L43;

  L43:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2312} FreeAddressRange#0(pdoExtension_17, DummyContext__DEVICE_EXTENSION(pdoExtension_17));
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} yogi_error != 1;
    goto L50;

  L50:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} FreeLists != 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2020;
    assume {:nonnull} Tmp_2020 != 0;
    assume Tmp_2020 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    Tmp_2059 := OnRemove;
    Tmp_2052 := FreeLists;
    havoc Tmp_2072;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2077;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_1169;
    call {:si_unique_call 2313} WPP_SF_qDdd(Tmp_2077, 32, Tmp_2072, pdoExtension_17, vslice_dummy_var_1169, Tmp_2052, Tmp_2059);
    goto L60;

  L60:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2314} FreeAddressRange#0(pdoExtension_17, TaskOrbStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2315} FreeAddressRange#0(pdoExtension_17, GlobalStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2316} FreeAddressRange#0(pdoExtension_17, ManagementOrbStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2317} sdv_678 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_678;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2318} vslice_dummy_var_392 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2319} sdv_IoCompleteRequest(0, 0);
    goto L84;

  L84:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2320} sdv_671 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_671;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2321} vslice_dummy_var_393 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2322} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2323} sdv_672 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_672;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2324} vslice_dummy_var_394 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2325} sdv_IoCompleteRequest(0, 0);
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    call {:si_unique_call 2326} vslice_dummy_var_390 := IoDeleteSymbolicLink(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2327} ExFreePoolWithTag(0, -330079661);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L116;

  L116:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2039;
    assume {:nonnull} Tmp_2039 != 0;
    assume Tmp_2039 > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_2032;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2124;
    call {:si_unique_call 2328} WPP_SF_q(Tmp_2124, 33, Tmp_2032, pdoExtension_17);
    goto L240;

  L240:
    Tmp_2005 := 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon185_Then:
    goto L240;

  anon225_Then:
    goto L240;

  anon184_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L240;

  anon173_Then:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2100;
    assume {:nonnull} Tmp_2100 != 0;
    assume Tmp_2100 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    havoc Tmp_2125;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2098;
    call {:si_unique_call 2329} WPP_SF_q(Tmp_2098, 34, Tmp_2125, pdoExtension_17);
    goto L132;

  L132:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2330} FreeAddressRange#0(pdoExtension_17, CommonBufferContext__DEVICE_EXTENSION(pdoExtension_17));
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    i_5 := 0;
    goto L147;

  L147:
    call {:si_unique_call 2331} i_5, context_2 := Sbp2CleanDeviceExtension#0_loop_L147(pdoExtension_17, i_5, context_2);
    goto L147_last;

  L147_last:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} 8 > i_5;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc context_2;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    call {:si_unique_call 2332} FreeAddressRange#0(pdoExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_2)));
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    i_5 := i_5 + 1;
    goto L154_dummy;

  L154_dummy:
    assume false;
    return;

  anon219_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon218_Then:
    goto L154;

  anon177_Then:
    assume {:partition} i_5 >= 8;
    call {:si_unique_call 2333} ExFreePoolWithTag(0, -499031469);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L145;

  L145:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 2334} sdv_675 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_675;
    goto L167;

  L167:
    call {:si_unique_call 2335} Tmp_2010, sdv_670, statusFifoElement, Tmp_2075, Tmp_2115 := Sbp2CleanDeviceExtension#0_loop_L167(Tmp_2010, pdoExtension_17, sdv_670, statusFifoElement, Tmp_2075, Tmp_2115);
    goto L167_last;

  L167_last:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} statusFifoElement != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2075;
    assume {:nonnull} Tmp_2075 != 0;
    assume Tmp_2075 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc Tmp_2115;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2010;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_1170;
    call {:si_unique_call 2336} WPP_SF_qqq(Tmp_2010, 35, Tmp_2115, pdoExtension_17, statusFifoElement, vslice_dummy_var_1170);
    goto L175;

  L175:
    call {:si_unique_call 2337} IoFreeMdl(0);
    call {:si_unique_call 2338} sdv_670 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_670;
    goto L175_dummy;

  L175_dummy:
    assume false;
    return;

  anon180_Then:
    goto L175;

  anon220_Then:
    goto L175;

  anon179_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;

  anon178_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 2339} ExFreePoolWithTag(0, -430742957);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L160;

  L160:
    call {:si_unique_call 2340} sdv_668 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_668;
    goto L191;

  L191:
    call {:si_unique_call 2341} sdv_669, Tmp_2109, packet_13 := Sbp2CleanDeviceExtension#0_loop_L191(sdv_669, Tmp_2109, packet_13);
    goto L191_last;

  L191_last:
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} packet_13 != 0;
    call {:si_unique_call 2342} sdv_ExFreePool(0);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_2109;
    assume {:nonnull} Tmp_2109 != 0;
    assume Tmp_2109 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    call {:si_unique_call 2343} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 2344} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 2345} sdv_669 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_669;
    goto L199_dummy;

  L199_dummy:
    assume false;
    return;

  anon221_Then:
    goto L199;

  anon181_Then:
    assume {:partition} packet_13 == 0;
    call {:si_unique_call 2346} Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    call {:si_unique_call 2347} sdv_KeAcquireSpinLock(0, Tmp_2067);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    havoc cIrql_9;
    call {:si_unique_call 2348} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 2349} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    call {:si_unique_call 2350} IoFreeMdl(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2060;
    assume {:nonnull} Tmp_2060 != 0;
    assume Tmp_2060 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2095;
    assume {:nonnull} Tmp_2095 != 0;
    assume Tmp_2095 > 0;
    call {:si_unique_call 2351} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2027;
    assume {:nonnull} Tmp_2027 != 0;
    assume Tmp_2027 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2048;
    assume {:nonnull} Tmp_2048 != 0;
    assume Tmp_2048 > 0;
    goto L222;

  L222:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2058;
    assume {:nonnull} Tmp_2058 != 0;
    assume Tmp_2058 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2112;
    assume {:nonnull} Tmp_2112 != 0;
    assume Tmp_2112 > 0;
    call {:si_unique_call 2352} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2046;
    assume {:nonnull} Tmp_2046 != 0;
    assume Tmp_2046 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2065;
    assume {:nonnull} Tmp_2065 != 0;
    assume Tmp_2065 > 0;
    goto L228;

  L228:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2107;
    assume {:nonnull} Tmp_2107 != 0;
    assume Tmp_2107 > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2031;
    assume {:nonnull} Tmp_2031 != 0;
    assume Tmp_2031 > 0;
    call {:si_unique_call 2353} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2012;
    assume {:nonnull} Tmp_2012 != 0;
    assume Tmp_2012 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2101;
    assume {:nonnull} Tmp_2101 != 0;
    assume Tmp_2101 > 0;
    goto L54;

  L54:
    Tmp_2005 := 1;
    goto L1;

  anon224_Then:
    goto L54;

  anon223_Then:
    goto L228;

  anon222_Then:
    goto L222;

  anon183_Then:
    goto L54;

  anon182_Then:
    goto L216;

  anon176_Then:
    goto L160;

  anon217_Then:
    goto L145;

  anon216_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon175_Then:
    goto L132;

  anon215_Then:
    goto L132;

  anon174_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  anon172_Then:
    goto L116;

  anon214_Then:
    assume {:partition} irp_6 == 0;
    goto L108;

  anon213_Then:
    assume {:partition} irp_6 == 0;
    goto L96;

  anon212_Then:
    assume {:partition} irp_6 == 0;
    goto L84;

  anon211_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon210_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon209_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon170_Then:
    goto L54;

  anon171_Then:
    goto L60;

  anon208_Then:
    goto L60;

  anon169_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon168_Then:
    assume {:partition} FreeLists == 0;
    goto L54;

  anon207_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon167_Then:
    goto L50;

  anon165_Then:
    assume {:partition} valid == 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc vslice_dummy_var_1171;
    call {:si_unique_call 2354} Sbp2AddLog(pdoExtension_17, 1, -1016304078, vslice_dummy_var_1171, 0);
    Tmp_2005 := 0;
    goto L1;

  anon205_Then:
    i_5 := i_5 + 1;
    goto anon205_Then_dummy;

  anon205_Then_dummy:
    assume false;
    return;

  anon204_Then:
    goto L34;

  anon164_Then:
    goto L19;

  anon203_Then:
    goto L19;

  anon163_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L19;

  anon202_Then:
    assume {:nonnull} DeviceObject_36 != 0;
    assume DeviceObject_36 > 0;
    fdoExtension_7 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_36)];
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    Tmp_2005 := 0;
    goto L1;

  anon226_Then:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    call {:si_unique_call 2355} status_63 := Sbp2EnableBusResetNotification#0(fdoExtension_7, 0);
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} yogi_error != 1;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} status_63 < 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2070;
    assume {:nonnull} Tmp_2070 != 0;
    assume Tmp_2070 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_2110;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2120;
    call {:si_unique_call 2356} WPP_SF_qD(Tmp_2120, 36, Tmp_2110, fdoExtension_7, status_63);
    goto L253;

  L253:
    call {:si_unique_call 2357} Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    call {:si_unique_call 2358} sdv_KeAcquireSpinLock(0, Tmp_2067);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    havoc cIrql_9;
    goto L273;

  L273:
    call {:si_unique_call 2359} Tmp_2006, Tmp_2007, Tmp_2009, Tmp_2013, pdoExtension_17, Tmp_2019, Tmp_2021, Tmp_2022, Tmp_2023, Tmp_2024, Tmp_2025, Tmp_2026, Tmp_2028, Tmp_2029, Tmp_2030, Tmp_2033, Tmp_2034, Tmp_2035, Tmp_2036, Tmp_2038, Tmp_2040, Tmp_2042, Tmp_2043, Tmp_2044, Tmp_2047, Tmp_2050, Tmp_2051, Tmp_2053, Tmp_2054, Tmp_2055, Tmp_2056, Tmp_2061, Tmp_2063, Tmp_2064, Tmp_2066, Tmp_2067, Tmp_2068, i_5, Tmp_2071, Tmp_2073, Tmp_2074, Tmp_2079, Tmp_2081, Tmp_2083, Tmp_2087, Tmp_2088, Tmp_2090, Tmp_2091, Tmp_2093, Tmp_2094, Tmp_2096, Tmp_2102, Tmp_2103, Tmp_2108, Tmp_2111, Tmp_2113, Tmp_2114, Tmp_2116, cIrql_9, Tmp_2117, Tmp_2121, Tmp_2122, Tmp_2127, Tmp_2129, DeviceObject_36 := Sbp2CleanDeviceExtension#0_loop_L273(Tmp_2006, Tmp_2007, Tmp_2009, Tmp_2013, pdoExtension_17, Tmp_2019, Tmp_2021, Tmp_2022, Tmp_2023, Tmp_2024, Tmp_2025, Tmp_2026, Tmp_2028, Tmp_2029, Tmp_2030, Tmp_2033, Tmp_2034, Tmp_2035, Tmp_2036, Tmp_2038, Tmp_2040, Tmp_2042, Tmp_2043, Tmp_2044, Tmp_2047, Tmp_2050, Tmp_2051, Tmp_2053, Tmp_2054, Tmp_2055, Tmp_2056, Tmp_2061, Tmp_2063, Tmp_2064, Tmp_2066, Tmp_2067, Tmp_2068, i_5, Tmp_2071, Tmp_2073, Tmp_2074, Tmp_2079, Tmp_2081, Tmp_2083, Tmp_2087, Tmp_2088, Tmp_2090, Tmp_2091, Tmp_2093, Tmp_2094, Tmp_2096, Tmp_2102, Tmp_2103, fdoExtension_7, Tmp_2108, Tmp_2111, Tmp_2113, Tmp_2114, Tmp_2116, cIrql_9, Tmp_2117, Tmp_2121, Tmp_2122, Tmp_2127, Tmp_2129, DeviceObject_36);
    goto L273_last;

  L273_last:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc i_5;
    Tmp_2053 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2022;
    assume {:nonnull} Tmp_2022 != 0;
    assume Tmp_2022 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    Tmp_2006 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2038;
    assume {:nonnull} Tmp_2038 != 0;
    assume Tmp_2038 > 0;
    havoc Tmp_2029;
    assume {:nonnull} Tmp_2029 != 0;
    assume Tmp_2029 > 0;
    pdoExtension_17 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2029)];
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    Tmp_2088 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2071;
    assume {:nonnull} Tmp_2071 != 0;
    assume Tmp_2071 > 0;
    havoc DeviceObject_36;
    Tmp_2079 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2117;
    assume {:nonnull} Tmp_2117 != 0;
    assume Tmp_2117 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    Tmp_2068 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2102;
    assume {:nonnull} Tmp_2102 != 0;
    assume Tmp_2102 > 0;
    call {:si_unique_call 2360} sdv_ExFreePool(0);
    Tmp_2063 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2081;
    assume {:nonnull} Tmp_2081 != 0;
    assume Tmp_2081 > 0;
    Tmp_2007 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2127;
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    goto L283;

  L283:
    Tmp_2087 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2044;
    assume {:nonnull} Tmp_2044 != 0;
    assume Tmp_2044 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    Tmp_2035 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2129;
    assume {:nonnull} Tmp_2129 != 0;
    assume Tmp_2129 > 0;
    call {:si_unique_call 2361} sdv_ExFreePool(0);
    Tmp_2114 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2083;
    assume {:nonnull} Tmp_2083 != 0;
    assume Tmp_2083 > 0;
    Tmp_2093 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2122;
    assume {:nonnull} Tmp_2122 != 0;
    assume Tmp_2122 > 0;
    goto L290;

  L290:
    Tmp_2030 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2040;
    assume {:nonnull} Tmp_2040 != 0;
    assume Tmp_2040 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    Tmp_2103 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2054;
    assume {:nonnull} Tmp_2054 != 0;
    assume Tmp_2054 > 0;
    call {:si_unique_call 2362} sdv_ExFreePool(0);
    Tmp_2066 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2025;
    assume {:nonnull} Tmp_2025 != 0;
    assume Tmp_2025 > 0;
    Tmp_2090 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2013;
    assume {:nonnull} Tmp_2013 != 0;
    assume Tmp_2013 > 0;
    goto L297;

  L297:
    Tmp_2073 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2028;
    assume {:nonnull} Tmp_2028 != 0;
    assume Tmp_2028 > 0;
    call {:si_unique_call 2363} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 2364} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 2365} IoDeleteDevice(0);
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2047;
    assume {:nonnull} Tmp_2047 != 0;
    assume Tmp_2047 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_2056;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2042;
    call {:si_unique_call 2366} WPP_SF_q(Tmp_2042, 37, Tmp_2056, pdoExtension_17);
    goto L317;

  L317:
    call {:si_unique_call 2367} Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    call {:si_unique_call 2368} sdv_KeAcquireSpinLock(0, Tmp_2067);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    havoc cIrql_9;
    goto L328;

  L328:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto L328_dummy;

  L328_dummy:
    assume false;
    return;

  anon192_Then:
    goto L317;

  anon234_Then:
    goto L317;

  anon191_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon233_Then:
    goto L297;

  anon232_Then:
    goto L290;

  anon231_Then:
    goto L283;

  anon230_Then:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    Tmp_2014 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2062;
    assume {:nonnull} Tmp_2062 != 0;
    assume Tmp_2062 > 0;
    havoc DeviceObject_36;
    call {:si_unique_call 2369} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume false;
    return;

  anon229_Then:
    goto L277;

  L277:
    Tmp_2051 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2024;
    assume {:nonnull} Tmp_2024 != 0;
    assume Tmp_2024 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    Tmp_2074 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2050;
    assume {:nonnull} Tmp_2050 != 0;
    assume Tmp_2050 > 0;
    call {:si_unique_call 2370} sdv_ExFreePool(0);
    Tmp_2019 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2026;
    assume {:nonnull} Tmp_2026 != 0;
    assume Tmp_2026 > 0;
    Tmp_2061 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2108;
    assume {:nonnull} Tmp_2108 != 0;
    assume Tmp_2108 > 0;
    goto L423;

  L423:
    Tmp_2121 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2055;
    assume {:nonnull} Tmp_2055 != 0;
    assume Tmp_2055 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    Tmp_2036 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2111;
    assume {:nonnull} Tmp_2111 != 0;
    assume Tmp_2111 > 0;
    call {:si_unique_call 2371} sdv_ExFreePool(0);
    Tmp_2034 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2064;
    assume {:nonnull} Tmp_2064 != 0;
    assume Tmp_2064 > 0;
    Tmp_2091 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2043;
    assume {:nonnull} Tmp_2043 != 0;
    assume Tmp_2043 > 0;
    goto L430;

  L430:
    Tmp_2096 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2033;
    assume {:nonnull} Tmp_2033 != 0;
    assume Tmp_2033 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    Tmp_2023 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2094;
    assume {:nonnull} Tmp_2094 != 0;
    assume Tmp_2094 > 0;
    call {:si_unique_call 2372} sdv_ExFreePool(0);
    Tmp_2113 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2021;
    assume {:nonnull} Tmp_2021 != 0;
    assume Tmp_2021 > 0;
    Tmp_2116 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2009;
    assume {:nonnull} Tmp_2009 != 0;
    assume Tmp_2009 > 0;
    goto L328;

  anon241_Then:
    goto L328;

  anon240_Then:
    goto L430;

  anon239_Then:
    goto L423;

  anon189_Then:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc vslice_dummy_var_1172;
    call {:si_unique_call 2373} DeAllocateIrpAndIrb(fdoExtension_7, vslice_dummy_var_1172);
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto L443;

  L443:
    call {:si_unique_call 2374} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto L54;

  anon190_Then:
    goto L443;

  anon188_Then:
    goto L253;

  anon243_Then:
    goto L253;

  anon187_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L253;

  anon186_Then:
    assume {:partition} 0 <= status_63;
    goto L253;

  anon228_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon227_Then:
    goto L253;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#0(actual_DeviceObject_36: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2005: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_36: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2005: int)
{
  var {:scalar} Tmp_2006: int;
  var {:scalar} Tmp_2007: int;
  var {:pointer} Tmp_2009: int;
  var {:scalar} Tmp_2010: int;
  var {:scalar} Tmp_2011: int;
  var {:pointer} Tmp_2012: int;
  var {:pointer} Tmp_2013: int;
  var {:scalar} Tmp_2014: int;
  var {:pointer} Tmp_2016: int;
  var {:pointer} pdoExtension_17: int;
  var {:scalar} Tmp_2018: int;
  var {:scalar} Tmp_2019: int;
  var {:pointer} Tmp_2020: int;
  var {:pointer} Tmp_2021: int;
  var {:pointer} Tmp_2022: int;
  var {:scalar} Tmp_2023: int;
  var {:pointer} Tmp_2024: int;
  var {:pointer} Tmp_2025: int;
  var {:pointer} Tmp_2026: int;
  var {:pointer} Tmp_2027: int;
  var {:pointer} Tmp_2028: int;
  var {:pointer} sdv_668: int;
  var {:pointer} Tmp_2029: int;
  var {:scalar} Tmp_2030: int;
  var {:pointer} Tmp_2031: int;
  var {:pointer} Tmp_2032: int;
  var {:pointer} Tmp_2033: int;
  var {:scalar} Tmp_2034: int;
  var {:scalar} Tmp_2035: int;
  var {:pointer} sdv_669: int;
  var {:pointer} sdv_670: int;
  var {:scalar} Tmp_2036: int;
  var {:pointer} Tmp_2037: int;
  var {:pointer} Tmp_2038: int;
  var {:pointer} Tmp_2039: int;
  var {:pointer} sdv_671: int;
  var {:pointer} Tmp_2040: int;
  var {:pointer} Tmp_2041: int;
  var {:pointer} sdv_672: int;
  var {:scalar} Tmp_2042: int;
  var {:pointer} Tmp_2043: int;
  var {:pointer} Tmp_2044: int;
  var {:pointer} irp_6: int;
  var {:pointer} Tmp_2045: int;
  var {:pointer} Tmp_2046: int;
  var {:pointer} Tmp_2047: int;
  var {:pointer} Tmp_2048: int;
  var {:scalar} sdv_674: int;
  var {:pointer} Tmp_2049: int;
  var {:pointer} Tmp_2050: int;
  var {:scalar} Tmp_2051: int;
  var {:pointer} statusFifoElement: int;
  var {:scalar} Tmp_2052: int;
  var {:pointer} sdv_675: int;
  var {:scalar} Tmp_2053: int;
  var {:pointer} Tmp_2054: int;
  var {:pointer} Tmp_2055: int;
  var {:pointer} Tmp_2056: int;
  var {:scalar} valid: int;
  var {:pointer} Tmp_2058: int;
  var {:scalar} Tmp_2059: int;
  var {:scalar} status_62: int;
  var {:pointer} Tmp_2060: int;
  var {:scalar} Tmp_2061: int;
  var {:pointer} Tmp_2062: int;
  var {:scalar} Tmp_2063: int;
  var {:pointer} Tmp_2064: int;
  var {:pointer} Tmp_2065: int;
  var {:scalar} Tmp_2066: int;
  var {:pointer} Tmp_2067: int;
  var {:scalar} Tmp_2068: int;
  var {:scalar} i_5: int;
  var {:pointer} Tmp_2069: int;
  var {:pointer} Tmp_2070: int;
  var {:pointer} Tmp_2071: int;
  var {:pointer} Tmp_2072: int;
  var {:scalar} Tmp_2073: int;
  var {:scalar} Tmp_2074: int;
  var {:pointer} Tmp_2075: int;
  var {:scalar} Tmp_2076: int;
  var {:scalar} Tmp_2077: int;
  var {:scalar} Tmp_2079: int;
  var {:pointer} Tmp_2081: int;
  var {:pointer} Tmp_2082: int;
  var {:pointer} Tmp_2083: int;
  var {:scalar} Tmp_2084: int;
  var {:scalar} Tmp_2087: int;
  var {:scalar} Tmp_2088: int;
  var {:pointer} context_2: int;
  var {:scalar} Tmp_2089: int;
  var {:scalar} Tmp_2090: int;
  var {:scalar} Tmp_2091: int;
  var {:scalar} Tmp_2093: int;
  var {:pointer} Tmp_2094: int;
  var {:pointer} Tmp_2095: int;
  var {:scalar} Tmp_2096: int;
  var {:pointer} Tmp_2097: int;
  var {:scalar} Tmp_2098: int;
  var {:pointer} Tmp_2099: int;
  var {:pointer} Tmp_2100: int;
  var {:pointer} Tmp_2101: int;
  var {:pointer} Tmp_2102: int;
  var {:scalar} Tmp_2103: int;
  var {:pointer} sdv_678: int;
  var {:scalar} sdv_679: int;
  var {:pointer} Tmp_2104: int;
  var {:scalar} Tmp_2105: int;
  var {:pointer} fdoExtension_7: int;
  var {:pointer} Tmp_2106: int;
  var {:pointer} Tmp_2107: int;
  var {:pointer} Tmp_2108: int;
  var {:pointer} Tmp_2109: int;
  var {:pointer} Tmp_2110: int;
  var {:pointer} Tmp_2111: int;
  var {:pointer} Tmp_2112: int;
  var {:scalar} Tmp_2113: int;
  var {:scalar} Tmp_2114: int;
  var {:pointer} Tmp_2115: int;
  var {:scalar} Tmp_2116: int;
  var {:scalar} cIrql_9: int;
  var {:pointer} Tmp_2117: int;
  var {:scalar} Tmp_2119: int;
  var {:scalar} status_63: int;
  var {:pointer} packet_13: int;
  var {:scalar} Tmp_2120: int;
  var {:scalar} Tmp_2121: int;
  var {:pointer} Tmp_2122: int;
  var {:scalar} Tmp_2123: int;
  var {:scalar} Tmp_2124: int;
  var {:pointer} Tmp_2125: int;
  var {:pointer} Tmp_2126: int;
  var {:pointer} Tmp_2127: int;
  var {:scalar} Tmp_2128: int;
  var {:pointer} Tmp_2129: int;
  var {:pointer} DeviceObject_36: int;
  var {:scalar} FreeLists: int;
  var {:scalar} OnRemove: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_1173: int;
  var vslice_dummy_var_1174: int;
  var vslice_dummy_var_1175: int;
  var vslice_dummy_var_1176: int;
  var vslice_dummy_var_1177: int;

  anon0:
    DeviceObject_36 := actual_DeviceObject_36;
    FreeLists := actual_FreeLists;
    OnRemove := actual_OnRemove;
    call {:si_unique_call 2375} Tmp_2009 := __HAVOC_malloc(2680);
    call {:si_unique_call 2376} Tmp_2013 := __HAVOC_malloc(2680);
    call {:si_unique_call 2377} Tmp_2020 := __HAVOC_malloc(4);
    call {:si_unique_call 2378} Tmp_2021 := __HAVOC_malloc(2680);
    call {:si_unique_call 2379} Tmp_2022 := __HAVOC_malloc(2680);
    call {:si_unique_call 2380} Tmp_2024 := __HAVOC_malloc(2680);
    call {:si_unique_call 2381} Tmp_2025 := __HAVOC_malloc(2680);
    call {:si_unique_call 2382} Tmp_2026 := __HAVOC_malloc(2680);
    call {:si_unique_call 2383} Tmp_2028 := __HAVOC_malloc(2680);
    call {:si_unique_call 2384} Tmp_2033 := __HAVOC_malloc(2680);
    call {:si_unique_call 2385} Tmp_2038 := __HAVOC_malloc(2680);
    call {:si_unique_call 2386} Tmp_2039 := __HAVOC_malloc(4);
    call {:si_unique_call 2387} Tmp_2040 := __HAVOC_malloc(2680);
    call {:si_unique_call 2388} Tmp_2041 := __HAVOC_malloc(4);
    call {:si_unique_call 2389} Tmp_2043 := __HAVOC_malloc(2680);
    call {:si_unique_call 2390} Tmp_2044 := __HAVOC_malloc(2680);
    call {:si_unique_call 2391} Tmp_2047 := __HAVOC_malloc(4);
    call {:si_unique_call 2392} Tmp_2050 := __HAVOC_malloc(2680);
    call {:si_unique_call 2393} Tmp_2054 := __HAVOC_malloc(2680);
    call {:si_unique_call 2394} Tmp_2055 := __HAVOC_malloc(2680);
    call {:si_unique_call 2395} Tmp_2062 := __HAVOC_malloc(2680);
    call {:si_unique_call 2396} Tmp_2064 := __HAVOC_malloc(2680);
    call {:si_unique_call 2397} Tmp_2069 := __HAVOC_malloc(4);
    call {:si_unique_call 2398} Tmp_2070 := __HAVOC_malloc(4);
    call {:si_unique_call 2399} Tmp_2071 := __HAVOC_malloc(2680);
    call {:si_unique_call 2400} Tmp_2075 := __HAVOC_malloc(4);
    call {:si_unique_call 2401} Tmp_2081 := __HAVOC_malloc(2680);
    call {:si_unique_call 2402} Tmp_2083 := __HAVOC_malloc(2680);
    call {:si_unique_call 2403} Tmp_2094 := __HAVOC_malloc(2680);
    call {:si_unique_call 2404} Tmp_2097 := __HAVOC_malloc(4);
    call {:si_unique_call 2405} Tmp_2099 := __HAVOC_malloc(2680);
    call {:si_unique_call 2406} Tmp_2100 := __HAVOC_malloc(4);
    call {:si_unique_call 2407} Tmp_2102 := __HAVOC_malloc(2680);
    call {:si_unique_call 2408} Tmp_2104 := __HAVOC_malloc(2680);
    call {:si_unique_call 2409} Tmp_2106 := __HAVOC_malloc(2680);
    call {:si_unique_call 2410} Tmp_2108 := __HAVOC_malloc(2680);
    call {:si_unique_call 2411} Tmp_2111 := __HAVOC_malloc(2680);
    call {:si_unique_call 2412} Tmp_2117 := __HAVOC_malloc(2680);
    call {:si_unique_call 2413} Tmp_2122 := __HAVOC_malloc(2680);
    call {:si_unique_call 2414} Tmp_2126 := __HAVOC_malloc(4);
    call {:si_unique_call 2415} Tmp_2127 := __HAVOC_malloc(2680);
    call {:si_unique_call 2416} Tmp_2129 := __HAVOC_malloc(2680);
    valid := 0;
    assume {:nonnull} DeviceObject_36 != 0;
    assume DeviceObject_36 > 0;
    pdoExtension_17 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_36)];
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2041;
    assume {:nonnull} Tmp_2041 != 0;
    assume Tmp_2041 > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    Tmp_2105 := FreeLists;
    havoc Tmp_2016;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2128;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_1173;
    call {:si_unique_call 2417} WPP_SF_qDd(Tmp_2128, 31, Tmp_2016, pdoExtension_17, vslice_dummy_var_1173, Tmp_2105);
    goto L19;

  L19:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2037;
    assume {:nonnull} Tmp_2037 != 0;
    assume Tmp_2037 > 0;
    fdoExtension_7 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2037)];
    Tmp_2119 := FreeLists;
    call {:si_unique_call 2418} Sbp2AddLog(pdoExtension_17, 1, -1016304048, Tmp_2119, fdoExtension_7);
    i_5 := 0;
    goto L33;

  L33:
    call {:si_unique_call 2419} Tmp_2018, i_5, Tmp_2089, Tmp_2099, Tmp_2104 := Sbp2CleanDeviceExtension#1_loop_L33(Tmp_2018, i_5, Tmp_2089, Tmp_2099, Tmp_2104, fdoExtension_7, DeviceObject_36);
    goto L33_last;

  L33_last:
    Tmp_2089 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2104;
    assume {:nonnull} Tmp_2104 != 0;
    assume Tmp_2104 > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    Tmp_2018 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2099;
    assume {:nonnull} Tmp_2099 != 0;
    assume Tmp_2099 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    valid := 1;
    goto L34;

  L34:
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} valid != 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    call {:si_unique_call 2420} vslice_dummy_var_397 := KeCancelTimer(0);
    call {:si_unique_call 2421} CleanupOrbList#0(pdoExtension_17, -1073741248);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} yogi_error != 1;
    goto L43;

  L43:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2422} FreeAddressRange#1(pdoExtension_17, DummyContext__DEVICE_EXTENSION(pdoExtension_17));
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} yogi_error != 1;
    goto L50;

  L50:
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} FreeLists != 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2020;
    assume {:nonnull} Tmp_2020 != 0;
    assume Tmp_2020 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    Tmp_2059 := OnRemove;
    Tmp_2052 := FreeLists;
    havoc Tmp_2072;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2077;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_1174;
    call {:si_unique_call 2423} WPP_SF_qDdd(Tmp_2077, 32, Tmp_2072, pdoExtension_17, vslice_dummy_var_1174, Tmp_2052, Tmp_2059);
    goto L60;

  L60:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2424} FreeAddressRange#1(pdoExtension_17, TaskOrbStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2425} FreeAddressRange#1(pdoExtension_17, GlobalStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2426} FreeAddressRange#1(pdoExtension_17, ManagementOrbStatusContext__DEVICE_EXTENSION(pdoExtension_17));
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2427} sdv_678 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_678;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2428} vslice_dummy_var_400 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2429} sdv_IoCompleteRequest(0, 0);
    goto L84;

  L84:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2430} sdv_671 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_671;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2431} vslice_dummy_var_401 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2432} sdv_IoCompleteRequest(0, 0);
    goto L96;

  L96:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2433} sdv_672 := _InlineInterlockedExchangePointer(PendingPowerIrp__DEVICE_EXTENSION(pdoExtension_17), 0);
    irp_6 := sdv_672;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} irp_6 != 0;
    assume {:nonnull} irp_6 != 0;
    assume irp_6 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2434} vslice_dummy_var_402 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_17), irp_6);
    call {:si_unique_call 2435} sdv_IoCompleteRequest(0, 0);
    goto L108;

  L108:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    call {:si_unique_call 2436} vslice_dummy_var_398 := IoDeleteSymbolicLink(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2437} ExFreePoolWithTag(0, -330079661);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L116;

  L116:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2039;
    assume {:nonnull} Tmp_2039 != 0;
    assume Tmp_2039 > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    havoc Tmp_2032;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2124;
    call {:si_unique_call 2438} WPP_SF_q(Tmp_2124, 33, Tmp_2032, pdoExtension_17);
    goto L240;

  L240:
    Tmp_2005 := 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon185_Then:
    goto L240;

  anon225_Then:
    goto L240;

  anon184_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L240;

  anon173_Then:
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2100;
    assume {:nonnull} Tmp_2100 != 0;
    assume Tmp_2100 > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    havoc Tmp_2125;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2098;
    call {:si_unique_call 2439} WPP_SF_q(Tmp_2098, 34, Tmp_2125, pdoExtension_17);
    goto L132;

  L132:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2440} FreeAddressRange#1(pdoExtension_17, CommonBufferContext__DEVICE_EXTENSION(pdoExtension_17));
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    i_5 := 0;
    goto L147;

  L147:
    call {:si_unique_call 2441} i_5, context_2 := Sbp2CleanDeviceExtension#1_loop_L147(pdoExtension_17, i_5, context_2);
    goto L147_last;

  L147_last:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} 8 > i_5;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc context_2;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    assume {:nonnull} context_2 != 0;
    assume context_2 > 0;
    call {:si_unique_call 2442} FreeAddressRange#1(pdoExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(context_2)));
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    i_5 := i_5 + 1;
    goto L154_dummy;

  L154_dummy:
    assume false;
    return;

  anon219_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon218_Then:
    goto L154;

  anon177_Then:
    assume {:partition} i_5 >= 8;
    call {:si_unique_call 2443} ExFreePoolWithTag(0, -499031469);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L145;

  L145:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    call {:si_unique_call 2444} sdv_675 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_675;
    goto L167;

  L167:
    call {:si_unique_call 2445} Tmp_2010, sdv_670, statusFifoElement, Tmp_2075, Tmp_2115 := Sbp2CleanDeviceExtension#1_loop_L167(Tmp_2010, pdoExtension_17, sdv_670, statusFifoElement, Tmp_2075, Tmp_2115);
    goto L167_last;

  L167_last:
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:partition} statusFifoElement != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2075;
    assume {:nonnull} Tmp_2075 != 0;
    assume Tmp_2075 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc Tmp_2115;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2010;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc vslice_dummy_var_1175;
    call {:si_unique_call 2446} WPP_SF_qqq(Tmp_2010, 35, Tmp_2115, pdoExtension_17, statusFifoElement, vslice_dummy_var_1175);
    goto L175;

  L175:
    call {:si_unique_call 2447} IoFreeMdl(0);
    call {:si_unique_call 2448} sdv_670 := sdv_ExInterlockedPopEntrySList(0, 0);
    statusFifoElement := sdv_670;
    goto L175_dummy;

  L175_dummy:
    assume false;
    return;

  anon180_Then:
    goto L175;

  anon220_Then:
    goto L175;

  anon179_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;

  anon178_Then:
    assume {:partition} statusFifoElement == 0;
    call {:si_unique_call 2449} ExFreePoolWithTag(0, -430742957);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L160;

  L160:
    call {:si_unique_call 2450} sdv_668 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_668;
    goto L191;

  L191:
    call {:si_unique_call 2451} sdv_669, Tmp_2109, packet_13 := Sbp2CleanDeviceExtension#1_loop_L191(sdv_669, Tmp_2109, packet_13);
    goto L191_last;

  L191_last:
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} packet_13 != 0;
    call {:si_unique_call 2452} sdv_ExFreePool(0);
    assume {:nonnull} packet_13 != 0;
    assume packet_13 > 0;
    havoc Tmp_2109;
    assume {:nonnull} Tmp_2109 != 0;
    assume Tmp_2109 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    call {:si_unique_call 2453} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 2454} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 2455} sdv_669 := sdv_ExInterlockedPopEntrySList(0, 0);
    packet_13 := sdv_669;
    goto L199_dummy;

  L199_dummy:
    assume false;
    return;

  anon221_Then:
    goto L199;

  anon181_Then:
    assume {:partition} packet_13 == 0;
    call {:si_unique_call 2456} Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    call {:si_unique_call 2457} sdv_KeAcquireSpinLock(0, Tmp_2067);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    havoc cIrql_9;
    call {:si_unique_call 2458} ExDeleteNPagedLookasideList(0);
    call {:si_unique_call 2459} sdv_KeReleaseSpinLock(0, cIrql_9);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    call {:si_unique_call 2460} IoFreeMdl(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto L216;

  L216:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2060;
    assume {:nonnull} Tmp_2060 != 0;
    assume Tmp_2060 > 0;
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2095;
    assume {:nonnull} Tmp_2095 != 0;
    assume Tmp_2095 > 0;
    call {:si_unique_call 2461} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2027;
    assume {:nonnull} Tmp_2027 != 0;
    assume Tmp_2027 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2048;
    assume {:nonnull} Tmp_2048 != 0;
    assume Tmp_2048 > 0;
    goto L222;

  L222:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2058;
    assume {:nonnull} Tmp_2058 != 0;
    assume Tmp_2058 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2112;
    assume {:nonnull} Tmp_2112 != 0;
    assume Tmp_2112 > 0;
    call {:si_unique_call 2462} sdv_ExFreePool(0);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2046;
    assume {:nonnull} Tmp_2046 != 0;
    assume Tmp_2046 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2065;
    assume {:nonnull} Tmp_2065 != 0;
    assume Tmp_2065 > 0;
    goto L228;

  L228:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2107;
    assume {:nonnull} Tmp_2107 != 0;
    assume Tmp_2107 > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2031;
    assume {:nonnull} Tmp_2031 != 0;
    assume Tmp_2031 > 0;
    call {:si_unique_call 2463} ExFreePoolWithTag(0, -498638253);
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2012;
    assume {:nonnull} Tmp_2012 != 0;
    assume Tmp_2012 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    havoc Tmp_2101;
    assume {:nonnull} Tmp_2101 != 0;
    assume Tmp_2101 > 0;
    goto L54;

  L54:
    Tmp_2005 := 1;
    goto L1;

  anon224_Then:
    goto L54;

  anon223_Then:
    goto L228;

  anon222_Then:
    goto L222;

  anon183_Then:
    goto L54;

  anon182_Then:
    goto L216;

  anon176_Then:
    goto L160;

  anon217_Then:
    goto L145;

  anon216_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon175_Then:
    goto L132;

  anon215_Then:
    goto L132;

  anon174_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  anon172_Then:
    goto L116;

  anon214_Then:
    assume {:partition} irp_6 == 0;
    goto L108;

  anon213_Then:
    assume {:partition} irp_6 == 0;
    goto L96;

  anon212_Then:
    assume {:partition} irp_6 == 0;
    goto L84;

  anon211_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon210_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon209_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon170_Then:
    goto L54;

  anon171_Then:
    goto L60;

  anon208_Then:
    goto L60;

  anon169_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon168_Then:
    assume {:partition} FreeLists == 0;
    goto L54;

  anon207_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon167_Then:
    goto L50;

  anon206_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon166_Then:
    goto L43;

  anon165_Then:
    assume {:partition} valid == 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc vslice_dummy_var_1176;
    call {:si_unique_call 2464} Sbp2AddLog(pdoExtension_17, 1, -1016304078, vslice_dummy_var_1176, 0);
    Tmp_2005 := 0;
    goto L1;

  anon205_Then:
    i_5 := i_5 + 1;
    goto anon205_Then_dummy;

  anon205_Then_dummy:
    assume false;
    return;

  anon204_Then:
    goto L34;

  anon164_Then:
    goto L19;

  anon203_Then:
    goto L19;

  anon163_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L19;

  anon202_Then:
    assume {:nonnull} DeviceObject_36 != 0;
    assume DeviceObject_36 > 0;
    fdoExtension_7 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_36)];
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    Tmp_2005 := 0;
    goto L1;

  anon226_Then:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    call {:si_unique_call 2465} status_63 := Sbp2EnableBusResetNotification#1(fdoExtension_7, 0);
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} yogi_error != 1;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} status_63 < 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2070;
    assume {:nonnull} Tmp_2070 != 0;
    assume Tmp_2070 > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_2110;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2120;
    call {:si_unique_call 2466} WPP_SF_qD(Tmp_2120, 36, Tmp_2110, fdoExtension_7, status_63);
    goto L253;

  L253:
    call {:si_unique_call 2467} Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    call {:si_unique_call 2468} sdv_KeAcquireSpinLock(0, Tmp_2067);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    havoc cIrql_9;
    goto L273;

  L273:
    call {:si_unique_call 2469} Tmp_2006, Tmp_2007, Tmp_2009, Tmp_2011, Tmp_2013, Tmp_2014, pdoExtension_17, Tmp_2019, Tmp_2021, Tmp_2022, Tmp_2023, Tmp_2024, Tmp_2025, Tmp_2026, Tmp_2028, Tmp_2029, Tmp_2030, Tmp_2033, Tmp_2034, Tmp_2035, Tmp_2036, Tmp_2038, Tmp_2040, Tmp_2042, Tmp_2043, Tmp_2044, Tmp_2045, Tmp_2047, sdv_674, Tmp_2049, Tmp_2050, Tmp_2051, Tmp_2053, Tmp_2054, Tmp_2055, Tmp_2056, status_62, Tmp_2061, Tmp_2062, Tmp_2063, Tmp_2064, Tmp_2066, Tmp_2067, Tmp_2068, i_5, Tmp_2069, Tmp_2071, Tmp_2073, Tmp_2074, Tmp_2076, Tmp_2079, Tmp_2081, Tmp_2082, Tmp_2083, Tmp_2084, Tmp_2087, Tmp_2088, Tmp_2090, Tmp_2091, Tmp_2093, Tmp_2094, Tmp_2096, Tmp_2097, Tmp_2102, Tmp_2103, sdv_679, Tmp_2106, Tmp_2108, Tmp_2111, Tmp_2113, Tmp_2114, Tmp_2116, cIrql_9, Tmp_2117, Tmp_2121, Tmp_2122, Tmp_2123, Tmp_2126, Tmp_2127, Tmp_2129, DeviceObject_36, vslice_dummy_var_399, vslice_dummy_var_403, vslice_dummy_var_404 := Sbp2CleanDeviceExtension#1_loop_L273(Tmp_2006, Tmp_2007, Tmp_2009, Tmp_2011, Tmp_2013, Tmp_2014, pdoExtension_17, Tmp_2019, Tmp_2021, Tmp_2022, Tmp_2023, Tmp_2024, Tmp_2025, Tmp_2026, Tmp_2028, Tmp_2029, Tmp_2030, Tmp_2033, Tmp_2034, Tmp_2035, Tmp_2036, Tmp_2038, Tmp_2040, Tmp_2042, Tmp_2043, Tmp_2044, Tmp_2045, Tmp_2047, sdv_674, Tmp_2049, Tmp_2050, Tmp_2051, Tmp_2053, Tmp_2054, Tmp_2055, Tmp_2056, status_62, Tmp_2061, Tmp_2062, Tmp_2063, Tmp_2064, Tmp_2066, Tmp_2067, Tmp_2068, i_5, Tmp_2069, Tmp_2071, Tmp_2073, Tmp_2074, Tmp_2076, Tmp_2079, Tmp_2081, Tmp_2082, Tmp_2083, Tmp_2084, Tmp_2087, Tmp_2088, Tmp_2090, Tmp_2091, Tmp_2093, Tmp_2094, Tmp_2096, Tmp_2097, Tmp_2102, Tmp_2103, sdv_679, fdoExtension_7, Tmp_2106, Tmp_2108, Tmp_2111, Tmp_2113, Tmp_2114, Tmp_2116, cIrql_9, Tmp_2117, Tmp_2121, Tmp_2122, Tmp_2123, Tmp_2126, Tmp_2127, Tmp_2129, DeviceObject_36, vslice_dummy_var_399, vslice_dummy_var_403, vslice_dummy_var_404);
    goto L273_last;

  L273_last:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc i_5;
    Tmp_2053 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2022;
    assume {:nonnull} Tmp_2022 != 0;
    assume Tmp_2022 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    Tmp_2006 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2038;
    assume {:nonnull} Tmp_2038 != 0;
    assume Tmp_2038 > 0;
    havoc Tmp_2029;
    assume {:nonnull} Tmp_2029 != 0;
    assume Tmp_2029 > 0;
    pdoExtension_17 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_2029)];
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    Tmp_2088 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2071;
    assume {:nonnull} Tmp_2071 != 0;
    assume Tmp_2071 > 0;
    havoc DeviceObject_36;
    Tmp_2079 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2117;
    assume {:nonnull} Tmp_2117 != 0;
    assume Tmp_2117 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    Tmp_2068 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2102;
    assume {:nonnull} Tmp_2102 != 0;
    assume Tmp_2102 > 0;
    call {:si_unique_call 2470} sdv_ExFreePool(0);
    Tmp_2063 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2081;
    assume {:nonnull} Tmp_2081 != 0;
    assume Tmp_2081 > 0;
    Tmp_2007 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2127;
    assume {:nonnull} Tmp_2127 != 0;
    assume Tmp_2127 > 0;
    goto L283;

  L283:
    Tmp_2087 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2044;
    assume {:nonnull} Tmp_2044 != 0;
    assume Tmp_2044 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    Tmp_2035 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2129;
    assume {:nonnull} Tmp_2129 != 0;
    assume Tmp_2129 > 0;
    call {:si_unique_call 2471} sdv_ExFreePool(0);
    Tmp_2114 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2083;
    assume {:nonnull} Tmp_2083 != 0;
    assume Tmp_2083 > 0;
    Tmp_2093 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2122;
    assume {:nonnull} Tmp_2122 != 0;
    assume Tmp_2122 > 0;
    goto L290;

  L290:
    Tmp_2030 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2040;
    assume {:nonnull} Tmp_2040 != 0;
    assume Tmp_2040 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    Tmp_2103 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2054;
    assume {:nonnull} Tmp_2054 != 0;
    assume Tmp_2054 > 0;
    call {:si_unique_call 2472} sdv_ExFreePool(0);
    Tmp_2066 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2025;
    assume {:nonnull} Tmp_2025 != 0;
    assume Tmp_2025 > 0;
    Tmp_2090 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2013;
    assume {:nonnull} Tmp_2013 != 0;
    assume Tmp_2013 > 0;
    goto L297;

  L297:
    Tmp_2073 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2028;
    assume {:nonnull} Tmp_2028 != 0;
    assume Tmp_2028 > 0;
    call {:si_unique_call 2473} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 2474} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 2475} IoDeleteDevice(0);
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2047;
    assume {:nonnull} Tmp_2047 != 0;
    assume Tmp_2047 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_2056;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2042;
    call {:si_unique_call 2476} WPP_SF_q(Tmp_2042, 37, Tmp_2056, pdoExtension_17);
    goto L317;

  L317:
    call {:si_unique_call 2477} Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    call {:si_unique_call 2478} sdv_KeAcquireSpinLock(0, Tmp_2067);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    havoc cIrql_9;
    goto L328;

  L328:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto L328_dummy;

  L328_dummy:
    assume false;
    return;

  anon192_Then:
    goto L317;

  anon234_Then:
    goto L317;

  anon191_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon233_Then:
    goto L297;

  anon232_Then:
    goto L290;

  anon231_Then:
    goto L283;

  anon230_Then:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    Tmp_2014 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2062;
    assume {:nonnull} Tmp_2062 != 0;
    assume Tmp_2062 > 0;
    havoc DeviceObject_36;
    call {:si_unique_call 2479} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 2480} sdv_679 := Sbp2CleanDeviceExtension#0(DeviceObject_36, 1, 0);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} sdv_679 != 0;
    call {:si_unique_call 2481} status_62 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} status_62 < 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2097;
    assume {:nonnull} Tmp_2097 != 0;
    assume Tmp_2097 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc Tmp_2082;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2123;
    call {:si_unique_call 2482} WPP_SF_qD(Tmp_2123, 38, Tmp_2082, DeviceObject_36, status_62);
    goto L348;

  L348:
    call {:si_unique_call 2483} Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    call {:si_unique_call 2484} sdv_KeRaiseIrql(2, Tmp_2067);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    havoc cIrql_9;
    call {:si_unique_call 2485} Sbp2StartNextPacketByKey#1(DeviceObject_36, 0);
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2486} sdv_KeLowerIrql(cIrql_9);
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2069;
    assume {:nonnull} Tmp_2069 != 0;
    assume Tmp_2069 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc Tmp_2049;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2011;
    call {:si_unique_call 2487} WPP_SF_qq(Tmp_2011, 39, Tmp_2049, pdoExtension_17, DeviceObject_36);
    goto L361;

  L361:
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2488} vslice_dummy_var_403 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_17), 0, 0);
    call {:si_unique_call 2489} vslice_dummy_var_399 := KeCancelTimer(0);
    call {:si_unique_call 2490} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto L379;

  L379:
    call {:si_unique_call 2491} sdv_674, vslice_dummy_var_404 := Sbp2CleanDeviceExtension#1_loop_L379(pdoExtension_17, sdv_674, vslice_dummy_var_404);
    goto L379_last;

  L379_last:
    call {:si_unique_call 2508} sdv_674 := sdv_IsListEmpty(0);
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} sdv_674 == 0;
    assume {:nonnull} pdoExtension_17 != 0;
    assume pdoExtension_17 > 0;
    call {:si_unique_call 2492} vslice_dummy_var_404 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2493} sdv_ExFreePool(0);
    goto anon197_Else_dummy;

  anon197_Else_dummy:
    assume false;
    return;

  anon197_Then:
    assume {:partition} sdv_674 != 0;
    call {:si_unique_call 2494} Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    call {:si_unique_call 2495} sdv_KeAcquireSpinLock(0, Tmp_2067);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    havoc cIrql_9;
    Tmp_2076 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2106;
    assume {:nonnull} Tmp_2106 != 0;
    assume Tmp_2106 > 0;
    call {:si_unique_call 2496} sdv_KeReleaseSpinLock(0, cIrql_9);
    call {:si_unique_call 2497} IoDeleteDevice(0);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2126;
    assume {:nonnull} Tmp_2126 != 0;
    assume Tmp_2126 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    havoc Tmp_2045;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2084;
    call {:si_unique_call 2498} WPP_SF_q(Tmp_2084, 40, Tmp_2045, pdoExtension_17);
    goto L398;

  L398:
    call {:si_unique_call 2499} Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    call {:si_unique_call 2500} sdv_KeAcquireSpinLock(0, Tmp_2067);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    havoc cIrql_9;
    goto L277;

  L277:
    Tmp_2051 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2024;
    assume {:nonnull} Tmp_2024 != 0;
    assume Tmp_2024 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    Tmp_2074 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2050;
    assume {:nonnull} Tmp_2050 != 0;
    assume Tmp_2050 > 0;
    call {:si_unique_call 2501} sdv_ExFreePool(0);
    Tmp_2019 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2026;
    assume {:nonnull} Tmp_2026 != 0;
    assume Tmp_2026 > 0;
    Tmp_2061 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2108;
    assume {:nonnull} Tmp_2108 != 0;
    assume Tmp_2108 > 0;
    goto L423;

  L423:
    Tmp_2121 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2055;
    assume {:nonnull} Tmp_2055 != 0;
    assume Tmp_2055 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    Tmp_2036 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2111;
    assume {:nonnull} Tmp_2111 != 0;
    assume Tmp_2111 > 0;
    call {:si_unique_call 2502} sdv_ExFreePool(0);
    Tmp_2034 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2064;
    assume {:nonnull} Tmp_2064 != 0;
    assume Tmp_2064 > 0;
    Tmp_2091 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2043;
    assume {:nonnull} Tmp_2043 != 0;
    assume Tmp_2043 > 0;
    goto L430;

  L430:
    Tmp_2096 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2033;
    assume {:nonnull} Tmp_2033 != 0;
    assume Tmp_2033 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    Tmp_2023 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2094;
    assume {:nonnull} Tmp_2094 != 0;
    assume Tmp_2094 > 0;
    call {:si_unique_call 2503} sdv_ExFreePool(0);
    Tmp_2113 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2021;
    assume {:nonnull} Tmp_2021 != 0;
    assume Tmp_2021 > 0;
    Tmp_2116 := i_5;
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc Tmp_2009;
    assume {:nonnull} Tmp_2009 != 0;
    assume Tmp_2009 > 0;
    goto L328;

  anon241_Then:
    goto L328;

  anon240_Then:
    goto L430;

  anon239_Then:
    goto L423;

  anon199_Then:
    goto L398;

  anon238_Then:
    goto L398;

  anon198_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L398;

  anon196_Then:
    goto L361;

  anon237_Then:
    goto L361;

  anon195_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L361;

  anon236_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon201_Then:
    goto L348;

  anon242_Then:
    goto L348;

  anon200_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L348;

  anon194_Then:
    assume {:partition} 0 <= status_62;
    goto L348;

  anon193_Then:
    assume {:partition} sdv_679 == 0;
    call {:si_unique_call 2504} Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    call {:si_unique_call 2505} sdv_KeAcquireSpinLock(0, Tmp_2067);
    assume {:nonnull} Tmp_2067 != 0;
    assume Tmp_2067 > 0;
    havoc cIrql_9;
    goto L277;

  anon235_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon229_Then:
    goto L277;

  anon189_Then:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    havoc vslice_dummy_var_1177;
    call {:si_unique_call 2506} DeAllocateIrpAndIrb(fdoExtension_7, vslice_dummy_var_1177);
    assume {:nonnull} fdoExtension_7 != 0;
    assume fdoExtension_7 > 0;
    goto L443;

  L443:
    call {:si_unique_call 2507} sdv_KeReleaseSpinLock(0, cIrql_9);
    goto L54;

  anon190_Then:
    goto L443;

  anon188_Then:
    goto L253;

  anon243_Then:
    goto L253;

  anon187_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L253;

  anon186_Then:
    assume {:partition} 0 <= status_63;
    goto L253;

  anon228_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon227_Then:
    goto L253;
}



procedure {:origName "Sbp2CleanDeviceExtension"} Sbp2CleanDeviceExtension#1(actual_DeviceObject_36: int, actual_FreeLists: int, actual_OnRemove: int) returns (Tmp_2005: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "FreeAddressRange"} FreeAddressRange#0(actual_DeviceExtension_7: int, actual_Context_6: int)
{
  var {:pointer} Tmp_1336: int;
  var {:pointer} Tmp_1338: int;
  var {:scalar} Tmp_1339: int;
  var {:scalar} sdv_456: int;
  var {:pointer} Tmp_1340: int;
  var {:pointer} Tmp_1341: int;
  var {:pointer} Tmp_1342: int;
  var {:pointer} Tmp_1343: int;
  var {:scalar} sdv_457: int;
  var {:pointer} Tmp_1344: int;
  var {:pointer} Tmp_1345: int;
  var {:pointer} Tmp_1346: int;
  var {:pointer} Tmp_1347: int;
  var {:pointer} Tmp_1348: int;
  var {:scalar} routine_1: int;
  var {:pointer} Tmp_1349: int;
  var {:pointer} packet_10: int;
  var {:scalar} status_36: int;
  var {:pointer} Tmp_1350: int;
  var {:pointer} Tmp_1351: int;
  var {:scalar} Tmp_1352: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Context_6: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_1178: int;
  var vslice_dummy_var_1179: int;

  anon0:
    call {:si_unique_call 2509} vslice_dummy_var_405 := __HAVOC_malloc(4);
    call {:si_unique_call 2510} packet_10 := __HAVOC_malloc(4);
    DeviceExtension_7 := actual_DeviceExtension_7;
    Context_6 := actual_Context_6;
    call {:si_unique_call 2511} Tmp_1338 := __HAVOC_malloc(4);
    call {:si_unique_call 2512} Tmp_1346 := __HAVOC_malloc(4);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 2513} AllocateIrpAndIrb(DeviceExtension_7, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 2514} Sbp2AddLog(DeviceExtension_7, 32, -968797586, DeviceExtension_7, Context_6);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1341;
    assume {:nonnull} Tmp_1341 != 0;
    assume Tmp_1341 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1350;
    assume {:nonnull} Tmp_1350 != 0;
    assume Tmp_1350 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1347;
    assume {:nonnull} Tmp_1347 != 0;
    assume Tmp_1347 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1349;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_1349 != 0;
    assume Tmp_1349 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1343;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_1343 != 0;
    assume Tmp_1343 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Context_6 == CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto L27;

  L27:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1348;
    assume {:nonnull} Tmp_1348 != 0;
    assume Tmp_1348 > 0;
    call {:si_unique_call 2515} sdv_457 := sdv_KeGetCurrentIrql();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_457 >= 2;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc routine_1;
    assume routine_1 == 0;
    call {:si_unique_call 2516} Sbp2AddLog(DeviceExtension_7, 32, -968797647, DeviceExtension_7, status_36);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_36 < 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1346;
    assume {:nonnull} Tmp_1346 != 0;
    assume Tmp_1346 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_1342;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1352;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    havoc vslice_dummy_var_1178;
    call {:si_unique_call 2517} WPP_SF_qD(Tmp_1352, 13, Tmp_1342, vslice_dummy_var_1178, status_36);
    goto L49;

  L49:
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 2518} IoFreeMdl(0);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto L51;

  L51:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc vslice_dummy_var_1179;
    call {:si_unique_call 2519} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_1179);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon49_Then:
    goto L51;

  anon43_Then:
    goto L49;

  anon51_Then:
    goto L49;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon41_Then:
    assume {:partition} 0 <= status_36;
    goto L49;

  anon40_Then:
    goto L32;

  L32:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    assume false;
    return;

  anon39_Then:
    assume {:partition} 2 > sdv_457;
    goto L32;

  anon38_Then:
    assume {:partition} Context_6 != CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    call {:si_unique_call 2520} sdv_456 := sdv_MmGetMdlByteCount(0);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1345;
    assume {:nonnull} Tmp_1345 != 0;
    assume Tmp_1345 > 0;
    havoc Tmp_1351;
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    goto L27;

  anon47_Then:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Context_6 == GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1344;
    assume {:nonnull} Tmp_1344 != 0;
    assume Tmp_1344 > 0;
    havoc Tmp_1340;
    assume {:nonnull} Tmp_1340 != 0;
    assume Tmp_1340 > 0;
    goto L27;

  anon37_Then:
    assume {:partition} Context_6 != GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    goto L27;

  anon36_Then:
    goto L1;

  anon35_Then:
    goto L1;
}



procedure {:origName "FreeAddressRange"} FreeAddressRange#0(actual_DeviceExtension_7: int, actual_Context_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "FreeAddressRange"} FreeAddressRange#1(actual_DeviceExtension_7: int, actual_Context_6: int)
{
  var {:pointer} Tmp_1336: int;
  var {:pointer} Tmp_1338: int;
  var {:scalar} Tmp_1339: int;
  var {:scalar} sdv_456: int;
  var {:pointer} Tmp_1340: int;
  var {:pointer} Tmp_1341: int;
  var {:pointer} Tmp_1342: int;
  var {:pointer} Tmp_1343: int;
  var {:scalar} sdv_457: int;
  var {:pointer} Tmp_1344: int;
  var {:pointer} Tmp_1345: int;
  var {:pointer} Tmp_1346: int;
  var {:pointer} Tmp_1347: int;
  var {:pointer} Tmp_1348: int;
  var {:scalar} routine_1: int;
  var {:pointer} Tmp_1349: int;
  var {:pointer} packet_10: int;
  var {:scalar} status_36: int;
  var {:pointer} Tmp_1350: int;
  var {:pointer} Tmp_1351: int;
  var {:scalar} Tmp_1352: int;
  var {:pointer} DeviceExtension_7: int;
  var {:pointer} Context_6: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_1180: int;
  var vslice_dummy_var_1181: int;
  var vslice_dummy_var_1182: int;
  var vslice_dummy_var_1183: int;

  anon0:
    call {:si_unique_call 2521} vslice_dummy_var_406 := __HAVOC_malloc(4);
    call {:si_unique_call 2522} packet_10 := __HAVOC_malloc(4);
    DeviceExtension_7 := actual_DeviceExtension_7;
    Context_6 := actual_Context_6;
    call {:si_unique_call 2523} Tmp_1338 := __HAVOC_malloc(4);
    call {:si_unique_call 2524} Tmp_1346 := __HAVOC_malloc(4);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 2525} AllocateIrpAndIrb(DeviceExtension_7, packet_10);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    call {:si_unique_call 2526} Sbp2AddLog(DeviceExtension_7, 32, -968797586, DeviceExtension_7, Context_6);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1341;
    assume {:nonnull} Tmp_1341 != 0;
    assume Tmp_1341 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1350;
    assume {:nonnull} Tmp_1350 != 0;
    assume Tmp_1350 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1347;
    assume {:nonnull} Tmp_1347 != 0;
    assume Tmp_1347 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1349;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_1349 != 0;
    assume Tmp_1349 > 0;
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1343;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Tmp_1343 != 0;
    assume Tmp_1343 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} Context_6 == CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto L27;

  L27:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1348;
    assume {:nonnull} Tmp_1348 != 0;
    assume Tmp_1348 > 0;
    call {:si_unique_call 2527} sdv_457 := sdv_KeGetCurrentIrql();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_457 >= 2;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    havoc routine_1;
    assume routine_1 == 0;
    call {:si_unique_call 2528} Sbp2AddLog(DeviceExtension_7, 32, -968797647, DeviceExtension_7, status_36);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_36 < 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1346;
    assume {:nonnull} Tmp_1346 != 0;
    assume Tmp_1346 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    havoc Tmp_1342;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1352;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    havoc vslice_dummy_var_1180;
    call {:si_unique_call 2529} WPP_SF_qD(Tmp_1352, 13, Tmp_1342, vslice_dummy_var_1180, status_36);
    goto L49;

  L49:
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    call {:si_unique_call 2530} IoFreeMdl(0);
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    goto L51;

  L51:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc vslice_dummy_var_1181;
    call {:si_unique_call 2531} DeAllocateIrpAndIrb(DeviceExtension_7, vslice_dummy_var_1181);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon49_Then:
    goto L51;

  anon43_Then:
    goto L49;

  anon51_Then:
    goto L49;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon41_Then:
    assume {:partition} 0 <= status_36;
    goto L49;

  anon40_Then:
    goto L32;

  L32:
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc vslice_dummy_var_1182;
    call {:si_unique_call 2532} status_36 := Sbp2SendRequest#0(DeviceExtension_7, vslice_dummy_var_1182, 2);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2533} Sbp2AddLog(DeviceExtension_7, 32, -968797646, DeviceExtension_7, status_36);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_36 < 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1338;
    assume {:nonnull} Tmp_1338 != 0;
    assume Tmp_1338 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    havoc Tmp_1336;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1339;
    assume {:nonnull} Context_6 != 0;
    assume Context_6 > 0;
    havoc vslice_dummy_var_1183;
    call {:si_unique_call 2534} WPP_SF_qD(Tmp_1339, 14, Tmp_1336, vslice_dummy_var_1183, status_36);
    goto L49;

  anon46_Then:
    goto L49;

  anon50_Then:
    goto L49;

  anon45_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L49;

  anon44_Then:
    assume {:partition} 0 <= status_36;
    goto L49;

  anon48_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon39_Then:
    assume {:partition} 2 > sdv_457;
    goto L32;

  anon38_Then:
    assume {:partition} Context_6 != CommonBufferContext__DEVICE_EXTENSION(DeviceExtension_7);
    call {:si_unique_call 2535} sdv_456 := sdv_MmGetMdlByteCount(0);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1345;
    assume {:nonnull} Tmp_1345 != 0;
    assume Tmp_1345 > 0;
    havoc Tmp_1351;
    assume {:nonnull} Tmp_1351 != 0;
    assume Tmp_1351 > 0;
    goto L27;

  anon47_Then:
    assume {:nonnull} DeviceExtension_7 != 0;
    assume DeviceExtension_7 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} Context_6 == GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    assume {:nonnull} packet_10 != 0;
    assume packet_10 > 0;
    havoc Tmp_1344;
    assume {:nonnull} Tmp_1344 != 0;
    assume Tmp_1344 > 0;
    havoc Tmp_1340;
    assume {:nonnull} Tmp_1340 != 0;
    assume Tmp_1340 > 0;
    goto L27;

  anon37_Then:
    assume {:partition} Context_6 != GlobalStatusContext__DEVICE_EXTENSION(DeviceExtension_7);
    goto L27;

  anon36_Then:
    goto L1;

  anon35_Then:
    goto L1;
}



procedure {:origName "FreeAddressRange"} FreeAddressRange#1(actual_DeviceExtension_7: int, actual_Context_6: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#0(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2427: int)
{
  var {:scalar} waitValue_5: int;
  var {:pointer} Tmp_2428: int;
  var {:pointer} Tmp_2429: int;
  var {:pointer} Tmp_2430: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} Tmp_2431: int;
  var {:pointer} Tmp_2432: int;
  var {:pointer} Tmp_2433: int;
  var {:pointer} Tmp_2435: int;
  var {:pointer} Tmp_2436: int;
  var {:pointer} packet_16: int;
  var {:pointer} FdoExtension_7: int;
  var {:scalar} Enable: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;

  anon0:
    call {:si_unique_call 2536} waitValue_5 := __HAVOC_malloc(20);
    call {:si_unique_call 2537} packet_16 := __HAVOC_malloc(4);
    FdoExtension_7 := actual_FdoExtension_7;
    Enable := actual_Enable;
    ntStatus_1 := 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  L12:
    assume {:nonnull} waitValue_5 != 0;
    assume waitValue_5 > 0;
    call {:si_unique_call 2538} vslice_dummy_var_409 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_5);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L22;

  L22:
    call {:si_unique_call 2539} vslice_dummy_var_407 := KeReleaseMutex(0, 0);
    goto L25;

  L25:
    Tmp_2427 := ntStatus_1;
    goto LM2;

  LM2:
    return;

  anon32_Then:
    goto L20;

  L20:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2433;
    assume {:nonnull} Tmp_2433 != 0;
    assume Tmp_2433 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2436;
    assume {:nonnull} Tmp_2436 != 0;
    assume Tmp_2436 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Enable != 0;
    call {:si_unique_call 2540} vslice_dummy_var_408 := Sbp2GetHostDDIVersion#0(FdoExtension_7);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2429;
    assume {:nonnull} Tmp_2429 != 0;
    assume Tmp_2429 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2430;
    assume {:nonnull} Tmp_2430 != 0;
    assume Tmp_2430 > 0;
    goto L36;

  L36:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2431;
    assume {:nonnull} Tmp_2431 != 0;
    assume Tmp_2431 > 0;
    goto L37;

  L37:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    assume false;
    return;

  anon27_Then:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2428;
    assume {:nonnull} Tmp_2428 != 0;
    assume Tmp_2428 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2432;
    assume {:nonnull} Tmp_2432 != 0;
    assume Tmp_2432 > 0;
    goto L36;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2435;
    assume {:nonnull} Tmp_2435 != 0;
    assume Tmp_2435 > 0;
    goto L37;

  anon25_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L20;

  anon26_Then:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L22;

  anon36_Then:
    goto L20;

  anon31_Then:
    call {:si_unique_call 2541} AllocateIrpAndIrb(FdoExtension_7, packet_16);
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  anon30_Then:
    ntStatus_1 := -1073741670;
    goto L25;
}



procedure {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#0(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2427: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#1(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2427: int)
{
  var {:scalar} waitValue_5: int;
  var {:pointer} Tmp_2428: int;
  var {:pointer} Tmp_2429: int;
  var {:pointer} Tmp_2430: int;
  var {:scalar} ntStatus_1: int;
  var {:pointer} Tmp_2431: int;
  var {:pointer} Tmp_2432: int;
  var {:pointer} Tmp_2433: int;
  var {:pointer} Tmp_2435: int;
  var {:pointer} Tmp_2436: int;
  var {:pointer} packet_16: int;
  var {:pointer} FdoExtension_7: int;
  var {:scalar} Enable: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_1184: int;

  anon0:
    call {:si_unique_call 2542} waitValue_5 := __HAVOC_malloc(20);
    call {:si_unique_call 2543} packet_16 := __HAVOC_malloc(4);
    FdoExtension_7 := actual_FdoExtension_7;
    Enable := actual_Enable;
    ntStatus_1 := 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  L12:
    assume {:nonnull} waitValue_5 != 0;
    assume waitValue_5 > 0;
    call {:si_unique_call 2544} vslice_dummy_var_412 := KeWaitForSingleObject(0, 0, 0, 0, waitValue_5);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L22;

  L22:
    call {:si_unique_call 2545} vslice_dummy_var_410 := KeReleaseMutex(0, 0);
    goto L25;

  L25:
    Tmp_2427 := ntStatus_1;
    goto LM2;

  LM2:
    return;

  anon32_Then:
    goto L20;

  L20:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2433;
    assume {:nonnull} Tmp_2433 != 0;
    assume Tmp_2433 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2436;
    assume {:nonnull} Tmp_2436 != 0;
    assume Tmp_2436 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} Enable != 0;
    call {:si_unique_call 2546} vslice_dummy_var_411 := Sbp2GetHostDDIVersion#1(FdoExtension_7);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2429;
    assume {:nonnull} Tmp_2429 != 0;
    assume Tmp_2429 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2430;
    assume {:nonnull} Tmp_2430 != 0;
    assume Tmp_2430 > 0;
    goto L36;

  L36:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2431;
    assume {:nonnull} Tmp_2431 != 0;
    assume Tmp_2431 > 0;
    goto L37;

  L37:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc vslice_dummy_var_1184;
    call {:si_unique_call 2547} ntStatus_1 := Sbp2SendRequest#0(FdoExtension_7, vslice_dummy_var_1184, 2);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} ntStatus_1 < 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Enable != 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L22;

  anon29_Then:
    assume {:partition} Enable == 0;
    goto L22;

  anon28_Then:
    assume {:partition} 0 <= ntStatus_1;
    goto L22;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2428;
    assume {:nonnull} Tmp_2428 != 0;
    assume Tmp_2428 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2432;
    assume {:nonnull} Tmp_2432 != 0;
    assume Tmp_2432 > 0;
    goto L36;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    havoc Tmp_2435;
    assume {:nonnull} Tmp_2435 != 0;
    assume Tmp_2435 > 0;
    goto L37;

  anon25_Then:
    assume {:partition} Enable == 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto L20;

  anon26_Then:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L22;

  anon36_Then:
    goto L20;

  anon31_Then:
    call {:si_unique_call 2548} AllocateIrpAndIrb(FdoExtension_7, packet_16);
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} FdoExtension_7 != 0;
    assume FdoExtension_7 > 0;
    assume {:nonnull} packet_16 != 0;
    assume packet_16 > 0;
    goto L12;

  anon30_Then:
    ntStatus_1 := -1073741670;
    goto L25;
}



procedure {:origName "Sbp2EnableBusResetNotification"} Sbp2EnableBusResetNotification#1(actual_FdoExtension_7: int, actual_Enable: int) returns (Tmp_2427: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#0(actual_FdoExtension_5: int) returns (Tmp_2270: int)
{
  var {:pointer} Tmp_2271: int;
  var {:scalar} ntStatus: int;
  var {:pointer} Tmp_2272: int;
  var {:pointer} packet_14: int;
  var {:pointer} Tmp_2274: int;
  var {:scalar} HostDDIVersion: int;
  var {:pointer} Tmp_2275: int;
  var {:pointer} FdoExtension_5: int;

  anon0:
    call {:si_unique_call 2549} packet_14 := __HAVOC_malloc(4);
    call {:si_unique_call 2550} HostDDIVersion := __HAVOC_malloc(8);
    FdoExtension_5 := actual_FdoExtension_5;
    ntStatus := 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    call {:si_unique_call 2551} sdv_do_paged_code_check();
    call {:si_unique_call 2552} AllocateIrpAndIrb(FdoExtension_5, packet_14);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2275;
    assume {:nonnull} Tmp_2275 != 0;
    assume Tmp_2275 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2271;
    assume {:nonnull} Tmp_2271 != 0;
    assume Tmp_2271 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2272;
    assume {:nonnull} Tmp_2272 != 0;
    assume Tmp_2272 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2274;
    assume {:nonnull} Tmp_2274 != 0;
    assume Tmp_2274 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    assume false;
    return;

  anon7_Then:
    Tmp_2270 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;
}



procedure {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#0(actual_FdoExtension_5: int) returns (Tmp_2270: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2270 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#1(actual_FdoExtension_5: int) returns (Tmp_2270: int)
{
  var {:pointer} Tmp_2271: int;
  var {:scalar} ntStatus: int;
  var {:pointer} Tmp_2272: int;
  var {:pointer} packet_14: int;
  var {:pointer} Tmp_2274: int;
  var {:scalar} HostDDIVersion: int;
  var {:pointer} Tmp_2275: int;
  var {:pointer} FdoExtension_5: int;
  var vslice_dummy_var_1185: int;
  var vslice_dummy_var_1186: int;

  anon0:
    call {:si_unique_call 2553} packet_14 := __HAVOC_malloc(4);
    call {:si_unique_call 2554} HostDDIVersion := __HAVOC_malloc(8);
    FdoExtension_5 := actual_FdoExtension_5;
    ntStatus := 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    call {:si_unique_call 2555} sdv_do_paged_code_check();
    call {:si_unique_call 2556} AllocateIrpAndIrb(FdoExtension_5, packet_14);
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2275;
    assume {:nonnull} Tmp_2275 != 0;
    assume Tmp_2275 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2271;
    assume {:nonnull} Tmp_2271 != 0;
    assume Tmp_2271 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2272;
    assume {:nonnull} Tmp_2272 != 0;
    assume Tmp_2272 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc Tmp_2274;
    assume {:nonnull} Tmp_2274 != 0;
    assume Tmp_2274 > 0;
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc vslice_dummy_var_1185;
    call {:si_unique_call 2557} ntStatus := Sbp2SendRequest#0(FdoExtension_5, vslice_dummy_var_1185, 2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} ntStatus >= 0;
    assume {:nonnull} FdoExtension_5 != 0;
    assume FdoExtension_5 > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    assume {:nonnull} FdoExtension_5 != 0;
    assume FdoExtension_5 > 0;
    assume {:nonnull} HostDDIVersion != 0;
    assume HostDDIVersion > 0;
    goto L31;

  L31:
    assume {:nonnull} packet_14 != 0;
    assume packet_14 > 0;
    havoc vslice_dummy_var_1186;
    call {:si_unique_call 2558} DeAllocateIrpAndIrb(FdoExtension_5, vslice_dummy_var_1186);
    Tmp_2270 := ntStatus;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} 0 > ntStatus;
    ntStatus := 0;
    goto L31;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    Tmp_2270 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetHostDDIVersion"} Sbp2GetHostDDIVersion#1(actual_FdoExtension_5: int) returns (Tmp_2270: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_17: int, actual_Key: int)
{
  var {:pointer} Tmp_1187: int;
  var {:scalar} sdv_392: int;
  var {:scalar} sdv_394: int;
  var {:pointer} sdv_395: int;
  var {:pointer} irp: int;
  var {:pointer} packet_7: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} DeviceObject_17: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_413: int;

  anon0:
    call {:si_unique_call 2559} vslice_dummy_var_413 := __HAVOC_malloc(4);
    DeviceObject_17 := actual_DeviceObject_17;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    deviceExtension := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_17)];
    call {:si_unique_call 2560} Tmp_1187 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2561} sdv_392 := sdv_InterlockedIncrement(Tmp_1187);
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_392 == 1;
    goto L11;

  L11:
    call {:si_unique_call 2562} Tmp_1187, sdv_394, sdv_395, irp, packet_7 := Sbp2StartNextPacketByKey#0_loop_L11(Tmp_1187, sdv_394, sdv_395, irp, packet_7, deviceExtension, DeviceObject_17, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    call {:si_unique_call 2567} packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_17), Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} packet_7 != 0;
    call {:si_unique_call 2563} sdv_395 := sdv_containing_record(packet_7, 64);
    irp := sdv_395;
    call {:si_unique_call 2564} Sbp2StartIo#0(DeviceObject_17, irp);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 2565} Tmp_1187 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2566} sdv_394 := sdv_InterlockedDecrement(Tmp_1187);
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_394 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} sdv_394 == 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} packet_7 == 0;
    goto L17;

  anon9_Then:
    assume {:partition} sdv_392 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#0(actual_DeviceObject_17: int, actual_Key: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_17: int, actual_Key: int)
{
  var {:pointer} Tmp_1187: int;
  var {:scalar} sdv_392: int;
  var {:scalar} sdv_394: int;
  var {:pointer} sdv_395: int;
  var {:pointer} irp: int;
  var {:pointer} packet_7: int;
  var {:pointer} deviceExtension: int;
  var {:pointer} DeviceObject_17: int;
  var {:scalar} Key: int;
  var vslice_dummy_var_414: int;

  anon0:
    call {:si_unique_call 2568} vslice_dummy_var_414 := __HAVOC_malloc(4);
    DeviceObject_17 := actual_DeviceObject_17;
    Key := actual_Key;
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    deviceExtension := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_17)];
    call {:si_unique_call 2569} Tmp_1187 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2570} sdv_392 := sdv_InterlockedIncrement(Tmp_1187);
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_392 == 1;
    goto L11;

  L11:
    call {:si_unique_call 2571} Tmp_1187, sdv_394, sdv_395, irp, packet_7 := Sbp2StartNextPacketByKey#1_loop_L11(Tmp_1187, sdv_394, sdv_395, irp, packet_7, deviceExtension, DeviceObject_17, Key);
    goto L11_last;

  L11_last:
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    call {:si_unique_call 2576} packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(DeviceObject_17), Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} packet_7 != 0;
    call {:si_unique_call 2572} sdv_395 := sdv_containing_record(packet_7, 64);
    irp := sdv_395;
    call {:si_unique_call 2573} Sbp2StartIo#1(DeviceObject_17, irp);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 2574} Tmp_1187 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    call {:si_unique_call 2575} sdv_394 := sdv_InterlockedDecrement(Tmp_1187);
    assume {:nonnull} Tmp_1187 != 0;
    assume Tmp_1187 > 0;
    assume {:nonnull} deviceExtension != 0;
    assume deviceExtension > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_394 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    assume false;
    return;

  anon11_Then:
    assume {:partition} sdv_394 == 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} packet_7 == 0;
    goto L17;

  anon9_Then:
    assume {:partition} sdv_392 != 1;
    goto L1;
}



procedure {:origName "Sbp2StartNextPacketByKey"} Sbp2StartNextPacketByKey#1(actual_DeviceObject_17: int, actual_Key: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_24: int, actual_Irp_16: int)
{
  var {:scalar} Tmp_1540: int;
  var {:pointer} Tmp_1541: int;
  var {:pointer} Tmp_1543: int;
  var {:pointer} Tmp_1544: int;
  var {:scalar} Tmp_1545: int;
  var {:scalar} sdv_499: int;
  var {:scalar} Tmp_1546: int;
  var {:pointer} Tmp_1547: int;
  var {:pointer} Tmp_1548: int;
  var {:scalar} Tmp_1549: int;
  var {:pointer} Tmp_1550: int;
  var {:pointer} Tmp_1551: int;
  var {:pointer} Tmp_1552: int;
  var {:pointer} Tmp_1553: int;
  var {:scalar} Tmp_1554: int;
  var {:scalar} sdv_501: int;
  var {:pointer} Tmp_1555: int;
  var {:pointer} sdv_502: int;
  var {:pointer} qIrp: int;
  var {:pointer} sdv_505: int;
  var {:pointer} Tmp_1556: int;
  var {:scalar} sdv_506: int;
  var {:scalar} queued: int;
  var {:scalar} Tmp_1557: int;
  var {:pointer} sdv_507: int;
  var {:pointer} srb_4: int;
  var {:scalar} Tmp_1558: int;
  var {:pointer} Tmp_1559: int;
  var {:pointer} deviceExtension_4: int;
  var {:scalar} Tmp_1560: int;
  var {:pointer} irpStack_10: int;
  var {:pointer} deferredIrp_2: int;
  var {:scalar} Tmp_1561: int;
  var {:scalar} Tmp_1562: int;
  var {:pointer} Tmp_1563: int;
  var {:pointer} sdv_508: int;
  var {:scalar} Tmp_1564: int;
  var {:pointer} Tmp_1565: int;
  var {:pointer} Tmp_1567: int;
  var {:pointer} Tmp_1568: int;
  var {:pointer} context: int;
  var {:scalar} Tmp_1569: int;
  var {:pointer} Tmp_1570: int;
  var {:pointer} Tmp_1571: int;
  var {:scalar} sdv_510: int;
  var {:scalar} sdv_511: int;
  var {:scalar} Tmp_1572: int;
  var {:scalar} Tmp_1573: int;
  var {:pointer} Tmp_1574: int;
  var {:scalar} Tmp_1575: int;
  var {:pointer} Tmp_1576: int;
  var {:pointer} Tmp_1577: int;
  var {:pointer} sdv_512: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} Tmp_1578: int;
  var {:pointer} Tmp_1579: int;
  var {:pointer} Tmp_1580: int;
  var {:pointer} Tmp_1581: int;
  var {:scalar} Tmp_1582: int;
  var {:pointer} Tmp_1583: int;
  var {:pointer} Tmp_1584: int;
  var {:pointer} Tmp_1585: int;
  var {:scalar} Tmp_1586: int;
  var {:scalar} status_42: int;
  var {:pointer} entry_2: int;
  var {:pointer} Tmp_1587: int;
  var {:pointer} Tmp_1588: int;
  var {:scalar} sdv_513: int;
  var {:pointer} queue_2: int;
  var {:scalar} state_1: int;
  var {:pointer} Tmp_1589: int;
  var {:pointer} DeviceObject_24: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_1187: int;
  var vslice_dummy_var_1188: int;
  var vslice_dummy_var_1189: int;
  var vslice_dummy_var_1190: int;
  var vslice_dummy_var_1191: int;
  var vslice_dummy_var_1192: int;
  var vslice_dummy_var_1193: int;
  var vslice_dummy_var_1194: int;
  var vslice_dummy_var_1195: int;
  var vslice_dummy_var_1196: int;

  anon0:
    call {:si_unique_call 2577} vslice_dummy_var_415 := __HAVOC_malloc(4);
    call {:si_unique_call 2578} context := __HAVOC_malloc(4);
    call {:si_unique_call 2579} state_1 := __HAVOC_malloc(8);
    DeviceObject_24 := actual_DeviceObject_24;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 2580} Tmp_1543 := __HAVOC_malloc(4);
    call {:si_unique_call 2581} Tmp_1544 := __HAVOC_malloc(4);
    call {:si_unique_call 2582} Tmp_1548 := __HAVOC_malloc(4);
    call {:si_unique_call 2583} Tmp_1553 := __HAVOC_malloc(4);
    call {:si_unique_call 2584} Tmp_1555 := __HAVOC_malloc(4);
    call {:si_unique_call 2585} Tmp_1556 := __HAVOC_malloc(4);
    call {:si_unique_call 2586} Tmp_1565 := __HAVOC_malloc(4);
    call {:si_unique_call 2587} Tmp_1567 := __HAVOC_malloc(4);
    call {:si_unique_call 2588} Tmp_1570 := __HAVOC_malloc(4);
    call {:si_unique_call 2589} Tmp_1578 := __HAVOC_malloc(4);
    call {:si_unique_call 2590} Tmp_1583 := __HAVOC_malloc(4);
    call {:si_unique_call 2591} Tmp_1584 := __HAVOC_malloc(4);
    call {:si_unique_call 2592} Tmp_1585 := __HAVOC_malloc(4);
    call {:si_unique_call 2593} Tmp_1587 := __HAVOC_malloc(4);
    call {:si_unique_call 2594} Tmp_1588 := __HAVOC_malloc(4);
    call {:si_unique_call 2595} irpStack_10 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    deviceExtension_4 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_24)];
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    havoc srb_4;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2596} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2597} Sbp2AddLog(deviceExtension_4, 64, -747353745, Irp_16, srb_4);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto L24;

  L24:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    call {:si_unique_call 2598} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_42 := -1073741632;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2599} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} yogi_error != 1;
    goto L456;

  L456:
    call {:si_unique_call 2600} sdv_IoCompleteRequest(0, 0);
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1548;
    assume {:nonnull} Tmp_1548 != 0;
    assume Tmp_1548 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    havoc Tmp_1580;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1572;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc vslice_dummy_var_1187;
    call {:si_unique_call 2601} WPP_SF_qqD(Tmp_1572, 23, Tmp_1580, deviceExtension_4, Irp_16, vslice_dummy_var_1187);
    goto L39;

  L39:
    assume false;
    return;

  anon184_Then:
    goto L39;

  anon240_Then:
    goto L39;

  anon183_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L39;

  anon239_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon238_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L456;

  anon181_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    call {:si_unique_call 2602} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1543;
    assume {:nonnull} Tmp_1543 != 0;
    assume Tmp_1543 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_1563;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1554;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1188;
    havoc vslice_dummy_var_1189;
    call {:si_unique_call 2603} WPP_SF_qqqDD(Tmp_1554, 25, Tmp_1563, DeviceObject_24, Irp_16, srb_4, vslice_dummy_var_1188, vslice_dummy_var_1189);
    goto L67;

  L67:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto L76;

  L76:
    call {:si_unique_call 2604} Create1394TransactionForSrb#0(deviceExtension_4, srb_4, context);
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  anon243_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon187_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc Tmp_1581;
    assume {:nonnull} Tmp_1581 != 0;
    assume Tmp_1581 > 0;
    goto L76;

  anon189_Then:
    goto L76;

  anon188_Then:
    goto L67;

  anon242_Then:
    goto L67;

  anon186_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon185_Then:
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1190;
    call {:si_unique_call 2605} sdv_510 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1190);
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} sdv_510 == 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1588;
    assume {:nonnull} Tmp_1588 != 0;
    assume Tmp_1588 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_1579;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1546;
    call {:si_unique_call 2606} WPP_SF_qq(Tmp_1546, 24, Tmp_1579, deviceExtension_4, Irp_16);
    goto L87;

  L87:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2607} vslice_dummy_var_419 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2608} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    goto L459;

  L459:
    call {:si_unique_call 2609} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon245_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon193_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L459;

  anon192_Then:
    goto L87;

  anon244_Then:
    goto L87;

  anon191_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L87;

  anon190_Then:
    assume {:partition} sdv_510 != 0;
    goto L1;

  anon182_Then:
    call {:si_unique_call 2610} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1191;
    call {:si_unique_call 2611} queued := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1191);
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} queued == 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1570;
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    havoc Tmp_1550;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1586;
    call {:si_unique_call 2612} WPP_SF_qq(Tmp_1586, 26, Tmp_1550, deviceExtension_4, Irp_16);
    goto L215;

  L215:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2613} sdv_502 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto L116;

  L116:
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1544;
    assume {:nonnull} Tmp_1544 != 0;
    assume Tmp_1544 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    Tmp_1582 := queued;
    havoc Tmp_1571;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1560;
    call {:si_unique_call 2614} WPP_SF_qDq(Tmp_1560, 27, Tmp_1571, deviceExtension_4, Tmp_1582, Irp_16);
    goto L117;

  L117:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1555;
    assume {:nonnull} Tmp_1555 != 0;
    assume Tmp_1555 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    havoc Tmp_1557;
    havoc Tmp_1589;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1562;
    call {:si_unique_call 2615} WPP_SF_qd(Tmp_1562, 28, Tmp_1589, deviceExtension_4, Tmp_1557);
    goto L130;

  L130:
    call {:si_unique_call 2616} status_42 := PoRequestPowerIrp(0, 2, state_1, 0, 0, 0);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} status_42 < 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1585;
    assume {:nonnull} Tmp_1585 != 0;
    assume Tmp_1585 > 0;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    havoc Tmp_1552;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1573;
    call {:si_unique_call 2617} WPP_SF_qD(Tmp_1573, 29, Tmp_1552, deviceExtension_4, status_42);
    goto L148;

  L148:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2618} sdv_507 := _InlineInterlockedCompareExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), 0, Irp_16);
    deferredIrp_2 := sdv_507;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:partition} deferredIrp_2 != Irp_16;
    Irp_16 := 0;
    goto L181;

  L181:
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} Irp_16 == 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1553;
    assume {:nonnull} Tmp_1553 != 0;
    assume Tmp_1553 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_1577;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1545;
    call {:si_unique_call 2619} WPP_SF_q(Tmp_1545, 30, Tmp_1577, deviceExtension_4);
    goto L1;

  anon209_Then:
    goto L1;

  anon254_Then:
    goto L1;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon207_Then:
    assume {:partition} Irp_16 != 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2620} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:partition} yogi_error != 1;
    goto L462;

  L462:
    call {:si_unique_call 2621} sdv_IoCompleteRequest(0, 0);
    assume false;
    return;

  anon252_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon251_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L462;

  anon255_Then:
    assume {:partition} deferredIrp_2 == Irp_16;
    goto L181;

  anon203_Then:
    assume {:partition} queued != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_24);
    call {:si_unique_call 2622} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry_2;
    goto L166;

  L166:
    call {:si_unique_call 2623} qIrp, sdv_512, entry_2 := Sbp2StartIo#0_loop_L166(qIrp, sdv_512, entry_2, Irp_16);
    goto L166_last;

  L166_last:
    goto anon205_Then, anon205_Else;

  anon205_Else:
    call {:si_unique_call 2624} sdv_512 := sdv_containing_record(entry_2, 64);
    qIrp := sdv_512;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} qIrp == Irp_16;
    call {:si_unique_call 2625} vslice_dummy_var_417 := sdv_RemoveEntryList(0);
    goto L167;

  L167:
    call {:si_unique_call 2626} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} qIrp != Irp_16;
    Irp_16 := 0;
    goto L181;

  anon206_Then:
    assume {:partition} qIrp == Irp_16;
    goto L181;

  anon250_Then:
    assume {:partition} qIrp != Irp_16;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    havoc entry_2;
    goto anon250_Then_dummy;

  anon250_Then_dummy:
    assume false;
    return;

  anon205_Then:
    goto L167;

  anon204_Then:
    goto L148;

  anon249_Then:
    goto L148;

  anon202_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon201_Then:
    assume {:partition} 0 <= status_42;
    goto L1;

  anon200_Then:
    goto L130;

  anon248_Then:
    goto L130;

  anon247_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L130;

  anon199_Then:
    goto L117;

  anon246_Then:
    goto L117;

  anon198_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L117;

  anon211_Then:
    goto L215;

  anon256_Then:
    goto L215;

  anon210_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L215;

  anon197_Then:
    assume {:partition} queued != 0;
    goto L116;

  anon196_Then:
    goto L103;

  L103:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    call {:si_unique_call 2627} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1192;
    call {:si_unique_call 2628} sdv_501 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1192);
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} sdv_501 != 0;
    goto L238;

  L238:
    call {:si_unique_call 2629} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1584;
    assume {:nonnull} Tmp_1584 != 0;
    assume Tmp_1584 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    havoc Tmp_1541;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1575;
    call {:si_unique_call 2630} WPP_SF_qq(Tmp_1575, 31, Tmp_1541, deviceExtension_4, Irp_16);
    goto L1;

  anon215_Then:
    goto L1;

  anon257_Then:
    goto L1;

  anon214_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon213_Then:
    assume {:partition} sdv_501 == 0;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1193;
    call {:si_unique_call 2631} sdv_513 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1193);
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} sdv_513 == 0;
    call {:si_unique_call 2632} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1567;
    assume {:nonnull} Tmp_1567 != 0;
    assume Tmp_1567 > 0;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    havoc Tmp_1559;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1561;
    call {:si_unique_call 2633} WPP_SF_qq(Tmp_1561, 32, Tmp_1559, deviceExtension_4, Irp_16);
    goto L261;

  L261:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2634} vslice_dummy_var_420 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2635} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:partition} yogi_error != 1;
    goto L465;

  L465:
    call {:si_unique_call 2636} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon259_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon219_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L465;

  anon218_Then:
    goto L261;

  anon258_Then:
    goto L261;

  anon217_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L261;

  anon216_Then:
    assume {:partition} sdv_513 != 0;
    goto L238;

  anon195_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    goto L279;

  L279:
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1194;
    call {:si_unique_call 2637} sdv_511 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1194);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} sdv_511 == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2638} sdv_508 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1556;
    assume {:nonnull} Tmp_1556 != 0;
    assume Tmp_1556 > 0;
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    havoc Tmp_1551;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1558;
    call {:si_unique_call 2639} WPP_SF_q(Tmp_1558, 33, Tmp_1551, Irp_16);
    goto L1;

  anon225_Then:
    goto L1;

  anon262_Then:
    goto L1;

  anon261_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon222_Then:
    assume {:partition} sdv_511 != 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1587;
    assume {:nonnull} Tmp_1587 != 0;
    assume Tmp_1587 > 0;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    havoc Tmp_1574;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1569;
    call {:si_unique_call 2640} WPP_SF_q(Tmp_1569, 34, Tmp_1574, Irp_16);
    goto L1;

  anon224_Then:
    goto L1;

  anon260_Then:
    goto L1;

  anon223_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon221_Then:
    goto L277;

  L277:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    goto L279;

  anon220_Then:
    goto L67;

  anon212_Then:
    goto L277;

  anon194_Then:
    goto L103;

  anon179_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2641} sdv_505 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    oldIrp_1 := sdv_505;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1565;
    assume {:nonnull} Tmp_1565 != 0;
    assume Tmp_1565 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    havoc Tmp_1568;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1540;
    call {:si_unique_call 2642} WPP_SF_qqq(Tmp_1540, 20, Tmp_1568, deviceExtension_4, Irp_16, oldIrp_1);
    goto L327;

  L327:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto L338;

  L338:
    call {:si_unique_call 2643} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon229_Then:
    call {:si_unique_call 2644} Sbp2SetDeferLoginTimer(deviceExtension_4);
    goto L338;

  anon230_Then:
    goto L327;

  anon264_Then:
    goto L327;

  anon263_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L327;

  anon228_Then:
    goto L314;

  L314:
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1195;
    call {:si_unique_call 2645} sdv_499 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1195);
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} sdv_499 != 0;
    goto L346;

  L346:
    call {:si_unique_call 2646} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1583;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    havoc Tmp_1576;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1564;
    call {:si_unique_call 2647} WPP_SF_qq(Tmp_1564, 21, Tmp_1576, deviceExtension_4, Irp_16);
    goto L1;

  anon233_Then:
    goto L1;

  anon265_Then:
    goto L1;

  anon232_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon231_Then:
    assume {:partition} sdv_499 == 0;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1196;
    call {:si_unique_call 2648} sdv_506 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1196);
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} sdv_506 == 0;
    call {:si_unique_call 2649} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1578;
    assume {:nonnull} Tmp_1578 != 0;
    assume Tmp_1578 > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    havoc Tmp_1547;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1549;
    call {:si_unique_call 2650} WPP_SF_qq(Tmp_1549, 22, Tmp_1547, deviceExtension_4, Irp_16);
    goto L369;

  L369:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2651} vslice_dummy_var_421 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2652} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} yogi_error != 1;
    goto L468;

  L468:
    call {:si_unique_call 2653} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon267_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon237_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L468;

  anon236_Then:
    goto L369;

  anon266_Then:
    goto L369;

  anon235_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L369;

  anon234_Then:
    assume {:partition} sdv_506 != 0;
    goto L346;

  anon227_Then:
    goto L314;

  anon226_Then:
    goto L24;

  anon180_Then:
    goto L24;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#0(actual_DeviceObject_24: int, actual_Irp_16: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_24: int, actual_Irp_16: int)
{
  var {:scalar} Tmp_1540: int;
  var {:pointer} Tmp_1541: int;
  var {:pointer} Tmp_1543: int;
  var {:pointer} Tmp_1544: int;
  var {:scalar} Tmp_1545: int;
  var {:scalar} sdv_499: int;
  var {:scalar} Tmp_1546: int;
  var {:pointer} Tmp_1547: int;
  var {:pointer} Tmp_1548: int;
  var {:scalar} Tmp_1549: int;
  var {:pointer} Tmp_1550: int;
  var {:pointer} Tmp_1551: int;
  var {:pointer} Tmp_1552: int;
  var {:pointer} Tmp_1553: int;
  var {:scalar} Tmp_1554: int;
  var {:scalar} sdv_501: int;
  var {:pointer} Tmp_1555: int;
  var {:pointer} sdv_502: int;
  var {:pointer} qIrp: int;
  var {:pointer} sdv_505: int;
  var {:pointer} Tmp_1556: int;
  var {:scalar} sdv_506: int;
  var {:scalar} queued: int;
  var {:scalar} Tmp_1557: int;
  var {:pointer} sdv_507: int;
  var {:pointer} srb_4: int;
  var {:scalar} Tmp_1558: int;
  var {:pointer} Tmp_1559: int;
  var {:pointer} deviceExtension_4: int;
  var {:scalar} Tmp_1560: int;
  var {:pointer} irpStack_10: int;
  var {:pointer} deferredIrp_2: int;
  var {:scalar} Tmp_1561: int;
  var {:scalar} Tmp_1562: int;
  var {:pointer} Tmp_1563: int;
  var {:pointer} sdv_508: int;
  var {:scalar} Tmp_1564: int;
  var {:pointer} Tmp_1565: int;
  var {:pointer} Tmp_1567: int;
  var {:pointer} Tmp_1568: int;
  var {:pointer} context: int;
  var {:scalar} Tmp_1569: int;
  var {:pointer} Tmp_1570: int;
  var {:pointer} Tmp_1571: int;
  var {:scalar} sdv_510: int;
  var {:scalar} sdv_511: int;
  var {:scalar} Tmp_1572: int;
  var {:scalar} Tmp_1573: int;
  var {:pointer} Tmp_1574: int;
  var {:scalar} Tmp_1575: int;
  var {:pointer} Tmp_1576: int;
  var {:pointer} Tmp_1577: int;
  var {:pointer} sdv_512: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} Tmp_1578: int;
  var {:pointer} Tmp_1579: int;
  var {:pointer} Tmp_1580: int;
  var {:pointer} Tmp_1581: int;
  var {:scalar} Tmp_1582: int;
  var {:pointer} Tmp_1583: int;
  var {:pointer} Tmp_1584: int;
  var {:pointer} Tmp_1585: int;
  var {:scalar} Tmp_1586: int;
  var {:scalar} status_42: int;
  var {:pointer} entry_2: int;
  var {:pointer} Tmp_1587: int;
  var {:pointer} Tmp_1588: int;
  var {:scalar} sdv_513: int;
  var {:pointer} queue_2: int;
  var {:scalar} state_1: int;
  var {:pointer} Tmp_1589: int;
  var {:pointer} DeviceObject_24: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_422: int;
  var vslice_dummy_var_423: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_427: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_1197: int;
  var vslice_dummy_var_1198: int;
  var vslice_dummy_var_1199: int;
  var vslice_dummy_var_1200: int;
  var vslice_dummy_var_1201: int;
  var vslice_dummy_var_1202: int;
  var vslice_dummy_var_1203: int;
  var vslice_dummy_var_1204: int;
  var vslice_dummy_var_1205: int;
  var vslice_dummy_var_1206: int;

  anon0:
    call {:si_unique_call 2654} vslice_dummy_var_422 := __HAVOC_malloc(4);
    call {:si_unique_call 2655} context := __HAVOC_malloc(4);
    call {:si_unique_call 2656} state_1 := __HAVOC_malloc(8);
    DeviceObject_24 := actual_DeviceObject_24;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 2657} Tmp_1543 := __HAVOC_malloc(4);
    call {:si_unique_call 2658} Tmp_1544 := __HAVOC_malloc(4);
    call {:si_unique_call 2659} Tmp_1548 := __HAVOC_malloc(4);
    call {:si_unique_call 2660} Tmp_1553 := __HAVOC_malloc(4);
    call {:si_unique_call 2661} Tmp_1555 := __HAVOC_malloc(4);
    call {:si_unique_call 2662} Tmp_1556 := __HAVOC_malloc(4);
    call {:si_unique_call 2663} Tmp_1565 := __HAVOC_malloc(4);
    call {:si_unique_call 2664} Tmp_1567 := __HAVOC_malloc(4);
    call {:si_unique_call 2665} Tmp_1570 := __HAVOC_malloc(4);
    call {:si_unique_call 2666} Tmp_1578 := __HAVOC_malloc(4);
    call {:si_unique_call 2667} Tmp_1583 := __HAVOC_malloc(4);
    call {:si_unique_call 2668} Tmp_1584 := __HAVOC_malloc(4);
    call {:si_unique_call 2669} Tmp_1585 := __HAVOC_malloc(4);
    call {:si_unique_call 2670} Tmp_1587 := __HAVOC_malloc(4);
    call {:si_unique_call 2671} Tmp_1588 := __HAVOC_malloc(4);
    call {:si_unique_call 2672} irpStack_10 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    deviceExtension_4 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_24)];
    assume {:nonnull} irpStack_10 != 0;
    assume irpStack_10 > 0;
    havoc srb_4;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    call {:si_unique_call 2673} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2674} Sbp2AddLog(deviceExtension_4, 64, -747353745, Irp_16, srb_4);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    goto L24;

  L24:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    call {:si_unique_call 2675} sdv_KeReleaseSpinLockFromDpcLevel(0);
    status_42 := -1073741632;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2676} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:partition} yogi_error != 1;
    goto L456;

  L456:
    call {:si_unique_call 2677} sdv_IoCompleteRequest(0, 0);
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1548;
    assume {:nonnull} Tmp_1548 != 0;
    assume Tmp_1548 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    havoc Tmp_1580;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1572;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc vslice_dummy_var_1197;
    call {:si_unique_call 2678} WPP_SF_qqD(Tmp_1572, 23, Tmp_1580, deviceExtension_4, Irp_16, vslice_dummy_var_1197);
    goto L39;

  L39:
    call {:si_unique_call 2679} Sbp2StartNextPacketByKey#0(DeviceObject_24, 0);
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2680} vslice_dummy_var_423 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon241_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon184_Then:
    goto L39;

  anon240_Then:
    goto L39;

  anon183_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L39;

  anon239_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon238_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L456;

  anon181_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    call {:si_unique_call 2681} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1543;
    assume {:nonnull} Tmp_1543 != 0;
    assume Tmp_1543 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    havoc Tmp_1563;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1554;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1198;
    havoc vslice_dummy_var_1199;
    call {:si_unique_call 2682} WPP_SF_qqqDD(Tmp_1554, 25, Tmp_1563, DeviceObject_24, Irp_16, srb_4, vslice_dummy_var_1198, vslice_dummy_var_1199);
    goto L67;

  L67:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto L76;

  L76:
    call {:si_unique_call 2683} Create1394TransactionForSrb#1(deviceExtension_4, srb_4, context);
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon243_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon187_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    havoc Tmp_1581;
    assume {:nonnull} Tmp_1581 != 0;
    assume Tmp_1581 > 0;
    goto L76;

  anon189_Then:
    goto L76;

  anon188_Then:
    goto L67;

  anon242_Then:
    goto L67;

  anon186_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon185_Then:
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1200;
    call {:si_unique_call 2684} sdv_510 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1200);
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:partition} sdv_510 == 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1588;
    assume {:nonnull} Tmp_1588 != 0;
    assume Tmp_1588 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc Tmp_1579;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1546;
    call {:si_unique_call 2685} WPP_SF_qq(Tmp_1546, 24, Tmp_1579, deviceExtension_4, Irp_16);
    goto L87;

  L87:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2686} vslice_dummy_var_426 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2687} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:partition} yogi_error != 1;
    goto L459;

  L459:
    call {:si_unique_call 2688} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon245_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon193_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L459;

  anon192_Then:
    goto L87;

  anon244_Then:
    goto L87;

  anon191_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L87;

  anon190_Then:
    assume {:partition} sdv_510 != 0;
    goto L1;

  anon182_Then:
    call {:si_unique_call 2689} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1201;
    call {:si_unique_call 2690} queued := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1201);
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} queued == 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1570;
    assume {:nonnull} Tmp_1570 != 0;
    assume Tmp_1570 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    havoc Tmp_1550;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1586;
    call {:si_unique_call 2691} WPP_SF_qq(Tmp_1586, 26, Tmp_1550, deviceExtension_4, Irp_16);
    goto L215;

  L215:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2692} sdv_502 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto L116;

  L116:
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1544;
    assume {:nonnull} Tmp_1544 != 0;
    assume Tmp_1544 > 0;
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    Tmp_1582 := queued;
    havoc Tmp_1571;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1560;
    call {:si_unique_call 2693} WPP_SF_qDq(Tmp_1560, 27, Tmp_1571, deviceExtension_4, Tmp_1582, Irp_16);
    goto L117;

  L117:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1555;
    assume {:nonnull} Tmp_1555 != 0;
    assume Tmp_1555 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} state_1 != 0;
    assume state_1 > 0;
    havoc Tmp_1557;
    havoc Tmp_1589;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1562;
    call {:si_unique_call 2694} WPP_SF_qd(Tmp_1562, 28, Tmp_1589, deviceExtension_4, Tmp_1557);
    goto L130;

  L130:
    call {:si_unique_call 2695} status_42 := PoRequestPowerIrp(0, 2, state_1, 0, 0, 0);
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} status_42 < 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1585;
    assume {:nonnull} Tmp_1585 != 0;
    assume Tmp_1585 > 0;
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    havoc Tmp_1552;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1573;
    call {:si_unique_call 2696} WPP_SF_qD(Tmp_1573, 29, Tmp_1552, deviceExtension_4, status_42);
    goto L148;

  L148:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} queued == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2697} sdv_507 := _InlineInterlockedCompareExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), 0, Irp_16);
    deferredIrp_2 := sdv_507;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:partition} deferredIrp_2 != Irp_16;
    Irp_16 := 0;
    goto L181;

  L181:
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} Irp_16 == 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1553;
    assume {:nonnull} Tmp_1553 != 0;
    assume Tmp_1553 > 0;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_1577;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1545;
    call {:si_unique_call 2698} WPP_SF_q(Tmp_1545, 30, Tmp_1577, deviceExtension_4);
    goto L1;

  anon209_Then:
    goto L1;

  anon254_Then:
    goto L1;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon207_Then:
    assume {:partition} Irp_16 != 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2699} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon252_Then, anon252_Else;

  anon252_Else:
    assume {:partition} yogi_error != 1;
    goto L462;

  L462:
    call {:si_unique_call 2700} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2701} Sbp2StartNextPacketByKey#0(DeviceObject_24, 0);
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2702} vslice_dummy_var_425 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto L1;

  anon253_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon252_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon251_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L462;

  anon255_Then:
    assume {:partition} deferredIrp_2 == Irp_16;
    goto L181;

  anon203_Then:
    assume {:partition} queued != 0;
    qIrp := 0;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    queue_2 := DeviceQueue__DEVICE_OBJECT(DeviceObject_24);
    call {:si_unique_call 2703} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} queue_2 != 0;
    assume queue_2 > 0;
    havoc entry_2;
    goto L166;

  L166:
    call {:si_unique_call 2704} qIrp, sdv_512, entry_2 := Sbp2StartIo#1_loop_L166(qIrp, sdv_512, entry_2, Irp_16);
    goto L166_last;

  L166_last:
    goto anon205_Then, anon205_Else;

  anon205_Else:
    call {:si_unique_call 2705} sdv_512 := sdv_containing_record(entry_2, 64);
    qIrp := sdv_512;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:partition} qIrp == Irp_16;
    call {:si_unique_call 2706} vslice_dummy_var_424 := sdv_RemoveEntryList(0);
    goto L167;

  L167:
    call {:si_unique_call 2707} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} qIrp != Irp_16;
    Irp_16 := 0;
    goto L181;

  anon206_Then:
    assume {:partition} qIrp == Irp_16;
    goto L181;

  anon250_Then:
    assume {:partition} qIrp != Irp_16;
    assume {:nonnull} entry_2 != 0;
    assume entry_2 > 0;
    havoc entry_2;
    goto anon250_Then_dummy;

  anon250_Then_dummy:
    assume false;
    return;

  anon205_Then:
    goto L167;

  anon204_Then:
    goto L148;

  anon249_Then:
    goto L148;

  anon202_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L148;

  anon201_Then:
    assume {:partition} 0 <= status_42;
    goto L1;

  anon200_Then:
    goto L130;

  anon248_Then:
    goto L130;

  anon247_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L130;

  anon199_Then:
    goto L117;

  anon246_Then:
    goto L117;

  anon198_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L117;

  anon211_Then:
    goto L215;

  anon256_Then:
    goto L215;

  anon210_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L215;

  anon197_Then:
    assume {:partition} queued != 0;
    goto L116;

  anon196_Then:
    goto L103;

  L103:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    call {:si_unique_call 2708} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1202;
    call {:si_unique_call 2709} sdv_501 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1202);
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} sdv_501 != 0;
    goto L238;

  L238:
    call {:si_unique_call 2710} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1584;
    assume {:nonnull} Tmp_1584 != 0;
    assume Tmp_1584 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    havoc Tmp_1541;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1575;
    call {:si_unique_call 2711} WPP_SF_qq(Tmp_1575, 31, Tmp_1541, deviceExtension_4, Irp_16);
    goto L1;

  anon215_Then:
    goto L1;

  anon257_Then:
    goto L1;

  anon214_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon213_Then:
    assume {:partition} sdv_501 == 0;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1203;
    call {:si_unique_call 2712} sdv_513 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1203);
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:partition} sdv_513 == 0;
    call {:si_unique_call 2713} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1567;
    assume {:nonnull} Tmp_1567 != 0;
    assume Tmp_1567 > 0;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    havoc Tmp_1559;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1561;
    call {:si_unique_call 2714} WPP_SF_qq(Tmp_1561, 32, Tmp_1559, deviceExtension_4, Irp_16);
    goto L261;

  L261:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2715} vslice_dummy_var_427 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2716} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:partition} yogi_error != 1;
    goto L465;

  L465:
    call {:si_unique_call 2717} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon259_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon219_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L465;

  anon218_Then:
    goto L261;

  anon258_Then:
    goto L261;

  anon217_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L261;

  anon216_Then:
    assume {:partition} sdv_513 != 0;
    goto L238;

  anon195_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    goto L279;

  L279:
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1204;
    call {:si_unique_call 2718} sdv_511 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1204);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume {:partition} sdv_511 == 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2719} sdv_508 := _InlineInterlockedExchangePointer(PowerDeferredIrp__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1556;
    assume {:nonnull} Tmp_1556 != 0;
    assume Tmp_1556 > 0;
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon225_Then, anon225_Else;

  anon225_Else:
    havoc Tmp_1551;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1558;
    call {:si_unique_call 2720} WPP_SF_q(Tmp_1558, 33, Tmp_1551, Irp_16);
    goto L1;

  anon225_Then:
    goto L1;

  anon262_Then:
    goto L1;

  anon261_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon222_Then:
    assume {:partition} sdv_511 != 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1587;
    assume {:nonnull} Tmp_1587 != 0;
    assume Tmp_1587 > 0;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon224_Then, anon224_Else;

  anon224_Else:
    havoc Tmp_1574;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1569;
    call {:si_unique_call 2721} WPP_SF_q(Tmp_1569, 34, Tmp_1574, Irp_16);
    goto L1;

  anon224_Then:
    goto L1;

  anon260_Then:
    goto L1;

  anon223_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon221_Then:
    goto L277;

  L277:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    goto L279;

  anon220_Then:
    goto L67;

  anon212_Then:
    goto L277;

  anon194_Then:
    goto L103;

  anon179_Then:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2722} sdv_505 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    oldIrp_1 := sdv_505;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1565;
    assume {:nonnull} Tmp_1565 != 0;
    assume Tmp_1565 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    havoc Tmp_1568;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1540;
    call {:si_unique_call 2723} WPP_SF_qqq(Tmp_1540, 20, Tmp_1568, deviceExtension_4, Irp_16, oldIrp_1);
    goto L327;

  L327:
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto L338;

  L338:
    call {:si_unique_call 2724} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L1;

  anon229_Then:
    call {:si_unique_call 2725} Sbp2SetDeferLoginTimer(deviceExtension_4);
    goto L338;

  anon230_Then:
    goto L327;

  anon264_Then:
    goto L327;

  anon263_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L327;

  anon228_Then:
    goto L314;

  L314:
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1205;
    call {:si_unique_call 2726} sdv_499 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1205);
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:partition} sdv_499 != 0;
    goto L346;

  L346:
    call {:si_unique_call 2727} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1583;
    assume {:nonnull} Tmp_1583 != 0;
    assume Tmp_1583 > 0;
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    havoc Tmp_1576;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1564;
    call {:si_unique_call 2728} WPP_SF_qq(Tmp_1564, 21, Tmp_1576, deviceExtension_4, Irp_16);
    goto L1;

  anon233_Then:
    goto L1;

  anon265_Then:
    goto L1;

  anon232_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L1;

  anon231_Then:
    assume {:partition} sdv_499 == 0;
    assume {:nonnull} DeviceObject_24 != 0;
    assume DeviceObject_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    havoc vslice_dummy_var_1206;
    call {:si_unique_call 2729} sdv_506 := Sbp2InsertByKeyDeviceQueue(DeviceQueue__DEVICE_OBJECT(DeviceObject_24), DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_16))), vslice_dummy_var_1206);
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} sdv_506 == 0;
    call {:si_unique_call 2730} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1578;
    assume {:nonnull} Tmp_1578 != 0;
    assume Tmp_1578 > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    havoc Tmp_1547;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1549;
    call {:si_unique_call 2731} WPP_SF_qq(Tmp_1549, 22, Tmp_1547, deviceExtension_4, Irp_16);
    goto L369;

  L369:
    assume {:nonnull} srb_4 != 0;
    assume srb_4 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    assume {:nonnull} deviceExtension_4 != 0;
    assume deviceExtension_4 > 0;
    call {:si_unique_call 2732} vslice_dummy_var_428 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_4), Irp_16);
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume Irp_16 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2733} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} yogi_error != 1;
    goto L468;

  L468:
    call {:si_unique_call 2734} sdv_IoCompleteRequest(0, 0);
    goto L1;

  anon267_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon237_Then:
    assume !(Irp_16 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L468;

  anon236_Then:
    goto L369;

  anon266_Then:
    goto L369;

  anon235_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L369;

  anon234_Then:
    assume {:partition} sdv_506 != 0;
    goto L346;

  anon227_Then:
    goto L314;

  anon226_Then:
    goto L24;

  anon180_Then:
    goto L24;
}



procedure {:origName "Sbp2StartIo"} Sbp2StartIo#1(actual_DeviceObject_24: int, actual_Irp_16: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int)
{
  var {:pointer} Tmp_1521: int;
  var {:pointer} Tmp_1522: int;
  var {:pointer} Tmp_1523: int;
  var {:pointer} Tmp_1524: int;
  var {:pointer} Tmp_1525: int;
  var {:pointer} sdv_490: int;
  var {:scalar} orbLock_7: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_1526: int;
  var {:scalar} Tmp_1527: int;
  var {:pointer} callbackContext: int;
  var {:scalar} Tmp_1528: int;
  var {:pointer} Tmp_1529: int;
  var {:pointer} sdv_494: int;
  var {:pointer} Tmp_1530: int;
  var {:scalar} sdv_495: int;
  var {:pointer} Tmp_1531: int;
  var {:scalar} Tmp_1532: int;
  var {:pointer} Tmp_1533: int;
  var {:pointer} irp_3: int;
  var {:scalar} Tmp_1534: int;
  var {:scalar} Tmp_1535: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_1536: int;
  var {:scalar} status_41: int;
  var {:pointer} Tmp_1537: int;
  var {:pointer} Tmp_1538: int;
  var {:pointer} Tmp_1539: int;
  var {:pointer} PdoExtension_20: int;
  var {:pointer} Srb_1: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_1207: int;
  var vslice_dummy_var_1208: int;
  var vslice_dummy_var_1209: int;

  anon0:
    call {:si_unique_call 2735} vslice_dummy_var_429 := __HAVOC_malloc(4);
    call {:si_unique_call 2736} orbLock_7 := __HAVOC_malloc(12);
    PdoExtension_20 := actual_PdoExtension_20;
    Srb_1 := actual_Srb_1;
    RequestContext := actual_RequestContext;
    call {:si_unique_call 2737} Tmp_1525 := __HAVOC_malloc(4);
    call {:si_unique_call 2738} Tmp_1529 := __HAVOC_malloc(4);
    call {:si_unique_call 2739} Tmp_1530 := __HAVOC_malloc(4);
    call {:si_unique_call 2740} Tmp_1531 := __HAVOC_malloc(4);
    call {:si_unique_call 2741} Tmp_1536 := __HAVOC_malloc(4);
    status_41 := 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    call {:si_unique_call 2742} sdv_490 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_490;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} callbackContext == 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1531;
    assume {:nonnull} Tmp_1531 != 0;
    assume Tmp_1531 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    havoc Tmp_1533;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1527;
    call {:si_unique_call 2743} WPP_SF_q(Tmp_1527, 35, Tmp_1533, PdoExtension_20);
    goto L179;

  L179:
    status_41 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_1207;
    call {:si_unique_call 2744} Sbp2CreateRequestErrorLog(vslice_dummy_var_1207, 0, 1053, status_41);
    goto L124;

  L124:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} status_41 != 259;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_41 != 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2745} vslice_dummy_var_433 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto L131;

  L131:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_3;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume irp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2746} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} yogi_error != 1;
    goto L220;

  L220:
    call {:si_unique_call 2747} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume false;
    return;

  anon99_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon98_Then:
    assume !(irp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L220;

  anon82_Then:
    assume {:partition} callbackContext == 0;
    goto L131;

  anon81_Then:
    assume {:partition} status_41 == 0;
    call {:si_unique_call 2748} Sbp2InsertTailList#0(PdoExtension_20, callbackContext);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  anon101_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:partition} status_41 == 259;
    goto L1;

  anon88_Then:
    goto L179;

  anon105_Then:
    goto L179;

  anon87_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L179;

  anon89_Then:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 2749} sdv_494 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_494;
    call {:si_unique_call 2750} AcquireOrbListLock(PdoExtension_20, orbLock_7, 1);
    call {:si_unique_call 2751} Tmp_1523 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1523 != 0;
    assume Tmp_1523 > 0;
    call {:si_unique_call 2752} sdv_495 := sdv_InterlockedIncrement(Tmp_1523);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1523 != 0;
    assume Tmp_1523 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2753} ReleaseOrbListLock(PdoExtension_20, orbLock_7, 1);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2754} status_41 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_41 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2755} vslice_dummy_var_432 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_41 < 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1536;
    assume {:nonnull} Tmp_1536 != 0;
    assume Tmp_1536 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_1538;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1535;
    call {:si_unique_call 2756} WPP_SF_(Tmp_1535, 37, Tmp_1538);
    goto L72;

  L72:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1526;
    assume {:nonnull} Tmp_1526 != 0;
    assume Tmp_1526 > 0;
    goto L59;

  L59:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_3;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume irp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2757} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} yogi_error != 1;
    goto L217;

  L217:
    call {:si_unique_call 2758} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume false;
    return;

  anon91_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon90_Then:
    assume !(irp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L217;

  anon74_Then:
    goto L72;

  anon93_Then:
    goto L72;

  anon73_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L72;

  anon72_Then:
    assume {:partition} 0 <= status_41;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1521;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    goto L59;

  anon71_Then:
    assume {:partition} status_41 == 259;
    status_41 := 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1522;
    assume {:nonnull} Tmp_1522 != 0;
    assume Tmp_1522 > 0;
    havoc requestMdl;
    call {:si_unique_call 2759} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_1208;
    call {:si_unique_call 2760} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_1208, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc vslice_dummy_var_1209;
    call {:si_unique_call 2761} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_1209);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1530;
    assume {:nonnull} Tmp_1530 != 0;
    assume Tmp_1530 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    havoc Tmp_1537;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1532;
    call {:si_unique_call 2762} WPP_SF_q(Tmp_1532, 39, Tmp_1537, requestMdl);
    goto L108;

  L108:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2763} status_41 := Sbp2BusMapTransfer#0(PdoExtension_20, callbackContext);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} yogi_error != 1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} status_41 < 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1529;
    assume {:nonnull} Tmp_1529 != 0;
    assume Tmp_1529 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_1524;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1534;
    call {:si_unique_call 2764} WPP_SF_D(Tmp_1534, 40, Tmp_1524, status_41);
    goto L152;

  L152:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    call {:si_unique_call 2765} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L124;

  anon84_Then:
    goto L124;

  anon85_Then:
    goto L152;

  anon102_Then:
    goto L152;

  anon83_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon79_Then:
    assume {:partition} 0 <= status_41;
    goto L124;

  anon97_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    goto L108;

  anon96_Then:
    goto L108;

  anon95_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L108;

  anon77_Then:
    status_41 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1525;
    assume {:nonnull} Tmp_1525 != 0;
    assume Tmp_1525 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    havoc Tmp_1539;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1528;
    call {:si_unique_call 2766} WPP_SF_(Tmp_1528, 38, Tmp_1539);
    goto L124;

  anon86_Then:
    goto L124;

  anon104_Then:
    goto L124;

  anon103_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L124;

  anon76_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L108;

  anon75_Then:
    goto L83;

  L83:
    call {:si_unique_call 2767} Sbp2InitializeOrb(PdoExtension_20, callbackContext);
    goto L124;

  anon94_Then:
    goto L83;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#0(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int)
{
  var {:pointer} Tmp_1521: int;
  var {:pointer} Tmp_1522: int;
  var {:pointer} Tmp_1523: int;
  var {:pointer} Tmp_1524: int;
  var {:pointer} Tmp_1525: int;
  var {:pointer} sdv_490: int;
  var {:scalar} orbLock_7: int;
  var {:pointer} mdlVa: int;
  var {:pointer} Tmp_1526: int;
  var {:scalar} Tmp_1527: int;
  var {:pointer} callbackContext: int;
  var {:scalar} Tmp_1528: int;
  var {:pointer} Tmp_1529: int;
  var {:pointer} sdv_494: int;
  var {:pointer} Tmp_1530: int;
  var {:scalar} sdv_495: int;
  var {:pointer} Tmp_1531: int;
  var {:scalar} Tmp_1532: int;
  var {:pointer} Tmp_1533: int;
  var {:pointer} irp_3: int;
  var {:scalar} Tmp_1534: int;
  var {:scalar} Tmp_1535: int;
  var {:pointer} requestMdl: int;
  var {:pointer} Tmp_1536: int;
  var {:scalar} status_41: int;
  var {:pointer} Tmp_1537: int;
  var {:pointer} Tmp_1538: int;
  var {:pointer} Tmp_1539: int;
  var {:pointer} PdoExtension_20: int;
  var {:pointer} Srb_1: int;
  var {:pointer} RequestContext: int;
  var boogieTmp: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_1210: int;
  var vslice_dummy_var_1211: int;
  var vslice_dummy_var_1212: int;
  var vslice_dummy_var_1213: int;
  var vslice_dummy_var_1214: int;
  var vslice_dummy_var_1215: int;

  anon0:
    call {:si_unique_call 2768} vslice_dummy_var_434 := __HAVOC_malloc(4);
    call {:si_unique_call 2769} orbLock_7 := __HAVOC_malloc(12);
    PdoExtension_20 := actual_PdoExtension_20;
    Srb_1 := actual_Srb_1;
    RequestContext := actual_RequestContext;
    call {:si_unique_call 2770} Tmp_1525 := __HAVOC_malloc(4);
    call {:si_unique_call 2771} Tmp_1529 := __HAVOC_malloc(4);
    call {:si_unique_call 2772} Tmp_1530 := __HAVOC_malloc(4);
    call {:si_unique_call 2773} Tmp_1531 := __HAVOC_malloc(4);
    call {:si_unique_call 2774} Tmp_1536 := __HAVOC_malloc(4);
    status_41 := 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    assume {:nonnull} orbLock_7 != 0;
    assume orbLock_7 > 0;
    call {:si_unique_call 2775} sdv_490 := sdv_ExInterlockedPopEntrySList(0, 0);
    callbackContext := sdv_490;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} callbackContext == 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1531;
    assume {:nonnull} Tmp_1531 != 0;
    assume Tmp_1531 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    havoc Tmp_1533;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1527;
    call {:si_unique_call 2776} WPP_SF_q(Tmp_1527, 35, Tmp_1533, PdoExtension_20);
    goto L179;

  L179:
    status_41 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_1210;
    call {:si_unique_call 2777} Sbp2CreateRequestErrorLog(vslice_dummy_var_1210, 0, 1053, status_41);
    goto L124;

  L124:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} status_41 != 259;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_41 != 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} callbackContext != 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2778} vslice_dummy_var_438 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto L131;

  L131:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_3;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume irp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2779} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} yogi_error != 1;
    goto L220;

  L220:
    call {:si_unique_call 2780} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_1211;
    call {:si_unique_call 2781} Sbp2StartNextPacketByKey#0(vslice_dummy_var_1211, 0);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 2782} vslice_dummy_var_436 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_20), irp_3);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon100_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon99_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon98_Then:
    assume !(irp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L220;

  anon82_Then:
    assume {:partition} callbackContext == 0;
    goto L131;

  anon81_Then:
    assume {:partition} status_41 == 0;
    call {:si_unique_call 2783} Sbp2InsertTailList#1(PdoExtension_20, callbackContext);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon101_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:partition} status_41 == 259;
    goto L1;

  anon88_Then:
    goto L179;

  anon105_Then:
    goto L179;

  anon87_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L179;

  anon89_Then:
    assume {:partition} callbackContext != 0;
    call {:si_unique_call 2784} sdv_494 := sdv_containing_record(callbackContext, 8);
    callbackContext := sdv_494;
    call {:si_unique_call 2785} AcquireOrbListLock(PdoExtension_20, orbLock_7, 1);
    call {:si_unique_call 2786} Tmp_1523 := __HAVOC_malloc(4);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1523 != 0;
    assume Tmp_1523 > 0;
    call {:si_unique_call 2787} sdv_495 := sdv_InterlockedIncrement(Tmp_1523);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} Tmp_1523 != 0;
    assume Tmp_1523 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2788} ReleaseOrbListLock(PdoExtension_20, orbLock_7, 1);
    assume {:nonnull} RequestContext != 0;
    assume RequestContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2789} status_41 := Sbp2_SCSI_RBC_Conversion(callbackContext);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_41 != 259;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2790} vslice_dummy_var_437 := FreeAsyncRequestContext(PdoExtension_20, callbackContext);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_41 < 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1536;
    assume {:nonnull} Tmp_1536 != 0;
    assume Tmp_1536 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    havoc Tmp_1538;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1535;
    call {:si_unique_call 2791} WPP_SF_(Tmp_1535, 37, Tmp_1538);
    goto L72;

  L72:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1526;
    assume {:nonnull} Tmp_1526 != 0;
    assume Tmp_1526 > 0;
    goto L59;

  L59:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc irp_3;
    assume {:nonnull} irp_3 != 0;
    assume irp_3 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume irp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2792} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} yogi_error != 1;
    goto L217;

  L217:
    call {:si_unique_call 2793} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    havoc vslice_dummy_var_1212;
    havoc vslice_dummy_var_1213;
    call {:si_unique_call 2794} Sbp2StartNextPacketByKey#0(vslice_dummy_var_1212, vslice_dummy_var_1213);
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoExtension_20 != 0;
    assume PdoExtension_20 > 0;
    call {:si_unique_call 2795} vslice_dummy_var_435 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(PdoExtension_20), irp_3);
    goto L1;

  anon92_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon91_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon90_Then:
    assume !(irp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L217;

  anon74_Then:
    goto L72;

  anon93_Then:
    goto L72;

  anon73_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L72;

  anon72_Then:
    assume {:partition} 0 <= status_41;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1521;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Tmp_1521 != 0;
    assume Tmp_1521 > 0;
    goto L59;

  anon71_Then:
    assume {:partition} status_41 == 259;
    status_41 := 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc Tmp_1522;
    assume {:nonnull} Tmp_1522 != 0;
    assume Tmp_1522 > 0;
    havoc requestMdl;
    call {:si_unique_call 2796} mdlVa := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc vslice_dummy_var_1214;
    call {:si_unique_call 2797} boogieTmp := IoAllocateMdl(0, vslice_dummy_var_1214, 0, 0, 0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    havoc vslice_dummy_var_1215;
    call {:si_unique_call 2798} IoBuildPartialMdl(0, 0, 0, vslice_dummy_var_1215);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    havoc requestMdl;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1530;
    assume {:nonnull} Tmp_1530 != 0;
    assume Tmp_1530 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    havoc Tmp_1537;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1532;
    call {:si_unique_call 2799} WPP_SF_q(Tmp_1532, 39, Tmp_1537, requestMdl);
    goto L108;

  L108:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    call {:si_unique_call 2800} status_41 := Sbp2BusMapTransfer#1(PdoExtension_20, callbackContext);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} yogi_error != 1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} status_41 < 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1529;
    assume {:nonnull} Tmp_1529 != 0;
    assume Tmp_1529 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    havoc Tmp_1524;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1534;
    call {:si_unique_call 2801} WPP_SF_D(Tmp_1534, 40, Tmp_1524, status_41);
    goto L152;

  L152:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    call {:si_unique_call 2802} IoFreeMdl(0);
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L124;

  anon84_Then:
    goto L124;

  anon85_Then:
    goto L152;

  anon102_Then:
    goto L152;

  anon83_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L152;

  anon79_Then:
    assume {:partition} 0 <= status_41;
    goto L124;

  anon97_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    goto L108;

  anon96_Then:
    goto L108;

  anon95_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L108;

  anon77_Then:
    status_41 := -1073741670;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    assume {:nonnull} Srb_1 != 0;
    assume Srb_1 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1525;
    assume {:nonnull} Tmp_1525 != 0;
    assume Tmp_1525 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    havoc Tmp_1539;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1528;
    call {:si_unique_call 2803} WPP_SF_(Tmp_1528, 38, Tmp_1539);
    goto L124;

  anon86_Then:
    goto L124;

  anon104_Then:
    goto L124;

  anon103_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L124;

  anon76_Then:
    assume {:nonnull} callbackContext != 0;
    assume callbackContext > 0;
    goto L108;

  anon75_Then:
    goto L83;

  L83:
    call {:si_unique_call 2804} Sbp2InitializeOrb(PdoExtension_20, callbackContext);
    goto L124;

  anon94_Then:
    goto L83;
}



procedure {:origName "Create1394TransactionForSrb"} Create1394TransactionForSrb#1(actual_PdoExtension_20: int, actual_Srb_1: int, actual_RequestContext: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_PdoExtension_21: int, actual_Context_10: int)
{
  var {:pointer} Tmp_1744: int;
  var {:pointer} Tmp_1745: int;
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_1746: int;
  var {:pointer} Tmp_1747: int;
  var {:pointer} Tmp_1748: int;
  var {:scalar} Tmp_1749: int;
  var {:pointer} Tmp_1750: int;
  var {:scalar} sdv_538: int;
  var {:scalar} orbLock_9: int;
  var {:pointer} Tmp_1751: int;
  var {:pointer} Tmp_1752: int;
  var {:pointer} Tmp_1753: int;
  var {:pointer} Tmp_1754: int;
  var {:pointer} Tmp_1755: int;
  var {:pointer} Tmp_1756: int;
  var {:pointer} Tmp_1757: int;
  var {:scalar} Tmp_1758: int;
  var {:scalar} sdv_540: int;
  var {:scalar} sdv_544: int;
  var {:scalar} sdv_546: int;
  var {:scalar} Tmp_1759: int;
  var {:scalar} dueTime_3: int;
  var {:pointer} Tmp_1760: int;
  var {:pointer} Tmp_1761: int;
  var {:scalar} Tmp_1762: int;
  var {:scalar} dueTime_4: int;
  var {:pointer} Tmp_1763: int;
  var {:pointer} Tmp_1765: int;
  var {:pointer} Tmp_1766: int;
  var {:scalar} status_46: int;
  var {:pointer} Tmp_1767: int;
  var {:scalar} newAddr: int;
  var {:pointer} Tmp_1768: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_1769: int;
  var {:scalar} sdv_548: int;
  var {:pointer} Tmp_1770: int;
  var {:pointer} PdoExtension_21: int;
  var {:pointer} Context_10: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_440: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_1216: int;

  anon0:
    call {:si_unique_call 2805} orbLock_9 := __HAVOC_malloc(12);
    call {:si_unique_call 2806} dueTime_3 := __HAVOC_malloc(20);
    call {:si_unique_call 2807} dueTime_4 := __HAVOC_malloc(20);
    call {:si_unique_call 2808} newAddr := __HAVOC_malloc(76);
    call {:si_unique_call 2809} vslice_dummy_var_439 := __HAVOC_malloc(4);
    PdoExtension_21 := actual_PdoExtension_21;
    Context_10 := actual_Context_10;
    call {:si_unique_call 2810} Tmp_1746 := __HAVOC_malloc(4);
    call {:si_unique_call 2811} Tmp_1747 := __HAVOC_malloc(4);
    call {:si_unique_call 2812} Tmp_1766 := __HAVOC_malloc(4);
    call {:si_unique_call 2813} Tmp_1768 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1769;
    assume {:nonnull} Tmp_1769 != 0;
    assume Tmp_1769 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc orbListDepth;
    call {:si_unique_call 2814} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1750;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} Tmp_1750 != 0;
    assume Tmp_1750 > 0;
    call {:si_unique_call 2815} sdv_538 := sdv_IsListEmpty(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_538 != 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1748;
    assume {:nonnull} Tmp_1748 != 0;
    assume Tmp_1748 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1751;
    assume {:nonnull} Tmp_1751 != 0;
    assume Tmp_1751 > 0;
    havoc timeOutValue;
    assume {:nonnull} dueTime_3 != 0;
    assume dueTime_3 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    call {:si_unique_call 2816} vslice_dummy_var_443 := KeSetTimer(0, dueTime_3, 0);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2817} vslice_dummy_var_440 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_10));
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1757;
    assume {:nonnull} Tmp_1757 != 0;
    assume Tmp_1757 > 0;
    havoc Tmp_1765;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1761;
    assume {:nonnull} Tmp_1761 != 0;
    assume Tmp_1761 > 0;
    havoc Tmp_1756;
    assume {:nonnull} Tmp_1756 != 0;
    assume Tmp_1756 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1755;
    assume {:nonnull} Tmp_1755 != 0;
    assume Tmp_1755 > 0;
    havoc Tmp_1763;
    assume {:nonnull} Tmp_1763 != 0;
    assume Tmp_1763 > 0;
    call {:si_unique_call 2818} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1747;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_1760;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1749;
    call {:si_unique_call 2819} WPP_SF_q(Tmp_1749, 47, Tmp_1760, Context_10);
    goto L60;

  L60:
    call {:si_unique_call 2820} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2821} status_46 := Sbp2AccessRegister#0(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2822} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2823} Sbp2AddLog(PdoExtension_21, 16, -999144852, Reserved__DEVICE_EXTENSION(PdoExtension_21), 0);
    goto L80;

  L80:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_46 == -1072562032;
    call {:si_unique_call 2824} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 2825} vslice_dummy_var_441 := KeCancelTimer(0);
    assume {:nonnull} dueTime_4 != 0;
    assume dueTime_4 > 0;
    call {:si_unique_call 2826} vslice_dummy_var_444 := KeSetTimer(0, dueTime_4, 0);
    goto L86;

  L86:
    call {:si_unique_call 2827} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} timeOutValue != 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1746;
    assume {:nonnull} Tmp_1746 != 0;
    assume Tmp_1746 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_1754;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1758;
    call {:si_unique_call 2828} WPP_SF_q(Tmp_1758, 49, Tmp_1754, PdoExtension_21);
    goto L99;

  L99:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon63_Then:
    goto L99;

  anon72_Then:
    goto L99;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L99;

  anon61_Then:
    assume {:partition} timeOutValue == 0;
    goto L99;

  anon60_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L86;

  anon59_Then:
    goto L86;

  anon57_Then:
    assume {:partition} status_46 != -1072562032;
    goto L81;

  L81:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume false;
    return;

  anon58_Then:
    goto L1;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    goto L60;

  anon70_Then:
    goto L60;

  anon55_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon54_Then:
    goto L37;

  L37:
    call {:si_unique_call 2829} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1768;
    assume {:nonnull} Tmp_1768 != 0;
    assume Tmp_1768 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_1770;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1759;
    call {:si_unique_call 2830} WPP_SF_q(Tmp_1759, 48, Tmp_1770, Context_10);
    goto L119;

  L119:
    call {:si_unique_call 2831} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2832} status_46 := Sbp2AccessRegister#0(PdoExtension_21, newAddr, 1028);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2833} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 2834} Sbp2AddLog(PdoExtension_21, 32, -814587312, newAddr, Context_10);
    goto L80;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    goto L119;

  anon74_Then:
    goto L119;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L119;

  anon69_Then:
    goto L37;

  anon53_Then:
    assume {:partition} sdv_538 == 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1745;
    assume {:nonnull} Tmp_1745 != 0;
    assume Tmp_1745 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L153;

  L153:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1752;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1753;
    assume {:nonnull} Tmp_1753 != 0;
    assume Tmp_1753 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1767;
    assume {:nonnull} Tmp_1767 != 0;
    assume Tmp_1767 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2835} vslice_dummy_var_445 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_10));
    call {:si_unique_call 2836} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1766;
    assume {:nonnull} Tmp_1766 != 0;
    assume Tmp_1766 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1744;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1762;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_1216;
    call {:si_unique_call 2837} WPP_SF_dq(Tmp_1762, 50, Tmp_1744, vslice_dummy_var_1216, Context_10);
    goto L166;

  L166:
    call {:si_unique_call 2838} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2839} vslice_dummy_var_442 := Sbp2AccessRegister#0(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2840} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L81;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    goto L166;

  anon77_Then:
    goto L166;

  anon67_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L166;

  anon66_Then:
    goto L149;

  L149:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    goto L153;

  anon76_Then:
    goto L149;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#0(actual_PdoExtension_21: int, actual_Context_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_PdoExtension_21: int, actual_Context_10: int)
{
  var {:pointer} Tmp_1744: int;
  var {:pointer} Tmp_1745: int;
  var {:scalar} orbListDepth: int;
  var {:pointer} Tmp_1746: int;
  var {:pointer} Tmp_1747: int;
  var {:pointer} Tmp_1748: int;
  var {:scalar} Tmp_1749: int;
  var {:pointer} Tmp_1750: int;
  var {:scalar} sdv_538: int;
  var {:scalar} orbLock_9: int;
  var {:pointer} Tmp_1751: int;
  var {:pointer} Tmp_1752: int;
  var {:pointer} Tmp_1753: int;
  var {:pointer} Tmp_1754: int;
  var {:pointer} Tmp_1755: int;
  var {:pointer} Tmp_1756: int;
  var {:pointer} Tmp_1757: int;
  var {:scalar} Tmp_1758: int;
  var {:scalar} sdv_540: int;
  var {:scalar} sdv_544: int;
  var {:scalar} sdv_546: int;
  var {:scalar} Tmp_1759: int;
  var {:scalar} dueTime_3: int;
  var {:pointer} Tmp_1760: int;
  var {:pointer} Tmp_1761: int;
  var {:scalar} Tmp_1762: int;
  var {:scalar} dueTime_4: int;
  var {:pointer} Tmp_1763: int;
  var {:pointer} Tmp_1765: int;
  var {:pointer} Tmp_1766: int;
  var {:scalar} status_46: int;
  var {:pointer} Tmp_1767: int;
  var {:scalar} newAddr: int;
  var {:pointer} Tmp_1768: int;
  var {:scalar} timeOutValue: int;
  var {:pointer} prevCtx: int;
  var {:pointer} Tmp_1769: int;
  var {:scalar} sdv_548: int;
  var {:pointer} Tmp_1770: int;
  var {:pointer} PdoExtension_21: int;
  var {:pointer} Context_10: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_1217: int;
  var vslice_dummy_var_1218: int;
  var vslice_dummy_var_1219: int;

  anon0:
    call {:si_unique_call 2841} orbLock_9 := __HAVOC_malloc(12);
    call {:si_unique_call 2842} dueTime_3 := __HAVOC_malloc(20);
    call {:si_unique_call 2843} dueTime_4 := __HAVOC_malloc(20);
    call {:si_unique_call 2844} newAddr := __HAVOC_malloc(76);
    call {:si_unique_call 2845} vslice_dummy_var_446 := __HAVOC_malloc(4);
    PdoExtension_21 := actual_PdoExtension_21;
    Context_10 := actual_Context_10;
    call {:si_unique_call 2846} Tmp_1746 := __HAVOC_malloc(4);
    call {:si_unique_call 2847} Tmp_1747 := __HAVOC_malloc(4);
    call {:si_unique_call 2848} Tmp_1766 := __HAVOC_malloc(4);
    call {:si_unique_call 2849} Tmp_1768 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} orbLock_9 != 0;
    assume orbLock_9 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1769;
    assume {:nonnull} Tmp_1769 != 0;
    assume Tmp_1769 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc orbListDepth;
    call {:si_unique_call 2850} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1750;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} Tmp_1750 != 0;
    assume Tmp_1750 > 0;
    call {:si_unique_call 2851} sdv_538 := sdv_IsListEmpty(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_538 != 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1748;
    assume {:nonnull} Tmp_1748 != 0;
    assume Tmp_1748 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1751;
    assume {:nonnull} Tmp_1751 != 0;
    assume Tmp_1751 > 0;
    havoc timeOutValue;
    assume {:nonnull} dueTime_3 != 0;
    assume dueTime_3 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    call {:si_unique_call 2852} vslice_dummy_var_450 := KeSetTimer(0, dueTime_3, 0);
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2853} vslice_dummy_var_447 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_10));
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1757;
    assume {:nonnull} Tmp_1757 != 0;
    assume Tmp_1757 > 0;
    havoc Tmp_1765;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1765 != 0;
    assume Tmp_1765 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1761;
    assume {:nonnull} Tmp_1761 != 0;
    assume Tmp_1761 > 0;
    havoc Tmp_1756;
    assume {:nonnull} Tmp_1756 != 0;
    assume Tmp_1756 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc Tmp_1755;
    assume {:nonnull} Tmp_1755 != 0;
    assume Tmp_1755 > 0;
    havoc Tmp_1763;
    assume {:nonnull} Tmp_1763 != 0;
    assume Tmp_1763 > 0;
    call {:si_unique_call 2854} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1747;
    assume {:nonnull} Tmp_1747 != 0;
    assume Tmp_1747 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    havoc Tmp_1760;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1749;
    call {:si_unique_call 2855} WPP_SF_q(Tmp_1749, 47, Tmp_1760, Context_10);
    goto L60;

  L60:
    call {:si_unique_call 2856} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2857} status_46 := Sbp2AccessRegister#1(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2858} sdv_KeReleaseSpinLockFromDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2859} Sbp2AddLog(PdoExtension_21, 16, -999144852, Reserved__DEVICE_EXTENSION(PdoExtension_21), 0);
    goto L80;

  L80:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_46 == -1072562032;
    call {:si_unique_call 2860} AcquireOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} timeOutValue > 5;
    call {:si_unique_call 2861} vslice_dummy_var_448 := KeCancelTimer(0);
    assume {:nonnull} dueTime_4 != 0;
    assume dueTime_4 > 0;
    call {:si_unique_call 2862} vslice_dummy_var_451 := KeSetTimer(0, dueTime_4, 0);
    goto L86;

  L86:
    call {:si_unique_call 2863} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} timeOutValue != 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1746;
    assume {:nonnull} Tmp_1746 != 0;
    assume Tmp_1746 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    havoc Tmp_1754;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1758;
    call {:si_unique_call 2864} WPP_SF_q(Tmp_1758, 49, Tmp_1754, PdoExtension_21);
    goto L99;

  L99:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon63_Then:
    goto L99;

  anon72_Then:
    goto L99;

  anon62_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L99;

  anon61_Then:
    assume {:partition} timeOutValue == 0;
    goto L99;

  anon60_Then:
    assume {:partition} 5 >= timeOutValue;
    goto L86;

  anon59_Then:
    goto L86;

  anon57_Then:
    assume {:partition} status_46 != -1072562032;
    goto L81;

  L81:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_1217;
    havoc vslice_dummy_var_1218;
    call {:si_unique_call 2865} Sbp2StartNextPacketByKey#0(vslice_dummy_var_1217, vslice_dummy_var_1218);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon73_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto L1;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    goto L60;

  anon70_Then:
    goto L60;

  anon55_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L60;

  anon54_Then:
    goto L37;

  L37:
    call {:si_unique_call 2866} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1768;
    assume {:nonnull} Tmp_1768 != 0;
    assume Tmp_1768 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    havoc Tmp_1770;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1759;
    call {:si_unique_call 2867} WPP_SF_q(Tmp_1759, 48, Tmp_1770, Context_10);
    goto L119;

  L119:
    call {:si_unique_call 2868} sdv_KeAcquireSpinLockAtDpcLevel(0);
    call {:si_unique_call 2869} status_46 := Sbp2AccessRegister#1(PdoExtension_21, newAddr, 1028);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2870} sdv_KeReleaseSpinLockFromDpcLevel(0);
    call {:si_unique_call 2871} Sbp2AddLog(PdoExtension_21, 32, -814587312, newAddr, Context_10);
    goto L80;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    goto L119;

  anon74_Then:
    goto L119;

  anon64_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L119;

  anon69_Then:
    goto L37;

  anon53_Then:
    assume {:partition} sdv_538 == 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    havoc Tmp_1745;
    assume {:nonnull} Tmp_1745 != 0;
    assume Tmp_1745 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    goto L153;

  L153:
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1752;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} Tmp_1752 != 0;
    assume Tmp_1752 > 0;
    assume {:nonnull} newAddr != 0;
    assume newAddr > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1753;
    assume {:nonnull} Tmp_1753 != 0;
    assume Tmp_1753 > 0;
    assume {:nonnull} prevCtx != 0;
    assume prevCtx > 0;
    havoc Tmp_1767;
    assume {:nonnull} Tmp_1767 != 0;
    assume Tmp_1767 > 0;
    assume {:nonnull} Context_10 != 0;
    assume Context_10 > 0;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2872} vslice_dummy_var_452 := sdv_InsertTailList(PendingOrbList__DEVICE_EXTENSION(PdoExtension_21), OrbList__ASYNC_REQUEST_CONTEXT(Context_10));
    call {:si_unique_call 2873} ReleaseOrbListLock(PdoExtension_21, orbLock_9, 1);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1766;
    assume {:nonnull} Tmp_1766 != 0;
    assume Tmp_1766 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    havoc Tmp_1744;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1762;
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc vslice_dummy_var_1219;
    call {:si_unique_call 2874} WPP_SF_dq(Tmp_1762, 50, Tmp_1744, vslice_dummy_var_1219, Context_10);
    goto L166;

  L166:
    call {:si_unique_call 2875} sdv_KeAcquireSpinLockAtDpcLevel(0);
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    call {:si_unique_call 2876} vslice_dummy_var_449 := Sbp2AccessRegister#1(PdoExtension_21, Reserved__DEVICE_EXTENSION(PdoExtension_21), 1032);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2877} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto L81;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon68_Then:
    goto L166;

  anon77_Then:
    goto L166;

  anon67_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L166;

  anon66_Then:
    goto L149;

  L149:
    assume {:nonnull} PdoExtension_21 != 0;
    assume PdoExtension_21 > 0;
    havoc prevCtx;
    goto L153;

  anon76_Then:
    goto L149;
}



procedure {:origName "Sbp2InsertTailList"} Sbp2InsertTailList#1(actual_PdoExtension_21: int, actual_Context_10: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#0(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_625: int)
{
  var {:pointer} PdoExtension_9: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    call {:si_unique_call 2878} Tmp_625 := Sbp2AccessRegisterEx#0(PdoExtension_9, Data, RegisterAndDirection, -1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#0(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_625: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_625 == -1073741632 || Tmp_625 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#1(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_625: int)
{
  var {:pointer} PdoExtension_9: int;
  var {:pointer} Data: int;
  var {:scalar} RegisterAndDirection: int;

  anon0:
    PdoExtension_9 := actual_PdoExtension_9;
    Data := actual_Data;
    RegisterAndDirection := actual_RegisterAndDirection;
    call {:si_unique_call 2879} Tmp_625 := Sbp2AccessRegisterEx#1(PdoExtension_9, Data, RegisterAndDirection, -1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2AccessRegister"} Sbp2AccessRegister#1(actual_PdoExtension_9: int, actual_Data: int, actual_RegisterAndDirection: int) returns (Tmp_625: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#0(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_652: int)
{
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} Tmp_655: int;
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:pointer} Tmp_660: int;
  var {:pointer} Tmp_661: int;
  var {:pointer} Tmp_662: int;
  var {:pointer} Tmp_663: int;
  var {:scalar} sdv_201: int;
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_668: int;
  var {:pointer} Tmp_669: int;
  var {:pointer} Tmp_670: int;
  var {:pointer} sdv_202: int;
  var {:pointer} Tmp_672: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} Tmp_674: int;
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_677: int;
  var {:pointer} Tmp_678: int;
  var {:scalar} sdv_203: int;
  var {:pointer} Tmp_679: int;
  var {:scalar} sdv_205: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:scalar} sdv_206: int;
  var {:pointer} Tmp_682: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:scalar} sdv_207: int;
  var {:pointer} sdv_208: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_687: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:pointer} Tmp_690: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:pointer} Tmp_693: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:scalar} status_18: int;
  var {:pointer} packet_6: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} Tmp_701: int;
  var {:scalar} generation: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:pointer} Tmp_704: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} Tmp_706: int;
  var {:scalar} sdv_210: int;
  var {:pointer} Tmp_708: int;
  var {:pointer} Tmp_709: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Data_1: int;
  var {:scalar} RegisterAndDirection_1: int;
  var {:scalar} Generation_4: int;
  var vslice_dummy_var_1220: int;
  var vslice_dummy_var_1221: int;

  anon0:
    call {:si_unique_call 2880} packet_6 := __HAVOC_malloc(4);
    PdoExtension_12 := actual_PdoExtension_12;
    Data_1 := actual_Data_1;
    RegisterAndDirection_1 := actual_RegisterAndDirection_1;
    Generation_4 := actual_Generation_4;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    bFreeMdl := 0;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_652 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon96_Then:
    call {:si_unique_call 2881} AllocateIrpAndIrb(PdoExtension_12, packet_6);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc generation;
    goto L19;

  L19:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_693;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    goto L23;

  L23:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_687;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_682;
    assume {:nonnull} Tmp_682 != 0;
    assume Tmp_682 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_686;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_708;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    Tmp_657 := Data_1;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    goto L27;

  L27:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_699;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_695;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_672;
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    goto L21;

  L21:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume false;
    return;

  anon74_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume false;
    return;

  anon91_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L27;

  anon92_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    Tmp_658 := Data_1;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    goto L27;

  anon93_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_709;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    goto L27;

  anon94_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_659;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_661;
    assume {:nonnull} Tmp_659 != 0;
    assume Tmp_659 > 0;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    goto L27;

  anon95_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_669;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_654;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_690;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_670;
    assume {:nonnull} Tmp_670 != 0;
    assume Tmp_670 > 0;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    goto L27;

  anon105_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_660;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_656;
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    goto L27;

  anon83_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L21;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    goto L23;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    goto L23;

  anon86_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    goto L23;

  anon87_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    goto L23;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L22;

  L22:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 256) != 0;
    goto L56;

  L56:
    Tmp_655 := Data_1;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_706;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_694;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_702;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    goto L70;

  L70:
    call {:si_unique_call 2882} sdv_208 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_698;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_691;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_666;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon99_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_1220;
    call {:si_unique_call 2883} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_1220);
    Tmp_652 := -1073741670;
    goto L1;

  anon98_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_688;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_662;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    goto L70;

  anon75_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 256) == 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_678;
    assume {:nonnull} Tmp_678 != 0;
    assume Tmp_678 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_701;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    goto L92;

  L92:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_668;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_674;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    call {:si_unique_call 2884} sdv_202 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_677;
    assume {:nonnull} Tmp_677 != 0;
    assume Tmp_677 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_700;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_675;
    assume {:nonnull} Tmp_675 != 0;
    assume Tmp_675 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_673;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_663;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_679;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon104_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_1221;
    call {:si_unique_call 2885} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_1221);
    Tmp_652 := -1073741670;
    goto L1;

  anon103_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_665;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_705;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    goto L92;

  anon76_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    goto L56;

  anon89_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    goto L23;

  anon97_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L22;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Generation_4 != -1;
    generation := Generation_4;
    goto L19;

  anon73_Then:
    assume {:partition} Generation_4 == -1;
    goto L18;

  anon71_Then:
    Tmp_652 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#0(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_652: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_652 == -1073741632 || Tmp_652 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#1(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_652: int)
{
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} Tmp_655: int;
  var {:pointer} Tmp_656: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} Tmp_659: int;
  var {:pointer} Tmp_660: int;
  var {:pointer} Tmp_661: int;
  var {:pointer} Tmp_662: int;
  var {:pointer} Tmp_663: int;
  var {:scalar} sdv_201: int;
  var {:pointer} Tmp_664: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:scalar} bFreeMdl: int;
  var {:pointer} Tmp_668: int;
  var {:pointer} Tmp_669: int;
  var {:pointer} Tmp_670: int;
  var {:pointer} sdv_202: int;
  var {:pointer} Tmp_672: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} Tmp_674: int;
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_677: int;
  var {:pointer} Tmp_678: int;
  var {:scalar} sdv_203: int;
  var {:pointer} Tmp_679: int;
  var {:scalar} sdv_205: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:scalar} sdv_206: int;
  var {:pointer} Tmp_682: int;
  var {:pointer} Tmp_683: int;
  var {:pointer} Tmp_684: int;
  var {:scalar} sdv_207: int;
  var {:pointer} sdv_208: int;
  var {:pointer} Tmp_686: int;
  var {:pointer} Tmp_687: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:pointer} Tmp_690: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} Tmp_692: int;
  var {:pointer} Tmp_693: int;
  var {:pointer} Tmp_694: int;
  var {:pointer} Tmp_695: int;
  var {:pointer} Tmp_697: int;
  var {:pointer} Tmp_698: int;
  var {:scalar} status_18: int;
  var {:pointer} packet_6: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} Tmp_701: int;
  var {:scalar} generation: int;
  var {:pointer} Tmp_702: int;
  var {:pointer} Tmp_703: int;
  var {:pointer} Tmp_704: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} Tmp_706: int;
  var {:scalar} sdv_210: int;
  var {:pointer} Tmp_708: int;
  var {:pointer} Tmp_709: int;
  var {:pointer} PdoExtension_12: int;
  var {:pointer} Data_1: int;
  var {:scalar} RegisterAndDirection_1: int;
  var {:scalar} Generation_4: int;
  var vslice_dummy_var_1222: int;
  var vslice_dummy_var_1223: int;
  var vslice_dummy_var_1224: int;
  var vslice_dummy_var_1225: int;
  var vslice_dummy_var_1226: int;
  var vslice_dummy_var_1227: int;

  anon0:
    call {:si_unique_call 2886} packet_6 := __HAVOC_malloc(4);
    PdoExtension_12 := actual_PdoExtension_12;
    Data_1 := actual_Data_1;
    RegisterAndDirection_1 := actual_RegisterAndDirection_1;
    Generation_4 := actual_Generation_4;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    bFreeMdl := 0;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    Tmp_652 := -1073741632;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon96_Then:
    call {:si_unique_call 2887} AllocateIrpAndIrb(PdoExtension_12, packet_6);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc generation;
    goto L19;

  L19:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_693;
    assume {:nonnull} Tmp_693 != 0;
    assume Tmp_693 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    goto L23;

  L23:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_687;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_682;
    assume {:nonnull} Tmp_682 != 0;
    assume Tmp_682 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_686;
    assume {:nonnull} Tmp_686 != 0;
    assume Tmp_686 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 2;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 8;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 16;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 32;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 64;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 128;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_708;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    Tmp_657 := Data_1;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    goto L27;

  L27:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_699;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_695;
    assume {:nonnull} Tmp_695 != 0;
    assume Tmp_695 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_672;
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_681;
    assume {:nonnull} Tmp_681 != 0;
    assume Tmp_681 > 0;
    goto L21;

  L21:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_1222;
    call {:si_unique_call 2888} status_18 := Sbp2SendRequest#0(PdoExtension_12, vslice_dummy_var_1222, 1);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} yogi_error != 1;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} status_18 >= 0;
    goto L119;

  L119:
    Tmp_652 := status_18;
    goto L1;

  anon77_Then:
    assume {:partition} 0 > status_18;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} 259 != status_18;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_689;
    assume {:nonnull} Tmp_689 != 0;
    assume Tmp_689 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_1223;
    call {:si_unique_call 2889} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_1223);
    goto L119;

  anon101_Then:
    goto L119;

  anon78_Then:
    assume {:partition} 259 == status_18;
    goto L119;

  anon100_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_1224;
    call {:si_unique_call 2890} status_18 := Sbp2SendRequest#0(PdoExtension_12, vslice_dummy_var_1224, 2);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} bFreeMdl != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    call {:si_unique_call 2891} IoFreeMdl(0);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_692;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    goto L126;

  L126:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} status_18 >= 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 512) != 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L136;

  L136:
    Tmp_680 := Data_1;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_680 != 0;
    assume Tmp_680 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    Tmp_697 := Data_1;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_697 != 0;
    assume Tmp_697 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L131;

  L131:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_1225;
    call {:si_unique_call 2892} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_1225);
    goto L119;

  anon90_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 4;
    goto L131;

  anon82_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L136;

  anon81_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 512) == 0;
    goto L131;

  anon80_Then:
    assume {:partition} 0 > status_18;
    goto L131;

  anon79_Then:
    assume {:partition} bFreeMdl == 0;
    goto L126;

  anon102_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon91_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L27;

  anon92_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_703;
    assume {:nonnull} Tmp_703 != 0;
    assume Tmp_703 > 0;
    Tmp_658 := Data_1;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    goto L27;

  anon93_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_709;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    goto L27;

  anon94_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_659;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_661;
    assume {:nonnull} Tmp_659 != 0;
    assume Tmp_659 > 0;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    goto L27;

  anon95_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_669;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_654;
    assume {:nonnull} Tmp_654 != 0;
    assume Tmp_654 > 0;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_690;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_670;
    assume {:nonnull} Tmp_670 != 0;
    assume Tmp_670 > 0;
    assume {:nonnull} Tmp_690 != 0;
    assume Tmp_690 > 0;
    goto L27;

  anon105_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_660;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_656;
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    goto L27;

  anon83_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) != 128;
    goto L21;

  anon84_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 64;
    goto L23;

  anon85_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 32;
    goto L23;

  anon86_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 16;
    goto L23;

  anon87_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 8;
    goto L23;

  anon88_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 4;
    goto L22;

  L22:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 256) != 0;
    goto L56;

  L56:
    Tmp_655 := Data_1;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_664;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_706;
    assume {:nonnull} Tmp_706 != 0;
    assume Tmp_706 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_694;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_702;
    assume {:nonnull} Tmp_694 != 0;
    assume Tmp_694 > 0;
    assume {:nonnull} Tmp_702 != 0;
    assume Tmp_702 > 0;
    goto L70;

  L70:
    call {:si_unique_call 2893} sdv_208 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_698;
    assume {:nonnull} Tmp_698 != 0;
    assume Tmp_698 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_683;
    assume {:nonnull} Tmp_683 != 0;
    assume Tmp_683 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_691;
    assume {:nonnull} Tmp_691 != 0;
    assume Tmp_691 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_666;
    assume {:nonnull} Tmp_666 != 0;
    assume Tmp_666 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_684;
    assume {:nonnull} Tmp_684 != 0;
    assume Tmp_684 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_653;
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon99_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_1226;
    call {:si_unique_call 2894} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_1226);
    Tmp_652 := -1073741670;
    goto L1;

  anon98_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_688;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_662;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    goto L70;

  anon75_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 256) == 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_678;
    assume {:nonnull} Tmp_678 != 0;
    assume Tmp_678 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} BAND(RegisterAndDirection_1, 4) != 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_701;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    goto L92;

  L92:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_668;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_674;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    call {:si_unique_call 2895} sdv_202 := IoAllocateMdl(0, 8, 0, 0, 0);
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_677;
    assume {:nonnull} Tmp_677 != 0;
    assume Tmp_677 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_700;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    bFreeMdl := 1;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_675;
    assume {:nonnull} Tmp_675 != 0;
    assume Tmp_675 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_673;
    assume {:nonnull} Tmp_673 != 0;
    assume Tmp_673 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_663;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_679;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    goto L21;

  anon104_Then:
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc vslice_dummy_var_1227;
    call {:si_unique_call 2896} DeAllocateIrpAndIrb(PdoExtension_12, vslice_dummy_var_1227);
    Tmp_652 := -1073741670;
    goto L1;

  anon103_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 4) == 0;
    assume {:nonnull} packet_6 != 0;
    assume packet_6 > 0;
    havoc Tmp_665;
    assume {:nonnull} PdoExtension_12 != 0;
    assume PdoExtension_12 > 0;
    havoc Tmp_705;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    goto L92;

  anon76_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 1024) != 0;
    goto L56;

  anon89_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 2;
    goto L23;

  anon97_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto L22;

  anon72_Then:
    assume {:partition} BAND(RegisterAndDirection_1, 255) == 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} Generation_4 != -1;
    generation := Generation_4;
    goto L19;

  anon73_Then:
    assume {:partition} Generation_4 == -1;
    goto L18;

  anon71_Then:
    Tmp_652 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2AccessRegisterEx"} Sbp2AccessRegisterEx#1(actual_PdoExtension_12: int, actual_Data_1: int, actual_RegisterAndDirection_1: int, actual_Generation_4: int) returns (Tmp_652: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1772: int)
{
  var {:pointer} Tmp_1773: int;
  var {:scalar} Tmp_1774: int;
  var {:pointer} Tmp_1775: int;
  var {:pointer} Tmp_1776: int;
  var {:scalar} Tmp_1777: int;
  var {:pointer} Tmp_1779: int;
  var {:pointer} CallbackContext_2: int;
  var vslice_dummy_var_1228: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    call {:si_unique_call 2897} Tmp_1775 := __HAVOC_malloc(4);
    call {:si_unique_call 2898} Tmp_1776 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 2899} Sbp2AllocComplete#0(CallbackContext_2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1776;
    assume {:nonnull} Tmp_1776 != 0;
    assume Tmp_1776 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1779;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1777;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    havoc vslice_dummy_var_1228;
    call {:si_unique_call 2900} WPP_SF_qq(Tmp_1777, 43, Tmp_1779, CallbackContext_2, vslice_dummy_var_1228);
    goto L13;

  L13:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1775;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1773;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1774;
    call {:si_unique_call 2901} WPP_SF_q(Tmp_1774, 44, Tmp_1773, CallbackContext_2);
    goto L28;

  L28:
    Tmp_1772 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon20_Then:
    goto L28;

  anon24_Then:
    goto L28;

  anon23_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L28;

  anon18_Then:
    Tmp_1772 := 259;
    goto L1;

  anon19_Then:
    goto L13;

  anon22_Then:
    goto L13;

  anon17_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L13;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#0(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1772: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1772: int)
{
  var {:pointer} Tmp_1773: int;
  var {:scalar} Tmp_1774: int;
  var {:pointer} Tmp_1775: int;
  var {:pointer} Tmp_1776: int;
  var {:scalar} Tmp_1777: int;
  var {:pointer} Tmp_1779: int;
  var {:pointer} CallbackContext_2: int;
  var vslice_dummy_var_1229: int;

  anon0:
    CallbackContext_2 := actual_CallbackContext_2;
    call {:si_unique_call 2902} Tmp_1775 := __HAVOC_malloc(4);
    call {:si_unique_call 2903} Tmp_1776 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    call {:si_unique_call 2904} Sbp2AllocComplete#1(CallbackContext_2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1776;
    assume {:nonnull} Tmp_1776 != 0;
    assume Tmp_1776 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    havoc Tmp_1779;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1777;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    havoc vslice_dummy_var_1229;
    call {:si_unique_call 2905} WPP_SF_qq(Tmp_1777, 43, Tmp_1779, CallbackContext_2, vslice_dummy_var_1229);
    goto L13;

  L13:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    assume {:nonnull} CallbackContext_2 != 0;
    assume CallbackContext_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1775;
    assume {:nonnull} Tmp_1775 != 0;
    assume Tmp_1775 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    havoc Tmp_1773;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1774;
    call {:si_unique_call 2906} WPP_SF_q(Tmp_1774, 44, Tmp_1773, CallbackContext_2);
    goto L28;

  L28:
    Tmp_1772 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon20_Then:
    goto L28;

  anon24_Then:
    goto L28;

  anon23_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L28;

  anon18_Then:
    Tmp_1772 := 259;
    goto L1;

  anon19_Then:
    goto L13;

  anon22_Then:
    goto L13;

  anon17_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L13;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2BusMapTransfer"} Sbp2BusMapTransfer#1(actual_DeviceExtension_11: int, actual_CallbackContext_2: int) returns (Tmp_1772: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int)
{
  var {:pointer} Tmp_1419: int;
  var {:pointer} Tmp_1420: int;
  var {:pointer} Tmp_1421: int;
  var {:pointer} Tmp_1422: int;
  var {:pointer} Tmp_1423: int;
  var {:pointer} Tmp_1424: int;
  var {:pointer} Tmp_1425: int;
  var {:pointer} Tmp_1427: int;
  var {:pointer} Tmp_1428: int;
  var {:pointer} Tmp_1429: int;
  var {:pointer} Tmp_1430: int;
  var {:pointer} Tmp_1431: int;
  var {:scalar} Tmp_1432: int;
  var {:pointer} Tmp_1433: int;
  var {:scalar} Tmp_1434: int;
  var {:pointer} Tmp_1435: int;
  var {:pointer} Tmp_1436: int;
  var {:pointer} Tmp_1437: int;
  var {:pointer} Tmp_1438: int;
  var {:pointer} Tmp_1439: int;
  var {:pointer} Tmp_1440: int;
  var {:pointer} Tmp_1441: int;
  var {:pointer} irp_2: int;
  var {:pointer} Tmp_1443: int;
  var {:pointer} Tmp_1444: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_1445: int;
  var {:pointer} Tmp_1446: int;
  var {:pointer} Tmp_1447: int;
  var {:pointer} srb_3: int;
  var {:pointer} packet_12: int;
  var {:scalar} status_39: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_1448: int;
  var {:scalar} Tmp_1449: int;
  var {:pointer} Tmp_1450: int;
  var {:pointer} Tmp_1451: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_1452: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_1230: int;
  var vslice_dummy_var_1231: int;
  var vslice_dummy_var_1232: int;

  anon0:
    call {:si_unique_call 2907} vslice_dummy_var_453 := __HAVOC_malloc(4);
    call {:si_unique_call 2908} packet_12 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    call {:si_unique_call 2909} Tmp_1435 := __HAVOC_malloc(4);
    call {:si_unique_call 2910} Tmp_1441 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1423;
    assume {:nonnull} Tmp_1423 != 0;
    assume Tmp_1423 > 0;
    deviceExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1423)];
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc routine_2;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1435;
    assume {:nonnull} Tmp_1435 != 0;
    assume Tmp_1435 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    havoc Tmp_1445;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1434;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_1230;
    call {:si_unique_call 2911} WPP_SF_qD(Tmp_1434, 45, Tmp_1445, CallbackContext, vslice_dummy_var_1230);
    goto L18;

  L18:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L32;

  L32:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1446;
    assume {:nonnull} Tmp_1446 != 0;
    assume Tmp_1446 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1444;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1424;
    assume {:nonnull} Tmp_1424 != 0;
    assume Tmp_1424 > 0;
    assume {:nonnull} Tmp_1444 != 0;
    assume Tmp_1444 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1450;
    assume {:nonnull} Tmp_1450 != 0;
    assume Tmp_1450 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1422;
    assume {:nonnull} Tmp_1422 != 0;
    assume Tmp_1422 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1430;
    assume {:nonnull} Tmp_1430 != 0;
    assume Tmp_1430 > 0;
    goto L39;

  L39:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1431;
    assume {:nonnull} Tmp_1431 != 0;
    assume Tmp_1431 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1439;
    assume {:nonnull} Tmp_1439 != 0;
    assume Tmp_1439 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1448;
    assume {:nonnull} Tmp_1448 != 0;
    assume Tmp_1448 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1436;
    assume {:nonnull} Tmp_1436 != 0;
    assume Tmp_1436 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1452;
    assume {:nonnull} Tmp_1452 != 0;
    assume Tmp_1452 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1440;
    assume {:nonnull} Tmp_1440 != 0;
    assume Tmp_1440 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1425;
    assume {:nonnull} Tmp_1425 != 0;
    assume Tmp_1425 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1427;
    assume {:nonnull} Tmp_1427 != 0;
    assume Tmp_1427 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1447;
    assume {:nonnull} Tmp_1447 != 0;
    assume Tmp_1447 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1419;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1420;
    assume {:nonnull} Tmp_1419 != 0;
    assume Tmp_1419 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1428;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1428 != 0;
    assume Tmp_1428 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1429;
    assume {:nonnull} Tmp_1429 != 0;
    assume Tmp_1429 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    assume routine_2 == 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_39 != 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1441;
    assume {:nonnull} Tmp_1441 != 0;
    assume Tmp_1441 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    Tmp_1449 := bDirectCall;
    havoc Tmp_1443;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1432;
    call {:si_unique_call 2912} WPP_SF_qD(Tmp_1432, 46, Tmp_1443, CallbackContext, Tmp_1449);
    goto L62;

  L62:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_1231;
    call {:si_unique_call 2913} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_1231);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb_3;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 2914} vslice_dummy_var_455 := FreeAsyncRequestContext(deviceExtension_3, CallbackContext);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    havoc irp_2;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume irp_2 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2915} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} yogi_error != 1;
    goto L127;

  L127:
    call {:si_unique_call 2916} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    assume false;
    return;

  anon49_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon48_Then:
    assume !(irp_2 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L127;

  anon47_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  L1:
    goto LM2;

  anon40_Then:
    goto L62;

  anon46_Then:
    goto L62;

  anon39_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L62;

  anon38_Then:
    assume {:partition} status_39 == 0;
    goto L1;

  anon45_Then:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1421;
    assume {:nonnull} Tmp_1421 != 0;
    assume Tmp_1421 > 0;
    goto L39;

  anon44_Then:
    call {:si_unique_call 2917} AllocateIrpAndIrb(deviceExtension_3, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 1;
    goto L32;

  anon41_Then:
    goto L1;

  anon35_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1433;
    assume {:nonnull} Tmp_1433 != 0;
    assume Tmp_1433 > 0;
    havoc Tmp_1437;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1437 != 0;
    assume Tmp_1437 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1438;
    assume {:nonnull} Tmp_1438 != 0;
    assume Tmp_1438 > 0;
    havoc Tmp_1451;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1451 != 0;
    assume Tmp_1451 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_1232;
    call {:si_unique_call 2918} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_1232);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 2919} Sbp2InitializeOrb(deviceExtension_3, CallbackContext);
    call {:si_unique_call 2920} Sbp2InsertTailList#0(deviceExtension_3, CallbackContext);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    goto L1;

  anon36_Then:
    goto L18;

  anon43_Then:
    goto L18;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#0(actual_CallbackContext: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int)
{
  var {:pointer} Tmp_1419: int;
  var {:pointer} Tmp_1420: int;
  var {:pointer} Tmp_1421: int;
  var {:pointer} Tmp_1422: int;
  var {:pointer} Tmp_1423: int;
  var {:pointer} Tmp_1424: int;
  var {:pointer} Tmp_1425: int;
  var {:pointer} Tmp_1427: int;
  var {:pointer} Tmp_1428: int;
  var {:pointer} Tmp_1429: int;
  var {:pointer} Tmp_1430: int;
  var {:pointer} Tmp_1431: int;
  var {:scalar} Tmp_1432: int;
  var {:pointer} Tmp_1433: int;
  var {:scalar} Tmp_1434: int;
  var {:pointer} Tmp_1435: int;
  var {:pointer} Tmp_1436: int;
  var {:pointer} Tmp_1437: int;
  var {:pointer} Tmp_1438: int;
  var {:pointer} Tmp_1439: int;
  var {:pointer} Tmp_1440: int;
  var {:pointer} Tmp_1441: int;
  var {:pointer} irp_2: int;
  var {:pointer} Tmp_1443: int;
  var {:pointer} Tmp_1444: int;
  var {:scalar} routine_2: int;
  var {:pointer} Tmp_1445: int;
  var {:pointer} Tmp_1446: int;
  var {:pointer} Tmp_1447: int;
  var {:pointer} srb_3: int;
  var {:pointer} packet_12: int;
  var {:scalar} status_39: int;
  var {:scalar} bDirectCall: int;
  var {:pointer} Tmp_1448: int;
  var {:scalar} Tmp_1449: int;
  var {:pointer} Tmp_1450: int;
  var {:pointer} Tmp_1451: int;
  var {:pointer} deviceExtension_3: int;
  var {:pointer} Tmp_1452: int;
  var {:pointer} CallbackContext: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_457: int;
  var vslice_dummy_var_458: int;
  var vslice_dummy_var_1233: int;
  var vslice_dummy_var_1234: int;
  var vslice_dummy_var_1235: int;
  var vslice_dummy_var_1236: int;

  anon0:
    call {:si_unique_call 2921} vslice_dummy_var_456 := __HAVOC_malloc(4);
    call {:si_unique_call 2922} packet_12 := __HAVOC_malloc(4);
    CallbackContext := actual_CallbackContext;
    call {:si_unique_call 2923} Tmp_1435 := __HAVOC_malloc(4);
    call {:si_unique_call 2924} Tmp_1441 := __HAVOC_malloc(4);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1423;
    assume {:nonnull} Tmp_1423 != 0;
    assume Tmp_1423 > 0;
    deviceExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(Tmp_1423)];
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc routine_2;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1435;
    assume {:nonnull} Tmp_1435 != 0;
    assume Tmp_1435 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    havoc Tmp_1445;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1434;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_1233;
    call {:si_unique_call 2925} WPP_SF_qD(Tmp_1434, 45, Tmp_1445, CallbackContext, vslice_dummy_var_1233);
    goto L18;

  L18:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L32;

  L32:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1446;
    assume {:nonnull} Tmp_1446 != 0;
    assume Tmp_1446 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1444;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1424;
    assume {:nonnull} Tmp_1424 != 0;
    assume Tmp_1424 > 0;
    assume {:nonnull} Tmp_1444 != 0;
    assume Tmp_1444 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1450;
    assume {:nonnull} Tmp_1450 != 0;
    assume Tmp_1450 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1422;
    assume {:nonnull} Tmp_1422 != 0;
    assume Tmp_1422 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1430;
    assume {:nonnull} Tmp_1430 != 0;
    assume Tmp_1430 > 0;
    goto L39;

  L39:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1431;
    assume {:nonnull} Tmp_1431 != 0;
    assume Tmp_1431 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1439;
    assume {:nonnull} Tmp_1439 != 0;
    assume Tmp_1439 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1448;
    assume {:nonnull} Tmp_1448 != 0;
    assume Tmp_1448 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1436;
    assume {:nonnull} Tmp_1436 != 0;
    assume Tmp_1436 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1452;
    assume {:nonnull} Tmp_1452 != 0;
    assume Tmp_1452 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1440;
    assume {:nonnull} Tmp_1440 != 0;
    assume Tmp_1440 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1425;
    assume {:nonnull} Tmp_1425 != 0;
    assume Tmp_1425 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1427;
    assume {:nonnull} Tmp_1427 != 0;
    assume Tmp_1427 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1447;
    assume {:nonnull} Tmp_1447 != 0;
    assume Tmp_1447 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1419;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1420;
    assume {:nonnull} Tmp_1419 != 0;
    assume Tmp_1419 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1428;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1428 != 0;
    assume Tmp_1428 > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1429;
    assume {:nonnull} Tmp_1429 != 0;
    assume Tmp_1429 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    assume routine_2 == 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_39 != 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1441;
    assume {:nonnull} Tmp_1441 != 0;
    assume Tmp_1441 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    Tmp_1449 := bDirectCall;
    havoc Tmp_1443;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1432;
    call {:si_unique_call 2926} WPP_SF_qD(Tmp_1432, 46, Tmp_1443, CallbackContext, Tmp_1449);
    goto L62;

  L62:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc vslice_dummy_var_1234;
    call {:si_unique_call 2927} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_1234);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} bDirectCall == 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc srb_3;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 2928} vslice_dummy_var_458 := FreeAsyncRequestContext(deviceExtension_3, CallbackContext);
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    assume {:nonnull} srb_3 != 0;
    assume srb_3 > 0;
    havoc irp_2;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    assume {:nonnull} irp_2 != 0;
    assume irp_2 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume irp_2 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2929} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} yogi_error != 1;
    goto L127;

  L127:
    call {:si_unique_call 2930} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    havoc vslice_dummy_var_1235;
    call {:si_unique_call 2931} Sbp2StartNextPacketByKey#0(vslice_dummy_var_1235, 0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} deviceExtension_3 != 0;
    assume deviceExtension_3 > 0;
    call {:si_unique_call 2932} vslice_dummy_var_457 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(deviceExtension_3), irp_2);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon50_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon49_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon48_Then:
    assume !(irp_2 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L127;

  anon47_Then:
    assume {:partition} bDirectCall != 0;
    goto L1;

  anon40_Then:
    goto L62;

  anon46_Then:
    goto L62;

  anon39_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L62;

  anon38_Then:
    assume {:partition} status_39 == 0;
    goto L1;

  anon45_Then:
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    havoc Tmp_1421;
    assume {:nonnull} Tmp_1421 != 0;
    assume Tmp_1421 > 0;
    goto L39;

  anon44_Then:
    call {:si_unique_call 2933} AllocateIrpAndIrb(deviceExtension_3, packet_12);
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} packet_12 != 0;
    assume packet_12 > 0;
    bDirectCall := 1;
    goto L32;

  anon41_Then:
    goto L1;

  anon35_Then:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1433;
    assume {:nonnull} Tmp_1433 != 0;
    assume Tmp_1433 > 0;
    havoc Tmp_1437;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1437 != 0;
    assume Tmp_1437 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc Tmp_1438;
    assume {:nonnull} Tmp_1438 != 0;
    assume Tmp_1438 > 0;
    havoc Tmp_1451;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    assume {:nonnull} Tmp_1451 != 0;
    assume Tmp_1451 > 0;
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    havoc vslice_dummy_var_1236;
    call {:si_unique_call 2934} DeAllocateIrpAndIrb(deviceExtension_3, vslice_dummy_var_1236);
    assume {:nonnull} CallbackContext != 0;
    assume CallbackContext > 0;
    call {:si_unique_call 2935} Sbp2InitializeOrb(deviceExtension_3, CallbackContext);
    call {:si_unique_call 2936} Sbp2InsertTailList#1(deviceExtension_3, CallbackContext);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon37_Then:
    goto L1;

  anon36_Then:
    goto L18;

  anon43_Then:
    goto L18;

  anon42_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;
}



procedure {:origName "Sbp2AllocComplete"} Sbp2AllocComplete#1(actual_CallbackContext: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#0(actual_PdoExtension_26: int) returns (Tmp_2411: int)
{
  var {:scalar} i_7: int;
  var {:pointer} Tmp_2412: int;
  var {:pointer} Tmp_2414: int;
  var {:pointer} Tmp_2415: int;
  var {:pointer} deviceObject_3: int;
  var {:scalar} Tmp_2416: int;
  var {:pointer} Tmp_2417: int;
  var {:scalar} orbLock_10: int;
  var {:pointer} context_4: int;
  var {:scalar} Tmp_2418: int;
  var {:scalar} Tmp_2419: int;
  var {:pointer} Tmp_2420: int;
  var {:pointer} oldContext: int;
  var {:pointer} Tmp_2421: int;
  var {:pointer} sdv_786: int;
  var {:pointer} sdv_787: int;
  var {:pointer} Tmp_2422: int;
  var {:pointer} Tmp_2423: int;
  var {:scalar} status_72: int;
  var {:pointer} Tmp_2424: int;
  var {:pointer} Tmp_2425: int;
  var {:pointer} Tmp_2426: int;
  var {:pointer} PdoExtension_26: int;
  var vslice_dummy_var_459: int;

  anon0:
    call {:si_unique_call 2937} orbLock_10 := __HAVOC_malloc(12);
    PdoExtension_26 := actual_PdoExtension_26;
    call {:si_unique_call 2938} Tmp_2414 := __HAVOC_malloc(1856);
    call {:si_unique_call 2939} Tmp_2417 := __HAVOC_malloc(4);
    call {:si_unique_call 2940} Tmp_2424 := __HAVOC_malloc(1856);
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc deviceObject_3;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    Tmp_2411 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon77_Then:
    assume false;
    return;
}



procedure {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#0(actual_PdoExtension_26: int) returns (Tmp_2411: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_2411 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#1(actual_PdoExtension_26: int) returns (Tmp_2411: int)
{
  var {:scalar} i_7: int;
  var {:pointer} Tmp_2412: int;
  var {:pointer} Tmp_2414: int;
  var {:pointer} Tmp_2415: int;
  var {:pointer} deviceObject_3: int;
  var {:scalar} Tmp_2416: int;
  var {:pointer} Tmp_2417: int;
  var {:scalar} orbLock_10: int;
  var {:pointer} context_4: int;
  var {:scalar} Tmp_2418: int;
  var {:scalar} Tmp_2419: int;
  var {:pointer} Tmp_2420: int;
  var {:pointer} oldContext: int;
  var {:pointer} Tmp_2421: int;
  var {:pointer} sdv_786: int;
  var {:pointer} sdv_787: int;
  var {:pointer} Tmp_2422: int;
  var {:pointer} Tmp_2423: int;
  var {:scalar} status_72: int;
  var {:pointer} Tmp_2424: int;
  var {:pointer} Tmp_2425: int;
  var {:pointer} Tmp_2426: int;
  var {:pointer} PdoExtension_26: int;
  var vslice_dummy_var_460: int;

  anon0:
    call {:si_unique_call 2941} orbLock_10 := __HAVOC_malloc(12);
    PdoExtension_26 := actual_PdoExtension_26;
    call {:si_unique_call 2942} Tmp_2414 := __HAVOC_malloc(1856);
    call {:si_unique_call 2943} Tmp_2417 := __HAVOC_malloc(4);
    call {:si_unique_call 2944} Tmp_2424 := __HAVOC_malloc(1856);
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} orbLock_10 != 0;
    assume orbLock_10 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc deviceObject_3;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    Tmp_2411 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon77_Then:
    call {:si_unique_call 2945} CleanupOrbList#0(PdoExtension_26, -1073741248);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 2946} status_72 := Sbp2UpdateNodeInformation#1(PdoExtension_26);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_72 < 0;
    goto L70;

  L70:
    Tmp_2411 := status_72;
    goto L1;

  anon61_Then:
    assume {:partition} 0 <= status_72;
    call {:si_unique_call 2947} status_72 := Sbp2GetControllerInfo#1(PdoExtension_26);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} status_72 < 0;
    goto L70;

  anon62_Then:
    assume {:partition} 0 <= status_72;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto L37;

  L37:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L41;

  L41:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L45;

  L45:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L53;

  L53:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    i_7 := 0;
    goto L56;

  L56:
    call {:si_unique_call 2948} i_7, context_4 := Sbp2InitializeDeviceExtension#1_loop_L56(i_7, context_4, PdoExtension_26);
    goto L56_last;

  L56_last:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} 8 > i_7;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc context_4;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    i_7 := i_7 + 1;
    goto anon67_Else_dummy;

  anon67_Else_dummy:
    assume false;
    return;

  anon67_Then:
    assume {:partition} i_7 >= 8;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L69;

  L69:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2417;
    assume {:nonnull} Tmp_2417 != 0;
    assume Tmp_2417 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    havoc Tmp_2421;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_2418;
    call {:si_unique_call 2949} WPP_SF_q(Tmp_2418, 30, Tmp_2421, PdoExtension_26);
    goto L70;

  anon69_Then:
    goto L70;

  anon83_Then:
    goto L70;

  anon68_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L70;

  anon82_Then:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 2950} status_72 := AllocateSingle1394Address#1(deviceObject_3, Dummy__DEVICE_EXTENSION(PdoExtension_26), 40, 3, DummyContext__DEVICE_EXTENSION(PdoExtension_26));
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} status_72 < 0;
    goto L70;

  anon70_Then:
    assume {:partition} 0 <= status_72;
    goto L69;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon66_Then:
    status_72 := -1073741670;
    goto L70;

  anon81_Then:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 2951} status_72 := AllocateSingle1394Address#1(deviceObject_3, 0, 536, 3, CommonBufferContext__DEVICE_EXTENSION(PdoExtension_26));
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} yogi_error != 1;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_72 >= 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2415;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2415 != 0;
    assume Tmp_2415 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2422;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2422 != 0;
    assume Tmp_2422 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2426;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2426 != 0;
    assume Tmp_2426 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2420;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2420 != 0;
    assume Tmp_2420 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2423;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} Tmp_2423 != 0;
    assume Tmp_2423 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 2952} AcquireOrbListLock(PdoExtension_26, orbLock_10, 0);
    i_7 := 0;
    context_4 := 0;
    goto L105;

  L105:
    call {:si_unique_call 2953} i_7, Tmp_2412, Tmp_2414, Tmp_2416, context_4, Tmp_2419, oldContext, sdv_786, sdv_787, Tmp_2424, Tmp_2425 := Sbp2InitializeDeviceExtension#1_loop_L105(i_7, Tmp_2412, Tmp_2414, Tmp_2416, context_4, Tmp_2419, oldContext, sdv_786, sdv_787, Tmp_2424, Tmp_2425, PdoExtension_26);
    goto L105_last;

  L105_last:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} 8 > i_7;
    oldContext := context_4;
    call {:si_unique_call 2954} sdv_787 := sdv_ExInterlockedPopEntrySList(0, 0);
    context_4 := sdv_787;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} context_4 != 0;
    call {:si_unique_call 2955} sdv_786 := sdv_containing_record(context_4, 8);
    context_4 := sdv_786;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} context_4 != 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    Tmp_2419 := i_7;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2425;
    assume {:nonnull} Tmp_2425 != 0;
    assume Tmp_2425 > 0;
    havoc Tmp_2424;
    assume {:nonnull} Tmp_2424 != 0;
    assume Tmp_2424 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    Tmp_2416 := i_7;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    havoc Tmp_2412;
    assume {:nonnull} Tmp_2412 != 0;
    assume Tmp_2412 > 0;
    havoc Tmp_2414;
    assume {:nonnull} Tmp_2414 != 0;
    assume Tmp_2414 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    assume {:nonnull} context_4 != 0;
    assume context_4 > 0;
    i_7 := i_7 + 1;
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    assume false;
    return;

  anon87_Then:
    assume {:partition} context_4 == 0;
    status_72 := -1073741670;
    call {:si_unique_call 2956} ReleaseOrbListLock(PdoExtension_26, orbLock_10, 0);
    goto L70;

  anon86_Then:
    assume {:partition} context_4 == 0;
    status_72 := -1073741670;
    call {:si_unique_call 2957} ReleaseOrbListLock(PdoExtension_26, orbLock_10, 0);
    goto L70;

  anon72_Then:
    assume {:partition} i_7 >= 8;
    goto L106;

  L106:
    call {:si_unique_call 2958} context_4, oldContext, vslice_dummy_var_460 := Sbp2InitializeDeviceExtension#1_loop_L106(context_4, oldContext, vslice_dummy_var_460);
    goto L106_last;

  L106_last:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} context_4 != 0;
    oldContext := context_4;
    call {:si_unique_call 2959} vslice_dummy_var_460 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    havoc context_4;
    assume {:nonnull} oldContext != 0;
    assume oldContext > 0;
    goto anon73_Else_dummy;

  anon73_Else_dummy:
    assume false;
    return;

  anon73_Then:
    assume {:partition} context_4 == 0;
    call {:si_unique_call 2960} ReleaseOrbListLock(PdoExtension_26, orbLock_10, 0);
    goto L53;

  anon71_Then:
    assume {:partition} 0 > status_72;
    goto L70;

  anon85_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon65_Then:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 2961} status_72 := AllocateAddressForStatus#1(deviceObject_3, GlobalStatusContext__DEVICE_EXTENSION(PdoExtension_26), 8);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} status_72 < 0;
    goto L70;

  anon74_Then:
    assume {:partition} 0 <= status_72;
    goto L45;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 2962} status_72 := AllocateAddressForStatus#1(deviceObject_3, ManagementOrbStatusContext__DEVICE_EXTENSION(PdoExtension_26), 4);
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} yogi_error != 1;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} status_72 < 0;
    goto L70;

  anon75_Then:
    assume {:partition} 0 <= status_72;
    goto L41;

  anon89_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} PdoExtension_26 != 0;
    assume PdoExtension_26 > 0;
    call {:si_unique_call 2963} status_72 := AllocateAddressForStatus#1(deviceObject_3, TaskOrbStatusContext__DEVICE_EXTENSION(PdoExtension_26), 2);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} status_72 < 0;
    goto L70;

  anon76_Then:
    assume {:partition} 0 <= status_72;
    goto L37;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2InitializeDeviceExtension"} Sbp2InitializeDeviceExtension#1(actual_PdoExtension_26: int) returns (Tmp_2411: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#0(actual_DeviceObject_19: int, actual_Context_7: int, actual_StatusType: int) returns (Tmp_1361: int)
{
  var {:pointer} Tmp_1362: int;
  var {:pointer} Tmp_1363: int;
  var {:pointer} Tmp_1364: int;
  var {:pointer} Tmp_1365: int;
  var {:pointer} Tmp_1366: int;
  var {:pointer} Tmp_1367: int;
  var {:pointer} Tmp_1369: int;
  var {:pointer} Tmp_1370: int;
  var {:pointer} Tmp_1371: int;
  var {:pointer} Tmp_1372: int;
  var {:pointer} Tmp_1373: int;
  var {:pointer} Tmp_1374: int;
  var {:pointer} Tmp_1375: int;
  var {:pointer} Tmp_1376: int;
  var {:pointer} Tmp_1377: int;
  var {:pointer} Tmp_1378: int;
  var {:pointer} Tmp_1379: int;
  var {:scalar} status_37: int;
  var {:pointer} packet_11: int;
  var {:pointer} Tmp_1380: int;
  var {:pointer} Tmp_1381: int;
  var {:pointer} Tmp_1382: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} Tmp_1383: int;
  var {:pointer} Tmp_1384: int;
  var {:pointer} Tmp_1385: int;
  var {:pointer} DeviceObject_19: int;
  var {:pointer} Context_7: int;
  var {:scalar} StatusType: int;
  var boogieTmp: int;
  var vslice_dummy_var_1237: int;

  anon0:
    call {:si_unique_call 2964} packet_11 := __HAVOC_malloc(4);
    DeviceObject_19 := actual_DeviceObject_19;
    Context_7 := actual_Context_7;
    StatusType := actual_StatusType;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    deviceExtension_2 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_19)];
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    call {:si_unique_call 2965} AllocateIrpAndIrb(deviceExtension_2, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1377;
    assume {:nonnull} Tmp_1377 != 0;
    assume Tmp_1377 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1371;
    assume {:nonnull} Tmp_1371 != 0;
    assume Tmp_1371 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1366;
    assume {:nonnull} Tmp_1366 != 0;
    assume Tmp_1366 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1373;
    assume {:nonnull} Tmp_1373 != 0;
    assume Tmp_1373 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1378;
    assume {:nonnull} Tmp_1378 != 0;
    assume Tmp_1378 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1367;
    assume {:nonnull} Tmp_1367 != 0;
    assume Tmp_1367 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1372;
    assume {:nonnull} Tmp_1372 != 0;
    assume Tmp_1372 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1363;
    assume {:nonnull} Tmp_1363 != 0;
    assume Tmp_1363 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1381;
    assume {:nonnull} Tmp_1381 != 0;
    assume Tmp_1381 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1374;
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1370;
    assume {:nonnull} Tmp_1370 != 0;
    assume Tmp_1370 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1376;
    assume {:nonnull} Tmp_1376 != 0;
    assume Tmp_1376 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1364;
    assume {:nonnull} Tmp_1364 != 0;
    assume Tmp_1364 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} StatusType != 2;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} StatusType != 4;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusType == 8;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1365;
    assume {:nonnull} Tmp_1365 != 0;
    assume Tmp_1365 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1375;
    assume {:nonnull} Tmp_1375 != 0;
    assume Tmp_1375 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1375 != 0;
    assume Tmp_1375 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1362;
    assume {:nonnull} Tmp_1362 != 0;
    assume Tmp_1362 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1384;
    assume {:nonnull} Tmp_1384 != 0;
    assume Tmp_1384 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto L27;

  L27:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L55;

  L55:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1385;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1383;
    assume {:nonnull} Tmp_1383 != 0;
    assume Tmp_1383 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1369;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1369 != 0;
    assume Tmp_1369 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    assume false;
    return;

  anon20_Then:
    goto L55;

  anon24_Then:
    assume {:partition} StatusType != 8;
    goto L27;

  anon25_Then:
    assume {:partition} StatusType == 4;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1379;
    assume {:nonnull} Tmp_1379 != 0;
    assume Tmp_1379 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 2966} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    status_37 := -1073741670;
    goto L43;

  L43:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_1237;
    call {:si_unique_call 2967} DeAllocateIrpAndIrb(deviceExtension_2, vslice_dummy_var_1237);
    Tmp_1361 := status_37;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon21_Then:
    goto L27;

  anon26_Then:
    assume {:partition} StatusType == 2;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1382;
    assume {:nonnull} Tmp_1382 != 0;
    assume Tmp_1382 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 2968} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    status_37 := -1073741670;
    goto L43;

  anon22_Then:
    goto L27;

  anon19_Then:
    Tmp_1361 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#0(actual_DeviceObject_19: int, actual_Context_7: int, actual_StatusType: int) returns (Tmp_1361: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1361 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#1(actual_DeviceObject_19: int, actual_Context_7: int, actual_StatusType: int) returns (Tmp_1361: int)
{
  var {:pointer} Tmp_1362: int;
  var {:pointer} Tmp_1363: int;
  var {:pointer} Tmp_1364: int;
  var {:pointer} Tmp_1365: int;
  var {:pointer} Tmp_1366: int;
  var {:pointer} Tmp_1367: int;
  var {:pointer} Tmp_1369: int;
  var {:pointer} Tmp_1370: int;
  var {:pointer} Tmp_1371: int;
  var {:pointer} Tmp_1372: int;
  var {:pointer} Tmp_1373: int;
  var {:pointer} Tmp_1374: int;
  var {:pointer} Tmp_1375: int;
  var {:pointer} Tmp_1376: int;
  var {:pointer} Tmp_1377: int;
  var {:pointer} Tmp_1378: int;
  var {:pointer} Tmp_1379: int;
  var {:scalar} status_37: int;
  var {:pointer} packet_11: int;
  var {:pointer} Tmp_1380: int;
  var {:pointer} Tmp_1381: int;
  var {:pointer} Tmp_1382: int;
  var {:pointer} deviceExtension_2: int;
  var {:pointer} Tmp_1383: int;
  var {:pointer} Tmp_1384: int;
  var {:pointer} Tmp_1385: int;
  var {:pointer} DeviceObject_19: int;
  var {:pointer} Context_7: int;
  var {:scalar} StatusType: int;
  var boogieTmp: int;
  var vslice_dummy_var_1238: int;
  var vslice_dummy_var_1239: int;

  anon0:
    call {:si_unique_call 2969} packet_11 := __HAVOC_malloc(4);
    DeviceObject_19 := actual_DeviceObject_19;
    Context_7 := actual_Context_7;
    StatusType := actual_StatusType;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    deviceExtension_2 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_19)];
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    call {:si_unique_call 2970} AllocateIrpAndIrb(deviceExtension_2, packet_11);
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1377;
    assume {:nonnull} Tmp_1377 != 0;
    assume Tmp_1377 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1371;
    assume {:nonnull} Tmp_1371 != 0;
    assume Tmp_1371 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1366;
    assume {:nonnull} Tmp_1366 != 0;
    assume Tmp_1366 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1373;
    assume {:nonnull} Tmp_1373 != 0;
    assume Tmp_1373 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1378;
    assume {:nonnull} Tmp_1378 != 0;
    assume Tmp_1378 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1367;
    assume {:nonnull} Tmp_1367 != 0;
    assume Tmp_1367 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1372;
    assume {:nonnull} Tmp_1372 != 0;
    assume Tmp_1372 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1363;
    assume {:nonnull} Tmp_1363 != 0;
    assume Tmp_1363 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1381;
    assume {:nonnull} Tmp_1381 != 0;
    assume Tmp_1381 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1374;
    assume {:nonnull} Tmp_1374 != 0;
    assume Tmp_1374 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1370;
    assume {:nonnull} Tmp_1370 != 0;
    assume Tmp_1370 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1376;
    assume {:nonnull} Tmp_1376 != 0;
    assume Tmp_1376 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1364;
    assume {:nonnull} Tmp_1364 != 0;
    assume Tmp_1364 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} StatusType != 2;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} StatusType != 4;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusType == 8;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1365;
    assume {:nonnull} Tmp_1365 != 0;
    assume Tmp_1365 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1375;
    assume {:nonnull} Tmp_1375 != 0;
    assume Tmp_1375 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1375 != 0;
    assume Tmp_1375 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1362;
    assume {:nonnull} Tmp_1362 != 0;
    assume Tmp_1362 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1384;
    assume {:nonnull} Tmp_1384 != 0;
    assume Tmp_1384 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto L27;

  L27:
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto L55;

  L55:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1385;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1385 != 0;
    assume Tmp_1385 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1383;
    assume {:nonnull} Tmp_1383 != 0;
    assume Tmp_1383 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1369;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1369 != 0;
    assume Tmp_1369 > 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_1238;
    call {:si_unique_call 2971} status_37 := Sbp2SendRequest#0(deviceExtension_2, vslice_dummy_var_1238, 2);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_37 >= 0;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1380;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Tmp_1380 != 0;
    assume Tmp_1380 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    assume {:nonnull} deviceExtension_2 != 0;
    assume deviceExtension_2 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc vslice_dummy_var_1239;
    call {:si_unique_call 2972} DeAllocateIrpAndIrb(deviceExtension_2, vslice_dummy_var_1239);
    Tmp_1361 := status_37;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon23_Then:
    assume {:partition} 0 > status_37;
    goto L43;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon20_Then:
    goto L55;

  anon24_Then:
    assume {:partition} StatusType != 8;
    goto L27;

  anon25_Then:
    assume {:partition} StatusType == 4;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1379;
    assume {:nonnull} Tmp_1379 != 0;
    assume Tmp_1379 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 2973} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    status_37 := -1073741670;
    goto L43;

  anon21_Then:
    goto L27;

  anon26_Then:
    assume {:partition} StatusType == 2;
    assume {:nonnull} packet_11 != 0;
    assume packet_11 > 0;
    havoc Tmp_1382;
    assume {:nonnull} Tmp_1382 != 0;
    assume Tmp_1382 > 0;
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    call {:si_unique_call 2974} boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} Context_7 != 0;
    assume Context_7 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    status_37 := -1073741670;
    goto L43;

  anon22_Then:
    goto L27;

  anon19_Then:
    Tmp_1361 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateAddressForStatus"} AllocateAddressForStatus#1(actual_DeviceObject_19: int, actual_Context_7: int, actual_StatusType: int) returns (Tmp_1361: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#0(actual_DeviceObject_18: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_5: int) returns (Tmp_1269: int)
{
  var {:pointer} Tmp_1270: int;
  var {:pointer} Tmp_1271: int;
  var {:pointer} Tmp_1272: int;
  var {:pointer} Tmp_1273: int;
  var {:pointer} Tmp_1274: int;
  var {:pointer} Tmp_1275: int;
  var {:pointer} Tmp_1276: int;
  var {:pointer} Tmp_1277: int;
  var {:pointer} Tmp_1278: int;
  var {:pointer} Tmp_1279: int;
  var {:pointer} Tmp_1280: int;
  var {:pointer} Tmp_1281: int;
  var {:pointer} Tmp_1282: int;
  var {:pointer} Tmp_1283: int;
  var {:pointer} Tmp_1284: int;
  var {:pointer} Tmp_1285: int;
  var {:pointer} Tmp_1286: int;
  var {:pointer} packet_9: int;
  var {:scalar} status_33: int;
  var {:pointer} Tmp_1287: int;
  var {:pointer} Tmp_1288: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} Tmp_1290: int;
  var {:pointer} Tmp_1291: int;
  var {:pointer} DeviceObject_18: int;
  var {:pointer} Buffer: int;
  var {:scalar} Length_6: int;
  var {:scalar} AccessType: int;
  var {:pointer} Context_5: int;
  var boogieTmp: int;
  var vslice_dummy_var_1240: int;

  anon0:
    call {:si_unique_call 2975} packet_9 := __HAVOC_malloc(4);
    DeviceObject_18 := actual_DeviceObject_18;
    Buffer := actual_Buffer;
    Length_6 := actual_Length_6;
    AccessType := actual_AccessType;
    Context_5 := actual_Context_5;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    deviceExtension_1 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_18)];
    call {:si_unique_call 2976} AllocateIrpAndIrb(deviceExtension_1, packet_9);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1271;
    assume {:nonnull} Tmp_1271 != 0;
    assume Tmp_1271 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1280;
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1270;
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1288;
    assume {:nonnull} Tmp_1288 != 0;
    assume Tmp_1288 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1281;
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1279;
    assume {:nonnull} Tmp_1279 != 0;
    assume Tmp_1279 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1282;
    assume {:nonnull} Tmp_1282 != 0;
    assume Tmp_1282 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1284;
    assume {:nonnull} Tmp_1284 != 0;
    assume Tmp_1284 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1272;
    assume {:nonnull} Tmp_1272 != 0;
    assume Tmp_1272 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1286;
    assume {:nonnull} Tmp_1286 != 0;
    assume Tmp_1286 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1290;
    assume {:nonnull} Tmp_1290 != 0;
    assume Tmp_1290 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1273;
    assume {:nonnull} Tmp_1273 != 0;
    assume Tmp_1273 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1283;
    assume {:nonnull} Tmp_1283 != 0;
    assume Tmp_1283 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1275;
    assume {:nonnull} Tmp_1275 != 0;
    assume Tmp_1275 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1274;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1274 != 0;
    assume Tmp_1274 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Buffer != 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1285;
    assume {:nonnull} Tmp_1285 != 0;
    assume Tmp_1285 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    call {:si_unique_call 2977} boogieTmp := IoAllocateMdl(0, Length_6, 0, 0, 0);
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1278;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1278 != 0;
    assume Tmp_1278 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    assume false;
    return;

  anon14_Then:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_1240;
    call {:si_unique_call 2978} DeAllocateIrpAndIrb(deviceExtension_1, vslice_dummy_var_1240);
    Tmp_1269 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    assume {:partition} Buffer == 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1291;
    assume {:nonnull} Tmp_1291 != 0;
    assume Tmp_1291 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1277;
    assume {:nonnull} Tmp_1277 != 0;
    assume Tmp_1277 > 0;
    goto L43;

  anon13_Then:
    Tmp_1269 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#0(actual_DeviceObject_18: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_5: int) returns (Tmp_1269: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1269 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#1(actual_DeviceObject_18: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_5: int) returns (Tmp_1269: int)
{
  var {:pointer} Tmp_1270: int;
  var {:pointer} Tmp_1271: int;
  var {:pointer} Tmp_1272: int;
  var {:pointer} Tmp_1273: int;
  var {:pointer} Tmp_1274: int;
  var {:pointer} Tmp_1275: int;
  var {:pointer} Tmp_1276: int;
  var {:pointer} Tmp_1277: int;
  var {:pointer} Tmp_1278: int;
  var {:pointer} Tmp_1279: int;
  var {:pointer} Tmp_1280: int;
  var {:pointer} Tmp_1281: int;
  var {:pointer} Tmp_1282: int;
  var {:pointer} Tmp_1283: int;
  var {:pointer} Tmp_1284: int;
  var {:pointer} Tmp_1285: int;
  var {:pointer} Tmp_1286: int;
  var {:pointer} packet_9: int;
  var {:scalar} status_33: int;
  var {:pointer} Tmp_1287: int;
  var {:pointer} Tmp_1288: int;
  var {:pointer} deviceExtension_1: int;
  var {:pointer} Tmp_1290: int;
  var {:pointer} Tmp_1291: int;
  var {:pointer} DeviceObject_18: int;
  var {:pointer} Buffer: int;
  var {:scalar} Length_6: int;
  var {:scalar} AccessType: int;
  var {:pointer} Context_5: int;
  var boogieTmp: int;
  var vslice_dummy_var_1241: int;
  var vslice_dummy_var_1242: int;
  var vslice_dummy_var_1243: int;

  anon0:
    call {:si_unique_call 2979} packet_9 := __HAVOC_malloc(4);
    DeviceObject_18 := actual_DeviceObject_18;
    Buffer := actual_Buffer;
    Length_6 := actual_Length_6;
    AccessType := actual_AccessType;
    Context_5 := actual_Context_5;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    deviceExtension_1 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(DeviceObject_18)];
    call {:si_unique_call 2980} AllocateIrpAndIrb(deviceExtension_1, packet_9);
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1271;
    assume {:nonnull} Tmp_1271 != 0;
    assume Tmp_1271 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1280;
    assume {:nonnull} Tmp_1280 != 0;
    assume Tmp_1280 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1270;
    assume {:nonnull} Tmp_1270 != 0;
    assume Tmp_1270 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1288;
    assume {:nonnull} Tmp_1288 != 0;
    assume Tmp_1288 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1281;
    assume {:nonnull} Tmp_1281 != 0;
    assume Tmp_1281 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1279;
    assume {:nonnull} Tmp_1279 != 0;
    assume Tmp_1279 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1282;
    assume {:nonnull} Tmp_1282 != 0;
    assume Tmp_1282 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1284;
    assume {:nonnull} Tmp_1284 != 0;
    assume Tmp_1284 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1272;
    assume {:nonnull} Tmp_1272 != 0;
    assume Tmp_1272 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1286;
    assume {:nonnull} Tmp_1286 != 0;
    assume Tmp_1286 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1290;
    assume {:nonnull} Tmp_1290 != 0;
    assume Tmp_1290 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1273;
    assume {:nonnull} Tmp_1273 != 0;
    assume Tmp_1273 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1283;
    assume {:nonnull} Tmp_1283 != 0;
    assume Tmp_1283 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1275;
    assume {:nonnull} Tmp_1275 != 0;
    assume Tmp_1275 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1274;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1274 != 0;
    assume Tmp_1274 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Buffer != 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1285;
    assume {:nonnull} Tmp_1285 != 0;
    assume Tmp_1285 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    call {:si_unique_call 2981} boogieTmp := IoAllocateMdl(0, Length_6, 0, 0, 0);
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1278;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1278 != 0;
    assume Tmp_1278 > 0;
    goto L43;

  L43:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_1241;
    call {:si_unique_call 2982} status_33 := Sbp2SendRequest#0(deviceExtension_1, vslice_dummy_var_1241, 2);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_33 >= 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1276;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1276 != 0;
    assume Tmp_1276 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} deviceExtension_1 != 0;
    assume deviceExtension_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Buffer == 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1287;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    assume {:nonnull} Tmp_1287 != 0;
    assume Tmp_1287 > 0;
    assume {:nonnull} Context_5 != 0;
    assume Context_5 > 0;
    call {:si_unique_call 2983} boogieTmp := sdv_MmGetMdlVirtualAddress(0);
    goto L48;

  L48:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_1242;
    call {:si_unique_call 2984} DeAllocateIrpAndIrb(deviceExtension_1, vslice_dummy_var_1242);
    Tmp_1269 := status_33;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} Buffer != 0;
    goto L48;

  anon15_Then:
    assume {:partition} 0 > status_33;
    goto L48;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc vslice_dummy_var_1243;
    call {:si_unique_call 2985} DeAllocateIrpAndIrb(deviceExtension_1, vslice_dummy_var_1243);
    Tmp_1269 := -1073741670;
    goto L1;

  anon16_Then:
    assume {:partition} Buffer == 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1291;
    assume {:nonnull} Tmp_1291 != 0;
    assume Tmp_1291 > 0;
    assume {:nonnull} packet_9 != 0;
    assume packet_9 > 0;
    havoc Tmp_1277;
    assume {:nonnull} Tmp_1277 != 0;
    assume Tmp_1277 > 0;
    goto L43;

  anon13_Then:
    Tmp_1269 := -1073741670;
    goto L1;
}



procedure {:origName "AllocateSingle1394Address"} AllocateSingle1394Address#1(actual_DeviceObject_18: int, actual_Buffer: int, actual_Length_6: int, actual_AccessType: int, actual_Context_5: int) returns (Tmp_1269: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#0(actual_PdoExtension_10: int) returns (Tmp_627: int)
{
  var {:pointer} Tmp_628: int;
  var {:pointer} nextListItem_1: int;
  var {:pointer} Tmp_629: int;
  var {:pointer} Tmp_630: int;
  var {:pointer} Tmp_631: int;
  var {:pointer} Tmp_632: int;
  var {:scalar} orbLock_2: int;
  var {:pointer} Tmp_633: int;
  var {:scalar} Tmp_634: int;
  var {:scalar} sdv_190: int;
  var {:pointer} Tmp_635: int;
  var {:scalar} Tmp_636: int;
  var {:pointer} Tmp_637: int;
  var {:pointer} sdv_191: int;
  var {:scalar} sdv_192: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_194: int;
  var {:pointer} sdv_195: int;
  var {:scalar} sdv_196: int;
  var {:pointer} Tmp_638: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_639: int;
  var {:scalar} sdv_197: int;
  var {:scalar} status_16: int;
  var {:pointer} packet_4: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:pointer} Tmp_642: int;
  var {:pointer} Tmp_643: int;
  var {:pointer} PdoExtension_10: int;

  anon0:
    call {:si_unique_call 2986} orbLock_2 := __HAVOC_malloc(12);
    call {:si_unique_call 2987} packet_4 := __HAVOC_malloc(4);
    PdoExtension_10 := actual_PdoExtension_10;
    call {:si_unique_call 2988} Tmp_635 := __HAVOC_malloc(4);
    call {:si_unique_call 2989} Tmp_637 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 2990} status_16 := Sbp2GetGenerationCount#0(PdoExtension_10);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_16 < 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_635;
    assume {:nonnull} Tmp_635 != 0;
    assume Tmp_635 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_629;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_634;
    call {:si_unique_call 2991} WPP_SF_qD(Tmp_634, 61, Tmp_629, PdoExtension_10, status_16);
    goto L95;

  L95:
    Tmp_627 := status_16;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon35_Then:
    goto L95;

  anon39_Then:
    goto L95;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon27_Then:
    assume {:partition} 0 <= status_16;
    call {:si_unique_call 2992} AllocateIrpAndIrb(PdoExtension_10, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_631;
    assume {:nonnull} Tmp_631 != 0;
    assume Tmp_631 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_630;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_642;
    assume {:nonnull} Tmp_642 != 0;
    assume Tmp_642 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    assume false;
    return;

  anon28_Then:
    Tmp_627 := -1073741670;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#0(actual_PdoExtension_10: int) returns (Tmp_627: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#1(actual_PdoExtension_10: int) returns (Tmp_627: int)
{
  var {:pointer} Tmp_628: int;
  var {:pointer} nextListItem_1: int;
  var {:pointer} Tmp_629: int;
  var {:pointer} Tmp_630: int;
  var {:pointer} Tmp_631: int;
  var {:pointer} Tmp_632: int;
  var {:scalar} orbLock_2: int;
  var {:pointer} Tmp_633: int;
  var {:scalar} Tmp_634: int;
  var {:scalar} sdv_190: int;
  var {:pointer} Tmp_635: int;
  var {:scalar} Tmp_636: int;
  var {:pointer} Tmp_637: int;
  var {:pointer} sdv_191: int;
  var {:scalar} sdv_192: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_194: int;
  var {:pointer} sdv_195: int;
  var {:scalar} sdv_196: int;
  var {:pointer} Tmp_638: int;
  var {:pointer} currentListItem: int;
  var {:pointer} Tmp_639: int;
  var {:scalar} sdv_197: int;
  var {:scalar} status_16: int;
  var {:pointer} packet_4: int;
  var {:pointer} Tmp_640: int;
  var {:pointer} Tmp_641: int;
  var {:pointer} Tmp_642: int;
  var {:pointer} Tmp_643: int;
  var {:pointer} PdoExtension_10: int;
  var vslice_dummy_var_1244: int;
  var vslice_dummy_var_1245: int;
  var vslice_dummy_var_1246: int;
  var vslice_dummy_var_1247: int;

  anon0:
    call {:si_unique_call 2993} orbLock_2 := __HAVOC_malloc(12);
    call {:si_unique_call 2994} packet_4 := __HAVOC_malloc(4);
    PdoExtension_10 := actual_PdoExtension_10;
    call {:si_unique_call 2995} Tmp_635 := __HAVOC_malloc(4);
    call {:si_unique_call 2996} Tmp_637 := __HAVOC_malloc(4);
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} orbLock_2 != 0;
    assume orbLock_2 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    call {:si_unique_call 2997} status_16 := Sbp2GetGenerationCount#1(PdoExtension_10);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_16 < 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_635;
    assume {:nonnull} Tmp_635 != 0;
    assume Tmp_635 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    havoc Tmp_629;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_634;
    call {:si_unique_call 2998} WPP_SF_qD(Tmp_634, 61, Tmp_629, PdoExtension_10, status_16);
    goto L95;

  L95:
    Tmp_627 := status_16;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon35_Then:
    goto L95;

  anon39_Then:
    goto L95;

  anon34_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L95;

  anon27_Then:
    assume {:partition} 0 <= status_16;
    call {:si_unique_call 2999} AllocateIrpAndIrb(PdoExtension_10, packet_4);
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_631;
    assume {:nonnull} Tmp_631 != 0;
    assume Tmp_631 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_630;
    assume {:nonnull} Tmp_630 != 0;
    assume Tmp_630 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_642;
    assume {:nonnull} Tmp_642 != 0;
    assume Tmp_642 > 0;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_1244;
    call {:si_unique_call 3000} status_16 := Sbp2SendRequest#0(PdoExtension_10, vslice_dummy_var_1244, 2);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_16 < 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_637;
    assume {:nonnull} Tmp_637 != 0;
    assume Tmp_637 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    havoc Tmp_638;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_636;
    call {:si_unique_call 3001} WPP_SF_qD(Tmp_636, 62, Tmp_638, PdoExtension_10, status_16);
    goto L57;

  L57:
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc vslice_dummy_var_1245;
    call {:si_unique_call 3002} DeAllocateIrpAndIrb(PdoExtension_10, vslice_dummy_var_1245);
    Tmp_627 := status_16;
    goto L1;

  anon33_Then:
    goto L57;

  anon38_Then:
    goto L57;

  anon32_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L57;

  anon29_Then:
    assume {:partition} 0 <= status_16;
    call {:si_unique_call 3003} Tmp_628 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_628 != 0;
    assume Tmp_628 > 0;
    call {:si_unique_call 3004} sdv_KeAcquireSpinLock(0, Tmp_628);
    assume {:nonnull} Tmp_628 != 0;
    assume Tmp_628 > 0;
    havoc oldIrql_2;
    assume {:nonnull} packet_4 != 0;
    assume packet_4 > 0;
    havoc Tmp_633;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_633 != 0;
    assume Tmp_633 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_633 != 0;
    assume Tmp_633 > 0;
    call {:si_unique_call 3005} sdv_KeReleaseSpinLock(0, oldIrql_2);
    call {:si_unique_call 3006} AcquireOrbListLock(PdoExtension_10, orbLock_2, 0);
    call {:si_unique_call 3007} sdv_194 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_194 != 0;
    goto L54;

  L54:
    call {:si_unique_call 3008} ReleaseOrbListLock(PdoExtension_10, orbLock_2, 0);
    goto L57;

  anon30_Then:
    assume {:partition} sdv_194 == 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    havoc vslice_dummy_var_1246;
    call {:si_unique_call 3009} sdv_195 := sdv_containing_record(vslice_dummy_var_1246, 0);
    nextListItem_1 := sdv_195;
    goto L62;

  L62:
    call {:si_unique_call 3010} nextListItem_1, Tmp_632, sdv_191, currentListItem, Tmp_639, Tmp_640, Tmp_641, Tmp_643 := Sbp2UpdateNodeInformation#1_loop_L62(nextListItem_1, Tmp_632, sdv_190, sdv_191, sdv_192, sdv_196, currentListItem, Tmp_639, sdv_197, Tmp_640, Tmp_641, Tmp_643, PdoExtension_10);
    goto L62_last;

  L62_last:
    currentListItem := nextListItem_1;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_640;
    assume {:nonnull} Tmp_640 != 0;
    assume Tmp_640 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_632;
    assume {:nonnull} Tmp_632 != 0;
    assume Tmp_632 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_639;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_643;
    assume {:nonnull} Tmp_643 != 0;
    assume Tmp_643 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc Tmp_641;
    assume {:nonnull} Tmp_641 != 0;
    assume Tmp_641 > 0;
    assume {:nonnull} currentListItem != 0;
    assume currentListItem > 0;
    havoc nextListItem_1;
    assume {:nonnull} PdoExtension_10 != 0;
    assume PdoExtension_10 > 0;
    havoc vslice_dummy_var_1247;
    call {:si_unique_call 3011} sdv_191 := sdv_containing_record(vslice_dummy_var_1247, 0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} currentListItem != sdv_191;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    assume false;
    return;

  anon31_Then:
    assume {:partition} currentListItem == sdv_191;
    goto L54;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    Tmp_627 := -1073741670;
    goto L1;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2UpdateNodeInformation"} Sbp2UpdateNodeInformation#1(actual_PdoExtension_10: int) returns (Tmp_627: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#0(actual_PdoExtension_11: int) returns (Tmp_644: int)
{
  var {:pointer} Tmp_645: int;
  var {:pointer} Tmp_646: int;
  var {:pointer} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} packet_5: int;
  var {:scalar} status_17: int;
  var {:pointer} PdoExtension_11: int;
  var vslice_dummy_var_461: int;

  anon0:
    call {:si_unique_call 3012} packet_5 := __HAVOC_malloc(4);
    PdoExtension_11 := actual_PdoExtension_11;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    status_17 := 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 3013} Tmp_645 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    call {:si_unique_call 3014} sdv_KeAcquireSpinLock(0, Tmp_645);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    havoc oldIrql_3;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    call {:si_unique_call 3015} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_644 := status_17;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    call {:si_unique_call 3016} AllocateIrpAndIrb(PdoExtension_11, packet_5);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_647;
    assume {:nonnull} Tmp_647 != 0;
    assume Tmp_647 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    assume false;
    return;

  anon11_Then:
    Tmp_644 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#0(actual_PdoExtension_11: int) returns (Tmp_644: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_644 == 0 || Tmp_644 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#1(actual_PdoExtension_11: int) returns (Tmp_644: int)
{
  var {:pointer} Tmp_645: int;
  var {:pointer} Tmp_646: int;
  var {:pointer} Tmp_647: int;
  var {:pointer} Tmp_648: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} packet_5: int;
  var {:scalar} status_17: int;
  var {:pointer} PdoExtension_11: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_1248: int;
  var vslice_dummy_var_1249: int;

  anon0:
    call {:si_unique_call 3017} packet_5 := __HAVOC_malloc(4);
    PdoExtension_11 := actual_PdoExtension_11;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    status_17 := 0;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 3018} Tmp_645 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    call {:si_unique_call 3019} sdv_KeAcquireSpinLock(0, Tmp_645);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    havoc oldIrql_3;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    call {:si_unique_call 3020} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_644 := status_17;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    call {:si_unique_call 3021} AllocateIrpAndIrb(PdoExtension_11, packet_5);
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_647;
    assume {:nonnull} Tmp_647 != 0;
    assume Tmp_647 > 0;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc vslice_dummy_var_1248;
    call {:si_unique_call 3022} status_17 := Sbp2SendRequest#0(PdoExtension_11, vslice_dummy_var_1248, 2);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_17 >= 0;
    call {:si_unique_call 3023} Tmp_645 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    call {:si_unique_call 3024} sdv_KeAcquireSpinLock(0, Tmp_645);
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    havoc oldIrql_3;
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc Tmp_648;
    assume {:nonnull} PdoExtension_11 != 0;
    assume PdoExtension_11 > 0;
    assume {:nonnull} Tmp_648 != 0;
    assume Tmp_648 > 0;
    call {:si_unique_call 3025} sdv_KeReleaseSpinLock(0, oldIrql_3);
    goto L39;

  L39:
    assume {:nonnull} packet_5 != 0;
    assume packet_5 > 0;
    havoc vslice_dummy_var_1249;
    call {:si_unique_call 3026} DeAllocateIrpAndIrb(PdoExtension_11, vslice_dummy_var_1249);
    Tmp_644 := status_17;
    goto L1;

  anon12_Then:
    assume {:partition} 0 > status_17;
    call {:si_unique_call 3027} vslice_dummy_var_462 := IsDeviceGone#1(PdoExtension_11, status_17);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L39;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    Tmp_644 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2GetGenerationCount"} Sbp2GetGenerationCount#1(actual_PdoExtension_11: int) returns (Tmp_644: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IsDeviceGone"} IsDeviceGone#0(actual_PdoExtension_17: int, actual_status_32: int) returns (Tmp_1264: int)
{
  var {:scalar} bInvalidate: int;
  var {:pointer} PdoExtension_17: int;
  var {:scalar} status_32: int;

  anon0:
    PdoExtension_17 := actual_PdoExtension_17;
    status_32 := actual_status_32;
    bInvalidate := 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_32 == -1073741810;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L11;

  L11:
    assume false;
    return;

  anon14_Then:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    bInvalidate := 1;
    goto L11;

  anon13_Then:
    goto L7;

  L7:
    Tmp_1264 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    assume {:partition} status_32 != -1073741810;
    goto L7;
}



procedure {:origName "IsDeviceGone"} IsDeviceGone#0(actual_PdoExtension_17: int, actual_status_32: int) returns (Tmp_1264: int);
  free ensures {:va_keep} Tmp_1264 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "IsDeviceGone"} IsDeviceGone#1(actual_PdoExtension_17: int, actual_status_32: int) returns (Tmp_1264: int)
{
  var {:scalar} bInvalidate: int;
  var {:pointer} PdoExtension_17: int;
  var {:scalar} status_32: int;

  anon0:
    PdoExtension_17 := actual_PdoExtension_17;
    status_32 := actual_status_32;
    bInvalidate := 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_32 == -1073741810;
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L11;

  L11:
    call {:si_unique_call 3028} CleanupOrbList#0(PdoExtension_17, status_32);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3029} Sbp2StartQueue#1(PdoExtension_17);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} bInvalidate != 0;
    call {:si_unique_call 3030} IoInvalidateDeviceState(0);
    call {:si_unique_call 3031} Sbp2AddLog(PdoExtension_17, 1, -914985884, PdoExtension_17, status_32);
    goto L18;

  L18:
    Tmp_1264 := 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} bInvalidate == 0;
    goto L18;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} PdoExtension_17 != 0;
    assume PdoExtension_17 > 0;
    bInvalidate := 1;
    goto L11;

  anon13_Then:
    goto L7;

  L7:
    Tmp_1264 := 0;
    goto L1;

  anon16_Then:
    assume {:partition} status_32 != -1073741810;
    goto L7;
}



procedure {:origName "IsDeviceGone"} IsDeviceGone#1(actual_PdoExtension_17: int, actual_status_32: int) returns (Tmp_1264: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2StartQueue"} Sbp2StartQueue#0(actual_PdoExtension_16: int)
{
  var {:pointer} Tmp_1257: int;
  var {:pointer} sdv_428: int;
  var {:pointer} pIrp: int;
  var {:scalar} irql_2: int;
  var {:pointer} PdoExtension_16: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_1250: int;
  var vslice_dummy_var_1251: int;
  var vslice_dummy_var_1252: int;
  var vslice_dummy_var_1253: int;
  var vslice_dummy_var_1254: int;

  anon0:
    call {:si_unique_call 3032} vslice_dummy_var_463 := __HAVOC_malloc(4);
    PdoExtension_16 := actual_PdoExtension_16;
    call {:si_unique_call 3033} Tmp_1257 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    call {:si_unique_call 3034} sdv_KeAcquireSpinLock(0, Tmp_1257);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 3035} sdv_KeReleaseSpinLock(0, irql_2);
    assume false;
    return;

  anon15_Then:
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 3036} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3037} Tmp_1257 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    call {:si_unique_call 3038} sdv_KeRaiseIrql(2, Tmp_1257);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    call {:si_unique_call 3039} sdv_428 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_16), 0);
    pIrp := sdv_428;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} pIrp != 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_1250;
    call {:si_unique_call 3040} Sbp2StartIo#0(vslice_dummy_var_1250, pIrp);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  L37:
    call {:si_unique_call 3041} sdv_KeLowerIrql(irql_2);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} pIrp == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_1251;
    havoc vslice_dummy_var_1252;
    call {:si_unique_call 3042} Sbp2StartNextPacketByKey#0(vslice_dummy_var_1251, vslice_dummy_var_1252);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    call {:si_unique_call 3043} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3044} Tmp_1257 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    call {:si_unique_call 3045} sdv_KeRaiseIrql(2, Tmp_1257);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_1253;
    havoc vslice_dummy_var_1254;
    call {:si_unique_call 3046} Sbp2StartNextPacketByKey#0(vslice_dummy_var_1253, vslice_dummy_var_1254);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2StartQueue"} Sbp2StartQueue#0(actual_PdoExtension_16: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2StartQueue"} Sbp2StartQueue#1(actual_PdoExtension_16: int)
{
  var {:pointer} Tmp_1257: int;
  var {:pointer} sdv_428: int;
  var {:pointer} pIrp: int;
  var {:scalar} irql_2: int;
  var {:pointer} PdoExtension_16: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_1255: int;
  var vslice_dummy_var_1256: int;
  var vslice_dummy_var_1257: int;
  var vslice_dummy_var_1258: int;
  var vslice_dummy_var_1259: int;

  anon0:
    call {:si_unique_call 3047} vslice_dummy_var_464 := __HAVOC_malloc(4);
    PdoExtension_16 := actual_PdoExtension_16;
    call {:si_unique_call 3048} Tmp_1257 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    call {:si_unique_call 3049} sdv_KeAcquireSpinLock(0, Tmp_1257);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 3050} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3051} vslice_dummy_var_465 := Sbp2RestartPendingPowerIrp#0(PdoExtension_16);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 3052} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3053} Tmp_1257 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    call {:si_unique_call 3054} sdv_KeRaiseIrql(2, Tmp_1257);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    call {:si_unique_call 3055} sdv_428 := _InlineInterlockedExchangePointer(DeferredPowerRequest__DEVICE_EXTENSION(PdoExtension_16), 0);
    pIrp := sdv_428;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} pIrp != 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_1255;
    call {:si_unique_call 3056} Sbp2StartIo#1(vslice_dummy_var_1255, pIrp);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  L37:
    call {:si_unique_call 3057} sdv_KeLowerIrql(irql_2);
    goto L1;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} pIrp == 0;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_1256;
    havoc vslice_dummy_var_1257;
    call {:si_unique_call 3058} Sbp2StartNextPacketByKey#1(vslice_dummy_var_1256, vslice_dummy_var_1257);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon16_Then:
    call {:si_unique_call 3059} sdv_KeReleaseSpinLock(0, irql_2);
    call {:si_unique_call 3060} Tmp_1257 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    call {:si_unique_call 3061} sdv_KeRaiseIrql(2, Tmp_1257);
    assume {:nonnull} Tmp_1257 != 0;
    assume Tmp_1257 > 0;
    havoc irql_2;
    assume {:nonnull} PdoExtension_16 != 0;
    assume PdoExtension_16 > 0;
    havoc vslice_dummy_var_1258;
    havoc vslice_dummy_var_1259;
    call {:si_unique_call 3062} Sbp2StartNextPacketByKey#1(vslice_dummy_var_1258, vslice_dummy_var_1259);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "Sbp2StartQueue"} Sbp2StartQueue#1(actual_PdoExtension_16: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#0(actual_PdoExtension_5: int) returns (Tmp_554: int)
{
  var {:scalar} Tmp_555: int;
  var {:pointer} Tmp_556: int;
  var {:pointer} Tmp_557: int;
  var {:pointer} Tmp_558: int;
  var {:pointer} Tmp_559: int;
  var {:pointer} Tmp_561: int;
  var {:scalar} Tmp_562: int;
  var {:pointer} packet_3: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_563: int;
  var {:pointer} Tmp_564: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_466: int;

  anon0:
    call {:si_unique_call 3063} packet_3 := __HAVOC_malloc(4);
    PdoExtension_5 := actual_PdoExtension_5;
    call {:si_unique_call 3064} Tmp_561 := __HAVOC_malloc(4);
    call {:si_unique_call 3065} Tmp_564 := __HAVOC_malloc(4);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    call {:si_unique_call 3066} AllocateIrpAndIrb(PdoExtension_5, packet_3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_556;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_559;
    assume {:nonnull} Tmp_559 != 0;
    assume Tmp_559 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_557;
    assume {:nonnull} Tmp_557 != 0;
    assume Tmp_557 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_561;
    assume {:nonnull} Tmp_561 != 0;
    assume Tmp_561 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_563;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_555;
    call {:si_unique_call 3067} WPP_SF_q(Tmp_555, 10, Tmp_563, PdoExtension_5);
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 3068} Sbp2SetManagementTimer(PdoExtension_5, 3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    assume false;
    return;

  anon24_Then:
    goto L18;

  anon29_Then:
    goto L18;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon23_Then:
    Tmp_554 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;
}



procedure {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#0(actual_PdoExtension_5: int) returns (Tmp_554: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_554 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#1(actual_PdoExtension_5: int) returns (Tmp_554: int)
{
  var {:scalar} Tmp_555: int;
  var {:pointer} Tmp_556: int;
  var {:pointer} Tmp_557: int;
  var {:pointer} Tmp_558: int;
  var {:pointer} Tmp_559: int;
  var {:pointer} Tmp_561: int;
  var {:scalar} Tmp_562: int;
  var {:pointer} packet_3: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_563: int;
  var {:pointer} Tmp_564: int;
  var {:pointer} PdoExtension_5: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_1260: int;
  var vslice_dummy_var_1261: int;

  anon0:
    call {:si_unique_call 3069} packet_3 := __HAVOC_malloc(4);
    PdoExtension_5 := actual_PdoExtension_5;
    call {:si_unique_call 3070} Tmp_561 := __HAVOC_malloc(4);
    call {:si_unique_call 3071} Tmp_564 := __HAVOC_malloc(4);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    call {:si_unique_call 3072} AllocateIrpAndIrb(PdoExtension_5, packet_3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_556;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_559;
    assume {:nonnull} Tmp_559 != 0;
    assume Tmp_559 > 0;
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc Tmp_557;
    assume {:nonnull} Tmp_557 != 0;
    assume Tmp_557 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_561;
    assume {:nonnull} Tmp_561 != 0;
    assume Tmp_561 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    havoc Tmp_563;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_555;
    call {:si_unique_call 3073} WPP_SF_q(Tmp_555, 10, Tmp_563, PdoExtension_5);
    goto L18;

  L18:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    call {:si_unique_call 3074} Sbp2SetManagementTimer(PdoExtension_5, 3);
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_1260;
    call {:si_unique_call 3075} status_13 := Sbp2SendRequest#0(PdoExtension_5, vslice_dummy_var_1260, 2);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_13 >= 0;
    goto L37;

  L37:
    assume {:nonnull} packet_3 != 0;
    assume packet_3 > 0;
    havoc vslice_dummy_var_1261;
    call {:si_unique_call 3076} DeAllocateIrpAndIrb(PdoExtension_5, vslice_dummy_var_1261);
    Tmp_554 := status_13;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon25_Then:
    assume {:partition} 0 > status_13;
    call {:si_unique_call 3077} vslice_dummy_var_467 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_564;
    assume {:nonnull} Tmp_564 != 0;
    assume Tmp_564 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_558;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_562;
    call {:si_unique_call 3078} WPP_SF_qD(Tmp_562, 11, Tmp_558, PdoExtension_5, status_13);
    goto L46;

  L46:
    assume {:nonnull} PdoExtension_5 != 0;
    assume PdoExtension_5 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 3079} Sbp2StartQueue#1(PdoExtension_5);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} yogi_error != 1;
    goto L37;

  anon33_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon26_Then:
    goto L37;

  anon27_Then:
    goto L46;

  anon32_Then:
    goto L46;

  anon31_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon24_Then:
    goto L18;

  anon29_Then:
    goto L18;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon23_Then:
    Tmp_554 := -1073741670;
    goto L1;
}



procedure {:origName "Sbp2Issue1394BusReset"} Sbp2Issue1394BusReset#1(actual_PdoExtension_5: int) returns (Tmp_554: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#0(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int)
{
  var {:scalar} flags: int;
  var {:pointer} Tmp_1815: int;
  var {:pointer} Tmp_1816: int;
  var {:pointer} Tmp_1817: int;
  var {:scalar} Tmp_1818: int;
  var {:pointer} Tmp_1820: int;
  var {:scalar} irql_3: int;
  var {:pointer} PdoExtension_22: int;
  var {:scalar} Status_1: int;
  var {:scalar} ErrorId_1: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_1262: int;

  anon0:
    call {:si_unique_call 3080} vslice_dummy_var_468 := __HAVOC_malloc(4);
    PdoExtension_22 := actual_PdoExtension_22;
    Status_1 := actual_Status_1;
    ErrorId_1 := actual_ErrorId_1;
    call {:si_unique_call 3081} Tmp_1820 := __HAVOC_malloc(4);
    call {:si_unique_call 3082} Tmp_1816 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1816 != 0;
    assume Tmp_1816 > 0;
    call {:si_unique_call 3083} sdv_KeAcquireSpinLock(0, Tmp_1816);
    assume {:nonnull} Tmp_1816 != 0;
    assume Tmp_1816 > 0;
    havoc irql_3;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc flags;
    call {:si_unique_call 3084} Sbp2AddLog(PdoExtension_22, 1, -764185530, Status_1, ErrorId_1);
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc Tmp_1815;
    assume {:nonnull} Tmp_1815 != 0;
    assume Tmp_1815 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L17;

  L17:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} BAND(flags, 8192) != 0;
    goto L22;

  L22:
    call {:si_unique_call 3085} sdv_KeReleaseSpinLock(0, irql_3);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1820;
    assume {:nonnull} Tmp_1820 != 0;
    assume Tmp_1820 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_1817;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1818;
    call {:si_unique_call 3086} WPP_SF_qDD(Tmp_1818, 42, Tmp_1817, PdoExtension_22, flags, Status_1);
    goto L29;

  L29:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} BAND(flags, 2) != 0;
    goto L38;

  L38:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(flags, 2) != 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3087} vslice_dummy_var_470 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L39;

  L39:
    call {:si_unique_call 3088} Sbp2StartQueue#0(PdoExtension_22);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3089} IoInvalidateDeviceState(0);
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto L39;

  anon20_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status_1 != -1073741810;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc vslice_dummy_var_1262;
    call {:si_unique_call 3090} Sbp2CreateRequestErrorLog(vslice_dummy_var_1262, 0, ErrorId_1, Status_1);
    goto L38;

  anon22_Then:
    assume {:partition} Status_1 == -1073741810;
    goto L38;

  anon21_Then:
    goto L29;

  anon26_Then:
    goto L29;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L29;

  anon25_Then:
    assume {:partition} BAND(flags, 8192) == 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3091} vslice_dummy_var_469 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L22;

  anon24_Then:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto L17;
}



procedure {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#0(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#1(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int)
{
  var {:scalar} flags: int;
  var {:pointer} Tmp_1815: int;
  var {:pointer} Tmp_1816: int;
  var {:pointer} Tmp_1817: int;
  var {:scalar} Tmp_1818: int;
  var {:pointer} Tmp_1820: int;
  var {:scalar} irql_3: int;
  var {:pointer} PdoExtension_22: int;
  var {:scalar} Status_1: int;
  var {:scalar} ErrorId_1: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_1263: int;

  anon0:
    call {:si_unique_call 3092} vslice_dummy_var_471 := __HAVOC_malloc(4);
    PdoExtension_22 := actual_PdoExtension_22;
    Status_1 := actual_Status_1;
    ErrorId_1 := actual_ErrorId_1;
    call {:si_unique_call 3093} Tmp_1820 := __HAVOC_malloc(4);
    call {:si_unique_call 3094} Tmp_1816 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1816 != 0;
    assume Tmp_1816 > 0;
    call {:si_unique_call 3095} sdv_KeAcquireSpinLock(0, Tmp_1816);
    assume {:nonnull} Tmp_1816 != 0;
    assume Tmp_1816 > 0;
    havoc irql_3;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc flags;
    call {:si_unique_call 3096} Sbp2AddLog(PdoExtension_22, 1, -764185530, Status_1, ErrorId_1);
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc Tmp_1815;
    assume {:nonnull} Tmp_1815 != 0;
    assume Tmp_1815 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L17;

  L17:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} BAND(flags, 8192) != 0;
    goto L22;

  L22:
    call {:si_unique_call 3097} sdv_KeReleaseSpinLock(0, irql_3);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1820;
    assume {:nonnull} Tmp_1820 != 0;
    assume Tmp_1820 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    havoc Tmp_1817;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_1818;
    call {:si_unique_call 3098} WPP_SF_qDD(Tmp_1818, 42, Tmp_1817, PdoExtension_22, flags, Status_1);
    goto L29;

  L29:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} BAND(flags, 2) != 0;
    goto L38;

  L38:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(flags, 2) != 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3099} vslice_dummy_var_473 := KeSetEvent(StartEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L39;

  L39:
    call {:si_unique_call 3100} Sbp2StartQueue#1(PdoExtension_22);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3101} IoInvalidateDeviceState(0);
    goto LM2;

  LM2:
    return;

  anon27_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon23_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto L39;

  anon20_Then:
    assume {:partition} BAND(flags, 2) == 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} Status_1 != -1073741810;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    havoc vslice_dummy_var_1263;
    call {:si_unique_call 3102} Sbp2CreateRequestErrorLog(vslice_dummy_var_1263, 0, ErrorId_1, Status_1);
    goto L38;

  anon22_Then:
    assume {:partition} Status_1 == -1073741810;
    goto L38;

  anon21_Then:
    goto L29;

  anon26_Then:
    goto L29;

  anon19_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L29;

  anon25_Then:
    assume {:partition} BAND(flags, 8192) == 0;
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    call {:si_unique_call 3103} vslice_dummy_var_472 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_22), 0, 0);
    goto L22;

  anon24_Then:
    assume {:nonnull} PdoExtension_22 != 0;
    assume PdoExtension_22 > 0;
    goto L17;
}



procedure {:origName "Sbp2LoginErrorHandler"} Sbp2LoginErrorHandler#1(actual_PdoExtension_22: int, actual_Status_1: int, actual_ErrorId_1: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#0(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_407: int)
{
  var {:pointer} Tmp_408: int;
  var {:scalar} Tmp_409: int;
  var {:pointer} Tmp_410: int;
  var {:pointer} Tmp_411: int;
  var {:pointer} Tmp_413: int;
  var {:scalar} Tmp_414: int;
  var {:pointer} Tmp_415: int;
  var {:scalar} sdv_110: int;
  var {:scalar} sdv_113: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} Tmp_417: int;
  var {:pointer} Tmp_418: int;
  var {:pointer} Tmp_419: int;
  var {:scalar} sdv_114: int;
  var {:pointer} Tmp_420: int;
  var {:scalar} sdv_116: int;
  var {:scalar} Tmp_421: int;
  var {:pointer} Tmp_422: int;
  var {:scalar} sdv_117: int;
  var {:scalar} Tmp_423: int;
  var {:scalar} status_9: int;
  var {:scalar} Tmp_424: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} PdoExtension_3: int;
  var {:scalar} Generation_2: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_1264: int;
  var vslice_dummy_var_1265: int;

  anon0:
    PdoExtension_3 := actual_PdoExtension_3;
    Generation_2 := actual_Generation_2;
    call {:si_unique_call 3104} Tmp_411 := __HAVOC_malloc(4);
    call {:si_unique_call 3105} Tmp_413 := __HAVOC_malloc(4);
    call {:si_unique_call 3106} Tmp_415 := __HAVOC_malloc(4);
    call {:si_unique_call 3107} Tmp_416 := __HAVOC_malloc(4);
    call {:si_unique_call 3108} Tmp_418 := __HAVOC_malloc(4);
    status_9 := -1073741811;
    call {:si_unique_call 3109} vslice_dummy_var_475 := sdv_KeGetCurrentIrql();
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_416;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 3110} sdv_113 := GET_LUN(PdoExtension_3);
    havoc Tmp_422;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_421;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_1264;
    call {:si_unique_call 3111} WPP_SF_qdD(Tmp_421, 80, Tmp_422, PdoExtension_3, sdv_113, vslice_dummy_var_1264);
    goto L15;

  L15:
    call {:si_unique_call 3112} Sbp2AddLog(PdoExtension_3, 1, -767212738, 0, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_1265;
    call {:si_unique_call 3113} sdv_114 := Sbp2CleanDeviceExtension#0(vslice_dummy_var_1265, 0, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} yogi_error != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_114 == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_418;
    assume {:nonnull} Tmp_418 != 0;
    assume Tmp_418 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_417;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_423;
    call {:si_unique_call 3114} WPP_SF_q(Tmp_423, 81, Tmp_417, PdoExtension_3);
    goto L35;

  L35:
    call {:si_unique_call 3115} status_9 := Sbp2InitializeDeviceExtension#0(PdoExtension_3);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_9 < 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_413;
    assume {:nonnull} Tmp_413 != 0;
    assume Tmp_413 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_420;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_409;
    call {:si_unique_call 3116} WPP_SF_qD(Tmp_409, 82, Tmp_420, PdoExtension_3, status_9);
    goto L105;

  L105:
    Tmp_407 := status_9;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L105;

  anon65_Then:
    goto L105;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L105;

  anon48_Then:
    assume {:partition} 0 <= status_9;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc Tmp_408;
    assume {:nonnull} Tmp_408 != 0;
    assume Tmp_408 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 3117} Sbp2SetManagementTimer(PdoExtension_3, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3118} vslice_dummy_var_474 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_3));
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3119} status_9 := Sbp2AccessRegisterEx#0(PdoExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_3)), 256, Generation_2);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_411;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_419;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_424;
    call {:si_unique_call 3120} WPP_SF_qD(Tmp_424, 83, Tmp_419, PdoExtension_3, status_9);
    goto L75;

  L75:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_9 < 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_415;
    assume {:nonnull} Tmp_415 != 0;
    assume Tmp_415 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_410;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_414;
    call {:si_unique_call 3121} WPP_SF_qD(Tmp_414, 84, Tmp_410, PdoExtension_3, status_9);
    goto L91;

  L91:
    call {:si_unique_call 3122} Sbp2AddLog(PdoExtension_3, 1, -765107407, status_9, 0);
    call {:si_unique_call 3123} Sbp2ReconnectCompletion#0(PdoExtension_3, status_9);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L86;

  L86:
    call {:si_unique_call 3124} Sbp2AddLog(PdoExtension_3, 1, -767212740, status_9, 0);
    Tmp_407 := status_9;
    goto L1;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    goto L91;

  anon63_Then:
    goto L91;

  anon52_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L91;

  anon50_Then:
    assume {:partition} 0 <= status_9;
    goto L86;

  anon51_Then:
    goto L75;

  anon62_Then:
    goto L75;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L75;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L35;

  anon66_Then:
    goto L35;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L35;

  anon47_Then:
    assume {:partition} sdv_114 != 0;
    goto L35;

  anon59_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    goto L15;

  anon58_Then:
    goto L15;

  anon45_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L15;
}



procedure {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#0(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_407: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#1(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_407: int)
{
  var {:pointer} Tmp_408: int;
  var {:scalar} Tmp_409: int;
  var {:pointer} Tmp_410: int;
  var {:pointer} Tmp_411: int;
  var {:pointer} Tmp_413: int;
  var {:scalar} Tmp_414: int;
  var {:pointer} Tmp_415: int;
  var {:scalar} sdv_110: int;
  var {:scalar} sdv_113: int;
  var {:pointer} Tmp_416: int;
  var {:pointer} Tmp_417: int;
  var {:pointer} Tmp_418: int;
  var {:pointer} Tmp_419: int;
  var {:scalar} sdv_114: int;
  var {:pointer} Tmp_420: int;
  var {:scalar} sdv_116: int;
  var {:scalar} Tmp_421: int;
  var {:pointer} Tmp_422: int;
  var {:scalar} sdv_117: int;
  var {:scalar} Tmp_423: int;
  var {:scalar} status_9: int;
  var {:scalar} Tmp_424: int;
  var {:pointer} sbpRequest_1: int;
  var {:pointer} PdoExtension_3: int;
  var {:scalar} Generation_2: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_1266: int;
  var vslice_dummy_var_1267: int;

  anon0:
    PdoExtension_3 := actual_PdoExtension_3;
    Generation_2 := actual_Generation_2;
    call {:si_unique_call 3125} Tmp_411 := __HAVOC_malloc(4);
    call {:si_unique_call 3126} Tmp_413 := __HAVOC_malloc(4);
    call {:si_unique_call 3127} Tmp_415 := __HAVOC_malloc(4);
    call {:si_unique_call 3128} Tmp_416 := __HAVOC_malloc(4);
    call {:si_unique_call 3129} Tmp_418 := __HAVOC_malloc(4);
    status_9 := -1073741811;
    call {:si_unique_call 3130} vslice_dummy_var_477 := sdv_KeGetCurrentIrql();
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_416;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 3131} sdv_113 := GET_LUN(PdoExtension_3);
    havoc Tmp_422;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_421;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_1266;
    call {:si_unique_call 3132} WPP_SF_qdD(Tmp_421, 80, Tmp_422, PdoExtension_3, sdv_113, vslice_dummy_var_1266);
    goto L15;

  L15:
    call {:si_unique_call 3133} Sbp2AddLog(PdoExtension_3, 1, -767212738, 0, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc vslice_dummy_var_1267;
    call {:si_unique_call 3134} sdv_114 := Sbp2CleanDeviceExtension#1(vslice_dummy_var_1267, 0, 0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} yogi_error != 1;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_114 == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_418;
    assume {:nonnull} Tmp_418 != 0;
    assume Tmp_418 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc Tmp_417;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_423;
    call {:si_unique_call 3135} WPP_SF_q(Tmp_423, 81, Tmp_417, PdoExtension_3);
    goto L35;

  L35:
    call {:si_unique_call 3136} status_9 := Sbp2InitializeDeviceExtension#1(PdoExtension_3);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_9 < 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_413;
    assume {:nonnull} Tmp_413 != 0;
    assume Tmp_413 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    havoc Tmp_420;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_409;
    call {:si_unique_call 3137} WPP_SF_qD(Tmp_409, 82, Tmp_420, PdoExtension_3, status_9);
    goto L105;

  L105:
    Tmp_407 := status_9;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L105;

  anon65_Then:
    goto L105;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L105;

  anon48_Then:
    assume {:partition} 0 <= status_9;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc sbpRequest_1;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    havoc Tmp_408;
    assume {:nonnull} Tmp_408 != 0;
    assume Tmp_408 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    assume {:nonnull} sbpRequest_1 != 0;
    assume sbpRequest_1 > 0;
    call {:si_unique_call 3138} Sbp2SetManagementTimer(PdoExtension_3, 0);
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3139} vslice_dummy_var_476 := KeResetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_3));
    assume {:nonnull} PdoExtension_3 != 0;
    assume PdoExtension_3 > 0;
    call {:si_unique_call 3140} status_9 := Sbp2AccessRegisterEx#1(PdoExtension_3, Address__ADDRESS_CONTEXT(ManagementOrbContext__DEVICE_EXTENSION(PdoExtension_3)), 256, Generation_2);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_411;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_419;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_424;
    call {:si_unique_call 3141} WPP_SF_qD(Tmp_424, 83, Tmp_419, PdoExtension_3, status_9);
    goto L75;

  L75:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_9 < 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_415;
    assume {:nonnull} Tmp_415 != 0;
    assume Tmp_415 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_410;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_414;
    call {:si_unique_call 3142} WPP_SF_qD(Tmp_414, 84, Tmp_410, PdoExtension_3, status_9);
    goto L91;

  L91:
    call {:si_unique_call 3143} Sbp2AddLog(PdoExtension_3, 1, -765107407, status_9, 0);
    call {:si_unique_call 3144} Sbp2ReconnectCompletion#1(PdoExtension_3, status_9);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L86;

  L86:
    call {:si_unique_call 3145} Sbp2AddLog(PdoExtension_3, 1, -767212740, status_9, 0);
    Tmp_407 := status_9;
    goto L1;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    goto L91;

  anon63_Then:
    goto L91;

  anon52_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L91;

  anon50_Then:
    assume {:partition} 0 <= status_9;
    goto L86;

  anon51_Then:
    goto L75;

  anon62_Then:
    goto L75;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L75;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    goto L35;

  anon66_Then:
    goto L35;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L35;

  anon47_Then:
    assume {:partition} sdv_114 != 0;
    goto L35;

  anon59_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon46_Then:
    goto L15;

  anon58_Then:
    goto L15;

  anon45_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L15;
}



procedure {:origName "Sbp2DoReconnect"} Sbp2DoReconnect#1(actual_PdoExtension_3: int, actual_Generation_2: int) returns (Tmp_407: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#0(actual_PdoExtension_4: int, actual_NtStatus_1: int)
{
  var {:scalar} Tmp_546: int;
  var {:pointer} Tmp_547: int;
  var {:pointer} Tmp_548: int;
  var {:pointer} Tmp_549: int;
  var {:scalar} Tmp_550: int;
  var {:scalar} sdv_154: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_552: int;
  var {:scalar} irql_1: int;
  var {:pointer} Tmp_553: int;
  var {:pointer} PdoExtension_4: int;
  var {:scalar} NtStatus_1: int;
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_1268: int;
  var vslice_dummy_var_1269: int;

  anon0:
    call {:si_unique_call 3146} vslice_dummy_var_478 := __HAVOC_malloc(4);
    PdoExtension_4 := actual_PdoExtension_4;
    NtStatus_1 := actual_NtStatus_1;
    call {:si_unique_call 3147} Tmp_549 := __HAVOC_malloc(4);
    call {:si_unique_call 3148} Tmp_552 := __HAVOC_malloc(4);
    call {:si_unique_call 3149} Tmp_547 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    call {:si_unique_call 3150} sdv_KeAcquireSpinLock(0, Tmp_547);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    havoc irql_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 3151} Sbp2AddLog(PdoExtension_4, 1, -765107396, NtStatus_1, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_552;
    assume {:nonnull} Tmp_552 != 0;
    assume Tmp_552 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_548;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_546;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_1268;
    call {:si_unique_call 3152} WPP_SF_qDD(Tmp_546, 78, Tmp_548, PdoExtension_4, NtStatus_1, vslice_dummy_var_1268);
    goto L18;

  L18:
    call {:si_unique_call 3153} vslice_dummy_var_479 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} NtStatus_1 < 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_549;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    havoc Tmp_553;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_550;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_1269;
    call {:si_unique_call 3154} WPP_SF_qDD(Tmp_550, 79, Tmp_553, PdoExtension_4, NtStatus_1, vslice_dummy_var_1269);
    goto L48;

  L48:
    call {:si_unique_call 3155} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3156} sdv_154 := IsDeviceGone#0(PdoExtension_4, NtStatus_1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_154 == 0;
    call {:si_unique_call 3157} Tmp_547 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    call {:si_unique_call 3158} sdv_KeAcquireSpinLock(0, Tmp_547);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    havoc irql_1;
    call {:si_unique_call 3159} status_12 := Sbp2QueueManagementWorkItem(PdoExtension_4, 2, -1);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_12 >= 0;
    goto L74;

  L74:
    call {:si_unique_call 3160} sdv_KeReleaseSpinLock(0, irql_1);
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3161} vslice_dummy_var_480 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_4), 0, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon31_Then:
    assume {:partition} 0 > status_12;
    call {:si_unique_call 3162} Sbp2SetDeferLoginTimer(PdoExtension_4);
    goto L74;

  anon30_Then:
    assume {:partition} sdv_154 != 0;
    goto L43;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    goto L48;

  anon35_Then:
    goto L48;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L48;

  anon33_Then:
    assume {:partition} 0 <= NtStatus_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3163} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3164} Sbp2StartQueue#0(PdoExtension_4);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto L43;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    goto L18;

  anon32_Then:
    goto L18;

  anon26_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon25_Then:
    call {:si_unique_call 3165} sdv_KeReleaseSpinLock(0, irql_1);
    goto L1;
}



procedure {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#0(actual_PdoExtension_4: int, actual_NtStatus_1: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#1(actual_PdoExtension_4: int, actual_NtStatus_1: int)
{
  var {:scalar} Tmp_546: int;
  var {:pointer} Tmp_547: int;
  var {:pointer} Tmp_548: int;
  var {:pointer} Tmp_549: int;
  var {:scalar} Tmp_550: int;
  var {:scalar} sdv_154: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_552: int;
  var {:scalar} irql_1: int;
  var {:pointer} Tmp_553: int;
  var {:pointer} PdoExtension_4: int;
  var {:scalar} NtStatus_1: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_1270: int;
  var vslice_dummy_var_1271: int;

  anon0:
    call {:si_unique_call 3166} vslice_dummy_var_481 := __HAVOC_malloc(4);
    PdoExtension_4 := actual_PdoExtension_4;
    NtStatus_1 := actual_NtStatus_1;
    call {:si_unique_call 3167} Tmp_549 := __HAVOC_malloc(4);
    call {:si_unique_call 3168} Tmp_552 := __HAVOC_malloc(4);
    call {:si_unique_call 3169} Tmp_547 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    call {:si_unique_call 3170} sdv_KeAcquireSpinLock(0, Tmp_547);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    havoc irql_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 3171} Sbp2AddLog(PdoExtension_4, 1, -765107396, NtStatus_1, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_552;
    assume {:nonnull} Tmp_552 != 0;
    assume Tmp_552 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    havoc Tmp_548;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_546;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_1270;
    call {:si_unique_call 3172} WPP_SF_qDD(Tmp_546, 78, Tmp_548, PdoExtension_4, NtStatus_1, vslice_dummy_var_1270);
    goto L18;

  L18:
    call {:si_unique_call 3173} vslice_dummy_var_482 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} NtStatus_1 < 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_549;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    havoc Tmp_553;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_550;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    havoc vslice_dummy_var_1271;
    call {:si_unique_call 3174} WPP_SF_qDD(Tmp_550, 79, Tmp_553, PdoExtension_4, NtStatus_1, vslice_dummy_var_1271);
    goto L48;

  L48:
    call {:si_unique_call 3175} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3176} sdv_154 := IsDeviceGone#1(PdoExtension_4, NtStatus_1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_154 == 0;
    call {:si_unique_call 3177} Tmp_547 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    call {:si_unique_call 3178} sdv_KeAcquireSpinLock(0, Tmp_547);
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    havoc irql_1;
    call {:si_unique_call 3179} status_12 := Sbp2QueueManagementWorkItem(PdoExtension_4, 2, -1);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_12 >= 0;
    goto L74;

  L74:
    call {:si_unique_call 3180} sdv_KeReleaseSpinLock(0, irql_1);
    goto L43;

  L43:
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3181} vslice_dummy_var_483 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension_4), 0, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon31_Then:
    assume {:partition} 0 > status_12;
    call {:si_unique_call 3182} Sbp2SetDeferLoginTimer(PdoExtension_4);
    goto L74;

  anon30_Then:
    assume {:partition} sdv_154 != 0;
    goto L43;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon29_Then:
    goto L48;

  anon35_Then:
    goto L48;

  anon28_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L48;

  anon33_Then:
    assume {:partition} 0 <= NtStatus_1;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    assume {:nonnull} PdoExtension_4 != 0;
    assume PdoExtension_4 > 0;
    call {:si_unique_call 3183} sdv_KeReleaseSpinLock(0, irql_1);
    call {:si_unique_call 3184} Sbp2StartQueue#1(PdoExtension_4);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    goto L43;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    goto L18;

  anon32_Then:
    goto L18;

  anon26_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L18;

  anon25_Then:
    call {:si_unique_call 3185} sdv_KeReleaseSpinLock(0, irql_1);
    goto L1;
}



procedure {:origName "Sbp2ReconnectCompletion"} Sbp2ReconnectCompletion#1(actual_PdoExtension_4: int, actual_NtStatus_1: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket#0(actual_DeviceObject_21: int, actual_Irp_14: int, actual_Key_1: int)
{
  var {:pointer} irpStack_8: int;
  var {:scalar} inserted_1: int;
  var {:pointer} nextEntry_2: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} queueEntry2_1: int;
  var {:pointer} sdv_479: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} Tmp_1404: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_21: int;
  var {:pointer} Irp_14: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;

  anon0:
    call {:si_unique_call 3186} vslice_dummy_var_484 := __HAVOC_malloc(4);
    DeviceObject_21 := actual_DeviceObject_21;
    Irp_14 := actual_Irp_14;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_21);
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14)));
    call {:si_unique_call 3187} Tmp_1404 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1404 != 0;
    assume Tmp_1404 > 0;
    call {:si_unique_call 3188} sdv_KeRaiseIrql(2, Tmp_1404);
    assume {:nonnull} Tmp_1404 != 0;
    assume Tmp_1404 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 3189} irpStack_8 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} irpStack_8 != 0;
    assume irpStack_8 > 0;
    call {:si_unique_call 3190} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L31;

  L31:
    call {:si_unique_call 3191} nextEntry_2, queueEntry2_1, sdv_479 := Sbp2StartPacket#0_loop_L31(nextEntry_2, queueEntry2_1, sdv_479, Key_1);
    goto L31_last;

  L31_last:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 3192} sdv_479 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_479;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    assume false;
    return;

  anon20_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3193} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  L43:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3194} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} inserted_1 != 0;
    goto L51;

  L51:
    call {:si_unique_call 3195} sdv_KeLowerIrql(oldIrql_4);
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} inserted_1 == 0;
    call {:si_unique_call 3196} Sbp2StartIo#0(DeviceObject_21, Irp_14);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L51;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    goto L32;

  anon19_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;

  anon15_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 3197} vslice_dummy_var_485 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  anon16_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket#0(actual_DeviceObject_21: int, actual_Irp_14: int, actual_Key_1: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2StartPacket"} Sbp2StartPacket#1(actual_DeviceObject_21: int, actual_Irp_14: int, actual_Key_1: int)
{
  var {:pointer} irpStack_8: int;
  var {:scalar} inserted_1: int;
  var {:pointer} nextEntry_2: int;
  var {:pointer} queueEntry_2: int;
  var {:pointer} queueEntry2_1: int;
  var {:pointer} sdv_479: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} Tmp_1404: int;
  var {:pointer} queue_1: int;
  var {:pointer} DeviceObject_21: int;
  var {:pointer} Irp_14: int;
  var {:pointer} Key_1: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;

  anon0:
    call {:si_unique_call 3198} vslice_dummy_var_486 := __HAVOC_malloc(4);
    DeviceObject_21 := actual_DeviceObject_21;
    Irp_14 := actual_Irp_14;
    Key_1 := actual_Key_1;
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    queue_1 := DeviceQueue__DEVICE_OBJECT(DeviceObject_21);
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    queueEntry_2 := DeviceQueueEntry_unnamed_tag_6(Overlay_unnamed_tag_5(Tail__IRP(Irp_14)));
    call {:si_unique_call 3199} Tmp_1404 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1404 != 0;
    assume Tmp_1404 > 0;
    call {:si_unique_call 3200} sdv_KeRaiseIrql(2, Tmp_1404);
    assume {:nonnull} Tmp_1404 != 0;
    assume Tmp_1404 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 3201} irpStack_8 := sdv_IoGetCurrentIrpStackLocation(Irp_14);
    assume {:nonnull} irpStack_8 != 0;
    assume irpStack_8 > 0;
    call {:si_unique_call 3202} sdv_KeAcquireSpinLockAtDpcLevel(0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Key_1 != 0;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    inserted_1 := 1;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    havoc nextEntry_2;
    goto L31;

  L31:
    call {:si_unique_call 3203} nextEntry_2, queueEntry2_1, sdv_479 := Sbp2StartPacket#1_loop_L31(nextEntry_2, queueEntry2_1, sdv_479, Key_1);
    goto L31_last;

  L31_last:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 3204} sdv_479 := sdv_containing_record(nextEntry_2, 0);
    queueEntry2_1 := sdv_479;
    assume {:nonnull} Key_1 != 0;
    assume Key_1 > 0;
    assume {:nonnull} queueEntry2_1 != 0;
    assume queueEntry2_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    assume false;
    return;

  anon20_Then:
    goto L32;

  L32:
    assume {:nonnull} nextEntry_2 != 0;
    assume nextEntry_2 > 0;
    havoc nextEntry_2;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3205} InsertHeadList(nextEntry_2, DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  L43:
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    call {:si_unique_call 3206} sdv_KeReleaseSpinLockFromDpcLevel(0);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} inserted_1 != 0;
    goto L51;

  L51:
    call {:si_unique_call 3207} sdv_KeLowerIrql(oldIrql_4);
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} inserted_1 == 0;
    call {:si_unique_call 3208} Sbp2StartIo#1(DeviceObject_21, Irp_14);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L51;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon17_Then:
    goto L32;

  anon19_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;

  anon15_Then:
    assume {:partition} Key_1 == 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    inserted_1 := 1;
    assume {:nonnull} queueEntry_2 != 0;
    assume queueEntry_2 > 0;
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    call {:si_unique_call 3209} vslice_dummy_var_487 := sdv_InsertTailList(DeviceListHead__KDEVICE_QUEUE(queue_1), DeviceListEntry__KDEVICE_QUEUE_ENTRY(queueEntry_2));
    goto L43;

  anon16_Then:
    assume {:nonnull} queue_1 != 0;
    assume queue_1 > 0;
    inserted_1 := 0;
    goto L43;
}



procedure {:origName "Sbp2StartPacket"} Sbp2StartPacket#1(actual_DeviceObject_21: int, actual_Irp_14: int, actual_Key_1: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#0(actual_NotificationInfo_1: int) returns (Tmp_112: int)
{
  var {:pointer} Tmp_113: int;
  var {:pointer} Tmp_114: int;
  var {:pointer} Tmp_115: int;
  var {:scalar} Tmp_116: int;
  var {:pointer} deviceObject_1: int;
  var {:pointer} Tmp_117: int;
  var {:pointer} Tmp_118: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} Tmp_119: int;
  var {:pointer} Tmp_121: int;
  var {:pointer} Tmp_122: int;
  var {:pointer} Tmp_123: int;
  var {:scalar} sdv_23: int;
  var {:scalar} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_126: int;
  var {:scalar} sdv_24: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:scalar} sdv_26: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} sdv_27: int;
  var {:scalar} Tmp_130: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} cIrql: int;
  var {:pointer} Tmp_132: int;
  var {:pointer} Tmp_133: int;
  var {:pointer} Tmp_134: int;
  var {:scalar} sdv_30: int;
  var {:scalar} status_3: int;
  var {:pointer} Tmp_135: int;
  var {:scalar} Tmp_136: int;
  var {:pointer} Tmp_137: int;
  var {:pointer} Tmp_138: int;
  var {:pointer} Tmp_139: int;
  var {:pointer} Tmp_140: int;
  var {:scalar} Tmp_141: int;
  var {:scalar} Tmp_142: int;
  var {:pointer} NotificationInfo_1: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_1272: int;
  var vslice_dummy_var_1273: int;
  var vslice_dummy_var_1274: int;

  anon0:
    NotificationInfo_1 := actual_NotificationInfo_1;
    call {:si_unique_call 3210} Tmp_114 := __HAVOC_malloc(4);
    call {:si_unique_call 3211} vslice_dummy_var_490 := __HAVOC_malloc(352);
    call {:si_unique_call 3212} Tmp_122 := __HAVOC_malloc(4);
    call {:si_unique_call 3213} Tmp_128 := __HAVOC_malloc(352);
    call {:si_unique_call 3214} Tmp_131 := __HAVOC_malloc(4);
    call {:si_unique_call 3215} Tmp_134 := __HAVOC_malloc(4);
    call {:si_unique_call 3216} Tmp_138 := __HAVOC_malloc(352);
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    havoc Tmp_129;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    havoc deviceObject_1;
    assume {:nonnull} deviceObject_1 != 0;
    assume deviceObject_1 > 0;
    pdoExtension_2 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject_1)];
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_132 != 0;
    assume Tmp_132 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3217} status_3 := CheckStatusResponseValue(ManagementOrbStatusBlock__DEVICE_EXTENSION(pdoExtension_2));
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_115;
    assume {:nonnull} Tmp_115 != 0;
    assume Tmp_115 > 0;
    havoc Tmp_136;
    call {:si_unique_call 3218} Sbp2AddLog(pdoExtension_2, 1, -850965188, status_3, Tmp_136);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L106;

  L106:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_134;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    havoc Tmp_116;
    havoc Tmp_113;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_130;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_1272;
    call {:si_unique_call 3219} WPP_SF_qdDD(Tmp_130, 112, Tmp_113, pdoExtension_2, Tmp_116, status_3, vslice_dummy_var_1272);
    goto L107;

  L107:
    call {:si_unique_call 3220} Sbp2AddLog(pdoExtension_2, 1, -850965199, status_3, 0);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3221} vslice_dummy_var_489 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  L54:
    Tmp_112 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L107;

  anon69_Then:
    goto L107;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon56_Then:
    call {:si_unique_call 3222} Tmp_135 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    call {:si_unique_call 3223} sdv_KeAcquireSpinLock(0, Tmp_135);
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    havoc cIrql;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3224} sdv_KeReleaseSpinLock(0, cIrql);
    goto L106;

  anon57_Then:
    call {:si_unique_call 3225} Sbp2ReconnectCompletion#0(pdoExtension_2, status_3);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L54;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_122;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_140;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_124;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_1273;
    call {:si_unique_call 3226} WPP_SF_qDD(Tmp_124, 110, Tmp_140, pdoExtension_2, status_3, vslice_dummy_var_1273);
    goto L56;

  L56:
    call {:si_unique_call 3227} Sbp2AddLog(pdoExtension_2, 1, -783530180, status_3, 0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_126;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_117;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_137;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_133;
    assume {:nonnull} Tmp_133 != 0;
    assume Tmp_133 > 0;
    havoc Tmp_138;
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_139;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_127;
    assume {:nonnull} Tmp_127 != 0;
    assume Tmp_127 > 0;
    havoc Tmp_128;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_114;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_119;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_142;
    call {:si_unique_call 3228} WPP_SF_q(Tmp_142, 111, Tmp_119, pdoExtension_2);
    goto L67;

  L67:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3229} vslice_dummy_var_488 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  anon51_Then:
    goto L67;

  anon67_Then:
    goto L67;

  anon66_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon65_Then:
    goto L67;

  anon64_Then:
    goto L67;

  anon50_Then:
    assume {:partition} 0 > status_3;
    goto L67;

  anon49_Then:
    goto L56;

  anon63_Then:
    goto L56;

  anon48_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon60_Then:
    call {:si_unique_call 3230} Sbp2LoginCompletion#0(pdoExtension_2, status_3);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_131;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_123;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_141;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_1274;
    call {:si_unique_call 3231} WPP_SF_qDD(Tmp_141, 109, Tmp_123, pdoExtension_2, status_3, vslice_dummy_var_1274);
    goto L54;

  anon53_Then:
    goto L54;

  anon62_Then:
    goto L54;

  anon52_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    Tmp_112 := 6;
    goto L1;

  anon47_Then:
    Tmp_112 := 0;
    goto L1;
}



procedure {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#0(actual_NotificationInfo_1: int) returns (Tmp_112: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#1(actual_NotificationInfo_1: int) returns (Tmp_112: int)
{
  var {:pointer} Tmp_113: int;
  var {:pointer} Tmp_114: int;
  var {:pointer} Tmp_115: int;
  var {:scalar} Tmp_116: int;
  var {:pointer} deviceObject_1: int;
  var {:pointer} Tmp_117: int;
  var {:pointer} Tmp_118: int;
  var {:pointer} pdoExtension_2: int;
  var {:pointer} Tmp_119: int;
  var {:pointer} Tmp_121: int;
  var {:pointer} Tmp_122: int;
  var {:pointer} Tmp_123: int;
  var {:scalar} sdv_23: int;
  var {:scalar} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:pointer} Tmp_126: int;
  var {:scalar} sdv_24: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:scalar} sdv_26: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} sdv_27: int;
  var {:scalar} Tmp_130: int;
  var {:pointer} Tmp_131: int;
  var {:scalar} cIrql: int;
  var {:pointer} Tmp_132: int;
  var {:pointer} Tmp_133: int;
  var {:pointer} Tmp_134: int;
  var {:scalar} sdv_30: int;
  var {:scalar} status_3: int;
  var {:pointer} Tmp_135: int;
  var {:scalar} Tmp_136: int;
  var {:pointer} Tmp_137: int;
  var {:pointer} Tmp_138: int;
  var {:pointer} Tmp_139: int;
  var {:pointer} Tmp_140: int;
  var {:scalar} Tmp_141: int;
  var {:scalar} Tmp_142: int;
  var {:pointer} NotificationInfo_1: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_1275: int;
  var vslice_dummy_var_1276: int;
  var vslice_dummy_var_1277: int;

  anon0:
    NotificationInfo_1 := actual_NotificationInfo_1;
    call {:si_unique_call 3232} Tmp_114 := __HAVOC_malloc(4);
    call {:si_unique_call 3233} vslice_dummy_var_493 := __HAVOC_malloc(352);
    call {:si_unique_call 3234} Tmp_122 := __HAVOC_malloc(4);
    call {:si_unique_call 3235} Tmp_128 := __HAVOC_malloc(352);
    call {:si_unique_call 3236} Tmp_131 := __HAVOC_malloc(4);
    call {:si_unique_call 3237} Tmp_134 := __HAVOC_malloc(4);
    call {:si_unique_call 3238} Tmp_138 := __HAVOC_malloc(352);
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    havoc Tmp_129;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    havoc deviceObject_1;
    assume {:nonnull} deviceObject_1 != 0;
    assume deviceObject_1 > 0;
    pdoExtension_2 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject_1)];
    assume {:nonnull} NotificationInfo_1 != 0;
    assume NotificationInfo_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_132 != 0;
    assume Tmp_132 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3239} status_3 := CheckStatusResponseValue(ManagementOrbStatusBlock__DEVICE_EXTENSION(pdoExtension_2));
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_115;
    assume {:nonnull} Tmp_115 != 0;
    assume Tmp_115 > 0;
    havoc Tmp_136;
    call {:si_unique_call 3240} Sbp2AddLog(pdoExtension_2, 1, -850965188, status_3, Tmp_136);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_121;
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Tmp_121 != 0;
    assume Tmp_121 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L106;

  L106:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_134;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    havoc Tmp_116;
    havoc Tmp_113;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_130;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_1275;
    call {:si_unique_call 3241} WPP_SF_qdDD(Tmp_130, 112, Tmp_113, pdoExtension_2, Tmp_116, status_3, vslice_dummy_var_1275);
    goto L107;

  L107:
    call {:si_unique_call 3242} Sbp2AddLog(pdoExtension_2, 1, -850965199, status_3, 0);
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3243} vslice_dummy_var_492 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  L54:
    Tmp_112 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon55_Then:
    goto L107;

  anon69_Then:
    goto L107;

  anon54_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon56_Then:
    call {:si_unique_call 3244} Tmp_135 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    call {:si_unique_call 3245} sdv_KeAcquireSpinLock(0, Tmp_135);
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    havoc cIrql;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3246} sdv_KeReleaseSpinLock(0, cIrql);
    goto L106;

  anon57_Then:
    call {:si_unique_call 3247} Sbp2ReconnectCompletion#1(pdoExtension_2, status_3);
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto L54;

  anon68_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon58_Then:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_122;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    havoc Tmp_140;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_124;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_1276;
    call {:si_unique_call 3248} WPP_SF_qDD(Tmp_124, 110, Tmp_140, pdoExtension_2, status_3, vslice_dummy_var_1276);
    goto L56;

  L56:
    call {:si_unique_call 3249} Sbp2AddLog(pdoExtension_2, 1, -783530180, status_3, 0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_126;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_117;
    assume {:nonnull} Tmp_117 != 0;
    assume Tmp_117 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_137;
    assume {:nonnull} Tmp_137 != 0;
    assume Tmp_137 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_125;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_133;
    assume {:nonnull} Tmp_133 != 0;
    assume Tmp_133 > 0;
    havoc Tmp_138;
    assume {:nonnull} Tmp_138 != 0;
    assume Tmp_138 > 0;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_139;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc Tmp_127;
    assume {:nonnull} Tmp_127 != 0;
    assume Tmp_127 > 0;
    havoc Tmp_128;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_114;
    assume {:nonnull} Tmp_114 != 0;
    assume Tmp_114 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_119;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_142;
    call {:si_unique_call 3250} WPP_SF_q(Tmp_142, 111, Tmp_119, pdoExtension_2);
    goto L67;

  L67:
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    call {:si_unique_call 3251} vslice_dummy_var_491 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(pdoExtension_2), 0, 0);
    goto L54;

  anon51_Then:
    goto L67;

  anon67_Then:
    goto L67;

  anon66_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L67;

  anon65_Then:
    goto L67;

  anon64_Then:
    goto L67;

  anon50_Then:
    assume {:partition} 0 > status_3;
    goto L67;

  anon49_Then:
    goto L56;

  anon63_Then:
    goto L56;

  anon48_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon60_Then:
    call {:si_unique_call 3252} Sbp2LoginCompletion#1(pdoExtension_2, status_3);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_131;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    havoc Tmp_123;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_141;
    assume {:nonnull} pdoExtension_2 != 0;
    assume pdoExtension_2 > 0;
    havoc vslice_dummy_var_1277;
    call {:si_unique_call 3253} WPP_SF_qDD(Tmp_141, 109, Tmp_123, pdoExtension_2, status_3, vslice_dummy_var_1277);
    goto L54;

  anon53_Then:
    goto L54;

  anon62_Then:
    goto L54;

  anon52_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L54;

  anon61_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    Tmp_112 := 6;
    goto L1;

  anon47_Then:
    Tmp_112 := 0;
    goto L1;
}



procedure {:origName "Sbp2ManagementOrbStatusCallback"} Sbp2ManagementOrbStatusCallback#1(actual_NotificationInfo_1: int) returns (Tmp_112: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#0(actual_PdoExtension: int, actual_NtStatus: int)
{
  var {:pointer} Tmp_143: int;
  var {:scalar} Tmp_144: int;
  var {:pointer} Tmp_145: int;
  var {:pointer} Tmp_146: int;
  var {:pointer} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:scalar} Tmp_156: int;
  var {:scalar} Tmp_157: int;
  var {:pointer} Tmp_158: int;
  var {:pointer} Tmp_159: int;
  var {:pointer} Tmp_160: int;
  var {:pointer} Tmp_161: int;
  var {:scalar} sdv_34: int;
  var {:scalar} sdv_35: int;
  var {:scalar} sdv_36: int;
  var {:scalar} Tmp_162: int;
  var {:scalar} irql: int;
  var {:pointer} Tmp_164: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} NtStatus: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_1278: int;
  var vslice_dummy_var_1279: int;
  var vslice_dummy_var_1280: int;
  var vslice_dummy_var_1281: int;
  var vslice_dummy_var_1282: int;

  anon0:
    call {:si_unique_call 3254} vslice_dummy_var_494 := __HAVOC_malloc(4);
    PdoExtension := actual_PdoExtension;
    NtStatus := actual_NtStatus;
    call {:si_unique_call 3255} Tmp_148 := __HAVOC_malloc(4);
    call {:si_unique_call 3256} Tmp_153 := __HAVOC_malloc(4);
    call {:si_unique_call 3257} Tmp_158 := __HAVOC_malloc(4);
    call {:si_unique_call 3258} Tmp_160 := __HAVOC_malloc(4);
    call {:si_unique_call 3259} Tmp_164 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    call {:si_unique_call 3260} sdv_KeAcquireSpinLock(0, Tmp_164);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    havoc irql;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_148;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_147;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_157;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_1278;
    call {:si_unique_call 3261} WPP_SF_qDD(Tmp_157, 64, Tmp_147, PdoExtension, NtStatus, vslice_dummy_var_1278);
    goto L107;

  L107:
    call {:si_unique_call 3262} sdv_KeReleaseSpinLock(0, irql);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon58_Then:
    goto L107;

  anon66_Then:
    goto L107;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon45_Then:
    call {:si_unique_call 3263} Sbp2AddLog(PdoExtension, 1, -867219652, NtStatus, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_158;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_161;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_162;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_1279;
    call {:si_unique_call 3264} WPP_SF_qDD(Tmp_162, 65, Tmp_161, PdoExtension, vslice_dummy_var_1279, NtStatus);
    goto L20;

  L20:
    call {:si_unique_call 3265} vslice_dummy_var_495 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} NtStatus == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L77;

  L77:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_150;
    assume {:nonnull} Tmp_150 != 0;
    assume Tmp_150 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_155;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_143;
    assume {:nonnull} Tmp_143 != 0;
    assume Tmp_143 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_151;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_149;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_146;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_146 != 0;
    assume Tmp_146 > 0;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_159;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3266} sdv_KeReleaseSpinLock(0, irql);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_1280;
    call {:si_unique_call 3267} vslice_dummy_var_497 := Sbp2Reset#0(vslice_dummy_var_1280, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3268} Sbp2StartQueue#0(PdoExtension);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto L62;

  L62:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3269} vslice_dummy_var_496 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension), 0, 0);
    goto L1;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L36;

  L36:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} NtStatus != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_160;
    assume {:nonnull} Tmp_160 != 0;
    assume Tmp_160 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_154;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_156;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_1281;
    call {:si_unique_call 3270} WPP_SF_qDD(Tmp_156, 67, Tmp_154, PdoExtension, vslice_dummy_var_1281, NtStatus);
    goto L44;

  L44:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} NtStatus == -1073741790;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L56;

  L56:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L37;

  L37:
    call {:si_unique_call 3271} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon54_Then:
    goto L37;

  anon53_Then:
    goto L52;

  L52:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} NtStatus == 16384;
    call {:si_unique_call 3272} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon52_Then:
    assume {:partition} NtStatus != 16384;
    goto L56;

  anon50_Then:
    assume {:partition} NtStatus != -1073741790;
    goto L52;

  anon51_Then:
    goto L44;

  anon61_Then:
    goto L44;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L44;

  anon48_Then:
    assume {:partition} NtStatus == 0;
    goto L37;

  anon55_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L77;

  anon62_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L77;

  anon56_Then:
    havoc Tmp_145;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_144;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_1282;
    call {:si_unique_call 3273} WPP_SF_qD(Tmp_144, 66, Tmp_145, PdoExtension, vslice_dummy_var_1282);
    goto L77;

  anon60_Then:
    assume {:partition} NtStatus != 0;
    goto L36;

  anon47_Then:
    goto L20;

  anon59_Then:
    goto L20;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L20;
}



procedure {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#0(actual_PdoExtension: int, actual_NtStatus: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(completion_called) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#1(actual_PdoExtension: int, actual_NtStatus: int)
{
  var {:pointer} Tmp_143: int;
  var {:scalar} Tmp_144: int;
  var {:pointer} Tmp_145: int;
  var {:pointer} Tmp_146: int;
  var {:pointer} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:scalar} Tmp_156: int;
  var {:scalar} Tmp_157: int;
  var {:pointer} Tmp_158: int;
  var {:pointer} Tmp_159: int;
  var {:pointer} Tmp_160: int;
  var {:pointer} Tmp_161: int;
  var {:scalar} sdv_34: int;
  var {:scalar} sdv_35: int;
  var {:scalar} sdv_36: int;
  var {:scalar} Tmp_162: int;
  var {:scalar} irql: int;
  var {:pointer} Tmp_164: int;
  var {:pointer} PdoExtension: int;
  var {:scalar} NtStatus: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_1283: int;
  var vslice_dummy_var_1284: int;
  var vslice_dummy_var_1285: int;
  var vslice_dummy_var_1286: int;
  var vslice_dummy_var_1287: int;

  anon0:
    call {:si_unique_call 3274} vslice_dummy_var_498 := __HAVOC_malloc(4);
    PdoExtension := actual_PdoExtension;
    NtStatus := actual_NtStatus;
    call {:si_unique_call 3275} Tmp_148 := __HAVOC_malloc(4);
    call {:si_unique_call 3276} Tmp_153 := __HAVOC_malloc(4);
    call {:si_unique_call 3277} Tmp_158 := __HAVOC_malloc(4);
    call {:si_unique_call 3278} Tmp_160 := __HAVOC_malloc(4);
    call {:si_unique_call 3279} Tmp_164 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    call {:si_unique_call 3280} sdv_KeAcquireSpinLock(0, Tmp_164);
    assume {:nonnull} Tmp_164 != 0;
    assume Tmp_164 > 0;
    havoc irql;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_148;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    havoc Tmp_147;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_157;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_1283;
    call {:si_unique_call 3281} WPP_SF_qDD(Tmp_157, 64, Tmp_147, PdoExtension, NtStatus, vslice_dummy_var_1283);
    goto L107;

  L107:
    call {:si_unique_call 3282} sdv_KeReleaseSpinLock(0, irql);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon58_Then:
    goto L107;

  anon66_Then:
    goto L107;

  anon57_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L107;

  anon45_Then:
    call {:si_unique_call 3283} Sbp2AddLog(PdoExtension, 1, -867219652, NtStatus, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_158;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc Tmp_161;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_162;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_1284;
    call {:si_unique_call 3284} WPP_SF_qDD(Tmp_162, 65, Tmp_161, PdoExtension, vslice_dummy_var_1284, NtStatus);
    goto L20;

  L20:
    call {:si_unique_call 3285} vslice_dummy_var_499 := KeCancelTimer(0);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} NtStatus == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L77;

  L77:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_150;
    assume {:nonnull} Tmp_150 != 0;
    assume Tmp_150 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_155;
    assume {:nonnull} Tmp_155 != 0;
    assume Tmp_155 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_143;
    assume {:nonnull} Tmp_143 != 0;
    assume Tmp_143 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_151;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_149;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_151 != 0;
    assume Tmp_151 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_146;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_152;
    assume {:nonnull} Tmp_146 != 0;
    assume Tmp_146 > 0;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc Tmp_159;
    assume {:nonnull} Tmp_159 != 0;
    assume Tmp_159 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3286} sdv_KeReleaseSpinLock(0, irql);
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_1285;
    call {:si_unique_call 3287} vslice_dummy_var_501 := Sbp2Reset#1(vslice_dummy_var_1285, 1);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3288} Sbp2StartQueue#1(PdoExtension);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto L62;

  L62:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    call {:si_unique_call 3289} vslice_dummy_var_500 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(PdoExtension), 0, 0);
    goto L1;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon63_Then:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L36;

  L36:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} NtStatus != 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_160;
    assume {:nonnull} Tmp_160 != 0;
    assume Tmp_160 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    havoc Tmp_154;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_156;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_1286;
    call {:si_unique_call 3290} WPP_SF_qDD(Tmp_156, 67, Tmp_154, PdoExtension, vslice_dummy_var_1286, NtStatus);
    goto L44;

  L44:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} NtStatus == -1073741790;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L56;

  L56:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    goto L37;

  L37:
    call {:si_unique_call 3291} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon54_Then:
    goto L37;

  anon53_Then:
    goto L52;

  L52:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} NtStatus == 16384;
    call {:si_unique_call 3292} sdv_KeReleaseSpinLock(0, irql);
    goto L62;

  anon52_Then:
    assume {:partition} NtStatus != 16384;
    goto L56;

  anon50_Then:
    assume {:partition} NtStatus != -1073741790;
    goto L52;

  anon51_Then:
    goto L44;

  anon61_Then:
    goto L44;

  anon49_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L44;

  anon48_Then:
    assume {:partition} NtStatus == 0;
    goto L37;

  anon55_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_153;
    assume {:nonnull} Tmp_153 != 0;
    assume Tmp_153 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto L77;

  anon62_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L77;

  anon56_Then:
    havoc Tmp_145;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_144;
    assume {:nonnull} PdoExtension != 0;
    assume PdoExtension > 0;
    havoc vslice_dummy_var_1287;
    call {:si_unique_call 3293} WPP_SF_qD(Tmp_144, 66, Tmp_145, PdoExtension, vslice_dummy_var_1287);
    goto L77;

  anon60_Then:
    assume {:partition} NtStatus != 0;
    goto L36;

  anon47_Then:
    goto L20;

  anon59_Then:
    goto L20;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L20;
}



procedure {:origName "Sbp2LoginCompletion"} Sbp2LoginCompletion#1(actual_PdoExtension: int, actual_NtStatus: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#0(actual_NotificationInfo_2: int) returns (Tmp_425: int)
{
  var {:pointer} nextListItem: int;
  var {:scalar} Tmp_426: int;
  var {:pointer} Tmp_427: int;
  var {:scalar} Tmp_428: int;
  var {:pointer} Tmp_429: int;
  var {:scalar} Tmp_430: int;
  var {:pointer} Tmp_431: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:scalar} sdv_118: int;
  var {:pointer} tempPointer: int;
  var {:scalar} Tmp_434: int;
  var {:pointer} requestIrp: int;
  var {:pointer} senseBuffer: int;
  var {:scalar} initialOrbListDepth: int;
  var {:scalar} Tmp_435: int;
  var {:pointer} Tmp_436: int;
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:pointer} orbContext: int;
  var {:scalar} sdv_121: int;
  var {:scalar} src: int;
  var {:pointer} Tmp_439: int;
  var {:pointer} Tmp_440: int;
  var {:scalar} Tmp_441: int;
  var {:pointer} srb: int;
  var {:scalar} Tmp_442: int;
  var {:pointer} deviceObject_2: int;
  var {:pointer} Tmp_444: int;
  var {:scalar} currentOrbListDepth: int;
  var {:scalar} Tmp_445: int;
  var {:scalar} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} Tmp_448: int;
  var {:scalar} Tmp_449: int;
  var {:scalar} Tmp_450: int;
  var {:scalar} Tmp_451: int;
  var {:pointer} Tmp_452: int;
  var {:scalar} sdv_125: int;
  var {:scalar} Tmp_453: int;
  var {:scalar} Tmp_454: int;
  var {:scalar} temp: int;
  var {:scalar} dueTime: int;
  var {:pointer} Tmp_455: int;
  var {:pointer} Tmp_456: int;
  var {:pointer} Tmp_457: int;
  var {:scalar} sdv_127: int;
  var {:scalar} status_10: int;
  var {:pointer} entry: int;
  var {:pointer} Tmp_459: int;
  var {:scalar} Tmp_460: int;
  var {:scalar} Tmp_461: int;
  var {:scalar} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:pointer} sdv_129: int;
  var {:pointer} pdoExtension_3: int;
  var {:pointer} Tmp_464: int;
  var {:pointer} Tmp_465: int;
  var {:scalar} orbLock: int;
  var {:pointer} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:pointer} Tmp_468: int;
  var {:scalar} Tmp_469: int;
  var {:scalar} Tmp_470: int;
  var {:pointer} statusBlock: int;
  var {:pointer} Tmp_471: int;
  var {:pointer} sdv_132: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} Tmp_472: int;
  var {:pointer} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:scalar} Tmp_475: int;
  var {:pointer} Tmp_476: int;
  var {:pointer} Tmp_477: int;
  var {:scalar} Tmp_478: int;
  var {:scalar} Tmp_479: int;
  var {:scalar} Tmp_480: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:scalar} rcode: int;
  var {:pointer} Tmp_484: int;
  var {:pointer} Tmp_485: int;
  var {:pointer} Tmp_486: int;
  var {:pointer} Tmp_487: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} sdv_138: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:scalar} sdv_141: int;
  var {:pointer} Tmp_494: int;
  var {:scalar} Tmp_496: int;
  var {:scalar} Tmp_497: int;
  var {:scalar} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:pointer} Tmp_500: int;
  var {:pointer} Tmp_501: int;
  var {:pointer} NotificationInfo_2: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_504: int;
  var vslice_dummy_var_505: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_510: int;
  var vslice_dummy_var_511: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_1288: int;
  var vslice_dummy_var_1289: int;
  var vslice_dummy_var_1290: int;
  var vslice_dummy_var_1291: int;
  var vslice_dummy_var_1292: int;
  var vslice_dummy_var_1293: int;
  var vslice_dummy_var_1294: int;
  var vslice_dummy_var_1295: int;
  var vslice_dummy_var_1296: int;
  var vslice_dummy_var_1297: int;
  var vslice_dummy_var_1298: int;
  var vslice_dummy_var_1299: int;
  var vslice_dummy_var_1300: int;
  var vslice_dummy_var_1301: int;
  var vslice_dummy_var_1302: int;
  var vslice_dummy_var_1303: int;
  var vslice_dummy_var_1304: int;
  var vslice_dummy_var_1305: int;
  var vslice_dummy_var_1306: int;
  var vslice_dummy_var_1307: int;
  var vslice_dummy_var_1308: int;

  anon0:
    call {:si_unique_call 3294} dueTime := __HAVOC_malloc(20);
    call {:si_unique_call 3295} orbLock := __HAVOC_malloc(12);
    NotificationInfo_2 := actual_NotificationInfo_2;
    call {:si_unique_call 3296} Tmp_429 := __HAVOC_malloc(4);
    call {:si_unique_call 3297} Tmp_433 := __HAVOC_malloc(4);
    call {:si_unique_call 3298} Tmp_436 := __HAVOC_malloc(4);
    call {:si_unique_call 3299} Tmp_437 := __HAVOC_malloc(64);
    call {:si_unique_call 3300} Tmp_440 := __HAVOC_malloc(4);
    call {:si_unique_call 3301} Tmp_447 := __HAVOC_malloc(4);
    call {:si_unique_call 3302} Tmp_448 := __HAVOC_malloc(4);
    call {:si_unique_call 3303} Tmp_452 := __HAVOC_malloc(4);
    call {:si_unique_call 3304} Tmp_455 := __HAVOC_malloc(64);
    call {:si_unique_call 3305} Tmp_456 := __HAVOC_malloc(4);
    call {:si_unique_call 3306} Tmp_459 := __HAVOC_malloc(64);
    call {:si_unique_call 3307} Tmp_465 := __HAVOC_malloc(4);
    call {:si_unique_call 3308} Tmp_471 := __HAVOC_malloc(4);
    call {:si_unique_call 3309} Tmp_474 := __HAVOC_malloc(4);
    call {:si_unique_call 3310} Tmp_485 := __HAVOC_malloc(64);
    call {:si_unique_call 3311} Tmp_487 := __HAVOC_malloc(4);
    call {:si_unique_call 3312} Tmp_489 := __HAVOC_malloc(64);
    call {:si_unique_call 3313} Tmp_490 := __HAVOC_malloc(4);
    call {:si_unique_call 3314} Tmp_492 := __HAVOC_malloc(4);
    call {:si_unique_call 3315} Tmp_493 := __HAVOC_malloc(4);
    call {:si_unique_call 3316} Tmp_499 := __HAVOC_malloc(4);
    srb := 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_474;
    assume {:nonnull} Tmp_474 != 0;
    assume Tmp_474 > 0;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    havoc Tmp_484;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_461;
    call {:si_unique_call 3317} WPP_SF_q(Tmp_461, 92, Tmp_484, NotificationInfo_2);
    goto L446;

  L446:
    Tmp_425 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon243_Then:
    goto L446;

  anon279_Then:
    goto L446;

  anon242_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L446;

  anon244_Then:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    havoc Tmp_466;
    assume {:nonnull} Tmp_466 != 0;
    assume Tmp_466 > 0;
    havoc deviceObject_2;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    pdoExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject_2)];
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3318} sdv_138 := sdv_MmGetMdlVirtualAddress(0);
    statusBlock := sdv_138;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3319} status_10 := CheckStatusResponseValue(statusBlock);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_433;
    assume {:nonnull} Tmp_433 != 0;
    assume Tmp_433 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_439;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_478;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1288;
    call {:si_unique_call 3320} WPP_SF_qDD(Tmp_478, 93, Tmp_439, pdoExtension_3, status_10, vslice_dummy_var_1288);
    goto L55;

  L55:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3321} vslice_dummy_var_511 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := 0;
    goto L1;

  anon190_Then:
    goto L55;

  anon245_Then:
    goto L55;

  anon189_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L55;

  anon187_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    call {:si_unique_call 3322} Sbp2LoginCompletion#0(pdoExtension_3, status_10);
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    rcode := 0;
    goto L73;

  L73:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3323} vslice_dummy_var_512 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := rcode;
    goto L1;

  anon246_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon191_Then:
    goto L66;

  L66:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc src;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} 32768 == src;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_490;
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    havoc Tmp_486;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_498;
    call {:si_unique_call 3324} WPP_SF_q(Tmp_498, 94, Tmp_486, pdoExtension_3);
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3325} vslice_dummy_var_502 := Sbp2AccessRegister#0(pdoExtension_3, Reserved__DEVICE_EXTENSION(pdoExtension_3), 1040);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3326} Sbp2HandleUnsolicited(pdoExtension_3, statusBlock);
    rcode := 0;
    goto L73;

  anon249_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon194_Then:
    goto L83;

  anon248_Then:
    goto L83;

  anon193_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon247_Then:
    assume {:partition} 32768 != src;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} 49152 == src;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_488;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_428;
    call {:si_unique_call 3327} WPP_SF_q(Tmp_428, 95, Tmp_488, pdoExtension_3);
    goto L103;

  L103:
    rcode := 0;
    goto L73;

  anon197_Then:
    goto L103;

  anon250_Then:
    goto L103;

  anon196_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon192_Then:
    assume {:partition} 49152 != src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_487;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    havoc Tmp_468;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_434;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1289;
    call {:si_unique_call 3328} WPP_SF_qDD(Tmp_434, 96, Tmp_468, pdoExtension_3, status_10, vslice_dummy_var_1289);
    goto L434;

  L434:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3329} vslice_dummy_var_518 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := 0;
    goto L1;

  anon241_Then:
    goto L434;

  anon278_Then:
    goto L434;

  anon240_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L434;

  anon195_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc temp;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} temp > 384;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  L132:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc Tmp_431;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_426;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_1290;
    havoc vslice_dummy_var_1291;
    havoc vslice_dummy_var_1292;
    havoc vslice_dummy_var_1293;
    call {:si_unique_call 3330} WPP_SF_qDDDD(Tmp_426, 98, Tmp_431, pdoExtension_3, vslice_dummy_var_1290, vslice_dummy_var_1291, vslice_dummy_var_1292, vslice_dummy_var_1293);
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1294;
    call {:si_unique_call 3331} Sbp2CreateRequestErrorLog(vslice_dummy_var_1294, 0, 3699, -1073741434);
    rcode := 7;
    goto L73;

  anon201_Then:
    goto L133;

  anon253_Then:
    goto L133;

  anon200_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L133;

  anon198_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_492;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto L132;

  anon252_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto L132;

  anon199_Then:
    havoc Tmp_438;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_446;
    call {:si_unique_call 3332} WPP_SF_qD(Tmp_446, 97, Tmp_438, pdoExtension_3, temp);
    goto L132;

  anon251_Then:
    assume {:partition} 384 >= temp;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc tempPointer;
    call {:si_unique_call 3333} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    assume {:nonnull} tempPointer != 0;
    assume tempPointer > 0;
    havoc orbContext;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:partition} orbContext != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_429;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    havoc Tmp_477;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_497;
    call {:si_unique_call 3334} WPP_SF_qq(Tmp_497, 100, Tmp_477, pdoExtension_3, orbContext);
    goto L158;

  L158:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    call {:si_unique_call 3335} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_447;
    assume {:nonnull} Tmp_447 != 0;
    assume Tmp_447 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    havoc Tmp_427;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_481;
    call {:si_unique_call 3336} WPP_SF_qq(Tmp_481, 101, Tmp_427, pdoExtension_3, orbContext);
    goto L174;

  L174:
    rcode := 0;
    goto L73;

  anon207_Then:
    goto L174;

  anon257_Then:
    goto L174;

  anon206_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L174;

  anon204_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_473;
    assume {:nonnull} Tmp_473 != 0;
    assume Tmp_473 > 0;
    havoc requestIrp;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3337} vslice_dummy_var_513 := KeCancelTimer(0);
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_448;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_483;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_441;
    call {:si_unique_call 3338} WPP_SF_qq(Tmp_441, 102, Tmp_483, pdoExtension_3, orbContext);
    goto L196;

  L196:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc entry;
    goto L204;

  L204:
    call {:si_unique_call 3339} nextListItem, entry, sdv_132 := Sbp2GlobalStatusCallback#0_loop_L204(nextListItem, entry, sdv_132);
    goto L204_last;

  L204_last:
    goto anon210_Then, anon210_Else;

  anon210_Else:
    call {:si_unique_call 3340} sdv_132 := sdv_containing_record(entry, 0);
    nextListItem := sdv_132;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon260_Else_dummy;

  anon260_Else_dummy:
    assume false;
    return;

  anon260_Then:
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_476;
    assume {:nonnull} Tmp_476 != 0;
    assume Tmp_476 > 0;
    assume {:nonnull} dueTime != 0;
    assume dueTime > 0;
    call {:si_unique_call 3341} vslice_dummy_var_514 := KeSetTimer(0, dueTime, 0);
    goto L185;

  L185:
    call {:si_unique_call 3342} Free1394DataMapping(pdoExtension_3, orbContext);
    call {:si_unique_call 3343} vslice_dummy_var_503 := Sbp2_SCSI_RBC_Conversion(orbContext);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc srb;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc initialOrbListDepth;
    call {:si_unique_call 3344} vslice_dummy_var_515 := sdv_RemoveEntryList(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3345} InitializeListHead(OrbList__ASYNC_REQUEST_CONTEXT(orbContext));
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_1295;
    havoc vslice_dummy_var_1296;
    call {:si_unique_call 3346} Sbp2AddLog(pdoExtension_3, 64, -915451291, vslice_dummy_var_1295, vslice_dummy_var_1296);
    call {:si_unique_call 3347} vslice_dummy_var_504 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1297;
    call {:si_unique_call 3348} vslice_dummy_var_506 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_1297);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L238;

  L238:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1298;
    call {:si_unique_call 3349} vslice_dummy_var_505 := Sbp2Reset#0(vslice_dummy_var_1298, 1);
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3350} sdv_127 := sdv_IsListEmpty(0);
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} sdv_127 != 0;
    goto L252;

  L252:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc currentOrbListDepth;
    call {:si_unique_call 3351} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3352} Tmp_501 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    call {:si_unique_call 3353} sdv_KeAcquireSpinLock(0, Tmp_501);
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    havoc oldIrql_1;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3354} sdv_KeReleaseSpinLock(0, oldIrql_1);
    call {:si_unique_call 3355} Tmp_462 := corral_nondet();
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} Tmp_462 > 1;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    goto L367;

  L367:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_452;
    assume {:nonnull} Tmp_452 != 0;
    assume Tmp_452 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_485;
    assume {:nonnull} Tmp_485 != 0;
    assume Tmp_485 > 0;
    havoc Tmp_480;
    havoc Tmp_463;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_435;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_1299;
    call {:si_unique_call 3356} WPP_SF_qDD(Tmp_435, 106, Tmp_463, pdoExtension_3, Tmp_480, vslice_dummy_var_1299);
    goto L291;

  L291:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3357} Sbp2AddLog(pdoExtension_3, 64, -915455121, status_10, requestIrp);
    call {:si_unique_call 3358} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3359} sdv_141 := sdv_IsListEmpty(0);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} sdv_141 != 0;
    call {:si_unique_call 3360} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3361} vslice_dummy_var_507 := Sbp2RestartPendingPowerIrp#0(pdoExtension_3);
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} yogi_error != 1;
    goto L322;

  L322:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_472;
    goto L326;

  L326:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3362} vslice_dummy_var_516 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_3), requestIrp);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume requestIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3363} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} yogi_error != 1;
    goto L527;

  L527:
    call {:si_unique_call 3364} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    goto L341;

  L341:
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_456;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    havoc Tmp_444;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_450;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1300;
    call {:si_unique_call 3365} WPP_SF_qd(Tmp_450, 108, Tmp_444, pdoExtension_3, vslice_dummy_var_1300);
    goto L342;

  L342:
    rcode := 0;
    goto L73;

  anon226_Then:
    goto L342;

  anon269_Then:
    goto L342;

  anon225_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L342;

  anon223_Then:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} initialOrbListDepth <= currentOrbListDepth;
    goto L341;

  anon224_Then:
    assume {:partition} currentOrbListDepth < initialOrbListDepth;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1301;
    call {:si_unique_call 3366} Sbp2StartNextPacketByKey#0(deviceObject_2, vslice_dummy_var_1301);
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:partition} yogi_error != 1;
    goto L341;

  anon268_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon267_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon222_Then:
    assume !(requestIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L527;

  anon266_Then:
    Tmp_472 := 0;
    goto L326;

  anon265_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon221_Then:
    assume {:partition} sdv_141 == 0;
    call {:si_unique_call 3367} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto L322;

  anon233_Then:
    goto L291;

  anon264_Then:
    goto L291;

  anon232_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon263_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    goto L367;

  anon215_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_440;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_455;
    assume {:nonnull} Tmp_455 != 0;
    assume Tmp_455 > 0;
    havoc Tmp_467;
    havoc Tmp_482;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_442;
    call {:si_unique_call 3368} WPP_SF_qD(Tmp_442, 105, Tmp_482, pdoExtension_3, Tmp_467);
    goto L352;

  L352:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    Tmp_430 := 32;
    goto L364;

  L364:
    call {:si_unique_call 3369} sdv_RtlCopyMemory(0, 0, Tmp_430);
    goto L291;

  anon231_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_430;
    goto L364;

  anon229_Then:
    goto L291;

  anon230_Then:
    goto L352;

  anon272_Then:
    goto L352;

  anon228_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L352;

  anon216_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_453;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_1302;
    call {:si_unique_call 3370} sdv_118 := ConvertSbp2SenseDataToScsi(statusBlock, vslice_dummy_var_1302, Tmp_453);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} sdv_118 != 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L283;

  L283:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc senseBuffer;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_489;
    assume {:nonnull} Tmp_489 != 0;
    assume Tmp_489 > 0;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    goto L290;

  L290:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_449;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_460;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_432;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_437;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    havoc Tmp_496;
    havoc Tmp_464;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_475;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_1303;
    havoc vslice_dummy_var_1304;
    call {:si_unique_call 3371} WPP_SF_qDDDDDd(Tmp_475, 103, Tmp_464, pdoExtension_3, Tmp_496, Tmp_432, Tmp_460, Tmp_449, vslice_dummy_var_1303, vslice_dummy_var_1304);
    goto L291;

  anon220_Then:
    goto L291;

  anon271_Then:
    goto L291;

  anon219_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon270_Then:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto L291;

  anon227_Then:
    goto L290;

  anon218_Then:
    goto L290;

  anon217_Then:
    assume {:partition} sdv_118 == 0;
    goto L283;

  anon262_Then:
    assume {:partition} 1 >= Tmp_462;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_454;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} Tmp_454 == 4096;
    goto L381;

  L381:
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_465;
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_479;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_459;
    assume {:nonnull} Tmp_459 != 0;
    assume Tmp_459 > 0;
    havoc Tmp_469;
    havoc Tmp_457;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_445;
    call {:si_unique_call 3372} WPP_SF_qDD(Tmp_445, 107, Tmp_457, pdoExtension_3, Tmp_469, Tmp_479);
    goto L382;

  L382:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon235_Then:
    goto L382;

  anon274_Then:
    goto L382;

  anon234_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L382;

  anon273_Then:
    assume {:partition} Tmp_454 != 4096;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_470;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:partition} Tmp_470 != 8192;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon275_Then:
    assume {:partition} Tmp_470 == 8192;
    goto L381;

  anon214_Then:
    assume {:partition} sdv_127 == 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1305;
    call {:si_unique_call 3373} sdv_129 := sdv_containing_record(vslice_dummy_var_1305, 0);
    nextListItem := sdv_129;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    call {:si_unique_call 3374} vslice_dummy_var_517 := Sbp2AccessRegister#0(pdoExtension_3, CmdOrbAddress__ASYNC_REQUEST_CONTEXT(nextListItem), 1028);
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} yogi_error != 1;
    goto L252;

  anon276_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon261_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon213_Then:
    goto L238;

  anon211_Then:
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} 16384 == src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1306;
    call {:si_unique_call 3375} vslice_dummy_var_509 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_1306);
    goto L405;

  L405:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_494;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon277_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon236_Then:
    goto L405;

  anon212_Then:
    assume {:partition} 16384 != src;
    call {:si_unique_call 3376} vslice_dummy_var_508 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1307;
    call {:si_unique_call 3377} vslice_dummy_var_510 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_1307);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon237_Then:
    goto L252;

  anon210_Then:
    goto L185;

  anon209_Then:
    goto L196;

  anon259_Then:
    goto L196;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon258_Then:
    goto L185;

  anon205_Then:
    goto L158;

  anon256_Then:
    goto L158;

  anon203_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L158;

  anon202_Then:
    goto L150;

  L150:
    call {:si_unique_call 3378} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_436;
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    havoc Tmp_500;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_451;
    call {:si_unique_call 3379} WPP_SF_qD(Tmp_451, 99, Tmp_500, pdoExtension_3, temp);
    goto L421;

  L421:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1308;
    call {:si_unique_call 3380} Sbp2CreateRequestErrorLog(vslice_dummy_var_1308, 0, 3729, -1073741434);
    rcode := 7;
    goto L73;

  anon239_Then:
    goto L421;

  anon255_Then:
    goto L421;

  anon238_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L421;

  anon254_Then:
    assume {:partition} orbContext == 0;
    goto L150;

  anon188_Then:
    goto L66;
}



procedure {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#0(actual_NotificationInfo_2: int) returns (Tmp_425: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#1(actual_NotificationInfo_2: int) returns (Tmp_425: int)
{
  var {:pointer} nextListItem: int;
  var {:scalar} Tmp_426: int;
  var {:pointer} Tmp_427: int;
  var {:scalar} Tmp_428: int;
  var {:pointer} Tmp_429: int;
  var {:scalar} Tmp_430: int;
  var {:pointer} Tmp_431: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:scalar} sdv_118: int;
  var {:pointer} tempPointer: int;
  var {:scalar} Tmp_434: int;
  var {:pointer} requestIrp: int;
  var {:pointer} senseBuffer: int;
  var {:scalar} initialOrbListDepth: int;
  var {:scalar} Tmp_435: int;
  var {:pointer} Tmp_436: int;
  var {:pointer} Tmp_437: int;
  var {:pointer} Tmp_438: int;
  var {:pointer} orbContext: int;
  var {:scalar} sdv_121: int;
  var {:scalar} src: int;
  var {:pointer} Tmp_439: int;
  var {:pointer} Tmp_440: int;
  var {:scalar} Tmp_441: int;
  var {:pointer} srb: int;
  var {:scalar} Tmp_442: int;
  var {:pointer} deviceObject_2: int;
  var {:pointer} Tmp_444: int;
  var {:scalar} currentOrbListDepth: int;
  var {:scalar} Tmp_445: int;
  var {:scalar} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} Tmp_448: int;
  var {:scalar} Tmp_449: int;
  var {:scalar} Tmp_450: int;
  var {:scalar} Tmp_451: int;
  var {:pointer} Tmp_452: int;
  var {:scalar} sdv_125: int;
  var {:scalar} Tmp_453: int;
  var {:scalar} Tmp_454: int;
  var {:scalar} temp: int;
  var {:scalar} dueTime: int;
  var {:pointer} Tmp_455: int;
  var {:pointer} Tmp_456: int;
  var {:pointer} Tmp_457: int;
  var {:scalar} sdv_127: int;
  var {:scalar} status_10: int;
  var {:pointer} entry: int;
  var {:pointer} Tmp_459: int;
  var {:scalar} Tmp_460: int;
  var {:scalar} Tmp_461: int;
  var {:scalar} Tmp_462: int;
  var {:pointer} Tmp_463: int;
  var {:pointer} sdv_129: int;
  var {:pointer} pdoExtension_3: int;
  var {:pointer} Tmp_464: int;
  var {:pointer} Tmp_465: int;
  var {:scalar} orbLock: int;
  var {:pointer} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:pointer} Tmp_468: int;
  var {:scalar} Tmp_469: int;
  var {:scalar} Tmp_470: int;
  var {:pointer} statusBlock: int;
  var {:pointer} Tmp_471: int;
  var {:pointer} sdv_132: int;
  var {:scalar} oldIrql_1: int;
  var {:scalar} Tmp_472: int;
  var {:pointer} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:scalar} Tmp_475: int;
  var {:pointer} Tmp_476: int;
  var {:pointer} Tmp_477: int;
  var {:scalar} Tmp_478: int;
  var {:scalar} Tmp_479: int;
  var {:scalar} Tmp_480: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:pointer} Tmp_483: int;
  var {:scalar} rcode: int;
  var {:pointer} Tmp_484: int;
  var {:pointer} Tmp_485: int;
  var {:pointer} Tmp_486: int;
  var {:pointer} Tmp_487: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} sdv_138: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:scalar} sdv_141: int;
  var {:pointer} Tmp_494: int;
  var {:scalar} Tmp_496: int;
  var {:scalar} Tmp_497: int;
  var {:scalar} Tmp_498: int;
  var {:pointer} Tmp_499: int;
  var {:pointer} Tmp_500: int;
  var {:pointer} Tmp_501: int;
  var {:pointer} NotificationInfo_2: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_525: int;
  var vslice_dummy_var_526: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_528: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;
  var vslice_dummy_var_532: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_534: int;
  var vslice_dummy_var_535: int;
  var vslice_dummy_var_1309: int;
  var vslice_dummy_var_1310: int;
  var vslice_dummy_var_1311: int;
  var vslice_dummy_var_1312: int;
  var vslice_dummy_var_1313: int;
  var vslice_dummy_var_1314: int;
  var vslice_dummy_var_1315: int;
  var vslice_dummy_var_1316: int;
  var vslice_dummy_var_1317: int;
  var vslice_dummy_var_1318: int;
  var vslice_dummy_var_1319: int;
  var vslice_dummy_var_1320: int;
  var vslice_dummy_var_1321: int;
  var vslice_dummy_var_1322: int;
  var vslice_dummy_var_1323: int;
  var vslice_dummy_var_1324: int;
  var vslice_dummy_var_1325: int;
  var vslice_dummy_var_1326: int;
  var vslice_dummy_var_1327: int;
  var vslice_dummy_var_1328: int;
  var vslice_dummy_var_1329: int;

  anon0:
    call {:si_unique_call 3381} dueTime := __HAVOC_malloc(20);
    call {:si_unique_call 3382} orbLock := __HAVOC_malloc(12);
    NotificationInfo_2 := actual_NotificationInfo_2;
    call {:si_unique_call 3383} Tmp_429 := __HAVOC_malloc(4);
    call {:si_unique_call 3384} Tmp_433 := __HAVOC_malloc(4);
    call {:si_unique_call 3385} Tmp_436 := __HAVOC_malloc(4);
    call {:si_unique_call 3386} Tmp_437 := __HAVOC_malloc(64);
    call {:si_unique_call 3387} Tmp_440 := __HAVOC_malloc(4);
    call {:si_unique_call 3388} Tmp_447 := __HAVOC_malloc(4);
    call {:si_unique_call 3389} Tmp_448 := __HAVOC_malloc(4);
    call {:si_unique_call 3390} Tmp_452 := __HAVOC_malloc(4);
    call {:si_unique_call 3391} Tmp_455 := __HAVOC_malloc(64);
    call {:si_unique_call 3392} Tmp_456 := __HAVOC_malloc(4);
    call {:si_unique_call 3393} Tmp_459 := __HAVOC_malloc(64);
    call {:si_unique_call 3394} Tmp_465 := __HAVOC_malloc(4);
    call {:si_unique_call 3395} Tmp_471 := __HAVOC_malloc(4);
    call {:si_unique_call 3396} Tmp_474 := __HAVOC_malloc(4);
    call {:si_unique_call 3397} Tmp_485 := __HAVOC_malloc(64);
    call {:si_unique_call 3398} Tmp_487 := __HAVOC_malloc(4);
    call {:si_unique_call 3399} Tmp_489 := __HAVOC_malloc(64);
    call {:si_unique_call 3400} Tmp_490 := __HAVOC_malloc(4);
    call {:si_unique_call 3401} Tmp_492 := __HAVOC_malloc(4);
    call {:si_unique_call 3402} Tmp_493 := __HAVOC_malloc(4);
    call {:si_unique_call 3403} Tmp_499 := __HAVOC_malloc(4);
    srb := 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} orbLock != 0;
    assume orbLock > 0;
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    goto anon244_Then, anon244_Else;

  anon244_Else:
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_474;
    assume {:nonnull} Tmp_474 != 0;
    assume Tmp_474 > 0;
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon243_Then, anon243_Else;

  anon243_Else:
    havoc Tmp_484;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_461;
    call {:si_unique_call 3404} WPP_SF_q(Tmp_461, 92, Tmp_484, NotificationInfo_2);
    goto L446;

  L446:
    Tmp_425 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon243_Then:
    goto L446;

  anon279_Then:
    goto L446;

  anon242_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L446;

  anon244_Then:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    havoc Tmp_466;
    assume {:nonnull} Tmp_466 != 0;
    assume Tmp_466 > 0;
    havoc deviceObject_2;
    assume {:nonnull} deviceObject_2 != 0;
    assume deviceObject_2 > 0;
    pdoExtension_3 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(deviceObject_2)];
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3405} sdv_138 := sdv_MmGetMdlVirtualAddress(0);
    statusBlock := sdv_138;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3406} status_10 := CheckStatusResponseValue(statusBlock);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_433;
    assume {:nonnull} Tmp_433 != 0;
    assume Tmp_433 > 0;
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    havoc Tmp_439;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_478;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1309;
    call {:si_unique_call 3407} WPP_SF_qDD(Tmp_478, 93, Tmp_439, pdoExtension_3, status_10, vslice_dummy_var_1309);
    goto L55;

  L55:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3408} vslice_dummy_var_528 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := 0;
    goto L1;

  anon190_Then:
    goto L55;

  anon245_Then:
    goto L55;

  anon189_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L55;

  anon187_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    call {:si_unique_call 3409} Sbp2LoginCompletion#1(pdoExtension_3, status_10);
    goto anon246_Then, anon246_Else;

  anon246_Else:
    assume {:partition} yogi_error != 1;
    rcode := 0;
    goto L73;

  L73:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3410} vslice_dummy_var_529 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := rcode;
    goto L1;

  anon246_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon191_Then:
    goto L66;

  L66:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc src;
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:partition} 32768 == src;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_490;
    assume {:nonnull} Tmp_490 != 0;
    assume Tmp_490 > 0;
    goto anon248_Then, anon248_Else;

  anon248_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    havoc Tmp_486;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_498;
    call {:si_unique_call 3411} WPP_SF_q(Tmp_498, 94, Tmp_486, pdoExtension_3);
    goto L83;

  L83:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3412} vslice_dummy_var_519 := Sbp2AccessRegister#1(pdoExtension_3, Reserved__DEVICE_EXTENSION(pdoExtension_3), 1040);
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3413} Sbp2HandleUnsolicited(pdoExtension_3, statusBlock);
    rcode := 0;
    goto L73;

  anon249_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon194_Then:
    goto L83;

  anon248_Then:
    goto L83;

  anon193_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;

  anon247_Then:
    assume {:partition} 32768 != src;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:partition} 49152 == src;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_499;
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    goto anon250_Then, anon250_Else;

  anon250_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    havoc Tmp_488;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_428;
    call {:si_unique_call 3414} WPP_SF_q(Tmp_428, 95, Tmp_488, pdoExtension_3);
    goto L103;

  L103:
    rcode := 0;
    goto L73;

  anon197_Then:
    goto L103;

  anon250_Then:
    goto L103;

  anon196_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L103;

  anon192_Then:
    assume {:partition} 49152 != src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    goto anon240_Then, anon240_Else;

  anon240_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_487;
    assume {:nonnull} Tmp_487 != 0;
    assume Tmp_487 > 0;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    havoc Tmp_468;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_434;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1310;
    call {:si_unique_call 3415} WPP_SF_qDD(Tmp_434, 96, Tmp_468, pdoExtension_3, status_10, vslice_dummy_var_1310);
    goto L434;

  L434:
    assume {:nonnull} NotificationInfo_2 != 0;
    assume NotificationInfo_2 > 0;
    call {:si_unique_call 3416} vslice_dummy_var_535 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    Tmp_425 := 0;
    goto L1;

  anon241_Then:
    goto L434;

  anon278_Then:
    goto L434;

  anon240_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L434;

  anon195_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc temp;
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:partition} temp > 384;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L132;

  L132:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_493;
    assume {:nonnull} Tmp_493 != 0;
    assume Tmp_493 > 0;
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc Tmp_431;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_426;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_1311;
    havoc vslice_dummy_var_1312;
    havoc vslice_dummy_var_1313;
    havoc vslice_dummy_var_1314;
    call {:si_unique_call 3417} WPP_SF_qDDDD(Tmp_426, 98, Tmp_431, pdoExtension_3, vslice_dummy_var_1311, vslice_dummy_var_1312, vslice_dummy_var_1313, vslice_dummy_var_1314);
    goto L133;

  L133:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1315;
    call {:si_unique_call 3418} Sbp2CreateRequestErrorLog(vslice_dummy_var_1315, 0, 3699, -1073741434);
    rcode := 7;
    goto L73;

  anon201_Then:
    goto L133;

  anon253_Then:
    goto L133;

  anon200_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L133;

  anon198_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_492;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto L132;

  anon252_Then:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto L132;

  anon199_Then:
    havoc Tmp_438;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_446;
    call {:si_unique_call 3419} WPP_SF_qD(Tmp_446, 97, Tmp_438, pdoExtension_3, temp);
    goto L132;

  anon251_Then:
    assume {:partition} 384 >= temp;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc tempPointer;
    call {:si_unique_call 3420} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    assume {:nonnull} tempPointer != 0;
    assume tempPointer > 0;
    havoc orbContext;
    goto anon254_Then, anon254_Else;

  anon254_Else:
    assume {:partition} orbContext != 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_429;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    goto anon256_Then, anon256_Else;

  anon256_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    havoc Tmp_477;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_497;
    call {:si_unique_call 3421} WPP_SF_qq(Tmp_497, 100, Tmp_477, pdoExtension_3, orbContext);
    goto L158;

  L158:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    call {:si_unique_call 3422} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_447;
    assume {:nonnull} Tmp_447 != 0;
    assume Tmp_447 > 0;
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    havoc Tmp_427;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_481;
    call {:si_unique_call 3423} WPP_SF_qq(Tmp_481, 101, Tmp_427, pdoExtension_3, orbContext);
    goto L174;

  L174:
    rcode := 0;
    goto L73;

  anon207_Then:
    goto L174;

  anon257_Then:
    goto L174;

  anon206_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L174;

  anon204_Then:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_473;
    assume {:nonnull} Tmp_473 != 0;
    assume Tmp_473 > 0;
    havoc requestIrp;
    goto anon258_Then, anon258_Else;

  anon258_Else:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3424} vslice_dummy_var_530 := KeCancelTimer(0);
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_448;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    havoc Tmp_483;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_441;
    call {:si_unique_call 3425} WPP_SF_qq(Tmp_441, 102, Tmp_483, pdoExtension_3, orbContext);
    goto L196;

  L196:
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc entry;
    goto L204;

  L204:
    call {:si_unique_call 3426} nextListItem, entry, sdv_132 := Sbp2GlobalStatusCallback#1_loop_L204(nextListItem, entry, sdv_132);
    goto L204_last;

  L204_last:
    goto anon210_Then, anon210_Else;

  anon210_Else:
    call {:si_unique_call 3427} sdv_132 := sdv_containing_record(entry, 0);
    nextListItem := sdv_132;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    goto anon260_Then, anon260_Else;

  anon260_Else:
    assume {:nonnull} entry != 0;
    assume entry > 0;
    havoc entry;
    goto anon260_Else_dummy;

  anon260_Else_dummy:
    assume false;
    return;

  anon260_Then:
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_476;
    assume {:nonnull} Tmp_476 != 0;
    assume Tmp_476 > 0;
    assume {:nonnull} dueTime != 0;
    assume dueTime > 0;
    call {:si_unique_call 3428} vslice_dummy_var_531 := KeSetTimer(0, dueTime, 0);
    goto L185;

  L185:
    call {:si_unique_call 3429} Free1394DataMapping(pdoExtension_3, orbContext);
    call {:si_unique_call 3430} vslice_dummy_var_520 := Sbp2_SCSI_RBC_Conversion(orbContext);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc srb;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc initialOrbListDepth;
    call {:si_unique_call 3431} vslice_dummy_var_532 := sdv_RemoveEntryList(0);
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    call {:si_unique_call 3432} InitializeListHead(OrbList__ASYNC_REQUEST_CONTEXT(orbContext));
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_1316;
    havoc vslice_dummy_var_1317;
    call {:si_unique_call 3433} Sbp2AddLog(pdoExtension_3, 64, -915451291, vslice_dummy_var_1316, vslice_dummy_var_1317);
    call {:si_unique_call 3434} vslice_dummy_var_521 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1318;
    call {:si_unique_call 3435} vslice_dummy_var_523 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_1318);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L238;

  L238:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1319;
    call {:si_unique_call 3436} vslice_dummy_var_522 := Sbp2Reset#1(vslice_dummy_var_1319, 1);
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3437} sdv_127 := sdv_IsListEmpty(0);
    goto anon214_Then, anon214_Else;

  anon214_Else:
    assume {:partition} sdv_127 != 0;
    goto L252;

  L252:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc currentOrbListDepth;
    call {:si_unique_call 3438} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3439} Tmp_501 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    call {:si_unique_call 3440} sdv_KeAcquireSpinLock(0, Tmp_501);
    assume {:nonnull} Tmp_501 != 0;
    assume Tmp_501 > 0;
    havoc oldIrql_1;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3441} sdv_KeReleaseSpinLock(0, oldIrql_1);
    call {:si_unique_call 3442} Tmp_462 := corral_nondet();
    goto anon262_Then, anon262_Else;

  anon262_Else:
    assume {:partition} Tmp_462 > 1;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon263_Then, anon263_Else;

  anon263_Else:
    goto L367;

  L367:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_452;
    assume {:nonnull} Tmp_452 != 0;
    assume Tmp_452 > 0;
    goto anon264_Then, anon264_Else;

  anon264_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_485;
    assume {:nonnull} Tmp_485 != 0;
    assume Tmp_485 > 0;
    havoc Tmp_480;
    havoc Tmp_463;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_435;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc vslice_dummy_var_1320;
    call {:si_unique_call 3443} WPP_SF_qDD(Tmp_435, 106, Tmp_463, pdoExtension_3, Tmp_480, vslice_dummy_var_1320);
    goto L291;

  L291:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    call {:si_unique_call 3444} Sbp2AddLog(pdoExtension_3, 64, -915455121, status_10, requestIrp);
    call {:si_unique_call 3445} AcquireOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3446} sdv_141 := sdv_IsListEmpty(0);
    goto anon221_Then, anon221_Else;

  anon221_Else:
    assume {:partition} sdv_141 != 0;
    call {:si_unique_call 3447} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    call {:si_unique_call 3448} vslice_dummy_var_524 := Sbp2RestartPendingPowerIrp#1(pdoExtension_3);
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:partition} yogi_error != 1;
    goto L322;

  L322:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon266_Then, anon266_Else;

  anon266_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_472;
    goto L326;

  L326:
    assume {:nonnull} requestIrp != 0;
    assume requestIrp > 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    call {:si_unique_call 3449} vslice_dummy_var_533 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(pdoExtension_3), requestIrp);
    goto anon222_Then, anon222_Else;

  anon222_Else:
    assume requestIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3450} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:partition} yogi_error != 1;
    goto L527;

  L527:
    call {:si_unique_call 3451} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon223_Then, anon223_Else;

  anon223_Else:
    goto L341;

  L341:
    goto anon225_Then, anon225_Else;

  anon225_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_456;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon226_Then, anon226_Else;

  anon226_Else:
    havoc Tmp_444;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_450;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1321;
    call {:si_unique_call 3452} WPP_SF_qd(Tmp_450, 108, Tmp_444, pdoExtension_3, vslice_dummy_var_1321);
    goto L342;

  L342:
    rcode := 0;
    goto L73;

  anon226_Then:
    goto L342;

  anon269_Then:
    goto L342;

  anon225_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L342;

  anon223_Then:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    assume {:partition} initialOrbListDepth <= currentOrbListDepth;
    goto L341;

  anon224_Then:
    assume {:partition} currentOrbListDepth < initialOrbListDepth;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1322;
    call {:si_unique_call 3453} Sbp2StartNextPacketByKey#1(deviceObject_2, vslice_dummy_var_1322);
    goto anon268_Then, anon268_Else;

  anon268_Else:
    assume {:partition} yogi_error != 1;
    goto L341;

  anon268_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon267_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon222_Then:
    assume !(requestIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L527;

  anon266_Then:
    Tmp_472 := 0;
    goto L326;

  anon265_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon221_Then:
    assume {:partition} sdv_141 == 0;
    call {:si_unique_call 3454} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto L322;

  anon233_Then:
    goto L291;

  anon264_Then:
    goto L291;

  anon232_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon263_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    goto L367;

  anon215_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_440;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    goto anon272_Then, anon272_Else;

  anon272_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_455;
    assume {:nonnull} Tmp_455 != 0;
    assume Tmp_455 > 0;
    havoc Tmp_467;
    havoc Tmp_482;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_442;
    call {:si_unique_call 3455} WPP_SF_qD(Tmp_442, 105, Tmp_482, pdoExtension_3, Tmp_467);
    goto L352;

  L352:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    Tmp_430 := 32;
    goto L364;

  L364:
    call {:si_unique_call 3456} sdv_RtlCopyMemory(0, 0, Tmp_430);
    goto L291;

  anon231_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_430;
    goto L364;

  anon229_Then:
    goto L291;

  anon230_Then:
    goto L352;

  anon272_Then:
    goto L352;

  anon228_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L352;

  anon216_Then:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_453;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_1323;
    call {:si_unique_call 3457} sdv_118 := ConvertSbp2SenseDataToScsi(statusBlock, vslice_dummy_var_1323, Tmp_453);
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:partition} sdv_118 != 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L283;

  L283:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc senseBuffer;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_489;
    assume {:nonnull} Tmp_489 != 0;
    assume Tmp_489 > 0;
    goto anon270_Then, anon270_Else;

  anon270_Else:
    goto L290;

  L290:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_471;
    assume {:nonnull} Tmp_471 != 0;
    assume Tmp_471 > 0;
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_449;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_460;
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    havoc Tmp_432;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_437;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    havoc Tmp_496;
    havoc Tmp_464;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_475;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc vslice_dummy_var_1324;
    havoc vslice_dummy_var_1325;
    call {:si_unique_call 3458} WPP_SF_qDDDDDd(Tmp_475, 103, Tmp_464, pdoExtension_3, Tmp_496, Tmp_432, Tmp_460, Tmp_449, vslice_dummy_var_1324, vslice_dummy_var_1325);
    goto L291;

  anon220_Then:
    goto L291;

  anon271_Then:
    goto L291;

  anon219_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L291;

  anon270_Then:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} senseBuffer != 0;
    assume senseBuffer > 0;
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto L291;

  anon227_Then:
    goto L290;

  anon218_Then:
    goto L290;

  anon217_Then:
    assume {:partition} sdv_118 == 0;
    goto L283;

  anon262_Then:
    assume {:partition} 1 >= Tmp_462;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_454;
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:partition} Tmp_454 == 4096;
    goto L381;

  L381:
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_465;
    assume {:nonnull} Tmp_465 != 0;
    assume Tmp_465 > 0;
    goto anon274_Then, anon274_Else;

  anon274_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_479;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    havoc Tmp_459;
    assume {:nonnull} Tmp_459 != 0;
    assume Tmp_459 > 0;
    havoc Tmp_469;
    havoc Tmp_457;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_445;
    call {:si_unique_call 3459} WPP_SF_qDD(Tmp_445, 107, Tmp_457, pdoExtension_3, Tmp_469, Tmp_479);
    goto L382;

  L382:
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon235_Then:
    goto L382;

  anon274_Then:
    goto L382;

  anon234_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L382;

  anon273_Then:
    assume {:partition} Tmp_454 != 4096;
    assume {:nonnull} statusBlock != 0;
    assume statusBlock > 0;
    havoc Tmp_470;
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:partition} Tmp_470 != 8192;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    assume {:nonnull} srb != 0;
    assume srb > 0;
    goto L291;

  anon275_Then:
    assume {:partition} Tmp_470 == 8192;
    goto L381;

  anon214_Then:
    assume {:partition} sdv_127 == 0;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1326;
    call {:si_unique_call 3460} sdv_129 := sdv_containing_record(vslice_dummy_var_1326, 0);
    nextListItem := sdv_129;
    assume {:nonnull} nextListItem != 0;
    assume nextListItem > 0;
    call {:si_unique_call 3461} vslice_dummy_var_534 := Sbp2AccessRegister#1(pdoExtension_3, CmdOrbAddress__ASYNC_REQUEST_CONTEXT(nextListItem), 1028);
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume {:partition} yogi_error != 1;
    goto L252;

  anon276_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon261_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon213_Then:
    goto L238;

  anon211_Then:
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} 16384 == src;
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon236_Then, anon236_Else;

  anon236_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1327;
    call {:si_unique_call 3462} vslice_dummy_var_526 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_1327);
    goto L405;

  L405:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    assume {:nonnull} orbContext != 0;
    assume orbContext > 0;
    havoc Tmp_494;
    assume {:nonnull} Tmp_494 != 0;
    assume Tmp_494 > 0;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon277_Then:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon236_Then:
    goto L405;

  anon212_Then:
    assume {:partition} 16384 != src;
    call {:si_unique_call 3463} vslice_dummy_var_525 := FreeAsyncRequestContext(pdoExtension_3, orbContext);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1328;
    call {:si_unique_call 3464} vslice_dummy_var_527 := FreeAsyncRequestContext(pdoExtension_3, vslice_dummy_var_1328);
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    goto L252;

  anon237_Then:
    goto L252;

  anon210_Then:
    goto L185;

  anon209_Then:
    goto L196;

  anon259_Then:
    goto L196;

  anon208_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L196;

  anon258_Then:
    goto L185;

  anon205_Then:
    goto L158;

  anon256_Then:
    goto L158;

  anon203_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L158;

  anon202_Then:
    goto L150;

  L150:
    call {:si_unique_call 3465} ReleaseOrbListLock(pdoExtension_3, orbLock, 1);
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_436;
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    havoc Tmp_500;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc Tmp_451;
    call {:si_unique_call 3466} WPP_SF_qD(Tmp_451, 99, Tmp_500, pdoExtension_3, temp);
    goto L421;

  L421:
    assume {:nonnull} pdoExtension_3 != 0;
    assume pdoExtension_3 > 0;
    havoc vslice_dummy_var_1329;
    call {:si_unique_call 3467} Sbp2CreateRequestErrorLog(vslice_dummy_var_1329, 0, 3729, -1073741434);
    rcode := 7;
    goto L73;

  anon239_Then:
    goto L421;

  anon255_Then:
    goto L421;

  anon238_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L421;

  anon254_Then:
    assume {:partition} orbContext == 0;
    goto L150;

  anon188_Then:
    goto L66;
}



procedure {:origName "Sbp2GlobalStatusCallback"} Sbp2GlobalStatusCallback#1(actual_NotificationInfo_2: int) returns (Tmp_425: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation Sbp2_ProcessTextualDescriptor_loop_L60(in_i: int, in_Tmp_14: int, in_Tmp_16: int, in_Tmp_20: int, in_Tmp_21: int, in_pData: int, in_ulUnicode: int, in_Tmp_26: int, in_Tmp_27: int, in_dataLength: int, in_uChar: int) returns (out_i: int, out_Tmp_14: int, out_Tmp_16: int, out_Tmp_20: int, out_Tmp_21: int, out_Tmp_26: int, out_Tmp_27: int, out_uChar: int)
{

  entry:
    out_i, out_Tmp_14, out_Tmp_16, out_Tmp_20, out_Tmp_21, out_Tmp_26, out_Tmp_27, out_uChar := in_i, in_Tmp_14, in_Tmp_16, in_Tmp_20, in_Tmp_21, in_Tmp_26, in_Tmp_27, in_uChar;
    goto L60, exit;

  exit:
    return;

  L60:
    goto anon60_Else;

  anon60_Else:
    assume {:partition} in_dataLength * 4 > out_i;
    out_Tmp_16 := in_pData;
    assume {:nonnull} out_Tmp_16 != 0;
    assume out_Tmp_16 > 0;
    havoc out_uChar;
    goto anon79_Else;

  anon79_Else:
    assume {:partition} out_uChar != 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} out_uChar == 44;
    goto L70;

  L70:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_20;
    assume {:nonnull} out_Tmp_20 != 0;
    assume out_Tmp_20 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_Tmp_27 := out_uChar;
    havoc out_Tmp_21;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_26;
    call {:si_unique_call 3468} WPP_SF_D(out_Tmp_26, 124, out_Tmp_21, out_Tmp_27);
    goto L71;

  L71:
    out_Tmp_14 := in_pData;
    assume {:nonnull} out_Tmp_14 != 0;
    assume out_Tmp_14 > 0;
    goto L80;

  L80:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} BAND(in_ulUnicode, 0) != 0;
    out_i := out_i + 1;
    goto L81;

  L81:
    out_i := out_i + 1;
    goto L81_dummy;

  L81_dummy:
    havoc out_i;
    return;

  anon65_Then:
    assume {:partition} BAND(in_ulUnicode, 0) == 0;
    goto L81;

  anon64_Then:
    goto L71;

  anon80_Then:
    goto L71;

  anon63_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L71;

  anon61_Then:
    assume {:partition} out_uChar != 44;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} 32 <= out_uChar;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} out_uChar <= 127;
    goto L80;

  anon66_Then:
    assume {:partition} 127 < out_uChar;
    goto L70;

  anon62_Then:
    assume {:partition} out_uChar < 32;
    goto L70;
}



procedure {:LoopProcedure} Sbp2_ProcessTextualDescriptor_loop_L60(in_i: int, in_Tmp_14: int, in_Tmp_16: int, in_Tmp_20: int, in_Tmp_21: int, in_pData: int, in_ulUnicode: int, in_Tmp_26: int, in_Tmp_27: int, in_dataLength: int, in_uChar: int) returns (out_i: int, out_Tmp_14: int, out_Tmp_16: int, out_Tmp_20: int, out_Tmp_21: int, out_Tmp_26: int, out_Tmp_27: int, out_uChar: int);
  modifies alloc;
  free ensures {:va_keep} out_Tmp_14 == in_Tmp_14 || out_Tmp_14 == in_pData;
  free ensures {:va_keep} out_Tmp_16 == in_pData || out_Tmp_16 == in_Tmp_16;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength: int, in_Tmp_250: int, in_Tmp_259: int, in_Tmp_260: int, in_sdv_54: int, in_Tmp_277: int, in_Tmp_278: int, in_j: int, in_Tmp_281: int, in_Tmp_282: int, in_unitDirEntries: int, in_Tmp_292: int, in_vendorLeaf_1: int, in_status_6: int, in_sdv_60: int, in_offset: int, in_unitDependentDirectory_1: int, in_sdv_66: int, in_cromOffset: int, in_Tmp_305: int, in_Tmp_306: int, in_Tmp_310: int, in_Tmp_311: int, in_modelIdCount: int, in_Tmp_314: int, in_devListSize: int, in_firstDevInfo: int, in_Tmp_326: int, in_devInfo: int, in_sdv_79: int, in_ModelLeaf_2: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_250: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_277: int, out_Tmp_278: int, out_j: int, out_Tmp_281: int, out_Tmp_282: int, out_unitDirEntries: int, out_Tmp_292: int, out_status_6: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_310: int, out_Tmp_311: int, out_modelIdCount: int, out_Tmp_314: int, out_devListSize: int, out_Tmp_326: int)
{
  var vslice_dummy_var_1330: int;
  var vslice_dummy_var_1331: int;

  entry:
    out_Tmp_250, out_Tmp_259, out_Tmp_260, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_unitDirEntries, out_Tmp_292, out_status_6, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_Tmp_311, out_modelIdCount, out_Tmp_314, out_devListSize, out_Tmp_326 := in_Tmp_250, in_Tmp_259, in_Tmp_260, in_Tmp_277, in_Tmp_278, in_j, in_Tmp_281, in_Tmp_282, in_unitDirEntries, in_Tmp_292, in_status_6, in_Tmp_305, in_Tmp_306, in_Tmp_310, in_Tmp_311, in_modelIdCount, in_Tmp_314, in_devListSize, in_Tmp_326;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_259;
    assume {:nonnull} out_Tmp_259 != 0;
    assume out_Tmp_259 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_260;
    assume {:nonnull} out_Tmp_260 != 0;
    assume out_Tmp_260 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_278;
    assume {:nonnull} out_Tmp_278 != 0;
    assume out_Tmp_278 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_326;
    assume {:nonnull} out_Tmp_326 != 0;
    assume out_Tmp_326 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_311;
    assume {:nonnull} out_Tmp_311 != 0;
    assume out_Tmp_311 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_1330;
    call {:si_unique_call 3469} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_1330, 2);
    goto anon418_Else;

  anon418_Else:
    assume {:partition} yogi_error != 1;
    goto anon328_Then;

  anon328_Then:
    assume {:partition} 0 <= out_status_6;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_250;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} out_Tmp_250 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_310;
    assume {:nonnull} out_Tmp_310 != 0;
    assume out_Tmp_310 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc out_Tmp_292;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_281;
    call {:si_unique_call 3471} WPP_SF_q(out_Tmp_281, 47, out_Tmp_292, in_FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3470} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L311;

  L311:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    goto L316;

  L316:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto L318;

  L318:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L320;

  L320:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L322;

  L322:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L286;

  L286:
    out_Tmp_305 := in_unitDependentDirectory_1;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} out_Tmp_305 != 0;
    assume out_Tmp_305 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} out_Tmp_305 != 0;
    assume out_Tmp_305 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    goto L364;

  L364:
    out_j := out_j + 1;
    goto anon424_Then;

  anon424_Then:
    assume {:partition} out_j <= INTDIV(in_dependentLength, 4);
    goto anon424_Then_dummy;

  anon424_Then_dummy:
    call {:si_unique_call 3476} {:si_old_unique_call 1} out_Tmp_250, out_Tmp_259, out_Tmp_260, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_unitDirEntries, out_Tmp_292, out_status_6, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_Tmp_311, out_modelIdCount, out_Tmp_314, out_devListSize, out_Tmp_326 := Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength, out_Tmp_250, out_Tmp_259, out_Tmp_260, in_sdv_54, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_unitDirEntries, out_Tmp_292, in_vendorLeaf_1, out_status_6, in_sdv_60, in_offset, in_unitDependentDirectory_1, in_sdv_66, in_cromOffset, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_Tmp_311, out_modelIdCount, out_Tmp_314, out_devListSize, in_firstDevInfo, out_Tmp_326, in_devInfo, in_sdv_79, in_ModelLeaf_2, in_packet_1, in_FdoExtension_2);
    return;

  anon386_Then:
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_277;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} out_Tmp_277 != 23;
    goto L364;

  anon425_Then:
    assume {:partition} out_Tmp_277 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3474} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_2);
    goto anon426_Else;

  anon426_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_306;
    assume {:nonnull} out_Tmp_306 != 0;
    assume out_Tmp_306 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc out_Tmp_282;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_314;
    call {:si_unique_call 3475} WPP_SF_q(out_Tmp_314, 48, out_Tmp_282, in_FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_1331;
    call {:si_unique_call 3472} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_1331, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 3473} sdv_ExFreePool(0);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto L344;

  L344:
    out_modelIdCount := out_modelIdCount + 1;
    goto L364;

  anon336_Then:
    goto L349;

  anon427_Then:
    goto L349;

  anon335_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L349;

  anon334_Then:
    goto L344;

  anon387_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon423_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon333_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L322;

  anon332_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L320;

  anon331_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L318;

  anon422_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L316;

  anon330_Then:
    goto L300;

  anon421_Then:
    goto L300;

  anon329_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon420_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L311;

  anon419_Then:
    assume {:partition} out_Tmp_250 != 20;
    goto L286;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L273(in_dependentLength: int, in_Tmp_250: int, in_Tmp_259: int, in_Tmp_260: int, in_sdv_54: int, in_Tmp_277: int, in_Tmp_278: int, in_j: int, in_Tmp_281: int, in_Tmp_282: int, in_unitDirEntries: int, in_Tmp_292: int, in_vendorLeaf_1: int, in_status_6: int, in_sdv_60: int, in_offset: int, in_unitDependentDirectory_1: int, in_sdv_66: int, in_cromOffset: int, in_Tmp_305: int, in_Tmp_306: int, in_Tmp_310: int, in_Tmp_311: int, in_modelIdCount: int, in_Tmp_314: int, in_devListSize: int, in_firstDevInfo: int, in_Tmp_326: int, in_devInfo: int, in_sdv_79: int, in_ModelLeaf_2: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_250: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_277: int, out_Tmp_278: int, out_j: int, out_Tmp_281: int, out_Tmp_282: int, out_unitDirEntries: int, out_Tmp_292: int, out_status_6: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_310: int, out_Tmp_311: int, out_modelIdCount: int, out_Tmp_314: int, out_devListSize: int, out_Tmp_326: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} out_Tmp_305 == in_Tmp_305 || out_Tmp_305 == in_unitDependentDirectory_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2Get1394ConfigInfo_loop_L214(in_Tmp_243: int, in_Tmp_249: int, in_Tmp_255: int, in_Tmp_265: int, in_Tmp_271: int, in_genPacket: int, in_Tmp_286: int, in_currentGeneration: int, in_status_6: int, in_Tmp_303: int, in_Tmp_320: int, in_Tmp_323: int, in_Tmp_339: int, in_retries: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_243: int, out_Tmp_249: int, out_Tmp_255: int, out_Tmp_265: int, out_Tmp_271: int, out_Tmp_286: int, out_status_6: int, out_Tmp_303: int, out_Tmp_320: int, out_Tmp_323: int, out_Tmp_339: int, out_retries: int)
{
  var vslice_dummy_var_1332: int;
  var vslice_dummy_var_1333: int;

  entry:
    out_Tmp_243, out_Tmp_249, out_Tmp_255, out_Tmp_265, out_Tmp_271, out_Tmp_286, out_status_6, out_Tmp_303, out_Tmp_320, out_Tmp_323, out_Tmp_339, out_retries := in_Tmp_243, in_Tmp_249, in_Tmp_255, in_Tmp_265, in_Tmp_271, in_Tmp_286, in_status_6, in_Tmp_303, in_Tmp_320, in_Tmp_323, in_Tmp_339, in_retries;
    goto L214, exit;

  exit:
    return;

  L214:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_271;
    assume {:nonnull} out_Tmp_271 != 0;
    assume out_Tmp_271 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_1332;
    call {:si_unique_call 3477} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_1332, 2);
    goto anon413_Else;

  anon413_Else:
    assume {:partition} yogi_error != 1;
    goto anon322_Then;

  anon322_Then:
    assume {:partition} 0 > out_status_6;
    goto anon323_Else;

  anon323_Else:
    assume {:partition} out_retries > 1;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_249;
    assume {:nonnull} out_Tmp_249 != 0;
    assume out_Tmp_249 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc out_Tmp_286;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_323;
    call {:si_unique_call 3479} WPP_SF_qD(out_Tmp_323, 43, out_Tmp_286, in_FdoExtension_2, out_status_6);
    goto L401;

  L401:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    goto L412;

  L412:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_320;
    assume {:nonnull} out_Tmp_320 != 0;
    assume out_Tmp_320 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_265;
    assume {:nonnull} out_Tmp_265 != 0;
    assume out_Tmp_265 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc vslice_dummy_var_1333;
    call {:si_unique_call 3481} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_1333, 2);
    goto anon430_Else;

  anon430_Else:
    assume {:partition} yogi_error != 1;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} out_status_6 < 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_243;
    assume {:nonnull} out_Tmp_243 != 0;
    assume out_Tmp_243 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc out_Tmp_255;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_339;
    call {:si_unique_call 3480} WPP_SF_qD(out_Tmp_339, 44, out_Tmp_255, in_FdoExtension_2, out_status_6);
    goto L424;

  L424:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_303;
    assume {:nonnull} out_Tmp_303 != 0;
    assume out_Tmp_303 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    goto L413;

  L413:
    out_retries := out_retries - 1;
    goto anon431_Then;

  anon431_Then:
    assume {:partition} out_retries != 0;
    goto anon431_Then_dummy;

  anon431_Then_dummy:
    call {:si_unique_call 3482} {:si_old_unique_call 1} out_Tmp_243, out_Tmp_249, out_Tmp_255, out_Tmp_265, out_Tmp_271, out_Tmp_286, out_status_6, out_Tmp_303, out_Tmp_320, out_Tmp_323, out_Tmp_339, out_retries := Sbp2Get1394ConfigInfo_loop_L214(out_Tmp_243, out_Tmp_249, out_Tmp_255, out_Tmp_265, out_Tmp_271, in_genPacket, out_Tmp_286, in_currentGeneration, out_status_6, out_Tmp_303, out_Tmp_320, out_Tmp_323, out_Tmp_339, out_retries, in_packet_1, in_FdoExtension_2);
    return;

  anon345_Then:
    goto L424;

  anon432_Then:
    goto L424;

  anon344_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L424;

  anon343_Then:
    assume {:partition} 0 <= out_status_6;
    goto L424;

  anon342_Then:
    goto L413;

  anon340_Then:
    call {:si_unique_call 3478} AllocateIrpAndIrb(in_FdoExtension_2, in_genPacket);
    goto L412;

  anon341_Then:
    goto L401;

  anon429_Then:
    goto L401;

  anon339_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L401;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L214(in_Tmp_243: int, in_Tmp_249: int, in_Tmp_255: int, in_Tmp_265: int, in_Tmp_271: int, in_genPacket: int, in_Tmp_286: int, in_currentGeneration: int, in_status_6: int, in_Tmp_303: int, in_Tmp_320: int, in_Tmp_323: int, in_Tmp_339: int, in_retries: int, in_packet_1: int, in_FdoExtension_2: int) returns (out_Tmp_243: int, out_Tmp_249: int, out_Tmp_255: int, out_Tmp_265: int, out_Tmp_271: int, out_Tmp_286: int, out_status_6: int, out_Tmp_303: int, out_Tmp_320: int, out_Tmp_323: int, out_Tmp_339: int, out_retries: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2Get1394ConfigInfo_loop_L445(in_Tmp_236: int, in_sdv_48: int, in_dependentLength: int, in_Tmp_268: int, in_sdv_55: int, in_Tmp_275: int, in_Tmp_276: int, in_j: int, in_unitDirEntries: int, in_Tmp_287: int, in_Tmp_291: int, in_vendorLeaf_1: int, in_status_6: int, in_modelLeaf_1: int, in_Tmp_299: int, in_unitDependentDirectory_1: int, in_Tmp_301: int, in_Tmp_302: int, in_sdv_67: int, in_cromOffset: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_318: int, in_firstDevInfo: int, in_Tmp_327: int, in_ModelLeaf_1: int, in_sdv_76: int, in_Tmp_329: int, in_devInfo: int, in_dependentLocation: int, in_FdoExtension_2: int) returns (out_Tmp_236: int, out_Tmp_268: int, out_Tmp_275: int, out_Tmp_276: int, out_j: int, out_unitDirEntries: int, out_Tmp_287: int, out_Tmp_291: int, out_status_6: int, out_Tmp_299: int, out_Tmp_301: int, out_Tmp_302: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_318: int, out_Tmp_327: int, out_Tmp_329: int)
{
  var vslice_dummy_var_1334: int;
  var vslice_dummy_var_1335: int;

  entry:
    out_Tmp_236, out_Tmp_268, out_Tmp_275, out_Tmp_276, out_j, out_unitDirEntries, out_Tmp_287, out_Tmp_291, out_status_6, out_Tmp_299, out_Tmp_301, out_Tmp_302, out_modelIdCount, out_devListSize, out_Tmp_318, out_Tmp_327, out_Tmp_329 := in_Tmp_236, in_Tmp_268, in_Tmp_275, in_Tmp_276, in_j, in_unitDirEntries, in_Tmp_287, in_Tmp_291, in_status_6, in_Tmp_299, in_Tmp_301, in_Tmp_302, in_modelIdCount, in_devListSize, in_Tmp_318, in_Tmp_327, in_Tmp_329;
    goto L445, exit;

  exit:
    return;

  L445:
    goto anon348_Else;

  anon348_Else:
    assume {:partition} in_dependentLength > out_j;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_275;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} out_Tmp_275 == 20;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L459;

  L459:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_318;
    assume {:nonnull} out_Tmp_318 != 0;
    assume out_Tmp_318 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc out_Tmp_299;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_276;
    call {:si_unique_call 3486} WPP_SF_q(out_Tmp_276, 40, out_Tmp_299, in_FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3483} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(in_devInfo));
    goto L476;

  L476:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    goto L480;

  L480:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    goto L482;

  L482:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L484;

  L484:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L486;

  L486:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L448;

  L448:
    out_Tmp_291 := in_unitDependentDirectory_1;
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} out_Tmp_291 != 0;
    assume out_Tmp_291 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} out_Tmp_291 != 0;
    assume out_Tmp_291 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    goto L542;

  L542:
    out_j := out_j + 1;
    goto L542_dummy;

  L542_dummy:
    call {:si_unique_call 3491} {:si_old_unique_call 1} out_Tmp_236, out_Tmp_268, out_Tmp_275, out_Tmp_276, out_j, out_unitDirEntries, out_Tmp_287, out_Tmp_291, out_status_6, out_Tmp_299, out_Tmp_301, out_Tmp_302, out_modelIdCount, out_devListSize, out_Tmp_318, out_Tmp_327, out_Tmp_329 := Sbp2Get1394ConfigInfo_loop_L445(out_Tmp_236, in_sdv_48, in_dependentLength, out_Tmp_268, in_sdv_55, out_Tmp_275, out_Tmp_276, out_j, out_unitDirEntries, out_Tmp_287, out_Tmp_291, in_vendorLeaf_1, out_status_6, in_modelLeaf_1, out_Tmp_299, in_unitDependentDirectory_1, out_Tmp_301, out_Tmp_302, in_sdv_67, in_cromOffset, out_modelIdCount, out_devListSize, out_Tmp_318, in_firstDevInfo, out_Tmp_327, in_ModelLeaf_1, in_sdv_76, out_Tmp_329, in_devInfo, in_dependentLocation, in_FdoExtension_2);
    return;

  anon388_Then:
    assume {:nonnull} in_unitDependentDirectory_1 != 0;
    assume in_unitDependentDirectory_1 > 0;
    havoc out_Tmp_268;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} out_Tmp_268 != 23;
    goto L542;

  anon439_Then:
    assume {:partition} out_Tmp_268 == 23;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3488} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_1);
    goto anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_1335;
    call {:si_unique_call 3489} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_1335, uniModelId__DEVICE_INFORMATION(in_devInfo));
    call {:si_unique_call 3490} sdv_ExFreePool(0);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_287;
    assume {:nonnull} out_Tmp_287 != 0;
    assume out_Tmp_287 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc out_Tmp_327;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_302;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    havoc vslice_dummy_var_1334;
    call {:si_unique_call 3487} WPP_SF_S(out_Tmp_302, 41, out_Tmp_327, vslice_dummy_var_1334);
    goto L512;

  L512:
    out_modelIdCount := out_modelIdCount + 1;
    goto L542;

  anon361_Then:
    goto L512;

  anon441_Then:
    goto L512;

  anon360_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L512;

  anon359_Then:
    goto L512;

  anon358_Then:
    goto L512;

  anon389_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon438_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon355_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L486;

  anon354_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L484;

  anon353_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L482;

  anon437_Then:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L480;

  anon352_Then:
    goto L465;

  anon436_Then:
    goto L465;

  anon351_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L465;

  anon350_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    goto L476;

  anon435_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_301;
    assume {:nonnull} out_Tmp_301 != 0;
    assume out_Tmp_301 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc out_Tmp_236;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_329;
    call {:si_unique_call 3485} WPP_SF_q(out_Tmp_329, 39, out_Tmp_236, in_FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} in_devInfo != 0;
    assume in_devInfo > 0;
    call {:si_unique_call 3484} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(in_devInfo));
    goto L459;

  anon357_Then:
    goto L493;

  anon442_Then:
    goto L493;

  anon356_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L493;

  anon349_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L459;

  anon434_Then:
    assume {:partition} out_Tmp_275 != 20;
    goto L448;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L445(in_Tmp_236: int, in_sdv_48: int, in_dependentLength: int, in_Tmp_268: int, in_sdv_55: int, in_Tmp_275: int, in_Tmp_276: int, in_j: int, in_unitDirEntries: int, in_Tmp_287: int, in_Tmp_291: int, in_vendorLeaf_1: int, in_status_6: int, in_modelLeaf_1: int, in_Tmp_299: int, in_unitDependentDirectory_1: int, in_Tmp_301: int, in_Tmp_302: int, in_sdv_67: int, in_cromOffset: int, in_modelIdCount: int, in_devListSize: int, in_Tmp_318: int, in_firstDevInfo: int, in_Tmp_327: int, in_ModelLeaf_1: int, in_sdv_76: int, in_Tmp_329: int, in_devInfo: int, in_dependentLocation: int, in_FdoExtension_2: int) returns (out_Tmp_236: int, out_Tmp_268: int, out_Tmp_275: int, out_Tmp_276: int, out_j: int, out_unitDirEntries: int, out_Tmp_287: int, out_Tmp_291: int, out_status_6: int, out_Tmp_299: int, out_Tmp_301: int, out_Tmp_302: int, out_modelIdCount: int, out_devListSize: int, out_Tmp_318: int, out_Tmp_327: int, out_Tmp_329: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} out_Tmp_291 == in_Tmp_291 || out_Tmp_291 == in_unitDependentDirectory_1;
  free ensures {:va_keep} out_status_6 == -1073741670 || out_status_6 == 0 || out_status_6 == -1073741823 || out_status_6 == in_status_6;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2Get1394ConfigInfo_loop_L132(in_Tmp_234: int, in_Tmp_235: int, in_Tmp_236: int, in_Tmp_240: int, in_Tmp_241: int, in_Tmp_243: int, in_Tmp_244: int, in_sdv_48: int, in_Tmp_247: int, in_Tmp_248: int, in_Tmp_249: int, in_dependentLength: int, in_sdv_50: int, in_Tmp_250: int, in_Tmp_253: int, in_Tmp_255: int, in_Tmp_256: int, in_Tmp_257: int, in_sdv_52: int, in_Tmp_259: int, in_Tmp_260: int, in_Tmp_264: int, in_sdv_54: int, in_Tmp_265: int, in_Tmp_266: int, in_Tmp_268: int, in_tmp: int, in_Tmp_270: int, in_Tmp_271: int, in_sdv_55: int, in_i_1: int, in_Tmp_272: int, in_genPacket: int, in_Tmp_273: int, in_Tmp_275: int, in_Tmp_276: int, in_Tmp_277: int, in_Tmp_278: int, in_j: int, in_Tmp_281: int, in_sdv_56: int, in_Tmp_282: int, in_Tmp_283: int, in_Tmp_284: int, in_unitDirEntries: int, in_Tmp_286: int, in_Tmp_287: int, in_currentGeneration: int, in_Tmp_290: int, in_sdv_58: int, in_Tmp_291: int, in_Tmp_292: int, in_vendorLeaf_1: int, in_Tmp_293: int, in_sdv_59: int, in_status_6: int, in_sdv_60: int, in_Tmp_298: int, in_offset: int, in_modelLeaf_1: int, in_Tmp_299: int, in_unitDependentDirectory_1: int, in_sdv_63: int, in_sdv_64: int, in_Tmp_301: int, in_Tmp_302: int, in_sdv_66: int, in_Tmp_303: int, in_sdv_67: int, in_Tmp_304: int, in_cromOffset: int, in_Tmp_305: int, in_Tmp_306: int, in_Tmp_310: int, in_directoryLength: int, in_sdv_68: int, in_Tmp_311: int, in_Tmp_312: int, in_Tmp_313: int, in_modelIdCount: int, in_Tmp_314: int, in_dirInfoQuad: int, in_Tmp_315: int, in_devListSize: int, in_firstOne: int, in_Tmp_316: int, in_sdv_70: int, in_Tmp_317: int, in_Tmp_318: int, in_Tmp_319: int, in_sdv_71: int, in_Tmp_320: int, in_directoryLocation: int, in_sbp2Device: int, in_firstDevInfo: int, in_Tmp_323: int, in_Tmp_324: int, in_Tmp_326: int, in_sdv_75: int, in_ModelLeaf: int, in_Tmp_327: int, in_ModelLeaf_1: int, in_sdv_76: int, in_Tmp_329: int, in_Tmp_334: int, in_Tmp_336: int, in_Tmp_339: int, in_Tmp_340: int, in_devInfo: int, in_sdv_79: int, in_sdv_80: int, in_Tmp_342: int, in_Tmp_343: int, in_retries: int, in_dependentLocation: int, in_Tmp_346: int, in_unitDirectory_1: int, in_ModelLeaf_2: int, in_packet_1: int, in_Tmp_347: int, in_info: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_351: int, in_FdoExtension_2: int, in_Sbp2Req: int) returns (out_Tmp_234: int, out_Tmp_235: int, out_Tmp_236: int, out_Tmp_240: int, out_Tmp_241: int, out_Tmp_243: int, out_Tmp_244: int, out_Tmp_247: int, out_Tmp_248: int, out_Tmp_249: int, out_dependentLength: int, out_sdv_50: int, out_Tmp_250: int, out_Tmp_253: int, out_Tmp_255: int, out_Tmp_256: int, out_Tmp_257: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_264: int, out_Tmp_265: int, out_Tmp_266: int, out_Tmp_268: int, out_tmp: int, out_Tmp_270: int, out_Tmp_271: int, out_i_1: int, out_Tmp_272: int, out_Tmp_273: int, out_Tmp_275: int, out_Tmp_276: int, out_Tmp_277: int, out_Tmp_278: int, out_j: int, out_Tmp_281: int, out_Tmp_282: int, out_Tmp_283: int, out_Tmp_284: int, out_unitDirEntries: int, out_Tmp_286: int, out_Tmp_287: int, out_Tmp_290: int, out_sdv_58: int, out_Tmp_291: int, out_Tmp_292: int, out_Tmp_293: int, out_status_6: int, out_Tmp_298: int, out_offset: int, out_Tmp_299: int, out_unitDependentDirectory_1: int, out_Tmp_301: int, out_Tmp_302: int, out_Tmp_303: int, out_Tmp_304: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_310: int, out_sdv_68: int, out_Tmp_311: int, out_Tmp_312: int, out_Tmp_313: int, out_modelIdCount: int, out_Tmp_314: int, out_dirInfoQuad: int, out_Tmp_315: int, out_devListSize: int, out_firstOne: int, out_Tmp_316: int, out_Tmp_317: int, out_Tmp_318: int, out_Tmp_319: int, out_Tmp_320: int, out_sbp2Device: int, out_Tmp_323: int, out_Tmp_324: int, out_Tmp_326: int, out_Tmp_327: int, out_Tmp_329: int, out_Tmp_334: int, out_Tmp_336: int, out_Tmp_339: int, out_Tmp_340: int, out_devInfo: int, out_Tmp_342: int, out_Tmp_343: int, out_retries: int, out_Tmp_346: int, out_Tmp_347: int, out_info: int, out_Tmp_349: int, out_Tmp_350: int, out_Tmp_351: int)
{
  var vslice_dummy_var_1336: int;
  var vslice_dummy_var_1337: int;
  var vslice_dummy_var_1338: int;
  var vslice_dummy_var_1339: int;
  var vslice_dummy_var_1340: int;
  var vslice_dummy_var_1341: int;
  var vslice_dummy_var_1342: int;
  var vslice_dummy_var_1343: int;
  var vslice_dummy_var_1344: int;
  var vslice_dummy_var_1345: int;

  entry:
    out_Tmp_234, out_Tmp_235, out_Tmp_236, out_Tmp_240, out_Tmp_241, out_Tmp_243, out_Tmp_244, out_Tmp_247, out_Tmp_248, out_Tmp_249, out_dependentLength, out_sdv_50, out_Tmp_250, out_Tmp_253, out_Tmp_255, out_Tmp_256, out_Tmp_257, out_Tmp_259, out_Tmp_260, out_Tmp_264, out_Tmp_265, out_Tmp_266, out_Tmp_268, out_tmp, out_Tmp_270, out_Tmp_271, out_i_1, out_Tmp_272, out_Tmp_273, out_Tmp_275, out_Tmp_276, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_Tmp_283, out_Tmp_284, out_unitDirEntries, out_Tmp_286, out_Tmp_287, out_Tmp_290, out_sdv_58, out_Tmp_291, out_Tmp_292, out_Tmp_293, out_status_6, out_Tmp_298, out_offset, out_Tmp_299, out_unitDependentDirectory_1, out_Tmp_301, out_Tmp_302, out_Tmp_303, out_Tmp_304, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_sdv_68, out_Tmp_311, out_Tmp_312, out_Tmp_313, out_modelIdCount, out_Tmp_314, out_dirInfoQuad, out_Tmp_315, out_devListSize, out_firstOne, out_Tmp_316, out_Tmp_317, out_Tmp_318, out_Tmp_319, out_Tmp_320, out_sbp2Device, out_Tmp_323, out_Tmp_324, out_Tmp_326, out_Tmp_327, out_Tmp_329, out_Tmp_334, out_Tmp_336, out_Tmp_339, out_Tmp_340, out_devInfo, out_Tmp_342, out_Tmp_343, out_retries, out_Tmp_346, out_Tmp_347, out_info, out_Tmp_349, out_Tmp_350, out_Tmp_351 := in_Tmp_234, in_Tmp_235, in_Tmp_236, in_Tmp_240, in_Tmp_241, in_Tmp_243, in_Tmp_244, in_Tmp_247, in_Tmp_248, in_Tmp_249, in_dependentLength, in_sdv_50, in_Tmp_250, in_Tmp_253, in_Tmp_255, in_Tmp_256, in_Tmp_257, in_Tmp_259, in_Tmp_260, in_Tmp_264, in_Tmp_265, in_Tmp_266, in_Tmp_268, in_tmp, in_Tmp_270, in_Tmp_271, in_i_1, in_Tmp_272, in_Tmp_273, in_Tmp_275, in_Tmp_276, in_Tmp_277, in_Tmp_278, in_j, in_Tmp_281, in_Tmp_282, in_Tmp_283, in_Tmp_284, in_unitDirEntries, in_Tmp_286, in_Tmp_287, in_Tmp_290, in_sdv_58, in_Tmp_291, in_Tmp_292, in_Tmp_293, in_status_6, in_Tmp_298, in_offset, in_Tmp_299, in_unitDependentDirectory_1, in_Tmp_301, in_Tmp_302, in_Tmp_303, in_Tmp_304, in_Tmp_305, in_Tmp_306, in_Tmp_310, in_sdv_68, in_Tmp_311, in_Tmp_312, in_Tmp_313, in_modelIdCount, in_Tmp_314, in_dirInfoQuad, in_Tmp_315, in_devListSize, in_firstOne, in_Tmp_316, in_Tmp_317, in_Tmp_318, in_Tmp_319, in_Tmp_320, in_sbp2Device, in_Tmp_323, in_Tmp_324, in_Tmp_326, in_Tmp_327, in_Tmp_329, in_Tmp_334, in_Tmp_336, in_Tmp_339, in_Tmp_340, in_devInfo, in_Tmp_342, in_Tmp_343, in_retries, in_Tmp_346, in_Tmp_347, in_info, in_Tmp_349, in_Tmp_350, in_Tmp_351;
    goto L132, exit;

  exit:
    return;

  L132:
    goto anon308_Then;

  anon308_Then:
    assume {:partition} in_Sbp2Req == 0;
    goto anon309_Else;

  anon309_Else:
    assume {:partition} in_directoryLength > out_i_1;
    out_Tmp_343 := out_devListSize;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_256;
    out_devInfo := out_Tmp_256 + out_Tmp_343 * 268;
    out_Tmp_316 := in_unitDirectory_1;
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} out_Tmp_316 != 0;
    assume out_Tmp_316 > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    goto L371;

  L371:
    out_i_1 := out_i_1 + 1;
    goto L371_dummy;

  L371_dummy:
    call {:si_unique_call 3533} {:si_old_unique_call 1} out_Tmp_234, out_Tmp_235, out_Tmp_236, out_Tmp_240, out_Tmp_241, out_Tmp_243, out_Tmp_244, out_Tmp_247, out_Tmp_248, out_Tmp_249, out_dependentLength, out_sdv_50, out_Tmp_250, out_Tmp_253, out_Tmp_255, out_Tmp_256, out_Tmp_257, out_Tmp_259, out_Tmp_260, out_Tmp_264, out_Tmp_265, out_Tmp_266, out_Tmp_268, out_tmp, out_Tmp_270, out_Tmp_271, out_i_1, out_Tmp_272, out_Tmp_273, out_Tmp_275, out_Tmp_276, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_Tmp_283, out_Tmp_284, out_unitDirEntries, out_Tmp_286, out_Tmp_287, out_Tmp_290, out_sdv_58, out_Tmp_291, out_Tmp_292, out_Tmp_293, out_status_6, out_Tmp_298, out_offset, out_Tmp_299, out_unitDependentDirectory_1, out_Tmp_301, out_Tmp_302, out_Tmp_303, out_Tmp_304, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_sdv_68, out_Tmp_311, out_Tmp_312, out_Tmp_313, out_modelIdCount, out_Tmp_314, out_dirInfoQuad, out_Tmp_315, out_devListSize, out_firstOne, out_Tmp_316, out_Tmp_317, out_Tmp_318, out_Tmp_319, out_Tmp_320, out_sbp2Device, out_Tmp_323, out_Tmp_324, out_Tmp_326, out_Tmp_327, out_Tmp_329, out_Tmp_334, out_Tmp_336, out_Tmp_339, out_Tmp_340, out_devInfo, out_Tmp_342, out_Tmp_343, out_retries, out_Tmp_346, out_Tmp_347, out_info, out_Tmp_349, out_Tmp_350, out_Tmp_351 := Sbp2Get1394ConfigInfo_loop_L132(out_Tmp_234, out_Tmp_235, out_Tmp_236, out_Tmp_240, out_Tmp_241, out_Tmp_243, out_Tmp_244, in_sdv_48, out_Tmp_247, out_Tmp_248, out_Tmp_249, out_dependentLength, out_sdv_50, out_Tmp_250, out_Tmp_253, out_Tmp_255, out_Tmp_256, out_Tmp_257, in_sdv_52, out_Tmp_259, out_Tmp_260, out_Tmp_264, in_sdv_54, out_Tmp_265, out_Tmp_266, out_Tmp_268, out_tmp, out_Tmp_270, out_Tmp_271, in_sdv_55, out_i_1, out_Tmp_272, in_genPacket, out_Tmp_273, out_Tmp_275, out_Tmp_276, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, in_sdv_56, out_Tmp_282, out_Tmp_283, out_Tmp_284, out_unitDirEntries, out_Tmp_286, out_Tmp_287, in_currentGeneration, out_Tmp_290, out_sdv_58, out_Tmp_291, out_Tmp_292, in_vendorLeaf_1, out_Tmp_293, in_sdv_59, out_status_6, in_sdv_60, out_Tmp_298, out_offset, in_modelLeaf_1, out_Tmp_299, out_unitDependentDirectory_1, in_sdv_63, in_sdv_64, out_Tmp_301, out_Tmp_302, in_sdv_66, out_Tmp_303, in_sdv_67, out_Tmp_304, in_cromOffset, out_Tmp_305, out_Tmp_306, out_Tmp_310, in_directoryLength, out_sdv_68, out_Tmp_311, out_Tmp_312, out_Tmp_313, out_modelIdCount, out_Tmp_314, out_dirInfoQuad, out_Tmp_315, out_devListSize, out_firstOne, out_Tmp_316, in_sdv_70, out_Tmp_317, out_Tmp_318, out_Tmp_319, in_sdv_71, out_Tmp_320, in_directoryLocation, out_sbp2Device, in_firstDevInfo, out_Tmp_323, out_Tmp_324, out_Tmp_326, in_sdv_75, in_ModelLeaf, out_Tmp_327, in_ModelLeaf_1, in_sdv_76, out_Tmp_329, out_Tmp_334, out_Tmp_336, out_Tmp_339, out_Tmp_340, out_devInfo, in_sdv_79, in_sdv_80, out_Tmp_342, out_Tmp_343, out_retries, in_dependentLocation, out_Tmp_346, in_unitDirectory_1, in_ModelLeaf_2, in_packet_1, out_Tmp_347, out_info, out_Tmp_349, out_Tmp_350, out_Tmp_351, in_FdoExtension_2, in_Sbp2Req);
    return;

  anon378_Then:
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} out_firstOne != 0;
    out_retries := 3;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    havoc out_offset;
    call {:si_unique_call 3526} out_sdv_58 := IoAllocateMdl(0, out_dependentLength, 0, 0, 0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_283;
    assume {:nonnull} out_Tmp_283 != 0;
    assume out_Tmp_283 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_350;
    assume {:nonnull} out_Tmp_350 != 0;
    assume out_Tmp_350 > 0;
    goto anon412_Then;

  anon412_Then:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_244;
    assume {:nonnull} out_Tmp_244 != 0;
    assume out_Tmp_244 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_247;
    assume {:nonnull} out_Tmp_247 != 0;
    assume out_Tmp_247 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_315;
    assume {:nonnull} out_Tmp_315 != 0;
    assume out_Tmp_315 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_270;
    assume {:nonnull} out_Tmp_270 != 0;
    assume out_Tmp_270 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_235;
    assume {:nonnull} out_Tmp_235 != 0;
    assume out_Tmp_235 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_317;
    assume {:nonnull} out_Tmp_317 != 0;
    assume out_Tmp_317 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_319;
    assume {:nonnull} out_Tmp_319 != 0;
    assume out_Tmp_319 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_234;
    assume {:nonnull} out_Tmp_234 != 0;
    assume out_Tmp_234 > 0;
    goto L214;

  L214:
    call {:si_unique_call 3520} out_Tmp_243, out_Tmp_249, out_Tmp_255, out_Tmp_265, out_Tmp_271, out_Tmp_286, out_status_6, out_Tmp_303, out_Tmp_320, out_Tmp_323, out_Tmp_339, out_retries := Sbp2Get1394ConfigInfo_loop_L214(out_Tmp_243, out_Tmp_249, out_Tmp_255, out_Tmp_265, out_Tmp_271, in_genPacket, out_Tmp_286, in_currentGeneration, out_status_6, out_Tmp_303, out_Tmp_320, out_Tmp_323, out_Tmp_339, out_retries, in_packet_1, in_FdoExtension_2);
    goto L214_last;

  L214_last:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_271;
    assume {:nonnull} out_Tmp_271 != 0;
    assume out_Tmp_271 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_1343;
    call {:si_unique_call 3521} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_1343, 2);
    goto anon413_Else;

  anon413_Else:
    assume {:partition} yogi_error != 1;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume {:partition} out_status_6 >= 0;
    goto L222;

  L222:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc vslice_dummy_var_1342;
    call {:si_unique_call 3519} DeAllocateIrpAndIrb(in_FdoExtension_2, vslice_dummy_var_1342);
    goto L223;

  L223:
    goto anon325_Else;

  anon325_Else:
    assume {:partition} out_status_6 >= 0;
    call {:si_unique_call 3517} out_dirInfoQuad := corral_nondet();
    out_dependentLength := out_dirInfoQuad * 4;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3518} IoFreeMdl(0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_298;
    assume {:nonnull} out_Tmp_298 != 0;
    assume out_Tmp_298 > 0;
    goto anon414_Then;

  anon414_Then:
    assume {:partition} 256 >= out_dependentLength;
    call {:si_unique_call 3515} sdv_ExFreePool(0);
    out_Tmp_334 := out_dependentLength + 4;
    call {:si_unique_call 3516} out_sdv_50 := ExAllocatePoolWithTag(512, out_Tmp_334, -464166317);
    out_unitDependentDirectory_1 := out_sdv_50;
    goto anon416_Else;

  anon416_Else:
    assume {:partition} out_unitDependentDirectory_1 != 0;
    out_Tmp_253 := out_dependentLength + 4;
    call {:si_unique_call 3514} out_sdv_68 := IoAllocateMdl(0, out_Tmp_253, 0, 0, 0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_272;
    assume {:nonnull} out_Tmp_272 != 0;
    assume out_Tmp_272 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_248;
    assume {:nonnull} out_Tmp_248 != 0;
    assume out_Tmp_248 > 0;
    goto anon417_Else;

  anon417_Else:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    out_j := 1;
    goto L273;

  L273:
    call {:si_unique_call 3512} out_Tmp_250, out_Tmp_259, out_Tmp_260, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_unitDirEntries, out_Tmp_292, out_status_6, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_Tmp_311, out_modelIdCount, out_Tmp_314, out_devListSize, out_Tmp_326 := Sbp2Get1394ConfigInfo_loop_L273(out_dependentLength, out_Tmp_250, out_Tmp_259, out_Tmp_260, in_sdv_54, out_Tmp_277, out_Tmp_278, out_j, out_Tmp_281, out_Tmp_282, out_unitDirEntries, out_Tmp_292, in_vendorLeaf_1, out_status_6, in_sdv_60, out_offset, out_unitDependentDirectory_1, in_sdv_66, in_cromOffset, out_Tmp_305, out_Tmp_306, out_Tmp_310, out_Tmp_311, out_modelIdCount, out_Tmp_314, out_devListSize, in_firstDevInfo, out_Tmp_326, out_devInfo, in_sdv_79, in_ModelLeaf_2, in_packet_1, in_FdoExtension_2);
    goto L273_last;

  L273_last:
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_259;
    assume {:nonnull} out_Tmp_259 != 0;
    assume out_Tmp_259 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_260;
    assume {:nonnull} out_Tmp_260 != 0;
    assume out_Tmp_260 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_278;
    assume {:nonnull} out_Tmp_278 != 0;
    assume out_Tmp_278 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_326;
    assume {:nonnull} out_Tmp_326 != 0;
    assume out_Tmp_326 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_311;
    assume {:nonnull} out_Tmp_311 != 0;
    assume out_Tmp_311 > 0;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc vslice_dummy_var_1341;
    call {:si_unique_call 3513} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_1341, 2);
    goto anon418_Else;

  anon418_Else:
    assume {:partition} yogi_error != 1;
    goto anon328_Then;

  anon328_Then:
    assume {:partition} 0 <= out_status_6;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_250;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} out_Tmp_250 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_310;
    assume {:nonnull} out_Tmp_310 != 0;
    assume out_Tmp_310 > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    havoc out_Tmp_292;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_281;
    call {:si_unique_call 3528} WPP_SF_q(out_Tmp_281, 47, out_Tmp_292, in_FdoExtension_2);
    goto L300;

  L300:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3527} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L311;

  L311:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    goto L316;

  L316:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto L318;

  L318:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L320;

  L320:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L322;

  L322:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L286;

  L286:
    out_Tmp_305 := out_unitDependentDirectory_1;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} out_Tmp_305 != 0;
    assume out_Tmp_305 > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} out_Tmp_305 != 0;
    assume out_Tmp_305 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    goto L364;

  L364:
    out_j := out_j + 1;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} INTDIV(out_dependentLength, 4) < out_j;
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    call {:si_unique_call 3492} IoFreeMdl(0);
    assume {:nonnull} in_packet_1 != 0;
    assume in_packet_1 > 0;
    havoc out_Tmp_241;
    assume {:nonnull} out_Tmp_241 != 0;
    assume out_Tmp_241 > 0;
    goto L371;

  anon424_Then:
    assume {:partition} out_j <= INTDIV(out_dependentLength, 4);
    assume false;
    return;

  anon386_Then:
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_277;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} out_Tmp_277 != 23;
    goto L364;

  anon425_Then:
    assume {:partition} out_Tmp_277 == 23;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3531} Sbp2ParseTextLeaf(in_FdoExtension_2, out_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_2);
    goto anon426_Else;

  anon426_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_306;
    assume {:nonnull} out_Tmp_306 != 0;
    assume out_Tmp_306 > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    havoc out_Tmp_282;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_314;
    call {:si_unique_call 3532} WPP_SF_q(out_Tmp_314, 48, out_Tmp_282, in_FdoExtension_2);
    goto L349;

  L349:
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_1345;
    call {:si_unique_call 3529} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_1345, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 3530} sdv_ExFreePool(0);
    assume {:nonnull} in_ModelLeaf_2 != 0;
    assume in_ModelLeaf_2 > 0;
    goto L344;

  L344:
    out_modelIdCount := out_modelIdCount + 1;
    goto L364;

  anon336_Then:
    goto L349;

  anon427_Then:
    goto L349;

  anon335_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L349;

  anon334_Then:
    goto L344;

  anon387_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon423_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L364;

  anon333_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L322;

  anon332_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L320;

  anon331_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L318;

  anon422_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L316;

  anon330_Then:
    goto L300;

  anon421_Then:
    goto L300;

  anon329_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L300;

  anon420_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L311;

  anon419_Then:
    assume {:partition} out_Tmp_250 != 20;
    goto L286;

  anon324_Then:
    goto L223;

  anon322_Then:
    assume {:partition} 0 > out_status_6;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:partition} out_retries > 1;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_249;
    assume {:nonnull} out_Tmp_249 != 0;
    assume out_Tmp_249 > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    havoc out_Tmp_286;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_323;
    call {:si_unique_call 3523} WPP_SF_qD(out_Tmp_323, 43, out_Tmp_286, in_FdoExtension_2, out_status_6);
    goto L401;

  L401:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    goto L412;

  L412:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_320;
    assume {:nonnull} out_Tmp_320 != 0;
    assume out_Tmp_320 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_265;
    assume {:nonnull} out_Tmp_265 != 0;
    assume out_Tmp_265 > 0;
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc vslice_dummy_var_1344;
    call {:si_unique_call 3525} out_status_6 := Sbp2SendRequest#1(in_FdoExtension_2, vslice_dummy_var_1344, 2);
    goto anon430_Else;

  anon430_Else:
    assume {:partition} yogi_error != 1;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume {:partition} out_status_6 < 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_243;
    assume {:nonnull} out_Tmp_243 != 0;
    assume out_Tmp_243 > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    havoc out_Tmp_255;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_339;
    call {:si_unique_call 3524} WPP_SF_qD(out_Tmp_339, 44, out_Tmp_255, in_FdoExtension_2, out_status_6);
    goto L424;

  L424:
    assume {:nonnull} in_genPacket != 0;
    assume in_genPacket > 0;
    havoc out_Tmp_303;
    assume {:nonnull} out_Tmp_303 != 0;
    assume out_Tmp_303 > 0;
    assume {:nonnull} in_currentGeneration != 0;
    assume in_currentGeneration > 0;
    goto L413;

  L413:
    out_retries := out_retries - 1;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} out_retries == 0;
    goto L222;

  anon431_Then:
    assume {:partition} out_retries != 0;
    assume false;
    return;

  anon345_Then:
    goto L424;

  anon432_Then:
    goto L424;

  anon344_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L424;

  anon343_Then:
    assume {:partition} 0 <= out_status_6;
    goto L424;

  anon342_Then:
    goto L413;

  anon340_Then:
    call {:si_unique_call 3522} AllocateIrpAndIrb(in_FdoExtension_2, in_genPacket);
    goto L412;

  anon341_Then:
    goto L401;

  anon429_Then:
    goto L401;

  anon339_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L401;

  anon323_Then:
    assume {:partition} 1 >= out_retries;
    goto L222;

  anon321_Then:
    assume {:partition} out_firstOne == 0;
    out_firstOne := 1;
    out_j := 0;
    goto L445;

  L445:
    call {:si_unique_call 3503} out_Tmp_236, out_Tmp_268, out_Tmp_275, out_Tmp_276, out_j, out_unitDirEntries, out_Tmp_287, out_Tmp_291, out_status_6, out_Tmp_299, out_Tmp_301, out_Tmp_302, out_modelIdCount, out_devListSize, out_Tmp_318, out_Tmp_327, out_Tmp_329 := Sbp2Get1394ConfigInfo_loop_L445(out_Tmp_236, in_sdv_48, out_dependentLength, out_Tmp_268, in_sdv_55, out_Tmp_275, out_Tmp_276, out_j, out_unitDirEntries, out_Tmp_287, out_Tmp_291, in_vendorLeaf_1, out_status_6, in_modelLeaf_1, out_Tmp_299, out_unitDependentDirectory_1, out_Tmp_301, out_Tmp_302, in_sdv_67, in_cromOffset, out_modelIdCount, out_devListSize, out_Tmp_318, in_firstDevInfo, out_Tmp_327, in_ModelLeaf_1, in_sdv_76, out_Tmp_329, out_devInfo, in_dependentLocation, in_FdoExtension_2);
    goto L445_last;

  L445_last:
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:partition} out_dependentLength > out_j;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_275;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} out_Tmp_275 == 20;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:partition} out_devListSize > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L459;

  L459:
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_318;
    assume {:nonnull} out_Tmp_318 != 0;
    assume out_Tmp_318 > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    havoc out_Tmp_299;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_276;
    call {:si_unique_call 3507} WPP_SF_q(out_Tmp_276, 40, out_Tmp_299, in_FdoExtension_2);
    goto L465;

  L465:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3504} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L476;

  L476:
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    goto L480;

  L480:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    goto L482;

  L482:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    goto L484;

  L484:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L486;

  L486:
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L448;

  L448:
    out_Tmp_291 := out_unitDependentDirectory_1;
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} out_Tmp_291 != 0;
    assume out_Tmp_291 > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} out_Tmp_291 != 0;
    assume out_Tmp_291 > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    goto L542;

  L542:
    out_j := out_j + 1;
    assume false;
    return;

  anon388_Then:
    assume {:nonnull} out_unitDependentDirectory_1 != 0;
    assume out_unitDependentDirectory_1 > 0;
    havoc out_Tmp_268;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    assume {:partition} out_Tmp_268 != 23;
    goto L542;

  anon439_Then:
    assume {:partition} out_Tmp_268 == 23;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_dependentLocation != 0;
    assume in_dependentLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3509} Sbp2ParseTextLeaf(in_FdoExtension_2, out_unitDependentDirectory_1, in_cromOffset, in_ModelLeaf_1);
    goto anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} in_ModelLeaf_1 != 0;
    assume in_ModelLeaf_1 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_1340;
    call {:si_unique_call 3510} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_1340, uniModelId__DEVICE_INFORMATION(out_devInfo));
    call {:si_unique_call 3511} sdv_ExFreePool(0);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_287;
    assume {:nonnull} out_Tmp_287 != 0;
    assume out_Tmp_287 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    havoc out_Tmp_327;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_302;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    havoc vslice_dummy_var_1339;
    call {:si_unique_call 3508} WPP_SF_S(out_Tmp_302, 41, out_Tmp_327, vslice_dummy_var_1339);
    goto L512;

  L512:
    out_modelIdCount := out_modelIdCount + 1;
    goto L542;

  anon361_Then:
    goto L512;

  anon441_Then:
    goto L512;

  anon360_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L512;

  anon359_Then:
    goto L512;

  anon358_Then:
    goto L512;

  anon389_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon438_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L542;

  anon355_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L486;

  anon354_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L484;

  anon353_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L482;

  anon437_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L480;

  anon352_Then:
    goto L465;

  anon436_Then:
    goto L465;

  anon351_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L465;

  anon350_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L476;

  anon435_Then:
    assume {:partition} 0 >= out_devListSize;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_301;
    assume {:nonnull} out_Tmp_301 != 0;
    assume out_Tmp_301 > 0;
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    havoc out_Tmp_236;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_329;
    call {:si_unique_call 3506} WPP_SF_q(out_Tmp_329, 39, out_Tmp_236, in_FdoExtension_2);
    goto L493;

  L493:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3505} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L459;

  anon357_Then:
    goto L493;

  anon442_Then:
    goto L493;

  anon356_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L493;

  anon349_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L459;

  anon434_Then:
    assume {:partition} out_Tmp_275 != 20;
    goto L448;

  anon348_Then:
    assume {:partition} out_j >= out_dependentLength;
    goto L371;

  anon379_Then:
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    havoc out_Tmp_290;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:partition} out_Tmp_290 == 23;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:partition} out_devListSize >= out_modelIdCount;
    out_Tmp_264 := out_modelIdCount;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_313;
    out_info := out_Tmp_313 + out_Tmp_264 * 268;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    assume {:nonnull} in_directoryLocation != 0;
    assume in_directoryLocation > 0;
    assume {:nonnull} in_cromOffset != 0;
    assume in_cromOffset > 0;
    call {:si_unique_call 3500} Sbp2ParseTextLeaf(in_FdoExtension_2, in_unitDirectory_1, in_cromOffset, in_ModelLeaf);
    goto anon410_Else;

  anon410_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} in_ModelLeaf != 0;
    assume in_ModelLeaf > 0;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    havoc vslice_dummy_var_1338;
    call {:si_unique_call 3501} out_status_6 := Sbp2_ProcessTextualDescriptor(vslice_dummy_var_1338, uniModelId__DEVICE_INFORMATION(out_info));
    call {:si_unique_call 3502} sdv_ExFreePool(0);
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_293;
    assume {:nonnull} out_Tmp_293 != 0;
    assume out_Tmp_293 > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    havoc out_Tmp_257;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_266;
    assume {:nonnull} out_info != 0;
    assume out_info > 0;
    havoc vslice_dummy_var_1337;
    call {:si_unique_call 3499} WPP_SF_S(out_Tmp_266, 38, out_Tmp_257, vslice_dummy_var_1337);
    goto L562;

  L562:
    out_modelIdCount := out_modelIdCount + 1;
    goto L371;

  anon365_Then:
    goto L562;

  anon411_Then:
    goto L562;

  anon364_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L562;

  anon363_Then:
    goto L562;

  anon409_Then:
    goto L562;

  anon362_Then:
    assume {:partition} out_modelIdCount > out_devListSize;
    goto L371;

  anon408_Then:
    assume {:partition} out_Tmp_290 != 23;
    goto L371;

  anon380_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_sbp2Device := 1;
    goto L371;

  anon381_Then:
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:partition} in_sdv_63 != 0;
    out_Tmp_342 := 1;
    goto L605;

  L605:
    out_tmp := out_Tmp_342;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:partition} out_tmp != 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto L371;

  anon407_Then:
    assume {:partition} out_tmp == 0;
    goto L371;

  anon366_Then:
    assume {:partition} in_sdv_63 == 0;
    out_Tmp_342 := 0;
    goto L605;

  anon382_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_312;
    assume {:nonnull} out_Tmp_312 != 0;
    assume out_Tmp_312 > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    havoc out_Tmp_340;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_240;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc vslice_dummy_var_1336;
    call {:si_unique_call 3493} WPP_SF_qD(out_Tmp_240, 35, out_Tmp_340, in_FdoExtension_2, vslice_dummy_var_1336);
    goto L371;

  anon367_Then:
    goto L371;

  anon406_Then:
    goto L371;

  anon405_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L371;

  anon383_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc out_Tmp_351;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:partition} 8 > out_Tmp_351;
    out_Tmp_284 := 8;
    goto L633;

  L633:
    out_tmp := out_Tmp_284;
    out_tmp := out_tmp * 4;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:partition} 16 > out_tmp - 20;
    out_Tmp_349 := out_tmp - 20;
    goto L638;

  L638:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    call {:si_unique_call 3494} out_tmp := corral_nondet();
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon404_Then:
    assume {:partition} out_tmp - 20 >= 16;
    out_Tmp_349 := 16;
    goto L638;

  anon403_Then:
    assume {:partition} out_Tmp_351 >= 8;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    havoc out_Tmp_284;
    goto L633;

  anon384_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon385_Then:
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon399_Then:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:partition} out_devListSize != 0;
    goto L661;

  L661:
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:partition} in_vendorLeaf_1 != 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_346;
    assume {:nonnull} out_Tmp_346 != 0;
    assume out_Tmp_346 > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    havoc out_Tmp_324;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_304;
    call {:si_unique_call 3498} WPP_SF_q(out_Tmp_304, 37, out_Tmp_324, in_FdoExtension_2);
    goto L667;

  L667:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3495} out_status_6 := Sbp2_ProcessTextualDescriptor(in_vendorLeaf_1, uniVendorId__DEVICE_INFORMATION(out_devInfo));
    goto L678;

  L678:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_devListSize := out_devListSize + 1;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} in_firstDevInfo != 0;
    assume in_firstDevInfo > 0;
    out_unitDirEntries := out_unitDirEntries + 1;
    goto L371;

  anon371_Then:
    goto L667;

  anon401_Then:
    goto L667;

  anon370_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L667;

  anon369_Then:
    assume {:partition} in_vendorLeaf_1 == 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L678;

  anon400_Then:
    assume {:partition} out_devListSize == 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} in_modelLeaf_1 != 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_273;
    assume {:nonnull} out_Tmp_273 != 0;
    assume out_Tmp_273 > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    havoc out_Tmp_347;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_336;
    call {:si_unique_call 3497} WPP_SF_q(out_Tmp_336, 36, out_Tmp_347, in_FdoExtension_2);
    goto L693;

  L693:
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    call {:si_unique_call 3496} out_status_6 := Sbp2_ProcessTextualDescriptor(in_modelLeaf_1, uniModelId__DEVICE_INFORMATION(out_devInfo));
    goto L661;

  anon373_Then:
    goto L693;

  anon402_Then:
    goto L693;

  anon372_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L693;

  anon368_Then:
    assume {:partition} in_modelLeaf_1 == 0;
    goto L661;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L132(in_Tmp_234: int, in_Tmp_235: int, in_Tmp_236: int, in_Tmp_240: int, in_Tmp_241: int, in_Tmp_243: int, in_Tmp_244: int, in_sdv_48: int, in_Tmp_247: int, in_Tmp_248: int, in_Tmp_249: int, in_dependentLength: int, in_sdv_50: int, in_Tmp_250: int, in_Tmp_253: int, in_Tmp_255: int, in_Tmp_256: int, in_Tmp_257: int, in_sdv_52: int, in_Tmp_259: int, in_Tmp_260: int, in_Tmp_264: int, in_sdv_54: int, in_Tmp_265: int, in_Tmp_266: int, in_Tmp_268: int, in_tmp: int, in_Tmp_270: int, in_Tmp_271: int, in_sdv_55: int, in_i_1: int, in_Tmp_272: int, in_genPacket: int, in_Tmp_273: int, in_Tmp_275: int, in_Tmp_276: int, in_Tmp_277: int, in_Tmp_278: int, in_j: int, in_Tmp_281: int, in_sdv_56: int, in_Tmp_282: int, in_Tmp_283: int, in_Tmp_284: int, in_unitDirEntries: int, in_Tmp_286: int, in_Tmp_287: int, in_currentGeneration: int, in_Tmp_290: int, in_sdv_58: int, in_Tmp_291: int, in_Tmp_292: int, in_vendorLeaf_1: int, in_Tmp_293: int, in_sdv_59: int, in_status_6: int, in_sdv_60: int, in_Tmp_298: int, in_offset: int, in_modelLeaf_1: int, in_Tmp_299: int, in_unitDependentDirectory_1: int, in_sdv_63: int, in_sdv_64: int, in_Tmp_301: int, in_Tmp_302: int, in_sdv_66: int, in_Tmp_303: int, in_sdv_67: int, in_Tmp_304: int, in_cromOffset: int, in_Tmp_305: int, in_Tmp_306: int, in_Tmp_310: int, in_directoryLength: int, in_sdv_68: int, in_Tmp_311: int, in_Tmp_312: int, in_Tmp_313: int, in_modelIdCount: int, in_Tmp_314: int, in_dirInfoQuad: int, in_Tmp_315: int, in_devListSize: int, in_firstOne: int, in_Tmp_316: int, in_sdv_70: int, in_Tmp_317: int, in_Tmp_318: int, in_Tmp_319: int, in_sdv_71: int, in_Tmp_320: int, in_directoryLocation: int, in_sbp2Device: int, in_firstDevInfo: int, in_Tmp_323: int, in_Tmp_324: int, in_Tmp_326: int, in_sdv_75: int, in_ModelLeaf: int, in_Tmp_327: int, in_ModelLeaf_1: int, in_sdv_76: int, in_Tmp_329: int, in_Tmp_334: int, in_Tmp_336: int, in_Tmp_339: int, in_Tmp_340: int, in_devInfo: int, in_sdv_79: int, in_sdv_80: int, in_Tmp_342: int, in_Tmp_343: int, in_retries: int, in_dependentLocation: int, in_Tmp_346: int, in_unitDirectory_1: int, in_ModelLeaf_2: int, in_packet_1: int, in_Tmp_347: int, in_info: int, in_Tmp_349: int, in_Tmp_350: int, in_Tmp_351: int, in_FdoExtension_2: int, in_Sbp2Req: int) returns (out_Tmp_234: int, out_Tmp_235: int, out_Tmp_236: int, out_Tmp_240: int, out_Tmp_241: int, out_Tmp_243: int, out_Tmp_244: int, out_Tmp_247: int, out_Tmp_248: int, out_Tmp_249: int, out_dependentLength: int, out_sdv_50: int, out_Tmp_250: int, out_Tmp_253: int, out_Tmp_255: int, out_Tmp_256: int, out_Tmp_257: int, out_Tmp_259: int, out_Tmp_260: int, out_Tmp_264: int, out_Tmp_265: int, out_Tmp_266: int, out_Tmp_268: int, out_tmp: int, out_Tmp_270: int, out_Tmp_271: int, out_i_1: int, out_Tmp_272: int, out_Tmp_273: int, out_Tmp_275: int, out_Tmp_276: int, out_Tmp_277: int, out_Tmp_278: int, out_j: int, out_Tmp_281: int, out_Tmp_282: int, out_Tmp_283: int, out_Tmp_284: int, out_unitDirEntries: int, out_Tmp_286: int, out_Tmp_287: int, out_Tmp_290: int, out_sdv_58: int, out_Tmp_291: int, out_Tmp_292: int, out_Tmp_293: int, out_status_6: int, out_Tmp_298: int, out_offset: int, out_Tmp_299: int, out_unitDependentDirectory_1: int, out_Tmp_301: int, out_Tmp_302: int, out_Tmp_303: int, out_Tmp_304: int, out_Tmp_305: int, out_Tmp_306: int, out_Tmp_310: int, out_sdv_68: int, out_Tmp_311: int, out_Tmp_312: int, out_Tmp_313: int, out_modelIdCount: int, out_Tmp_314: int, out_dirInfoQuad: int, out_Tmp_315: int, out_devListSize: int, out_firstOne: int, out_Tmp_316: int, out_Tmp_317: int, out_Tmp_318: int, out_Tmp_319: int, out_Tmp_320: int, out_sbp2Device: int, out_Tmp_323: int, out_Tmp_324: int, out_Tmp_326: int, out_Tmp_327: int, out_Tmp_329: int, out_Tmp_334: int, out_Tmp_336: int, out_Tmp_339: int, out_Tmp_340: int, out_devInfo: int, out_Tmp_342: int, out_Tmp_343: int, out_retries: int, out_Tmp_346: int, out_Tmp_347: int, out_info: int, out_Tmp_349: int, out_Tmp_350: int, out_Tmp_351: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} out_firstOne == 1 || out_firstOne == in_firstOne;
  free ensures {:va_keep} out_Tmp_316 == in_Tmp_316 || out_Tmp_316 == in_unitDirectory_1;
  free ensures {:va_keep} out_sbp2Device == 1 || out_sbp2Device == in_sbp2Device;
  free ensures {:va_keep} out_Tmp_342 == 1 || out_Tmp_342 == 0 || out_Tmp_342 == in_Tmp_342;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2Get1394ConfigInfo_loop_L71(in_Tmp_238: int, in_i_1: int, in_directoryLength: int, in_Tmp_344: int, in_unitDirectory_1: int, in_Sbp2Req: int) returns (out_Tmp_238: int, out_i_1: int, out_Tmp_344: int)
{

  entry:
    out_Tmp_238, out_i_1, out_Tmp_344 := in_Tmp_238, in_i_1, in_Tmp_344;
    goto L71, exit;

  exit:
    return;

  L71:
    goto anon299_Else;

  anon299_Else:
    assume {:partition} in_Sbp2Req != 0;
    goto anon300_Else;

  anon300_Else:
    assume {:partition} in_directoryLength > out_i_1;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    havoc out_Tmp_344;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:partition} out_Tmp_344 == 129;
    assume {:nonnull} in_unitDirectory_1 != 0;
    assume in_unitDirectory_1 > 0;
    havoc out_Tmp_238;
    assume {:nonnull} in_Sbp2Req != 0;
    assume in_Sbp2Req > 0;
    goto anon393_Then;

  anon393_Then:
    goto L75;

  L75:
    out_i_1 := out_i_1 + 1;
    goto L75_dummy;

  L75_dummy:
    havoc out_i_1;
    return;

  anon392_Then:
    assume {:partition} out_Tmp_344 != 129;
    goto L75;

  anon301_Then:
    goto L75;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L71(in_Tmp_238: int, in_i_1: int, in_directoryLength: int, in_Tmp_344: int, in_unitDirectory_1: int, in_Sbp2Req: int) returns (out_Tmp_238: int, out_i_1: int, out_Tmp_344: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2Get1394ConfigInfo_loop_L705(in_Tmp_267: int, in_i_1: int, in_Tmp_295: int, in_Tmp_321: int, in_devInfo: int, in_buffer: int, in_FdoExtension_2: int) returns (out_Tmp_267: int, out_i_1: int, out_Tmp_295: int, out_Tmp_321: int, out_devInfo: int, out_buffer: int)
{

  entry:
    out_Tmp_267, out_i_1, out_Tmp_295, out_Tmp_321, out_devInfo, out_buffer := in_Tmp_267, in_i_1, in_Tmp_295, in_Tmp_321, in_devInfo, in_buffer;
    goto L705, exit;

  exit:
    return;

  L705:
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    goto anon374_Else;

  anon374_Else:
    out_Tmp_267 := out_i_1;
    assume {:nonnull} in_FdoExtension_2 != 0;
    assume in_FdoExtension_2 > 0;
    havoc out_Tmp_295;
    out_devInfo := out_Tmp_295 + out_Tmp_267 * 268;
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    out_Tmp_321 := uniModelId__DEVICE_INFORMATION(out_devInfo);
    assume {:nonnull} out_Tmp_321 != 0;
    assume out_Tmp_321 > 0;
    call {:si_unique_call 3535} out_buffer := _InlineInterlockedExchangePointer(Buffer__STRING(out_Tmp_321), 0);
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:partition} out_buffer != 0;
    call {:si_unique_call 3534} sdv_ExFreePool(0);
    assume {:nonnull} out_devInfo != 0;
    assume out_devInfo > 0;
    goto L715;

  L715:
    out_i_1 := out_i_1 + 1;
    goto L715_dummy;

  L715_dummy:
    call {:si_unique_call 3536} {:si_old_unique_call 1} out_Tmp_267, out_i_1, out_Tmp_295, out_Tmp_321, out_devInfo, out_buffer := Sbp2Get1394ConfigInfo_loop_L705(out_Tmp_267, out_i_1, out_Tmp_295, out_Tmp_321, out_devInfo, out_buffer, in_FdoExtension_2);
    return;

  anon375_Then:
    assume {:partition} out_buffer == 0;
    goto L715;
}



procedure {:LoopProcedure} Sbp2Get1394ConfigInfo_loop_L705(in_Tmp_267: int, in_i_1: int, in_Tmp_295: int, in_Tmp_321: int, in_devInfo: int, in_buffer: int, in_FdoExtension_2: int) returns (out_Tmp_267: int, out_i_1: int, out_Tmp_295: int, out_Tmp_321: int, out_devInfo: int, out_buffer: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2ParseTextLeaf_loop_L136(in_i_2: int, in_Tmp_503: int, in_Tmp_505: int, in_Tmp_508: int, in_pdoExtension_4: int, in_leafLength: int, in_Tmp_534: int, in_Tmp_536: int, in_status_11: int, in_packet_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_503: int, out_Tmp_505: int, out_Tmp_508: int, out_Tmp_534: int, out_Tmp_536: int, out_status_11: int)
{
  var vslice_dummy_var_1346: int;

  entry:
    out_i_2, out_Tmp_503, out_Tmp_505, out_Tmp_508, out_Tmp_534, out_Tmp_536, out_status_11 := in_i_2, in_Tmp_503, in_Tmp_505, in_Tmp_508, in_Tmp_534, in_Tmp_536, in_status_11;
    goto L136, exit;

  exit:
    return;

  L136:
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_505;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_505 != 0;
    assume out_Tmp_505 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_503;
    assume {:nonnull} out_Tmp_503 != 0;
    assume out_Tmp_503 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_534;
    assume {:nonnull} out_Tmp_534 != 0;
    assume out_Tmp_534 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_508;
    assume {:nonnull} out_Tmp_508 != 0;
    assume out_Tmp_508 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_536;
    assume {:nonnull} out_Tmp_536 != 0;
    assume out_Tmp_536 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_1346;
    call {:si_unique_call 3537} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, vslice_dummy_var_1346, 2);
    goto anon68_Else;

  anon68_Else:
    assume {:partition} yogi_error != 1;
    goto anon59_Then;

  anon59_Then:
    assume {:partition} 0 <= out_status_11;
    out_i_2 := out_i_2 + 1;
    goto anon69_Then;

  anon69_Then:
    assume {:partition} out_i_2 <= INTDIV(in_leafLength, 4);
    goto anon69_Then_dummy;

  anon69_Then_dummy:
    call {:si_unique_call 3538} {:si_old_unique_call 1} out_i_2, out_Tmp_503, out_Tmp_505, out_Tmp_508, out_Tmp_534, out_Tmp_536, out_status_11 := Sbp2ParseTextLeaf_loop_L136(out_i_2, out_Tmp_503, out_Tmp_505, out_Tmp_508, in_pdoExtension_4, in_leafLength, out_Tmp_534, out_Tmp_536, out_status_11, in_packet_2, in_ModelLeafLocation);
    return;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L136(in_i_2: int, in_Tmp_503: int, in_Tmp_505: int, in_Tmp_508: int, in_pdoExtension_4: int, in_leafLength: int, in_Tmp_534: int, in_Tmp_536: int, in_status_11: int, in_packet_2: int, in_ModelLeafLocation: int) returns (out_i_2: int, out_Tmp_503: int, out_Tmp_505: int, out_Tmp_508: int, out_Tmp_534: int, out_Tmp_536: int, out_status_11: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2ParseTextLeaf_loop_L44(in_Tmp_504: int, in_waitValue_1: int, in_pdoExtension_4: int, in_Tmp_509: int, in_Tmp_513: int, in_Tmp_518: int, in_Tmp_519: int, in_Tmp_522: int, in_Tmp_525: int, in_Tmp_526: int, in_currentGeneration_1: int, in_retries_1: int, in_Tmp_528: int, in_Tmp_530: int, in_tModelLeafMdl: int, in_Tmp_531: int, in_Tmp_532: int, in_Tmp_533: int, in_Tmp_539: int, in_status_11: int, in_packet_2: int, in_Tmp_540: int, in_event: int, in_Tmp_544: int, in_ModelLeafLocation: int, in_vslice_dummy_var_14: int) returns (out_Tmp_504: int, out_Tmp_509: int, out_Tmp_513: int, out_Tmp_518: int, out_Tmp_519: int, out_Tmp_522: int, out_Tmp_525: int, out_Tmp_526: int, out_currentGeneration_1: int, out_retries_1: int, out_Tmp_528: int, out_Tmp_530: int, out_Tmp_531: int, out_Tmp_532: int, out_Tmp_533: int, out_Tmp_539: int, out_status_11: int, out_Tmp_540: int, out_Tmp_544: int, out_vslice_dummy_var_14: int)
{
  var vslice_dummy_var_1347: int;
  var vslice_dummy_var_1348: int;

  entry:
    out_Tmp_504, out_Tmp_509, out_Tmp_513, out_Tmp_518, out_Tmp_519, out_Tmp_522, out_Tmp_525, out_Tmp_526, out_currentGeneration_1, out_retries_1, out_Tmp_528, out_Tmp_530, out_Tmp_531, out_Tmp_532, out_Tmp_533, out_Tmp_539, out_status_11, out_Tmp_540, out_Tmp_544, out_vslice_dummy_var_14 := in_Tmp_504, in_Tmp_509, in_Tmp_513, in_Tmp_518, in_Tmp_519, in_Tmp_522, in_Tmp_525, in_Tmp_526, in_currentGeneration_1, in_retries_1, in_Tmp_528, in_Tmp_530, in_Tmp_531, in_Tmp_532, in_Tmp_533, in_Tmp_539, in_status_11, in_Tmp_540, in_Tmp_544, in_vslice_dummy_var_14;
    goto L44, exit;

  exit:
    return;

  L44:
    assume {:CounterLoop 3} {:Counter "retries_1"} true;
    goto anon52_Else;

  anon52_Else:
    assume {:partition} out_retries_1 != 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_530;
    assume {:nonnull} out_Tmp_530 != 0;
    assume out_Tmp_530 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_531;
    assume {:nonnull} out_Tmp_531 != 0;
    assume out_Tmp_531 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_1348;
    call {:si_unique_call 3543} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, vslice_dummy_var_1348, 2);
    goto anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} out_status_11 < 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_532;
    assume {:nonnull} out_Tmp_532 != 0;
    assume out_Tmp_532 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    havoc out_Tmp_513;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_522;
    call {:si_unique_call 3542} WPP_SF_qD(out_Tmp_522, 58, out_Tmp_513, in_pdoExtension_4, out_status_11);
    goto L56;

  L56:
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_528;
    assume {:nonnull} out_Tmp_528 != 0;
    assume out_Tmp_528 > 0;
    havoc out_currentGeneration_1;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_509;
    assume {:nonnull} out_Tmp_509 != 0;
    assume out_Tmp_509 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_526;
    assume {:nonnull} out_Tmp_526 != 0;
    assume out_Tmp_526 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_533;
    assume {:nonnull} out_Tmp_533 != 0;
    assume out_Tmp_533 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_525;
    assume {:nonnull} out_Tmp_525 != 0;
    assume out_Tmp_525 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_544;
    assume {:nonnull} in_ModelLeafLocation != 0;
    assume in_ModelLeafLocation > 0;
    assume {:nonnull} out_Tmp_544 != 0;
    assume out_Tmp_544 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_539;
    assume {:nonnull} out_Tmp_539 != 0;
    assume out_Tmp_539 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_504;
    assume {:nonnull} out_Tmp_504 != 0;
    assume out_Tmp_504 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_519;
    assume {:nonnull} out_Tmp_519 != 0;
    assume out_Tmp_519 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_518;
    assume {:nonnull} out_Tmp_518 != 0;
    assume out_Tmp_518 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc out_Tmp_540;
    assume {:nonnull} out_Tmp_540 != 0;
    assume out_Tmp_540 > 0;
    assume {:nonnull} in_packet_2 != 0;
    assume in_packet_2 > 0;
    havoc vslice_dummy_var_1347;
    call {:si_unique_call 3541} out_status_11 := Sbp2SendRequest#1(in_pdoExtension_4, vslice_dummy_var_1347, 2);
    goto anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon55_Else;

  anon55_Else:
    assume {:partition} out_status_11 < 0;
    call {:si_unique_call 3539} KeInitializeEvent(in_event, 0, 0);
    assume {:nonnull} in_waitValue_1 != 0;
    assume in_waitValue_1 > 0;
    call {:si_unique_call 3540} out_vslice_dummy_var_14 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_1);
    out_retries_1 := out_retries_1 - 1;
    goto anon55_Else_dummy;

  anon55_Else_dummy:
    call {:si_unique_call 3544} {:si_old_unique_call 1} out_Tmp_504, out_Tmp_509, out_Tmp_513, out_Tmp_518, out_Tmp_519, out_Tmp_522, out_Tmp_525, out_Tmp_526, out_currentGeneration_1, out_retries_1, out_Tmp_528, out_Tmp_530, out_Tmp_531, out_Tmp_532, out_Tmp_533, out_Tmp_539, out_status_11, out_Tmp_540, out_Tmp_544, out_vslice_dummy_var_14 := Sbp2ParseTextLeaf_loop_L44(out_Tmp_504, in_waitValue_1, in_pdoExtension_4, out_Tmp_509, out_Tmp_513, out_Tmp_518, out_Tmp_519, out_Tmp_522, out_Tmp_525, out_Tmp_526, out_currentGeneration_1, out_retries_1, out_Tmp_528, out_Tmp_530, in_tModelLeafMdl, out_Tmp_531, out_Tmp_532, out_Tmp_533, out_Tmp_539, out_status_11, in_packet_2, out_Tmp_540, in_event, out_Tmp_544, in_ModelLeafLocation, out_vslice_dummy_var_14);
    return;

  anon57_Then:
    goto L56;

  anon72_Then:
    goto L56;

  anon56_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L56;

  anon54_Then:
    assume {:partition} 0 <= out_status_11;
    goto L56;
}



procedure {:LoopProcedure} Sbp2ParseTextLeaf_loop_L44(in_Tmp_504: int, in_waitValue_1: int, in_pdoExtension_4: int, in_Tmp_509: int, in_Tmp_513: int, in_Tmp_518: int, in_Tmp_519: int, in_Tmp_522: int, in_Tmp_525: int, in_Tmp_526: int, in_currentGeneration_1: int, in_retries_1: int, in_Tmp_528: int, in_Tmp_530: int, in_tModelLeafMdl: int, in_Tmp_531: int, in_Tmp_532: int, in_Tmp_533: int, in_Tmp_539: int, in_status_11: int, in_packet_2: int, in_Tmp_540: int, in_event: int, in_Tmp_544: int, in_ModelLeafLocation: int, in_vslice_dummy_var_14: int) returns (out_Tmp_504: int, out_Tmp_509: int, out_Tmp_513: int, out_Tmp_518: int, out_Tmp_519: int, out_Tmp_522: int, out_Tmp_525: int, out_Tmp_526: int, out_currentGeneration_1: int, out_retries_1: int, out_Tmp_528: int, out_Tmp_530: int, out_Tmp_531: int, out_Tmp_532: int, out_Tmp_533: int, out_Tmp_539: int, out_status_11: int, out_Tmp_540: int, out_Tmp_544: int, out_vslice_dummy_var_14: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} out_vslice_dummy_var_14 == 258 || out_vslice_dummy_var_14 == 0 || out_vslice_dummy_var_14 == in_vslice_dummy_var_14;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(in_nextEntry: int, in_queueEntry: int, in_sdv_398: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_398: int)
{

  entry:
    out_nextEntry, out_queueEntry, out_sdv_398 := in_nextEntry, in_queueEntry, in_sdv_398;
    goto L22, exit;

  exit:
    return;

  L22:
    goto anon13_Else;

  anon13_Else:
    call {:si_unique_call 3545} out_sdv_398 := sdv_containing_record(out_nextEntry, 0);
    out_queueEntry := out_sdv_398;
    assume {:nonnull} out_queueEntry != 0;
    assume out_queueEntry > 0;
    goto anon15_Else;

  anon15_Else:
    assume {:nonnull} out_nextEntry != 0;
    assume out_nextEntry > 0;
    havoc out_nextEntry;
    goto anon15_Else_dummy;

  anon15_Else_dummy:
    havoc out_nextEntry;
    return;
}



procedure {:LoopProcedure} Sbp2RemoveByKeyDeviceQueueIfBusy_loop_L22(in_nextEntry: int, in_queueEntry: int, in_sdv_398: int, in_SortKey: int) returns (out_nextEntry: int, out_queueEntry: int, out_sdv_398: int);
  free ensures {:va_keep} out_nextEntry == in_nextEntry;
  free ensures {:va_keep} out_queueEntry == in_queueEntry;
  free ensures {:va_keep} out_sdv_398 == in_sdv_398;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation AcquireOrbListLock_loop_L12(in_currThread_1: int, in_prevOwner: int, in_sdv_413: int, in_sdv_414: int, in_DeviceExtension_3: int, in_fFromDpcLevel_1: int) returns (out_prevOwner: int, out_sdv_413: int, out_sdv_414: int)
{
  var vslice_dummy_var_1349: int;

  entry:
    out_prevOwner, out_sdv_413, out_sdv_414 := in_prevOwner, in_sdv_413, in_sdv_414;
    goto L12, exit;

  exit:
    return;

  L12:
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    call {:si_unique_call 3546} out_sdv_413 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(in_DeviceExtension_3), in_currThread_1, 0);
    out_prevOwner := out_sdv_413;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} out_prevOwner == in_currThread_1;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    havoc vslice_dummy_var_1349;
    call {:si_unique_call 3547} Sbp2AddLog(in_DeviceExtension_3, 256, 544301889, in_currThread_1, vslice_dummy_var_1349);
    goto L22;

  L22:
    goto anon14_Then;

  anon14_Then:
    assume {:partition} out_prevOwner != in_currThread_1;
    goto anon14_Then_dummy;

  anon14_Then_dummy:
    call {:si_unique_call 3553} {:si_old_unique_call 1} out_prevOwner, out_sdv_413, out_sdv_414 := AcquireOrbListLock_loop_L12(in_currThread_1, out_prevOwner, out_sdv_413, out_sdv_414, in_DeviceExtension_3, in_fFromDpcLevel_1);
    return;

  anon17_Then:
    assume {:partition} out_prevOwner != in_currThread_1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} in_fFromDpcLevel_1 != 0;
    call {:si_unique_call 3550} KeAcquireInStackQueuedSpinLockAtDpcLevel(0, 0);
    goto L32;

  L32:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} out_prevOwner != 0;
    assume {:nonnull} in_DeviceExtension_3 != 0;
    assume in_DeviceExtension_3 > 0;
    call {:si_unique_call 3552} out_sdv_414 := _InlineInterlockedCompareExchangePointer(OrbListOwner__DEVICE_EXTENSION(in_DeviceExtension_3), in_currThread_1, 0);
    out_prevOwner := out_sdv_414;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} out_prevOwner != 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} in_fFromDpcLevel_1 != 0;
    call {:si_unique_call 3548} KeReleaseInStackQueuedSpinLockFromDpcLevel(0);
    goto L22;

  anon16_Then:
    assume {:partition} in_fFromDpcLevel_1 == 0;
    call {:si_unique_call 3549} KeReleaseInStackQueuedSpinLock(0);
    goto L22;

  anon18_Then:
    assume {:partition} out_prevOwner == 0;
    goto L22;

  anon15_Then:
    assume {:partition} out_prevOwner == 0;
    goto L22;

  anon13_Then:
    assume {:partition} in_fFromDpcLevel_1 == 0;
    call {:si_unique_call 3551} KeAcquireInStackQueuedSpinLock(0, 0);
    goto L32;
}



procedure {:LoopProcedure} AcquireOrbListLock_loop_L12(in_currThread_1: int, in_prevOwner: int, in_sdv_413: int, in_sdv_414: int, in_DeviceExtension_3: int, in_fFromDpcLevel_1: int) returns (out_prevOwner: int, out_sdv_413: int, out_sdv_414: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2InsertByKeyDeviceQueue_loop_L31(in_nextEntry_1: int, in_queueEntry2: int, in_sdv_453: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_queueEntry2: int, out_sdv_453: int)
{

  entry:
    out_nextEntry_1, out_queueEntry2, out_sdv_453 := in_nextEntry_1, in_queueEntry2, in_sdv_453;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon7_Else;

  anon7_Else:
    call {:si_unique_call 3554} out_sdv_453 := sdv_containing_record(out_nextEntry_1, 0);
    out_queueEntry2 := out_sdv_453;
    assume {:nonnull} out_queueEntry2 != 0;
    assume out_queueEntry2 > 0;
    goto anon9_Else;

  anon9_Else:
    assume {:nonnull} out_nextEntry_1 != 0;
    assume out_nextEntry_1 > 0;
    havoc out_nextEntry_1;
    goto anon9_Else_dummy;

  anon9_Else_dummy:
    havoc out_nextEntry_1;
    return;
}



procedure {:LoopProcedure} Sbp2InsertByKeyDeviceQueue_loop_L31(in_nextEntry_1: int, in_queueEntry2: int, in_sdv_453: int, in_SortKey_1: int) returns (out_nextEntry_1: int, out_queueEntry2: int, out_sdv_453: int);
  free ensures {:va_keep} out_nextEntry_1 == in_nextEntry_1;
  free ensures {:va_keep} out_queueEntry2 == in_queueEntry2;
  free ensures {:va_keep} out_sdv_453 == in_sdv_453;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2InitializeOrb_loop_L46(in_i_3: int, in_Tmp_1637: int, in_Tmp_1648: int, in_Tmp_1650: int, in_sdv_523: int, in_sdv_524: int, in_Tmp_1669: int, in_CallbackContext_1: int) returns (out_i_3: int, out_Tmp_1637: int, out_Tmp_1648: int, out_Tmp_1650: int, out_Tmp_1669: int)
{

  entry:
    out_i_3, out_Tmp_1637, out_Tmp_1648, out_Tmp_1650, out_Tmp_1669 := in_i_3, in_Tmp_1637, in_Tmp_1648, in_Tmp_1650, in_Tmp_1669;
    goto L46, exit;

  exit:
    return;

  L46:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    goto anon21_Else;

  anon21_Else:
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_1637 := out_i_3;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_1669;
    assume {:nonnull} out_Tmp_1669 != 0;
    assume out_Tmp_1669 > 0;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    out_Tmp_1648 := out_i_3;
    assume {:nonnull} in_CallbackContext_1 != 0;
    assume in_CallbackContext_1 > 0;
    havoc out_Tmp_1650;
    assume {:nonnull} out_Tmp_1650 != 0;
    assume out_Tmp_1650 > 0;
    out_i_3 := out_i_3 + 1;
    goto anon21_Else_dummy;

  anon21_Else_dummy:
    call {:si_unique_call 3555} {:si_old_unique_call 1} out_i_3, out_Tmp_1637, out_Tmp_1648, out_Tmp_1650, out_Tmp_1669 := Sbp2InitializeOrb_loop_L46(out_i_3, out_Tmp_1637, out_Tmp_1648, out_Tmp_1650, in_sdv_523, in_sdv_524, out_Tmp_1669, in_CallbackContext_1);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeOrb_loop_L46(in_i_3: int, in_Tmp_1637: int, in_Tmp_1648: int, in_Tmp_1650: int, in_sdv_523: int, in_sdv_524: int, in_Tmp_1669: int, in_CallbackContext_1: int) returns (out_i_3: int, out_Tmp_1637: int, out_Tmp_1648: int, out_Tmp_1650: int, out_Tmp_1669: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2IssueInternalCommand_loop_L221(in_waitValue_3: int, in_event_1: int, in_i_4: int, in_DeviceExtension_10: int, in_vslice_dummy_var_142: int) returns (out_i_4: int, out_vslice_dummy_var_142: int)
{

  entry:
    out_i_4, out_vslice_dummy_var_142 := in_i_4, in_vslice_dummy_var_142;
    goto L221, exit;

  exit:
    return;

  L221:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon135_Else;

  anon135_Else:
    assume {:partition} 6 > out_i_4;
    call {:si_unique_call 3556} KeInitializeEvent(in_event_1, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 3557} out_vslice_dummy_var_142 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon136_Else;

  anon136_Else:
    out_i_4 := out_i_4 + 1;
    goto anon136_Else_dummy;

  anon136_Else_dummy:
    call {:si_unique_call 3558} {:si_old_unique_call 1} out_i_4, out_vslice_dummy_var_142 := Sbp2IssueInternalCommand_loop_L221(in_waitValue_3, in_event_1, out_i_4, in_DeviceExtension_10, out_vslice_dummy_var_142);
    return;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L221(in_waitValue_3: int, in_event_1: int, in_i_4: int, in_DeviceExtension_10: int, in_vslice_dummy_var_142: int) returns (out_i_4: int, out_vslice_dummy_var_142: int);
  modifies alloc;
  free ensures {:va_keep} out_vslice_dummy_var_142 == 258 || out_vslice_dummy_var_142 == 0 || out_vslice_dummy_var_142 == in_vslice_dummy_var_142;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2IssueInternalCommand_loop_L63(in_Tmp_1677: int, in_waitValue_3: int, in_cdb_2: int, in_modeMdl: int, in_Tmp_1680: int, in_Tmp_1682: int, in_Tmp_1685: int, in_Tmp_1686: int, in_Tmp_1687: int, in_Tmp_1688: int, in_Tmp_1690: int, in_Tmp_1691: int, in_Tmp_1692: int, in_irp_4: int, in_senseInfoBuffer: int, in_Tmp_1693: int, in_Tmp_1695: int, in_srb_6: int, in_Tmp_1697: int, in_event_1: int, in_Tmp_1700: int, in_Tmp_1701: int, in_i_4: int, in_Tmp_1704: int, in_Tmp_1705: int, in_irpStack_13: int, in_Tmp_1707: int, in_inquiryMdl: int, in_context_1: int, in_Tmp_1709: int, in_Tmp_1711: int, in_status_45: int, in_Tmp_1715: int, in_retryCount: int, in_Tmp_1716: int, in_DeviceExtension_10: int, in_Scsiop: int, in_vslice_dummy_var_141: int, in_vslice_dummy_var_142: int) returns (out_Tmp_1677: int, out_cdb_2: int, out_modeMdl: int, out_Tmp_1680: int, out_Tmp_1682: int, out_Tmp_1685: int, out_Tmp_1686: int, out_Tmp_1687: int, out_Tmp_1688: int, out_Tmp_1690: int, out_Tmp_1691: int, out_Tmp_1692: int, out_Tmp_1693: int, out_Tmp_1695: int, out_Tmp_1697: int, out_Tmp_1700: int, out_Tmp_1701: int, out_i_4: int, out_Tmp_1704: int, out_Tmp_1705: int, out_irpStack_13: int, out_Tmp_1707: int, out_inquiryMdl: int, out_Tmp_1709: int, out_Tmp_1711: int, out_status_45: int, out_Tmp_1715: int, out_retryCount: int, out_Tmp_1716: int, out_vslice_dummy_var_141: int, out_vslice_dummy_var_142: int)
{
  var vslice_dummy_var_1350: int;

  entry:
    out_Tmp_1677, out_cdb_2, out_modeMdl, out_Tmp_1680, out_Tmp_1682, out_Tmp_1685, out_Tmp_1686, out_Tmp_1687, out_Tmp_1688, out_Tmp_1690, out_Tmp_1691, out_Tmp_1692, out_Tmp_1693, out_Tmp_1695, out_Tmp_1697, out_Tmp_1700, out_Tmp_1701, out_i_4, out_Tmp_1704, out_Tmp_1705, out_irpStack_13, out_Tmp_1707, out_inquiryMdl, out_Tmp_1709, out_Tmp_1711, out_status_45, out_Tmp_1715, out_retryCount, out_Tmp_1716, out_vslice_dummy_var_141, out_vslice_dummy_var_142 := in_Tmp_1677, in_cdb_2, in_modeMdl, in_Tmp_1680, in_Tmp_1682, in_Tmp_1685, in_Tmp_1686, in_Tmp_1687, in_Tmp_1688, in_Tmp_1690, in_Tmp_1691, in_Tmp_1692, in_Tmp_1693, in_Tmp_1695, in_Tmp_1697, in_Tmp_1700, in_Tmp_1701, in_i_4, in_Tmp_1704, in_Tmp_1705, in_irpStack_13, in_Tmp_1707, in_inquiryMdl, in_Tmp_1709, in_Tmp_1711, in_status_45, in_Tmp_1715, in_retryCount, in_Tmp_1716, in_vslice_dummy_var_141, in_vslice_dummy_var_142;
    goto L63, exit;

  exit:
    return;

  L63:
    call {:si_unique_call 3559} out_irpStack_13 := sdv_IoGetNextIrpStackLocation(in_irp_4);
    assume {:nonnull} out_irpStack_13 != 0;
    assume out_irpStack_13 > 0;
    assume {:nonnull} out_irpStack_13 != 0;
    assume out_irpStack_13 > 0;
    assume {:nonnull} out_irpStack_13 != 0;
    assume out_irpStack_13 > 0;
    call {:si_unique_call 3560} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    out_cdb_2 := Cdb__SCSI_REQUEST_BLOCK(in_srb_6);
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} in_Scsiop != 18;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} in_Scsiop == 26;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} out_retryCount != 0;
    goto L96;

  L96:
    assume {:nonnull} in_irp_4 != 0;
    assume in_irp_4 > 0;
    goto L84;

  L84:
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_context_1 != 0;
    assume in_context_1 > 0;
    call {:si_unique_call 3564} KeInitializeEvent(Event__REQUEST_CONTEXT(in_context_1), 0, 0);
    call {:si_unique_call 3565} sdv_IoSetCompletionRoutine(in_irp_4, li2bplFunctionConstant523, in_context_1, 1, 1, 1);
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1685;
    assume {:nonnull} out_Tmp_1685 != 0;
    assume out_Tmp_1685 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    out_Tmp_1716 := in_Scsiop;
    havoc out_Tmp_1704;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1677;
    call {:si_unique_call 3563} WPP_SF_qDq(out_Tmp_1677, 55, out_Tmp_1704, in_DeviceExtension_10, out_Tmp_1716, in_irp_4);
    goto L157;

  L157:
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    havoc vslice_dummy_var_1350;
    call {:si_unique_call 3562} out_status_45 := sdv_IoCallDriver(vslice_dummy_var_1350, in_irp_4);
    assume {:nonnull} in_irp_4 != 0;
    assume in_irp_4 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    goto L171;

  L171:
    call {:si_unique_call 3561} out_vslice_dummy_var_141 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1715;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} out_Tmp_1715 != 1;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1707;
    assume {:nonnull} out_Tmp_1707 != 0;
    assume out_Tmp_1707 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1687;
    out_Tmp_1688 := in_Scsiop;
    havoc out_Tmp_1705;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1701;
    call {:si_unique_call 3569} WPP_SF_qDD(out_Tmp_1701, 57, out_Tmp_1705, in_DeviceExtension_10, out_Tmp_1688, out_Tmp_1687);
    goto L181;

  L181:
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    havoc out_Tmp_1711;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} out_Tmp_1711 == 18;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1709;
    assume {:nonnull} out_Tmp_1709 != 0;
    assume out_Tmp_1709 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    havoc out_Tmp_1691;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1700;
    call {:si_unique_call 3570} WPP_SF_q(out_Tmp_1700, 58, out_Tmp_1691, in_DeviceExtension_10);
    goto L197;

  L197:
    out_status_45 := 0;
    goto L205;

  L205:
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} out_status_45 != 0;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} 5 > out_retryCount;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1695;
    assume {:nonnull} out_Tmp_1695 != 0;
    assume out_Tmp_1695 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    havoc out_Tmp_1680;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1697;
    call {:si_unique_call 3574} WPP_SF_q(out_Tmp_1697, 60, out_Tmp_1680, in_DeviceExtension_10);
    goto L213;

  L213:
    out_i_4 := 0;
    goto L221;

  L221:
    call {:si_unique_call 3571} out_i_4, out_vslice_dummy_var_142 := Sbp2IssueInternalCommand_loop_L221(in_waitValue_3, in_event_1, out_i_4, in_DeviceExtension_10, out_vslice_dummy_var_142);
    goto L221_last;

  L221_last:
    assume {:CounterLoop 6} {:Counter "i_4"} true;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} 6 > out_i_4;
    call {:si_unique_call 3572} KeInitializeEvent(in_event_1, 0, 0);
    assume {:nonnull} in_waitValue_3 != 0;
    assume in_waitValue_3 > 0;
    call {:si_unique_call 3573} out_vslice_dummy_var_142 := KeWaitForSingleObject(0, 0, 0, 0, in_waitValue_3);
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    out_i_4 := out_i_4 + 1;
    assume false;
    return;

  anon136_Then:
    goto L206;

  L206:
    goto anon130_Else;

  anon130_Else:
    assume {:partition} 3 > out_retryCount;
    goto anon137_Then;

  anon137_Then:
    assume {:partition} out_status_45 != 0;
    goto anon137_Then_dummy;

  anon137_Then_dummy:
    call {:si_unique_call 3575} {:si_old_unique_call 1} out_Tmp_1677, out_cdb_2, out_modeMdl, out_Tmp_1680, out_Tmp_1682, out_Tmp_1685, out_Tmp_1686, out_Tmp_1687, out_Tmp_1688, out_Tmp_1690, out_Tmp_1691, out_Tmp_1692, out_Tmp_1693, out_Tmp_1695, out_Tmp_1697, out_Tmp_1700, out_Tmp_1701, out_i_4, out_Tmp_1704, out_Tmp_1705, out_irpStack_13, out_Tmp_1707, out_inquiryMdl, out_Tmp_1709, out_Tmp_1711, out_status_45, out_Tmp_1715, out_retryCount, out_Tmp_1716, out_vslice_dummy_var_141, out_vslice_dummy_var_142 := Sbp2IssueInternalCommand_loop_L63(out_Tmp_1677, in_waitValue_3, out_cdb_2, out_modeMdl, out_Tmp_1680, out_Tmp_1682, out_Tmp_1685, out_Tmp_1686, out_Tmp_1687, out_Tmp_1688, out_Tmp_1690, out_Tmp_1691, out_Tmp_1692, in_irp_4, in_senseInfoBuffer, out_Tmp_1693, out_Tmp_1695, in_srb_6, out_Tmp_1697, in_event_1, out_Tmp_1700, out_Tmp_1701, out_i_4, out_Tmp_1704, out_Tmp_1705, out_irpStack_13, out_Tmp_1707, out_inquiryMdl, in_context_1, out_Tmp_1709, out_Tmp_1711, out_status_45, out_Tmp_1715, out_retryCount, out_Tmp_1716, in_DeviceExtension_10, in_Scsiop, out_vslice_dummy_var_141, out_vslice_dummy_var_142);
    return;

  anon135_Then:
    assume {:partition} out_i_4 >= 6;
    goto L206;

  anon134_Then:
    goto L213;

  anon159_Then:
    goto L213;

  anon133_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L213;

  anon132_Then:
    assume {:partition} out_retryCount >= 5;
    goto L206;

  anon131_Then:
    goto L206;

  anon129_Then:
    assume {:partition} out_status_45 == 0;
    goto L206;

  anon128_Then:
    goto L197;

  anon158_Then:
    goto L197;

  anon127_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L197;

  anon157_Then:
    assume {:partition} out_Tmp_1711 != 18;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} in_senseInfoBuffer != 0;
    assume in_senseInfoBuffer > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    out_status_45 := -1073741808;
    out_retryCount := out_retryCount + 1;
    goto L205;

  anon138_Then:
    goto L233;

  L233:
    out_retryCount := out_retryCount + 1;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1693;
    assume {:nonnull} out_Tmp_1693 != 0;
    assume out_Tmp_1693 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    out_Tmp_1692 := in_Scsiop;
    havoc out_Tmp_1690;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1686;
    call {:si_unique_call 3568} WPP_SF_qDd(out_Tmp_1686, 59, out_Tmp_1690, in_DeviceExtension_10, out_Tmp_1692, out_retryCount);
    goto L241;

  L241:
    out_status_45 := -1073741823;
    goto L205;

  anon139_Then:
    goto L241;

  anon162_Then:
    goto L241;

  anon161_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L241;

  anon126_Then:
    goto L233;

  anon125_Then:
    goto L181;

  anon156_Then:
    goto L181;

  anon124_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L181;

  anon155_Then:
    assume {:partition} out_Tmp_1715 == 1;
    out_status_45 := 0;
    goto L206;

  anon122_Then:
    goto anon123_Then;

  anon123_Then:
    assume {:partition} out_status_45 == 259;
    goto L171;

  anon121_Then:
    goto L157;

  anon154_Then:
    goto L157;

  anon120_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L157;

  anon165_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 3567} out_modeMdl := IoAllocateMdl(0, 17, 0, 0, 0);
    goto anon117_Then;

  anon117_Then:
    assume {:partition} out_modeMdl != 0;
    goto L96;

  anon149_Then:
    assume {:partition} in_Scsiop != 26;
    goto L84;

  anon152_Then:
    assume {:partition} in_Scsiop == 18;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_srb_6 != 0;
    assume in_srb_6 > 0;
    assume {:nonnull} in_DeviceExtension_10 != 0;
    assume in_DeviceExtension_10 > 0;
    havoc out_Tmp_1682;
    assume {:nonnull} out_Tmp_1682 != 0;
    assume out_Tmp_1682 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    assume {:nonnull} out_cdb_2 != 0;
    assume out_cdb_2 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} out_retryCount != 0;
    goto L138;

  L138:
    assume {:nonnull} in_irp_4 != 0;
    assume in_irp_4 > 0;
    goto L84;

  anon153_Then:
    assume {:partition} out_retryCount == 0;
    call {:si_unique_call 3566} out_inquiryMdl := IoAllocateMdl(0, 36, 0, 0, 0);
    goto anon119_Else;

  anon119_Else:
    assume {:partition} out_inquiryMdl != 0;
    goto L138;
}



procedure {:LoopProcedure} Sbp2IssueInternalCommand_loop_L63(in_Tmp_1677: int, in_waitValue_3: int, in_cdb_2: int, in_modeMdl: int, in_Tmp_1680: int, in_Tmp_1682: int, in_Tmp_1685: int, in_Tmp_1686: int, in_Tmp_1687: int, in_Tmp_1688: int, in_Tmp_1690: int, in_Tmp_1691: int, in_Tmp_1692: int, in_irp_4: int, in_senseInfoBuffer: int, in_Tmp_1693: int, in_Tmp_1695: int, in_srb_6: int, in_Tmp_1697: int, in_event_1: int, in_Tmp_1700: int, in_Tmp_1701: int, in_i_4: int, in_Tmp_1704: int, in_Tmp_1705: int, in_irpStack_13: int, in_Tmp_1707: int, in_inquiryMdl: int, in_context_1: int, in_Tmp_1709: int, in_Tmp_1711: int, in_status_45: int, in_Tmp_1715: int, in_retryCount: int, in_Tmp_1716: int, in_DeviceExtension_10: int, in_Scsiop: int, in_vslice_dummy_var_141: int, in_vslice_dummy_var_142: int) returns (out_Tmp_1677: int, out_cdb_2: int, out_modeMdl: int, out_Tmp_1680: int, out_Tmp_1682: int, out_Tmp_1685: int, out_Tmp_1686: int, out_Tmp_1687: int, out_Tmp_1688: int, out_Tmp_1690: int, out_Tmp_1691: int, out_Tmp_1692: int, out_Tmp_1693: int, out_Tmp_1695: int, out_Tmp_1697: int, out_Tmp_1700: int, out_Tmp_1701: int, out_i_4: int, out_Tmp_1704: int, out_Tmp_1705: int, out_irpStack_13: int, out_Tmp_1707: int, out_inquiryMdl: int, out_Tmp_1709: int, out_Tmp_1711: int, out_status_45: int, out_Tmp_1715: int, out_retryCount: int, out_Tmp_1716: int, out_vslice_dummy_var_141: int, out_vslice_dummy_var_142: int);
  modifies alloc;
  free ensures {:va_keep} out_cdb_2 == in_cdb_2 || out_cdb_2 == Cdb__SCSI_REQUEST_BLOCK(in_srb_6);
  free ensures {:va_keep} out_Tmp_1688 == in_Tmp_1688 || out_Tmp_1688 == in_Scsiop;
  free ensures {:va_keep} out_Tmp_1692 == in_Tmp_1692 || out_Tmp_1692 == in_Scsiop;
  free ensures {:va_keep} out_status_45 == 0 || out_status_45 == -1073741808 || out_status_45 == -1073741823 || out_status_45 == in_status_45;
  free ensures {:va_keep} out_Tmp_1716 == in_Tmp_1716 || out_Tmp_1716 == in_Scsiop;
  free ensures {:va_keep} out_vslice_dummy_var_141 == 258 || out_vslice_dummy_var_141 == 0 || out_vslice_dummy_var_141 == in_vslice_dummy_var_141;
  free ensures {:va_keep} out_vslice_dummy_var_142 == 258 || out_vslice_dummy_var_142 == 0 || out_vslice_dummy_var_142 == in_vslice_dummy_var_142;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2PnpDeviceControl_loop_L584(in_i_6: int, in_Tmp_2167: int, in_fdoExtension_8: int, in_Tmp_2206: int, in_Tmp_2232: int, in_Tmp_2247: int, in_DeviceObject_37: int) returns (out_i_6: int, out_Tmp_2167: int, out_Tmp_2206: int, out_Tmp_2232: int, out_Tmp_2247: int)
{

  entry:
    out_i_6, out_Tmp_2167, out_Tmp_2206, out_Tmp_2232, out_Tmp_2247 := in_i_6, in_Tmp_2167, in_Tmp_2206, in_Tmp_2232, in_Tmp_2247;
    goto L584, exit;

  exit:
    return;

  L584:
    out_Tmp_2247 := out_i_6;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2167;
    assume {:nonnull} out_Tmp_2167 != 0;
    assume out_Tmp_2167 > 0;
    goto anon444_Else;

  anon444_Else:
    out_Tmp_2232 := out_i_6;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2206;
    assume {:nonnull} out_Tmp_2206 != 0;
    assume out_Tmp_2206 > 0;
    goto anon445_Then;

  anon445_Then:
    out_i_6 := out_i_6 + 1;
    goto anon445_Then_dummy;

  anon445_Then_dummy:
    havoc out_i_6;
    return;
}



procedure {:LoopProcedure} Sbp2PnpDeviceControl_loop_L584(in_i_6: int, in_Tmp_2167: int, in_fdoExtension_8: int, in_Tmp_2206: int, in_Tmp_2232: int, in_Tmp_2247: int, in_DeviceObject_37: int) returns (out_i_6: int, out_Tmp_2167: int, out_Tmp_2206: int, out_Tmp_2232: int, out_Tmp_2247: int);
  free ensures {:va_keep} out_Tmp_2232 == in_i_6 || out_Tmp_2232 == in_Tmp_2232;
  free ensures {:va_keep} out_Tmp_2247 == in_i_6 || out_Tmp_2247 == in_Tmp_2247;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2PnpDeviceControl_loop_L517(in_Tmp_2138: int, in_i_6: int, in_Tmp_2174: int, in_fdoExtension_8: int, in_DeviceObject_37: int) returns (out_Tmp_2138: int, out_i_6: int, out_Tmp_2174: int)
{

  entry:
    out_Tmp_2138, out_i_6, out_Tmp_2174 := in_Tmp_2138, in_i_6, in_Tmp_2174;
    goto L517, exit;

  exit:
    return;

  L517:
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    goto anon387_Else;

  anon387_Else:
    out_Tmp_2174 := out_i_6;
    assume {:nonnull} in_fdoExtension_8 != 0;
    assume in_fdoExtension_8 > 0;
    havoc out_Tmp_2138;
    assume {:nonnull} out_Tmp_2138 != 0;
    assume out_Tmp_2138 > 0;
    goto anon436_Then;

  anon436_Then:
    out_i_6 := out_i_6 + 1;
    goto anon436_Then_dummy;

  anon436_Then_dummy:
    havoc out_i_6;
    return;
}



procedure {:LoopProcedure} Sbp2PnpDeviceControl_loop_L517(in_Tmp_2138: int, in_i_6: int, in_Tmp_2174: int, in_fdoExtension_8: int, in_DeviceObject_37: int) returns (out_Tmp_2138: int, out_i_6: int, out_Tmp_2174: int);
  free ensures {:va_keep} out_Tmp_2174 == in_i_6 || out_Tmp_2174 == in_Tmp_2174;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2PreAllocateLists_loop_L120(in_Tmp_2365: int, in_Tmp_2366: int, in_cnt: int, in_Tmp_2367: int, in_context_3: int, in_Tmp_2368: int, in_Tmp_2370: int, in_Tmp_2371: int, in_Tmp_2372: int, in_Tmp_2373: int, in_Tmp_2375: int, in_sdv_771: int, in_Tmp_2377: int, in_Tmp_2378: int, in_Tmp_2379: int, in_Tmp_2380: int, in_Tmp_2381: int, in_packet_15: int, in_status_71: int, in_Tmp_2382: int, in_Tmp_2383: int, in_Tmp_2384: int, in_Tmp_2385: int, in_PdoExtension_24: int, in_vslice_dummy_var_305: int) returns (out_Tmp_2365: int, out_Tmp_2366: int, out_cnt: int, out_Tmp_2367: int, out_context_3: int, out_Tmp_2368: int, out_Tmp_2370: int, out_Tmp_2371: int, out_Tmp_2372: int, out_Tmp_2373: int, out_Tmp_2375: int, out_sdv_771: int, out_Tmp_2377: int, out_Tmp_2378: int, out_Tmp_2379: int, out_Tmp_2380: int, out_Tmp_2381: int, out_status_71: int, out_Tmp_2382: int, out_Tmp_2383: int, out_Tmp_2384: int, out_Tmp_2385: int, out_vslice_dummy_var_305: int)
{
  var vslice_dummy_var_1351: int;

  entry:
    out_Tmp_2365, out_Tmp_2366, out_cnt, out_Tmp_2367, out_context_3, out_Tmp_2368, out_Tmp_2370, out_Tmp_2371, out_Tmp_2372, out_Tmp_2373, out_Tmp_2375, out_sdv_771, out_Tmp_2377, out_Tmp_2378, out_Tmp_2379, out_Tmp_2380, out_Tmp_2381, out_status_71, out_Tmp_2382, out_Tmp_2383, out_Tmp_2384, out_Tmp_2385, out_vslice_dummy_var_305 := in_Tmp_2365, in_Tmp_2366, in_cnt, in_Tmp_2367, in_context_3, in_Tmp_2368, in_Tmp_2370, in_Tmp_2371, in_Tmp_2372, in_Tmp_2373, in_Tmp_2375, in_sdv_771, in_Tmp_2377, in_Tmp_2378, in_Tmp_2379, in_Tmp_2380, in_Tmp_2381, in_status_71, in_Tmp_2382, in_Tmp_2383, in_Tmp_2384, in_Tmp_2385, in_vslice_dummy_var_305;
    goto L120, exit;

  exit:
    return;

  L120:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon34_Else;

  anon34_Else:
    assume {:partition} 8 > out_cnt;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    havoc out_context_3;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    call {:si_unique_call 3578} KeInitializeDpc(TimerDpc__ASYNC_REQUEST_CONTEXT(out_context_3), li2bplFunctionConstant378, 0);
    call {:si_unique_call 3579} KeInitializeTimer(0);
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2384;
    assume {:nonnull} out_Tmp_2384 != 0;
    assume out_Tmp_2384 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2371;
    assume {:nonnull} out_Tmp_2371 != 0;
    assume out_Tmp_2371 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2377;
    assume {:nonnull} out_Tmp_2377 != 0;
    assume out_Tmp_2377 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2367;
    assume {:nonnull} out_Tmp_2367 != 0;
    assume out_Tmp_2367 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2368;
    assume {:nonnull} out_Tmp_2368 != 0;
    assume out_Tmp_2368 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2379;
    assume {:nonnull} out_Tmp_2379 != 0;
    assume out_Tmp_2379 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2372;
    assume {:nonnull} out_Tmp_2372 != 0;
    assume out_Tmp_2372 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2366;
    assume {:nonnull} out_Tmp_2366 != 0;
    assume out_Tmp_2366 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2370;
    assume {:nonnull} out_Tmp_2370 != 0;
    assume out_Tmp_2370 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2373;
    assume {:nonnull} out_Tmp_2373 != 0;
    assume out_Tmp_2373 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2380;
    assume {:nonnull} out_Tmp_2380 != 0;
    assume out_Tmp_2380 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2378;
    assume {:nonnull} out_Tmp_2378 != 0;
    assume out_Tmp_2378 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2382;
    assume {:nonnull} out_Tmp_2382 != 0;
    assume out_Tmp_2382 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2383;
    assume {:nonnull} out_Tmp_2383 != 0;
    assume out_Tmp_2383 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2375;
    assume {:nonnull} out_Tmp_2375 != 0;
    assume out_Tmp_2375 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2385;
    assume {:nonnull} out_Tmp_2385 != 0;
    assume out_Tmp_2385 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc vslice_dummy_var_1351;
    call {:si_unique_call 3580} out_status_71 := Sbp2SendRequest#1(in_PdoExtension_24, vslice_dummy_var_1351, 2);
    goto anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto anon35_Else;

  anon35_Else:
    assume {:partition} out_status_71 >= 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2381;
    assume {:nonnull} out_Tmp_2381 != 0;
    assume out_Tmp_2381 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    call {:si_unique_call 3576} out_sdv_771 := sdv_MmGetMdlVirtualAddress(0);
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc out_Tmp_2365;
    assume {:nonnull} out_Tmp_2365 != 0;
    assume out_Tmp_2365 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    assume {:nonnull} out_context_3 != 0;
    assume out_context_3 > 0;
    call {:si_unique_call 3577} out_vslice_dummy_var_305 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon35_Else_dummy;

  anon35_Else_dummy:
    call {:si_unique_call 3581} {:si_old_unique_call 1} out_Tmp_2365, out_Tmp_2366, out_cnt, out_Tmp_2367, out_context_3, out_Tmp_2368, out_Tmp_2370, out_Tmp_2371, out_Tmp_2372, out_Tmp_2373, out_Tmp_2375, out_sdv_771, out_Tmp_2377, out_Tmp_2378, out_Tmp_2379, out_Tmp_2380, out_Tmp_2381, out_status_71, out_Tmp_2382, out_Tmp_2383, out_Tmp_2384, out_Tmp_2385, out_vslice_dummy_var_305 := Sbp2PreAllocateLists_loop_L120(out_Tmp_2365, out_Tmp_2366, out_cnt, out_Tmp_2367, out_context_3, out_Tmp_2368, out_Tmp_2370, out_Tmp_2371, out_Tmp_2372, out_Tmp_2373, out_Tmp_2375, out_sdv_771, out_Tmp_2377, out_Tmp_2378, out_Tmp_2379, out_Tmp_2380, out_Tmp_2381, in_packet_15, out_status_71, out_Tmp_2382, out_Tmp_2383, out_Tmp_2384, out_Tmp_2385, in_PdoExtension_24, out_vslice_dummy_var_305);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L120(in_Tmp_2365: int, in_Tmp_2366: int, in_cnt: int, in_Tmp_2367: int, in_context_3: int, in_Tmp_2368: int, in_Tmp_2370: int, in_Tmp_2371: int, in_Tmp_2372: int, in_Tmp_2373: int, in_Tmp_2375: int, in_sdv_771: int, in_Tmp_2377: int, in_Tmp_2378: int, in_Tmp_2379: int, in_Tmp_2380: int, in_Tmp_2381: int, in_packet_15: int, in_status_71: int, in_Tmp_2382: int, in_Tmp_2383: int, in_Tmp_2384: int, in_Tmp_2385: int, in_PdoExtension_24: int, in_vslice_dummy_var_305: int) returns (out_Tmp_2365: int, out_Tmp_2366: int, out_cnt: int, out_Tmp_2367: int, out_context_3: int, out_Tmp_2368: int, out_Tmp_2370: int, out_Tmp_2371: int, out_Tmp_2372: int, out_Tmp_2373: int, out_Tmp_2375: int, out_sdv_771: int, out_Tmp_2377: int, out_Tmp_2378: int, out_Tmp_2379: int, out_Tmp_2380: int, out_Tmp_2381: int, out_status_71: int, out_Tmp_2382: int, out_Tmp_2383: int, out_Tmp_2384: int, out_Tmp_2385: int, out_vslice_dummy_var_305: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2PreAllocateLists_loop_L88(in_cnt: int, in_statusFifoElement_1: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_303: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_303: int)
{

  entry:
    out_cnt, out_statusFifoElement_1, out_boogieTmp, out_vslice_dummy_var_303 := in_cnt, in_statusFifoElement_1, in_boogieTmp, in_vslice_dummy_var_303;
    goto L88, exit;

  exit:
    return;

  L88:
    assume {:CounterLoop 15} {:Counter "cnt"} true;
    goto anon31_Else;

  anon31_Else:
    assume {:partition} 15 > out_cnt;
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    havoc out_statusFifoElement_1;
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    call {:si_unique_call 3583} out_boogieTmp := IoAllocateMdl(0, 32, 0, 0, 0);
    assume {:nonnull} out_statusFifoElement_1 != 0;
    assume out_statusFifoElement_1 > 0;
    goto anon32_Else;

  anon32_Else:
    call {:si_unique_call 3582} out_vslice_dummy_var_303 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon32_Else_dummy;

  anon32_Else_dummy:
    havoc out_cnt;
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L88(in_cnt: int, in_statusFifoElement_1: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_303: int) returns (out_cnt: int, out_statusFifoElement_1: int, out_boogieTmp: int, out_vslice_dummy_var_303: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:SIextraRecBound 8} Sbp2PreAllocateLists_loop_L41(in_cnt: int, in_sdv_766: int, in_sdv_770: int, in_Tmp_2374: int, in_packet_15: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_302: int) returns (out_cnt: int, out_sdv_766: int, out_sdv_770: int, out_Tmp_2374: int, out_boogieTmp: int, out_vslice_dummy_var_302: int)
{
  var vslice_dummy_var_1352: int;

  entry:
    out_cnt, out_sdv_766, out_sdv_770, out_Tmp_2374, out_boogieTmp, out_vslice_dummy_var_302 := in_cnt, in_sdv_766, in_sdv_770, in_Tmp_2374, in_boogieTmp, in_vslice_dummy_var_302;
    goto L41, exit;

  exit:
    return;

  L41:
    assume {:CounterLoop 8} {:Counter "cnt"} true;
    goto anon29_Else;

  anon29_Else:
    assume {:partition} 8 > out_cnt;
    call {:si_unique_call 3587} out_sdv_766 := ExAllocatePoolWithTag(512, 24, -347053485);
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon37_Then;

  anon37_Then:
    call {:si_unique_call 3586} out_sdv_770 := ExAllocatePoolWithTag(512, 344, -498507181);
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon38_Else;

  anon38_Else:
    assume {:nonnull} in_PdoExtension_24 != 0;
    assume in_PdoExtension_24 > 0;
    havoc out_Tmp_2374;
    assume {:nonnull} out_Tmp_2374 != 0;
    assume out_Tmp_2374 > 0;
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    havoc vslice_dummy_var_1352;
    call {:si_unique_call 3585} out_boogieTmp := IoAllocateIrp(vslice_dummy_var_1352, 0);
    assume {:nonnull} in_packet_15 != 0;
    assume in_packet_15 > 0;
    goto anon30_Else;

  anon30_Else:
    call {:si_unique_call 3584} out_vslice_dummy_var_302 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    out_cnt := out_cnt + 1;
    goto anon30_Else_dummy;

  anon30_Else_dummy:
    call {:si_unique_call 3588} {:si_old_unique_call 1} out_cnt, out_sdv_766, out_sdv_770, out_Tmp_2374, out_boogieTmp, out_vslice_dummy_var_302 := Sbp2PreAllocateLists_loop_L41(out_cnt, out_sdv_766, out_sdv_770, out_Tmp_2374, in_packet_15, in_PdoExtension_24, out_boogieTmp, out_vslice_dummy_var_302);
    return;
}



procedure {:LoopProcedure} Sbp2PreAllocateLists_loop_L41(in_cnt: int, in_sdv_766: int, in_sdv_770: int, in_Tmp_2374: int, in_packet_15: int, in_PdoExtension_24: int, in_boogieTmp: int, in_vslice_dummy_var_302: int) returns (out_cnt: int, out_sdv_766: int, out_sdv_770: int, out_Tmp_2374: int, out_boogieTmp: int, out_vslice_dummy_var_302: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CreateDeviceRelations_loop_L35(in_i_8: int, in_Tmp_2468: int, in_Tmp_2473: int, in_OrgLUNCount: int, in_FdoExtension_8: int) returns (out_i_8: int, out_Tmp_2468: int, out_Tmp_2473: int)
{

  entry:
    out_i_8, out_Tmp_2468, out_Tmp_2473 := in_i_8, in_Tmp_2468, in_Tmp_2473;
    goto L35, exit;

  exit:
    return;

  L35:
    goto anon48_Else;

  anon48_Else:
    assume {:partition} in_OrgLUNCount > out_i_8;
    out_Tmp_2468 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2473;
    assume {:nonnull} out_Tmp_2473 != 0;
    assume out_Tmp_2473 > 0;
    goto anon60_Else;

  anon60_Else:
    out_i_8 := out_i_8 + 1;
    goto anon60_Else_dummy;

  anon60_Else_dummy:
    havoc out_i_8;
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L35(in_i_8: int, in_Tmp_2468: int, in_Tmp_2473: int, in_OrgLUNCount: int, in_FdoExtension_8: int) returns (out_i_8: int, out_Tmp_2468: int, out_Tmp_2473: int);
  free ensures {:va_keep} out_Tmp_2468 == in_i_8 || out_Tmp_2468 == in_Tmp_2468;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CreateDeviceRelations_loop_L80(in_i_8: int, in_Tmp_2447: int, in_Tmp_2455: int, in_Tmp_2463: int, in_Tmp_2465: int, in_Tmp_2475: int, in_status_73: int, in_instanceNum: int, in_FdoExtension_8: int) returns (out_Tmp_2447: int, out_Tmp_2455: int, out_Tmp_2463: int, out_Tmp_2465: int, out_Tmp_2475: int, out_status_73: int, out_instanceNum: int)
{

  entry:
    out_Tmp_2447, out_Tmp_2455, out_Tmp_2463, out_Tmp_2465, out_Tmp_2475, out_status_73, out_instanceNum := in_Tmp_2447, in_Tmp_2455, in_Tmp_2463, in_Tmp_2465, in_Tmp_2475, in_status_73, in_instanceNum;
    goto L80, exit;

  exit:
    return;

  L80:
    out_Tmp_2455 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2465 := out_Tmp_2455;
    out_Tmp_2447 := in_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2463;
    out_Tmp_2475 := out_Tmp_2463 + out_Tmp_2447 * 268;
    call {:si_unique_call 3589} out_status_73 := Sbp2CreatePdo(in_FdoExtension_8, out_Tmp_2475, out_Tmp_2465);
    goto anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon53_Then;

  anon53_Then:
    assume {:partition} out_status_73 == -1073741771;
    goto anon53_Then_dummy;

  anon53_Then_dummy:
    call {:si_unique_call 3590} {:si_old_unique_call 1} out_Tmp_2447, out_Tmp_2455, out_Tmp_2463, out_Tmp_2465, out_Tmp_2475, out_status_73, out_instanceNum := Sbp2CreateDeviceRelations_loop_L80(in_i_8, out_Tmp_2447, out_Tmp_2455, out_Tmp_2463, out_Tmp_2465, out_Tmp_2475, out_status_73, out_instanceNum, in_FdoExtension_8);
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L80(in_i_8: int, in_Tmp_2447: int, in_Tmp_2455: int, in_Tmp_2463: int, in_Tmp_2465: int, in_Tmp_2475: int, in_status_73: int, in_instanceNum: int, in_FdoExtension_8: int) returns (out_Tmp_2447: int, out_Tmp_2455: int, out_Tmp_2463: int, out_Tmp_2465: int, out_Tmp_2475: int, out_status_73: int, out_instanceNum: int);
  modifies alloc, Mem_T.LogStart__DEBUG_LOG, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} out_Tmp_2447 == in_Tmp_2447 || out_Tmp_2447 == in_i_8;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CreateDeviceRelations_loop_L58(in_i_8: int, in_Tmp_2447: int, in_Tmp_2448: int, in_Tmp_2449: int, in_Tmp_2450: int, in_Tmp_2451: int, in_subStatus: int, in_Tmp_2453: int, in_pdoExtension_21: int, in_Tmp_2455: int, in_Tmp_2456: int, in_Tmp_2458: int, in_Tmp_2459: int, in_Tmp_2460: int, in_Tmp_2461: int, in_Tmp_2463: int, in_Tmp_2464: int, in_Tmp_2465: int, in_Tmp_2467: int, in_Tmp_2469: int, in_Tmp_2470: int, in_Tmp_2471: int, in_Tmp_2475: int, in_Tmp_2476: int, in_Tmp_2477: int, in_Tmp_2478: int, in_status_73: int, in_instanceNum: int, in_Tmp_2479: int, in_Tmp_2481: int, in_Tmp_2482: int, in_Tmp_2483: int, in_FdoExtension_8: int, in_DeviceRelations: int, in_vslice_dummy_var_313: int, in_vslice_dummy_var_314: int) returns (out_i_8: int, out_Tmp_2447: int, out_Tmp_2448: int, out_Tmp_2449: int, out_Tmp_2450: int, out_Tmp_2451: int, out_subStatus: int, out_Tmp_2453: int, out_pdoExtension_21: int, out_Tmp_2455: int, out_Tmp_2456: int, out_Tmp_2458: int, out_Tmp_2459: int, out_Tmp_2460: int, out_Tmp_2461: int, out_Tmp_2463: int, out_Tmp_2464: int, out_Tmp_2465: int, out_Tmp_2467: int, out_Tmp_2469: int, out_Tmp_2470: int, out_Tmp_2471: int, out_Tmp_2475: int, out_Tmp_2476: int, out_Tmp_2477: int, out_Tmp_2478: int, out_status_73: int, out_instanceNum: int, out_Tmp_2479: int, out_Tmp_2481: int, out_Tmp_2482: int, out_Tmp_2483: int, out_vslice_dummy_var_313: int, out_vslice_dummy_var_314: int)
{

  entry:
    out_i_8, out_Tmp_2447, out_Tmp_2448, out_Tmp_2449, out_Tmp_2450, out_Tmp_2451, out_subStatus, out_Tmp_2453, out_pdoExtension_21, out_Tmp_2455, out_Tmp_2456, out_Tmp_2458, out_Tmp_2459, out_Tmp_2460, out_Tmp_2461, out_Tmp_2463, out_Tmp_2464, out_Tmp_2465, out_Tmp_2467, out_Tmp_2469, out_Tmp_2470, out_Tmp_2471, out_Tmp_2475, out_Tmp_2476, out_Tmp_2477, out_Tmp_2478, out_status_73, out_instanceNum, out_Tmp_2479, out_Tmp_2481, out_Tmp_2482, out_Tmp_2483, out_vslice_dummy_var_313, out_vslice_dummy_var_314 := in_i_8, in_Tmp_2447, in_Tmp_2448, in_Tmp_2449, in_Tmp_2450, in_Tmp_2451, in_subStatus, in_Tmp_2453, in_pdoExtension_21, in_Tmp_2455, in_Tmp_2456, in_Tmp_2458, in_Tmp_2459, in_Tmp_2460, in_Tmp_2461, in_Tmp_2463, in_Tmp_2464, in_Tmp_2465, in_Tmp_2467, in_Tmp_2469, in_Tmp_2470, in_Tmp_2471, in_Tmp_2475, in_Tmp_2476, in_Tmp_2477, in_Tmp_2478, in_status_73, in_instanceNum, in_Tmp_2479, in_Tmp_2481, in_Tmp_2482, in_Tmp_2483, in_vslice_dummy_var_313, in_vslice_dummy_var_314;
    goto L58, exit;

  exit:
    return;

  L58:
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    goto anon51_Else;

  anon51_Else:
    out_Tmp_2482 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2467;
    assume {:nonnull} out_Tmp_2467 != 0;
    assume out_Tmp_2467 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    out_subStatus := 0;
    out_Tmp_2451 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2459;
    assume {:nonnull} out_Tmp_2459 != 0;
    assume out_Tmp_2459 > 0;
    havoc out_Tmp_2458;
    assume {:nonnull} out_Tmp_2458 != 0;
    assume out_Tmp_2458 > 0;
    out_pdoExtension_21 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(out_Tmp_2458)];
    assume {:nonnull} out_pdoExtension_21 != 0;
    assume out_pdoExtension_21 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    out_Tmp_2469 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2456 := out_Tmp_2469;
    out_Tmp_2477 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2476;
    out_Tmp_2461 := out_Tmp_2476 + out_Tmp_2477 * 268;
    call {:si_unique_call 3595} out_subStatus := Sbp2ReInitializePdo(in_FdoExtension_8, out_Tmp_2461, out_Tmp_2456);
    goto anon64_Else;

  anon64_Else:
    assume {:partition} yogi_error != 1;
    goto L66;

  L66:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} out_subStatus >= 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2483;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2478;
    out_Tmp_2450 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2471;
    assume {:nonnull} out_Tmp_2471 != 0;
    assume out_Tmp_2471 > 0;
    assume {:nonnull} out_Tmp_2478 != 0;
    assume out_Tmp_2478 > 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_2481 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2448;
    assume {:nonnull} out_Tmp_2448 != 0;
    assume out_Tmp_2448 > 0;
    call {:si_unique_call 3591} out_vslice_dummy_var_313 := sdv_ObReferenceObject(0);
    goto L73;

  L73:
    out_i_8 := out_i_8 + 1;
    goto L73_dummy;

  L73_dummy:
    call {:si_unique_call 3596} {:si_old_unique_call 1} out_i_8, out_Tmp_2447, out_Tmp_2448, out_Tmp_2449, out_Tmp_2450, out_Tmp_2451, out_subStatus, out_Tmp_2453, out_pdoExtension_21, out_Tmp_2455, out_Tmp_2456, out_Tmp_2458, out_Tmp_2459, out_Tmp_2460, out_Tmp_2461, out_Tmp_2463, out_Tmp_2464, out_Tmp_2465, out_Tmp_2467, out_Tmp_2469, out_Tmp_2470, out_Tmp_2471, out_Tmp_2475, out_Tmp_2476, out_Tmp_2477, out_Tmp_2478, out_status_73, out_instanceNum, out_Tmp_2479, out_Tmp_2481, out_Tmp_2482, out_Tmp_2483, out_vslice_dummy_var_313, out_vslice_dummy_var_314 := Sbp2CreateDeviceRelations_loop_L58(out_i_8, out_Tmp_2447, out_Tmp_2448, out_Tmp_2449, out_Tmp_2450, out_Tmp_2451, out_subStatus, out_Tmp_2453, out_pdoExtension_21, out_Tmp_2455, out_Tmp_2456, out_Tmp_2458, out_Tmp_2459, out_Tmp_2460, out_Tmp_2461, out_Tmp_2463, out_Tmp_2464, out_Tmp_2465, out_Tmp_2467, out_Tmp_2469, out_Tmp_2470, out_Tmp_2471, out_Tmp_2475, out_Tmp_2476, out_Tmp_2477, out_Tmp_2478, out_status_73, out_instanceNum, out_Tmp_2479, out_Tmp_2481, out_Tmp_2482, out_Tmp_2483, in_FdoExtension_8, in_DeviceRelations, out_vslice_dummy_var_313, out_vslice_dummy_var_314);
    return;

  anon52_Then:
    assume {:partition} 0 > out_subStatus;
    goto L73;

  anon63_Then:
    goto L66;

  anon62_Then:
    out_instanceNum := 0;
    goto L80;

  L80:
    call {:si_unique_call 3593} out_Tmp_2447, out_Tmp_2455, out_Tmp_2463, out_Tmp_2465, out_Tmp_2475, out_status_73, out_instanceNum := Sbp2CreateDeviceRelations_loop_L80(out_i_8, out_Tmp_2447, out_Tmp_2455, out_Tmp_2463, out_Tmp_2465, out_Tmp_2475, out_status_73, out_instanceNum, in_FdoExtension_8);
    goto L80_last;

  L80_last:
    out_Tmp_2455 := out_instanceNum;
    out_instanceNum := out_instanceNum + 1;
    out_Tmp_2465 := out_Tmp_2455;
    out_Tmp_2447 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2463;
    out_Tmp_2475 := out_Tmp_2463 + out_Tmp_2447 * 268;
    call {:si_unique_call 3594} out_status_73 := Sbp2CreatePdo(in_FdoExtension_8, out_Tmp_2475, out_Tmp_2465);
    goto anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} out_status_73 != -1073741771;
    goto anon54_Then;

  anon54_Then:
    assume {:partition} 0 <= out_status_73;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2464;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    havoc out_Tmp_2453;
    out_Tmp_2460 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2479;
    assume {:nonnull} out_Tmp_2453 != 0;
    assume out_Tmp_2453 > 0;
    assume {:nonnull} out_Tmp_2479 != 0;
    assume out_Tmp_2479 > 0;
    assume {:nonnull} in_DeviceRelations != 0;
    assume in_DeviceRelations > 0;
    out_Tmp_2449 := out_i_8;
    assume {:nonnull} in_FdoExtension_8 != 0;
    assume in_FdoExtension_8 > 0;
    havoc out_Tmp_2470;
    assume {:nonnull} out_Tmp_2470 != 0;
    assume out_Tmp_2470 > 0;
    call {:si_unique_call 3592} out_vslice_dummy_var_314 := sdv_ObReferenceObject(0);
    goto L73;

  anon53_Then:
    assume {:partition} out_status_73 == -1073741771;
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2CreateDeviceRelations_loop_L58(in_i_8: int, in_Tmp_2447: int, in_Tmp_2448: int, in_Tmp_2449: int, in_Tmp_2450: int, in_Tmp_2451: int, in_subStatus: int, in_Tmp_2453: int, in_pdoExtension_21: int, in_Tmp_2455: int, in_Tmp_2456: int, in_Tmp_2458: int, in_Tmp_2459: int, in_Tmp_2460: int, in_Tmp_2461: int, in_Tmp_2463: int, in_Tmp_2464: int, in_Tmp_2465: int, in_Tmp_2467: int, in_Tmp_2469: int, in_Tmp_2470: int, in_Tmp_2471: int, in_Tmp_2475: int, in_Tmp_2476: int, in_Tmp_2477: int, in_Tmp_2478: int, in_status_73: int, in_instanceNum: int, in_Tmp_2479: int, in_Tmp_2481: int, in_Tmp_2482: int, in_Tmp_2483: int, in_FdoExtension_8: int, in_DeviceRelations: int, in_vslice_dummy_var_313: int, in_vslice_dummy_var_314: int) returns (out_i_8: int, out_Tmp_2447: int, out_Tmp_2448: int, out_Tmp_2449: int, out_Tmp_2450: int, out_Tmp_2451: int, out_subStatus: int, out_Tmp_2453: int, out_pdoExtension_21: int, out_Tmp_2455: int, out_Tmp_2456: int, out_Tmp_2458: int, out_Tmp_2459: int, out_Tmp_2460: int, out_Tmp_2461: int, out_Tmp_2463: int, out_Tmp_2464: int, out_Tmp_2465: int, out_Tmp_2467: int, out_Tmp_2469: int, out_Tmp_2470: int, out_Tmp_2471: int, out_Tmp_2475: int, out_Tmp_2476: int, out_Tmp_2477: int, out_Tmp_2478: int, out_status_73: int, out_instanceNum: int, out_Tmp_2479: int, out_Tmp_2481: int, out_Tmp_2482: int, out_Tmp_2483: int, out_vslice_dummy_var_313: int, out_vslice_dummy_var_314: int);
  modifies alloc, Mem_T.LogStart__DEBUG_LOG, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2SendRequest#0_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_66: int)
{

  entry:
    goto L142, exit;

  exit:
    return;

  L142:
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon86_Then;

  anon86_Then:
    goto anon86_Then_dummy;

  anon86_Then_dummy:
    call {:si_unique_call 3597} {:si_old_unique_call 1} Sbp2SendRequest#0_loop_L142(in_tick, in_s_p_e_c_i_a_l_66);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_66: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2SendRequest#0_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1302: int, in_s_p_e_c_i_a_l_66: int, in_delay: int) returns (out_Tmp_1302: int, out_s_p_e_c_i_a_l_66: int)
{

  entry:
    out_Tmp_1302, out_s_p_e_c_i_a_l_66 := in_Tmp_1302, in_s_p_e_c_i_a_l_66;
    goto L132, exit;

  exit:
    return;

  L132:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon72_Else;

  anon72_Else:
    out_Tmp_1302 := KeTickCount;
    assume {:nonnull} out_Tmp_1302 != 0;
    assume out_Tmp_1302 > 0;
    havoc out_s_p_e_c_i_a_l_66;
    goto L142;

  L142:
    call {:si_unique_call 3598} Sbp2SendRequest#0_loop_L142(in_tick, out_s_p_e_c_i_a_l_66);
    goto L142_last;

  L142_last:
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon73_Then;

  anon73_Then:
    goto anon73_Then_dummy;

  anon73_Then_dummy:
    call {:si_unique_call 3599} {:si_old_unique_call 1} out_Tmp_1302, out_s_p_e_c_i_a_l_66 := Sbp2SendRequest#0_loop_L132(in_tick, in_pComplete, out_Tmp_1302, out_s_p_e_c_i_a_l_66, in_delay);
    return;

  anon86_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1302: int, in_s_p_e_c_i_a_l_66: int, in_delay: int) returns (out_Tmp_1302: int, out_s_p_e_c_i_a_l_66: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_65: int, in_delay: int)
{

  entry:
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    goto anon84_Then;

  anon84_Then:
    goto anon84_Then_dummy;

  anon84_Then_dummy:
    call {:si_unique_call 3600} {:si_old_unique_call 1} Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_65, in_delay);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#0_loop_L121(in_s_p_e_c_i_a_l_65: int, in_delay: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2SendRequest#1_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_66: int)
{

  entry:
    goto L142, exit;

  exit:
    return;

  L142:
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_66 != 0;
    assume in_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon86_Then;

  anon86_Then:
    goto anon86_Then_dummy;

  anon86_Then_dummy:
    call {:si_unique_call 3601} {:si_old_unique_call 1} Sbp2SendRequest#1_loop_L142(in_tick, in_s_p_e_c_i_a_l_66);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L142(in_tick: int, in_s_p_e_c_i_a_l_66: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2SendRequest#1_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1302: int, in_s_p_e_c_i_a_l_66: int, in_delay: int) returns (out_Tmp_1302: int, out_s_p_e_c_i_a_l_66: int)
{

  entry:
    out_Tmp_1302, out_s_p_e_c_i_a_l_66 := in_Tmp_1302, in_s_p_e_c_i_a_l_66;
    goto L132, exit;

  exit:
    return;

  L132:
    assume {:nonnull} in_pComplete != 0;
    assume in_pComplete > 0;
    goto anon72_Else;

  anon72_Else:
    out_Tmp_1302 := KeTickCount;
    assume {:nonnull} out_Tmp_1302 != 0;
    assume out_Tmp_1302 > 0;
    havoc out_s_p_e_c_i_a_l_66;
    goto L142;

  L142:
    call {:si_unique_call 3602} Sbp2SendRequest#1_loop_L142(in_tick, out_s_p_e_c_i_a_l_66);
    goto L142_last;

  L142_last:
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_66 != 0;
    assume out_s_p_e_c_i_a_l_66 > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_tick != 0;
    assume in_tick > 0;
    goto anon73_Then;

  anon73_Then:
    goto anon73_Then_dummy;

  anon73_Then_dummy:
    call {:si_unique_call 3603} {:si_old_unique_call 1} out_Tmp_1302, out_s_p_e_c_i_a_l_66 := Sbp2SendRequest#1_loop_L132(in_tick, in_pComplete, out_Tmp_1302, out_s_p_e_c_i_a_l_66, in_delay);
    return;

  anon86_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L132(in_tick: int, in_pComplete: int, in_Tmp_1302: int, in_s_p_e_c_i_a_l_66: int, in_delay: int) returns (out_Tmp_1302: int, out_s_p_e_c_i_a_l_66: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_65: int, in_delay: int)
{

  entry:
    goto L121, exit;

  exit:
    return;

  L121:
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    assume {:nonnull} in_delay != 0;
    assume in_delay > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_65 != 0;
    assume in_s_p_e_c_i_a_l_65 > 0;
    goto anon84_Then;

  anon84_Then:
    goto anon84_Then_dummy;

  anon84_Then_dummy:
    call {:si_unique_call 3604} {:si_old_unique_call 1} Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_65, in_delay);
    return;
}



procedure {:LoopProcedure} Sbp2SendRequest#1_loop_L121(in_s_p_e_c_i_a_l_65: int, in_delay: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2Reset#0_loop_L26(in_Tmp_1915: int, in_Tmp_1916: int, in_Tmp_1917: int, in_transTimeout: int, in_retry: int, in_pdoExtension_16: int, in_Tmp_1918: int, in_Tmp_1919: int, in_Tmp_1920: int, in_Tmp_1921: int, in_Tmp_1922: int, in_sdv_595: int, in_Tmp_1924: int, in_Tmp_1925: int, in_transType: int, in_sdv_597: int, in_Tmp_1926: int, in_sdv_599: int, in_Tmp_1927: int, in_Tmp_1928: int, in_Tmp_1929: int, in_oldIrql_5: int, in_Tmp_1930: int, in_Tmp_1931: int, in_fdoExtension_5: int, in_sdv_601: int, in_Tmp_1932: int, in_Tmp_1933: int, in_Tmp_1934: int, in_Tmp_1935: int, in_Tmp_1936: int, in_Tmp_1937: int, in_Tmp_1938: int, in_status_58: int, in_Tmp_1939: int, in_Tmp_1940: int, in_Tmp_1941: int, in_Tmp_1942: int, in_ResetLevel: int, in_vslice_dummy_var_344: int, in_vslice_dummy_var_346: int, in_vslice_dummy_var_347: int) returns (out_Tmp_1915: int, out_Tmp_1916: int, out_Tmp_1917: int, out_transTimeout: int, out_retry: int, out_Tmp_1918: int, out_Tmp_1919: int, out_Tmp_1920: int, out_Tmp_1921: int, out_Tmp_1922: int, out_Tmp_1924: int, out_Tmp_1925: int, out_transType: int, out_sdv_597: int, out_Tmp_1926: int, out_Tmp_1927: int, out_Tmp_1928: int, out_Tmp_1929: int, out_oldIrql_5: int, out_Tmp_1930: int, out_Tmp_1931: int, out_Tmp_1932: int, out_Tmp_1933: int, out_Tmp_1934: int, out_Tmp_1935: int, out_Tmp_1936: int, out_Tmp_1937: int, out_Tmp_1938: int, out_status_58: int, out_Tmp_1939: int, out_Tmp_1940: int, out_Tmp_1941: int, out_Tmp_1942: int, out_vslice_dummy_var_344: int, out_vslice_dummy_var_346: int, out_vslice_dummy_var_347: int)
{
  var vslice_dummy_var_1353: int;

  entry:
    out_Tmp_1915, out_Tmp_1916, out_Tmp_1917, out_transTimeout, out_retry, out_Tmp_1918, out_Tmp_1919, out_Tmp_1920, out_Tmp_1921, out_Tmp_1922, out_Tmp_1924, out_Tmp_1925, out_transType, out_sdv_597, out_Tmp_1926, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_oldIrql_5, out_Tmp_1930, out_Tmp_1931, out_Tmp_1932, out_Tmp_1933, out_Tmp_1934, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_Tmp_1938, out_status_58, out_Tmp_1939, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, out_vslice_dummy_var_344, out_vslice_dummy_var_346, out_vslice_dummy_var_347 := in_Tmp_1915, in_Tmp_1916, in_Tmp_1917, in_transTimeout, in_retry, in_Tmp_1918, in_Tmp_1919, in_Tmp_1920, in_Tmp_1921, in_Tmp_1922, in_Tmp_1924, in_Tmp_1925, in_transType, in_sdv_597, in_Tmp_1926, in_Tmp_1927, in_Tmp_1928, in_Tmp_1929, in_oldIrql_5, in_Tmp_1930, in_Tmp_1931, in_Tmp_1932, in_Tmp_1933, in_Tmp_1934, in_Tmp_1935, in_Tmp_1936, in_Tmp_1937, in_Tmp_1938, in_status_58, in_Tmp_1939, in_Tmp_1940, in_Tmp_1941, in_Tmp_1942, in_vslice_dummy_var_344, in_vslice_dummy_var_346, in_vslice_dummy_var_347;
    goto L26, exit;

  exit:
    return;

  L26:
    goto anon80_Then;

  anon80_Then:
    assume {:partition} out_retry > 0;
    out_retry := out_retry - 1;
    call {:si_unique_call 3611} Sbp2AddLog(in_pdoExtension_16, 1, -227314626, in_ResetLevel, 0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} in_ResetLevel != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} in_ResetLevel != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} in_ResetLevel != 2;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} in_ResetLevel != 3;
    goto L187;

  L187:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1925;
    assume {:nonnull} out_Tmp_1925 != 0;
    assume out_Tmp_1925 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc out_Tmp_1930;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1938;
    call {:si_unique_call 3629} WPP_SF_q(out_Tmp_1938, 64, out_Tmp_1930, in_pdoExtension_16);
    goto L188;

  L188:
    call {:si_unique_call 3627} out_Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1934 != 0;
    assume out_Tmp_1934 > 0;
    call {:si_unique_call 3628} sdv_KeAcquireSpinLock(0, out_Tmp_1934);
    assume {:nonnull} out_Tmp_1934 != 0;
    assume out_Tmp_1934 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_fdoExtension_5 != 0;
    assume in_fdoExtension_5 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    goto L201;

  L201:
    call {:si_unique_call 3625} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3626} CleanupOrbList#0(in_pdoExtension_16, -1073741248);
    goto anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3609} out_status_58 := Sbp2QueueManagementWorkItem(in_pdoExtension_16, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 3608} Sbp2AddLog(in_pdoExtension_16, 1, -227314639, out_status_58, out_retry);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} out_status_58 == -1072562032;
    goto L98;

  L98:
    goto anon86_Else;

  anon86_Else:
    assume {:partition} out_retry != 0;
    call {:si_unique_call 3606} out_vslice_dummy_var_344 := KeCancelTimer(0);
    call {:si_unique_call 3607} out_status_58 := Sbp2UpdateNodeInformation#0(in_pdoExtension_16);
    goto anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1941;
    assume {:nonnull} out_Tmp_1941 != 0;
    assume out_Tmp_1941 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc out_Tmp_1935;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1929;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc vslice_dummy_var_1353;
    call {:si_unique_call 3605} WPP_SF_qDD(out_Tmp_1929, 65, out_Tmp_1935, in_pdoExtension_16, out_status_58, vslice_dummy_var_1353);
    goto anon89_Else_dummy;

  anon89_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 3630} {:si_old_unique_call 1} out_Tmp_1915, out_Tmp_1916, out_Tmp_1917, out_transTimeout, out_retry, out_Tmp_1918, out_Tmp_1919, out_Tmp_1920, out_Tmp_1921, out_Tmp_1922, out_Tmp_1924, out_Tmp_1925, out_transType, out_sdv_597, out_Tmp_1926, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_oldIrql_5, out_Tmp_1930, out_Tmp_1931, out_Tmp_1932, out_Tmp_1933, out_Tmp_1934, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_Tmp_1938, out_status_58, out_Tmp_1939, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, out_vslice_dummy_var_344, out_vslice_dummy_var_346, out_vslice_dummy_var_347 := Sbp2Reset#0_loop_L26(out_Tmp_1915, out_Tmp_1916, out_Tmp_1917, out_transTimeout, out_retry, in_pdoExtension_16, out_Tmp_1918, out_Tmp_1919, out_Tmp_1920, out_Tmp_1921, out_Tmp_1922, in_sdv_595, out_Tmp_1924, out_Tmp_1925, out_transType, out_sdv_597, out_Tmp_1926, in_sdv_599, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_oldIrql_5, out_Tmp_1930, out_Tmp_1931, in_fdoExtension_5, in_sdv_601, out_Tmp_1932, out_Tmp_1933, out_Tmp_1934, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_Tmp_1938, out_status_58, out_Tmp_1939, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, in_ResetLevel, out_vslice_dummy_var_344, out_vslice_dummy_var_346, out_vslice_dummy_var_347);
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    goto L_BAF_0;

  anon103_Then:
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    goto L_BAF_0;

  anon88_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon88_Then_dummy;

  anon88_Then_dummy:
    goto L_BAF_0;

  anon84_Then:
    assume {:partition} out_status_58 != -1072562032;
    goto anon85_Then;

  anon85_Then:
    assume {:partition} out_status_58 == -1073741248;
    goto L98;

  anon116_Then:
    goto L201;

  anon97_Then:
    goto L188;

  anon115_Then:
    goto L188;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon98_Then:
    assume {:partition} in_ResetLevel == 3;
    goto L187;

  anon99_Then:
    assume {:partition} in_ResetLevel == 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1926;
    assume {:nonnull} out_Tmp_1926 != 0;
    assume out_Tmp_1926 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc out_Tmp_1933;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1927;
    call {:si_unique_call 3624} WPP_SF_q(out_Tmp_1927, 63, out_Tmp_1933, in_pdoExtension_16);
    goto L46;

  L46:
    out_transType := 12;
    out_transTimeout := 2;
    out_retry := 0;
    call {:si_unique_call 3619} out_Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1934 != 0;
    assume out_Tmp_1934 > 0;
    call {:si_unique_call 3620} sdv_KeAcquireSpinLock(0, out_Tmp_1934);
    assume {:nonnull} out_Tmp_1934 != 0;
    assume out_Tmp_1934 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1920;
    assume {:nonnull} out_Tmp_1920 != 0;
    assume out_Tmp_1920 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1919;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1942;
    assume {:nonnull} out_Tmp_1919 != 0;
    assume out_Tmp_1919 > 0;
    assume {:nonnull} out_Tmp_1942 != 0;
    assume out_Tmp_1942 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1939;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1918;
    assume {:nonnull} out_Tmp_1918 != 0;
    assume out_Tmp_1918 > 0;
    assume {:nonnull} out_Tmp_1939 != 0;
    assume out_Tmp_1939 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1916;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1932;
    assume {:nonnull} out_Tmp_1916 != 0;
    assume out_Tmp_1916 > 0;
    assume {:nonnull} out_Tmp_1932 != 0;
    assume out_Tmp_1932 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1937;
    assume {:nonnull} out_Tmp_1937 != 0;
    assume out_Tmp_1937 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1937 != 0;
    assume out_Tmp_1937 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1937 != 0;
    assume out_Tmp_1937 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1937 != 0;
    assume out_Tmp_1937 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1915;
    assume {:nonnull} out_Tmp_1915 != 0;
    assume out_Tmp_1915 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1940;
    assume {:nonnull} out_Tmp_1940 != 0;
    assume out_Tmp_1940 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1928;
    assume {:nonnull} out_Tmp_1928 != 0;
    assume out_Tmp_1928 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3621} Sbp2SetManagementTimer(in_pdoExtension_16, out_transTimeout);
    call {:si_unique_call 3622} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3623} CleanupOrbList#0(in_pdoExtension_16, -1073741248);
    goto anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3618} out_status_58 := Sbp2AccessRegister#0(in_pdoExtension_16, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(in_pdoExtension_16)), 1024);
    goto anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon83_Then:
    goto L46;

  anon112_Then:
    goto L46;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon100_Then:
    assume {:partition} in_ResetLevel == 1;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1921;
    assume {:nonnull} out_Tmp_1921 != 0;
    assume out_Tmp_1921 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    havoc out_Tmp_1924;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1936;
    call {:si_unique_call 3615} WPP_SF_q(out_Tmp_1936, 62, out_Tmp_1924, in_pdoExtension_16);
    goto L149;

  L149:
    call {:si_unique_call 3614} out_sdv_597 := sdv_KeGetCurrentIrql();
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} 2 > out_sdv_597;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3617} out_vslice_dummy_var_346 := Sbp2AccessRegister#0(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 320);
    goto anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3616} out_status_58 := Sbp2AccessRegister#0(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 258);
    goto anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon93_Then:
    assume {:partition} out_sdv_597 >= 2;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3613} out_vslice_dummy_var_347 := Sbp2AccessRegister#0(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 1088);
    goto anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3612} out_status_58 := Sbp2AccessRegister#0(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 1026);
    goto anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon92_Then:
    goto L149;

  anon107_Then:
    goto L149;

  anon91_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon81_Then:
    assume {:partition} in_ResetLevel == 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1931;
    assume {:nonnull} out_Tmp_1931 != 0;
    assume out_Tmp_1931 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc out_Tmp_1917;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1922;
    call {:si_unique_call 3610} WPP_SF_q(out_Tmp_1922, 61, out_Tmp_1917, in_pdoExtension_16);
    goto L178;

  L178:
    out_retry := 0;
    goto L92;

  anon95_Then:
    goto L178;

  anon101_Then:
    goto L178;

  anon94_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:LoopProcedure} Sbp2Reset#0_loop_L26(in_Tmp_1915: int, in_Tmp_1916: int, in_Tmp_1917: int, in_transTimeout: int, in_retry: int, in_pdoExtension_16: int, in_Tmp_1918: int, in_Tmp_1919: int, in_Tmp_1920: int, in_Tmp_1921: int, in_Tmp_1922: int, in_sdv_595: int, in_Tmp_1924: int, in_Tmp_1925: int, in_transType: int, in_sdv_597: int, in_Tmp_1926: int, in_sdv_599: int, in_Tmp_1927: int, in_Tmp_1928: int, in_Tmp_1929: int, in_oldIrql_5: int, in_Tmp_1930: int, in_Tmp_1931: int, in_fdoExtension_5: int, in_sdv_601: int, in_Tmp_1932: int, in_Tmp_1933: int, in_Tmp_1934: int, in_Tmp_1935: int, in_Tmp_1936: int, in_Tmp_1937: int, in_Tmp_1938: int, in_status_58: int, in_Tmp_1939: int, in_Tmp_1940: int, in_Tmp_1941: int, in_Tmp_1942: int, in_ResetLevel: int, in_vslice_dummy_var_344: int, in_vslice_dummy_var_346: int, in_vslice_dummy_var_347: int) returns (out_Tmp_1915: int, out_Tmp_1916: int, out_Tmp_1917: int, out_transTimeout: int, out_retry: int, out_Tmp_1918: int, out_Tmp_1919: int, out_Tmp_1920: int, out_Tmp_1921: int, out_Tmp_1922: int, out_Tmp_1924: int, out_Tmp_1925: int, out_transType: int, out_sdv_597: int, out_Tmp_1926: int, out_Tmp_1927: int, out_Tmp_1928: int, out_Tmp_1929: int, out_oldIrql_5: int, out_Tmp_1930: int, out_Tmp_1931: int, out_Tmp_1932: int, out_Tmp_1933: int, out_Tmp_1934: int, out_Tmp_1935: int, out_Tmp_1936: int, out_Tmp_1937: int, out_Tmp_1938: int, out_status_58: int, out_Tmp_1939: int, out_Tmp_1940: int, out_Tmp_1941: int, out_Tmp_1942: int, out_vslice_dummy_var_344: int, out_vslice_dummy_var_346: int, out_vslice_dummy_var_347: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == old(completion_called);
  free ensures {:va_keep} out_transTimeout == 2 || out_transTimeout == in_transTimeout;
  free ensures {:va_keep} out_transType == 12 || out_transType == in_transType;
  free ensures {:va_keep} out_vslice_dummy_var_344 == 1 || out_vslice_dummy_var_344 == 0 || out_vslice_dummy_var_344 == in_vslice_dummy_var_344;
  free ensures {:va_keep} out_vslice_dummy_var_346 == -1073741632 || out_vslice_dummy_var_346 == -1073741670 || out_vslice_dummy_var_346 == in_vslice_dummy_var_346;
  free ensures {:va_keep} out_vslice_dummy_var_347 == -1073741632 || out_vslice_dummy_var_347 == -1073741670 || out_vslice_dummy_var_347 == in_vslice_dummy_var_347;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2Reset#1_loop_L26(in_Tmp_1915: int, in_Tmp_1916: int, in_Tmp_1917: int, in_transTimeout: int, in_retry: int, in_pdoExtension_16: int, in_Tmp_1918: int, in_Tmp_1919: int, in_Tmp_1920: int, in_Tmp_1921: int, in_Tmp_1922: int, in_sdv_595: int, in_Tmp_1924: int, in_Tmp_1925: int, in_transType: int, in_sdv_597: int, in_Tmp_1926: int, in_sdv_599: int, in_Tmp_1927: int, in_Tmp_1928: int, in_Tmp_1929: int, in_oldIrql_5: int, in_Tmp_1930: int, in_Tmp_1931: int, in_fdoExtension_5: int, in_sdv_601: int, in_Tmp_1932: int, in_Tmp_1933: int, in_Tmp_1934: int, in_Tmp_1935: int, in_Tmp_1936: int, in_Tmp_1937: int, in_Tmp_1938: int, in_status_58: int, in_Tmp_1939: int, in_Tmp_1940: int, in_Tmp_1941: int, in_Tmp_1942: int, in_ResetLevel: int, in_vslice_dummy_var_348: int, in_vslice_dummy_var_350: int, in_vslice_dummy_var_351: int) returns (out_Tmp_1915: int, out_Tmp_1916: int, out_Tmp_1917: int, out_transTimeout: int, out_retry: int, out_Tmp_1918: int, out_Tmp_1919: int, out_Tmp_1920: int, out_Tmp_1921: int, out_Tmp_1922: int, out_Tmp_1924: int, out_Tmp_1925: int, out_transType: int, out_sdv_597: int, out_Tmp_1926: int, out_Tmp_1927: int, out_Tmp_1928: int, out_Tmp_1929: int, out_oldIrql_5: int, out_Tmp_1930: int, out_Tmp_1931: int, out_Tmp_1932: int, out_Tmp_1933: int, out_Tmp_1934: int, out_Tmp_1935: int, out_Tmp_1936: int, out_Tmp_1937: int, out_Tmp_1938: int, out_status_58: int, out_Tmp_1939: int, out_Tmp_1940: int, out_Tmp_1941: int, out_Tmp_1942: int, out_vslice_dummy_var_348: int, out_vslice_dummy_var_350: int, out_vslice_dummy_var_351: int)
{
  var vslice_dummy_var_1354: int;

  entry:
    out_Tmp_1915, out_Tmp_1916, out_Tmp_1917, out_transTimeout, out_retry, out_Tmp_1918, out_Tmp_1919, out_Tmp_1920, out_Tmp_1921, out_Tmp_1922, out_Tmp_1924, out_Tmp_1925, out_transType, out_sdv_597, out_Tmp_1926, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_oldIrql_5, out_Tmp_1930, out_Tmp_1931, out_Tmp_1932, out_Tmp_1933, out_Tmp_1934, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_Tmp_1938, out_status_58, out_Tmp_1939, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, out_vslice_dummy_var_348, out_vslice_dummy_var_350, out_vslice_dummy_var_351 := in_Tmp_1915, in_Tmp_1916, in_Tmp_1917, in_transTimeout, in_retry, in_Tmp_1918, in_Tmp_1919, in_Tmp_1920, in_Tmp_1921, in_Tmp_1922, in_Tmp_1924, in_Tmp_1925, in_transType, in_sdv_597, in_Tmp_1926, in_Tmp_1927, in_Tmp_1928, in_Tmp_1929, in_oldIrql_5, in_Tmp_1930, in_Tmp_1931, in_Tmp_1932, in_Tmp_1933, in_Tmp_1934, in_Tmp_1935, in_Tmp_1936, in_Tmp_1937, in_Tmp_1938, in_status_58, in_Tmp_1939, in_Tmp_1940, in_Tmp_1941, in_Tmp_1942, in_vslice_dummy_var_348, in_vslice_dummy_var_350, in_vslice_dummy_var_351;
    goto L26, exit;

  exit:
    return;

  L26:
    goto anon80_Then;

  anon80_Then:
    assume {:partition} out_retry > 0;
    out_retry := out_retry - 1;
    call {:si_unique_call 3637} Sbp2AddLog(in_pdoExtension_16, 1, -227314626, in_ResetLevel, 0);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} in_ResetLevel != 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} in_ResetLevel != 1;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} in_ResetLevel != 2;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} in_ResetLevel != 3;
    goto L187;

  L187:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1925;
    assume {:nonnull} out_Tmp_1925 != 0;
    assume out_Tmp_1925 > 0;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    havoc out_Tmp_1930;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1938;
    call {:si_unique_call 3655} WPP_SF_q(out_Tmp_1938, 64, out_Tmp_1930, in_pdoExtension_16);
    goto L188;

  L188:
    call {:si_unique_call 3653} out_Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1934 != 0;
    assume out_Tmp_1934 > 0;
    call {:si_unique_call 3654} sdv_KeAcquireSpinLock(0, out_Tmp_1934);
    assume {:nonnull} out_Tmp_1934 != 0;
    assume out_Tmp_1934 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_fdoExtension_5 != 0;
    assume in_fdoExtension_5 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    goto L201;

  L201:
    call {:si_unique_call 3651} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3652} CleanupOrbList#1(in_pdoExtension_16, -1073741248);
    goto anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3635} out_status_58 := Sbp2QueueManagementWorkItem(in_pdoExtension_16, 4, -1);
    goto L92;

  L92:
    call {:si_unique_call 3634} Sbp2AddLog(in_pdoExtension_16, 1, -227314639, out_status_58, out_retry);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} out_status_58 == -1072562032;
    goto L98;

  L98:
    goto anon86_Else;

  anon86_Else:
    assume {:partition} out_retry != 0;
    call {:si_unique_call 3632} out_vslice_dummy_var_348 := KeCancelTimer(0);
    call {:si_unique_call 3633} out_status_58 := Sbp2UpdateNodeInformation#1(in_pdoExtension_16);
    goto anon102_Else;

  anon102_Else:
    assume {:partition} yogi_error != 1;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1941;
    assume {:nonnull} out_Tmp_1941 != 0;
    assume out_Tmp_1941 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    havoc out_Tmp_1935;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1929;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc vslice_dummy_var_1354;
    call {:si_unique_call 3631} WPP_SF_qDD(out_Tmp_1929, 65, out_Tmp_1935, in_pdoExtension_16, out_status_58, vslice_dummy_var_1354);
    goto anon89_Else_dummy;

  anon89_Else_dummy:
    goto L_BAF_1;

  L_BAF_1:
    call {:si_unique_call 3656} {:si_old_unique_call 1} out_Tmp_1915, out_Tmp_1916, out_Tmp_1917, out_transTimeout, out_retry, out_Tmp_1918, out_Tmp_1919, out_Tmp_1920, out_Tmp_1921, out_Tmp_1922, out_Tmp_1924, out_Tmp_1925, out_transType, out_sdv_597, out_Tmp_1926, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_oldIrql_5, out_Tmp_1930, out_Tmp_1931, out_Tmp_1932, out_Tmp_1933, out_Tmp_1934, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_Tmp_1938, out_status_58, out_Tmp_1939, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, out_vslice_dummy_var_348, out_vslice_dummy_var_350, out_vslice_dummy_var_351 := Sbp2Reset#1_loop_L26(out_Tmp_1915, out_Tmp_1916, out_Tmp_1917, out_transTimeout, out_retry, in_pdoExtension_16, out_Tmp_1918, out_Tmp_1919, out_Tmp_1920, out_Tmp_1921, out_Tmp_1922, in_sdv_595, out_Tmp_1924, out_Tmp_1925, out_transType, out_sdv_597, out_Tmp_1926, in_sdv_599, out_Tmp_1927, out_Tmp_1928, out_Tmp_1929, out_oldIrql_5, out_Tmp_1930, out_Tmp_1931, in_fdoExtension_5, in_sdv_601, out_Tmp_1932, out_Tmp_1933, out_Tmp_1934, out_Tmp_1935, out_Tmp_1936, out_Tmp_1937, out_Tmp_1938, out_status_58, out_Tmp_1939, out_Tmp_1940, out_Tmp_1941, out_Tmp_1942, in_ResetLevel, out_vslice_dummy_var_348, out_vslice_dummy_var_350, out_vslice_dummy_var_351);
    return;

  anon89_Then:
    goto anon89_Then_dummy;

  anon89_Then_dummy:
    goto L_BAF_1;

  anon103_Then:
    goto anon103_Then_dummy;

  anon103_Then_dummy:
    goto L_BAF_1;

  anon88_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto anon88_Then_dummy;

  anon88_Then_dummy:
    goto L_BAF_1;

  anon84_Then:
    assume {:partition} out_status_58 != -1072562032;
    goto anon85_Then;

  anon85_Then:
    assume {:partition} out_status_58 == -1073741248;
    goto L98;

  anon116_Then:
    goto L201;

  anon97_Then:
    goto L188;

  anon115_Then:
    goto L188;

  anon96_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L188;

  anon98_Then:
    assume {:partition} in_ResetLevel == 3;
    goto L187;

  anon99_Then:
    assume {:partition} in_ResetLevel == 2;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1926;
    assume {:nonnull} out_Tmp_1926 != 0;
    assume out_Tmp_1926 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    havoc out_Tmp_1933;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1927;
    call {:si_unique_call 3650} WPP_SF_q(out_Tmp_1927, 63, out_Tmp_1933, in_pdoExtension_16);
    goto L46;

  L46:
    out_transType := 12;
    out_transTimeout := 2;
    out_retry := 0;
    call {:si_unique_call 3645} out_Tmp_1934 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1934 != 0;
    assume out_Tmp_1934 > 0;
    call {:si_unique_call 3646} sdv_KeAcquireSpinLock(0, out_Tmp_1934);
    assume {:nonnull} out_Tmp_1934 != 0;
    assume out_Tmp_1934 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1920;
    assume {:nonnull} out_Tmp_1920 != 0;
    assume out_Tmp_1920 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1919;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1942;
    assume {:nonnull} out_Tmp_1919 != 0;
    assume out_Tmp_1919 > 0;
    assume {:nonnull} out_Tmp_1942 != 0;
    assume out_Tmp_1942 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1939;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1918;
    assume {:nonnull} out_Tmp_1918 != 0;
    assume out_Tmp_1918 > 0;
    assume {:nonnull} out_Tmp_1939 != 0;
    assume out_Tmp_1939 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1916;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1932;
    assume {:nonnull} out_Tmp_1916 != 0;
    assume out_Tmp_1916 > 0;
    assume {:nonnull} out_Tmp_1932 != 0;
    assume out_Tmp_1932 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1937;
    assume {:nonnull} out_Tmp_1937 != 0;
    assume out_Tmp_1937 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1937 != 0;
    assume out_Tmp_1937 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1937 != 0;
    assume out_Tmp_1937 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} out_Tmp_1937 != 0;
    assume out_Tmp_1937 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1915;
    assume {:nonnull} out_Tmp_1915 != 0;
    assume out_Tmp_1915 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1940;
    assume {:nonnull} out_Tmp_1940 != 0;
    assume out_Tmp_1940 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    havoc out_Tmp_1928;
    assume {:nonnull} out_Tmp_1928 != 0;
    assume out_Tmp_1928 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3647} Sbp2SetManagementTimer(in_pdoExtension_16, out_transTimeout);
    call {:si_unique_call 3648} sdv_KeReleaseSpinLock(0, out_oldIrql_5);
    call {:si_unique_call 3649} CleanupOrbList#1(in_pdoExtension_16, -1073741248);
    goto anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3644} out_status_58 := Sbp2AccessRegister#1(in_pdoExtension_16, Address__ADDRESS_CONTEXT(TaskOrbContext__DEVICE_EXTENSION(in_pdoExtension_16)), 1024);
    goto anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon83_Then:
    goto L46;

  anon112_Then:
    goto L46;

  anon82_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L46;

  anon100_Then:
    assume {:partition} in_ResetLevel == 1;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1921;
    assume {:nonnull} out_Tmp_1921 != 0;
    assume out_Tmp_1921 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    havoc out_Tmp_1924;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1936;
    call {:si_unique_call 3641} WPP_SF_q(out_Tmp_1936, 62, out_Tmp_1924, in_pdoExtension_16);
    goto L149;

  L149:
    call {:si_unique_call 3640} out_sdv_597 := sdv_KeGetCurrentIrql();
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} 2 > out_sdv_597;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3643} out_vslice_dummy_var_350 := Sbp2AccessRegister#1(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 320);
    goto anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3642} out_status_58 := Sbp2AccessRegister#1(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 258);
    goto anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon93_Then:
    assume {:partition} out_sdv_597 >= 2;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3639} out_vslice_dummy_var_351 := Sbp2AccessRegister#1(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 1088);
    goto anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_pdoExtension_16 != 0;
    assume in_pdoExtension_16 > 0;
    call {:si_unique_call 3638} out_status_58 := Sbp2AccessRegister#1(in_pdoExtension_16, Reserved__DEVICE_EXTENSION(in_pdoExtension_16), 1026);
    goto anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L92;

  anon92_Then:
    goto L149;

  anon107_Then:
    goto L149;

  anon91_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L149;

  anon81_Then:
    assume {:partition} in_ResetLevel == 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1931;
    assume {:nonnull} out_Tmp_1931 != 0;
    assume out_Tmp_1931 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    havoc out_Tmp_1917;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1922;
    call {:si_unique_call 3636} WPP_SF_q(out_Tmp_1922, 61, out_Tmp_1917, in_pdoExtension_16);
    goto L178;

  L178:
    out_retry := 0;
    goto L92;

  anon95_Then:
    goto L178;

  anon101_Then:
    goto L178;

  anon94_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L178;
}



procedure {:LoopProcedure} Sbp2Reset#1_loop_L26(in_Tmp_1915: int, in_Tmp_1916: int, in_Tmp_1917: int, in_transTimeout: int, in_retry: int, in_pdoExtension_16: int, in_Tmp_1918: int, in_Tmp_1919: int, in_Tmp_1920: int, in_Tmp_1921: int, in_Tmp_1922: int, in_sdv_595: int, in_Tmp_1924: int, in_Tmp_1925: int, in_transType: int, in_sdv_597: int, in_Tmp_1926: int, in_sdv_599: int, in_Tmp_1927: int, in_Tmp_1928: int, in_Tmp_1929: int, in_oldIrql_5: int, in_Tmp_1930: int, in_Tmp_1931: int, in_fdoExtension_5: int, in_sdv_601: int, in_Tmp_1932: int, in_Tmp_1933: int, in_Tmp_1934: int, in_Tmp_1935: int, in_Tmp_1936: int, in_Tmp_1937: int, in_Tmp_1938: int, in_status_58: int, in_Tmp_1939: int, in_Tmp_1940: int, in_Tmp_1941: int, in_Tmp_1942: int, in_ResetLevel: int, in_vslice_dummy_var_348: int, in_vslice_dummy_var_350: int, in_vslice_dummy_var_351: int) returns (out_Tmp_1915: int, out_Tmp_1916: int, out_Tmp_1917: int, out_transTimeout: int, out_retry: int, out_Tmp_1918: int, out_Tmp_1919: int, out_Tmp_1920: int, out_Tmp_1921: int, out_Tmp_1922: int, out_Tmp_1924: int, out_Tmp_1925: int, out_transType: int, out_sdv_597: int, out_Tmp_1926: int, out_Tmp_1927: int, out_Tmp_1928: int, out_Tmp_1929: int, out_oldIrql_5: int, out_Tmp_1930: int, out_Tmp_1931: int, out_Tmp_1932: int, out_Tmp_1933: int, out_Tmp_1934: int, out_Tmp_1935: int, out_Tmp_1936: int, out_Tmp_1937: int, out_Tmp_1938: int, out_status_58: int, out_Tmp_1939: int, out_Tmp_1940: int, out_Tmp_1941: int, out_Tmp_1942: int, out_vslice_dummy_var_348: int, out_vslice_dummy_var_350: int, out_vslice_dummy_var_351: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} out_transTimeout == 2 || out_transTimeout == in_transTimeout;
  free ensures {:va_keep} out_transType == 12 || out_transType == in_transType;
  free ensures {:va_keep} out_vslice_dummy_var_348 == 1 || out_vslice_dummy_var_348 == 0 || out_vslice_dummy_var_348 == in_vslice_dummy_var_348;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation CleanupOrbList#0_loop_L42(in_Tmp_1242: int, in_Tmp_1244: int, in_Tmp_1245: int, in_pendingOrbListHead: int, in_Tmp_1246: int, in_Tmp_1247: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1249: int, in_Tmp_1250: int, in_Tmp_1251: int, in_requestIrp_1: int, in_Tmp_1252: int, in_Tmp_1253: int, in_sdv_423: int, in_Tmp_1254: int, in_currentListItem_1: int, in_Tmp_1255: int, in_sdv_425: int, in_Tmp_1256: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_356: int, in_vslice_dummy_var_358: int, in_vslice_dummy_var_359: int, in_vslice_dummy_var_360: int, in_vslice_dummy_var_361: int, in_vslice_dummy_var_362: int) returns (out_Tmp_1242: int, out_Tmp_1244: int, out_Tmp_1245: int, out_Tmp_1246: int, out_Tmp_1247: int, out_pEntry: int, out_Tmp_1249: int, out_Tmp_1250: int, out_Tmp_1251: int, out_requestIrp_1: int, out_Tmp_1252: int, out_Tmp_1253: int, out_sdv_423: int, out_Tmp_1254: int, out_currentListItem_1: int, out_Tmp_1255: int, out_sdv_425: int, out_Tmp_1256: int, out_vslice_dummy_var_356: int, out_vslice_dummy_var_358: int, out_vslice_dummy_var_359: int, out_vslice_dummy_var_360: int, out_vslice_dummy_var_361: int, out_vslice_dummy_var_362: int)
{
  var vslice_dummy_var_1355: int;

  entry:
    out_Tmp_1242, out_Tmp_1244, out_Tmp_1245, out_Tmp_1246, out_Tmp_1247, out_pEntry, out_Tmp_1249, out_Tmp_1250, out_Tmp_1251, out_requestIrp_1, out_Tmp_1252, out_Tmp_1253, out_sdv_423, out_Tmp_1254, out_currentListItem_1, out_Tmp_1255, out_sdv_425, out_Tmp_1256, out_vslice_dummy_var_356, out_vslice_dummy_var_358, out_vslice_dummy_var_359, out_vslice_dummy_var_360, out_vslice_dummy_var_361, out_vslice_dummy_var_362 := in_Tmp_1242, in_Tmp_1244, in_Tmp_1245, in_Tmp_1246, in_Tmp_1247, in_pEntry, in_Tmp_1249, in_Tmp_1250, in_Tmp_1251, in_requestIrp_1, in_Tmp_1252, in_Tmp_1253, in_sdv_423, in_Tmp_1254, in_currentListItem_1, in_Tmp_1255, in_sdv_425, in_Tmp_1256, in_vslice_dummy_var_356, in_vslice_dummy_var_358, in_vslice_dummy_var_359, in_vslice_dummy_var_360, in_vslice_dummy_var_361, in_vslice_dummy_var_362;
    goto L42, exit;

  exit:
    return;

  L42:
    call {:si_unique_call 3657} out_pEntry := RemoveHeadList(in_pendingOrbListHead);
    call {:si_unique_call 3658} InitializeListHead(out_pEntry);
    call {:si_unique_call 3659} out_sdv_423 := sdv_containing_record(out_pEntry, 0);
    out_currentListItem_1 := out_sdv_423;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 3661} out_vslice_dummy_var_356 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 3660} out_sdv_425 := sdv_IsListEmpty(0);
    goto anon45_Then;

  anon45_Then:
    assume {:partition} out_sdv_425 == 0;
    goto anon45_Then_dummy;

  anon45_Then_dummy:
    call {:si_unique_call 3675} {:si_old_unique_call 1} out_Tmp_1242, out_Tmp_1244, out_Tmp_1245, out_Tmp_1246, out_Tmp_1247, out_pEntry, out_Tmp_1249, out_Tmp_1250, out_Tmp_1251, out_requestIrp_1, out_Tmp_1252, out_Tmp_1253, out_sdv_423, out_Tmp_1254, out_currentListItem_1, out_Tmp_1255, out_sdv_425, out_Tmp_1256, out_vslice_dummy_var_356, out_vslice_dummy_var_358, out_vslice_dummy_var_359, out_vslice_dummy_var_360, out_vslice_dummy_var_361, out_vslice_dummy_var_362 := CleanupOrbList#0_loop_L42(out_Tmp_1242, out_Tmp_1244, out_Tmp_1245, in_pendingOrbListHead, out_Tmp_1246, out_Tmp_1247, in_orbLock_6, out_pEntry, out_Tmp_1249, out_Tmp_1250, out_Tmp_1251, out_requestIrp_1, out_Tmp_1252, out_Tmp_1253, out_sdv_423, out_Tmp_1254, out_currentListItem_1, out_Tmp_1255, out_sdv_425, out_Tmp_1256, in_DeviceExtension_4, in_CompletionStatus, out_vslice_dummy_var_356, out_vslice_dummy_var_358, out_vslice_dummy_var_359, out_vslice_dummy_var_360, out_vslice_dummy_var_361, out_vslice_dummy_var_362);
    return;

  anon56_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3666} out_vslice_dummy_var_360 := KeCancelTimer(0);
    call {:si_unique_call 3667} ReleaseOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    call {:si_unique_call 3668} out_vslice_dummy_var_358 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1254;
    assume {:nonnull} out_Tmp_1254 != 0;
    assume out_Tmp_1254 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc out_Tmp_1250;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1247;
    call {:si_unique_call 3665} WPP_SF_q(out_Tmp_1247, 11, out_Tmp_1250, out_currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1255;
    assume {:nonnull} out_Tmp_1255 != 0;
    assume out_Tmp_1255 > 0;
    havoc out_requestIrp_1;
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1256;
    assume {:nonnull} out_Tmp_1256 != 0;
    assume out_Tmp_1256 > 0;
    goto L98;

  L98:
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1244;
    assume {:nonnull} out_Tmp_1244 != 0;
    assume out_Tmp_1244 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 3673} Sbp2DeferPendingRequest(in_DeviceExtension_4, out_requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3663} out_vslice_dummy_var_361 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 3662} AcquireOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    goto L58;

  anon60_Then:
    goto L105;

  L105:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1242;
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    assume {:nonnull} out_Tmp_1242 != 0;
    assume out_Tmp_1242 > 0;
    havoc vslice_dummy_var_1355;
    call {:si_unique_call 3674} Sbp2StartPacket#0(vslice_dummy_var_1355, out_requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_1242));
    goto anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon50_Then:
    goto L105;

  anon49_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3671} out_vslice_dummy_var_362 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1245;
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    havoc out_Tmp_1251;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1249;
    call {:si_unique_call 3670} WPP_SF_qq(out_Tmp_1249, 12, out_Tmp_1251, in_DeviceExtension_4, out_requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    call {:si_unique_call 3669} out_vslice_dummy_var_359 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_4), out_requestIrp_1);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume out_requestIrp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3672} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon63_Else;

  anon63_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    call {:si_unique_call 3664} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon53_Then:
    assume !(out_requestIrp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L154;

  anon52_Then:
    goto L123;

  anon62_Then:
    goto L123;

  anon51_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon48_Then:
    goto L99;

  anon54_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1246;
    assume {:nonnull} out_Tmp_1246 != 0;
    assume out_Tmp_1246 > 0;
    goto L98;

  anon55_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1253;
    assume {:nonnull} out_Tmp_1253 != 0;
    assume out_Tmp_1253 > 0;
    goto L98;

  anon59_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1252;
    assume {:nonnull} out_Tmp_1252 != 0;
    assume out_Tmp_1252 > 0;
    goto L98;

  anon47_Then:
    goto L83;

  anon58_Then:
    goto L83;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;
}



procedure {:LoopProcedure} CleanupOrbList#0_loop_L42(in_Tmp_1242: int, in_Tmp_1244: int, in_Tmp_1245: int, in_pendingOrbListHead: int, in_Tmp_1246: int, in_Tmp_1247: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1249: int, in_Tmp_1250: int, in_Tmp_1251: int, in_requestIrp_1: int, in_Tmp_1252: int, in_Tmp_1253: int, in_sdv_423: int, in_Tmp_1254: int, in_currentListItem_1: int, in_Tmp_1255: int, in_sdv_425: int, in_Tmp_1256: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_356: int, in_vslice_dummy_var_358: int, in_vslice_dummy_var_359: int, in_vslice_dummy_var_360: int, in_vslice_dummy_var_361: int, in_vslice_dummy_var_362: int) returns (out_Tmp_1242: int, out_Tmp_1244: int, out_Tmp_1245: int, out_Tmp_1246: int, out_Tmp_1247: int, out_pEntry: int, out_Tmp_1249: int, out_Tmp_1250: int, out_Tmp_1251: int, out_requestIrp_1: int, out_Tmp_1252: int, out_Tmp_1253: int, out_sdv_423: int, out_Tmp_1254: int, out_currentListItem_1: int, out_Tmp_1255: int, out_sdv_425: int, out_Tmp_1256: int, out_vslice_dummy_var_356: int, out_vslice_dummy_var_358: int, out_vslice_dummy_var_359: int, out_vslice_dummy_var_360: int, out_vslice_dummy_var_361: int, out_vslice_dummy_var_362: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == old(completion_called);
  free ensures {:va_keep} out_Tmp_1242 == in_Tmp_1242;
  free ensures {:va_keep} out_Tmp_1244 == in_Tmp_1244;
  free ensures {:va_keep} out_Tmp_1245 == in_Tmp_1245;
  free ensures {:va_keep} out_Tmp_1246 == in_Tmp_1246;
  free ensures {:va_keep} out_Tmp_1247 == in_Tmp_1247;
  free ensures {:va_keep} out_pEntry == in_pEntry;
  free ensures {:va_keep} out_Tmp_1249 == in_Tmp_1249;
  free ensures {:va_keep} out_Tmp_1250 == in_Tmp_1250;
  free ensures {:va_keep} out_Tmp_1251 == in_Tmp_1251;
  free ensures {:va_keep} out_requestIrp_1 == in_requestIrp_1;
  free ensures {:va_keep} out_Tmp_1252 == in_Tmp_1252;
  free ensures {:va_keep} out_Tmp_1253 == in_Tmp_1253;
  free ensures {:va_keep} out_sdv_423 == in_sdv_423;
  free ensures {:va_keep} out_Tmp_1254 == in_Tmp_1254;
  free ensures {:va_keep} out_currentListItem_1 == in_currentListItem_1;
  free ensures {:va_keep} out_Tmp_1255 == in_Tmp_1255;
  free ensures {:va_keep} out_sdv_425 == in_sdv_425;
  free ensures {:va_keep} out_Tmp_1256 == in_Tmp_1256;
  free ensures {:va_keep} out_vslice_dummy_var_356 == in_vslice_dummy_var_356;
  free ensures {:va_keep} out_vslice_dummy_var_358 == in_vslice_dummy_var_358;
  free ensures {:va_keep} out_vslice_dummy_var_359 == in_vslice_dummy_var_359;
  free ensures {:va_keep} out_vslice_dummy_var_360 == in_vslice_dummy_var_360;
  free ensures {:va_keep} out_vslice_dummy_var_361 == in_vslice_dummy_var_361;
  free ensures {:va_keep} out_vslice_dummy_var_362 == in_vslice_dummy_var_362;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation CleanupOrbList#1_loop_L42(in_Tmp_1242: int, in_Tmp_1244: int, in_Tmp_1245: int, in_pendingOrbListHead: int, in_Tmp_1246: int, in_Tmp_1247: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1249: int, in_Tmp_1250: int, in_Tmp_1251: int, in_requestIrp_1: int, in_Tmp_1252: int, in_Tmp_1253: int, in_sdv_423: int, in_Tmp_1254: int, in_currentListItem_1: int, in_Tmp_1255: int, in_sdv_425: int, in_Tmp_1256: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_367: int, in_vslice_dummy_var_369: int, in_vslice_dummy_var_370: int, in_vslice_dummy_var_371: int, in_vslice_dummy_var_372: int, in_vslice_dummy_var_373: int) returns (out_Tmp_1242: int, out_Tmp_1244: int, out_Tmp_1245: int, out_Tmp_1246: int, out_Tmp_1247: int, out_pEntry: int, out_Tmp_1249: int, out_Tmp_1250: int, out_Tmp_1251: int, out_requestIrp_1: int, out_Tmp_1252: int, out_Tmp_1253: int, out_sdv_423: int, out_Tmp_1254: int, out_currentListItem_1: int, out_Tmp_1255: int, out_sdv_425: int, out_Tmp_1256: int, out_vslice_dummy_var_367: int, out_vslice_dummy_var_369: int, out_vslice_dummy_var_370: int, out_vslice_dummy_var_371: int, out_vslice_dummy_var_372: int, out_vslice_dummy_var_373: int)
{
  var vslice_dummy_var_1356: int;

  entry:
    out_Tmp_1242, out_Tmp_1244, out_Tmp_1245, out_Tmp_1246, out_Tmp_1247, out_pEntry, out_Tmp_1249, out_Tmp_1250, out_Tmp_1251, out_requestIrp_1, out_Tmp_1252, out_Tmp_1253, out_sdv_423, out_Tmp_1254, out_currentListItem_1, out_Tmp_1255, out_sdv_425, out_Tmp_1256, out_vslice_dummy_var_367, out_vslice_dummy_var_369, out_vslice_dummy_var_370, out_vslice_dummy_var_371, out_vslice_dummy_var_372, out_vslice_dummy_var_373 := in_Tmp_1242, in_Tmp_1244, in_Tmp_1245, in_Tmp_1246, in_Tmp_1247, in_pEntry, in_Tmp_1249, in_Tmp_1250, in_Tmp_1251, in_requestIrp_1, in_Tmp_1252, in_Tmp_1253, in_sdv_423, in_Tmp_1254, in_currentListItem_1, in_Tmp_1255, in_sdv_425, in_Tmp_1256, in_vslice_dummy_var_367, in_vslice_dummy_var_369, in_vslice_dummy_var_370, in_vslice_dummy_var_371, in_vslice_dummy_var_372, in_vslice_dummy_var_373;
    goto L42, exit;

  exit:
    return;

  L42:
    call {:si_unique_call 3676} out_pEntry := RemoveHeadList(in_pendingOrbListHead);
    call {:si_unique_call 3677} InitializeListHead(out_pEntry);
    call {:si_unique_call 3678} out_sdv_423 := sdv_containing_record(out_pEntry, 0);
    out_currentListItem_1 := out_sdv_423;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 3680} out_vslice_dummy_var_367 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L58;

  L58:
    call {:si_unique_call 3679} out_sdv_425 := sdv_IsListEmpty(0);
    goto anon45_Then;

  anon45_Then:
    assume {:partition} out_sdv_425 == 0;
    goto anon45_Then_dummy;

  anon45_Then_dummy:
    call {:si_unique_call 3694} {:si_old_unique_call 1} out_Tmp_1242, out_Tmp_1244, out_Tmp_1245, out_Tmp_1246, out_Tmp_1247, out_pEntry, out_Tmp_1249, out_Tmp_1250, out_Tmp_1251, out_requestIrp_1, out_Tmp_1252, out_Tmp_1253, out_sdv_423, out_Tmp_1254, out_currentListItem_1, out_Tmp_1255, out_sdv_425, out_Tmp_1256, out_vslice_dummy_var_367, out_vslice_dummy_var_369, out_vslice_dummy_var_370, out_vslice_dummy_var_371, out_vslice_dummy_var_372, out_vslice_dummy_var_373 := CleanupOrbList#1_loop_L42(out_Tmp_1242, out_Tmp_1244, out_Tmp_1245, in_pendingOrbListHead, out_Tmp_1246, out_Tmp_1247, in_orbLock_6, out_pEntry, out_Tmp_1249, out_Tmp_1250, out_Tmp_1251, out_requestIrp_1, out_Tmp_1252, out_Tmp_1253, out_sdv_423, out_Tmp_1254, out_currentListItem_1, out_Tmp_1255, out_sdv_425, out_Tmp_1256, in_DeviceExtension_4, in_CompletionStatus, out_vslice_dummy_var_367, out_vslice_dummy_var_369, out_vslice_dummy_var_370, out_vslice_dummy_var_371, out_vslice_dummy_var_372, out_vslice_dummy_var_373);
    return;

  anon56_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3685} out_vslice_dummy_var_371 := KeCancelTimer(0);
    call {:si_unique_call 3686} ReleaseOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    call {:si_unique_call 3687} out_vslice_dummy_var_369 := Sbp2_SCSI_RBC_Conversion(out_currentListItem_1);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1254;
    assume {:nonnull} out_Tmp_1254 != 0;
    assume out_Tmp_1254 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    havoc out_Tmp_1250;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1247;
    call {:si_unique_call 3684} WPP_SF_q(out_Tmp_1247, 11, out_Tmp_1250, out_currentListItem_1);
    goto L83;

  L83:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1255;
    assume {:nonnull} out_Tmp_1255 != 0;
    assume out_Tmp_1255 > 0;
    havoc out_requestIrp_1;
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} in_CompletionStatus != -1073741643;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} in_CompletionStatus != -1073741632;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} in_CompletionStatus == -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1256;
    assume {:nonnull} out_Tmp_1256 != 0;
    assume out_Tmp_1256 > 0;
    goto L98;

  L98:
    assume {:nonnull} out_requestIrp_1 != 0;
    assume out_requestIrp_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1244;
    assume {:nonnull} out_Tmp_1244 != 0;
    assume out_Tmp_1244 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 3692} Sbp2DeferPendingRequest(in_DeviceExtension_4, out_requestIrp_1);
    goto L112;

  L112:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3682} out_vslice_dummy_var_372 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto L99;

  L99:
    call {:si_unique_call 3681} AcquireOrbListLock(in_DeviceExtension_4, in_orbLock_6, 0);
    goto L58;

  anon60_Then:
    goto L105;

  L105:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1242;
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    assume {:nonnull} out_Tmp_1242 != 0;
    assume out_Tmp_1242 > 0;
    havoc vslice_dummy_var_1356;
    call {:si_unique_call 3693} Sbp2StartPacket#1(vslice_dummy_var_1356, out_requestIrp_1, QueueSortKey__SCSI_REQUEST_BLOCK(out_Tmp_1242));
    goto anon61_Else;

  anon61_Else:
    assume {:partition} yogi_error != 1;
    goto L112;

  anon50_Then:
    goto L105;

  anon49_Then:
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    call {:si_unique_call 3690} out_vslice_dummy_var_373 := FreeAsyncRequestContext(in_DeviceExtension_4, out_currentListItem_1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1245;
    assume {:nonnull} out_Tmp_1245 != 0;
    assume out_Tmp_1245 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    havoc out_Tmp_1251;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_1249;
    call {:si_unique_call 3689} WPP_SF_qq(out_Tmp_1249, 12, out_Tmp_1251, in_DeviceExtension_4, out_requestIrp_1);
    goto L123;

  L123:
    assume {:nonnull} in_DeviceExtension_4 != 0;
    assume in_DeviceExtension_4 > 0;
    call {:si_unique_call 3688} out_vslice_dummy_var_370 := sdv_IoReleaseRemoveLock(RemoveLock__DEVICE_EXTENSION(in_DeviceExtension_4), out_requestIrp_1);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume out_requestIrp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 3691} SLIC_sdv_IoCompleteRequest_entry(strConst__li2bpl0);
    goto anon63_Else;

  anon63_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    call {:si_unique_call 3683} sdv_IoCompleteRequest(0, 0);
    goto L99;

  anon53_Then:
    assume !(out_requestIrp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L154;

  anon52_Then:
    goto L123;

  anon62_Then:
    goto L123;

  anon51_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L123;

  anon48_Then:
    goto L99;

  anon54_Then:
    assume {:partition} in_CompletionStatus != -1073741248;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1246;
    assume {:nonnull} out_Tmp_1246 != 0;
    assume out_Tmp_1246 > 0;
    goto L98;

  anon55_Then:
    assume {:partition} in_CompletionStatus == -1073741632;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1253;
    assume {:nonnull} out_Tmp_1253 != 0;
    assume out_Tmp_1253 > 0;
    goto L98;

  anon59_Then:
    assume {:partition} in_CompletionStatus == -1073741643;
    assume {:nonnull} out_currentListItem_1 != 0;
    assume out_currentListItem_1 > 0;
    havoc out_Tmp_1252;
    assume {:nonnull} out_Tmp_1252 != 0;
    assume out_Tmp_1252 > 0;
    goto L98;

  anon47_Then:
    goto L83;

  anon58_Then:
    goto L83;

  anon46_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L83;
}



procedure {:LoopProcedure} CleanupOrbList#1_loop_L42(in_Tmp_1242: int, in_Tmp_1244: int, in_Tmp_1245: int, in_pendingOrbListHead: int, in_Tmp_1246: int, in_Tmp_1247: int, in_orbLock_6: int, in_pEntry: int, in_Tmp_1249: int, in_Tmp_1250: int, in_Tmp_1251: int, in_requestIrp_1: int, in_Tmp_1252: int, in_Tmp_1253: int, in_sdv_423: int, in_Tmp_1254: int, in_currentListItem_1: int, in_Tmp_1255: int, in_sdv_425: int, in_Tmp_1256: int, in_DeviceExtension_4: int, in_CompletionStatus: int, in_vslice_dummy_var_367: int, in_vslice_dummy_var_369: int, in_vslice_dummy_var_370: int, in_vslice_dummy_var_371: int, in_vslice_dummy_var_372: int, in_vslice_dummy_var_373: int) returns (out_Tmp_1242: int, out_Tmp_1244: int, out_Tmp_1245: int, out_Tmp_1246: int, out_Tmp_1247: int, out_pEntry: int, out_Tmp_1249: int, out_Tmp_1250: int, out_Tmp_1251: int, out_requestIrp_1: int, out_Tmp_1252: int, out_Tmp_1253: int, out_sdv_423: int, out_Tmp_1254: int, out_currentListItem_1: int, out_Tmp_1255: int, out_sdv_425: int, out_Tmp_1256: int, out_vslice_dummy_var_367: int, out_vslice_dummy_var_369: int, out_vslice_dummy_var_370: int, out_vslice_dummy_var_371: int, out_vslice_dummy_var_372: int, out_vslice_dummy_var_373: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == old(completion_called);
  free ensures {:va_keep} out_Tmp_1242 == in_Tmp_1242;
  free ensures {:va_keep} out_Tmp_1244 == in_Tmp_1244;
  free ensures {:va_keep} out_Tmp_1245 == in_Tmp_1245;
  free ensures {:va_keep} out_Tmp_1246 == in_Tmp_1246;
  free ensures {:va_keep} out_Tmp_1247 == in_Tmp_1247;
  free ensures {:va_keep} out_pEntry == in_pEntry;
  free ensures {:va_keep} out_Tmp_1249 == in_Tmp_1249;
  free ensures {:va_keep} out_Tmp_1250 == in_Tmp_1250;
  free ensures {:va_keep} out_Tmp_1251 == in_Tmp_1251;
  free ensures {:va_keep} out_requestIrp_1 == in_requestIrp_1;
  free ensures {:va_keep} out_Tmp_1252 == in_Tmp_1252;
  free ensures {:va_keep} out_Tmp_1253 == in_Tmp_1253;
  free ensures {:va_keep} out_sdv_423 == in_sdv_423;
  free ensures {:va_keep} out_Tmp_1254 == in_Tmp_1254;
  free ensures {:va_keep} out_currentListItem_1 == in_currentListItem_1;
  free ensures {:va_keep} out_Tmp_1255 == in_Tmp_1255;
  free ensures {:va_keep} out_sdv_425 == in_sdv_425;
  free ensures {:va_keep} out_Tmp_1256 == in_Tmp_1256;
  free ensures {:va_keep} out_vslice_dummy_var_367 == in_vslice_dummy_var_367;
  free ensures {:va_keep} out_vslice_dummy_var_369 == in_vslice_dummy_var_369;
  free ensures {:va_keep} out_vslice_dummy_var_370 == in_vslice_dummy_var_370;
  free ensures {:va_keep} out_vslice_dummy_var_371 == in_vslice_dummy_var_371;
  free ensures {:va_keep} out_vslice_dummy_var_372 == in_vslice_dummy_var_372;
  free ensures {:va_keep} out_vslice_dummy_var_373 == in_vslice_dummy_var_373;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:SIextraRecBound 8} Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_17: int, in_i_5: int, in_context_2: int) returns (out_i_5: int, out_context_2: int)
{

  entry:
    out_i_5, out_context_2 := in_i_5, in_context_2;
    goto L147, exit;

  exit:
    return;

  L147:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon177_Else;

  anon177_Else:
    assume {:partition} 8 > out_i_5;
    assume {:nonnull} in_pdoExtension_17 != 0;
    assume in_pdoExtension_17 > 0;
    havoc out_context_2;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    call {:si_unique_call 3695} FreeAddressRange#0(in_pdoExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_2)));
    goto anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    out_i_5 := out_i_5 + 1;
    goto L154_dummy;

  L154_dummy:
    call {:si_unique_call 3696} {:si_old_unique_call 1} out_i_5, out_context_2 := Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_17, out_i_5, out_context_2);
    return;

  anon218_Then:
    goto L154;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L147(in_pdoExtension_17: int, in_i_5: int, in_context_2: int) returns (out_i_5: int, out_context_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L167(in_Tmp_2010: int, in_pdoExtension_17: int, in_sdv_670: int, in_statusFifoElement: int, in_Tmp_2075: int, in_Tmp_2115: int) returns (out_Tmp_2010: int, out_sdv_670: int, out_statusFifoElement: int, out_Tmp_2075: int, out_Tmp_2115: int)
{
  var vslice_dummy_var_1357: int;

  entry:
    out_Tmp_2010, out_sdv_670, out_statusFifoElement, out_Tmp_2075, out_Tmp_2115 := in_Tmp_2010, in_sdv_670, in_statusFifoElement, in_Tmp_2075, in_Tmp_2115;
    goto L167, exit;

  exit:
    return;

  L167:
    goto anon178_Else;

  anon178_Else:
    assume {:partition} out_statusFifoElement != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2075;
    assume {:nonnull} out_Tmp_2075 != 0;
    assume out_Tmp_2075 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc out_Tmp_2115;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2010;
    assume {:nonnull} in_pdoExtension_17 != 0;
    assume in_pdoExtension_17 > 0;
    havoc vslice_dummy_var_1357;
    call {:si_unique_call 3699} WPP_SF_qqq(out_Tmp_2010, 35, out_Tmp_2115, in_pdoExtension_17, out_statusFifoElement, vslice_dummy_var_1357);
    goto L175;

  L175:
    call {:si_unique_call 3697} IoFreeMdl(0);
    call {:si_unique_call 3698} out_sdv_670 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_670;
    goto L175_dummy;

  L175_dummy:
    call {:si_unique_call 3700} {:si_old_unique_call 1} out_Tmp_2010, out_sdv_670, out_statusFifoElement, out_Tmp_2075, out_Tmp_2115 := Sbp2CleanDeviceExtension#0_loop_L167(out_Tmp_2010, in_pdoExtension_17, out_sdv_670, out_statusFifoElement, out_Tmp_2075, out_Tmp_2115);
    return;

  anon180_Then:
    goto L175;

  anon220_Then:
    goto L175;

  anon179_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L167(in_Tmp_2010: int, in_pdoExtension_17: int, in_sdv_670: int, in_statusFifoElement: int, in_Tmp_2075: int, in_Tmp_2115: int) returns (out_Tmp_2010: int, out_sdv_670: int, out_statusFifoElement: int, out_Tmp_2075: int, out_Tmp_2115: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L191(in_sdv_669: int, in_Tmp_2109: int, in_packet_13: int) returns (out_sdv_669: int, out_Tmp_2109: int, out_packet_13: int)
{

  entry:
    out_sdv_669, out_Tmp_2109, out_packet_13 := in_sdv_669, in_Tmp_2109, in_packet_13;
    goto L191, exit;

  exit:
    return;

  L191:
    goto anon181_Else;

  anon181_Else:
    assume {:partition} out_packet_13 != 0;
    call {:si_unique_call 3704} sdv_ExFreePool(0);
    assume {:nonnull} out_packet_13 != 0;
    assume out_packet_13 > 0;
    havoc out_Tmp_2109;
    assume {:nonnull} out_Tmp_2109 != 0;
    assume out_Tmp_2109 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    call {:si_unique_call 3703} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 3701} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 3702} out_sdv_669 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_packet_13 := out_sdv_669;
    goto L199_dummy;

  L199_dummy:
    call {:si_unique_call 3705} {:si_old_unique_call 1} out_sdv_669, out_Tmp_2109, out_packet_13 := Sbp2CleanDeviceExtension#0_loop_L191(out_sdv_669, out_Tmp_2109, out_packet_13);
    return;

  anon221_Then:
    goto L199;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L191(in_sdv_669: int, in_Tmp_2109: int, in_packet_13: int) returns (out_sdv_669: int, out_Tmp_2109: int, out_packet_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L33(in_Tmp_2018: int, in_i_5: int, in_Tmp_2089: int, in_Tmp_2099: int, in_Tmp_2104: int, in_fdoExtension_7: int, in_DeviceObject_36: int) returns (out_Tmp_2018: int, out_i_5: int, out_Tmp_2089: int, out_Tmp_2099: int, out_Tmp_2104: int)
{

  entry:
    out_Tmp_2018, out_i_5, out_Tmp_2089, out_Tmp_2099, out_Tmp_2104 := in_Tmp_2018, in_i_5, in_Tmp_2089, in_Tmp_2099, in_Tmp_2104;
    goto L33, exit;

  exit:
    return;

  L33:
    out_Tmp_2089 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2104;
    assume {:nonnull} out_Tmp_2104 != 0;
    assume out_Tmp_2104 > 0;
    goto anon204_Else;

  anon204_Else:
    out_Tmp_2018 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2099;
    assume {:nonnull} out_Tmp_2099 != 0;
    assume out_Tmp_2099 > 0;
    goto anon205_Then;

  anon205_Then:
    out_i_5 := out_i_5 + 1;
    goto anon205_Then_dummy;

  anon205_Then_dummy:
    havoc out_i_5;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L33(in_Tmp_2018: int, in_i_5: int, in_Tmp_2089: int, in_Tmp_2099: int, in_Tmp_2104: int, in_fdoExtension_7: int, in_DeviceObject_36: int) returns (out_Tmp_2018: int, out_i_5: int, out_Tmp_2089: int, out_Tmp_2099: int, out_Tmp_2104: int);
  free ensures {:va_keep} out_Tmp_2018 == in_i_5 || out_Tmp_2018 == in_Tmp_2018;
  free ensures {:va_keep} out_Tmp_2089 == in_i_5 || out_Tmp_2089 == in_Tmp_2089;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CleanDeviceExtension#0_loop_L273(in_Tmp_2006: int, in_Tmp_2007: int, in_Tmp_2009: int, in_Tmp_2013: int, in_pdoExtension_17: int, in_Tmp_2019: int, in_Tmp_2021: int, in_Tmp_2022: int, in_Tmp_2023: int, in_Tmp_2024: int, in_Tmp_2025: int, in_Tmp_2026: int, in_Tmp_2028: int, in_Tmp_2029: int, in_Tmp_2030: int, in_Tmp_2033: int, in_Tmp_2034: int, in_Tmp_2035: int, in_Tmp_2036: int, in_Tmp_2038: int, in_Tmp_2040: int, in_Tmp_2042: int, in_Tmp_2043: int, in_Tmp_2044: int, in_Tmp_2047: int, in_Tmp_2050: int, in_Tmp_2051: int, in_Tmp_2053: int, in_Tmp_2054: int, in_Tmp_2055: int, in_Tmp_2056: int, in_Tmp_2061: int, in_Tmp_2063: int, in_Tmp_2064: int, in_Tmp_2066: int, in_Tmp_2067: int, in_Tmp_2068: int, in_i_5: int, in_Tmp_2071: int, in_Tmp_2073: int, in_Tmp_2074: int, in_Tmp_2079: int, in_Tmp_2081: int, in_Tmp_2083: int, in_Tmp_2087: int, in_Tmp_2088: int, in_Tmp_2090: int, in_Tmp_2091: int, in_Tmp_2093: int, in_Tmp_2094: int, in_Tmp_2096: int, in_Tmp_2102: int, in_Tmp_2103: int, in_fdoExtension_7: int, in_Tmp_2108: int, in_Tmp_2111: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2116: int, in_cIrql_9: int, in_Tmp_2117: int, in_Tmp_2121: int, in_Tmp_2122: int, in_Tmp_2127: int, in_Tmp_2129: int, in_DeviceObject_36: int) returns (out_Tmp_2006: int, out_Tmp_2007: int, out_Tmp_2009: int, out_Tmp_2013: int, out_pdoExtension_17: int, out_Tmp_2019: int, out_Tmp_2021: int, out_Tmp_2022: int, out_Tmp_2023: int, out_Tmp_2024: int, out_Tmp_2025: int, out_Tmp_2026: int, out_Tmp_2028: int, out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2033: int, out_Tmp_2034: int, out_Tmp_2035: int, out_Tmp_2036: int, out_Tmp_2038: int, out_Tmp_2040: int, out_Tmp_2042: int, out_Tmp_2043: int, out_Tmp_2044: int, out_Tmp_2047: int, out_Tmp_2050: int, out_Tmp_2051: int, out_Tmp_2053: int, out_Tmp_2054: int, out_Tmp_2055: int, out_Tmp_2056: int, out_Tmp_2061: int, out_Tmp_2063: int, out_Tmp_2064: int, out_Tmp_2066: int, out_Tmp_2067: int, out_Tmp_2068: int, out_i_5: int, out_Tmp_2071: int, out_Tmp_2073: int, out_Tmp_2074: int, out_Tmp_2079: int, out_Tmp_2081: int, out_Tmp_2083: int, out_Tmp_2087: int, out_Tmp_2088: int, out_Tmp_2090: int, out_Tmp_2091: int, out_Tmp_2093: int, out_Tmp_2094: int, out_Tmp_2096: int, out_Tmp_2102: int, out_Tmp_2103: int, out_Tmp_2108: int, out_Tmp_2111: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2116: int, out_cIrql_9: int, out_Tmp_2117: int, out_Tmp_2121: int, out_Tmp_2122: int, out_Tmp_2127: int, out_Tmp_2129: int, out_DeviceObject_36: int)
{

  entry:
    out_Tmp_2006, out_Tmp_2007, out_Tmp_2009, out_Tmp_2013, out_pdoExtension_17, out_Tmp_2019, out_Tmp_2021, out_Tmp_2022, out_Tmp_2023, out_Tmp_2024, out_Tmp_2025, out_Tmp_2026, out_Tmp_2028, out_Tmp_2029, out_Tmp_2030, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_Tmp_2038, out_Tmp_2040, out_Tmp_2042, out_Tmp_2043, out_Tmp_2044, out_Tmp_2047, out_Tmp_2050, out_Tmp_2051, out_Tmp_2053, out_Tmp_2054, out_Tmp_2055, out_Tmp_2056, out_Tmp_2061, out_Tmp_2063, out_Tmp_2064, out_Tmp_2066, out_Tmp_2067, out_Tmp_2068, out_i_5, out_Tmp_2071, out_Tmp_2073, out_Tmp_2074, out_Tmp_2079, out_Tmp_2081, out_Tmp_2083, out_Tmp_2087, out_Tmp_2088, out_Tmp_2090, out_Tmp_2091, out_Tmp_2093, out_Tmp_2094, out_Tmp_2096, out_Tmp_2102, out_Tmp_2103, out_Tmp_2108, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_cIrql_9, out_Tmp_2117, out_Tmp_2121, out_Tmp_2122, out_Tmp_2127, out_Tmp_2129, out_DeviceObject_36 := in_Tmp_2006, in_Tmp_2007, in_Tmp_2009, in_Tmp_2013, in_pdoExtension_17, in_Tmp_2019, in_Tmp_2021, in_Tmp_2022, in_Tmp_2023, in_Tmp_2024, in_Tmp_2025, in_Tmp_2026, in_Tmp_2028, in_Tmp_2029, in_Tmp_2030, in_Tmp_2033, in_Tmp_2034, in_Tmp_2035, in_Tmp_2036, in_Tmp_2038, in_Tmp_2040, in_Tmp_2042, in_Tmp_2043, in_Tmp_2044, in_Tmp_2047, in_Tmp_2050, in_Tmp_2051, in_Tmp_2053, in_Tmp_2054, in_Tmp_2055, in_Tmp_2056, in_Tmp_2061, in_Tmp_2063, in_Tmp_2064, in_Tmp_2066, in_Tmp_2067, in_Tmp_2068, in_i_5, in_Tmp_2071, in_Tmp_2073, in_Tmp_2074, in_Tmp_2079, in_Tmp_2081, in_Tmp_2083, in_Tmp_2087, in_Tmp_2088, in_Tmp_2090, in_Tmp_2091, in_Tmp_2093, in_Tmp_2094, in_Tmp_2096, in_Tmp_2102, in_Tmp_2103, in_Tmp_2108, in_Tmp_2111, in_Tmp_2113, in_Tmp_2114, in_Tmp_2116, in_cIrql_9, in_Tmp_2117, in_Tmp_2121, in_Tmp_2122, in_Tmp_2127, in_Tmp_2129, in_DeviceObject_36;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    goto anon189_Else;

  anon189_Else:
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_i_5;
    out_Tmp_2053 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2022;
    assume {:nonnull} out_Tmp_2022 != 0;
    assume out_Tmp_2022 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    out_Tmp_2006 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2038;
    assume {:nonnull} out_Tmp_2038 != 0;
    assume out_Tmp_2038 > 0;
    havoc out_Tmp_2029;
    assume {:nonnull} out_Tmp_2029 != 0;
    assume out_Tmp_2029 > 0;
    out_pdoExtension_17 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(out_Tmp_2029)];
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    goto anon230_Else;

  anon230_Else:
    out_Tmp_2088 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2071;
    assume {:nonnull} out_Tmp_2071 != 0;
    assume out_Tmp_2071 > 0;
    havoc out_DeviceObject_36;
    out_Tmp_2079 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2117;
    assume {:nonnull} out_Tmp_2117 != 0;
    assume out_Tmp_2117 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    out_Tmp_2068 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2102;
    assume {:nonnull} out_Tmp_2102 != 0;
    assume out_Tmp_2102 > 0;
    call {:si_unique_call 3717} sdv_ExFreePool(0);
    out_Tmp_2063 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2081;
    assume {:nonnull} out_Tmp_2081 != 0;
    assume out_Tmp_2081 > 0;
    out_Tmp_2007 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2127;
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    goto L283;

  L283:
    out_Tmp_2087 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2044;
    assume {:nonnull} out_Tmp_2044 != 0;
    assume out_Tmp_2044 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    out_Tmp_2035 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2129;
    assume {:nonnull} out_Tmp_2129 != 0;
    assume out_Tmp_2129 > 0;
    call {:si_unique_call 3716} sdv_ExFreePool(0);
    out_Tmp_2114 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2083;
    assume {:nonnull} out_Tmp_2083 != 0;
    assume out_Tmp_2083 > 0;
    out_Tmp_2093 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2122;
    assume {:nonnull} out_Tmp_2122 != 0;
    assume out_Tmp_2122 > 0;
    goto L290;

  L290:
    out_Tmp_2030 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2040;
    assume {:nonnull} out_Tmp_2040 != 0;
    assume out_Tmp_2040 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    out_Tmp_2103 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2054;
    assume {:nonnull} out_Tmp_2054 != 0;
    assume out_Tmp_2054 > 0;
    call {:si_unique_call 3715} sdv_ExFreePool(0);
    out_Tmp_2066 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2025;
    assume {:nonnull} out_Tmp_2025 != 0;
    assume out_Tmp_2025 > 0;
    out_Tmp_2090 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2013;
    assume {:nonnull} out_Tmp_2013 != 0;
    assume out_Tmp_2013 > 0;
    goto L297;

  L297:
    out_Tmp_2073 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2028;
    assume {:nonnull} out_Tmp_2028 != 0;
    assume out_Tmp_2028 > 0;
    call {:si_unique_call 3712} sdv_KeReleaseSpinLock(0, out_cIrql_9);
    call {:si_unique_call 3713} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 3714} IoDeleteDevice(0);
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2047;
    assume {:nonnull} out_Tmp_2047 != 0;
    assume out_Tmp_2047 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc out_Tmp_2056;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2042;
    call {:si_unique_call 3711} WPP_SF_q(out_Tmp_2042, 37, out_Tmp_2056, out_pdoExtension_17);
    goto L317;

  L317:
    call {:si_unique_call 3706} out_Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    call {:si_unique_call 3707} sdv_KeAcquireSpinLock(0, out_Tmp_2067);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    havoc out_cIrql_9;
    goto L328;

  L328:
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    goto L328_dummy;

  L328_dummy:
    call {:si_unique_call 3718} {:si_old_unique_call 1} out_Tmp_2006, out_Tmp_2007, out_Tmp_2009, out_Tmp_2013, out_pdoExtension_17, out_Tmp_2019, out_Tmp_2021, out_Tmp_2022, out_Tmp_2023, out_Tmp_2024, out_Tmp_2025, out_Tmp_2026, out_Tmp_2028, out_Tmp_2029, out_Tmp_2030, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_Tmp_2038, out_Tmp_2040, out_Tmp_2042, out_Tmp_2043, out_Tmp_2044, out_Tmp_2047, out_Tmp_2050, out_Tmp_2051, out_Tmp_2053, out_Tmp_2054, out_Tmp_2055, out_Tmp_2056, out_Tmp_2061, out_Tmp_2063, out_Tmp_2064, out_Tmp_2066, out_Tmp_2067, out_Tmp_2068, out_i_5, out_Tmp_2071, out_Tmp_2073, out_Tmp_2074, out_Tmp_2079, out_Tmp_2081, out_Tmp_2083, out_Tmp_2087, out_Tmp_2088, out_Tmp_2090, out_Tmp_2091, out_Tmp_2093, out_Tmp_2094, out_Tmp_2096, out_Tmp_2102, out_Tmp_2103, out_Tmp_2108, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_cIrql_9, out_Tmp_2117, out_Tmp_2121, out_Tmp_2122, out_Tmp_2127, out_Tmp_2129, out_DeviceObject_36 := Sbp2CleanDeviceExtension#0_loop_L273(out_Tmp_2006, out_Tmp_2007, out_Tmp_2009, out_Tmp_2013, out_pdoExtension_17, out_Tmp_2019, out_Tmp_2021, out_Tmp_2022, out_Tmp_2023, out_Tmp_2024, out_Tmp_2025, out_Tmp_2026, out_Tmp_2028, out_Tmp_2029, out_Tmp_2030, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_Tmp_2038, out_Tmp_2040, out_Tmp_2042, out_Tmp_2043, out_Tmp_2044, out_Tmp_2047, out_Tmp_2050, out_Tmp_2051, out_Tmp_2053, out_Tmp_2054, out_Tmp_2055, out_Tmp_2056, out_Tmp_2061, out_Tmp_2063, out_Tmp_2064, out_Tmp_2066, out_Tmp_2067, out_Tmp_2068, out_i_5, out_Tmp_2071, out_Tmp_2073, out_Tmp_2074, out_Tmp_2079, out_Tmp_2081, out_Tmp_2083, out_Tmp_2087, out_Tmp_2088, out_Tmp_2090, out_Tmp_2091, out_Tmp_2093, out_Tmp_2094, out_Tmp_2096, out_Tmp_2102, out_Tmp_2103, in_fdoExtension_7, out_Tmp_2108, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_cIrql_9, out_Tmp_2117, out_Tmp_2121, out_Tmp_2122, out_Tmp_2127, out_Tmp_2129, out_DeviceObject_36);
    return;

  anon192_Then:
    goto L317;

  anon234_Then:
    goto L317;

  anon191_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon233_Then:
    goto L297;

  anon232_Then:
    goto L290;

  anon231_Then:
    goto L283;

  anon229_Then:
    goto L277;

  L277:
    out_Tmp_2051 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2024;
    assume {:nonnull} out_Tmp_2024 != 0;
    assume out_Tmp_2024 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    out_Tmp_2074 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2050;
    assume {:nonnull} out_Tmp_2050 != 0;
    assume out_Tmp_2050 > 0;
    call {:si_unique_call 3710} sdv_ExFreePool(0);
    out_Tmp_2019 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2026;
    assume {:nonnull} out_Tmp_2026 != 0;
    assume out_Tmp_2026 > 0;
    out_Tmp_2061 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2108;
    assume {:nonnull} out_Tmp_2108 != 0;
    assume out_Tmp_2108 > 0;
    goto L423;

  L423:
    out_Tmp_2121 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2055;
    assume {:nonnull} out_Tmp_2055 != 0;
    assume out_Tmp_2055 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    out_Tmp_2036 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2111;
    assume {:nonnull} out_Tmp_2111 != 0;
    assume out_Tmp_2111 > 0;
    call {:si_unique_call 3709} sdv_ExFreePool(0);
    out_Tmp_2034 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2064;
    assume {:nonnull} out_Tmp_2064 != 0;
    assume out_Tmp_2064 > 0;
    out_Tmp_2091 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2043;
    assume {:nonnull} out_Tmp_2043 != 0;
    assume out_Tmp_2043 > 0;
    goto L430;

  L430:
    out_Tmp_2096 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2033;
    assume {:nonnull} out_Tmp_2033 != 0;
    assume out_Tmp_2033 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    out_Tmp_2023 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2094;
    assume {:nonnull} out_Tmp_2094 != 0;
    assume out_Tmp_2094 > 0;
    call {:si_unique_call 3708} sdv_ExFreePool(0);
    out_Tmp_2113 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2021;
    assume {:nonnull} out_Tmp_2021 != 0;
    assume out_Tmp_2021 > 0;
    out_Tmp_2116 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2009;
    assume {:nonnull} out_Tmp_2009 != 0;
    assume out_Tmp_2009 > 0;
    goto L328;

  anon241_Then:
    goto L328;

  anon240_Then:
    goto L430;

  anon239_Then:
    goto L423;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#0_loop_L273(in_Tmp_2006: int, in_Tmp_2007: int, in_Tmp_2009: int, in_Tmp_2013: int, in_pdoExtension_17: int, in_Tmp_2019: int, in_Tmp_2021: int, in_Tmp_2022: int, in_Tmp_2023: int, in_Tmp_2024: int, in_Tmp_2025: int, in_Tmp_2026: int, in_Tmp_2028: int, in_Tmp_2029: int, in_Tmp_2030: int, in_Tmp_2033: int, in_Tmp_2034: int, in_Tmp_2035: int, in_Tmp_2036: int, in_Tmp_2038: int, in_Tmp_2040: int, in_Tmp_2042: int, in_Tmp_2043: int, in_Tmp_2044: int, in_Tmp_2047: int, in_Tmp_2050: int, in_Tmp_2051: int, in_Tmp_2053: int, in_Tmp_2054: int, in_Tmp_2055: int, in_Tmp_2056: int, in_Tmp_2061: int, in_Tmp_2063: int, in_Tmp_2064: int, in_Tmp_2066: int, in_Tmp_2067: int, in_Tmp_2068: int, in_i_5: int, in_Tmp_2071: int, in_Tmp_2073: int, in_Tmp_2074: int, in_Tmp_2079: int, in_Tmp_2081: int, in_Tmp_2083: int, in_Tmp_2087: int, in_Tmp_2088: int, in_Tmp_2090: int, in_Tmp_2091: int, in_Tmp_2093: int, in_Tmp_2094: int, in_Tmp_2096: int, in_Tmp_2102: int, in_Tmp_2103: int, in_fdoExtension_7: int, in_Tmp_2108: int, in_Tmp_2111: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2116: int, in_cIrql_9: int, in_Tmp_2117: int, in_Tmp_2121: int, in_Tmp_2122: int, in_Tmp_2127: int, in_Tmp_2129: int, in_DeviceObject_36: int) returns (out_Tmp_2006: int, out_Tmp_2007: int, out_Tmp_2009: int, out_Tmp_2013: int, out_pdoExtension_17: int, out_Tmp_2019: int, out_Tmp_2021: int, out_Tmp_2022: int, out_Tmp_2023: int, out_Tmp_2024: int, out_Tmp_2025: int, out_Tmp_2026: int, out_Tmp_2028: int, out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2033: int, out_Tmp_2034: int, out_Tmp_2035: int, out_Tmp_2036: int, out_Tmp_2038: int, out_Tmp_2040: int, out_Tmp_2042: int, out_Tmp_2043: int, out_Tmp_2044: int, out_Tmp_2047: int, out_Tmp_2050: int, out_Tmp_2051: int, out_Tmp_2053: int, out_Tmp_2054: int, out_Tmp_2055: int, out_Tmp_2056: int, out_Tmp_2061: int, out_Tmp_2063: int, out_Tmp_2064: int, out_Tmp_2066: int, out_Tmp_2067: int, out_Tmp_2068: int, out_i_5: int, out_Tmp_2071: int, out_Tmp_2073: int, out_Tmp_2074: int, out_Tmp_2079: int, out_Tmp_2081: int, out_Tmp_2083: int, out_Tmp_2087: int, out_Tmp_2088: int, out_Tmp_2090: int, out_Tmp_2091: int, out_Tmp_2093: int, out_Tmp_2094: int, out_Tmp_2096: int, out_Tmp_2102: int, out_Tmp_2103: int, out_Tmp_2108: int, out_Tmp_2111: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2116: int, out_cIrql_9: int, out_Tmp_2117: int, out_Tmp_2121: int, out_Tmp_2122: int, out_Tmp_2127: int, out_Tmp_2129: int, out_DeviceObject_36: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_17: int, in_i_5: int, in_context_2: int) returns (out_i_5: int, out_context_2: int)
{

  entry:
    out_i_5, out_context_2 := in_i_5, in_context_2;
    goto L147, exit;

  exit:
    return;

  L147:
    assume {:CounterLoop 8} {:Counter "i_5"} true;
    goto anon177_Else;

  anon177_Else:
    assume {:partition} 8 > out_i_5;
    assume {:nonnull} in_pdoExtension_17 != 0;
    assume in_pdoExtension_17 > 0;
    havoc out_context_2;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    assume {:nonnull} out_context_2 != 0;
    assume out_context_2 > 0;
    call {:si_unique_call 3719} FreeAddressRange#1(in_pdoExtension_17, AddressContext__PAGE_TABLE_CONTEXT(PageTableContext__ASYNC_REQUEST_CONTEXT(out_context_2)));
    goto anon219_Else;

  anon219_Else:
    assume {:partition} yogi_error != 1;
    goto L154;

  L154:
    out_i_5 := out_i_5 + 1;
    goto L154_dummy;

  L154_dummy:
    call {:si_unique_call 3720} {:si_old_unique_call 1} out_i_5, out_context_2 := Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_17, out_i_5, out_context_2);
    return;

  anon218_Then:
    goto L154;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L147(in_pdoExtension_17: int, in_i_5: int, in_context_2: int) returns (out_i_5: int, out_context_2: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == 1 || completion_called == old(completion_called);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L167(in_Tmp_2010: int, in_pdoExtension_17: int, in_sdv_670: int, in_statusFifoElement: int, in_Tmp_2075: int, in_Tmp_2115: int) returns (out_Tmp_2010: int, out_sdv_670: int, out_statusFifoElement: int, out_Tmp_2075: int, out_Tmp_2115: int)
{
  var vslice_dummy_var_1358: int;

  entry:
    out_Tmp_2010, out_sdv_670, out_statusFifoElement, out_Tmp_2075, out_Tmp_2115 := in_Tmp_2010, in_sdv_670, in_statusFifoElement, in_Tmp_2075, in_Tmp_2115;
    goto L167, exit;

  exit:
    return;

  L167:
    goto anon178_Else;

  anon178_Else:
    assume {:partition} out_statusFifoElement != 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2075;
    assume {:nonnull} out_Tmp_2075 != 0;
    assume out_Tmp_2075 > 0;
    goto anon220_Then, anon220_Else;

  anon220_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    havoc out_Tmp_2115;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2010;
    assume {:nonnull} in_pdoExtension_17 != 0;
    assume in_pdoExtension_17 > 0;
    havoc vslice_dummy_var_1358;
    call {:si_unique_call 3723} WPP_SF_qqq(out_Tmp_2010, 35, out_Tmp_2115, in_pdoExtension_17, out_statusFifoElement, vslice_dummy_var_1358);
    goto L175;

  L175:
    call {:si_unique_call 3721} IoFreeMdl(0);
    call {:si_unique_call 3722} out_sdv_670 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_statusFifoElement := out_sdv_670;
    goto L175_dummy;

  L175_dummy:
    call {:si_unique_call 3724} {:si_old_unique_call 1} out_Tmp_2010, out_sdv_670, out_statusFifoElement, out_Tmp_2075, out_Tmp_2115 := Sbp2CleanDeviceExtension#1_loop_L167(out_Tmp_2010, in_pdoExtension_17, out_sdv_670, out_statusFifoElement, out_Tmp_2075, out_Tmp_2115);
    return;

  anon180_Then:
    goto L175;

  anon220_Then:
    goto L175;

  anon179_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L175;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L167(in_Tmp_2010: int, in_pdoExtension_17: int, in_sdv_670: int, in_statusFifoElement: int, in_Tmp_2075: int, in_Tmp_2115: int) returns (out_Tmp_2010: int, out_sdv_670: int, out_statusFifoElement: int, out_Tmp_2075: int, out_Tmp_2115: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L191(in_sdv_669: int, in_Tmp_2109: int, in_packet_13: int) returns (out_sdv_669: int, out_Tmp_2109: int, out_packet_13: int)
{

  entry:
    out_sdv_669, out_Tmp_2109, out_packet_13 := in_sdv_669, in_Tmp_2109, in_packet_13;
    goto L191, exit;

  exit:
    return;

  L191:
    goto anon181_Else;

  anon181_Else:
    assume {:partition} out_packet_13 != 0;
    call {:si_unique_call 3728} sdv_ExFreePool(0);
    assume {:nonnull} out_packet_13 != 0;
    assume out_packet_13 > 0;
    havoc out_Tmp_2109;
    assume {:nonnull} out_Tmp_2109 != 0;
    assume out_Tmp_2109 > 0;
    goto anon221_Then, anon221_Else;

  anon221_Else:
    call {:si_unique_call 3727} IoFreeIrp(0);
    goto L199;

  L199:
    call {:si_unique_call 3725} ExFreePoolWithTag(0, -347053485);
    call {:si_unique_call 3726} out_sdv_669 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_packet_13 := out_sdv_669;
    goto L199_dummy;

  L199_dummy:
    call {:si_unique_call 3729} {:si_old_unique_call 1} out_sdv_669, out_Tmp_2109, out_packet_13 := Sbp2CleanDeviceExtension#1_loop_L191(out_sdv_669, out_Tmp_2109, out_packet_13);
    return;

  anon221_Then:
    goto L199;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L191(in_sdv_669: int, in_Tmp_2109: int, in_packet_13: int) returns (out_sdv_669: int, out_Tmp_2109: int, out_packet_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L33(in_Tmp_2018: int, in_i_5: int, in_Tmp_2089: int, in_Tmp_2099: int, in_Tmp_2104: int, in_fdoExtension_7: int, in_DeviceObject_36: int) returns (out_Tmp_2018: int, out_i_5: int, out_Tmp_2089: int, out_Tmp_2099: int, out_Tmp_2104: int)
{

  entry:
    out_Tmp_2018, out_i_5, out_Tmp_2089, out_Tmp_2099, out_Tmp_2104 := in_Tmp_2018, in_i_5, in_Tmp_2089, in_Tmp_2099, in_Tmp_2104;
    goto L33, exit;

  exit:
    return;

  L33:
    out_Tmp_2089 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2104;
    assume {:nonnull} out_Tmp_2104 != 0;
    assume out_Tmp_2104 > 0;
    goto anon204_Else;

  anon204_Else:
    out_Tmp_2018 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2099;
    assume {:nonnull} out_Tmp_2099 != 0;
    assume out_Tmp_2099 > 0;
    goto anon205_Then;

  anon205_Then:
    out_i_5 := out_i_5 + 1;
    goto anon205_Then_dummy;

  anon205_Then_dummy:
    havoc out_i_5;
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L33(in_Tmp_2018: int, in_i_5: int, in_Tmp_2089: int, in_Tmp_2099: int, in_Tmp_2104: int, in_fdoExtension_7: int, in_DeviceObject_36: int) returns (out_Tmp_2018: int, out_i_5: int, out_Tmp_2089: int, out_Tmp_2099: int, out_Tmp_2104: int);
  free ensures {:va_keep} out_Tmp_2018 == in_i_5 || out_Tmp_2018 == in_Tmp_2018;
  free ensures {:va_keep} out_Tmp_2089 == in_i_5 || out_Tmp_2089 == in_Tmp_2089;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_17: int, in_sdv_674: int, in_vslice_dummy_var_404: int) returns (out_sdv_674: int, out_vslice_dummy_var_404: int)
{

  entry:
    out_sdv_674, out_vslice_dummy_var_404 := in_sdv_674, in_vslice_dummy_var_404;
    goto L379, exit;

  exit:
    return;

  L379:
    call {:si_unique_call 3730} out_sdv_674 := sdv_IsListEmpty(0);
    goto anon197_Else;

  anon197_Else:
    assume {:partition} out_sdv_674 == 0;
    assume {:nonnull} in_pdoExtension_17 != 0;
    assume in_pdoExtension_17 > 0;
    call {:si_unique_call 3731} out_vslice_dummy_var_404 := sdv_RemoveEntryList(0);
    call {:si_unique_call 3732} sdv_ExFreePool(0);
    goto anon197_Else_dummy;

  anon197_Else_dummy:
    call {:si_unique_call 3733} {:si_old_unique_call 1} out_sdv_674, out_vslice_dummy_var_404 := Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_17, out_sdv_674, out_vslice_dummy_var_404);
    return;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L379(in_pdoExtension_17: int, in_sdv_674: int, in_vslice_dummy_var_404: int) returns (out_sdv_674: int, out_vslice_dummy_var_404: int);
  modifies alloc;
  free ensures {:va_keep} out_sdv_674 == 1 || out_sdv_674 == 0 || out_sdv_674 == in_sdv_674;
  free ensures {:va_keep} out_vslice_dummy_var_404 == 1 || out_vslice_dummy_var_404 == 0 || out_vslice_dummy_var_404 == in_vslice_dummy_var_404;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2CleanDeviceExtension#1_loop_L273(in_Tmp_2006: int, in_Tmp_2007: int, in_Tmp_2009: int, in_Tmp_2011: int, in_Tmp_2013: int, in_Tmp_2014: int, in_pdoExtension_17: int, in_Tmp_2019: int, in_Tmp_2021: int, in_Tmp_2022: int, in_Tmp_2023: int, in_Tmp_2024: int, in_Tmp_2025: int, in_Tmp_2026: int, in_Tmp_2028: int, in_Tmp_2029: int, in_Tmp_2030: int, in_Tmp_2033: int, in_Tmp_2034: int, in_Tmp_2035: int, in_Tmp_2036: int, in_Tmp_2038: int, in_Tmp_2040: int, in_Tmp_2042: int, in_Tmp_2043: int, in_Tmp_2044: int, in_Tmp_2045: int, in_Tmp_2047: int, in_sdv_674: int, in_Tmp_2049: int, in_Tmp_2050: int, in_Tmp_2051: int, in_Tmp_2053: int, in_Tmp_2054: int, in_Tmp_2055: int, in_Tmp_2056: int, in_status_62: int, in_Tmp_2061: int, in_Tmp_2062: int, in_Tmp_2063: int, in_Tmp_2064: int, in_Tmp_2066: int, in_Tmp_2067: int, in_Tmp_2068: int, in_i_5: int, in_Tmp_2069: int, in_Tmp_2071: int, in_Tmp_2073: int, in_Tmp_2074: int, in_Tmp_2076: int, in_Tmp_2079: int, in_Tmp_2081: int, in_Tmp_2082: int, in_Tmp_2083: int, in_Tmp_2084: int, in_Tmp_2087: int, in_Tmp_2088: int, in_Tmp_2090: int, in_Tmp_2091: int, in_Tmp_2093: int, in_Tmp_2094: int, in_Tmp_2096: int, in_Tmp_2097: int, in_Tmp_2102: int, in_Tmp_2103: int, in_sdv_679: int, in_fdoExtension_7: int, in_Tmp_2106: int, in_Tmp_2108: int, in_Tmp_2111: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2116: int, in_cIrql_9: int, in_Tmp_2117: int, in_Tmp_2121: int, in_Tmp_2122: int, in_Tmp_2123: int, in_Tmp_2126: int, in_Tmp_2127: int, in_Tmp_2129: int, in_DeviceObject_36: int, in_vslice_dummy_var_399: int, in_vslice_dummy_var_403: int, in_vslice_dummy_var_404: int) returns (out_Tmp_2006: int, out_Tmp_2007: int, out_Tmp_2009: int, out_Tmp_2011: int, out_Tmp_2013: int, out_Tmp_2014: int, out_pdoExtension_17: int, out_Tmp_2019: int, out_Tmp_2021: int, out_Tmp_2022: int, out_Tmp_2023: int, out_Tmp_2024: int, out_Tmp_2025: int, out_Tmp_2026: int, out_Tmp_2028: int, out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2033: int, out_Tmp_2034: int, out_Tmp_2035: int, out_Tmp_2036: int, out_Tmp_2038: int, out_Tmp_2040: int, out_Tmp_2042: int, out_Tmp_2043: int, out_Tmp_2044: int, out_Tmp_2045: int, out_Tmp_2047: int, out_sdv_674: int, out_Tmp_2049: int, out_Tmp_2050: int, out_Tmp_2051: int, out_Tmp_2053: int, out_Tmp_2054: int, out_Tmp_2055: int, out_Tmp_2056: int, out_status_62: int, out_Tmp_2061: int, out_Tmp_2062: int, out_Tmp_2063: int, out_Tmp_2064: int, out_Tmp_2066: int, out_Tmp_2067: int, out_Tmp_2068: int, out_i_5: int, out_Tmp_2069: int, out_Tmp_2071: int, out_Tmp_2073: int, out_Tmp_2074: int, out_Tmp_2076: int, out_Tmp_2079: int, out_Tmp_2081: int, out_Tmp_2082: int, out_Tmp_2083: int, out_Tmp_2084: int, out_Tmp_2087: int, out_Tmp_2088: int, out_Tmp_2090: int, out_Tmp_2091: int, out_Tmp_2093: int, out_Tmp_2094: int, out_Tmp_2096: int, out_Tmp_2097: int, out_Tmp_2102: int, out_Tmp_2103: int, out_sdv_679: int, out_Tmp_2106: int, out_Tmp_2108: int, out_Tmp_2111: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2116: int, out_cIrql_9: int, out_Tmp_2117: int, out_Tmp_2121: int, out_Tmp_2122: int, out_Tmp_2123: int, out_Tmp_2126: int, out_Tmp_2127: int, out_Tmp_2129: int, out_DeviceObject_36: int, out_vslice_dummy_var_399: int, out_vslice_dummy_var_403: int, out_vslice_dummy_var_404: int)
{

  entry:
    out_Tmp_2006, out_Tmp_2007, out_Tmp_2009, out_Tmp_2011, out_Tmp_2013, out_Tmp_2014, out_pdoExtension_17, out_Tmp_2019, out_Tmp_2021, out_Tmp_2022, out_Tmp_2023, out_Tmp_2024, out_Tmp_2025, out_Tmp_2026, out_Tmp_2028, out_Tmp_2029, out_Tmp_2030, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_Tmp_2038, out_Tmp_2040, out_Tmp_2042, out_Tmp_2043, out_Tmp_2044, out_Tmp_2045, out_Tmp_2047, out_sdv_674, out_Tmp_2049, out_Tmp_2050, out_Tmp_2051, out_Tmp_2053, out_Tmp_2054, out_Tmp_2055, out_Tmp_2056, out_status_62, out_Tmp_2061, out_Tmp_2062, out_Tmp_2063, out_Tmp_2064, out_Tmp_2066, out_Tmp_2067, out_Tmp_2068, out_i_5, out_Tmp_2069, out_Tmp_2071, out_Tmp_2073, out_Tmp_2074, out_Tmp_2076, out_Tmp_2079, out_Tmp_2081, out_Tmp_2082, out_Tmp_2083, out_Tmp_2084, out_Tmp_2087, out_Tmp_2088, out_Tmp_2090, out_Tmp_2091, out_Tmp_2093, out_Tmp_2094, out_Tmp_2096, out_Tmp_2097, out_Tmp_2102, out_Tmp_2103, out_sdv_679, out_Tmp_2106, out_Tmp_2108, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_cIrql_9, out_Tmp_2117, out_Tmp_2121, out_Tmp_2122, out_Tmp_2123, out_Tmp_2126, out_Tmp_2127, out_Tmp_2129, out_DeviceObject_36, out_vslice_dummy_var_399, out_vslice_dummy_var_403, out_vslice_dummy_var_404 := in_Tmp_2006, in_Tmp_2007, in_Tmp_2009, in_Tmp_2011, in_Tmp_2013, in_Tmp_2014, in_pdoExtension_17, in_Tmp_2019, in_Tmp_2021, in_Tmp_2022, in_Tmp_2023, in_Tmp_2024, in_Tmp_2025, in_Tmp_2026, in_Tmp_2028, in_Tmp_2029, in_Tmp_2030, in_Tmp_2033, in_Tmp_2034, in_Tmp_2035, in_Tmp_2036, in_Tmp_2038, in_Tmp_2040, in_Tmp_2042, in_Tmp_2043, in_Tmp_2044, in_Tmp_2045, in_Tmp_2047, in_sdv_674, in_Tmp_2049, in_Tmp_2050, in_Tmp_2051, in_Tmp_2053, in_Tmp_2054, in_Tmp_2055, in_Tmp_2056, in_status_62, in_Tmp_2061, in_Tmp_2062, in_Tmp_2063, in_Tmp_2064, in_Tmp_2066, in_Tmp_2067, in_Tmp_2068, in_i_5, in_Tmp_2069, in_Tmp_2071, in_Tmp_2073, in_Tmp_2074, in_Tmp_2076, in_Tmp_2079, in_Tmp_2081, in_Tmp_2082, in_Tmp_2083, in_Tmp_2084, in_Tmp_2087, in_Tmp_2088, in_Tmp_2090, in_Tmp_2091, in_Tmp_2093, in_Tmp_2094, in_Tmp_2096, in_Tmp_2097, in_Tmp_2102, in_Tmp_2103, in_sdv_679, in_Tmp_2106, in_Tmp_2108, in_Tmp_2111, in_Tmp_2113, in_Tmp_2114, in_Tmp_2116, in_cIrql_9, in_Tmp_2117, in_Tmp_2121, in_Tmp_2122, in_Tmp_2123, in_Tmp_2126, in_Tmp_2127, in_Tmp_2129, in_DeviceObject_36, in_vslice_dummy_var_399, in_vslice_dummy_var_403, in_vslice_dummy_var_404;
    goto L273, exit;

  exit:
    return;

  L273:
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    goto anon189_Else;

  anon189_Else:
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_i_5;
    out_Tmp_2053 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2022;
    assume {:nonnull} out_Tmp_2022 != 0;
    assume out_Tmp_2022 > 0;
    goto anon229_Then, anon229_Else;

  anon229_Else:
    out_Tmp_2006 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2038;
    assume {:nonnull} out_Tmp_2038 != 0;
    assume out_Tmp_2038 > 0;
    havoc out_Tmp_2029;
    assume {:nonnull} out_Tmp_2029 != 0;
    assume out_Tmp_2029 > 0;
    out_pdoExtension_17 := Mem_T.DeviceExtension__DEVICE_OBJECT[DeviceExtension__DEVICE_OBJECT(out_Tmp_2029)];
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    goto anon230_Then, anon230_Else;

  anon230_Else:
    out_Tmp_2088 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2071;
    assume {:nonnull} out_Tmp_2071 != 0;
    assume out_Tmp_2071 > 0;
    havoc out_DeviceObject_36;
    out_Tmp_2079 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2117;
    assume {:nonnull} out_Tmp_2117 != 0;
    assume out_Tmp_2117 > 0;
    goto anon231_Then, anon231_Else;

  anon231_Else:
    out_Tmp_2068 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2102;
    assume {:nonnull} out_Tmp_2102 != 0;
    assume out_Tmp_2102 > 0;
    call {:si_unique_call 3770} sdv_ExFreePool(0);
    out_Tmp_2063 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2081;
    assume {:nonnull} out_Tmp_2081 != 0;
    assume out_Tmp_2081 > 0;
    out_Tmp_2007 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2127;
    assume {:nonnull} out_Tmp_2127 != 0;
    assume out_Tmp_2127 > 0;
    goto L283;

  L283:
    out_Tmp_2087 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2044;
    assume {:nonnull} out_Tmp_2044 != 0;
    assume out_Tmp_2044 > 0;
    goto anon232_Then, anon232_Else;

  anon232_Else:
    out_Tmp_2035 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2129;
    assume {:nonnull} out_Tmp_2129 != 0;
    assume out_Tmp_2129 > 0;
    call {:si_unique_call 3769} sdv_ExFreePool(0);
    out_Tmp_2114 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2083;
    assume {:nonnull} out_Tmp_2083 != 0;
    assume out_Tmp_2083 > 0;
    out_Tmp_2093 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2122;
    assume {:nonnull} out_Tmp_2122 != 0;
    assume out_Tmp_2122 > 0;
    goto L290;

  L290:
    out_Tmp_2030 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2040;
    assume {:nonnull} out_Tmp_2040 != 0;
    assume out_Tmp_2040 > 0;
    goto anon233_Then, anon233_Else;

  anon233_Else:
    out_Tmp_2103 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2054;
    assume {:nonnull} out_Tmp_2054 != 0;
    assume out_Tmp_2054 > 0;
    call {:si_unique_call 3768} sdv_ExFreePool(0);
    out_Tmp_2066 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2025;
    assume {:nonnull} out_Tmp_2025 != 0;
    assume out_Tmp_2025 > 0;
    out_Tmp_2090 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2013;
    assume {:nonnull} out_Tmp_2013 != 0;
    assume out_Tmp_2013 > 0;
    goto L297;

  L297:
    out_Tmp_2073 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2028;
    assume {:nonnull} out_Tmp_2028 != 0;
    assume out_Tmp_2028 > 0;
    call {:si_unique_call 3765} sdv_KeReleaseSpinLock(0, out_cIrql_9);
    call {:si_unique_call 3766} sdv_IoReleaseRemoveLockAndWait(0, 0);
    call {:si_unique_call 3767} IoDeleteDevice(0);
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2047;
    assume {:nonnull} out_Tmp_2047 != 0;
    assume out_Tmp_2047 > 0;
    goto anon234_Then, anon234_Else;

  anon234_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    havoc out_Tmp_2056;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2042;
    call {:si_unique_call 3764} WPP_SF_q(out_Tmp_2042, 37, out_Tmp_2056, out_pdoExtension_17);
    goto L317;

  L317:
    call {:si_unique_call 3734} out_Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    call {:si_unique_call 3735} sdv_KeAcquireSpinLock(0, out_Tmp_2067);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    havoc out_cIrql_9;
    goto L328;

  L328:
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    goto L328_dummy;

  L328_dummy:
    call {:si_unique_call 3771} {:si_old_unique_call 1} out_Tmp_2006, out_Tmp_2007, out_Tmp_2009, out_Tmp_2011, out_Tmp_2013, out_Tmp_2014, out_pdoExtension_17, out_Tmp_2019, out_Tmp_2021, out_Tmp_2022, out_Tmp_2023, out_Tmp_2024, out_Tmp_2025, out_Tmp_2026, out_Tmp_2028, out_Tmp_2029, out_Tmp_2030, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_Tmp_2038, out_Tmp_2040, out_Tmp_2042, out_Tmp_2043, out_Tmp_2044, out_Tmp_2045, out_Tmp_2047, out_sdv_674, out_Tmp_2049, out_Tmp_2050, out_Tmp_2051, out_Tmp_2053, out_Tmp_2054, out_Tmp_2055, out_Tmp_2056, out_status_62, out_Tmp_2061, out_Tmp_2062, out_Tmp_2063, out_Tmp_2064, out_Tmp_2066, out_Tmp_2067, out_Tmp_2068, out_i_5, out_Tmp_2069, out_Tmp_2071, out_Tmp_2073, out_Tmp_2074, out_Tmp_2076, out_Tmp_2079, out_Tmp_2081, out_Tmp_2082, out_Tmp_2083, out_Tmp_2084, out_Tmp_2087, out_Tmp_2088, out_Tmp_2090, out_Tmp_2091, out_Tmp_2093, out_Tmp_2094, out_Tmp_2096, out_Tmp_2097, out_Tmp_2102, out_Tmp_2103, out_sdv_679, out_Tmp_2106, out_Tmp_2108, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_cIrql_9, out_Tmp_2117, out_Tmp_2121, out_Tmp_2122, out_Tmp_2123, out_Tmp_2126, out_Tmp_2127, out_Tmp_2129, out_DeviceObject_36, out_vslice_dummy_var_399, out_vslice_dummy_var_403, out_vslice_dummy_var_404 := Sbp2CleanDeviceExtension#1_loop_L273(out_Tmp_2006, out_Tmp_2007, out_Tmp_2009, out_Tmp_2011, out_Tmp_2013, out_Tmp_2014, out_pdoExtension_17, out_Tmp_2019, out_Tmp_2021, out_Tmp_2022, out_Tmp_2023, out_Tmp_2024, out_Tmp_2025, out_Tmp_2026, out_Tmp_2028, out_Tmp_2029, out_Tmp_2030, out_Tmp_2033, out_Tmp_2034, out_Tmp_2035, out_Tmp_2036, out_Tmp_2038, out_Tmp_2040, out_Tmp_2042, out_Tmp_2043, out_Tmp_2044, out_Tmp_2045, out_Tmp_2047, out_sdv_674, out_Tmp_2049, out_Tmp_2050, out_Tmp_2051, out_Tmp_2053, out_Tmp_2054, out_Tmp_2055, out_Tmp_2056, out_status_62, out_Tmp_2061, out_Tmp_2062, out_Tmp_2063, out_Tmp_2064, out_Tmp_2066, out_Tmp_2067, out_Tmp_2068, out_i_5, out_Tmp_2069, out_Tmp_2071, out_Tmp_2073, out_Tmp_2074, out_Tmp_2076, out_Tmp_2079, out_Tmp_2081, out_Tmp_2082, out_Tmp_2083, out_Tmp_2084, out_Tmp_2087, out_Tmp_2088, out_Tmp_2090, out_Tmp_2091, out_Tmp_2093, out_Tmp_2094, out_Tmp_2096, out_Tmp_2097, out_Tmp_2102, out_Tmp_2103, out_sdv_679, in_fdoExtension_7, out_Tmp_2106, out_Tmp_2108, out_Tmp_2111, out_Tmp_2113, out_Tmp_2114, out_Tmp_2116, out_cIrql_9, out_Tmp_2117, out_Tmp_2121, out_Tmp_2122, out_Tmp_2123, out_Tmp_2126, out_Tmp_2127, out_Tmp_2129, out_DeviceObject_36, out_vslice_dummy_var_399, out_vslice_dummy_var_403, out_vslice_dummy_var_404);
    return;

  anon192_Then:
    goto L317;

  anon234_Then:
    goto L317;

  anon191_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L317;

  anon233_Then:
    goto L297;

  anon232_Then:
    goto L290;

  anon231_Then:
    goto L283;

  anon230_Then:
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    out_Tmp_2014 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2062;
    assume {:nonnull} out_Tmp_2062 != 0;
    assume out_Tmp_2062 > 0;
    havoc out_DeviceObject_36;
    call {:si_unique_call 3743} sdv_KeReleaseSpinLock(0, out_cIrql_9);
    call {:si_unique_call 3744} out_sdv_679 := Sbp2CleanDeviceExtension#0(out_DeviceObject_36, 1, 0);
    goto anon235_Else;

  anon235_Else:
    assume {:partition} yogi_error != 1;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} out_sdv_679 != 0;
    call {:si_unique_call 3763} out_status_62 := sdv_IoAcquireRemoveLock(0, 0);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} out_status_62 < 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2097;
    assume {:nonnull} out_Tmp_2097 != 0;
    assume out_Tmp_2097 > 0;
    goto anon242_Then, anon242_Else;

  anon242_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    havoc out_Tmp_2082;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2123;
    call {:si_unique_call 3762} WPP_SF_qD(out_Tmp_2123, 38, out_Tmp_2082, out_DeviceObject_36, out_status_62);
    goto L348;

  L348:
    call {:si_unique_call 3759} out_Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    call {:si_unique_call 3760} sdv_KeRaiseIrql(2, out_Tmp_2067);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    havoc out_cIrql_9;
    call {:si_unique_call 3761} Sbp2StartNextPacketByKey#1(out_DeviceObject_36, 0);
    goto anon236_Else;

  anon236_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 3758} sdv_KeLowerIrql(out_cIrql_9);
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2069;
    assume {:nonnull} out_Tmp_2069 != 0;
    assume out_Tmp_2069 > 0;
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    havoc out_Tmp_2049;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2011;
    call {:si_unique_call 3757} WPP_SF_qq(out_Tmp_2011, 39, out_Tmp_2049, out_pdoExtension_17, out_DeviceObject_36);
    goto L361;

  L361:
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    call {:si_unique_call 3752} out_vslice_dummy_var_403 := KeSetEvent(ManagementEvent__DEVICE_EXTENSION(out_pdoExtension_17), 0, 0);
    call {:si_unique_call 3753} out_vslice_dummy_var_399 := KeCancelTimer(0);
    call {:si_unique_call 3754} sdv_IoReleaseRemoveLockAndWait(0, 0);
    goto L379;

  L379:
    call {:si_unique_call 3750} out_sdv_674, out_vslice_dummy_var_404 := Sbp2CleanDeviceExtension#1_loop_L379(out_pdoExtension_17, out_sdv_674, out_vslice_dummy_var_404);
    goto L379_last;

  L379_last:
    call {:si_unique_call 3751} out_sdv_674 := sdv_IsListEmpty(0);
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} out_sdv_674 == 0;
    assume {:nonnull} out_pdoExtension_17 != 0;
    assume out_pdoExtension_17 > 0;
    call {:si_unique_call 3755} out_vslice_dummy_var_404 := sdv_RemoveEntryList(0);
    call {:si_unique_call 3756} sdv_ExFreePool(0);
    assume false;
    return;

  anon197_Then:
    assume {:partition} out_sdv_674 != 0;
    call {:si_unique_call 3746} out_Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    call {:si_unique_call 3747} sdv_KeAcquireSpinLock(0, out_Tmp_2067);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    havoc out_cIrql_9;
    out_Tmp_2076 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2106;
    assume {:nonnull} out_Tmp_2106 != 0;
    assume out_Tmp_2106 > 0;
    call {:si_unique_call 3748} sdv_KeReleaseSpinLock(0, out_cIrql_9);
    call {:si_unique_call 3749} IoDeleteDevice(0);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != WPP_GLOBAL_Control;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2126;
    assume {:nonnull} out_Tmp_2126 != 0;
    assume out_Tmp_2126 > 0;
    goto anon238_Then, anon238_Else;

  anon238_Else:
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    havoc out_Tmp_2045;
    assume {:nonnull} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] != 0;
    assume Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] > 0;
    havoc out_Tmp_2084;
    call {:si_unique_call 3745} WPP_SF_q(out_Tmp_2084, 40, out_Tmp_2045, out_pdoExtension_17);
    goto L398;

  L398:
    call {:si_unique_call 3739} out_Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    call {:si_unique_call 3740} sdv_KeAcquireSpinLock(0, out_Tmp_2067);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    havoc out_cIrql_9;
    goto L277;

  L277:
    out_Tmp_2051 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2024;
    assume {:nonnull} out_Tmp_2024 != 0;
    assume out_Tmp_2024 > 0;
    goto anon239_Then, anon239_Else;

  anon239_Else:
    out_Tmp_2074 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2050;
    assume {:nonnull} out_Tmp_2050 != 0;
    assume out_Tmp_2050 > 0;
    call {:si_unique_call 3738} sdv_ExFreePool(0);
    out_Tmp_2019 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2026;
    assume {:nonnull} out_Tmp_2026 != 0;
    assume out_Tmp_2026 > 0;
    out_Tmp_2061 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2108;
    assume {:nonnull} out_Tmp_2108 != 0;
    assume out_Tmp_2108 > 0;
    goto L423;

  L423:
    out_Tmp_2121 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2055;
    assume {:nonnull} out_Tmp_2055 != 0;
    assume out_Tmp_2055 > 0;
    goto anon240_Then, anon240_Else;

  anon240_Else:
    out_Tmp_2036 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2111;
    assume {:nonnull} out_Tmp_2111 != 0;
    assume out_Tmp_2111 > 0;
    call {:si_unique_call 3737} sdv_ExFreePool(0);
    out_Tmp_2034 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2064;
    assume {:nonnull} out_Tmp_2064 != 0;
    assume out_Tmp_2064 > 0;
    out_Tmp_2091 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2043;
    assume {:nonnull} out_Tmp_2043 != 0;
    assume out_Tmp_2043 > 0;
    goto L430;

  L430:
    out_Tmp_2096 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2033;
    assume {:nonnull} out_Tmp_2033 != 0;
    assume out_Tmp_2033 > 0;
    goto anon241_Then, anon241_Else;

  anon241_Else:
    out_Tmp_2023 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2094;
    assume {:nonnull} out_Tmp_2094 != 0;
    assume out_Tmp_2094 > 0;
    call {:si_unique_call 3736} sdv_ExFreePool(0);
    out_Tmp_2113 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2021;
    assume {:nonnull} out_Tmp_2021 != 0;
    assume out_Tmp_2021 > 0;
    out_Tmp_2116 := out_i_5;
    assume {:nonnull} in_fdoExtension_7 != 0;
    assume in_fdoExtension_7 > 0;
    havoc out_Tmp_2009;
    assume {:nonnull} out_Tmp_2009 != 0;
    assume out_Tmp_2009 > 0;
    goto L328;

  anon241_Then:
    goto L328;

  anon240_Then:
    goto L430;

  anon239_Then:
    goto L423;

  anon199_Then:
    goto L398;

  anon238_Then:
    goto L398;

  anon198_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L398;

  anon196_Then:
    goto L361;

  anon237_Then:
    goto L361;

  anon195_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L361;

  anon201_Then:
    goto L348;

  anon242_Then:
    goto L348;

  anon200_Then:
    assume {:partition} Mem_T.PWPP_PROJECT_CONTROL_BLOCK[WPP_GLOBAL_Control] == WPP_GLOBAL_Control;
    goto L348;

  anon194_Then:
    assume {:partition} 0 <= out_status_62;
    goto L348;

  anon193_Then:
    assume {:partition} out_sdv_679 == 0;
    call {:si_unique_call 3741} out_Tmp_2067 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    call {:si_unique_call 3742} sdv_KeAcquireSpinLock(0, out_Tmp_2067);
    assume {:nonnull} out_Tmp_2067 != 0;
    assume out_Tmp_2067 > 0;
    havoc out_cIrql_9;
    goto L277;

  anon229_Then:
    goto L277;
}



procedure {:LoopProcedure} Sbp2CleanDeviceExtension#1_loop_L273(in_Tmp_2006: int, in_Tmp_2007: int, in_Tmp_2009: int, in_Tmp_2011: int, in_Tmp_2013: int, in_Tmp_2014: int, in_pdoExtension_17: int, in_Tmp_2019: int, in_Tmp_2021: int, in_Tmp_2022: int, in_Tmp_2023: int, in_Tmp_2024: int, in_Tmp_2025: int, in_Tmp_2026: int, in_Tmp_2028: int, in_Tmp_2029: int, in_Tmp_2030: int, in_Tmp_2033: int, in_Tmp_2034: int, in_Tmp_2035: int, in_Tmp_2036: int, in_Tmp_2038: int, in_Tmp_2040: int, in_Tmp_2042: int, in_Tmp_2043: int, in_Tmp_2044: int, in_Tmp_2045: int, in_Tmp_2047: int, in_sdv_674: int, in_Tmp_2049: int, in_Tmp_2050: int, in_Tmp_2051: int, in_Tmp_2053: int, in_Tmp_2054: int, in_Tmp_2055: int, in_Tmp_2056: int, in_status_62: int, in_Tmp_2061: int, in_Tmp_2062: int, in_Tmp_2063: int, in_Tmp_2064: int, in_Tmp_2066: int, in_Tmp_2067: int, in_Tmp_2068: int, in_i_5: int, in_Tmp_2069: int, in_Tmp_2071: int, in_Tmp_2073: int, in_Tmp_2074: int, in_Tmp_2076: int, in_Tmp_2079: int, in_Tmp_2081: int, in_Tmp_2082: int, in_Tmp_2083: int, in_Tmp_2084: int, in_Tmp_2087: int, in_Tmp_2088: int, in_Tmp_2090: int, in_Tmp_2091: int, in_Tmp_2093: int, in_Tmp_2094: int, in_Tmp_2096: int, in_Tmp_2097: int, in_Tmp_2102: int, in_Tmp_2103: int, in_sdv_679: int, in_fdoExtension_7: int, in_Tmp_2106: int, in_Tmp_2108: int, in_Tmp_2111: int, in_Tmp_2113: int, in_Tmp_2114: int, in_Tmp_2116: int, in_cIrql_9: int, in_Tmp_2117: int, in_Tmp_2121: int, in_Tmp_2122: int, in_Tmp_2123: int, in_Tmp_2126: int, in_Tmp_2127: int, in_Tmp_2129: int, in_DeviceObject_36: int, in_vslice_dummy_var_399: int, in_vslice_dummy_var_403: int, in_vslice_dummy_var_404: int) returns (out_Tmp_2006: int, out_Tmp_2007: int, out_Tmp_2009: int, out_Tmp_2011: int, out_Tmp_2013: int, out_Tmp_2014: int, out_pdoExtension_17: int, out_Tmp_2019: int, out_Tmp_2021: int, out_Tmp_2022: int, out_Tmp_2023: int, out_Tmp_2024: int, out_Tmp_2025: int, out_Tmp_2026: int, out_Tmp_2028: int, out_Tmp_2029: int, out_Tmp_2030: int, out_Tmp_2033: int, out_Tmp_2034: int, out_Tmp_2035: int, out_Tmp_2036: int, out_Tmp_2038: int, out_Tmp_2040: int, out_Tmp_2042: int, out_Tmp_2043: int, out_Tmp_2044: int, out_Tmp_2045: int, out_Tmp_2047: int, out_sdv_674: int, out_Tmp_2049: int, out_Tmp_2050: int, out_Tmp_2051: int, out_Tmp_2053: int, out_Tmp_2054: int, out_Tmp_2055: int, out_Tmp_2056: int, out_status_62: int, out_Tmp_2061: int, out_Tmp_2062: int, out_Tmp_2063: int, out_Tmp_2064: int, out_Tmp_2066: int, out_Tmp_2067: int, out_Tmp_2068: int, out_i_5: int, out_Tmp_2069: int, out_Tmp_2071: int, out_Tmp_2073: int, out_Tmp_2074: int, out_Tmp_2076: int, out_Tmp_2079: int, out_Tmp_2081: int, out_Tmp_2082: int, out_Tmp_2083: int, out_Tmp_2084: int, out_Tmp_2087: int, out_Tmp_2088: int, out_Tmp_2090: int, out_Tmp_2091: int, out_Tmp_2093: int, out_Tmp_2094: int, out_Tmp_2096: int, out_Tmp_2097: int, out_Tmp_2102: int, out_Tmp_2103: int, out_sdv_679: int, out_Tmp_2106: int, out_Tmp_2108: int, out_Tmp_2111: int, out_Tmp_2113: int, out_Tmp_2114: int, out_Tmp_2116: int, out_cIrql_9: int, out_Tmp_2117: int, out_Tmp_2121: int, out_Tmp_2122: int, out_Tmp_2123: int, out_Tmp_2126: int, out_Tmp_2127: int, out_Tmp_2129: int, out_DeviceObject_36: int, out_vslice_dummy_var_399: int, out_vslice_dummy_var_403: int, out_vslice_dummy_var_404: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == old(completion_called);
  free ensures {:va_keep} out_sdv_674 == 1 || out_sdv_674 == 0 || out_sdv_674 == in_sdv_674;
  free ensures {:va_keep} out_status_62 == -1073741823 || out_status_62 == -1073741738 || out_status_62 == 0 || out_status_62 == in_status_62;
  free ensures {:va_keep} out_vslice_dummy_var_399 == 1 || out_vslice_dummy_var_399 == 0 || out_vslice_dummy_var_399 == in_vslice_dummy_var_399;
  free ensures {:va_keep} out_vslice_dummy_var_404 == 1 || out_vslice_dummy_var_404 == 0 || out_vslice_dummy_var_404 == in_vslice_dummy_var_404;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_1187: int, in_sdv_394: int, in_sdv_395: int, in_irp: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_17: int, in_Key: int) returns (out_Tmp_1187: int, out_sdv_394: int, out_sdv_395: int, out_irp: int, out_packet_7: int)
{

  entry:
    out_Tmp_1187, out_sdv_394, out_sdv_395, out_irp, out_packet_7 := in_Tmp_1187, in_sdv_394, in_sdv_395, in_irp, in_packet_7;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_17 != 0;
    assume in_DeviceObject_17 > 0;
    call {:si_unique_call 3772} out_packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_17), in_Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} out_packet_7 != 0;
    call {:si_unique_call 3775} out_sdv_395 := sdv_containing_record(out_packet_7, 64);
    out_irp := out_sdv_395;
    call {:si_unique_call 3776} Sbp2StartIo#0(in_DeviceObject_17, out_irp);
    goto anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 3773} out_Tmp_1187 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1187 != 0;
    assume out_Tmp_1187 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    call {:si_unique_call 3774} out_sdv_394 := sdv_InterlockedDecrement(out_Tmp_1187);
    assume {:nonnull} out_Tmp_1187 != 0;
    assume out_Tmp_1187 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    goto anon11_Else;

  anon11_Else:
    assume {:partition} out_sdv_394 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    call {:si_unique_call 3777} {:si_old_unique_call 1} out_Tmp_1187, out_sdv_394, out_sdv_395, out_irp, out_packet_7 := Sbp2StartNextPacketByKey#0_loop_L11(out_Tmp_1187, out_sdv_394, out_sdv_395, out_irp, out_packet_7, in_deviceExtension, in_DeviceObject_17, in_Key);
    return;

  anon10_Then:
    assume {:partition} out_packet_7 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#0_loop_L11(in_Tmp_1187: int, in_sdv_394: int, in_sdv_395: int, in_irp: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_17: int, in_Key: int) returns (out_Tmp_1187: int, out_sdv_394: int, out_sdv_395: int, out_irp: int, out_packet_7: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == old(completion_called);
  free ensures {:va_keep} out_sdv_395 == in_sdv_395;
  free ensures {:va_keep} out_irp == in_irp;
  free ensures {:va_keep} out_packet_7 == 0 || out_packet_7 == in_packet_7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_1187: int, in_sdv_394: int, in_sdv_395: int, in_irp: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_17: int, in_Key: int) returns (out_Tmp_1187: int, out_sdv_394: int, out_sdv_395: int, out_irp: int, out_packet_7: int)
{

  entry:
    out_Tmp_1187, out_sdv_394, out_sdv_395, out_irp, out_packet_7 := in_Tmp_1187, in_sdv_394, in_sdv_395, in_irp, in_packet_7;
    goto L11, exit;

  exit:
    return;

  L11:
    assume {:nonnull} in_DeviceObject_17 != 0;
    assume in_DeviceObject_17 > 0;
    call {:si_unique_call 3778} out_packet_7 := Sbp2RemoveByKeyDeviceQueueIfBusy(DeviceQueue__DEVICE_OBJECT(in_DeviceObject_17), in_Key);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} out_packet_7 != 0;
    call {:si_unique_call 3781} out_sdv_395 := sdv_containing_record(out_packet_7, 64);
    out_irp := out_sdv_395;
    call {:si_unique_call 3782} Sbp2StartIo#1(in_DeviceObject_17, out_irp);
    goto anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L17;

  L17:
    call {:si_unique_call 3779} out_Tmp_1187 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1187 != 0;
    assume out_Tmp_1187 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    call {:si_unique_call 3780} out_sdv_394 := sdv_InterlockedDecrement(out_Tmp_1187);
    assume {:nonnull} out_Tmp_1187 != 0;
    assume out_Tmp_1187 > 0;
    assume {:nonnull} in_deviceExtension != 0;
    assume in_deviceExtension > 0;
    goto anon11_Else;

  anon11_Else:
    assume {:partition} out_sdv_394 != 0;
    goto anon11_Else_dummy;

  anon11_Else_dummy:
    call {:si_unique_call 3783} {:si_old_unique_call 1} out_Tmp_1187, out_sdv_394, out_sdv_395, out_irp, out_packet_7 := Sbp2StartNextPacketByKey#1_loop_L11(out_Tmp_1187, out_sdv_394, out_sdv_395, out_irp, out_packet_7, in_deviceExtension, in_DeviceObject_17, in_Key);
    return;

  anon10_Then:
    assume {:partition} out_packet_7 == 0;
    goto L17;
}



procedure {:LoopProcedure} Sbp2StartNextPacketByKey#1_loop_L11(in_Tmp_1187: int, in_sdv_394: int, in_sdv_395: int, in_irp: int, in_packet_7: int, in_deviceExtension: int, in_DeviceObject_17: int, in_Key: int) returns (out_Tmp_1187: int, out_sdv_394: int, out_sdv_395: int, out_irp: int, out_packet_7: int);
  modifies alloc, completion_called, yogi_error;
  free ensures {:va_keep} old(completion_called) == 1 ==> completion_called != 0;
  free ensures {:va_keep} old(completion_called) == 0 ==> completion_called != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> completion_called == old(completion_called);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == old(yogi_error);
  free ensures {:va_keep} completion_called == old(completion_called);
  free ensures {:va_keep} out_sdv_395 == in_sdv_395;
  free ensures {:va_keep} out_irp == in_irp;
  free ensures {:va_keep} out_packet_7 == 0 || out_packet_7 == in_packet_7;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2StartIo#0_loop_L166(in_qIrp: int, in_sdv_512: int, in_entry_2: int, in_Irp_16: int) returns (out_qIrp: int, out_sdv_512: int, out_entry_2: int)
{

  entry:
    out_qIrp, out_sdv_512, out_entry_2 := in_qIrp, in_sdv_512, in_entry_2;
    goto L166, exit;

  exit:
    return;

  L166:
    goto anon205_Else;

  anon205_Else:
    call {:si_unique_call 3784} out_sdv_512 := sdv_containing_record(out_entry_2, 64);
    out_qIrp := out_sdv_512;
    goto anon250_Then;

  anon250_Then:
    assume {:partition} out_qIrp != in_Irp_16;
    assume {:nonnull} out_entry_2 != 0;
    assume out_entry_2 > 0;
    havoc out_entry_2;
    goto anon250_Then_dummy;

  anon250_Then_dummy:
    havoc out_entry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#0_loop_L166(in_qIrp: int, in_sdv_512: int, in_entry_2: int, in_Irp_16: int) returns (out_qIrp: int, out_sdv_512: int, out_entry_2: int);
  free ensures {:va_keep} out_qIrp == in_qIrp;
  free ensures {:va_keep} out_sdv_512 == in_sdv_512;
  free ensures {:va_keep} out_entry_2 == in_entry_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2StartIo#1_loop_L166(in_qIrp: int, in_sdv_512: int, in_entry_2: int, in_Irp_16: int) returns (out_qIrp: int, out_sdv_512: int, out_entry_2: int)
{

  entry:
    out_qIrp, out_sdv_512, out_entry_2 := in_qIrp, in_sdv_512, in_entry_2;
    goto L166, exit;

  exit:
    return;

  L166:
    goto anon205_Else;

  anon205_Else:
    call {:si_unique_call 3785} out_sdv_512 := sdv_containing_record(out_entry_2, 64);
    out_qIrp := out_sdv_512;
    goto anon250_Then;

  anon250_Then:
    assume {:partition} out_qIrp != in_Irp_16;
    assume {:nonnull} out_entry_2 != 0;
    assume out_entry_2 > 0;
    havoc out_entry_2;
    goto anon250_Then_dummy;

  anon250_Then_dummy:
    havoc out_entry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartIo#1_loop_L166(in_qIrp: int, in_sdv_512: int, in_entry_2: int, in_Irp_16: int) returns (out_qIrp: int, out_sdv_512: int, out_entry_2: int);
  free ensures {:va_keep} out_qIrp == in_qIrp;
  free ensures {:va_keep} out_sdv_512 == in_sdv_512;
  free ensures {:va_keep} out_entry_2 == in_entry_2;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2InitializeDeviceExtension#1_loop_L56(in_i_7: int, in_context_4: int, in_PdoExtension_26: int) returns (out_i_7: int, out_context_4: int)
{

  entry:
    out_i_7, out_context_4 := in_i_7, in_context_4;
    goto L56, exit;

  exit:
    return;

  L56:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon67_Else;

  anon67_Else:
    assume {:partition} 8 > out_i_7;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_context_4;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_i_7 := out_i_7 + 1;
    goto anon67_Else_dummy;

  anon67_Else_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L56(in_i_7: int, in_context_4: int, in_PdoExtension_26: int) returns (out_i_7: int, out_context_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2InitializeDeviceExtension#1_loop_L106(in_context_4: int, in_oldContext: int, in_vslice_dummy_var_460: int) returns (out_context_4: int, out_oldContext: int, out_vslice_dummy_var_460: int)
{

  entry:
    out_context_4, out_oldContext, out_vslice_dummy_var_460 := in_context_4, in_oldContext, in_vslice_dummy_var_460;
    goto L106, exit;

  exit:
    return;

  L106:
    goto anon73_Else;

  anon73_Else:
    assume {:partition} out_context_4 != 0;
    out_oldContext := out_context_4;
    call {:si_unique_call 3786} out_vslice_dummy_var_460 := sdv_ExInterlockedPushEntrySList(0, 0, 0);
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    havoc out_context_4;
    assume {:nonnull} out_oldContext != 0;
    assume out_oldContext > 0;
    goto anon73_Else_dummy;

  anon73_Else_dummy:
    call {:si_unique_call 3787} {:si_old_unique_call 1} out_context_4, out_oldContext, out_vslice_dummy_var_460 := Sbp2InitializeDeviceExtension#1_loop_L106(out_context_4, out_oldContext, out_vslice_dummy_var_460);
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L106(in_context_4: int, in_oldContext: int, in_vslice_dummy_var_460: int) returns (out_context_4: int, out_oldContext: int, out_vslice_dummy_var_460: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2InitializeDeviceExtension#1_loop_L105(in_i_7: int, in_Tmp_2412: int, in_Tmp_2414: int, in_Tmp_2416: int, in_context_4: int, in_Tmp_2419: int, in_oldContext: int, in_sdv_786: int, in_sdv_787: int, in_Tmp_2424: int, in_Tmp_2425: int, in_PdoExtension_26: int) returns (out_i_7: int, out_Tmp_2412: int, out_Tmp_2414: int, out_Tmp_2416: int, out_context_4: int, out_Tmp_2419: int, out_oldContext: int, out_sdv_786: int, out_sdv_787: int, out_Tmp_2424: int, out_Tmp_2425: int)
{

  entry:
    out_i_7, out_Tmp_2412, out_Tmp_2414, out_Tmp_2416, out_context_4, out_Tmp_2419, out_oldContext, out_sdv_786, out_sdv_787, out_Tmp_2424, out_Tmp_2425 := in_i_7, in_Tmp_2412, in_Tmp_2414, in_Tmp_2416, in_context_4, in_Tmp_2419, in_oldContext, in_sdv_786, in_sdv_787, in_Tmp_2424, in_Tmp_2425;
    goto L105, exit;

  exit:
    return;

  L105:
    assume {:CounterLoop 8} {:Counter "i_7"} true;
    goto anon72_Else;

  anon72_Else:
    assume {:partition} 8 > out_i_7;
    out_oldContext := out_context_4;
    call {:si_unique_call 3789} out_sdv_787 := sdv_ExInterlockedPopEntrySList(0, 0);
    out_context_4 := out_sdv_787;
    goto anon86_Else;

  anon86_Else:
    assume {:partition} out_context_4 != 0;
    call {:si_unique_call 3788} out_sdv_786 := sdv_containing_record(out_context_4, 8);
    out_context_4 := out_sdv_786;
    goto anon87_Else;

  anon87_Else:
    assume {:partition} out_context_4 != 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_Tmp_2419 := out_i_7;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_Tmp_2425;
    assume {:nonnull} out_Tmp_2425 != 0;
    assume out_Tmp_2425 > 0;
    havoc out_Tmp_2424;
    assume {:nonnull} out_Tmp_2424 != 0;
    assume out_Tmp_2424 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_Tmp_2416 := out_i_7;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    havoc out_Tmp_2412;
    assume {:nonnull} out_Tmp_2412 != 0;
    assume out_Tmp_2412 > 0;
    havoc out_Tmp_2414;
    assume {:nonnull} out_Tmp_2414 != 0;
    assume out_Tmp_2414 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    assume {:nonnull} in_PdoExtension_26 != 0;
    assume in_PdoExtension_26 > 0;
    assume {:nonnull} out_context_4 != 0;
    assume out_context_4 > 0;
    out_i_7 := out_i_7 + 1;
    goto anon87_Else_dummy;

  anon87_Else_dummy:
    havoc out_i_7;
    return;
}



procedure {:LoopProcedure} Sbp2InitializeDeviceExtension#1_loop_L105(in_i_7: int, in_Tmp_2412: int, in_Tmp_2414: int, in_Tmp_2416: int, in_context_4: int, in_Tmp_2419: int, in_oldContext: int, in_sdv_786: int, in_sdv_787: int, in_Tmp_2424: int, in_Tmp_2425: int, in_PdoExtension_26: int) returns (out_i_7: int, out_Tmp_2412: int, out_Tmp_2414: int, out_Tmp_2416: int, out_context_4: int, out_Tmp_2419: int, out_oldContext: int, out_sdv_786: int, out_sdv_787: int, out_Tmp_2424: int, out_Tmp_2425: int);
  modifies alloc;
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} out_i_7 == in_i_7;
  free ensures {:va_keep} out_Tmp_2412 == in_Tmp_2412;
  free ensures {:va_keep} out_Tmp_2414 == in_Tmp_2414;
  free ensures {:va_keep} out_Tmp_2416 == in_Tmp_2416;
  free ensures {:va_keep} out_context_4 == in_context_4;
  free ensures {:va_keep} out_Tmp_2419 == in_Tmp_2419;
  free ensures {:va_keep} out_oldContext == in_oldContext;
  free ensures {:va_keep} out_sdv_786 == in_sdv_786;
  free ensures {:va_keep} out_sdv_787 == in_sdv_787;
  free ensures {:va_keep} out_Tmp_2424 == in_Tmp_2424;
  free ensures {:va_keep} out_Tmp_2425 == in_Tmp_2425;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2UpdateNodeInformation#1_loop_L62(in_nextListItem_1: int, in_Tmp_632: int, in_sdv_190: int, in_sdv_191: int, in_sdv_192: int, in_sdv_196: int, in_currentListItem: int, in_Tmp_639: int, in_sdv_197: int, in_Tmp_640: int, in_Tmp_641: int, in_Tmp_643: int, in_PdoExtension_10: int) returns (out_nextListItem_1: int, out_Tmp_632: int, out_sdv_191: int, out_currentListItem: int, out_Tmp_639: int, out_Tmp_640: int, out_Tmp_641: int, out_Tmp_643: int)
{
  var vslice_dummy_var_1359: int;

  entry:
    out_nextListItem_1, out_Tmp_632, out_sdv_191, out_currentListItem, out_Tmp_639, out_Tmp_640, out_Tmp_641, out_Tmp_643 := in_nextListItem_1, in_Tmp_632, in_sdv_191, in_currentListItem, in_Tmp_639, in_Tmp_640, in_Tmp_641, in_Tmp_643;
    goto L62, exit;

  exit:
    return;

  L62:
    out_currentListItem := out_nextListItem_1;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_640;
    assume {:nonnull} out_Tmp_640 != 0;
    assume out_Tmp_640 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_632;
    assume {:nonnull} out_Tmp_632 != 0;
    assume out_Tmp_632 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_639;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    assume {:nonnull} out_Tmp_639 != 0;
    assume out_Tmp_639 > 0;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    assume {:nonnull} out_Tmp_639 != 0;
    assume out_Tmp_639 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_643;
    assume {:nonnull} out_Tmp_643 != 0;
    assume out_Tmp_643 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_Tmp_641;
    assume {:nonnull} out_Tmp_641 != 0;
    assume out_Tmp_641 > 0;
    assume {:nonnull} out_currentListItem != 0;
    assume out_currentListItem > 0;
    havoc out_nextListItem_1;
    assume {:nonnull} in_PdoExtension_10 != 0;
    assume in_PdoExtension_10 > 0;
    havoc vslice_dummy_var_1359;
    call {:si_unique_call 3790} out_sdv_191 := sdv_containing_record(vslice_dummy_var_1359, 0);
    goto anon31_Else;

  anon31_Else:
    assume {:partition} out_currentListItem != out_sdv_191;
    goto anon31_Else_dummy;

  anon31_Else_dummy:
    call {:si_unique_call 3791} {:si_old_unique_call 1} out_nextListItem_1, out_Tmp_632, out_sdv_191, out_currentListItem, out_Tmp_639, out_Tmp_640, out_Tmp_641, out_Tmp_643 := Sbp2UpdateNodeInformation#1_loop_L62(out_nextListItem_1, out_Tmp_632, in_sdv_190, out_sdv_191, in_sdv_192, in_sdv_196, out_currentListItem, out_Tmp_639, in_sdv_197, out_Tmp_640, out_Tmp_641, out_Tmp_643, in_PdoExtension_10);
    return;
}



procedure {:LoopProcedure} Sbp2UpdateNodeInformation#1_loop_L62(in_nextListItem_1: int, in_Tmp_632: int, in_sdv_190: int, in_sdv_191: int, in_sdv_192: int, in_sdv_196: int, in_currentListItem: int, in_Tmp_639: int, in_sdv_197: int, in_Tmp_640: int, in_Tmp_641: int, in_Tmp_643: int, in_PdoExtension_10: int) returns (out_nextListItem_1: int, out_Tmp_632: int, out_sdv_191: int, out_currentListItem: int, out_Tmp_639: int, out_Tmp_640: int, out_Tmp_641: int, out_Tmp_643: int);
  free ensures {:va_keep} out_nextListItem_1 == in_nextListItem_1;
  free ensures {:va_keep} out_Tmp_632 == in_Tmp_632;
  free ensures {:va_keep} out_sdv_191 == in_sdv_191;
  free ensures {:va_keep} out_currentListItem == in_currentListItem;
  free ensures {:va_keep} out_Tmp_639 == in_Tmp_639;
  free ensures {:va_keep} out_Tmp_640 == in_Tmp_640;
  free ensures {:va_keep} out_Tmp_641 == in_Tmp_641;
  free ensures {:va_keep} out_Tmp_643 == in_Tmp_643;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2StartPacket#0_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_479: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_479: int)
{

  entry:
    out_nextEntry_2, out_queueEntry2_1, out_sdv_479 := in_nextEntry_2, in_queueEntry2_1, in_sdv_479;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon17_Else;

  anon17_Else:
    call {:si_unique_call 3792} out_sdv_479 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_479;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon20_Else;

  anon20_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket#0_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_479: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_479: int);
  free ensures {:va_keep} out_nextEntry_2 == in_nextEntry_2;
  free ensures {:va_keep} out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} out_sdv_479 == in_sdv_479;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2StartPacket#1_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_479: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_479: int)
{

  entry:
    out_nextEntry_2, out_queueEntry2_1, out_sdv_479 := in_nextEntry_2, in_queueEntry2_1, in_sdv_479;
    goto L31, exit;

  exit:
    return;

  L31:
    goto anon17_Else;

  anon17_Else:
    call {:si_unique_call 3793} out_sdv_479 := sdv_containing_record(out_nextEntry_2, 0);
    out_queueEntry2_1 := out_sdv_479;
    assume {:nonnull} in_Key_1 != 0;
    assume in_Key_1 > 0;
    assume {:nonnull} out_queueEntry2_1 != 0;
    assume out_queueEntry2_1 > 0;
    goto anon20_Else;

  anon20_Else:
    assume {:nonnull} out_nextEntry_2 != 0;
    assume out_nextEntry_2 > 0;
    havoc out_nextEntry_2;
    goto anon20_Else_dummy;

  anon20_Else_dummy:
    havoc out_nextEntry_2;
    return;
}



procedure {:LoopProcedure} Sbp2StartPacket#1_loop_L31(in_nextEntry_2: int, in_queueEntry2_1: int, in_sdv_479: int, in_Key_1: int) returns (out_nextEntry_2: int, out_queueEntry2_1: int, out_sdv_479: int);
  free ensures {:va_keep} out_nextEntry_2 == in_nextEntry_2;
  free ensures {:va_keep} out_queueEntry2_1 == in_queueEntry2_1;
  free ensures {:va_keep} out_sdv_479 == in_sdv_479;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2GlobalStatusCallback#0_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_132: int) returns (out_nextListItem: int, out_entry: int, out_sdv_132: int)
{

  entry:
    out_nextListItem, out_entry, out_sdv_132 := in_nextListItem, in_entry, in_sdv_132;
    goto L204, exit;

  exit:
    return;

  L204:
    goto anon210_Else;

  anon210_Else:
    call {:si_unique_call 3794} out_sdv_132 := sdv_containing_record(out_entry, 0);
    out_nextListItem := out_sdv_132;
    assume {:nonnull} out_nextListItem != 0;
    assume out_nextListItem > 0;
    goto anon260_Else;

  anon260_Else:
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon260_Else_dummy;

  anon260_Else_dummy:
    havoc out_entry;
    return;
}



procedure {:LoopProcedure} Sbp2GlobalStatusCallback#0_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_132: int) returns (out_nextListItem: int, out_entry: int, out_sdv_132: int);
  free ensures {:va_keep} out_nextListItem == in_nextListItem;
  free ensures {:va_keep} out_entry == in_entry;
  free ensures {:va_keep} out_sdv_132 == in_sdv_132;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation Sbp2GlobalStatusCallback#1_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_132: int) returns (out_nextListItem: int, out_entry: int, out_sdv_132: int)
{

  entry:
    out_nextListItem, out_entry, out_sdv_132 := in_nextListItem, in_entry, in_sdv_132;
    goto L204, exit;

  exit:
    return;

  L204:
    goto anon210_Else;

  anon210_Else:
    call {:si_unique_call 3795} out_sdv_132 := sdv_containing_record(out_entry, 0);
    out_nextListItem := out_sdv_132;
    assume {:nonnull} out_nextListItem != 0;
    assume out_nextListItem > 0;
    goto anon260_Else;

  anon260_Else:
    assume {:nonnull} out_entry != 0;
    assume out_entry > 0;
    havoc out_entry;
    goto anon260_Else_dummy;

  anon260_Else_dummy:
    havoc out_entry;
    return;
}



procedure {:LoopProcedure} Sbp2GlobalStatusCallback#1_loop_L204(in_nextListItem: int, in_entry: int, in_sdv_132: int) returns (out_nextListItem: int, out_entry: int, out_sdv_132: int);
  free ensures {:va_keep} out_nextListItem == in_nextListItem;
  free ensures {:va_keep} out_entry == in_entry;
  free ensures {:va_keep} out_sdv_132 == in_sdv_132;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



procedure fakeMain() returns (Tmp_906: int, dup_assertVar: bool);
  modifies alloc, Mem_T.PWPP_PROJECT_CONTROL_BLOCK, Mem_T.DeviceExtension__DEVICE_OBJECT, SLAM_guard_S_0, completion_called, yogi_error, Mem_T.LogStart__DEBUG_LOG;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(completion_called) == 1 || old(completion_called) == 0;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || completion_called == 1 || completion_called == 0;



implementation {:entrypoint} fakeMain() returns (Tmp_906: int, dup_assertVar: bool)
{

  start:
    call Tmp_906, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


