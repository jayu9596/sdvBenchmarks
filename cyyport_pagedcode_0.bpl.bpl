var {:scalar} alloc: int;

var {:scalar} yogi_error: int;

var {:scalar} sdv_irql_previous_5: int;

var {:scalar} sdv_irql_previous_2: int;

var {:scalar} sdv_irql_current: int;

var {:scalar} sdv_irql_previous: int;

var {:scalar} sdv_irql_previous_4: int;

var {:scalar} sdv_irql_previous_3: int;

var {:scalar} Mem_T.CancelIrql__IRP: [int]int;

var {:scalar} Mem_T.CancelRoutine__IRP: [int]int;

var {:scalar} Mem_T.CurrentStackLocation_unnamed_tag_7: [int]int;

var {:scalar} Mem_T.INT4: [int]int;

var {:scalar} Mem_T.MajorFunction__IO_STACK_LOCATION: [int]int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const CyyGlobals: int;

const SerialPortNameGuid: int;

const SerailPortPerfGuid: int;

const SerialPortPropertiesGuid: int;

const SerialPortHWGuid: int;

const SerialPortCommGuid: int;

const KeTickCount: int;

const CyyPhysicalZero: int;

const CyyPhysicalZero_1: int;

const driverDefaults: int;

const CyyPhysicalZero_2: int;

const GUID_DEVINTERFACE_COMPORT: int;

const sdv_cancelFptr: int;

const CyyPhysicalZero_3: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_kdpc: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_Io_Removelock_release_wait_returned: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_harnessStackLocation: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_harnessDeviceExtension: int;

const sdv_DpcContext: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_18: int, actual_sdv_19: int) returns (Tmp_15: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_18: int, actual_sdv_19: int) returns (Tmp_15: int)
{
  var {:scalar} sdv_20: int;

  anon0:
    call {:si_unique_call 0} Tmp_15 := __HAVOC_malloc(4);
    call {:si_unique_call 1} sdv_20 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_15 != 0;
    assume Tmp_15 > 0;
    assume {:nonnull} sdv_20 != 0;
    assume sdv_20 > 0;
    Mem_T.INT4[Tmp_15] := Mem_T.INT4[sdv_20];
    return;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 2} vslice_dummy_var_0 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyCancelImmediate"} CyyCancelImmediate(actual_DeviceObject: int, actual_Irp: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCancelImmediate"} CyyCancelImmediate(actual_DeviceObject: int, actual_Irp: int)
{
  var {:pointer} Extension: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_1: int;

  anon0:
    call {:si_unique_call 3} vslice_dummy_var_1 := __HAVOC_malloc(4);
    DeviceObject := actual_DeviceObject;
    Irp := actual_Irp;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    havoc Extension;
    assume {:nonnull} Extension != 0;
    assume Extension > 0;
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    call {:si_unique_call 4} CyyTryToCompleteCurrent#1(Extension, li2bplFunctionConstant130, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp)], -1073741536, CurrentImmediateIrp__CYY_DEVICE_EXTENSION(Extension), 0, 0, ImmediateTotalTimer__CYY_DEVICE_EXTENSION(Extension), 0, li2bplFunctionConstant128, 2);
    return;
}



procedure {:origName "CyyStartImmediate"} CyyStartImmediate(actual_Extension_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyStartImmediate"} CyyStartImmediate(actual_Extension_1: int)
{
  var {:pointer} Tmp_27: int;
  var {:pointer} s_p_e_c_i_a_l_1: int;
  var {:scalar} TotalTime: int;
  var {:pointer} Tmp_28: int;
  var {:pointer} Tmp_29: int;
  var {:pointer} Tmp_30: int;
  var {:pointer} sdv_29: int;
  var {:scalar} UseATimer: int;
  var {:pointer} sdv_30: int;
  var {:scalar} OldIrql: int;
  var {:pointer} sdv_32: int;
  var {:scalar} s_p_e_c_i_a_l_2: int;
  var {:pointer} s_p_e_c_i_a_l_3: int;
  var {:pointer} OldIrp: int;
  var {:scalar} s_p_e_c_i_a_l_4: int;
  var {:scalar} Timeouts: int;
  var {:pointer} Tmp_32: int;
  var {:pointer} Tmp_33: int;
  var {:pointer} Extension_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_1096: int;
  var vslice_dummy_var_1097: int;
  var vslice_dummy_var_1098: int;
  var vslice_dummy_var_1099: int;

  anon0:
    call {:si_unique_call 5} TotalTime := __HAVOC_malloc(20);
    call {:si_unique_call 6} vslice_dummy_var_2 := __HAVOC_malloc(4);
    call {:si_unique_call 7} Timeouts := __HAVOC_malloc(20);
    Extension_1 := actual_Extension_1;
    call {:si_unique_call 8} Tmp_27 := __HAVOC_malloc(72);
    call {:si_unique_call 9} Tmp_32 := __HAVOC_malloc(96);
    call {:si_unique_call 10} Tmp_33 := __HAVOC_malloc(80);
    Tmp_32 := strConst__li2bpl1;
    call {:si_unique_call 11} vslice_dummy_var_6 := CyyDbgPrintEx(2, Tmp_32);
    UseATimer := 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc Tmp_30;
    assume {:nonnull} Tmp_30 != 0;
    assume Tmp_30 > 0;
    call {:si_unique_call 12} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 13} Tmp_28 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    Mem_T.INT4[Tmp_28] := OldIrql;
    call {:si_unique_call 14} sdv_KeAcquireSpinLock(0, Tmp_28);
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    OldIrql := Mem_T.INT4[Tmp_28];
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    call {:si_unique_call 15} sdv_KeReleaseSpinLock(0, OldIrql);
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L24;

  L24:
    UseATimer := 1;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    goto L28;

  L28:
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc vslice_dummy_var_1096;
    call {:si_unique_call 16} sdv_32 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1096);
    assume {:nonnull} sdv_32 != 0;
    assume sdv_32 > 0;
    call {:si_unique_call 17} Tmp_28 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    Mem_T.INT4[Tmp_28] := OldIrql;
    call {:si_unique_call 18} IoAcquireCancelSpinLock(Tmp_28);
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    OldIrql := Mem_T.INT4[Tmp_28];
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc Tmp_29;
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc OldIrp;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    call {:si_unique_call 19} IoReleaseCancelSpinLock(OldIrql);
    assume {:nonnull} OldIrp != 0;
    assume OldIrp > 0;
    assume {:nonnull} OldIrp != 0;
    assume OldIrp > 0;
    Tmp_27 := strConst__li2bpl3;
    call {:si_unique_call 20} vslice_dummy_var_7 := CyyDbgPrintEx(9, Tmp_27);
    call {:si_unique_call 21} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 22} CyyIRPEpilogue(Extension_1);
    goto L56;

  L56:
    Tmp_33 := strConst__li2bpl2;
    call {:si_unique_call 23} vslice_dummy_var_8 := CyyDbgPrintEx(2, Tmp_33);
    return;

  anon11_Then:
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc vslice_dummy_var_1097;
    call {:si_unique_call 24} vslice_dummy_var_3 := sdv_IoSetCancelRoutine(vslice_dummy_var_1097, li2bplFunctionConstant125);
    s_p_e_c_i_a_l_2 := 2;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc vslice_dummy_var_1098;
    call {:si_unique_call 25} sdv_29 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1098);
    assume {:nonnull} sdv_29 != 0;
    assume sdv_29 > 0;
    s_p_e_c_i_a_l_1 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_29)));
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_1] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_1], s_p_e_c_i_a_l_2);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} UseATimer != 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    call {:si_unique_call 26} vslice_dummy_var_5 := CyySetTimer(ImmediateTotalTimer__CYY_DEVICE_EXTENSION(Extension_1), TotalTime, TotalImmediateTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_1), Extension_1);
    s_p_e_c_i_a_l_4 := 4;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc vslice_dummy_var_1099;
    call {:si_unique_call 27} sdv_30 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1099);
    assume {:nonnull} sdv_30 != 0;
    assume sdv_30 > 0;
    s_p_e_c_i_a_l_3 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_30)));
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_3] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_3], s_p_e_c_i_a_l_4);
    goto L68;

  L68:
    call {:si_unique_call 28} vslice_dummy_var_4 := KeSynchronizeExecution(0, li2bplFunctionConstant126, 0);
    call {:si_unique_call 29} IoReleaseCancelSpinLock(OldIrql);
    goto L56;

  anon12_Then:
    assume {:partition} UseATimer == 0;
    goto L68;

  anon9_Then:
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L28;

  anon10_Then:
    goto L24;
}



procedure {:origName "CyyGetNextImmediate"} CyyGetNextImmediate(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp: int, actual_CompleteCurrent: int, actual_Extension_2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetNextImmediate"} CyyGetNextImmediate(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp: int, actual_CompleteCurrent: int, actual_Extension_2: int)
{
  var {:pointer} Tmp_34: int;
  var {:scalar} OldIrql_1: int;
  var {:pointer} OldIrp_1: int;
  var {:pointer} Tmp_36: int;
  var {:pointer} CurrentOpIrp: int;
  var {:pointer} NewIrp: int;
  var {:pointer} Extension_2: int;
  var vslice_dummy_var_9: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 30} vslice_dummy_var_9 := __HAVOC_malloc(4);
    CurrentOpIrp := actual_CurrentOpIrp;
    NewIrp := actual_NewIrp;
    Extension_2 := actual_Extension_2;
    call {:si_unique_call 31} Tmp_34 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    havoc OldIrp_1;
    call {:si_unique_call 32} Tmp_36 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_36 != 0;
    assume Tmp_36 > 0;
    Mem_T.INT4[Tmp_36] := OldIrql_1;
    call {:si_unique_call 33} IoAcquireCancelSpinLock(Tmp_36);
    assume {:nonnull} Tmp_36 != 0;
    assume Tmp_36 > 0;
    OldIrql_1 := Mem_T.INT4[Tmp_36];
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    assume {:nonnull} NewIrp != 0;
    assume NewIrp > 0;
    call {:si_unique_call 34} vslice_dummy_var_10 := KeSynchronizeExecution(0, li2bplFunctionConstant131, 0);
    call {:si_unique_call 35} IoReleaseCancelSpinLock(OldIrql_1);
    Tmp_34 := strConst__li2bpl3;
    call {:si_unique_call 36} vslice_dummy_var_11 := CyyDbgPrintEx(9, Tmp_34);
    call {:si_unique_call 37} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 38} CyyIRPEpilogue(Extension_2);
    return;
}



procedure {:origName "CyySystemControlDispatch"} CyySystemControlDispatch(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_37: int);
  modifies alloc, Mem_T.INT4, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyySystemControlDispatch"} CyySystemControlDispatch(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_37: int)
{
  var {:dopa} {:scalar} disposition: int;
  var {:pointer} pDevExt: int;
  var {:scalar} status: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} Irp_1: int;
  var vslice_dummy_var_1100: int;
  var vslice_dummy_var_1101: int;

  anon0:
    call {:si_unique_call 39} disposition := __HAVOC_malloc(4);
    DeviceObject_1 := actual_DeviceObject_1;
    Irp_1 := actual_Irp_1;
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc pDevExt;
    call {:si_unique_call 40} sdv_do_paged_code_check();
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 41} status := WmiSystemControl(0, 0, Irp_1, disposition);
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.INT4[disposition] != 0;
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Mem_T.INT4[disposition] != 1;
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Mem_T.INT4[disposition] != 2;
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.INT4[disposition] == 3;
    goto L22;

  L22:
    call {:si_unique_call 42} sdv_IoSkipCurrentIrpStackLocation(Irp_1);
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc vslice_dummy_var_1100;
    call {:si_unique_call 43} status := sdv_IoCallDriver(vslice_dummy_var_1100, Irp_1);
    goto L30;

  L30:
    Tmp_37 := status;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} Mem_T.INT4[disposition] != 3;
    call {:si_unique_call 44} sdv_IoSkipCurrentIrpStackLocation(Irp_1);
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc vslice_dummy_var_1101;
    call {:si_unique_call 45} status := sdv_IoCallDriver(vslice_dummy_var_1101, Irp_1);
    goto L30;

  anon13_Then:
    assume {:partition} Mem_T.INT4[disposition] == 2;
    goto L22;

  anon14_Then:
    assume {:partition} Mem_T.INT4[disposition] == 1;
    call {:si_unique_call 46} sdv_IoCompleteRequest(0, 0);
    goto L30;

  anon11_Then:
    assume {:partition} Mem_T.INT4[disposition] == 0;
    goto L30;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 47} vslice_dummy_var_12 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "CyyGetRegistryKeyValue"} CyyGetRegistryKeyValue(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int, actual_Data: int, actual_DataLength: int) returns (Tmp_41: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetRegistryKeyValue"} CyyGetRegistryKeyValue(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int, actual_Data: int, actual_DataLength: int) returns (Tmp_41: int)
{
  var {:pointer} fullInfo: int;
  var {:pointer} Tmp_42: int;
  var {:scalar} length: int;
  var {:pointer} Tmp_43: int;
  var {:pointer} sdv_43: int;
  var {:scalar} ntStatus: int;
  var {:scalar} keyName: int;
  var {:pointer} Tmp_44: int;
  var {:pointer} KeyNameString: int;
  var {:scalar} KeyNameStringLength: int;
  var {:scalar} DataLength: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_1102: int;

  anon0:
    call {:si_unique_call 48} keyName := __HAVOC_malloc(12);
    KeyNameString := actual_KeyNameString;
    KeyNameStringLength := actual_KeyNameStringLength;
    DataLength := actual_DataLength;
    call {:si_unique_call 49} Tmp_42 := __HAVOC_malloc(120);
    call {:si_unique_call 50} Tmp_43 := __HAVOC_malloc(112);
    ntStatus := -1073741670;
    call {:si_unique_call 51} sdv_do_paged_code_check();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    Tmp_42 := strConst__li2bpl4;
    call {:si_unique_call 52} vslice_dummy_var_13 := CyyDbgPrintEx(2, Tmp_42);
    call {:si_unique_call 53} RtlInitUnicodeString(keyName, KeyNameString);
    length := 24 + KeyNameStringLength + DataLength;
    call {:si_unique_call 54} sdv_43 := ExAllocatePoolWithTag(1, length, -797345469);
    fullInfo := sdv_43;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} fullInfo != 0;
    call {:si_unique_call 55} Tmp_44 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_44 != 0;
    assume Tmp_44 > 0;
    Mem_T.INT4[Tmp_44] := length;
    call {:si_unique_call 56} ntStatus := ZwQueryValueKey(0, 0, 1, 0, length, Tmp_44);
    assume {:nonnull} Tmp_44 != 0;
    assume Tmp_44 > 0;
    length := Mem_T.INT4[Tmp_44];
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} ntStatus >= 0;
    assume {:nonnull} fullInfo != 0;
    assume fullInfo > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} fullInfo != 0;
    assume fullInfo > 0;
    havoc vslice_dummy_var_1102;
    call {:si_unique_call 57} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_1102);
    goto L31;

  L31:
    call {:si_unique_call 58} sdv_ExFreePool(0);
    goto L23;

  L23:
    Tmp_43 := strConst__li2bpl5;
    call {:si_unique_call 59} vslice_dummy_var_14 := CyyDbgPrintEx(2, Tmp_43);
    Tmp_41 := ntStatus;
    goto LM2;

  LM2:
    return;

  anon10_Then:
    goto L31;

  anon9_Then:
    assume {:partition} 0 > ntStatus;
    goto L31;

  anon12_Then:
    assume {:partition} fullInfo == 0;
    goto L23;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_15: int;

  anon0:
    call {:si_unique_call 60} vslice_dummy_var_15 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyGetRegistryKeyValueLength"} CyyGetRegistryKeyValueLength(actual_Handle_1: int, actual_KeyNameString_1: int, actual_KeyNameStringLength_1: int) returns (Tmp_48: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetRegistryKeyValueLength"} CyyGetRegistryKeyValueLength(actual_Handle_1: int, actual_KeyNameString_1: int, actual_KeyNameStringLength_1: int) returns (Tmp_48: int)
{
  var {:pointer} fullInfo_1: int;
  var {:scalar} length_1: int;
  var {:pointer} sdv_46: int;
  var {:scalar} keyName_1: int;
  var {:pointer} Tmp_49: int;
  var {:pointer} KeyNameString_1: int;
  var {:scalar} KeyNameStringLength_1: int;
  var vslice_dummy_var_16: int;

  anon0:
    call {:si_unique_call 61} keyName_1 := __HAVOC_malloc(12);
    KeyNameString_1 := actual_KeyNameString_1;
    KeyNameStringLength_1 := actual_KeyNameStringLength_1;
    call {:si_unique_call 62} sdv_do_paged_code_check();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 63} RtlInitUnicodeString(keyName_1, KeyNameString_1);
    length_1 := 24 + KeyNameStringLength_1;
    call {:si_unique_call 64} sdv_46 := ExAllocatePoolWithTag(1, length_1, -797345469);
    fullInfo_1 := sdv_46;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} fullInfo_1 != 0;
    call {:si_unique_call 65} Tmp_49 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_49 != 0;
    assume Tmp_49 > 0;
    Mem_T.INT4[Tmp_49] := length_1;
    call {:si_unique_call 66} vslice_dummy_var_16 := ZwQueryValueKey(0, 0, 1, 0, length_1, Tmp_49);
    assume {:nonnull} Tmp_49 != 0;
    assume Tmp_49 > 0;
    length_1 := Mem_T.INT4[Tmp_49];
    call {:si_unique_call 67} sdv_ExFreePool(0);
    goto L18;

  L18:
    Tmp_48 := length_1;
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} fullInfo_1 == 0;
    goto L18;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyGetConfigDefaults"} CyyGetConfigDefaults(actual_DriverDefaultsPtr: int, actual_RegistryPath: int) returns (Tmp_50: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetConfigDefaults"} CyyGetConfigDefaults(actual_DriverDefaultsPtr: int, actual_RegistryPath: int) returns (Tmp_50: int)
{
  var {:pointer} paramTable: int;
  var {:scalar} Tmp_53: int;
  var {:pointer} sdv_48: int;
  var {:dopa} {:scalar} DbgDefault: int;
  var {:scalar} Tmp_54: int;
  var {:scalar} Status: int;
  var {:dopa} {:scalar} notThereDefault: int;
  var {:scalar} Tmp_59: int;
  var {:pointer} path: int;
  var {:dopa} {:scalar} zero: int;
  var {:pointer} DriverDefaultsPtr: int;
  var {:pointer} RegistryPath: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;

  anon0:
    call {:si_unique_call 68} DbgDefault := __HAVOC_malloc(4);
    call {:si_unique_call 69} notThereDefault := __HAVOC_malloc(4);
    call {:si_unique_call 70} zero := __HAVOC_malloc(4);
    DriverDefaultsPtr := actual_DriverDefaultsPtr;
    RegistryPath := actual_RegistryPath;
    call {:si_unique_call 71} vslice_dummy_var_17 := __HAVOC_malloc(28);
    call {:si_unique_call 72} vslice_dummy_var_18 := __HAVOC_malloc(28);
    call {:si_unique_call 73} paramTable := __HAVOC_malloc(224);
    call {:si_unique_call 74} vslice_dummy_var_19 := __HAVOC_malloc(48);
    Status := 0;
    assume {:nonnull} zero != 0;
    assume zero > 0;
    Mem_T.INT4[zero] := 0;
    assume {:nonnull} DbgDefault != 0;
    assume DbgDefault > 0;
    Mem_T.INT4[DbgDefault] := 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    Mem_T.INT4[notThereDefault] := 1234567;
    call {:si_unique_call 75} sdv_do_paged_code_check();
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} RegistryPath != 0;
    assume RegistryPath > 0;
    havoc Tmp_59;
    call {:si_unique_call 76} sdv_48 := ExAllocatePoolWithTag(1, Tmp_59, -797345469);
    path := sdv_48;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} path != 0;
    call {:si_unique_call 77} sdv_RtlZeroMemory(0, 64);
    call {:si_unique_call 78} sdv_RtlZeroMemory(0, 224);
    assume {:nonnull} RegistryPath != 0;
    assume RegistryPath > 0;
    havoc Tmp_54;
    call {:si_unique_call 79} sdv_RtlZeroMemory(0, Tmp_54);
    assume {:nonnull} RegistryPath != 0;
    assume RegistryPath > 0;
    havoc Tmp_53;
    call {:si_unique_call 80} sdv_RtlMoveMemory(0, 0, Tmp_53);
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    call {:si_unique_call 81} Status := sdv_RtlQueryRegistryValues(0, 0, 0, 0, 0);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Status >= 0;
    goto L75;

  L75:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} Mem_T.INT4[RxFIFODefault__CYY_REGISTRY_DATA(DriverDefaultsPtr)] == Mem_T.INT4[notThereDefault];
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    Mem_T.INT4[RxFIFODefault__CYY_REGISTRY_DATA(DriverDefaultsPtr)] := 8;
    call {:si_unique_call 82} vslice_dummy_var_20 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    goto L76;

  L76:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.INT4[TxFIFODefault__CYY_REGISTRY_DATA(DriverDefaultsPtr)] == Mem_T.INT4[notThereDefault];
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    Mem_T.INT4[TxFIFODefault__CYY_REGISTRY_DATA(DriverDefaultsPtr)] := 12;
    call {:si_unique_call 83} vslice_dummy_var_21 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    goto L81;

  L81:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Mem_T.INT4[PermitShareDefault__CYY_REGISTRY_DATA(DriverDefaultsPtr)] == Mem_T.INT4[notThereDefault];
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    Mem_T.INT4[PermitShareDefault__CYY_REGISTRY_DATA(DriverDefaultsPtr)] := 0;
    call {:si_unique_call 84} vslice_dummy_var_22 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    goto L86;

  L86:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} path != 0;
    call {:si_unique_call 85} sdv_ExFreePool(0);
    goto L91;

  L91:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    Tmp_50 := Status;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon19_Then:
    assume {:partition} path == 0;
    goto L91;

  anon18_Then:
    assume {:partition} Mem_T.INT4[PermitShareDefault__CYY_REGISTRY_DATA(DriverDefaultsPtr)] != Mem_T.INT4[notThereDefault];
    goto L86;

  anon17_Then:
    assume {:partition} Mem_T.INT4[TxFIFODefault__CYY_REGISTRY_DATA(DriverDefaultsPtr)] != Mem_T.INT4[notThereDefault];
    goto L81;

  anon16_Then:
    assume {:partition} Mem_T.INT4[RxFIFODefault__CYY_REGISTRY_DATA(DriverDefaultsPtr)] != Mem_T.INT4[notThereDefault];
    goto L76;

  anon15_Then:
    assume {:partition} 0 > Status;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    Mem_T.INT4[ShouldBreakOnEntry__CYY_REGISTRY_DATA(DriverDefaultsPtr)] := 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    Mem_T.INT4[DebugLevel__CYY_REGISTRY_DATA(DriverDefaultsPtr)] := 0;
    goto L75;

  anon21_Then:
    assume {:partition} path == 0;
    Status := -1073741670;
    Tmp_50 := Status;
    goto L1;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init13"} _sdv_init13();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init13"} _sdv_init13()
{
  var vslice_dummy_var_23: int;

  anon0:
    call {:si_unique_call 86} vslice_dummy_var_23 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "CyyIoControl"} CyyIoControl(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_62: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, Mem_T.CancelIrql__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyIoControl"} CyyIoControl(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_62: int)
{
  var {:scalar} Tmp_63: int;
  var {:pointer} Tmp_64: int;
  var {:pointer} Tmp_65: int;
  var {:scalar} Tmp_66: int;
  var {:pointer} Tmp_67: int;
  var {:scalar} S: int;
  var {:scalar} OldIrql_2: int;
  var {:pointer} Tmp_68: int;
  var {:pointer} NewChars: int;
  var {:pointer} Tmp_69: int;
  var {:pointer} NewTimeouts: int;
  var {:scalar} Tmp_70: int;
  var {:scalar} Tmp_71: int;
  var {:scalar} Tmp_72: int;
  var {:scalar} Tmp_73: int;
  var {:scalar} Mask: int;
  var {:pointer} escapeChar: int;
  var {:scalar} S_1: int;
  var {:scalar} Tmp_74: int;
  var {:pointer} Lc: int;
  var {:pointer} Tmp_75: int;
  var {:scalar} prologueStatus: int;
  var {:scalar} Status_1: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:scalar} S_2: int;
  var {:pointer} Rs: int;
  var {:pointer} Br: int;
  var {:scalar} Tmp_78: int;
  var {:pointer} Tmp_79: int;
  var {:pointer} Tmp_80: int;
  var {:pointer} IrpSp: int;
  var {:scalar} S_3: int;
  var {:scalar} result: int;
  var {:pointer} Tmp_81: int;
  var {:scalar} OldIrql_3: int;
  var {:pointer} HandFlow: int;
  var {:scalar} Tmp_82: int;
  var {:scalar} Tmp_83: int;
  var {:scalar} Tmp_84: int;
  var {:pointer} Tmp_85: int;
  var {:scalar} LData: int;
  var {:scalar} S_4: int;
  var {:pointer} Extension_3: int;
  var {:scalar} LParity: int;
  var {:scalar} sdv_82: int;
  var {:pointer} Tmp_86: int;
  var {:scalar} S_5: int;
  var {:pointer} Tmp_87: int;
  var {:dopa} {:scalar} ModemControl: int;
  var {:scalar} Mask_1: int;
  var {:pointer} Tmp_88: int;
  var {:scalar} NewMask: int;
  var {:pointer} Xc: int;
  var {:scalar} Tmp_89: int;
  var {:scalar} LStop: int;
  var {:scalar} S_6: int;
  var {:scalar} Tmp_90: int;
  var {:pointer} Tmp_91: int;
  var {:scalar} S_7: int;
  var {:scalar} BaudRate: int;
  var {:scalar} S_8: int;
  var {:scalar} Tmp_92: int;
  var {:pointer} Tmp_93: int;
  var {:scalar} Tmp_94: int;
  var {:pointer} Tmp_95: int;
  var {:pointer} Tmp_96: int;
  var {:pointer} Tmp_97: int;
  var {:pointer} Lc_1: int;
  var {:pointer} Tmp_98: int;
  var {:scalar} S_9: int;
  var {:pointer} DeviceObject_2: int;
  var {:pointer} Irp_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_1103: int;
  var vslice_dummy_var_1104: int;
  var vslice_dummy_var_1105: int;
  var vslice_dummy_var_1106: int;
  var vslice_dummy_var_1107: int;
  var vslice_dummy_var_1108: int;
  var vslice_dummy_var_1109: int;
  var vslice_dummy_var_1110: int;
  var vslice_dummy_var_1111: int;
  var vslice_dummy_var_1112: int;
  var vslice_dummy_var_1113: int;

  anon0:
    call {:si_unique_call 87} S := __HAVOC_malloc(8);
    call {:si_unique_call 88} S_1 := __HAVOC_malloc(8);
    call {:si_unique_call 89} S_2 := __HAVOC_malloc(8);
    call {:si_unique_call 90} S_3 := __HAVOC_malloc(8);
    call {:si_unique_call 91} S_4 := __HAVOC_malloc(8);
    call {:si_unique_call 92} S_5 := __HAVOC_malloc(8);
    call {:si_unique_call 93} ModemControl := __HAVOC_malloc(4);
    call {:si_unique_call 94} S_6 := __HAVOC_malloc(8);
    call {:si_unique_call 95} S_7 := __HAVOC_malloc(8);
    call {:si_unique_call 96} S_8 := __HAVOC_malloc(8);
    call {:si_unique_call 97} S_9 := __HAVOC_malloc(8);
    DeviceObject_2 := actual_DeviceObject_2;
    Irp_2 := actual_Irp_2;
    call {:si_unique_call 98} Tmp_65 := __HAVOC_malloc(136);
    call {:si_unique_call 99} Tmp_67 := __HAVOC_malloc(148);
    call {:si_unique_call 100} Tmp_68 := __HAVOC_malloc(148);
    call {:si_unique_call 101} Tmp_77 := __HAVOC_malloc(128);
    call {:si_unique_call 102} Tmp_86 := __HAVOC_malloc(72);
    call {:si_unique_call 103} Tmp_87 := __HAVOC_malloc(72);
    call {:si_unique_call 104} Tmp_93 := __HAVOC_malloc(140);
    call {:si_unique_call 105} Tmp_95 := __HAVOC_malloc(68);
    call {:si_unique_call 106} Tmp_96 := __HAVOC_malloc(124);
    call {:si_unique_call 107} Tmp_98 := __HAVOC_malloc(96);
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    havoc Extension_3;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 108} sdv_IoCompleteRequest(0, 0);
    Tmp_62 := -1073741808;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon435_Then:
    call {:si_unique_call 109} prologueStatus := CyyIRPPrologue(Irp_2, Extension_3);
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} prologueStatus != 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    assume {:partition} prologueStatus != 259;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    Tmp_87 := strConst__li2bpl3;
    call {:si_unique_call 110} vslice_dummy_var_38 := CyyDbgPrintEx(9, Tmp_87);
    call {:si_unique_call 111} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 112} CyyIRPEpilogue(Extension_3);
    goto L24;

  L24:
    Tmp_62 := prologueStatus;
    goto L1;

  anon320_Then:
    assume {:partition} prologueStatus == 259;
    goto L24;

  anon319_Then:
    assume {:partition} prologueStatus == 0;
    Tmp_98 := strConst__li2bpl11;
    call {:si_unique_call 113} vslice_dummy_var_39 := CyyDbgPrintEx(9, Tmp_98);
    call {:si_unique_call 114} sdv_82 := CyyCompleteIfError(DeviceObject_2, Irp_2);
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume {:partition} sdv_82 != 0;
    Tmp_62 := -1073741536;
    goto L1;

  anon321_Then:
    assume {:partition} sdv_82 == 0;
    call {:si_unique_call 115} IrpSp := sdv_IoGetCurrentIrpStackLocation(Irp_2);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    Status_1 := 0;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    Status_1 := -1073741789;
    goto L95;

  L95:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    Tmp_86 := strConst__li2bpl3;
    call {:si_unique_call 116} vslice_dummy_var_40 := CyyDbgPrintEx(9, Tmp_86);
    call {:si_unique_call 117} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 118} CyyIRPEpilogue(Extension_3);
    Tmp_62 := Status_1;
    goto L1;

  anon333_Then:
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon476_Then, anon476_Else;

  anon476_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_1103;
    call {:si_unique_call 119} Status_1 := CyyGotoPowerState(vslice_dummy_var_1103, Extension_3, 1);
    goto anon477_Then, anon477_Else;

  anon477_Else:
    assume {:partition} yogi_error != 1;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:partition} Status_1 >= 0;
    goto L108;

  L108:
    call {:si_unique_call 120} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 121} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    call {:si_unique_call 122} vslice_dummy_var_27 := KeSynchronizeExecution(0, li2bplFunctionConstant364, 0);
    call {:si_unique_call 123} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon334_Then:
    assume {:partition} 0 > Status_1;
    goto L95;

  anon477_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon476_Then:
    goto L108;

  anon390_Then:
    Status_1 := -1073741811;
    goto L95;

  anon391_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    Status_1 := -1073741789;
    goto L95;

  anon335_Then:
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon474_Then, anon474_Else;

  anon474_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_1104;
    call {:si_unique_call 124} Status_1 := CyyGotoPowerState(vslice_dummy_var_1104, Extension_3, 1);
    goto anon475_Then, anon475_Else;

  anon475_Else:
    assume {:partition} yogi_error != 1;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    assume {:partition} Status_1 >= 0;
    goto L130;

  L130:
    call {:si_unique_call 125} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 126} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    call {:si_unique_call 127} vslice_dummy_var_28 := KeSynchronizeExecution(0, li2bplFunctionConstant362, 0);
    call {:si_unique_call 128} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon336_Then:
    assume {:partition} 0 > Status_1;
    goto L95;

  anon475_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon474_Then:
    goto L130;

  anon392_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    Status_1 := -1073741789;
    goto L95;

  anon337_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    call {:si_unique_call 129} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 130} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    call {:si_unique_call 131} vslice_dummy_var_29 := KeSynchronizeExecution(0, li2bplFunctionConstant363, 0);
    call {:si_unique_call 132} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon393_Then:
    call {:si_unique_call 133} vslice_dummy_var_26 := KeSynchronizeExecution(0, li2bplFunctionConstant356, 0);
    goto L95;

  anon394_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    Status_1 := -1073741789;
    goto L95;

  anon332_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 134} vslice_dummy_var_51 := KeSynchronizeExecution(0, li2bplFunctionConstant355, 0);
    goto L95;

  anon395_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    Status_1 := -1073741789;
    goto L95;

  anon331_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_64;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    Mem_T.INT4[Tmp_64] := 0;
    goto L95;

  anon396_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc escapeChar;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon473_Then, anon473_Else;

  anon473_Else:
    Status_1 := -1073741789;
    goto L95;

  anon473_Then:
    call {:si_unique_call 135} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 136} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume {:partition} Mem_T.INT4[escapeChar] != 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    goto L189;

  L189:
    Status_1 := -1073741811;
    call {:si_unique_call 137} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon339_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    goto L189;

  anon341_Then:
    goto L186;

  L186:
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    call {:si_unique_call 138} vslice_dummy_var_50 := KeSynchronizeExecution(0, li2bplFunctionConstant366, 0);
    call {:si_unique_call 139} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon340_Then:
    goto L189;

  anon338_Then:
    assume {:partition} Mem_T.INT4[escapeChar] == 0;
    goto L186;

  anon397_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    Status_1 := -1073741789;
    goto L95;

  anon342_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    call {:si_unique_call 140} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 141} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    call {:si_unique_call 142} vslice_dummy_var_30 := KeSynchronizeExecution(0, li2bplFunctionConstant369, 0);
    call {:si_unique_call 143} sdv_KeReleaseSpinLock(0, OldIrql_3);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_75;
    assume {:nonnull} ModemControl != 0;
    assume ModemControl > 0;
    assume {:nonnull} Tmp_75 != 0;
    assume Tmp_75 > 0;
    Mem_T.INT4[Tmp_75] := Mem_T.INT4[ModemControl];
    goto L95;

  anon398_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    Status_1 := -1073741789;
    goto L95;

  anon330_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    Tmp_81 := AssociatedIrp__IRP(Irp_2);
    assume {:nonnull} Tmp_81 != 0;
    assume Tmp_81 > 0;
    havoc vslice_dummy_var_1105;
    call {:si_unique_call 144} CyyGetProperties(Extension_3, vslice_dummy_var_1105);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L95;

  anon399_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Xc;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon471_Then, anon471_Else;

  anon471_Else:
    Status_1 := -1073741789;
    goto L95;

  anon471_Then:
    assume {:nonnull} Xc != 0;
    assume Xc > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    Status_1 := -1073741811;
    goto L95;

  anon343_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 145} Tmp_62 := CyyStartOrQueue(Extension_3, Irp_2, WriteQueue__CYY_DEVICE_EXTENSION(Extension_3), CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_3), li2bplFunctionConstant194);
    goto anon472_Then, anon472_Else;

  anon472_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon472_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon400_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    Status_1 := -1073741789;
    goto L95;

  anon344_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    call {:si_unique_call 146} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 147} IoAcquireCancelSpinLock(Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    call {:si_unique_call 148} vslice_dummy_var_31 := KeSynchronizeExecution(0, li2bplFunctionConstant365, 0);
    call {:si_unique_call 149} IoReleaseCancelSpinLock(OldIrql_3);
    goto L95;

  anon401_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    Status_1 := -1073741789;
    goto L95;

  anon345_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    call {:si_unique_call 150} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 151} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    call {:si_unique_call 152} vslice_dummy_var_32 := KeSynchronizeExecution(0, li2bplFunctionConstant361, 0);
    call {:si_unique_call 153} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon402_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc HandFlow;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon469_Then, anon469_Else;

  anon469_Else:
    Status_1 := -1073741789;
    goto L95;

  anon469_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon346_Then, anon346_Else;

  anon346_Else:
    Status_1 := -1073741811;
    goto L95;

  anon346_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    Status_1 := -1073741811;
    goto L95;

  anon347_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    havoc Tmp_84;
    goto anon470_Then, anon470_Else;

  anon470_Else:
    assume {:partition} Tmp_84 == 3;
    Status_1 := -1073741811;
    goto L95;

  anon470_Then:
    assume {:partition} Tmp_84 != 3;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    goto L291;

  L291:
    Status_1 := -1073741811;
    goto L95;

  anon348_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    goto L295;

  L295:
    Status_1 := -1073741811;
    goto L95;

  anon350_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    call {:si_unique_call 154} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 155} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    Status_1 := -1073741811;
    call {:si_unique_call 156} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon353_Then:
    goto L303;

  L303:
    call {:si_unique_call 157} vslice_dummy_var_33 := KeSynchronizeExecution(0, li2bplFunctionConstant370, 0);
    call {:si_unique_call 158} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon352_Then:
    goto L303;

  anon351_Then:
    goto L295;

  anon349_Then:
    goto L291;

  anon403_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    Status_1 := -1073741789;
    goto L95;

  anon329_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 159} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 160} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_91;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_91 != 0;
    assume Tmp_91 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_91 != 0;
    assume Tmp_91 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_91 != 0;
    assume Tmp_91 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_91 != 0;
    assume Tmp_91 > 0;
    call {:si_unique_call 161} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon404_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc NewChars;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon468_Then, anon468_Else;

  anon468_Else:
    Status_1 := -1073741789;
    goto L95;

  anon468_Then:
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    call {:si_unique_call 162} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 163} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    goto L341;

  L341:
    Status_1 := -1073741811;
    call {:si_unique_call 164} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon355_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    goto L341;

  anon356_Then:
    goto L338;

  L338:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    call {:si_unique_call 165} vslice_dummy_var_49 := KeSynchronizeExecution(0, li2bplFunctionConstant357, 0);
    call {:si_unique_call 166} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon354_Then:
    goto L338;

  anon405_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    Status_1 := -1073741789;
    goto L95;

  anon328_Then:
    call {:si_unique_call 167} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 168} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_76;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 169} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon406_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Lc_1;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon458_Then, anon458_Else;

  anon458_Else:
    Status_1 := -1073741789;
    goto L95;

  anon458_Then:
    call {:si_unique_call 170} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 171} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_92;
    goto anon459_Then, anon459_Else;

  anon459_Else:
    assume {:partition} Tmp_92 == 1;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  L378:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_73;
    goto anon460_Then, anon460_Else;

  anon460_Else:
    assume {:partition} Tmp_73 == 16;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L382;

  L382:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_63;
    goto anon461_Then, anon461_Else;

  anon461_Else:
    assume {:partition} Tmp_63 == 8;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L388;

  L388:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 172} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon358_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L388;

  anon461_Then:
    assume {:partition} Tmp_63 != 8;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L388;

  anon460_Then:
    assume {:partition} Tmp_73 != 16;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_71;
    goto anon462_Then, anon462_Else;

  anon462_Else:
    assume {:partition} Tmp_71 == 192;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L382;

  anon462_Then:
    assume {:partition} Tmp_71 != 192;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_72;
    goto anon463_Then, anon463_Else;

  anon463_Else:
    assume {:partition} Tmp_72 == 64;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L382;

  anon463_Then:
    assume {:partition} Tmp_72 != 64;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_89;
    goto anon464_Then, anon464_Else;

  anon464_Else:
    assume {:partition} Tmp_89 == 176;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L382;

  anon464_Then:
    assume {:partition} Tmp_89 != 176;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_70;
    goto anon465_Then, anon465_Else;

  anon465_Else:
    assume {:partition} Tmp_70 == 48;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L382;

  anon465_Then:
    assume {:partition} Tmp_70 != 48;
    goto L382;

  anon459_Then:
    assume {:partition} Tmp_92 != 1;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_90;
    goto anon466_Then, anon466_Else;

  anon466_Else:
    assume {:partition} Tmp_90 == 2;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  anon466_Then:
    assume {:partition} Tmp_90 != 2;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_78;
    goto anon467_Then, anon467_Else;

  anon467_Else:
    assume {:partition} Tmp_78 == 3;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  anon467_Then:
    assume {:partition} Tmp_78 != 3;
    goto L378;

  anon357_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  anon407_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Br;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon457_Then, anon457_Else;

  anon457_Else:
    Status_1 := -1073741789;
    goto L95;

  anon457_Then:
    call {:si_unique_call 173} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 174} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Br != 0;
    assume Br > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 175} sdv_KeReleaseSpinLock(0, OldIrql_3);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L95;

  anon408_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    Status_1 := -1073741789;
    goto L95;

  anon359_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_85;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    Mask := Mem_T.INT4[Tmp_85];
    goto anon455_Then, anon455_Else;

  anon455_Else:
    assume {:partition} Mask != 0;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} BAND(Mask, -16) == 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 176} Tmp_62 := CyyStartOrQueue(Extension_3, Irp_2, PurgeQueue__CYY_DEVICE_EXTENSION(Extension_3), CurrentPurgeIrp__CYY_DEVICE_EXTENSION(Extension_3), li2bplFunctionConstant371);
    goto anon456_Then, anon456_Else;

  anon456_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon456_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon360_Then:
    assume {:partition} BAND(Mask, -16) != 0;
    goto L427;

  L427:
    Status_1 := -1073741811;
    goto L95;

  anon455_Then:
    assume {:partition} Mask == 0;
    goto L427;

  anon409_Then:
    Tmp_93 := strConst__li2bpl12;
    call {:si_unique_call 177} vslice_dummy_var_46 := CyyDbgPrintEx(9, Tmp_93);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    Tmp_77 := strConst__li2bpl14;
    call {:si_unique_call 178} vslice_dummy_var_47 := CyyDbgPrintEx(6, Tmp_77);
    Status_1 := -1073741789;
    goto L95;

  anon361_Then:
    Tmp_68 := strConst__li2bpl13;
    call {:si_unique_call 179} vslice_dummy_var_48 := CyyDbgPrintEx(9, Tmp_68);
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 180} Tmp_62 := CyyStartOrQueue(Extension_3, Irp_2, MaskQueue__CYY_DEVICE_EXTENSION(Extension_3), CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_3), li2bplFunctionConstant177);
    goto anon454_Then, anon454_Else;

  anon454_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon454_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon410_Then:
    Tmp_65 := strConst__li2bpl15;
    call {:si_unique_call 181} vslice_dummy_var_42 := CyyDbgPrintEx(9, Tmp_65);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    Tmp_96 := strConst__li2bpl16;
    call {:si_unique_call 182} vslice_dummy_var_43 := CyyDbgPrintEx(6, Tmp_96);
    Status_1 := -1073741789;
    goto L95;

  anon362_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_79;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    NewMask := Mem_T.INT4[Tmp_79];
    goto anon452_Then, anon452_Else;

  anon452_Else:
    assume {:partition} BAND(NewMask, -8192) != 0;
    Tmp_95 := strConst__li2bpl18;
    call {:si_unique_call 183} vslice_dummy_var_44 := CyyDbgPrintEx(6, Tmp_95);
    Status_1 := -1073741811;
    goto L95;

  anon452_Then:
    assume {:partition} BAND(NewMask, -8192) == 0;
    Tmp_67 := strConst__li2bpl17;
    call {:si_unique_call 184} vslice_dummy_var_45 := CyyDbgPrintEx(9, Tmp_67);
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 185} Tmp_62 := CyyStartOrQueue(Extension_3, Irp_2, MaskQueue__CYY_DEVICE_EXTENSION(Extension_3), CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_3), li2bplFunctionConstant177);
    goto anon453_Then, anon453_Else;

  anon453_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon453_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon411_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    Status_1 := -1073741789;
    goto L95;

  anon327_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_69;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    havoc vslice_dummy_var_1106;
    Mem_T.INT4[Tmp_69] := vslice_dummy_var_1106;
    goto L95;

  anon412_Then:
    call {:si_unique_call 186} vslice_dummy_var_25 := KeSynchronizeExecution(0, li2bplFunctionConstant368, 0);
    goto L95;

  anon413_Then:
    call {:si_unique_call 187} vslice_dummy_var_24 := KeSynchronizeExecution(0, li2bplFunctionConstant367, 0);
    goto L95;

  anon414_Then:
    goto L58;

  L58:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_1107;
    call {:si_unique_call 188} Status_1 := CyyGotoPowerState(vslice_dummy_var_1107, Extension_3, 1);
    goto anon449_Then, anon449_Else;

  anon449_Else:
    assume {:partition} yogi_error != 1;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:partition} Status_1 >= 0;
    goto L477;

  L477:
    call {:si_unique_call 189} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 190} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_82;
    goto anon450_Then, anon450_Else;

  anon450_Else:
    assume {:partition} Tmp_82 == 128;
    goto L489;

  L489:
    Status_1 := -1073741811;
    goto L490;

  L490:
    call {:si_unique_call 191} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon450_Then:
    assume {:partition} Tmp_82 != 128;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_66;
    goto anon451_Then, anon451_Else;

  anon451_Else:
    assume {:partition} Tmp_66 != 192;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    Tmp_83 := li2bplFunctionConstant372;
    goto L498;

  L498:
    call {:si_unique_call 192} vslice_dummy_var_34 := KeSynchronizeExecution(0, Tmp_83, 0);
    goto L490;

  anon364_Then:
    Tmp_83 := li2bplFunctionConstant232;
    goto L498;

  anon451_Then:
    assume {:partition} Tmp_66 == 192;
    goto L489;

  anon363_Then:
    assume {:partition} 0 > Status_1;
    goto L95;

  anon449_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon326_Then:
    goto L477;

  anon415_Then:
    goto L58;

  anon416_Then:
    goto L95;

  anon417_Then:
    goto L56;

  L56:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_1108;
    call {:si_unique_call 193} Status_1 := CyyGotoPowerState(vslice_dummy_var_1108, Extension_3, 1);
    goto anon447_Then, anon447_Else;

  anon447_Else:
    assume {:partition} yogi_error != 1;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:partition} Status_1 >= 0;
    goto L501;

  L501:
    call {:si_unique_call 194} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 195} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_94;
    goto anon448_Then, anon448_Else;

  anon448_Else:
    assume {:partition} Tmp_94 == 2;
    Status_1 := -1073741811;
    goto L514;

  L514:
    call {:si_unique_call 196} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon448_Then:
    assume {:partition} Tmp_94 != 2;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    Tmp_74 := li2bplFunctionConstant373;
    goto L520;

  L520:
    call {:si_unique_call 197} vslice_dummy_var_35 := KeSynchronizeExecution(0, Tmp_74, 0);
    goto L514;

  anon366_Then:
    Tmp_74 := li2bplFunctionConstant233;
    goto L520;

  anon365_Then:
    assume {:partition} 0 > Status_1;
    goto L95;

  anon447_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon325_Then:
    goto L501;

  anon418_Then:
    goto L56;

  anon419_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    Status_1 := -1073741789;
    goto L95;

  anon324_Then:
    call {:si_unique_call 198} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 199} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_88;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 200} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon420_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc NewTimeouts;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon446_Then, anon446_Else;

  anon446_Else:
    Status_1 := -1073741789;
    goto L95;

  anon446_Then:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    Status_1 := -1073741811;
    goto L95;

  anon369_Then:
    goto L539;

  L539:
    call {:si_unique_call 201} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 202} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    call {:si_unique_call 203} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon368_Then:
    goto L539;

  anon367_Then:
    goto L539;

  anon421_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    Status_1 := -1073741789;
    goto L95;

  anon370_Then:
    call {:si_unique_call 204} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_2;
    call {:si_unique_call 205} IoAcquireCancelSpinLock(Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_2 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    Status_1 := -1073741811;
    call {:si_unique_call 206} IoReleaseCancelSpinLock(OldIrql_2);
    goto L95;

  anon371_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    call {:si_unique_call 207} IoReleaseCancelSpinLock(OldIrql_2);
    Status_1 := -1073741536;
    goto L95;

  anon372_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 208} IoReleaseCancelSpinLock(OldIrql_2);
    call {:si_unique_call 209} CyyStartImmediate(Extension_3);
    Tmp_62 := 259;
    goto L1;

  anon422_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_1109;
    call {:si_unique_call 210} Status_1 := CyyGotoPowerState(vslice_dummy_var_1109, Extension_3, 1);
    goto anon445_Then, anon445_Else;

  anon445_Else:
    assume {:partition} yogi_error != 1;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:partition} Status_1 >= 0;
    goto L581;

  L581:
    call {:si_unique_call 211} vslice_dummy_var_36 := KeSynchronizeExecution(0, li2bplFunctionConstant374, 0);
    goto L95;

  anon373_Then:
    assume {:partition} 0 > Status_1;
    goto L95;

  anon445_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon323_Then:
    goto L581;

  anon423_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_1110;
    call {:si_unique_call 212} Status_1 := CyyGotoPowerState(vslice_dummy_var_1110, Extension_3, 1);
    goto anon444_Then, anon444_Else;

  anon444_Else:
    assume {:partition} yogi_error != 1;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:partition} Status_1 >= 0;
    goto L591;

  L591:
    call {:si_unique_call 213} vslice_dummy_var_37 := KeSynchronizeExecution(0, li2bplFunctionConstant375, 0);
    goto L95;

  anon374_Then:
    assume {:partition} 0 > Status_1;
    goto L95;

  anon444_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon322_Then:
    goto L591;

  anon424_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Lc;
    Mask_1 := 255;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    Status_1 := -1073741789;
    goto L95;

  anon441_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_1111;
    call {:si_unique_call 214} Status_1 := CyyGotoPowerState(vslice_dummy_var_1111, Extension_3, 1);
    goto anon442_Then, anon442_Else;

  anon442_Else:
    assume {:partition} yogi_error != 1;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:partition} Status_1 >= 0;
    goto L611;

  L611:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    LData := 3;
    Mask_1 := 255;
    goto L625;

  L625:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon443_Then, anon443_Else;

  anon443_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LParity := 48;
    goto L635;

  L635:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LStop := 8;
    goto L642;

  L642:
    call {:si_unique_call 215} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 216} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 217} vslice_dummy_var_41 := KeSynchronizeExecution(0, li2bplFunctionConstant360, 0);
    call {:si_unique_call 218} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon433_Then:
    Status_1 := -1073741811;
    goto L95;

  anon434_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LStop := 4;
    goto L642;

  anon378_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LStop := 0;
    goto L642;

  anon429_Then:
    Status_1 := -1073741811;
    goto L95;

  anon430_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LParity := 176;
    goto L635;

  anon431_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LParity := 64;
    goto L635;

  anon432_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LParity := 192;
    goto L635;

  anon443_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LParity := 16;
    goto L635;

  anon426_Then:
    Status_1 := -1073741811;
    goto L95;

  anon427_Then:
    LData := 2;
    Mask_1 := 127;
    goto L625;

  anon428_Then:
    LData := 1;
    Mask_1 := 63;
    goto L625;

  anon376_Then:
    LData := 0;
    Mask_1 := 31;
    goto L625;

  anon377_Then:
    assume {:partition} 0 > Status_1;
    goto L95;

  anon442_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon375_Then:
    goto L611;

  anon425_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Rs;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    Status_1 := -1073741789;
    goto L95;

  anon439_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    Status_1 := 0;
    goto L95;

  anon379_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    havoc vslice_dummy_var_1112;
    call {:si_unique_call 219} boogieTmp := sdv_ExAllocatePoolWithQuotaTag(0, vslice_dummy_var_1112, -797345469);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 220} Tmp_62 := CyyStartOrQueue(Extension_3, Irp_2, ReadQueue__CYY_DEVICE_EXTENSION(Extension_3), CurrentReadIrp__CYY_DEVICE_EXTENSION(Extension_3), li2bplFunctionConstant376);
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon440_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon380_Then:
    goto L95;

  anon436_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    Status_1 := -1073741789;
    goto L95;

  anon381_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_97;
    assume {:nonnull} Tmp_97 != 0;
    assume Tmp_97 > 0;
    havoc BaudRate;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    assume {:partition} BaudRate != 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:partition} BaudRate <= 230400;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:partition} BaudRate > 115200;
    Status_1 := -1073741811;
    goto L95;

  anon385_Then:
    assume {:partition} 115200 >= BaudRate;
    goto L706;

  L706:
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:partition} Status_1 >= 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_1113;
    call {:si_unique_call 221} Status_1 := CyyGotoPowerState(vslice_dummy_var_1113, Extension_3, 1);
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:partition} yogi_error != 1;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:partition} Status_1 >= 0;
    goto L710;

  L710:
    call {:si_unique_call 222} Tmp_80 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    Mem_T.INT4[Tmp_80] := OldIrql_3;
    call {:si_unique_call 223} sdv_KeAcquireSpinLock(0, Tmp_80);
    assume {:nonnull} Tmp_80 != 0;
    assume Tmp_80 > 0;
    OldIrql_3 := Mem_T.INT4[Tmp_80];
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:partition} Status_1 >= 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} S != 0;
    assume S > 0;
    assume {:nonnull} S != 0;
    assume S > 0;
    call {:si_unique_call 224} result := KeSynchronizeExecution(0, li2bplFunctionConstant358, 0);
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:partition} result == 0;
    Status_1 := -1073741811;
    goto L721;

  L721:
    call {:si_unique_call 225} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon389_Then:
    assume {:partition} result != 0;
    goto L721;

  anon388_Then:
    assume {:partition} 0 > Status_1;
    goto L721;

  anon387_Then:
    assume {:partition} 0 > Status_1;
    goto L95;

  anon438_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon386_Then:
    goto L710;

  anon384_Then:
    assume {:partition} 0 > Status_1;
    goto L710;

  anon383_Then:
    goto L706;

  anon382_Then:
    assume {:partition} 230400 < BaudRate;
    goto L703;

  L703:
    Status_1 := -1073741811;
    goto L95;

  anon437_Then:
    assume {:partition} BaudRate == 0;
    goto L703;
}



procedure {:origName "CyyCDCmd"} CyyCDCmd(actual_Extension_4: int, actual_cmd: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCDCmd"} CyyCDCmd(actual_Extension_4: int, actual_cmd: int)
{
  var {:pointer} Tmp_99: int;
  var {:pointer} Tmp_100: int;
  var {:pointer} s_p_e_c_i_a_l_5: int;
  var {:pointer} chip: int;
  var {:scalar} oneSecond: int;
  var {:scalar} Tmp_105: int;
  var {:scalar} sdv_101: int;
  var {:pointer} s_p_e_c_i_a_l_6: int;
  var {:scalar} Tmp_106: int;
  var {:scalar} difference: int;
  var {:pointer} Tmp_107: int;
  var {:scalar} value: int;
  var {:scalar} irql: int;
  var {:scalar} startOfSpin: int;
  var {:scalar} Tmp_109: int;
  var {:scalar} nextQuery: int;
  var {:pointer} Extension_4: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_1114: int;

  anon0:
    call {:si_unique_call 226} vslice_dummy_var_52 := __HAVOC_malloc(4);
    call {:si_unique_call 227} oneSecond := __HAVOC_malloc(20);
    call {:si_unique_call 228} Tmp_106 := __HAVOC_malloc(20);
    call {:si_unique_call 229} difference := __HAVOC_malloc(20);
    call {:si_unique_call 230} startOfSpin := __HAVOC_malloc(20);
    call {:si_unique_call 231} Tmp_109 := __HAVOC_malloc(20);
    call {:si_unique_call 232} nextQuery := __HAVOC_malloc(20);
    Extension_4 := actual_Extension_4;
    value := 255;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc chip;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} oneSecond != 0;
    assume oneSecond > 0;
    Tmp_107 := KeTickCount;
    assume {:nonnull} Tmp_107 != 0;
    assume Tmp_107 > 0;
    havoc s_p_e_c_i_a_l_5;
    goto L18;

  L18:
    call {:si_unique_call 233} CyyCDCmd_loop_L18(s_p_e_c_i_a_l_5, startOfSpin);
    goto L18_last;

  L18_last:
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 234} value := corral_nondet();
    goto L30;

  L30:
    call {:si_unique_call 235} Tmp_99, sdv_101, s_p_e_c_i_a_l_6, value := CyyCDCmd_loop_L30(Tmp_99, chip, oneSecond, sdv_101, s_p_e_c_i_a_l_6, difference, value, startOfSpin, nextQuery);
    goto L30_last;

  L30_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} value != 0;
    Tmp_99 := KeTickCount;
    assume {:nonnull} Tmp_99 != 0;
    assume Tmp_99 > 0;
    havoc s_p_e_c_i_a_l_6;
    goto L35;

  L35:
    call {:si_unique_call 236} CyyCDCmd_loop_L35(s_p_e_c_i_a_l_6, nextQuery);
    goto L35_last;

  L35_last:
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_6 != 0;
    assume s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_6 != 0;
    assume s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_6 != 0;
    assume s_p_e_c_i_a_l_6 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    call {:si_unique_call 237} sdv_101 := corral_nondet();
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} oneSecond != 0;
    assume oneSecond > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 238} irql := sdv_KeGetCurrentIrql();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} 2 >= irql;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_105;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    assume {:nonnull} Tmp_106 != 0;
    assume Tmp_106 > 0;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    assume {:nonnull} Tmp_109 != 0;
    assume Tmp_109 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_100;
    assume {:nonnull} Tmp_100 != 0;
    assume Tmp_100 > 0;
    havoc vslice_dummy_var_1114;
    call {:si_unique_call 239} CyyLogError(vslice_dummy_var_1114, 0, Tmp_109, Tmp_106, 0, 0, 0, Tmp_105, 0, 266240, 0, 0, 0, 0);
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto L31;

  L31:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} value == 0;
    goto L1;

  L1:
    return;

  anon16_Then:
    assume {:partition} value != 0;
    goto L1;

  anon19_Then:
    assume {:partition} irql > 2;
    goto L31;

  anon18_Then:
    goto L31;

  anon17_Then:
    call {:si_unique_call 240} value := corral_nondet();
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:partition} value == 0;
    goto L31;

  anon20_Then:
    goto anon20_Then_dummy;

  anon20_Then_dummy:
    assume false;
    return;
}



procedure {:origName "CyyInternalIoControl"} CyyInternalIoControl(actual_PDevObj: int, actual_PIrp: int) returns (Tmp_110: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_110 == 0 || Tmp_110 == -1073741536 || Tmp_110 == 259 || Tmp_110 == -1073741738 || Tmp_110 == -1073741811 || Tmp_110 == -1073741789 || Tmp_110 == -1073741637;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyInternalIoControl"} CyyInternalIoControl(actual_PDevObj: int, actual_PIrp: int) returns (Tmp_110: int)
{
  var {:scalar} basic: int;
  var {:pointer} pBasic: int;
  var {:pointer} pDevExt_1: int;
  var {:scalar} Tmp_111: int;
  var {:pointer} Tmp_112: int;
  var {:scalar} prologueStatus_1: int;
  var {:scalar} S_10: int;
  var {:scalar} cap: int;
  var {:pointer} Tmp_113: int;
  var {:pointer} Tmp_114: int;
  var {:scalar} OldIrql_4: int;
  var {:scalar} Tmp_115: int;
  var {:pointer} pIrpStack: int;
  var {:scalar} sdv_110: int;
  var {:pointer} Tmp_116: int;
  var {:scalar} status_1: int;
  var {:pointer} Tmp_117: int;
  var {:pointer} Tmp_118: int;
  var {:pointer} PDevObj: int;
  var {:pointer} PIrp: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;

  anon0:
    call {:si_unique_call 241} basic := __HAVOC_malloc(44);
    call {:si_unique_call 242} S_10 := __HAVOC_malloc(8);
    PDevObj := actual_PDevObj;
    PIrp := actual_PIrp;
    call {:si_unique_call 243} Tmp_112 := __HAVOC_malloc(28);
    call {:si_unique_call 244} Tmp_114 := __HAVOC_malloc(72);
    call {:si_unique_call 245} Tmp_116 := __HAVOC_malloc(72);
    call {:si_unique_call 246} Tmp_117 := __HAVOC_malloc(96);
    call {:si_unique_call 247} Tmp_118 := __HAVOC_malloc(28);
    assume {:nonnull} PDevObj != 0;
    assume PDevObj > 0;
    havoc pDevExt_1;
    call {:si_unique_call 248} prologueStatus_1 := CyyIRPPrologue(PIrp, pDevExt_1);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} prologueStatus_1 != 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} prologueStatus_1 != 259;
    Tmp_114 := strConst__li2bpl3;
    call {:si_unique_call 249} vslice_dummy_var_54 := CyyDbgPrintEx(9, Tmp_114);
    call {:si_unique_call 250} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 251} CyyIRPEpilogue(pDevExt_1);
    goto L19;

  L19:
    Tmp_110 := prologueStatus_1;
    goto L1;

  L1:
    return;

  anon36_Then:
    assume {:partition} prologueStatus_1 == 259;
    goto L19;

  anon35_Then:
    assume {:partition} prologueStatus_1 == 0;
    Tmp_117 := strConst__li2bpl11;
    call {:si_unique_call 252} vslice_dummy_var_55 := CyyDbgPrintEx(9, Tmp_117);
    call {:si_unique_call 253} sdv_110 := CyyCompleteIfError(PDevObj, PIrp);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_110 != 0;
    Tmp_110 := -1073741536;
    goto L1;

  anon37_Then:
    assume {:partition} sdv_110 == 0;
    call {:si_unique_call 254} pIrpStack := sdv_IoGetCurrentIrpStackLocation(PIrp);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    status_1 := 0;
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L48;

  L48:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    status_1 := -1073741789;
    goto L56;

  L56:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_116 := strConst__li2bpl3;
    call {:si_unique_call 255} vslice_dummy_var_56 := CyyDbgPrintEx(9, Tmp_116);
    call {:si_unique_call 256} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 257} CyyIRPEpilogue(pDevExt_1);
    Tmp_110 := status_1;
    goto L1;

  anon40_Then:
    call {:si_unique_call 258} sdv_RtlZeroMemory(0, 44);
    assume {:nonnull} basic != 0;
    assume basic > 0;
    assume {:nonnull} basic != 0;
    assume basic > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    havoc pBasic;
    call {:si_unique_call 259} sdv_RtlCopyMemory(0, 0, 20);
    call {:si_unique_call 260} sdv_RtlCopyMemory(0, 0, 16);
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    pBasic := basic;
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 261} vslice_dummy_var_57 := KeSynchronizeExecution(0, li2bplFunctionConstant378, 0);
    goto L84;

  L84:
    call {:si_unique_call 262} Tmp_113 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_113 != 0;
    assume Tmp_113 > 0;
    Mem_T.INT4[Tmp_113] := OldIrql_4;
    call {:si_unique_call 263} sdv_KeAcquireSpinLock(0, Tmp_113);
    assume {:nonnull} Tmp_113 != 0;
    assume Tmp_113 > 0;
    OldIrql_4 := Mem_T.INT4[Tmp_113];
    call {:si_unique_call 264} sdv_RtlCopyMemory(0, 0, 20);
    assume {:nonnull} S_10 != 0;
    assume S_10 > 0;
    assume {:nonnull} S_10 != 0;
    assume S_10 > 0;
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    call {:si_unique_call 265} vslice_dummy_var_58 := KeSynchronizeExecution(0, li2bplFunctionConstant370, 0);
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto L97;

  L97:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto L98;

  L98:
    call {:si_unique_call 266} sdv_KeReleaseSpinLock(0, OldIrql_4);
    goto L56;

  anon41_Then:
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto L98;

  anon42_Then:
    goto L97;

  anon38_Then:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    status_1 := -1073741789;
    goto L56;

  anon39_Then:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    havoc pBasic;
    call {:si_unique_call 267} vslice_dummy_var_59 := KeSynchronizeExecution(0, li2bplFunctionConstant379, 0);
    goto L84;

  anon45_Then:
    status_1 := -1073741811;
    goto L56;

  anon46_Then:
    goto L48;

  anon47_Then:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    call {:si_unique_call 268} vslice_dummy_var_53 := IoCancelIrp(0);
    goto L110;

  L110:
    status_1 := 0;
    goto L56;

  anon51_Then:
    goto L110;

  anon48_Then:
    cap := 2;
    goto L115;

  L115:
    call {:si_unique_call 269} Tmp_111, Tmp_112, cap, Tmp_115, Tmp_118 := CyyInternalIoControl_loop_L115(pDevExt_1, Tmp_111, Tmp_112, cap, Tmp_115, Tmp_118);
    goto L115_last;

  L115_last:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} 7 > cap;
    Tmp_111 := cap;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc Tmp_112;
    assume {:nonnull} Tmp_112 != 0;
    assume Tmp_112 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.INT4[Tmp_112 + Tmp_111 * 4] >= 1;
    Tmp_115 := cap;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L118;

  L118:
    cap := cap + 1;
    goto L118_dummy;

  L118_dummy:
    assume false;
    return;

  anon50_Then:
    goto L116;

  L116:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} 7 > cap;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    status_1 := 0;
    goto L56;

  anon44_Then:
    assume {:partition} cap >= 7;
    status_1 := -1073741637;
    goto L56;

  anon49_Then:
    assume {:partition} 1 > Mem_T.INT4[Tmp_112 + Tmp_111 * 4];
    goto L118;

  anon43_Then:
    assume {:partition} cap >= 7;
    goto L116;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init12"} _sdv_init12()
{
  var vslice_dummy_var_60: int;

  anon0:
    call {:si_unique_call 270} vslice_dummy_var_60 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "CyyGetProperties"} CyyGetProperties(actual_Extension_5: int, actual_Properties: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetProperties"} CyyGetProperties(actual_Extension_5: int, actual_Properties: int)
{
  var {:pointer} Extension_5: int;
  var {:pointer} Properties: int;
  var vslice_dummy_var_61: int;

  anon0:
    call {:si_unique_call 271} vslice_dummy_var_61 := __HAVOC_malloc(4);
    Extension_5 := actual_Extension_5;
    Properties := actual_Properties;
    call {:si_unique_call 272} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    return;
}



procedure {:origName "CyyDevicePowerComplete"} CyyDevicePowerComplete(actual_DeviceObject_3: int, actual_Irp_3: int, actual_Context: int) returns (Tmp_123: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_123 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyDevicePowerComplete"} CyyDevicePowerComplete(actual_DeviceObject_3: int, actual_Irp_3: int, actual_Context: int) returns (Tmp_123: int)
{
  var {:pointer} SD2: int;
  var {:pointer} pDevExt_2: int;
  var {:scalar} powerState: int;
  var {:scalar} sdv_2: int;
  var {:pointer} Tmp_124: int;
  var {:pointer} stack: int;
  var {:scalar} powerType: int;
  var {:pointer} DeviceObject_3: int;
  var {:pointer} Irp_3: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;

  anon0:
    call {:si_unique_call 273} powerState := __HAVOC_malloc(8);
    call {:si_unique_call 274} sdv_2 := __HAVOC_malloc(8);
    DeviceObject_3 := actual_DeviceObject_3;
    Irp_3 := actual_Irp_3;
    call {:si_unique_call 275} Tmp_124 := __HAVOC_malloc(72);
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 276} sdv_IoMarkIrpPending(0);
    goto L8;

  L8:
    assume {:nonnull} DeviceObject_3 != 0;
    assume DeviceObject_3 > 0;
    havoc pDevExt_2;
    call {:si_unique_call 277} stack := sdv_IoGetCurrentIrpStackLocation(Irp_3);
    assume {:nonnull} stack != 0;
    assume stack > 0;
    havoc powerType;
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    assume {:nonnull} stack != 0;
    assume stack > 0;
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    assume {:nonnull} stack != 0;
    assume stack > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    call {:si_unique_call 278} vslice_dummy_var_62 := KeSynchronizeExecution(0, li2bplFunctionConstant287, 0);
    goto L20;

  L20:
    call {:si_unique_call 279} SD2 := PoSetPowerState(0, powerType, powerState);
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} sdv_2 != 0;
    assume sdv_2 > 0;
    call {:si_unique_call 280} PoStartNextPowerIrp(0);
    Tmp_124 := strConst__li2bpl3;
    call {:si_unique_call 281} vslice_dummy_var_63 := CyyDbgPrintEx(9, Tmp_124);
    call {:si_unique_call 282} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 283} CyyIRPEpilogue(pDevExt_2);
    Tmp_123 := -1073741802;
    return;

  anon6_Then:
    goto L20;

  anon5_Then:
    goto L8;
}



procedure {:origName "CyySystemPowerComplete"} CyySystemPowerComplete(actual_DeviceObject_4: int, actual_Irp_4: int, actual_Context_1: int) returns (Tmp_126: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_126 == -1073741802 || Tmp_126 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyySystemPowerComplete"} CyySystemPowerComplete(actual_DeviceObject_4: int, actual_Irp_4: int, actual_Context_1: int) returns (Tmp_126: int)
{
  var {:pointer} Tmp_128: int;
  var {:scalar} powerState_1: int;
  var {:pointer} powerContext: int;
  var {:pointer} sdv_118: int;
  var {:scalar} Tmp_129: int;
  var {:pointer} data: int;
  var {:pointer} Tmp_130: int;
  var {:scalar} status_2: int;
  var {:pointer} stack_1: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_4: int;
  var vslice_dummy_var_64: int;

  anon0:
    call {:si_unique_call 284} powerState_1 := __HAVOC_malloc(8);
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_4 := actual_Irp_4;
    call {:si_unique_call 285} Tmp_128 := __HAVOC_malloc(28);
    call {:si_unique_call 286} Tmp_130 := __HAVOC_malloc(72);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    havoc status_2;
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc data;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_2 >= 0;
    call {:si_unique_call 287} stack_1 := sdv_IoGetCurrentIrpStackLocation(Irp_4);
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L24;

  L24:
    assume {:nonnull} stack_1 != 0;
    assume stack_1 > 0;
    havoc Tmp_129;
    assume {:nonnull} data != 0;
    assume data > 0;
    havoc Tmp_128;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto L26;

  L26:
    call {:si_unique_call 288} sdv_118 := ExAllocatePoolWithTag(0, 8, -797345469);
    powerContext := sdv_118;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} powerContext != 0;
    assume {:nonnull} powerContext != 0;
    assume powerContext > 0;
    assume {:nonnull} powerContext != 0;
    assume powerContext > 0;
    call {:si_unique_call 289} status_2 := PoRequestPowerIrp(0, 2, powerState_1, li2bplFunctionConstant288, 0, 0);
    goto L38;

  L38:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_2 >= 0;
    goto L40;

  L40:
    Tmp_126 := -1073741802;
    goto L1;

  L1:
    return;

  anon25_Then:
    assume {:partition} 0 > status_2;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} powerContext != 0;
    call {:si_unique_call 290} sdv_ExFreePool(0);
    goto L41;

  L41:
    call {:si_unique_call 291} PoStartNextPowerIrp(0);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    Tmp_130 := strConst__li2bpl3;
    call {:si_unique_call 292} vslice_dummy_var_64 := CyyDbgPrintEx(9, Tmp_130);
    call {:si_unique_call 293} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 294} CyyIRPEpilogue(data);
    goto L40;

  anon26_Then:
    assume {:partition} powerContext == 0;
    goto L41;

  anon36_Then:
    assume {:partition} powerContext == 0;
    status_2 := -1073741670;
    goto L38;

  anon27_Then:
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto L26;

  anon28_Then:
    goto L24;

  anon29_Then:
    goto L24;

  anon30_Then:
    goto L24;

  anon31_Then:
    goto L24;

  anon32_Then:
    goto L24;

  anon33_Then:
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto L26;

  anon35_Then:
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    goto L26;

  anon34_Then:
    assume {:partition} 0 > status_2;
    call {:si_unique_call 295} PoStartNextPowerIrp(0);
    call {:si_unique_call 296} CyyIRPEpilogue(data);
    Tmp_126 := 0;
    goto L1;
}



procedure {:origName "CyyWakeCompletion"} CyyWakeCompletion(actual_PDevObj_1: int, actual_MinorFunction: int, actual_SD1: int, actual_Context_2: int, actual_IoStatus: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyWakeCompletion"} CyyWakeCompletion(actual_PDevObj_1: int, actual_MinorFunction: int, actual_SD1: int, actual_Context_2: int, actual_IoStatus: int)
{
  var {:scalar} PowerState_1: int;
  var {:pointer} pDevExt_3: int;
  var {:scalar} powerState_2: int;
  var {:scalar} status_3: int;
  var {:pointer} SD1: int;
  var {:pointer} Context_2: int;
  var {:pointer} IoStatus: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;

  anon0:
    call {:si_unique_call 297} PowerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 298} vslice_dummy_var_65 := __HAVOC_malloc(4);
    call {:si_unique_call 299} powerState_2 := __HAVOC_malloc(8);
    SD1 := actual_SD1;
    Context_2 := actual_Context_2;
    IoStatus := actual_IoStatus;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} PowerState_1 != 0;
    assume PowerState_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    pDevExt_3 := Context_2;
    assume {:nonnull} IoStatus != 0;
    assume IoStatus > 0;
    havoc status_3;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_3 >= 0;
    assume {:nonnull} powerState_2 != 0;
    assume powerState_2 > 0;
    call {:si_unique_call 300} vslice_dummy_var_66 := PoRequestPowerIrp(0, 2, powerState_2, 0, 0, 0);
    goto L9;

  L9:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 301} CyyIRPEpilogue(pDevExt_3);
    return;

  anon3_Then:
    assume {:partition} 0 > status_3;
    goto L9;
}



procedure {:origName "CyySendWaitWake"} CyySendWaitWake(actual_PDevExt: int) returns (Tmp_133: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyySendWaitWake"} CyySendWaitWake(actual_PDevExt: int) returns (Tmp_133: int)
{
  var {:pointer} Tmp_134: int;
  var {:scalar} powerState_3: int;
  var {:pointer} pIrp: int;
  var {:scalar} status_4: int;
  var {:pointer} PDevExt: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_1115: int;

  anon0:
    call {:si_unique_call 302} powerState_3 := __HAVOC_malloc(8);
    PDevExt := actual_PDevExt;
    call {:si_unique_call 303} sdv_do_paged_code_check();
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    Tmp_133 := -1073741436;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    Tmp_133 := -1073741436;
    goto L1;

  anon14_Then:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 304} Tmp_134 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    havoc vslice_dummy_var_1115;
    Mem_T.INT4[Tmp_134] := vslice_dummy_var_1115;
    call {:si_unique_call 305} vslice_dummy_var_67 := sdv_InterlockedIncrement(Tmp_134);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} powerState_3 != 0;
    assume powerState_3 > 0;
    call {:si_unique_call 306} status_4 := PoRequestPowerIrp(0, 0, powerState_3, li2bplFunctionConstant295, 0, 0);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} status_4 == 259;
    status_4 := 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L27;

  L27:
    Tmp_133 := status_4;
    goto L1;

  anon16_Then:
    assume {:partition} status_4 != 259;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_4 < 0;
    call {:si_unique_call 307} CyyIRPEpilogue(PDevExt);
    goto L27;

  anon17_Then:
    assume {:partition} 0 <= status_4;
    goto L27;

  anon15_Then:
    Tmp_133 := -1073741436;
    goto L1;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyGotoPowerState"} CyyGotoPowerState(actual_PDevObj_2: int, actual_PDevExt_1: int, actual_DevPowerState: int) returns (Tmp_135: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGotoPowerState"} CyyGotoPowerState(actual_PDevObj_2: int, actual_PDevExt_1: int, actual_DevPowerState: int) returns (Tmp_135: int)
{
  var {:pointer} Tmp_136: int;
  var {:scalar} powerState_4: int;
  var {:pointer} Tmp_138: int;
  var {:scalar} gotoPowEvent: int;
  var {:scalar} status_5: int;
  var {:scalar} DevPowerState: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;

  anon0:
    call {:si_unique_call 308} powerState_4 := __HAVOC_malloc(8);
    call {:si_unique_call 309} gotoPowEvent := __HAVOC_malloc(124);
    DevPowerState := actual_DevPowerState;
    call {:si_unique_call 310} Tmp_136 := __HAVOC_malloc(88);
    call {:si_unique_call 311} Tmp_138 := __HAVOC_malloc(108);
    call {:si_unique_call 312} sdv_do_paged_code_check();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    Tmp_136 := strConst__li2bpl19;
    call {:si_unique_call 313} vslice_dummy_var_69 := CyyDbgPrintEx(11, Tmp_136);
    assume {:nonnull} powerState_4 != 0;
    assume powerState_4 > 0;
    call {:si_unique_call 314} KeInitializeEvent(gotoPowEvent, 1, 0);
    call {:si_unique_call 315} status_5 := PoRequestPowerIrp(0, 2, powerState_4, li2bplFunctionConstant284, 0, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} status_5 == 259;
    call {:si_unique_call 316} vslice_dummy_var_68 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    status_5 := 0;
    goto L21;

  L21:
    Tmp_138 := strConst__li2bpl20;
    call {:si_unique_call 317} vslice_dummy_var_70 := CyyDbgPrintEx(11, Tmp_138);
    Tmp_135 := status_5;
    goto LM2;

  LM2:
    return;

  anon5_Then:
    assume {:partition} status_5 != 259;
    goto L21;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_71: int;

  anon0:
    call {:si_unique_call 318} vslice_dummy_var_71 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyPowerDispatch"} CyyPowerDispatch(actual_PDevObj_3: int, actual_PIrp_1: int) returns (Tmp_141: int);
  modifies alloc, Mem_T.INT4, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyPowerDispatch"} CyyPowerDispatch(actual_PDevObj_3: int, actual_PIrp_1: int) returns (Tmp_141: int)
{
  var {:pointer} Tmp_142: int;
  var {:pointer} Tmp_144: int;
  var {:pointer} Tmp_145: int;
  var {:pointer} Tmp_146: int;
  var {:pointer} pDevExt_4: int;
  var {:pointer} Tmp_147: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Tmp_149: int;
  var {:pointer} Tmp_150: int;
  var {:pointer} Tmp_151: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} pIrpStack_1: int;
  var {:pointer} pLowerDevObj: int;
  var {:pointer} Tmp_153: int;
  var {:scalar} status_6: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} PDevObj_3: int;
  var {:pointer} PIrp_1: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;

  anon0:
    PDevObj_3 := actual_PDevObj_3;
    PIrp_1 := actual_PIrp_1;
    call {:si_unique_call 319} Tmp_142 := __HAVOC_malloc(100);
    call {:si_unique_call 320} Tmp_144 := __HAVOC_malloc(104);
    call {:si_unique_call 321} Tmp_145 := __HAVOC_malloc(72);
    call {:si_unique_call 322} Tmp_146 := __HAVOC_malloc(100);
    call {:si_unique_call 323} Tmp_147 := __HAVOC_malloc(104);
    call {:si_unique_call 324} Tmp_148 := __HAVOC_malloc(72);
    call {:si_unique_call 325} Tmp_149 := __HAVOC_malloc(124);
    call {:si_unique_call 326} Tmp_150 := __HAVOC_malloc(80);
    call {:si_unique_call 327} Tmp_151 := __HAVOC_malloc(112);
    call {:si_unique_call 328} Tmp_152 := __HAVOC_malloc(72);
    call {:si_unique_call 329} Tmp_153 := __HAVOC_malloc(136);
    call {:si_unique_call 330} Tmp_154 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_3 != 0;
    assume PDevObj_3 > 0;
    havoc pDevExt_4;
    call {:si_unique_call 331} pIrpStack_1 := sdv_IoGetCurrentIrpStackLocation(PIrp_1);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc pLowerDevObj;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 332} sdv_do_paged_code_check();
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 333} status_6 := CyyIRPPrologue(PIrp_1, pDevExt_4);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_6 != 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_6 != 259;
    call {:si_unique_call 334} PoStartNextPowerIrp(0);
    Tmp_148 := strConst__li2bpl3;
    call {:si_unique_call 335} vslice_dummy_var_74 := CyyDbgPrintEx(9, Tmp_148);
    call {:si_unique_call 336} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 337} CyyIRPEpilogue(pDevExt_4);
    goto L26;

  L26:
    Tmp_141 := status_6;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon42_Then:
    assume {:partition} status_6 == 259;
    goto L26;

  anon41_Then:
    assume {:partition} status_6 == 0;
    status_6 := 0;
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    Tmp_151 := strConst__li2bpl24;
    call {:si_unique_call 338} vslice_dummy_var_84 := CyyDbgPrintEx(12, Tmp_151);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto L57;

  L57:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    havoc status_6;
    call {:si_unique_call 339} PoStartNextPowerIrp(0);
    Tmp_145 := strConst__li2bpl3;
    call {:si_unique_call 340} vslice_dummy_var_85 := CyyDbgPrintEx(9, Tmp_145);
    call {:si_unique_call 341} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 342} CyyIRPEpilogue(pDevExt_4);
    Tmp_141 := status_6;
    goto L1;

  anon46_Then:
    goto L58;

  L58:
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    status_6 := 0;
    call {:si_unique_call 343} PoStartNextPowerIrp(0);
    call {:si_unique_call 344} sdv_IoSkipCurrentIrpStackLocation(PIrp_1);
    call {:si_unique_call 345} Tmp_141 := CyyPoCallDriver(pDevExt_4, pLowerDevObj, PIrp_1);
    goto L1;

  anon45_Then:
    goto L58;

  anon43_Then:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L58;

  anon44_Then:
    goto L57;

  anon50_Then:
    goto L40;

  L40:
    call {:si_unique_call 346} PoStartNextPowerIrp(0);
    call {:si_unique_call 347} sdv_IoSkipCurrentIrpStackLocation(PIrp_1);
    call {:si_unique_call 348} status_6 := CyyPoCallDriver(pDevExt_4, pLowerDevObj, PIrp_1);
    Tmp_141 := status_6;
    goto L1;

  anon51_Then:
    Tmp_144 := strConst__li2bpl23;
    call {:si_unique_call 349} vslice_dummy_var_77 := CyyDbgPrintEx(12, Tmp_144);
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    Tmp_152 := strConst__li2bpl27;
    call {:si_unique_call 350} vslice_dummy_var_79 := CyyDbgPrintEx(12, Tmp_152);
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    havoc status_6;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    Tmp_153 := strConst__li2bpl28;
    call {:si_unique_call 351} vslice_dummy_var_80 := CyyDbgPrintEx(12, Tmp_153);
    goto L40;

  anon59_Then:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto L107;

  L107:
    Tmp_146 := strConst__li2bpl29;
    call {:si_unique_call 352} vslice_dummy_var_82 := CyyDbgPrintEx(12, Tmp_146);
    call {:si_unique_call 353} Tmp_141 := CyySetPowerD3(PDevObj_3, PIrp_1);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon54_Then:
    goto L40;

  anon55_Then:
    goto L107;

  anon56_Then:
    goto L107;

  anon48_Then:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(pDevExt_4)] != 0;
    Tmp_142 := strConst__li2bpl30;
    call {:si_unique_call 354} vslice_dummy_var_81 := CyyDbgPrintEx(12, Tmp_142);
    call {:si_unique_call 355} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 356} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_1);
    call {:si_unique_call 357} sdv_IoSetCompletionRoutine(PIrp_1, li2bplFunctionConstant290, 0, 1, 1, 1);
    call {:si_unique_call 358} vslice_dummy_var_72 := PoCallDriver(0, PIrp_1);
    Tmp_141 := 259;
    goto L1;

  anon49_Then:
    assume {:partition} Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(pDevExt_4)] == 0;
    goto L40;

  anon53_Then:
    Tmp_150 := strConst__li2bpl25;
    call {:si_unique_call 359} vslice_dummy_var_83 := CyyDbgPrintEx(12, Tmp_150);
    goto L40;

  anon47_Then:
    Tmp_154 := strConst__li2bpl26;
    call {:si_unique_call 360} vslice_dummy_var_78 := CyyDbgPrintEx(12, Tmp_154);
    call {:si_unique_call 361} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 362} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_1);
    call {:si_unique_call 363} sdv_IoSetCompletionRoutine(PIrp_1, li2bplFunctionConstant289, 0, 1, 1, 1);
    call {:si_unique_call 364} vslice_dummy_var_73 := PoCallDriver(0, PIrp_1);
    Tmp_141 := 259;
    goto L1;

  anon52_Then:
    Tmp_149 := strConst__li2bpl22;
    call {:si_unique_call 365} vslice_dummy_var_76 := CyyDbgPrintEx(12, Tmp_149);
    goto L40;

  anon58_Then:
    Tmp_147 := strConst__li2bpl21;
    call {:si_unique_call 366} vslice_dummy_var_75 := CyyDbgPrintEx(12, Tmp_147);
    goto L40;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyySetPowerD3"} CyySetPowerD3(actual_PDevObj_4: int, actual_PIrp_2: int) returns (Tmp_155: int);
  modifies alloc, Mem_T.INT4, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyySetPowerD3"} CyySetPowerD3(actual_PDevObj_4: int, actual_PIrp_2: int) returns (Tmp_155: int)
{
  var {:pointer} SD1_1: int;
  var {:pointer} pDevExt_5: int;
  var {:scalar} sdv_1: int;
  var {:pointer} pIrpStack_2: int;
  var {:pointer} Tmp_157: int;
  var {:pointer} PDevObj_4: int;
  var {:pointer} PIrp_2: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_1116: int;
  var vslice_dummy_var_1117: int;
  var vslice_dummy_var_1118: int;

  anon0:
    call {:si_unique_call 367} sdv_1 := __HAVOC_malloc(8);
    PDevObj_4 := actual_PDevObj_4;
    PIrp_2 := actual_PIrp_2;
    call {:si_unique_call 368} Tmp_157 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    havoc pDevExt_5;
    call {:si_unique_call 369} pIrpStack_2 := sdv_IoGetCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 370} sdv_do_paged_code_check();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    Tmp_157 := strConst__li2bpl31;
    call {:si_unique_call 371} vslice_dummy_var_87 := CyyDbgPrintEx(6, Tmp_157);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 372} vslice_dummy_var_86 := CyySendWaitWake(pDevExt_5);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L19;

  L19:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    havoc vslice_dummy_var_1116;
    havoc vslice_dummy_var_1117;
    call {:si_unique_call 373} SD1_1 := PoSetPowerState(0, vslice_dummy_var_1116, vslice_dummy_var_1117);
    assume {:nonnull} SD1_1 != 0;
    assume SD1_1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1_1 != 0;
    assume SD1_1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 374} vslice_dummy_var_88 := KeSynchronizeExecution(0, li2bplFunctionConstant285, 0);
    goto L26;

  L26:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    call {:si_unique_call 375} PoStartNextPowerIrp(0);
    call {:si_unique_call 376} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_1118;
    call {:si_unique_call 377} Tmp_155 := CyyPoCallDriver(pDevExt_5, vslice_dummy_var_1118, PIrp_2);
    goto LM2;

  LM2:
    return;

  anon10_Then:
    goto L26;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    goto L19;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyInitMultiPort"} CyyInitMultiPort(actual_PDevExt_2: int, actual_PConfigData: int, actual_PDevObj_5: int) returns (Tmp_158: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyInitMultiPort"} CyyInitMultiPort(actual_PDevExt_2: int, actual_PConfigData: int, actual_PDevObj_5: int) returns (Tmp_158: int)
{
  var {:pointer} Tmp_159: int;
  var {:pointer} Tmp_160: int;
  var {:pointer} pNewExt: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_162: int;
  var {:pointer} PDevExt_2: int;
  var {:pointer} PConfigData: int;
  var {:pointer} PDevObj_5: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;

  anon0:
    PDevExt_2 := actual_PDevExt_2;
    PConfigData := actual_PConfigData;
    PDevObj_5 := actual_PDevObj_5;
    call {:si_unique_call 378} Tmp_159 := __HAVOC_malloc(104);
    call {:si_unique_call 379} Tmp_160 := __HAVOC_malloc(104);
    call {:si_unique_call 380} Tmp_162 := __HAVOC_malloc(124);
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    havoc pNewExt;
    call {:si_unique_call 381} sdv_do_paged_code_check();
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} yogi_error != 1;
    Tmp_162 := strConst__li2bpl32;
    call {:si_unique_call 382} vslice_dummy_var_89 := CyyDbgPrintEx(2, Tmp_162);
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} pNewExt != 0;
    assume pNewExt > 0;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} pNewExt != 0;
    assume pNewExt > 0;
    call {:si_unique_call 383} status_8 := CyyInitController(PDevObj_5, PConfigData);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} status_8 >= 0;
    Tmp_159 := strConst__li2bpl34;
    call {:si_unique_call 384} vslice_dummy_var_90 := CyyDbgPrintEx(2, Tmp_159);
    Tmp_158 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon7_Then:
    assume {:partition} 0 > status_8;
    Tmp_160 := strConst__li2bpl33;
    call {:si_unique_call 385} vslice_dummy_var_91 := CyyDbgPrintEx(2, Tmp_160);
    Tmp_158 := status_8;
    goto L1;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon8_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "GetMyMappedCD1400Address"} GetMyMappedCD1400Address(actual_BoardMemory_1: int, actual_PortIndex: int, actual_IsPci: int) returns (Tmp_163: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_163 == actual_BoardMemory_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "GetMyMappedCD1400Address"} GetMyMappedCD1400Address(actual_BoardMemory_1: int, actual_PortIndex: int, actual_IsPci: int) returns (Tmp_163: int)
{
  var {:pointer} CyyCDOffset_1: int;
  var {:pointer} BoardMemory_1: int;
  var {:scalar} PortIndex: int;

  anon0:
    BoardMemory_1 := actual_BoardMemory_1;
    PortIndex := actual_PortIndex;
    call {:si_unique_call 386} CyyCDOffset_1 := __HAVOC_malloc(32);
    assume {:nonnull} CyyCDOffset_1 != 0;
    assume CyyCDOffset_1 > 0;
    Mem_T.INT4[CyyCDOffset_1] := 0;
    Tmp_163 := BoardMemory_1;
    return;
}



procedure {:origName "CyyFindInitController"} CyyFindInitController(actual_PDevObj_6: int, actual_PConfig: int) returns (Tmp_165: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyFindInitController"} CyyFindInitController(actual_PDevObj_6: int, actual_PConfig: int) returns (Tmp_165: int)
{
  var {:scalar} Tmp_166: int;
  var {:scalar} Tmp_167: int;
  var {:pointer} Tmp_168: int;
  var {:scalar} sdv_156: int;
  var {:pointer} Tmp_169: int;
  var {:pointer} Tmp_170: int;
  var {:pointer} sdv_159: int;
  var {:pointer} Tmp_171: int;
  var {:pointer} pCurDevObj: int;
  var {:scalar} Tmp_172: int;
  var {:scalar} Tmp_173: int;
  var {:pointer} Tmp_174: int;
  var {:pointer} pDevExt_6: int;
  var {:pointer} Tmp_175: int;
  var {:scalar} Tmp_176: int;
  var {:scalar} Tmp_177: int;
  var {:pointer} Tmp_178: int;
  var {:scalar} Tmp_179: int;
  var {:scalar} sdv_165: int;
  var {:scalar} Tmp_180: int;
  var {:pointer} sdv_168: int;
  var {:pointer} pExtension: int;
  var {:scalar} oldIrql: int;
  var {:scalar} Tmp_181: int;
  var {:scalar} Tmp_182: int;
  var {:scalar} sdv_169: int;
  var {:scalar} Tmp_183: int;
  var {:scalar} sdv_170: int;
  var {:scalar} sdv_173: int;
  var {:pointer} Tmp_184: int;
  var {:pointer} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:scalar} sdv_174: int;
  var {:scalar} Tmp_187: int;
  var {:scalar} status_9: int;
  var {:scalar} Tmp_188: int;
  var {:scalar} Tmp_189: int;
  var {:scalar} serialPhysicalMax: int;
  var {:scalar} Tmp_190: int;
  var {:pointer} Tmp_191: int;
  var {:scalar} sdv_176: int;
  var {:pointer} PDevObj_6: int;
  var {:pointer} PConfig: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_1119: int;
  var vslice_dummy_var_1120: int;
  var vslice_dummy_var_1121: int;
  var vslice_dummy_var_1122: int;
  var vslice_dummy_var_1123: int;
  var vslice_dummy_var_1124: int;
  var vslice_dummy_var_1125: int;
  var vslice_dummy_var_1126: int;
  var vslice_dummy_var_1127: int;
  var vslice_dummy_var_1128: int;
  var vslice_dummy_var_1129: int;
  var vslice_dummy_var_1130: int;
  var vslice_dummy_var_1131: int;
  var vslice_dummy_var_1132: int;
  var vslice_dummy_var_1133: int;
  var vslice_dummy_var_1134: int;
  var vslice_dummy_var_1135: int;
  var vslice_dummy_var_1136: int;
  var vslice_dummy_var_1137: int;
  var vslice_dummy_var_1138: int;
  var vslice_dummy_var_1139: int;
  var vslice_dummy_var_1140: int;
  var vslice_dummy_var_1141: int;
  var vslice_dummy_var_1142: int;
  var vslice_dummy_var_1143: int;
  var vslice_dummy_var_1144: int;
  var vslice_dummy_var_1145: int;
  var vslice_dummy_var_1146: int;
  var vslice_dummy_var_1147: int;
  var vslice_dummy_var_1148: int;
  var vslice_dummy_var_1149: int;
  var vslice_dummy_var_1150: int;
  var vslice_dummy_var_1151: int;
  var vslice_dummy_var_1152: int;
  var vslice_dummy_var_1153: int;
  var vslice_dummy_var_1154: int;
  var vslice_dummy_var_1155: int;
  var vslice_dummy_var_1156: int;

  anon0:
    call {:si_unique_call 387} Tmp_173 := __HAVOC_malloc(20);
    call {:si_unique_call 388} Tmp_180 := __HAVOC_malloc(20);
    call {:si_unique_call 389} Tmp_187 := __HAVOC_malloc(20);
    call {:si_unique_call 390} serialPhysicalMax := __HAVOC_malloc(20);
    PDevObj_6 := actual_PDevObj_6;
    PConfig := actual_PConfig;
    call {:si_unique_call 391} Tmp_168 := __HAVOC_malloc(328);
    call {:si_unique_call 392} Tmp_169 := __HAVOC_malloc(116);
    call {:si_unique_call 393} Tmp_170 := __HAVOC_malloc(104);
    call {:si_unique_call 394} Tmp_171 := __HAVOC_malloc(60);
    call {:si_unique_call 395} Tmp_174 := __HAVOC_malloc(340);
    call {:si_unique_call 396} Tmp_175 := __HAVOC_malloc(300);
    call {:si_unique_call 397} Tmp_178 := __HAVOC_malloc(128);
    call {:si_unique_call 398} Tmp_184 := __HAVOC_malloc(328);
    call {:si_unique_call 399} Tmp_186 := __HAVOC_malloc(336);
    call {:si_unique_call 400} Tmp_191 := __HAVOC_malloc(892);
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    havoc pDevExt_6;
    Tmp_178 := strConst__li2bpl43;
    call {:si_unique_call 401} vslice_dummy_var_92 := CyyDbgPrintEx(2, Tmp_178);
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    Tmp_191 := strConst__li2bpl44;
    call {:si_unique_call 402} vslice_dummy_var_93 := CyyDbgPrintEx(4, Tmp_191);
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_1119;
    havoc vslice_dummy_var_1120;
    call {:si_unique_call 403} sdv_170 := CyyMemCompare(vslice_dummy_var_1119, vslice_dummy_var_1120, serialPhysicalMax, 0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_170 != 2;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc Tmp_183;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_181 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} Tmp_187 != 0;
    assume Tmp_187 > 0;
    assume {:nonnull} Tmp_187 != 0;
    assume Tmp_187 > 0;
    assume {:nonnull} Tmp_187 != 0;
    assume Tmp_187 > 0;
    assume {:nonnull} Tmp_187 != 0;
    assume Tmp_187 > 0;
    assume {:nonnull} Tmp_187 != 0;
    assume Tmp_187 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_1121;
    havoc vslice_dummy_var_1122;
    havoc vslice_dummy_var_1123;
    call {:si_unique_call 404} CyyLogError(vslice_dummy_var_1121, 0, vslice_dummy_var_1122, Tmp_187, 0, 0, 0, Tmp_181, 0, -1073475558, Tmp_183, vslice_dummy_var_1123, 0, 0);
    Tmp_186 := strConst__li2bpl35;
    call {:si_unique_call 405} vslice_dummy_var_94 := CyyDbgPrintEx(1, Tmp_186);
    Tmp_165 := -1073741810;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon46_Then:
    assume {:partition} sdv_170 == 2;
    goto L20;

  L20:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_1124;
    havoc vslice_dummy_var_1125;
    call {:si_unique_call 406} sdv_169 := CyyMemCompare(vslice_dummy_var_1124, vslice_dummy_var_1125, serialPhysicalMax, 0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_169 != 2;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc Tmp_179;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_188 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_1126;
    havoc vslice_dummy_var_1127;
    havoc vslice_dummy_var_1128;
    call {:si_unique_call 407} CyyLogError(vslice_dummy_var_1126, 0, vslice_dummy_var_1127, Tmp_180, 0, 0, 0, Tmp_188, 0, -1073475557, Tmp_179, vslice_dummy_var_1128, 0, 0);
    Tmp_168 := strConst__li2bpl36;
    call {:si_unique_call 408} vslice_dummy_var_95 := CyyDbgPrintEx(1, Tmp_168);
    Tmp_165 := -1073741810;
    goto L1;

  anon47_Then:
    assume {:partition} sdv_169 == 2;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    assume {:nonnull} Tmp_173 != 0;
    assume Tmp_173 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_1129;
    havoc vslice_dummy_var_1130;
    call {:si_unique_call 409} sdv_174 := CyyMemCompare(vslice_dummy_var_1129, vslice_dummy_var_1130, Tmp_173, 0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_174 != 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_1131;
    havoc vslice_dummy_var_1132;
    havoc vslice_dummy_var_1133;
    havoc vslice_dummy_var_1134;
    call {:si_unique_call 410} sdv_165 := CyyMemCompare(vslice_dummy_var_1131, vslice_dummy_var_1132, vslice_dummy_var_1133, vslice_dummy_var_1134);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_165 != 2;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc Tmp_172;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_189 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_1135;
    havoc vslice_dummy_var_1136;
    havoc vslice_dummy_var_1137;
    havoc vslice_dummy_var_1138;
    call {:si_unique_call 411} CyyLogError(vslice_dummy_var_1135, 0, vslice_dummy_var_1136, vslice_dummy_var_1137, 0, 0, 0, Tmp_189, 0, -1073475556, Tmp_172, vslice_dummy_var_1138, 0, 0);
    Tmp_174 := strConst__li2bpl37;
    call {:si_unique_call 412} vslice_dummy_var_96 := CyyDbgPrintEx(1, Tmp_174);
    Tmp_165 := -1073741810;
    goto L1;

  anon50_Then:
    assume {:partition} sdv_165 == 2;
    goto L49;

  L49:
    call {:si_unique_call 413} Tmp_185 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    Mem_T.INT4[Tmp_185] := oldIrql;
    call {:si_unique_call 414} sdv_KeAcquireSpinLock(0, Tmp_185);
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    oldIrql := Mem_T.INT4[Tmp_185];
    call {:si_unique_call 415} sdv_176 := sdv_IsListEmpty(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_176 != 0;
    pCurDevObj := 0;
    pExtension := 0;
    goto L77;

  L77:
    call {:si_unique_call 416} sdv_KeReleaseSpinLock(0, oldIrql);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto L84;

  L84:
    call {:si_unique_call 417} sdv_156, pCurDevObj, sdv_168, pExtension, oldIrql, Tmp_185 := CyyFindInitController_loop_L84(sdv_156, pCurDevObj, sdv_168, pExtension, oldIrql, Tmp_185, PConfig);
    goto L84_last;

  L84_last:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_1139;
    havoc vslice_dummy_var_1140;
    havoc vslice_dummy_var_1141;
    havoc vslice_dummy_var_1142;
    call {:si_unique_call 418} sdv_156 := CyyMemCompare(vslice_dummy_var_1139, vslice_dummy_var_1140, vslice_dummy_var_1141, vslice_dummy_var_1142);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_156 == 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto L96;

  L96:
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_182;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc Tmp_166;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_177 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_1143;
    havoc vslice_dummy_var_1144;
    havoc vslice_dummy_var_1145;
    havoc vslice_dummy_var_1146;
    havoc vslice_dummy_var_1147;
    call {:si_unique_call 419} CyyLogError(vslice_dummy_var_1143, 0, vslice_dummy_var_1144, vslice_dummy_var_1145, 0, 0, 0, Tmp_177, 0, -1073475551, Tmp_166, vslice_dummy_var_1146, Tmp_182, vslice_dummy_var_1147);
    Tmp_175 := strConst__li2bpl39;
    call {:si_unique_call 420} vslice_dummy_var_98 := CyyDbgPrintEx(1, Tmp_175);
    Tmp_165 := -1073741810;
    goto L1;

  anon57_Then:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_1148;
    havoc vslice_dummy_var_1149;
    havoc vslice_dummy_var_1150;
    havoc vslice_dummy_var_1151;
    call {:si_unique_call 421} sdv_173 := CyyMemCompare(vslice_dummy_var_1148, vslice_dummy_var_1149, vslice_dummy_var_1150, vslice_dummy_var_1151);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_173 != 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_176;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc Tmp_190;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    Tmp_167 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig)] + 1;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_1152;
    havoc vslice_dummy_var_1153;
    havoc vslice_dummy_var_1154;
    havoc vslice_dummy_var_1155;
    havoc vslice_dummy_var_1156;
    call {:si_unique_call 422} CyyLogError(vslice_dummy_var_1152, 0, vslice_dummy_var_1153, vslice_dummy_var_1154, 0, 0, 0, Tmp_167, 0, -1073475550, Tmp_190, vslice_dummy_var_1155, Tmp_176, vslice_dummy_var_1156);
    Tmp_184 := strConst__li2bpl41;
    call {:si_unique_call 423} vslice_dummy_var_99 := CyyDbgPrintEx(1, Tmp_184);
    Tmp_165 := -1073741810;
    goto L1;

  anon60_Then:
    assume {:partition} sdv_173 == 0;
    goto L107;

  L107:
    Tmp_169 := strConst__li2bpl40;
    call {:si_unique_call 424} vslice_dummy_var_100 := CyyDbgPrintEx(4, Tmp_169);
    Tmp_171 := strConst__li2bpl42;
    call {:si_unique_call 425} vslice_dummy_var_101 := CyyDbgPrintEx(4, Tmp_171);
    call {:si_unique_call 426} status_9 := CyyInitMultiPort(pExtension, PConfig, PDevObj_6);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} yogi_error != 1;
    Tmp_165 := status_9;
    goto L1;

  anon66_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon59_Then:
    goto L107;

  anon58_Then:
    goto L96;

  anon56_Then:
    assume {:partition} sdv_156 != 0;
    goto L85;

  L85:
    call {:si_unique_call 427} Tmp_185 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    Mem_T.INT4[Tmp_185] := oldIrql;
    call {:si_unique_call 428} sdv_KeAcquireSpinLock(0, Tmp_185);
    assume {:nonnull} Tmp_185 != 0;
    assume Tmp_185 > 0;
    oldIrql := Mem_T.INT4[Tmp_185];
    assume {:nonnull} pCurDevObj != 0;
    assume pCurDevObj > 0;
    havoc pCurDevObj;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 429} sdv_168 := sdv_containing_record(pCurDevObj, 4);
    pExtension := sdv_168;
    goto L134;

  L134:
    call {:si_unique_call 430} sdv_KeReleaseSpinLock(0, oldIrql);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon62_Else_dummy;

  anon62_Else_dummy:
    assume false;
    return;

  anon62_Then:
    goto L81;

  L81:
    Tmp_170 := strConst__li2bpl38;
    call {:si_unique_call 431} vslice_dummy_var_97 := CyyDbgPrintEx(4, Tmp_170);
    call {:si_unique_call 432} status_9 := CyyInitController(PDevObj_6, PConfig);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} yogi_error != 1;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_9 >= 0;
    Tmp_165 := 0;
    goto L1;

  anon63_Then:
    assume {:partition} 0 > status_9;
    Tmp_165 := status_9;
    goto L1;

  anon65_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    goto L81;

  anon64_Then:
    goto L134;

  anon55_Then:
    goto L85;

  anon54_Then:
    goto L85;

  anon53_Then:
    goto L85;

  anon52_Then:
    goto L81;

  anon51_Then:
    assume {:partition} sdv_176 == 0;
    havoc pCurDevObj;
    call {:si_unique_call 433} sdv_159 := sdv_containing_record(pCurDevObj, 4);
    pExtension := sdv_159;
    goto L77;

  anon49_Then:
    assume {:partition} sdv_174 == 0;
    goto L49;

  anon48_Then:
    goto L49;

  anon45_Then:
    goto L20;
}



procedure {:origName "CyyMemCompare"} CyyMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_192: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_192 == 0 || Tmp_192 == 2 || Tmp_192 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyMemCompare"} CyyMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_192: int)
{
  var {:scalar} A: int;
  var {:scalar} B: int;
  var {:scalar} b: int;
  var {:scalar} higher: int;
  var {:scalar} lowerSpan: int;
  var {:scalar} lower: int;
  var {:scalar} a: int;
  var {:pointer} structPtr888A: int;
  var {:scalar} SpanOfA: int;
  var {:pointer} structPtr888B: int;
  var {:scalar} SpanOfB: int;

  anon0:
    call {:si_unique_call 434} A := __HAVOC_malloc(20);
    call {:si_unique_call 435} B := __HAVOC_malloc(20);
    call {:si_unique_call 436} b := __HAVOC_malloc(20);
    call {:si_unique_call 437} higher := __HAVOC_malloc(20);
    call {:si_unique_call 438} lower := __HAVOC_malloc(20);
    call {:si_unique_call 439} a := __HAVOC_malloc(20);
    structPtr888A := actual_structPtr888A;
    SpanOfA := actual_SpanOfA;
    structPtr888B := actual_structPtr888B;
    SpanOfB := actual_SpanOfB;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_192 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfB;
    goto L17;

  L17:
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_192 := 2;
    goto L1;

  anon8_Then:
    Tmp_192 := 1;
    goto L1;

  anon7_Then:
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfA;
    goto L17;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init11"} _sdv_init11()
{
  var vslice_dummy_var_102: int;

  anon0:
    call {:si_unique_call 440} vslice_dummy_var_102 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyInitController"} CyyInitController(actual_PDevObj_7: int, actual_PConfigData_1: int) returns (Tmp_196: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyInitController"} CyyInitController(actual_PDevObj_7: int, actual_PConfigData_1: int) returns (Tmp_196: int)
{
  var {:pointer} Tmp_197: int;
  var {:pointer} Tmp_198: int;
  var {:scalar} Tmp_200: int;
  var {:scalar} Tmp_201: int;
  var {:scalar} Tmp_202: int;
  var {:pointer} Tmp_203: int;
  var {:scalar} Tmp_204: int;
  var {:pointer} pDevExt_7: int;
  var {:pointer} Tmp_206: int;
  var {:scalar} Tmp_207: int;
  var {:scalar} Tmp_208: int;
  var {:pointer} Tmp_209: int;
  var {:scalar} sdv_179: int;
  var {:scalar} allocedDispatch: int;
  var {:scalar} Tmp_210: int;
  var {:scalar} Tmp_211: int;
  var {:pointer} sdv_182: int;
  var {:pointer} sdv_183: int;
  var {:pointer} Tmp_212: int;
  var {:scalar} Tmp_213: int;
  var {:pointer} Tmp_214: int;
  var {:scalar} Tmp_215: int;
  var {:scalar} Tmp_216: int;
  var {:pointer} Tmp_217: int;
  var {:scalar} Tmp_218: int;
  var {:scalar} status_10: int;
  var {:pointer} pDispatch: int;
  var {:pointer} PDevObj_7: int;
  var {:pointer} PConfigData_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_1157: int;
  var vslice_dummy_var_1158: int;
  var vslice_dummy_var_1159: int;
  var vslice_dummy_var_1160: int;
  var vslice_dummy_var_1161: int;
  var vslice_dummy_var_1162: int;
  var vslice_dummy_var_1163: int;
  var vslice_dummy_var_1164: int;
  var vslice_dummy_var_1165: int;
  var vslice_dummy_var_1166: int;
  var vslice_dummy_var_1167: int;
  var vslice_dummy_var_1168: int;
  var vslice_dummy_var_1169: int;
  var vslice_dummy_var_1170: int;
  var vslice_dummy_var_1171: int;
  var vslice_dummy_var_1172: int;
  var vslice_dummy_var_1173: int;
  var vslice_dummy_var_1174: int;

  anon0:
    call {:si_unique_call 441} Tmp_200 := __HAVOC_malloc(20);
    call {:si_unique_call 442} Tmp_202 := __HAVOC_malloc(20);
    call {:si_unique_call 443} Tmp_207 := __HAVOC_malloc(20);
    call {:si_unique_call 444} vslice_dummy_var_103 := __HAVOC_malloc(20);
    call {:si_unique_call 445} Tmp_211 := __HAVOC_malloc(20);
    PDevObj_7 := actual_PDevObj_7;
    PConfigData_1 := actual_PConfigData_1;
    call {:si_unique_call 446} Tmp_197 := __HAVOC_malloc(128);
    call {:si_unique_call 447} Tmp_198 := __HAVOC_malloc(236);
    call {:si_unique_call 448} Tmp_203 := __HAVOC_malloc(840);
    call {:si_unique_call 449} Tmp_206 := __HAVOC_malloc(128);
    call {:si_unique_call 450} Tmp_209 := __HAVOC_malloc(128);
    call {:si_unique_call 451} Tmp_212 := __HAVOC_malloc(128);
    call {:si_unique_call 452} Tmp_214 := __HAVOC_malloc(228);
    call {:si_unique_call 453} Tmp_217 := __HAVOC_malloc(184);
    assume {:nonnull} PDevObj_7 != 0;
    assume PDevObj_7 > 0;
    havoc pDevExt_7;
    status_10 := 0;
    allocedDispatch := 0;
    pDispatch := 0;
    call {:si_unique_call 454} sdv_do_paged_code_check();
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    Tmp_217 := strConst__li2bpl45;
    call {:si_unique_call 455} vslice_dummy_var_104 := CyyDbgPrintEx(4, Tmp_217);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto L21;

  L21:
    call {:si_unique_call 456} KeInitializeTimer(0);
    call {:si_unique_call 457} KeInitializeTimer(0);
    call {:si_unique_call 458} KeInitializeTimer(0);
    call {:si_unique_call 459} KeInitializeTimer(0);
    call {:si_unique_call 460} KeInitializeTimer(0);
    call {:si_unique_call 461} KeInitializeTimer(0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 462} KeInitializeDpc(CompleteWriteDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant201, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 463} KeInitializeDpc(CompleteReadDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant334, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 464} KeInitializeDpc(TotalReadTimeoutDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant335, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 465} KeInitializeDpc(IntervalReadTimeoutDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant336, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 466} KeInitializeDpc(TotalWriteTimeoutDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant203, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 467} KeInitializeDpc(CommErrorDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant337, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 468} KeInitializeDpc(CompleteImmediateDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant127, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 469} KeInitializeDpc(TotalImmediateTimeoutDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant129, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 470} KeInitializeDpc(CommWaitDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant182, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 471} KeInitializeDpc(XoffCountTimeoutDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant205, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 472} KeInitializeDpc(XoffCountCompleteDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant204, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 473} KeInitializeDpc(StartTimerLowerRTSDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant338, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 474} KeInitializeDpc(PerhapsLowerRTSDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant339, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 475} KeInitializeDpc(IsrUnlockPagesDpc__CYY_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant161, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    havoc vslice_dummy_var_1157;
    call {:si_unique_call 476} sdv_182 := MmMapIoSpace(Tmp_202, vslice_dummy_var_1157, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_218;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    Tmp_204 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData_1)] + 1;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} Tmp_211 != 0;
    assume Tmp_211 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} PDevObj_7 != 0;
    assume PDevObj_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_1158;
    havoc vslice_dummy_var_1159;
    havoc vslice_dummy_var_1160;
    havoc vslice_dummy_var_1161;
    call {:si_unique_call 477} CyyLogError(vslice_dummy_var_1158, vslice_dummy_var_1159, vslice_dummy_var_1160, Tmp_211, 0, 0, 0, Tmp_204, 0, -1073475573, Tmp_218, vslice_dummy_var_1161, 0, 0);
    Tmp_198 := strConst__li2bpl46;
    call {:si_unique_call 478} vslice_dummy_var_107 := CyyDbgPrintEx(1, Tmp_198);
    status_10 := -1073741709;
    goto L100;

  L100:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} status_10 >= 0;
    goto L102;

  L102:
    Tmp_196 := status_10;
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} 0 > status_10;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} pDispatch != 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_201;
    assume {:nonnull} pDispatch != 0;
    assume pDispatch > 0;
    havoc Tmp_197;
    assume {:nonnull} Tmp_197 != 0;
    assume Tmp_197 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_210;
    assume {:nonnull} pDispatch != 0;
    assume pDispatch > 0;
    havoc Tmp_209;
    assume {:nonnull} Tmp_209 != 0;
    assume Tmp_209 > 0;
    goto L103;

  L103:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} allocedDispatch != 0;
    call {:si_unique_call 479} sdv_ExFreePool(0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L106;

  L106:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    havoc vslice_dummy_var_1162;
    call {:si_unique_call 480} MmUnmapIoSpace(0, vslice_dummy_var_1162);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L111;

  L111:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    havoc vslice_dummy_var_1163;
    call {:si_unique_call 481} MmUnmapIoSpace(0, vslice_dummy_var_1163);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L102;

  anon43_Then:
    goto L102;

  anon42_Then:
    goto L111;

  anon41_Then:
    assume {:partition} allocedDispatch == 0;
    goto L106;

  anon40_Then:
    assume {:partition} pDispatch == 0;
    goto L103;

  anon52_Then:
    goto L82;

  L82:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_207 != 0;
    assume Tmp_207 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    havoc vslice_dummy_var_1164;
    call {:si_unique_call 482} sdv_183 := MmMapIoSpace(Tmp_207, vslice_dummy_var_1164, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.INT4[RxFIFO__CONFIG_DATA(PConfigData_1)] != 1;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} Mem_T.INT4[RxFIFO__CONFIG_DATA(PConfigData_1)] != 4;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.INT4[RxFIFO__CONFIG_DATA(PConfigData_1)] != 8;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} Mem_T.INT4[RxFIFO__CONFIG_DATA(PConfigData_1)] == 14;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L148;

  L148:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} Mem_T.INT4[TxFIFO__CONFIG_DATA(PConfigData_1)] > 12;
    goto L150;

  L150:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L151;

  L151:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_1165;
    havoc vslice_dummy_var_1166;
    havoc vslice_dummy_var_1167;
    call {:si_unique_call 483} boogieTmp := GetMyPhysicalCD1400Address(vslice_dummy_var_1165, vslice_dummy_var_1166, vslice_dummy_var_1167);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_1168;
    havoc vslice_dummy_var_1169;
    havoc vslice_dummy_var_1170;
    call {:si_unique_call 484} boogieTmp := GetMyMappedCD1400Address(vslice_dummy_var_1168, vslice_dummy_var_1169, vslice_dummy_var_1170);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 485} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 486} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 487} boogieTmp := corral_nondet();
    Tmp_203 := strConst__li2bpl48;
    call {:si_unique_call 488} vslice_dummy_var_105 := CyyDbgPrintEx(4, Tmp_203);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 489} sdv_179 := corral_nondet();
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_179 > 70;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L185;

  L185:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc pDispatch;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDispatch != 0;
    assume pDispatch > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_213;
    assume {:nonnull} pDispatch != 0;
    assume pDispatch > 0;
    havoc Tmp_206;
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_215;
    assume {:nonnull} pDispatch != 0;
    assume pDispatch > 0;
    havoc Tmp_212;
    assume {:nonnull} Tmp_212 != 0;
    assume Tmp_212 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L100;

  anon46_Then:
    assume {:partition} 70 >= sdv_179;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L185;

  anon44_Then:
    assume {:partition} 12 >= Mem_T.INT4[TxFIFO__CONFIG_DATA(PConfigData_1)];
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} 1 <= Mem_T.INT4[TxFIFO__CONFIG_DATA(PConfigData_1)];
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L151;

  anon45_Then:
    assume {:partition} Mem_T.INT4[TxFIFO__CONFIG_DATA(PConfigData_1)] < 1;
    goto L150;

  anon48_Then:
    assume {:partition} Mem_T.INT4[RxFIFO__CONFIG_DATA(PConfigData_1)] != 14;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L148;

  anon49_Then:
    assume {:partition} Mem_T.INT4[RxFIFO__CONFIG_DATA(PConfigData_1)] == 8;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L148;

  anon50_Then:
    assume {:partition} Mem_T.INT4[RxFIFO__CONFIG_DATA(PConfigData_1)] == 4;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L148;

  anon54_Then:
    assume {:partition} Mem_T.INT4[RxFIFO__CONFIG_DATA(PConfigData_1)] == 1;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L148;

  anon53_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_216;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    Tmp_208 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfigData_1)] + 1;
    assume {:nonnull} Tmp_200 != 0;
    assume Tmp_200 > 0;
    assume {:nonnull} Tmp_200 != 0;
    assume Tmp_200 > 0;
    assume {:nonnull} Tmp_200 != 0;
    assume Tmp_200 > 0;
    assume {:nonnull} Tmp_200 != 0;
    assume Tmp_200 > 0;
    assume {:nonnull} Tmp_200 != 0;
    assume Tmp_200 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} PDevObj_7 != 0;
    assume PDevObj_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_1171;
    havoc vslice_dummy_var_1172;
    havoc vslice_dummy_var_1173;
    havoc vslice_dummy_var_1174;
    call {:si_unique_call 490} CyyLogError(vslice_dummy_var_1171, vslice_dummy_var_1172, vslice_dummy_var_1173, Tmp_200, 0, 0, 0, Tmp_208, 0, -1073475574, Tmp_216, vslice_dummy_var_1174, 0, 0);
    Tmp_214 := strConst__li2bpl47;
    call {:si_unique_call 491} vslice_dummy_var_106 := CyyDbgPrintEx(1, Tmp_214);
    status_10 := -1073741709;
    goto L100;

  anon38_Then:
    goto L82;

  anon37_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 492} boogieTmp := ExAllocatePoolWithTag(0, 260, -797345469);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 493} sdv_RtlZeroMemory(0, 260);
    allocedDispatch := 1;
    goto L21;

  anon47_Then:
    status_10 := -1073741670;
    goto L100;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyRemoveDevObj"} CyyRemoveDevObj(actual_PDevObj_8: int) returns (Tmp_219: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyRemoveDevObj"} CyyRemoveDevObj(actual_PDevObj_8: int) returns (Tmp_219: int)
{
  var {:pointer} pDevExt_8: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} Tmp_227: int;
  var {:pointer} PDevObj_8: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;

  anon0:
    PDevObj_8 := actual_PDevObj_8;
    call {:si_unique_call 494} Tmp_224 := __HAVOC_malloc(84);
    call {:si_unique_call 495} Tmp_227 := __HAVOC_malloc(88);
    assume {:nonnull} PDevObj_8 != 0;
    assume PDevObj_8 > 0;
    havoc pDevExt_8;
    call {:si_unique_call 496} sdv_do_paged_code_check();
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    Tmp_227 := strConst__li2bpl49;
    call {:si_unique_call 497} vslice_dummy_var_108 := CyyDbgPrintEx(2, Tmp_227);
    call {:si_unique_call 498} IoDetachDevice(0);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    call {:si_unique_call 499} sdv_ExFreePool(0);
    goto L15;

  L15:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    call {:si_unique_call 500} sdv_ExFreePool(0);
    goto L19;

  L19:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    call {:si_unique_call 501} sdv_ExFreePool(0);
    goto L23;

  L23:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    call {:si_unique_call 502} sdv_ExFreePool(0);
    goto L27;

  L27:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    call {:si_unique_call 503} sdv_ExFreePool(0);
    goto L31;

  L31:
    call {:si_unique_call 504} IoDeleteDevice(0);
    Tmp_224 := strConst__li2bpl50;
    call {:si_unique_call 505} vslice_dummy_var_109 := CyyDbgPrintEx(2, Tmp_224);
    Tmp_219 := 0;
    goto LM2;

  LM2:
    return;

  anon17_Then:
    goto L31;

  anon16_Then:
    goto L27;

  anon15_Then:
    goto L23;

  anon14_Then:
    goto L19;

  anon13_Then:
    goto L15;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "GetMyPhysicalCD1400Address"} GetMyPhysicalCD1400Address(actual_structPtr888BoardMemory: int, actual_PortIndex_1: int, actual_IsPci_1: int) returns (SD2_1: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "GetMyPhysicalCD1400Address"} GetMyPhysicalCD1400Address(actual_structPtr888BoardMemory: int, actual_PortIndex_1: int, actual_IsPci_1: int) returns (SD2_1: int)
{
  var {:scalar} BoardMemory: int;
  var {:scalar} Tmp_2: int;
  var {:pointer} CyyCDOffset_2: int;
  var {:scalar} chipIndex_1: int;
  var {:pointer} structPtr888BoardMemory: int;
  var {:scalar} PortIndex_1: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 506} BoardMemory := __HAVOC_malloc(20);
    call {:si_unique_call 507} Tmp_2 := __HAVOC_malloc(20);
    structPtr888BoardMemory := actual_structPtr888BoardMemory;
    PortIndex_1 := actual_PortIndex_1;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} structPtr888BoardMemory != 0;
    assume structPtr888BoardMemory > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} structPtr888BoardMemory != 0;
    assume structPtr888BoardMemory > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} structPtr888BoardMemory != 0;
    assume structPtr888BoardMemory > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} structPtr888BoardMemory != 0;
    assume structPtr888BoardMemory > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} structPtr888BoardMemory != 0;
    assume structPtr888BoardMemory > 0;
    call {:si_unique_call 508} CyyCDOffset_2 := __HAVOC_malloc(32);
    assume {:nonnull} CyyCDOffset_2 != 0;
    assume CyyCDOffset_2 > 0;
    Mem_T.INT4[CyyCDOffset_2] := 0;
    chipIndex_1 := INTDIV(PortIndex_1, 4);
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    call {:si_unique_call 509} boogieTmp := corral_nondet();
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    SD2_1 := Tmp_2;
    return;
}



procedure {:origName "CyyKillPendingIrps"} CyyKillPendingIrps(actual_PDevObj_9: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyKillPendingIrps"} CyyKillPendingIrps(actual_PDevObj_9: int)
{
  var {:pointer} Tmp_230: int;
  var {:pointer} pDevExt_9: int;
  var {:pointer} Tmp_232: int;
  var {:pointer} Tmp_233: int;
  var {:pointer} Tmp_234: int;
  var {:scalar} cancelRoutine: int;
  var {:scalar} oldIrql_1: int;
  var {:pointer} Tmp_235: int;
  var {:pointer} Tmp_236: int;
  var {:pointer} Tmp_237: int;
  var {:pointer} PDevObj_9: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_1175: int;
  var vslice_dummy_var_1176: int;
  var vslice_dummy_var_1177: int;
  var vslice_dummy_var_1178: int;
  var vslice_dummy_var_1179: int;
  var vslice_dummy_var_1180: int;
  var vslice_dummy_var_1181: int;
  var vslice_dummy_var_1182: int;
  var vslice_dummy_var_1183: int;
  var vslice_dummy_var_1184: int;

  anon0:
    call {:si_unique_call 510} vslice_dummy_var_110 := __HAVOC_malloc(4);
    PDevObj_9 := actual_PDevObj_9;
    call {:si_unique_call 511} Tmp_234 := __HAVOC_malloc(100);
    call {:si_unique_call 512} Tmp_235 := __HAVOC_malloc(84);
    assume {:nonnull} PDevObj_9 != 0;
    assume PDevObj_9 > 0;
    havoc pDevExt_9;
    Tmp_234 := strConst__li2bpl52;
    call {:si_unique_call 513} vslice_dummy_var_112 := CyyDbgPrintEx(2, Tmp_234);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 514} CyyKillAllReadsOrWrites(PDevObj_9, WriteQueue__CYY_DEVICE_EXTENSION(pDevExt_9), CurrentWriteIrp__CYY_DEVICE_EXTENSION(pDevExt_9));
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 515} CyyKillAllReadsOrWrites(PDevObj_9, ReadQueue__CYY_DEVICE_EXTENSION(pDevExt_9), CurrentReadIrp__CYY_DEVICE_EXTENSION(pDevExt_9));
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 516} CyyKillAllReadsOrWrites(PDevObj_9, PurgeQueue__CYY_DEVICE_EXTENSION(pDevExt_9), CurrentPurgeIrp__CYY_DEVICE_EXTENSION(pDevExt_9));
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 517} CyyKillAllReadsOrWrites(PDevObj_9, MaskQueue__CYY_DEVICE_EXTENSION(pDevExt_9), CurrentMaskIrp__CYY_DEVICE_EXTENSION(pDevExt_9));
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 518} Tmp_236 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    Mem_T.INT4[Tmp_236] := oldIrql_1;
    call {:si_unique_call 519} IoAcquireCancelSpinLock(Tmp_236);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    oldIrql_1 := Mem_T.INT4[Tmp_236];
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc Tmp_232;
    assume {:nonnull} Tmp_232 != 0;
    assume Tmp_232 > 0;
    cancelRoutine := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_232)];
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc Tmp_237;
    assume {:nonnull} Tmp_237 != 0;
    assume Tmp_237 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} cancelRoutine != 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc Tmp_233;
    assume {:nonnull} Tmp_233 != 0;
    assume Tmp_233 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(Tmp_233)] := oldIrql_1;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc Tmp_230;
    assume {:nonnull} Tmp_230 != 0;
    assume Tmp_230 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_230)] := 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant196;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_1175;
    call {:si_unique_call 520} CyyCancelCurrentWrite(PDevObj_9, vslice_dummy_var_1175);
    goto L40;

  L40:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    call {:si_unique_call 521} vslice_dummy_var_111 := IoCancelIrp(0);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L41;

  L41:
    call {:si_unique_call 522} CyyKillAllStalled(PDevObj_9);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} yogi_error != 1;
    Tmp_235 := strConst__li2bpl51;
    call {:si_unique_call 523} vslice_dummy_var_114 := CyyDbgPrintEx(2, Tmp_235);
    goto LM2;

  LM2:
    return;

  anon58_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon42_Then:
    goto L41;

  anon50_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant199;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_1176;
    call {:si_unique_call 524} CyyCancelCurrentXoff(PDevObj_9, vslice_dummy_var_1176);
    goto L40;

  anon49_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant125;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_1177;
    call {:si_unique_call 525} CyyCancelImmediate(PDevObj_9, vslice_dummy_var_1177);
    goto L40;

  anon48_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant149;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_1178;
    call {:si_unique_call 526} CyyCancelQueued(PDevObj_9, vslice_dummy_var_1178);
    goto L40;

  anon47_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant179;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_1179;
    call {:si_unique_call 527} CyyCancelWait(PDevObj_9, vslice_dummy_var_1179);
    goto L40;

  anon46_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant151;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_1180;
    call {:si_unique_call 528} CyyFilterCancelQueued(PDevObj_9, vslice_dummy_var_1180);
    goto L40;

  anon45_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant321;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_1181;
    call {:si_unique_call 529} vslice_dummy_var_117 := CyyInternalIoControl(PDevObj_9, vslice_dummy_var_1181);
    goto L40;

  anon44_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant325;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_1182;
    call {:si_unique_call 530} vslice_dummy_var_116 := CyyQueryInformationFile(PDevObj_9, vslice_dummy_var_1182);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto L40;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon43_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant326;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_1183;
    call {:si_unique_call 531} vslice_dummy_var_115 := CyySetInformationFile(PDevObj_9, vslice_dummy_var_1183);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} yogi_error != 1;
    goto L40;

  anon59_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon56_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant266;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_1184;
    call {:si_unique_call 532} vslice_dummy_var_113 := CyySystemControlDispatch(PDevObj_9, vslice_dummy_var_1184);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} yogi_error != 1;
    goto L40;

  anon57_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume {:partition} cancelRoutine == 0;
    call {:si_unique_call 533} IoReleaseCancelSpinLock(oldIrql_1);
    goto L40;

  anon41_Then:
    call {:si_unique_call 534} IoReleaseCancelSpinLock(oldIrql_1);
    goto L40;

  anon54_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon53_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon52_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon51_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyReleaseResources"} CyyReleaseResources(actual_PDevExt_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyReleaseResources"} CyyReleaseResources(actual_PDevExt_3: int)
{
  var {:scalar} sdv_192: int;
  var {:scalar} sdv_194: int;
  var {:scalar} sdv_196: int;
  var {:scalar} sdv_200: int;
  var {:pointer} Tmp_240: int;
  var {:scalar} plx: int;
  var {:pointer} Tmp_242: int;
  var {:scalar} sdv_208: int;
  var {:pointer} Tmp_244: int;
  var {:pointer} Tmp_245: int;
  var {:scalar} sdv_211: int;
  var {:scalar} sdv_215: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_224: int;
  var {:scalar} sdv_225: int;
  var {:scalar} sdv_226: int;
  var {:scalar} sdv_228: int;
  var {:scalar} sdv_230: int;
  var {:scalar} value_1: int;
  var {:pointer} Tmp_248: int;
  var {:scalar} sdv_232: int;
  var {:pointer} PDevExt_3: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_1185: int;
  var vslice_dummy_var_1186: int;
  var vslice_dummy_var_1187: int;
  var vslice_dummy_var_1188: int;
  var vslice_dummy_var_1189: int;
  var vslice_dummy_var_1190: int;
  var vslice_dummy_var_1191: int;
  var vslice_dummy_var_1192: int;
  var vslice_dummy_var_1193: int;
  var vslice_dummy_var_1194: int;
  var vslice_dummy_var_1195: int;
  var vslice_dummy_var_1196: int;
  var vslice_dummy_var_1197: int;
  var vslice_dummy_var_1198: int;
  var vslice_dummy_var_1199: int;

  anon0:
    call {:si_unique_call 535} vslice_dummy_var_118 := __HAVOC_malloc(4);
    PDevExt_3 := actual_PDevExt_3;
    call {:si_unique_call 536} Tmp_240 := __HAVOC_malloc(152);
    call {:si_unique_call 537} Tmp_242 := __HAVOC_malloc(132);
    call {:si_unique_call 538} Tmp_244 := __HAVOC_malloc(104);
    call {:si_unique_call 539} Tmp_245 := __HAVOC_malloc(88);
    Tmp_244 := strConst__li2bpl53;
    call {:si_unique_call 540} vslice_dummy_var_127 := CyyDbgPrintEx(2, Tmp_244);
    call {:si_unique_call 541} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    Mem_T.INT4[Tmp_248] := oldIrql_2;
    call {:si_unique_call 542} sdv_KeAcquireSpinLock(0, Tmp_248);
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    oldIrql_2 := Mem_T.INT4[Tmp_248];
    call {:si_unique_call 543} vslice_dummy_var_119 := sdv_RemoveEntryList(0);
    call {:si_unique_call 544} sdv_KeReleaseSpinLock(0, oldIrql_2);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 545} InitializeListHead(AllDevObjs__CYY_DEVICE_EXTENSION(PDevExt_3));
    call {:si_unique_call 546} vslice_dummy_var_120 := KeSynchronizeExecution(0, li2bplFunctionConstant327, 0);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 547} plx := corral_nondet();
    plx := BAND(plx, BOR(BOR(BOR(1, 2), 4), 8));
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} plx != 11;
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 548} value_1 := corral_nondet();
    value_1 := BAND(value_1, BNOT(BOR(256, 2048)));
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L27;

  L27:
    Tmp_240 := strConst__li2bpl54;
    call {:si_unique_call 549} vslice_dummy_var_128 := CyyDbgPrintEx(12, Tmp_240);
    call {:si_unique_call 550} IoDisconnectInterrupt(0);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    Tmp_242 := strConst__li2bpl56;
    call {:si_unique_call 551} vslice_dummy_var_129 := CyyDbgPrintEx(12, Tmp_242);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 552} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L23;

  L23:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 553} vslice_dummy_var_121 := CyyCancelTimer(ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 554} vslice_dummy_var_122 := CyyCancelTimer(ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 555} vslice_dummy_var_123 := CyyCancelTimer(WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 556} vslice_dummy_var_124 := CyyCancelTimer(ImmediateTotalTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 557} vslice_dummy_var_125 := CyyCancelTimer(XoffCountTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 558} vslice_dummy_var_126 := CyyCancelTimer(LowerRTSTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    call {:si_unique_call 559} sdv_225 := KeRemoveQueueDpc(0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_225 != 0;
    call {:si_unique_call 560} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1185;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1185;
    call {:si_unique_call 561} vslice_dummy_var_130 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L92;

  L92:
    call {:si_unique_call 562} sdv_228 := KeRemoveQueueDpc(0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_228 != 0;
    call {:si_unique_call 563} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1186;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1186;
    call {:si_unique_call 564} vslice_dummy_var_131 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L99;

  L99:
    call {:si_unique_call 565} sdv_208 := KeRemoveQueueDpc(0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_208 != 0;
    call {:si_unique_call 566} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1187;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1187;
    call {:si_unique_call 567} vslice_dummy_var_132 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L106;

  L106:
    call {:si_unique_call 568} sdv_211 := KeRemoveQueueDpc(0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_211 != 0;
    call {:si_unique_call 569} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1188;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1188;
    call {:si_unique_call 570} vslice_dummy_var_133 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L113;

  L113:
    call {:si_unique_call 571} sdv_230 := KeRemoveQueueDpc(0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_230 != 0;
    call {:si_unique_call 572} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1189;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1189;
    call {:si_unique_call 573} vslice_dummy_var_134 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L120;

  L120:
    call {:si_unique_call 574} sdv_232 := KeRemoveQueueDpc(0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_232 != 0;
    call {:si_unique_call 575} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1190;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1190;
    call {:si_unique_call 576} vslice_dummy_var_135 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L127;

  L127:
    call {:si_unique_call 577} sdv_224 := KeRemoveQueueDpc(0);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_224 != 0;
    call {:si_unique_call 578} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1191;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1191;
    call {:si_unique_call 579} vslice_dummy_var_136 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L134;

  L134:
    call {:si_unique_call 580} sdv_194 := KeRemoveQueueDpc(0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_194 != 0;
    call {:si_unique_call 581} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1192;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1192;
    call {:si_unique_call 582} vslice_dummy_var_137 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L141;

  L141:
    call {:si_unique_call 583} sdv_226 := KeRemoveQueueDpc(0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_226 != 0;
    call {:si_unique_call 584} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1193;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1193;
    call {:si_unique_call 585} vslice_dummy_var_138 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L148;

  L148:
    call {:si_unique_call 586} sdv_215 := KeRemoveQueueDpc(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_215 != 0;
    call {:si_unique_call 587} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1194;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1194;
    call {:si_unique_call 588} vslice_dummy_var_139 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L155;

  L155:
    call {:si_unique_call 589} sdv_192 := KeRemoveQueueDpc(0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_192 != 0;
    call {:si_unique_call 590} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1195;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1195;
    call {:si_unique_call 591} vslice_dummy_var_140 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L162;

  L162:
    call {:si_unique_call 592} sdv_196 := KeRemoveQueueDpc(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_196 != 0;
    call {:si_unique_call 593} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1196;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1196;
    call {:si_unique_call 594} vslice_dummy_var_141 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L169;

  L169:
    call {:si_unique_call 595} sdv_200 := KeRemoveQueueDpc(0);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_200 != 0;
    call {:si_unique_call 596} Tmp_248 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    havoc vslice_dummy_var_1197;
    Mem_T.INT4[Tmp_248] := vslice_dummy_var_1197;
    call {:si_unique_call 597} vslice_dummy_var_142 := sdv_InterlockedDecrement(Tmp_248);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    goto L176;

  L176:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    havoc vslice_dummy_var_1198;
    call {:si_unique_call 598} MmUnmapIoSpace(0, vslice_dummy_var_1198);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L180;

  L180:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    havoc vslice_dummy_var_1199;
    call {:si_unique_call 599} MmUnmapIoSpace(0, vslice_dummy_var_1199);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L185;

  L185:
    Tmp_245 := strConst__li2bpl55;
    call {:si_unique_call 600} vslice_dummy_var_143 := CyyDbgPrintEx(2, Tmp_245);
    return;

  anon56_Then:
    goto L185;

  anon55_Then:
    goto L180;

  anon54_Then:
    assume {:partition} sdv_200 == 0;
    goto L176;

  anon53_Then:
    assume {:partition} sdv_196 == 0;
    goto L169;

  anon52_Then:
    assume {:partition} sdv_192 == 0;
    goto L162;

  anon51_Then:
    assume {:partition} sdv_215 == 0;
    goto L155;

  anon50_Then:
    assume {:partition} sdv_226 == 0;
    goto L148;

  anon49_Then:
    assume {:partition} sdv_194 == 0;
    goto L141;

  anon48_Then:
    assume {:partition} sdv_224 == 0;
    goto L134;

  anon47_Then:
    assume {:partition} sdv_232 == 0;
    goto L127;

  anon46_Then:
    assume {:partition} sdv_230 == 0;
    goto L120;

  anon45_Then:
    assume {:partition} sdv_211 == 0;
    goto L113;

  anon44_Then:
    assume {:partition} sdv_208 == 0;
    goto L106;

  anon43_Then:
    assume {:partition} sdv_228 == 0;
    goto L99;

  anon42_Then:
    assume {:partition} sdv_225 == 0;
    goto L92;

  anon41_Then:
    goto L23;

  anon57_Then:
    assume {:partition} plx == 11;
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 601} value_1 := corral_nondet();
    value_1 := BAND(value_1, BNOT(BOR(BOR(1, 2), 64)));
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L27;

  anon40_Then:
    goto L27;

  anon39_Then:
    goto L23;
}



procedure {:origName "CyyUnload"} CyyUnload(actual_DriverObject: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyUnload"} CyyUnload(actual_DriverObject: int)
{
  var {:pointer} Tmp_250: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;

  anon0:
    call {:si_unique_call 602} vslice_dummy_var_144 := __HAVOC_malloc(4);
    call {:si_unique_call 603} Tmp_250 := __HAVOC_malloc(56);
    call {:si_unique_call 604} sdv_do_paged_code_check();
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 605} vslice_dummy_var_145 := sdv_MmLockPagableCodeSection(li2bplFunctionConstant318);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    call {:si_unique_call 606} sdv_ExFreePool(0);
    goto L13;

  L13:
    Tmp_250 := strConst__li2bpl57;
    call {:si_unique_call 607} vslice_dummy_var_146 := CyyDbgPrintEx(6, Tmp_250);
    call {:si_unique_call 608} MmUnlockPagableImageSection(0);
    goto LM2;

  LM2:
    return;

  anon6_Then:
    goto L13;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "DriverEntry"} DriverEntry(actual_DriverObject_1: int, actual_RegistryPath_1: int) returns (Tmp_252: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "DriverEntry"} DriverEntry(actual_DriverObject_1: int, actual_RegistryPath_1: int) returns (Tmp_252: int)
{
  var {:pointer} Tmp_253: int;
  var {:scalar} Tmp_254: int;
  var {:pointer} Tmp_255: int;
  var {:scalar} Tmp_256: int;
  var {:pointer} Tmp_257: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Tmp_259: int;
  var {:pointer} Tmp_260: int;
  var {:pointer} Tmp_261: int;
  var {:pointer} Tmp_262: int;
  var {:pointer} sdv_236: int;
  var {:pointer} Tmp_263: int;
  var {:pointer} lockPtr_1: int;
  var {:pointer} Tmp_264: int;
  var {:pointer} Tmp_265: int;
  var {:pointer} Tmp_266: int;
  var {:pointer} Tmp_267: int;
  var {:scalar} Tmp_268: int;
  var {:pointer} Tmp_269: int;
  var {:pointer} Tmp_270: int;
  var {:pointer} Tmp_271: int;
  var {:pointer} DriverObject_1: int;
  var {:pointer} RegistryPath_1: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_1200: int;

  anon0:
    DriverObject_1 := actual_DriverObject_1;
    RegistryPath_1 := actual_RegistryPath_1;
    call {:si_unique_call 609} Tmp_255 := __HAVOC_malloc(112);
    call {:si_unique_call 610} Tmp_258 := __HAVOC_malloc(112);
    call {:si_unique_call 611} Tmp_259 := __HAVOC_malloc(112);
    call {:si_unique_call 612} Tmp_260 := __HAVOC_malloc(112);
    call {:si_unique_call 613} Tmp_261 := __HAVOC_malloc(112);
    call {:si_unique_call 614} Tmp_262 := __HAVOC_malloc(112);
    call {:si_unique_call 615} Tmp_263 := __HAVOC_malloc(112);
    call {:si_unique_call 616} Tmp_264 := __HAVOC_malloc(112);
    call {:si_unique_call 617} Tmp_265 := __HAVOC_malloc(112);
    call {:si_unique_call 618} Tmp_266 := __HAVOC_malloc(112);
    call {:si_unique_call 619} Tmp_267 := __HAVOC_malloc(180);
    call {:si_unique_call 620} Tmp_269 := __HAVOC_malloc(112);
    call {:si_unique_call 621} Tmp_270 := __HAVOC_malloc(112);
    call {:si_unique_call 622} Tmp_271 := __HAVOC_malloc(112);
    call {:si_unique_call 623} lockPtr_1 := sdv_MmLockPagableCodeSection(li2bplFunctionConstant230);
    call {:si_unique_call 624} sdv_do_paged_code_check();
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} RegistryPath_1 != 0;
    assume RegistryPath_1 > 0;
    assume {:nonnull} RegistryPath_1 != 0;
    assume RegistryPath_1 > 0;
    havoc Tmp_256;
    call {:si_unique_call 625} sdv_236 := ExAllocatePoolWithTag(1, Tmp_256, -797345469);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    havoc Tmp_268;
    call {:si_unique_call 626} sdv_RtlZeroMemory(0, Tmp_268);
    assume {:nonnull} RegistryPath_1 != 0;
    assume RegistryPath_1 > 0;
    havoc Tmp_254;
    call {:si_unique_call 627} sdv_RtlMoveMemory(0, 0, Tmp_254);
    call {:si_unique_call 628} Tmp_257 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_257 != 0;
    assume Tmp_257 > 0;
    havoc vslice_dummy_var_1200;
    Mem_T.INT4[Tmp_257] := vslice_dummy_var_1200;
    call {:si_unique_call 629} sdv_KeInitializeSpinLock(Tmp_257);
    assume {:nonnull} Tmp_257 != 0;
    assume Tmp_257 > 0;
    call {:si_unique_call 630} InitializeListHead(AllDevObjs__CYY_GLOBALS(CyyGlobals));
    call {:si_unique_call 631} vslice_dummy_var_147 := CyyGetConfigDefaults(driverDefaults, RegistryPath_1);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.INT4[ShouldBreakOnEntry__CYY_REGISTRY_DATA(driverDefaults)] != 0;
    call {:si_unique_call 632} sdv_DbgBreakPoint();
    goto L41;

  L41:
    Tmp_267 := strConst__li2bpl58;
    call {:si_unique_call 633} vslice_dummy_var_148 := CyyDbgPrintEx(3, Tmp_267);
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_253;
    assume {:nonnull} Tmp_253 != 0;
    assume Tmp_253 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_264;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    Mem_T.INT4[Tmp_264 + 9 * 4] := li2bplFunctionConstant112;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_262;
    assume {:nonnull} Tmp_262 != 0;
    assume Tmp_262 > 0;
    Mem_T.INT4[Tmp_262 + 4 * 4] := li2bplFunctionConstant193;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_258;
    assume {:nonnull} Tmp_258 != 0;
    assume Tmp_258 > 0;
    Mem_T.INT4[Tmp_258 + 3 * 4] := li2bplFunctionConstant319;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_270;
    assume {:nonnull} Tmp_270 != 0;
    assume Tmp_270 > 0;
    Mem_T.INT4[Tmp_270 + 14 * 4] := li2bplFunctionConstant320;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_265;
    assume {:nonnull} Tmp_265 != 0;
    assume Tmp_265 > 0;
    Mem_T.INT4[Tmp_265 + 15 * 4] := li2bplFunctionConstant321;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_259;
    assume {:nonnull} Tmp_259 != 0;
    assume Tmp_259 > 0;
    Mem_T.INT4[Tmp_259] := li2bplFunctionConstant322;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_255;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    Mem_T.INT4[Tmp_255 + 2 * 4] := li2bplFunctionConstant323;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_261;
    assume {:nonnull} Tmp_261 != 0;
    assume Tmp_261 > 0;
    Mem_T.INT4[Tmp_261 + 18 * 4] := li2bplFunctionConstant324;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_263;
    assume {:nonnull} Tmp_263 != 0;
    assume Tmp_263 > 0;
    Mem_T.INT4[Tmp_263 + 27 * 4] := li2bplFunctionConstant222;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_271;
    assume {:nonnull} Tmp_271 != 0;
    assume Tmp_271 > 0;
    Mem_T.INT4[Tmp_271 + 22 * 4] := li2bplFunctionConstant291;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_269;
    assume {:nonnull} Tmp_269 != 0;
    assume Tmp_269 > 0;
    Mem_T.INT4[Tmp_269 + 5 * 4] := li2bplFunctionConstant325;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_260;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    Mem_T.INT4[Tmp_260 + 6 * 4] := li2bplFunctionConstant326;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_266;
    assume {:nonnull} Tmp_266 != 0;
    assume Tmp_266 > 0;
    Mem_T.INT4[Tmp_266 + 23 * 4] := li2bplFunctionConstant266;
    call {:si_unique_call 634} MmUnlockPagableImageSection(0);
    Tmp_252 := 0;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon9_Then:
    assume {:partition} Mem_T.INT4[ShouldBreakOnEntry__CYY_REGISTRY_DATA(driverDefaults)] == 0;
    goto L41;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    call {:si_unique_call 635} MmUnlockPagableImageSection(0);
    Tmp_252 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyCommError"} CyyCommError(actual_Dpc: int, actual_DeferredContext: int, actual_SystemContext1: int, actual_SystemContext2: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCommError"} CyyCommError(actual_Dpc: int, actual_DeferredContext: int, actual_SystemContext1: int, actual_SystemContext2: int)
{
  var {:pointer} Tmp_272: int;
  var {:pointer} Extension_6: int;
  var {:pointer} Tmp_275: int;
  var {:pointer} Dpc: int;
  var {:pointer} DeferredContext: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_1201: int;
  var vslice_dummy_var_1202: int;

  anon0:
    call {:si_unique_call 636} vslice_dummy_var_149 := __HAVOC_malloc(4);
    Dpc := actual_Dpc;
    DeferredContext := actual_DeferredContext;
    call {:si_unique_call 637} Tmp_272 := __HAVOC_malloc(76);
    call {:si_unique_call 638} Tmp_275 := __HAVOC_malloc(60);
    Extension_6 := DeferredContext;
    Tmp_272 := strConst__li2bpl60;
    call {:si_unique_call 639} vslice_dummy_var_150 := CyyDbgPrintEx(2, Tmp_272);
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc vslice_dummy_var_1201;
    call {:si_unique_call 640} CyyKillAllReadsOrWrites(vslice_dummy_var_1201, WriteQueue__CYY_DEVICE_EXTENSION(Extension_6), CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_6));
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc vslice_dummy_var_1202;
    call {:si_unique_call 641} CyyKillAllReadsOrWrites(vslice_dummy_var_1202, ReadQueue__CYY_DEVICE_EXTENSION(Extension_6), CurrentReadIrp__CYY_DEVICE_EXTENSION(Extension_6));
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 642} CyyDpcEpilogue(Extension_6, Dpc);
    Tmp_275 := strConst__li2bpl59;
    call {:si_unique_call 643} vslice_dummy_var_151 := CyyDbgPrintEx(2, Tmp_275);
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyDisableInterfacesResources"} CyyDisableInterfacesResources(actual_PDevObj_10: int, actual_DisableCD1400: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyDisableInterfacesResources"} CyyDisableInterfacesResources(actual_PDevObj_10: int, actual_DisableCD1400: int)
{
  var {:pointer} pDevExt_10: int;
  var {:pointer} Tmp_279: int;
  var {:pointer} Tmp_281: int;
  var {:pointer} Tmp_283: int;
  var {:pointer} PDevObj_10: int;
  var {:scalar} DisableCD1400: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;

  anon0:
    call {:si_unique_call 644} vslice_dummy_var_152 := __HAVOC_malloc(4);
    PDevObj_10 := actual_PDevObj_10;
    DisableCD1400 := actual_DisableCD1400;
    call {:si_unique_call 645} Tmp_279 := __HAVOC_malloc(124);
    call {:si_unique_call 646} Tmp_283 := __HAVOC_malloc(92);
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    havoc pDevExt_10;
    call {:si_unique_call 647} sdv_do_paged_code_check();
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} DisableCD1400 != 0;
    Tmp_281 := strConst__li2bpl62;
    goto L11;

  L11:
    Tmp_279 := strConst__li2bpl63;
    call {:si_unique_call 648} vslice_dummy_var_154 := CyyDbgPrintEx(2, Tmp_279);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_10)], 1) != 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_10)], 2) != 0;
    goto L20;

  L20:
    call {:si_unique_call 649} vslice_dummy_var_153 := IoWMIRegistrationControl(0, 2);
    goto L15;

  L15:
    call {:si_unique_call 650} CyyUndoExternalNaming(pDevExt_10);
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    Tmp_283 := strConst__li2bpl64;
    call {:si_unique_call 651} vslice_dummy_var_155 := CyyDbgPrintEx(2, Tmp_283);
    goto LM2;

  LM2:
    return;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_10)], 2) == 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} DisableCD1400 != 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto L23;

  L23:
    call {:si_unique_call 652} CyyReleaseResources(pDevExt_10);
    goto L20;

  anon16_Then:
    assume {:partition} DisableCD1400 == 0;
    goto L23;

  anon14_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_10)], 1) == 0;
    goto L15;

  anon13_Then:
    assume {:partition} DisableCD1400 == 0;
    Tmp_281 := strConst__li2bpl61;
    goto L11;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init10"} _sdv_init10();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init10"} _sdv_init10()
{
  var vslice_dummy_var_156: int;

  anon0:
    call {:si_unique_call 653} vslice_dummy_var_156 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyCreateOpen"} CyyCreateOpen(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_286: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous) || sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current) || sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2) || sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCreateOpen"} CyyCreateOpen(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_286: int)
{
  var {:scalar} localStatus: int;
  var {:pointer} Tmp_287: int;
  var {:pointer} Tmp_288: int;
  var {:pointer} sdv_247: int;
  var {:pointer} Tmp_289: int;
  var {:pointer} Tmp_290: int;
  var {:pointer} sdv_251: int;
  var {:pointer} Tmp_291: int;
  var {:pointer} sdv_253: int;
  var {:scalar} sdv_254: int;
  var {:pointer} sdv_255: int;
  var {:pointer} Tmp_292: int;
  var {:pointer} sdv_256: int;
  var {:pointer} Tmp_293: int;
  var {:pointer} Tmp_294: int;
  var {:pointer} extension: int;
  var {:pointer} DeviceObject_5: int;
  var {:pointer} Irp_5: int;
  var boogieTmp: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_1203: int;
  var vslice_dummy_var_1204: int;
  var vslice_dummy_var_1205: int;
  var vslice_dummy_var_1206: int;

  anon0:
    DeviceObject_5 := actual_DeviceObject_5;
    Irp_5 := actual_Irp_5;
    call {:si_unique_call 654} Tmp_287 := __HAVOC_malloc(72);
    call {:si_unique_call 655} Tmp_288 := __HAVOC_malloc(72);
    call {:si_unique_call 656} Tmp_289 := __HAVOC_malloc(72);
    call {:si_unique_call 657} Tmp_290 := __HAVOC_malloc(72);
    call {:si_unique_call 658} Tmp_291 := __HAVOC_malloc(72);
    call {:si_unique_call 659} Tmp_292 := __HAVOC_malloc(96);
    call {:si_unique_call 660} Tmp_293 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_5 != 0;
    assume DeviceObject_5 > 0;
    havoc extension;
    call {:si_unique_call 661} sdv_do_paged_code_check();
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 662} sdv_IoCompleteRequest(0, 0);
    Tmp_286 := -1073741670;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon27_Then:
    call {:si_unique_call 663} ExAcquireFastMutex(0);
    call {:si_unique_call 664} localStatus := CyyIRPPrologue(Irp_5, extension);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} localStatus != 0;
    call {:si_unique_call 665} ExReleaseFastMutex(0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} localStatus != 259;
    Tmp_291 := strConst__li2bpl3;
    call {:si_unique_call 666} vslice_dummy_var_158 := CyyDbgPrintEx(9, Tmp_291);
    call {:si_unique_call 667} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 668} CyyIRPEpilogue(extension);
    goto L30;

  L30:
    Tmp_286 := localStatus;
    goto L1;

  anon29_Then:
    assume {:partition} localStatus == 259;
    goto L30;

  anon28_Then:
    assume {:partition} localStatus == 0;
    call {:si_unique_call 669} Tmp_294 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Mem_T.INT4[Tmp_294] := Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension)];
    call {:si_unique_call 670} sdv_254 := sdv_InterlockedIncrement(Tmp_294);
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension)] := Mem_T.INT4[Tmp_294];
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_254 != 1;
    call {:si_unique_call 671} ExReleaseFastMutex(0);
    call {:si_unique_call 672} Tmp_294 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Mem_T.INT4[Tmp_294] := Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension)];
    call {:si_unique_call 673} vslice_dummy_var_159 := sdv_InterlockedDecrement(Tmp_294);
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension)] := Mem_T.INT4[Tmp_294];
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Tmp_288 := strConst__li2bpl3;
    call {:si_unique_call 674} vslice_dummy_var_160 := CyyDbgPrintEx(9, Tmp_288);
    call {:si_unique_call 675} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 676} CyyIRPEpilogue(extension);
    Tmp_286 := -1073741790;
    goto L1;

  anon30_Then:
    assume {:partition} sdv_254 == 1;
    Tmp_292 := strConst__li2bpl11;
    call {:si_unique_call 677} vslice_dummy_var_161 := CyyDbgPrintEx(9, Tmp_292);
    Tmp_290 := strConst__li2bpl65;
    call {:si_unique_call 678} vslice_dummy_var_162 := CyyDbgPrintEx(6, Tmp_290);
    call {:si_unique_call 679} sdv_253 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} sdv_253 != 0;
    assume sdv_253 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 680} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 681} Tmp_294 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Mem_T.INT4[Tmp_294] := Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension)];
    call {:si_unique_call 682} vslice_dummy_var_163 := sdv_InterlockedDecrement(Tmp_294);
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension)] := Mem_T.INT4[Tmp_294];
    Tmp_293 := strConst__li2bpl3;
    call {:si_unique_call 683} vslice_dummy_var_164 := CyyDbgPrintEx(9, Tmp_293);
    call {:si_unique_call 684} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 685} CyyIRPEpilogue(extension);
    Tmp_286 := -1073741565;
    goto L1;

  anon31_Then:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    havoc vslice_dummy_var_1203;
    call {:si_unique_call 686} sdv_255 := ExAllocatePoolWithTag(0, vslice_dummy_var_1203, -797345469);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L95;

  L95:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 687} MmLockPagableSectionByHandle(0);
    call {:si_unique_call 688} vslice_dummy_var_157 := CyyGotoPowerState(DeviceObject_5, extension, 1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 689} boogieTmp := corral_nondet();
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 690} boogieTmp := corral_nondet();
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 691} boogieTmp := corral_nondet();
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 692} vslice_dummy_var_165 := KeSynchronizeExecution(0, li2bplFunctionConstant356, 0);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 693} vslice_dummy_var_166 := KeSynchronizeExecution(0, li2bplFunctionConstant424, 0);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 694} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc localStatus;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} localStatus >= 0;
    goto L136;

  L136:
    Tmp_289 := strConst__li2bpl3;
    call {:si_unique_call 695} vslice_dummy_var_167 := CyyDbgPrintEx(9, Tmp_289);
    call {:si_unique_call 696} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 697} CyyIRPEpilogue(extension);
    Tmp_286 := localStatus;
    goto L1;

  anon37_Then:
    assume {:partition} 0 > localStatus;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 698} sdv_ExFreePool(0);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto L146;

  L146:
    call {:si_unique_call 699} Tmp_294 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Mem_T.INT4[Tmp_294] := Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension)];
    call {:si_unique_call 700} vslice_dummy_var_168 := sdv_InterlockedDecrement(Tmp_294);
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension)] := Mem_T.INT4[Tmp_294];
    goto L136;

  anon33_Then:
    goto L146;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    call {:si_unique_call 701} ExReleaseFastMutex(0);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 702} Tmp_294 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Mem_T.INT4[Tmp_294] := Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension)];
    call {:si_unique_call 703} vslice_dummy_var_169 := sdv_InterlockedDecrement(Tmp_294);
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension)] := Mem_T.INT4[Tmp_294];
    Tmp_287 := strConst__li2bpl3;
    call {:si_unique_call 704} vslice_dummy_var_170 := CyyDbgPrintEx(9, Tmp_287);
    call {:si_unique_call 705} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 706} CyyIRPEpilogue(extension);
    Tmp_286 := -1073741670;
    goto L1;

  anon35_Then:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    havoc vslice_dummy_var_1204;
    call {:si_unique_call 707} sdv_256 := ExAllocatePoolWithTag(0, vslice_dummy_var_1204, -797345469);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    havoc vslice_dummy_var_1205;
    call {:si_unique_call 708} sdv_251 := ExAllocatePoolWithTag(0, vslice_dummy_var_1205, -797345469);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    havoc vslice_dummy_var_1206;
    call {:si_unique_call 709} sdv_247 := ExAllocatePoolWithTag(0, vslice_dummy_var_1206, -797345469);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto L95;

  anon39_Then:
    goto L95;

  anon38_Then:
    goto L95;

  anon34_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init15"} _sdv_init15();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init15"} _sdv_init15()
{
  var vslice_dummy_var_171: int;

  anon0:
    call {:si_unique_call 710} vslice_dummy_var_171 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyGetCharTime"} CyyGetCharTime(actual_Extension_7: int) returns (SD1_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetCharTime"} CyyGetCharTime(actual_Extension_7: int) returns (SD1_2: int)
{
  var {:scalar} dataSize: int;
  var {:scalar} charTime: int;
  var {:scalar} Tmp_297: int;
  var {:scalar} bitTime: int;
  var {:scalar} paritySize: int;
  var {:scalar} Tmp_298: int;
  var {:scalar} Tmp_1: int;
  var {:scalar} tmp: int;
  var {:scalar} stopSize: int;
  var {:scalar} Tmp_299: int;
  var {:pointer} Extension_7: int;

  anon0:
    call {:si_unique_call 711} Tmp_1 := __HAVOC_malloc(20);
    call {:si_unique_call 712} tmp := __HAVOC_malloc(20);
    Extension_7 := actual_Extension_7;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_298;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Tmp_298 == 1;
    dataSize := 6;
    goto L15;

  L15:
    paritySize := 1;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_297;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Tmp_297 == 16;
    paritySize := 0;
    goto L18;

  L18:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    stopSize := 2;
    goto L22;

  L22:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc bitTime;
    charTime := bitTime + (dataSize + paritySize + stopSize) * bitTime;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    SD1_2 := Tmp_1;
    return;

  anon12_Then:
    stopSize := 1;
    goto L22;

  anon14_Then:
    assume {:partition} Tmp_297 != 16;
    goto L18;

  anon13_Then:
    assume {:partition} Tmp_298 != 1;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_299;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Tmp_299 == 2;
    dataSize := 7;
    goto L15;

  anon15_Then:
    assume {:partition} Tmp_299 != 2;
    dataSize := 8;
    goto L15;

  anon11_Then:
    dataSize := 5;
    goto L15;
}



procedure {:origName "CyyCleanup"} CyyCleanup(actual_DeviceObject_6: int, actual_Irp_6: int) returns (Tmp_301: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCleanup"} CyyCleanup(actual_DeviceObject_6: int, actual_Irp_6: int) returns (Tmp_301: int)
{
  var {:pointer} Tmp_303: int;
  var {:pointer} Tmp_304: int;
  var {:pointer} Tmp_305: int;
  var {:scalar} status_11: int;
  var {:pointer} extension_1: int;
  var {:pointer} DeviceObject_6: int;
  var {:pointer} Irp_6: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;

  anon0:
    DeviceObject_6 := actual_DeviceObject_6;
    Irp_6 := actual_Irp_6;
    call {:si_unique_call 713} Tmp_303 := __HAVOC_malloc(72);
    call {:si_unique_call 714} Tmp_304 := __HAVOC_malloc(72);
    call {:si_unique_call 715} Tmp_305 := __HAVOC_malloc(96);
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    havoc extension_1;
    call {:si_unique_call 716} sdv_do_paged_code_check();
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 717} status_11 := CyyIRPPrologue(Irp_6, extension_1);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_11 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_11 == -1073741738;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    havoc status_11;
    goto L18;

  L18:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_11 != 259;
    Tmp_304 := strConst__li2bpl3;
    call {:si_unique_call 718} vslice_dummy_var_172 := CyyDbgPrintEx(9, Tmp_304);
    call {:si_unique_call 719} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 720} CyyIRPEpilogue(extension_1);
    goto L21;

  L21:
    Tmp_301 := status_11;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} status_11 == 259;
    goto L21;

  anon12_Then:
    assume {:partition} status_11 != -1073741738;
    goto L18;

  anon11_Then:
    assume {:partition} status_11 == 0;
    Tmp_305 := strConst__li2bpl11;
    call {:si_unique_call 721} vslice_dummy_var_173 := CyyDbgPrintEx(9, Tmp_305);
    call {:si_unique_call 722} CyyKillPendingIrps(DeviceObject_6);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Tmp_303 := strConst__li2bpl3;
    call {:si_unique_call 723} vslice_dummy_var_174 := CyyDbgPrintEx(9, Tmp_303);
    call {:si_unique_call 724} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 725} CyyIRPEpilogue(extension_1);
    Tmp_301 := 0;
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyClose"} CyyClose(actual_DeviceObject_7: int, actual_Irp_7: int) returns (Tmp_306: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2) || sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous) || sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3) || sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyClose"} CyyClose(actual_DeviceObject_7: int, actual_Irp_7: int) returns (Tmp_306: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:scalar} i: int;
  var {:pointer} Tmp_307: int;
  var {:pointer} Tmp_308: int;
  var {:pointer} Tmp_309: int;
  var {:scalar} sdv_273: int;
  var {:pointer} Tmp_310: int;
  var {:scalar} charTime_1: int;
  var {:pointer} chip_1: int;
  var {:scalar} pendingDPCs: int;
  var {:scalar} tenCharDelay: int;
  var {:pointer} Tmp_313: int;
  var {:pointer} Tmp_314: int;
  var {:pointer} Tmp_315: int;
  var {:pointer} Tmp_316: int;
  var {:pointer} Tmp_317: int;
  var {:scalar} status_12: int;
  var {:pointer} extension_2: int;
  var {:pointer} Tmp_318: int;
  var {:scalar} sdv: int;
  var {:pointer} Tmp_319: int;
  var {:pointer} DeviceObject_7: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_1207: int;
  var vslice_dummy_var_1208: int;

  anon0:
    call {:si_unique_call 726} charTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 727} tenCharDelay := __HAVOC_malloc(20);
    call {:si_unique_call 728} sdv := __HAVOC_malloc(20);
    DeviceObject_7 := actual_DeviceObject_7;
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 729} Tmp_307 := __HAVOC_malloc(124);
    call {:si_unique_call 730} Tmp_308 := __HAVOC_malloc(92);
    call {:si_unique_call 731} Tmp_310 := __HAVOC_malloc(80);
    call {:si_unique_call 732} Tmp_313 := __HAVOC_malloc(128);
    call {:si_unique_call 733} Tmp_314 := __HAVOC_malloc(96);
    call {:si_unique_call 734} Tmp_315 := __HAVOC_malloc(52);
    call {:si_unique_call 735} Tmp_316 := __HAVOC_malloc(72);
    call {:si_unique_call 736} Tmp_317 := __HAVOC_malloc(72);
    call {:si_unique_call 737} Tmp_318 := __HAVOC_malloc(76);
    call {:si_unique_call 738} Tmp_319 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    havoc extension_2;
    call {:si_unique_call 739} ExAcquireFastMutex(0);
    call {:si_unique_call 740} status_12 := CyyIRPPrologue(Irp_7, extension_2);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_12 != 0;
    Tmp_307 := strConst__li2bpl66;
    call {:si_unique_call 741} vslice_dummy_var_184 := CyyDbgPrintEx(3, Tmp_307);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_12 == -1073741738;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 742} sdv_ExFreePool(0);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    havoc status_12;
    goto L25;

  L25:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} status_12 != 259;
    Tmp_316 := strConst__li2bpl3;
    call {:si_unique_call 743} vslice_dummy_var_185 := CyyDbgPrintEx(9, Tmp_316);
    call {:si_unique_call 744} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 745} CyyIRPEpilogue(extension_2);
    call {:si_unique_call 746} Tmp_309 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    Mem_T.INT4[Tmp_309] := Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension_2)];
    call {:si_unique_call 747} vslice_dummy_var_186 := sdv_InterlockedDecrement(Tmp_309);
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension_2)] := Mem_T.INT4[Tmp_309];
    goto L33;

  L33:
    call {:si_unique_call 748} ExReleaseFastMutex(0);
    Tmp_306 := status_12;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon28_Then:
    assume {:partition} status_12 == 259;
    goto L33;

  anon27_Then:
    assume {:partition} status_12 != -1073741738;
    goto L25;

  anon25_Then:
    assume {:partition} status_12 == 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} 1 > Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension_2)];
    Tmp_313 := strConst__li2bpl67;
    call {:si_unique_call 749} vslice_dummy_var_187 := CyyDbgPrintEx(0, Tmp_313);
    Tmp_308 := strConst__li2bpl68;
    call {:si_unique_call 750} vslice_dummy_var_188 := CyyDbgPrintEx(0, Tmp_308);
    call {:si_unique_call 751} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    Tmp_317 := strConst__li2bpl3;
    call {:si_unique_call 752} vslice_dummy_var_189 := CyyDbgPrintEx(9, Tmp_317);
    call {:si_unique_call 753} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 754} CyyIRPEpilogue(extension_2);
    Tmp_306 := -1073741808;
    goto L1;

  anon26_Then:
    assume {:partition} Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension_2)] >= 1;
    Tmp_314 := strConst__li2bpl11;
    call {:si_unique_call 755} vslice_dummy_var_190 := CyyDbgPrintEx(9, Tmp_314);
    Tmp_315 := strConst__li2bpl69;
    call {:si_unique_call 756} vslice_dummy_var_191 := CyyDbgPrintEx(6, Tmp_315);
    call {:si_unique_call 757} structPtr888sdv := CyyGetCharTime(extension_2);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} charTime_1 != 0;
    assume charTime_1 > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    i := 0;
    goto L82;

  L82:
    call {:si_unique_call 758} i, vslice_dummy_var_176 := CyyClose_loop_L82(i, vslice_dummy_var_176);
    goto L82_last;

  L82_last:
    assume {:CounterLoop 12} {:Counter "i"} true;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} 12 > i;
    call {:si_unique_call 759} vslice_dummy_var_176 := KeDelayExecutionThread(0, 0, 0);
    i := i + 1;
    goto anon29_Else_dummy;

  anon29_Else_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} i >= 12;
    call {:si_unique_call 760} vslice_dummy_var_175 := KeSynchronizeExecution(0, li2bplFunctionConstant231, 0);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    havoc chip_1;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 761} CyyCDCmd(extension_2, 33);
    goto L91;

  L91:
    assume {:nonnull} charTime_1 != 0;
    assume charTime_1 > 0;
    assume {:nonnull} tenCharDelay != 0;
    assume tenCharDelay > 0;
    call {:si_unique_call 762} vslice_dummy_var_192 := KeDelayExecutionThread(0, 1, 0);
    call {:si_unique_call 763} vslice_dummy_var_177 := CyyClrDTR(extension_2);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L114;

  L114:
    call {:si_unique_call 764} vslice_dummy_var_179 := CyyClose_loop_L114(extension_2, vslice_dummy_var_179);
    goto L114_last;

  L114_last:
    call {:si_unique_call 784} vslice_dummy_var_179 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 765} vslice_dummy_var_180 := KeSynchronizeExecution(0, li2bplFunctionConstant423, 0);
    goto L111;

  L111:
    call {:si_unique_call 766} vslice_dummy_var_178 := CyyClrRTS(extension_2);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 767} sdv_ExFreePool(0);
    goto L126;

  L126:
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 768} vslice_dummy_var_182 := IoCancelIrp(0);
    goto L132;

  L132:
    call {:si_unique_call 769} vslice_dummy_var_181 := CyyGotoPowerState(DeviceObject_7, extension_2, 4);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    Tmp_319 := strConst__li2bpl3;
    call {:si_unique_call 770} vslice_dummy_var_193 := CyyDbgPrintEx(9, Tmp_319);
    call {:si_unique_call 771} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 772} CyyIRPEpilogue(extension_2);
    call {:si_unique_call 773} Tmp_309 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    havoc vslice_dummy_var_1207;
    Mem_T.INT4[Tmp_309] := vslice_dummy_var_1207;
    call {:si_unique_call 774} sdv_273 := sdv_InterlockedDecrement(Tmp_309);
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    pendingDPCs := sdv_273;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} pendingDPCs != 0;
    Tmp_310 := strConst__li2bpl71;
    call {:si_unique_call 775} vslice_dummy_var_194 := CyyDbgPrintEx(4, Tmp_310);
    call {:si_unique_call 776} vslice_dummy_var_183 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L154;

  L154:
    Tmp_318 := strConst__li2bpl70;
    call {:si_unique_call 777} vslice_dummy_var_195 := CyyDbgPrintEx(4, Tmp_318);
    call {:si_unique_call 778} ExReleaseFastMutex(0);
    call {:si_unique_call 779} Tmp_309 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    havoc vslice_dummy_var_1208;
    Mem_T.INT4[Tmp_309] := vslice_dummy_var_1208;
    call {:si_unique_call 780} vslice_dummy_var_196 := sdv_InterlockedIncrement(Tmp_309);
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 781} Tmp_309 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    Mem_T.INT4[Tmp_309] := Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension_2)];
    call {:si_unique_call 782} vslice_dummy_var_197 := sdv_InterlockedDecrement(Tmp_309);
    assume {:nonnull} Tmp_309 != 0;
    assume Tmp_309 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    Mem_T.INT4[OpenCount__CYY_DEVICE_EXTENSION(extension_2)] := Mem_T.INT4[Tmp_309];
    call {:si_unique_call 783} MmUnlockPagableImageSection(0);
    Tmp_306 := 0;
    goto L1;

  anon36_Then:
    assume {:partition} pendingDPCs == 0;
    goto L154;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon34_Then:
    goto L132;

  anon33_Then:
    goto L126;

  anon32_Then:
    goto anon32_Then_dummy;

  anon32_Then_dummy:
    assume false;
    return;

  anon31_Then:
    goto L111;

  anon30_Then:
    goto L91;
}



procedure {:origName "CyyGetPortInfo"} CyyGetPortInfo(actual_PDevObj_11: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig_1: int) returns (Tmp_320: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetPortInfo"} CyyGetPortInfo(actual_PDevObj_11: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig_1: int) returns (Tmp_320: int)
{
  var {:scalar} i_1: int;
  var {:pointer} pPartialResourceList: int;
  var {:pointer} pFullTrResourceDesc: int;
  var {:pointer} Tmp_321: int;
  var {:scalar} count: int;
  var {:pointer} Tmp_322: int;
  var {:pointer} Tmp_323: int;
  var {:scalar} Tmp_324: int;
  var {:pointer} Tmp_325: int;
  var {:scalar} Tmp_326: int;
  var {:pointer} keyHandle: int;
  var {:scalar} Tmp_327: int;
  var {:pointer} Tmp_328: int;
  var {:scalar} Tmp_329: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} pPartialTrResourceDesc: int;
  var {:scalar} Tmp_331: int;
  var {:scalar} Tmp_332: int;
  var {:pointer} pDevExt_11: int;
  var {:pointer} Tmp_333: int;
  var {:scalar} Tmp_334: int;
  var {:pointer} Tmp_335: int;
  var {:pointer} Tmp_336: int;
  var {:pointer} Tmp_337: int;
  var {:scalar} Tmp_338: int;
  var {:scalar} Tmp_339: int;
  var {:pointer} Tmp_340: int;
  var {:scalar} Tmp_341: int;
  var {:scalar} Tmp_342: int;
  var {:scalar} foundIt: int;
  var {:pointer} Tmp_343: int;
  var {:pointer} Tmp_344: int;
  var {:scalar} Tmp_345: int;
  var {:pointer} pFullResourceDesc: int;
  var {:pointer} Tmp_346: int;
  var {:scalar} Tmp_347: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} Tmp_349: int;
  var {:scalar} Tmp_350: int;
  var {:scalar} Tmp_351: int;
  var {:scalar} Tmp_352: int;
  var {:pointer} Tmp_353: int;
  var {:pointer} Tmp_355: int;
  var {:pointer} Tmp_356: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_357: int;
  var {:pointer} Tmp_358: int;
  var {:pointer} Tmp_359: int;
  var {:pointer} pPartialTrResourceList: int;
  var {:scalar} Tmp_360: int;
  var {:pointer} Tmp_361: int;
  var {:pointer} Tmp_362: int;
  var {:pointer} pPartialResourceDesc: int;
  var {:pointer} Tmp_363: int;
  var {:pointer} PDevObj_11: int;
  var {:pointer} PResList: int;
  var {:pointer} PTrResList: int;
  var {:pointer} PConfig_1: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_1209: int;
  var vslice_dummy_var_1210: int;
  var vslice_dummy_var_1211: int;
  var vslice_dummy_var_1212: int;
  var vslice_dummy_var_1213: int;
  var vslice_dummy_var_1214: int;
  var vslice_dummy_var_1215: int;
  var vslice_dummy_var_1216: int;
  var vslice_dummy_var_1217: int;
  var vslice_dummy_var_1218: int;
  var vslice_dummy_var_1219: int;
  var vslice_dummy_var_1220: int;
  var vslice_dummy_var_1221: int;
  var vslice_dummy_var_1222: int;
  var vslice_dummy_var_1223: int;
  var vslice_dummy_var_1224: int;
  var vslice_dummy_var_1225: int;
  var vslice_dummy_var_1226: int;

  anon0:
    call {:si_unique_call 785} Tmp_326 := __HAVOC_malloc(20);
    call {:si_unique_call 786} Tmp_338 := __HAVOC_malloc(20);
    call {:si_unique_call 787} Tmp_341 := __HAVOC_malloc(20);
    call {:si_unique_call 788} Tmp_351 := __HAVOC_malloc(20);
    call {:si_unique_call 789} Tmp_352 := __HAVOC_malloc(20);
    call {:si_unique_call 790} Tmp_360 := __HAVOC_malloc(20);
    PDevObj_11 := actual_PDevObj_11;
    PResList := actual_PResList;
    PTrResList := actual_PTrResList;
    PConfig_1 := actual_PConfig_1;
    call {:si_unique_call 791} Tmp_321 := __HAVOC_malloc(88);
    call {:si_unique_call 792} Tmp_322 := __HAVOC_malloc(28);
    call {:si_unique_call 793} Tmp_323 := __HAVOC_malloc(96);
    call {:si_unique_call 794} Tmp_325 := __HAVOC_malloc(264);
    call {:si_unique_call 795} Tmp_328 := __HAVOC_malloc(120);
    call {:si_unique_call 796} Tmp_330 := __HAVOC_malloc(92);
    call {:si_unique_call 797} Tmp_333 := __HAVOC_malloc(112);
    call {:si_unique_call 798} Tmp_335 := __HAVOC_malloc(80);
    call {:si_unique_call 799} Tmp_336 := __HAVOC_malloc(108);
    call {:si_unique_call 800} Tmp_337 := __HAVOC_malloc(40);
    call {:si_unique_call 801} Tmp_340 := __HAVOC_malloc(96);
    call {:si_unique_call 802} Tmp_343 := __HAVOC_malloc(96);
    call {:si_unique_call 803} Tmp_344 := __HAVOC_malloc(100);
    call {:si_unique_call 804} Tmp_346 := __HAVOC_malloc(264);
    call {:si_unique_call 805} Tmp_348 := __HAVOC_malloc(68);
    call {:si_unique_call 806} Tmp_349 := __HAVOC_malloc(104);
    call {:si_unique_call 807} Tmp_353 := __HAVOC_malloc(28);
    call {:si_unique_call 808} Tmp_355 := __HAVOC_malloc(112);
    call {:si_unique_call 809} Tmp_356 := __HAVOC_malloc(92);
    call {:si_unique_call 810} Tmp_357 := __HAVOC_malloc(104);
    call {:si_unique_call 811} Tmp_358 := __HAVOC_malloc(96);
    call {:si_unique_call 812} Tmp_359 := __HAVOC_malloc(152);
    call {:si_unique_call 813} Tmp_361 := __HAVOC_malloc(84);
    call {:si_unique_call 814} Tmp_362 := __HAVOC_malloc(232);
    call {:si_unique_call 815} Tmp_363 := __HAVOC_malloc(100);
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    havoc pDevExt_11;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    status_13 := -1073741822;
    pFullResourceDesc := 0;
    pFullTrResourceDesc := 0;
    call {:si_unique_call 816} sdv_do_paged_code_check();
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    Tmp_363 := strConst__li2bpl72;
    call {:si_unique_call 817} vslice_dummy_var_200 := CyyDbgPrintEx(11, Tmp_363);
    Tmp_358 := strConst__li2bpl73;
    call {:si_unique_call 818} vslice_dummy_var_201 := CyyDbgPrintEx(12, Tmp_358);
    Tmp_336 := strConst__li2bpl74;
    call {:si_unique_call 819} vslice_dummy_var_202 := CyyDbgPrintEx(12, Tmp_336);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} PResList != 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} PTrResList != 0;
    assume {:nonnull} PResList != 0;
    assume PResList > 0;
    havoc Tmp_325;
    pFullResourceDesc := Tmp_325;
    assume {:nonnull} PTrResList != 0;
    assume PTrResList > 0;
    havoc Tmp_346;
    pFullTrResourceDesc := Tmp_346;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} pFullResourceDesc != 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    pPartialResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullResourceDesc);
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc pPartialResourceDesc;
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    i_1 := 0;
    goto L52;

  L52:
    call {:si_unique_call 820} i_1 := CyyGetPortInfo_loop_L52(i_1, count, pPartialResourceDesc, PConfig_1);
    goto L52_last;

  L52_last:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} count > i_1;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto L62;

  L62:
    i_1 := i_1 + 1;
    goto L62_dummy;

  L62_dummy:
    assume false;
    return;

  anon74_Then:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L62;

  anon60_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L62;

  anon59_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto L62;

  anon78_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto L62;

  anon58_Then:
    assume {:partition} i_1 >= count;
    goto L45;

  L45:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} pFullTrResourceDesc != 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    pPartialTrResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullTrResourceDesc);
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc pPartialTrResourceDesc;
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    i_1 := 0;
    goto L79;

  L79:
    call {:si_unique_call 821} i_1 := CyyGetPortInfo_loop_L79(i_1, count, pPartialTrResourceDesc, PConfig_1);
    goto L79_last;

  L79_last:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} count > i_1;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L88;

  L88:
    i_1 := i_1 + 1;
    goto L88_dummy;

  L88_dummy:
    assume false;
    return;

  anon75_Then:
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L88;

  anon63_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L88;

  anon62_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L88;

  anon61_Then:
    assume {:partition} i_1 >= count;
    goto L72;

  L72:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] := 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Mem_T.INT4[RxFIFO__CONFIG_DATA(PConfig_1)] := Mem_T.INT4[RxFIFODefault__CYY_REGISTRY_DATA(driverDefaults)];
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Mem_T.INT4[TxFIFO__CONFIG_DATA(PConfig_1)] := Mem_T.INT4[TxFIFODefault__CYY_REGISTRY_DATA(driverDefaults)];
    call {:si_unique_call 822} status_13 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_13 >= 0;
    Tmp_353 := strConst__li2bpl8;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 823} status_13 := CyyGetRegistryKeyValue(keyHandle, Tmp_353, 14, RxFIFO__CONFIG_DATA(PConfig_1), 4);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    Tmp_322 := strConst__li2bpl9;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 824} status_13 := CyyGetRegistryKeyValue(keyHandle, Tmp_322, 14, TxFIFO__CONFIG_DATA(PConfig_1), 4);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    Tmp_337 := strConst__li2bpl76;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 825} status_13 := CyyGetRegistryKeyValue(keyHandle, Tmp_337, 20, PortIndex__CONFIG_DATA(PConfig_1), 4);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_13 >= 0;
    goto L118;

  L118:
    call {:si_unique_call 826} vslice_dummy_var_198 := ZwClose(0);
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L123;

  L123:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] >= 32;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc Tmp_339;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    assume {:nonnull} Tmp_338 != 0;
    assume Tmp_338 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_1209;
    havoc vslice_dummy_var_1210;
    havoc vslice_dummy_var_1211;
    call {:si_unique_call 827} CyyLogError(vslice_dummy_var_1209, 0, vslice_dummy_var_1210, Tmp_338, 0, 0, 0, Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)], 0, -1073475563, Tmp_339, vslice_dummy_var_1211, 0, 0);
    Tmp_344 := strConst__li2bpl77;
    call {:si_unique_call 828} vslice_dummy_var_203 := CyyDbgPrintEx(14, Tmp_344);
    status_13 := -1073741670;
    goto L139;

  L139:
    Tmp_320 := status_13;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon70_Then:
    assume {:partition} 32 > Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)];
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc Tmp_350;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_347 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} Tmp_352 != 0;
    assume Tmp_352 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_1212;
    havoc vslice_dummy_var_1213;
    havoc vslice_dummy_var_1214;
    call {:si_unique_call 829} CyyLogError(vslice_dummy_var_1212, 0, vslice_dummy_var_1213, Tmp_352, 0, 0, 0, Tmp_347, 0, -1073475562, Tmp_350, vslice_dummy_var_1214, 0, 0);
    Tmp_361 := strConst__li2bpl78;
    call {:si_unique_call 830} vslice_dummy_var_204 := CyyDbgPrintEx(14, Tmp_361);
    status_13 := -1073741670;
    goto L139;

  anon72_Then:
    call {:si_unique_call 831} vslice_dummy_var_199 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant236, 0);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} foundIt == 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc Tmp_324;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_342 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_351 != 0;
    assume Tmp_351 > 0;
    assume {:nonnull} Tmp_351 != 0;
    assume Tmp_351 > 0;
    assume {:nonnull} Tmp_351 != 0;
    assume Tmp_351 > 0;
    assume {:nonnull} Tmp_351 != 0;
    assume Tmp_351 > 0;
    assume {:nonnull} Tmp_351 != 0;
    assume Tmp_351 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_1215;
    havoc vslice_dummy_var_1216;
    havoc vslice_dummy_var_1217;
    call {:si_unique_call 832} CyyLogError(vslice_dummy_var_1215, 0, vslice_dummy_var_1216, Tmp_351, 0, 0, 0, Tmp_342, 0, -1073475561, Tmp_324, vslice_dummy_var_1217, 0, 0);
    Tmp_362 := strConst__li2bpl79;
    call {:si_unique_call 833} vslice_dummy_var_215 := CyyDbgPrintEx(14, Tmp_362);
    status_13 := -1073741670;
    goto L139;

  anon73_Then:
    assume {:partition} foundIt != 0;
    goto L140;

  L140:
    status_13 := 0;
    Tmp_333 := strConst__li2bpl92;
    call {:si_unique_call 834} vslice_dummy_var_205 := CyyDbgPrintEx(4, Tmp_333);
    Tmp_349 := strConst__li2bpl80;
    call {:si_unique_call 835} vslice_dummy_var_206 := CyyDbgPrintEx(4, Tmp_349);
    Tmp_335 := strConst__li2bpl81;
    call {:si_unique_call 836} vslice_dummy_var_207 := CyyDbgPrintEx(4, Tmp_335);
    Tmp_343 := strConst__li2bpl82;
    call {:si_unique_call 837} vslice_dummy_var_208 := CyyDbgPrintEx(4, Tmp_343);
    Tmp_328 := strConst__li2bpl83;
    call {:si_unique_call 838} vslice_dummy_var_209 := CyyDbgPrintEx(4, Tmp_328);
    Tmp_355 := strConst__li2bpl84;
    call {:si_unique_call 839} vslice_dummy_var_210 := CyyDbgPrintEx(4, Tmp_355);
    Tmp_330 := strConst__li2bpl85;
    call {:si_unique_call 840} vslice_dummy_var_211 := CyyDbgPrintEx(4, Tmp_330);
    Tmp_356 := strConst__li2bpl86;
    call {:si_unique_call 841} vslice_dummy_var_212 := CyyDbgPrintEx(4, Tmp_356);
    Tmp_340 := strConst__li2bpl87;
    call {:si_unique_call 842} vslice_dummy_var_213 := CyyDbgPrintEx(4, Tmp_340);
    Tmp_321 := strConst__li2bpl88;
    call {:si_unique_call 843} vslice_dummy_var_214 := CyyDbgPrintEx(4, Tmp_321);
    goto L139;

  anon71_Then:
    goto L140;

  anon69_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc Tmp_327;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_345 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} Tmp_326 != 0;
    assume Tmp_326 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_1218;
    havoc vslice_dummy_var_1219;
    havoc vslice_dummy_var_1220;
    call {:si_unique_call 844} CyyLogError(vslice_dummy_var_1218, 0, vslice_dummy_var_1219, Tmp_326, 0, 0, 0, Tmp_345, 0, -1073475566, Tmp_327, vslice_dummy_var_1220, 0, 0);
    Tmp_348 := strConst__li2bpl89;
    call {:si_unique_call 845} vslice_dummy_var_216 := CyyDbgPrintEx(14, Tmp_348);
    status_13 := -1073741670;
    goto L139;

  anon68_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc Tmp_329;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_331 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    assume {:nonnull} Tmp_360 != 0;
    assume Tmp_360 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_1221;
    havoc vslice_dummy_var_1222;
    havoc vslice_dummy_var_1223;
    call {:si_unique_call 846} CyyLogError(vslice_dummy_var_1221, 0, vslice_dummy_var_1222, Tmp_360, 0, 0, 0, Tmp_331, 0, -1073475567, Tmp_329, vslice_dummy_var_1223, 0, 0);
    Tmp_323 := strConst__li2bpl90;
    call {:si_unique_call 847} vslice_dummy_var_217 := CyyDbgPrintEx(14, Tmp_323);
    status_13 := -1073741670;
    goto L139;

  anon66_Then:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc Tmp_332;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Tmp_334 := Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] + 1;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_1224;
    havoc vslice_dummy_var_1225;
    havoc vslice_dummy_var_1226;
    call {:si_unique_call 848} CyyLogError(vslice_dummy_var_1224, 0, vslice_dummy_var_1225, Tmp_341, 0, 0, 0, Tmp_334, 0, -1073475568, Tmp_332, vslice_dummy_var_1226, 0, 0);
    Tmp_357 := strConst__li2bpl91;
    call {:si_unique_call 849} vslice_dummy_var_218 := CyyDbgPrintEx(14, Tmp_357);
    status_13 := -1073741670;
    goto L139;

  anon67_Then:
    goto L123;

  anon65_Then:
    assume {:partition} 0 > status_13;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    Mem_T.INT4[PortIndex__CONFIG_DATA(PConfig_1)] := -1;
    goto L118;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    assume {:partition} 0 > status_13;
    Tmp_359 := strConst__li2bpl75;
    call {:si_unique_call 850} vslice_dummy_var_219 := CyyDbgPrintEx(14, Tmp_359);
    goto L139;

  anon57_Then:
    assume {:partition} pFullTrResourceDesc == 0;
    goto L72;

  anon77_Then:
    assume {:partition} pFullResourceDesc == 0;
    goto L45;

  anon56_Then:
    assume {:partition} PTrResList == 0;
    goto L40;

  L40:
    Tmp_320 := -1073741670;
    goto L1;

  anon55_Then:
    assume {:partition} PResList == 0;
    goto L40;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyDoExternalNaming"} CyyDoExternalNaming(actual_PDevExt_4: int, actual_PDrvObj: int) returns (Tmp_364: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyDoExternalNaming"} CyyDoExternalNaming(actual_PDevExt_4: int, actual_PDrvObj: int) returns (Tmp_364: int)
{
  var {:pointer} Tmp_365: int;
  var {:scalar} Tmp_366: int;
  var {:pointer} Tmp_367: int;
  var {:scalar} Tmp_368: int;
  var {:scalar} Tmp_369: int;
  var {:scalar} bufLen: int;
  var {:scalar} Tmp_371: int;
  var {:pointer} Tmp_373: int;
  var {:scalar} Tmp_375: int;
  var {:scalar} linkName: int;
  var {:scalar} Tmp_377: int;
  var {:pointer} keyHandle_1: int;
  var {:pointer} Tmp_379: int;
  var {:scalar} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} Tmp_385: int;
  var {:scalar} Tmp_386: int;
  var {:pointer} sdv_335: int;
  var {:pointer} pRegName: int;
  var {:pointer} Tmp_388: int;
  var {:pointer} Tmp_389: int;
  var {:scalar} Tmp_392: int;
  var {:pointer} Tmp_393: int;
  var {:scalar} Tmp_394: int;
  var {:scalar} Tmp_395: int;
  var {:scalar} sdv_339: int;
  var {:scalar} Tmp_396: int;
  var {:scalar} Tmp_397: int;
  var {:pointer} Tmp_398: int;
  var {:scalar} Tmp_399: int;
  var {:scalar} Tmp_400: int;
  var {:scalar} Tmp_401: int;
  var {:scalar} Tmp_402: int;
  var {:pointer} sdv_346: int;
  var {:pointer} sdv_347: int;
  var {:scalar} Tmp_404: int;
  var {:pointer} Tmp_406: int;
  var {:scalar} Tmp_407: int;
  var {:pointer} Tmp_408: int;
  var {:pointer} Tmp_409: int;
  var {:scalar} Tmp_410: int;
  var {:scalar} Tmp_411: int;
  var {:pointer} Tmp_412: int;
  var {:pointer} Tmp_413: int;
  var {:scalar} status_14: int;
  var {:pointer} sdv_356: int;
  var {:pointer} pDevObj: int;
  var {:scalar} Tmp_415: int;
  var {:scalar} Tmp_416: int;
  var {:pointer} sdv_358: int;
  var {:pointer} PDevExt_4: int;
  var {:pointer} PDrvObj: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_1227: int;
  var vslice_dummy_var_1228: int;

  anon0:
    call {:si_unique_call 851} linkName := __HAVOC_malloc(12);
    call {:si_unique_call 852} Tmp_377 := __HAVOC_malloc(20);
    call {:si_unique_call 853} Tmp_381 := __HAVOC_malloc(20);
    call {:si_unique_call 854} Tmp_382 := __HAVOC_malloc(20);
    call {:si_unique_call 855} Tmp_386 := __HAVOC_malloc(20);
    call {:si_unique_call 856} Tmp_392 := __HAVOC_malloc(20);
    call {:si_unique_call 857} Tmp_394 := __HAVOC_malloc(20);
    call {:si_unique_call 858} Tmp_395 := __HAVOC_malloc(20);
    call {:si_unique_call 859} Tmp_397 := __HAVOC_malloc(20);
    call {:si_unique_call 860} Tmp_399 := __HAVOC_malloc(20);
    call {:si_unique_call 861} Tmp_400 := __HAVOC_malloc(20);
    call {:si_unique_call 862} Tmp_401 := __HAVOC_malloc(20);
    call {:si_unique_call 863} Tmp_402 := __HAVOC_malloc(20);
    call {:si_unique_call 864} Tmp_411 := __HAVOC_malloc(20);
    call {:si_unique_call 865} Tmp_416 := __HAVOC_malloc(20);
    PDevExt_4 := actual_PDevExt_4;
    PDrvObj := actual_PDrvObj;
    call {:si_unique_call 866} Tmp_365 := __HAVOC_malloc(148);
    call {:si_unique_call 867} vslice_dummy_var_228 := __HAVOC_malloc(44);
    call {:si_unique_call 868} Tmp_373 := __HAVOC_malloc(156);
    call {:si_unique_call 869} vslice_dummy_var_229 := __HAVOC_malloc(44);
    call {:si_unique_call 870} vslice_dummy_var_230 := __HAVOC_malloc(8);
    call {:si_unique_call 871} Tmp_379 := __HAVOC_malloc(196);
    call {:si_unique_call 872} Tmp_383 := __HAVOC_malloc(164);
    call {:si_unique_call 873} Tmp_385 := __HAVOC_malloc(168);
    call {:si_unique_call 874} Tmp_388 := __HAVOC_malloc(192);
    call {:si_unique_call 875} Tmp_389 := __HAVOC_malloc(36);
    call {:si_unique_call 876} vslice_dummy_var_231 := __HAVOC_malloc(44);
    call {:si_unique_call 877} Tmp_393 := __HAVOC_malloc(200);
    call {:si_unique_call 878} Tmp_398 := __HAVOC_malloc(44);
    call {:si_unique_call 879} vslice_dummy_var_232 := __HAVOC_malloc(8);
    call {:si_unique_call 880} Tmp_406 := __HAVOC_malloc(88);
    call {:si_unique_call 881} Tmp_408 := __HAVOC_malloc(156);
    call {:si_unique_call 882} Tmp_409 := __HAVOC_malloc(64);
    call {:si_unique_call 883} Tmp_412 := __HAVOC_malloc(180);
    call {:si_unique_call 884} Tmp_413 := __HAVOC_malloc(236);
    status_14 := 0;
    pRegName := 0;
    call {:si_unique_call 885} sdv_do_paged_code_check();
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc pDevObj;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 886} status_14 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} status_14 != 0;
    Tmp_364 := status_14;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon53_Then:
    assume {:partition} status_14 == 0;
    Tmp_406 := strConst__li2bpl93;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 887} vslice_dummy_var_233 := CyyGetRegistryKeyValue(keyHandle_1, Tmp_406, 44, SkipNaming__CYY_DEVICE_EXTENSION(PDevExt_4), 4);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} Mem_T.INT4[SkipNaming__CYY_DEVICE_EXTENSION(PDevExt_4)] != 0;
    call {:si_unique_call 888} vslice_dummy_var_220 := ZwClose(0);
    Tmp_364 := 0;
    goto L1;

  anon54_Then:
    assume {:partition} Mem_T.INT4[SkipNaming__CYY_DEVICE_EXTENSION(PDevExt_4)] == 0;
    call {:si_unique_call 889} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_396;
    call {:si_unique_call 890} sdv_346 := ExAllocatePoolWithTag(1, Tmp_396, -797345469);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_369;
    call {:si_unique_call 891} sdv_RtlZeroMemory(0, Tmp_369);
    call {:si_unique_call 892} sdv_347 := ExAllocatePoolWithTag(1, 258, -797345469);
    pRegName := sdv_347;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} pRegName != 0;
    Tmp_389 := strConst__li2bpl94;
    call {:si_unique_call 893} status_14 := CyyGetRegistryKeyValue(keyHandle_1, Tmp_389, 18, pRegName, 256);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} yogi_error != 1;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_14 >= 0;
    goto L60;

  L60:
    call {:si_unique_call 894} vslice_dummy_var_221 := ZwClose(0);
    bufLen := sdv_339 * 2 + 2;
    call {:si_unique_call 895} sdv_358 := ExAllocatePoolWithTag(1, bufLen, -797345469);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    call {:si_unique_call 896} sdv_RtlZeroMemory(0, bufLen);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 897} vslice_dummy_var_234 := corral_nondet();
    call {:si_unique_call 898} vslice_dummy_var_235 := corral_nondet();
    call {:si_unique_call 899} vslice_dummy_var_236 := corral_nondet();
    call {:si_unique_call 900} vslice_dummy_var_237 := corral_nondet();
    call {:si_unique_call 901} vslice_dummy_var_222 := corral_nondet();
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_410;
    call {:si_unique_call 902} sdv_356 := ExAllocatePoolWithTag(1, Tmp_410, -797345469);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_375;
    call {:si_unique_call 903} sdv_RtlZeroMemory(0, Tmp_375);
    call {:si_unique_call 904} vslice_dummy_var_223 := corral_nondet();
    call {:si_unique_call 905} sdv_335 := ExAllocatePoolWithTag(1, 66, -797345469);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_415;
    call {:si_unique_call 906} sdv_RtlZeroMemory(0, Tmp_415);
    call {:si_unique_call 907} vslice_dummy_var_224 := corral_nondet();
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_367;
    call {:si_unique_call 908} sdv_RtlZeroMemory(0, 2);
    Tmp_409 := strConst__li2bpl98;
    call {:si_unique_call 909} vslice_dummy_var_238 := CyyDbgPrintEx(4, Tmp_409);
    call {:si_unique_call 910} status_14 := IoCreateSymbolicLink(0, 0);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_404;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 911} status_14 := RtlWriteRegistryValue(4, 0, 0, 1, 0, Tmp_404);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 912} status_14 := IoRegisterDeviceInterface(0, 0, 0, DeviceClassSymbolicName__CYY_DEVICE_EXTENSION(PDevExt_4));
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} status_14 >= 0;
    call {:si_unique_call 913} status_14 := IoSetDeviceInterfaceState(0, 1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_14 >= 0;
    goto L162;

  L162:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} status_14 >= 0;
    goto L164;

  L164:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    call {:si_unique_call 914} sdv_ExFreePool(0);
    goto L165;

  L165:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} pRegName != 0;
    call {:si_unique_call 915} sdv_ExFreePool(0);
    goto L169;

  L169:
    Tmp_364 := status_14;
    goto L1;

  anon63_Then:
    assume {:partition} pRegName == 0;
    goto L169;

  anon62_Then:
    goto L165;

  anon60_Then:
    assume {:partition} 0 > status_14;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 916} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L173;

  L173:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 917} vslice_dummy_var_225 := IoDeleteSymbolicLink(0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L178;

  L178:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 918} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L183;

  L183:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 919} vslice_dummy_var_239 := RtlDeleteRegistryValue(4, 0, 0);
    goto L188;

  L188:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    call {:si_unique_call 920} vslice_dummy_var_226 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 921} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L192;

  L192:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 922} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L164;

  anon68_Then:
    goto L164;

  anon67_Then:
    goto L192;

  anon66_Then:
    goto L188;

  anon65_Then:
    goto L183;

  anon64_Then:
    goto L178;

  anon61_Then:
    goto L173;

  anon59_Then:
    assume {:partition} 0 > status_14;
    Tmp_412 := strConst__li2bpl100;
    call {:si_unique_call 923} vslice_dummy_var_240 := CyyDbgPrintEx(14, Tmp_412);
    goto L162;

  anon58_Then:
    assume {:partition} 0 > status_14;
    Tmp_393 := strConst__li2bpl99;
    call {:si_unique_call 924} vslice_dummy_var_241 := CyyDbgPrintEx(14, Tmp_393);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L162;

  anon57_Then:
    assume {:partition} 0 > status_14;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_407;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_368;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} Tmp_399 != 0;
    assume Tmp_399 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc vslice_dummy_var_1227;
    call {:si_unique_call 925} CyyLogError(PDrvObj, pDevObj, Tmp_399, Tmp_382, 0, 0, 0, Tmp_368, status_14, 266245, Tmp_407, vslice_dummy_var_1227, 0, 0);
    Tmp_413 := strConst__li2bpl102;
    call {:si_unique_call 926} vslice_dummy_var_242 := CyyDbgPrintEx(14, Tmp_413);
    goto L162;

  anon56_Then:
    assume {:partition} 0 > status_14;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_366;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_371;
    assume {:nonnull} Tmp_392 != 0;
    assume Tmp_392 > 0;
    assume {:nonnull} Tmp_392 != 0;
    assume Tmp_392 > 0;
    assume {:nonnull} Tmp_392 != 0;
    assume Tmp_392 > 0;
    assume {:nonnull} Tmp_392 != 0;
    assume Tmp_392 > 0;
    assume {:nonnull} Tmp_392 != 0;
    assume Tmp_392 > 0;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    assume {:nonnull} Tmp_401 != 0;
    assume Tmp_401 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc vslice_dummy_var_1228;
    call {:si_unique_call 927} CyyLogError(PDrvObj, pDevObj, Tmp_401, Tmp_392, 0, 0, 0, Tmp_371, status_14, 266244, Tmp_366, vslice_dummy_var_1228, 0, 0);
    Tmp_388 := strConst__li2bpl103;
    call {:si_unique_call 928} vslice_dummy_var_243 := CyyDbgPrintEx(14, Tmp_388);
    goto L162;

  anon77_Then:
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    assume {:nonnull} Tmp_377 != 0;
    assume Tmp_377 > 0;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    call {:si_unique_call 929} CyyLogError(PDrvObj, pDevObj, Tmp_381, Tmp_377, 0, 0, 0, 75, 0, -1073475576, 0, 0, 0, 0);
    Tmp_408 := strConst__li2bpl104;
    call {:si_unique_call 930} vslice_dummy_var_244 := CyyDbgPrintEx(14, Tmp_408);
    status_14 := -1073741670;
    goto L162;

  anon76_Then:
    assume {:nonnull} Tmp_395 != 0;
    assume Tmp_395 > 0;
    assume {:nonnull} Tmp_395 != 0;
    assume Tmp_395 > 0;
    assume {:nonnull} Tmp_395 != 0;
    assume Tmp_395 > 0;
    assume {:nonnull} Tmp_395 != 0;
    assume Tmp_395 > 0;
    assume {:nonnull} Tmp_395 != 0;
    assume Tmp_395 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    assume {:nonnull} Tmp_400 != 0;
    assume Tmp_400 > 0;
    call {:si_unique_call 931} CyyLogError(PDrvObj, pDevObj, Tmp_400, Tmp_395, 0, 0, 0, 74, 0, -1073475576, 0, 0, 0, 0);
    Tmp_379 := strConst__li2bpl105;
    call {:si_unique_call 932} vslice_dummy_var_245 := CyyDbgPrintEx(14, Tmp_379);
    status_14 := -1073741670;
    goto L162;

  anon75_Then:
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    assume {:nonnull} Tmp_402 != 0;
    assume Tmp_402 > 0;
    call {:si_unique_call 933} CyyLogError(PDrvObj, pDevObj, Tmp_402, Tmp_394, 0, 0, 0, 73, 0, -1073475576, 0, 0, 0, 0);
    Tmp_373 := strConst__li2bpl106;
    call {:si_unique_call 934} vslice_dummy_var_246 := CyyDbgPrintEx(14, Tmp_373);
    status_14 := -1073741670;
    goto L162;

  anon55_Then:
    assume {:partition} 0 > status_14;
    Tmp_398 := strConst__li2bpl95;
    call {:si_unique_call 935} status_14 := CyyGetRegistryKeyValue(keyHandle_1, Tmp_398, 22, pRegName, 256);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} yogi_error != 1;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} status_14 < 0;
    Tmp_383 := strConst__li2bpl107;
    call {:si_unique_call 936} vslice_dummy_var_247 := CyyDbgPrintEx(14, Tmp_383);
    call {:si_unique_call 937} vslice_dummy_var_227 := ZwClose(0);
    goto L162;

  anon69_Then:
    assume {:partition} 0 <= status_14;
    goto L60;

  anon78_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} pRegName == 0;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    assume {:nonnull} Tmp_386 != 0;
    assume Tmp_386 > 0;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    call {:si_unique_call 938} CyyLogError(PDrvObj, pDevObj, Tmp_411, Tmp_386, 0, 0, 0, 72, 0, -1073475576, 0, 0, 0, 0);
    Tmp_365 := strConst__li2bpl108;
    call {:si_unique_call 939} vslice_dummy_var_248 := CyyDbgPrintEx(14, Tmp_365);
    status_14 := -1073741670;
    call {:si_unique_call 940} vslice_dummy_var_249 := ZwClose(0);
    goto L162;

  anon72_Then:
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    assume {:nonnull} Tmp_416 != 0;
    assume Tmp_416 > 0;
    call {:si_unique_call 941} CyyLogError(PDrvObj, pDevObj, Tmp_416, Tmp_397, 0, 0, 0, 71, 0, -1073475576, 0, 0, 0, 0);
    Tmp_385 := strConst__li2bpl109;
    call {:si_unique_call 942} vslice_dummy_var_250 := CyyDbgPrintEx(14, Tmp_385);
    status_14 := -1073741670;
    call {:si_unique_call 943} vslice_dummy_var_251 := ZwClose(0);
    goto L162;

  anon71_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyReportMaxBaudRate"} CyyReportMaxBaudRate(actual_Bauds: int) returns (Tmp_419: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyReportMaxBaudRate"} CyyReportMaxBaudRate(actual_Bauds: int) returns (Tmp_419: int)
{
  var {:scalar} Bauds: int;

  anon0:
    Bauds := actual_Bauds;
    call {:si_unique_call 944} sdv_do_paged_code_check();
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} yogi_error != 1;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} BAND(Bauds, 65536) != 0;
    Tmp_419 := 131072;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon41_Then:
    assume {:partition} BAND(Bauds, 65536) == 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(Bauds, 131072) != 0;
    Tmp_419 := 115200;
    goto L1;

  anon42_Then:
    assume {:partition} BAND(Bauds, 131072) == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(Bauds, 32768) != 0;
    Tmp_419 := 57344;
    goto L1;

  anon43_Then:
    assume {:partition} BAND(Bauds, 32768) == 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(Bauds, 262144) != 0;
    Tmp_419 := 57600;
    goto L1;

  anon44_Then:
    assume {:partition} BAND(Bauds, 262144) == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} BAND(Bauds, 16384) != 0;
    Tmp_419 := 38400;
    goto L1;

  anon45_Then:
    assume {:partition} BAND(Bauds, 16384) == 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(Bauds, 8192) != 0;
    Tmp_419 := 19200;
    goto L1;

  anon46_Then:
    assume {:partition} BAND(Bauds, 8192) == 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Bauds, 4096) != 0;
    Tmp_419 := 14400;
    goto L1;

  anon47_Then:
    assume {:partition} BAND(Bauds, 4096) == 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Bauds, 2048) != 0;
    Tmp_419 := 9600;
    goto L1;

  anon48_Then:
    assume {:partition} BAND(Bauds, 2048) == 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BAND(Bauds, 1024) != 0;
    Tmp_419 := 7200;
    goto L1;

  anon49_Then:
    assume {:partition} BAND(Bauds, 1024) == 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(Bauds, 512) != 0;
    Tmp_419 := 4800;
    goto L1;

  anon50_Then:
    assume {:partition} BAND(Bauds, 512) == 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(Bauds, 256) != 0;
    Tmp_419 := 2400;
    goto L1;

  anon51_Then:
    assume {:partition} BAND(Bauds, 256) == 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} BAND(Bauds, 128) != 0;
    Tmp_419 := 1800;
    goto L1;

  anon52_Then:
    assume {:partition} BAND(Bauds, 128) == 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(Bauds, 64) != 0;
    Tmp_419 := 1200;
    goto L1;

  anon53_Then:
    assume {:partition} BAND(Bauds, 64) == 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} BAND(Bauds, 32) != 0;
    Tmp_419 := 600;
    goto L1;

  anon54_Then:
    assume {:partition} BAND(Bauds, 32) == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(Bauds, 16) != 0;
    Tmp_419 := 300;
    goto L1;

  anon55_Then:
    assume {:partition} BAND(Bauds, 16) == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} BAND(Bauds, 8) != 0;
    Tmp_419 := 150;
    goto L1;

  anon56_Then:
    assume {:partition} BAND(Bauds, 8) == 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(Bauds, 4) != 0;
    Tmp_419 := 135;
    goto L1;

  anon57_Then:
    assume {:partition} BAND(Bauds, 4) == 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} BAND(Bauds, 2) != 0;
    Tmp_419 := 110;
    goto L1;

  anon58_Then:
    assume {:partition} BAND(Bauds, 2) == 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} BAND(Bauds, 1) != 0;
    Tmp_419 := 75;
    goto L1;

  anon59_Then:
    assume {:partition} BAND(Bauds, 1) == 0;
    Tmp_419 := 0;
    goto L1;

  anon60_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyCreateDevObj"} CyyCreateDevObj(actual_DriverObject_2: int, actual_PPdo: int, actual_NewDeviceObject: int) returns (Tmp_421: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCreateDevObj"} CyyCreateDevObj(actual_DriverObject_2: int, actual_PPdo: int, actual_NewDeviceObject: int) returns (Tmp_421: int)
{
  var {:scalar} instanceStr: int;
  var {:scalar} Tmp_422: int;
  var {:pointer} Tmp_423: int;
  var {:scalar} Tmp_424: int;
  var {:pointer} Tmp_426: int;
  var {:scalar} interfaceType: int;
  var {:pointer} Tmp_427: int;
  var {:pointer} Tmp_428: int;
  var {:scalar} Tmp_429: int;
  var {:pointer} deviceObject: int;
  var {:pointer} Tmp_430: int;
  var {:pointer} Tmp_431: int;
  var {:scalar} Tmp_432: int;
  var {:pointer} hwID: int;
  var {:scalar} Tmp_434: int;
  var {:pointer} instanceNumberBuffer: int;
  var {:pointer} Tmp_435: int;
  var {:pointer} pDevExt_12: int;
  var {:scalar} Tmp_436: int;
  var {:scalar} deviceObjName: int;
  var {:scalar} Tmp_438: int;
  var {:scalar} Tmp_439: int;
  var {:scalar} Tmp_440: int;
  var {:pointer} sdv_368: int;
  var {:scalar} Tmp_442: int;
  var {:scalar} Tmp_443: int;
  var {:pointer} Tmp_444: int;
  var {:scalar} Tmp_446: int;
  var {:pointer} sdv_372: int;
  var {:pointer} Tmp_447: int;
  var {:scalar} Tmp_448: int;
  var {:pointer} Tmp_450: int;
  var {:scalar} Tmp_451: int;
  var {:scalar} Tmp_452: int;
  var {:scalar} Tmp_453: int;
  var {:scalar} sdv_379: int;
  var {:scalar} Tmp_454: int;
  var {:scalar} numberToAppend: int;
  var {:pointer} Tmp_455: int;
  var {:scalar} Tmp_456: int;
  var {:pointer} Tmp_457: int;
  var {:pointer} sdv_385: int;
  var {:scalar} status_15: int;
  var {:pointer} Tmp_458: int;
  var {:scalar} Tmp_459: int;
  var {:scalar} resultLength: int;
  var {:scalar} busNumber: int;
  var {:pointer} Tmp_460: int;
  var {:pointer} Tmp_461: int;
  var {:scalar} Tmp_462: int;
  var {:pointer} DriverObject_2: int;
  var {:pointer} NewDeviceObject: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_1229: int;
  var vslice_dummy_var_1230: int;

  anon0:
    call {:si_unique_call 945} instanceStr := __HAVOC_malloc(12);
    call {:si_unique_call 946} Tmp_422 := __HAVOC_malloc(20);
    call {:si_unique_call 947} Tmp_424 := __HAVOC_malloc(20);
    call {:si_unique_call 948} Tmp_429 := __HAVOC_malloc(20);
    call {:si_unique_call 949} deviceObject := __HAVOC_malloc(4);
    call {:si_unique_call 950} Tmp_432 := __HAVOC_malloc(20);
    call {:si_unique_call 951} Tmp_436 := __HAVOC_malloc(20);
    call {:si_unique_call 952} deviceObjName := __HAVOC_malloc(12);
    call {:si_unique_call 953} Tmp_438 := __HAVOC_malloc(20);
    call {:si_unique_call 954} Tmp_439 := __HAVOC_malloc(20);
    call {:si_unique_call 955} Tmp_440 := __HAVOC_malloc(20);
    call {:si_unique_call 956} Tmp_442 := __HAVOC_malloc(20);
    call {:si_unique_call 957} Tmp_448 := __HAVOC_malloc(20);
    call {:si_unique_call 958} Tmp_451 := __HAVOC_malloc(20);
    call {:si_unique_call 959} Tmp_454 := __HAVOC_malloc(20);
    call {:si_unique_call 960} Tmp_456 := __HAVOC_malloc(20);
    call {:si_unique_call 961} Tmp_459 := __HAVOC_malloc(20);
    DriverObject_2 := actual_DriverObject_2;
    NewDeviceObject := actual_NewDeviceObject;
    call {:si_unique_call 962} Tmp_423 := __HAVOC_malloc(92);
    call {:si_unique_call 963} Tmp_426 := __HAVOC_malloc(92);
    call {:si_unique_call 964} Tmp_427 := __HAVOC_malloc(92);
    call {:si_unique_call 965} Tmp_428 := __HAVOC_malloc(256);
    call {:si_unique_call 966} Tmp_430 := __HAVOC_malloc(56);
    call {:si_unique_call 967} Tmp_431 := __HAVOC_malloc(144);
    call {:si_unique_call 968} vslice_dummy_var_256 := __HAVOC_malloc(32);
    call {:si_unique_call 969} hwID := __HAVOC_malloc(400);
    call {:si_unique_call 970} instanceNumberBuffer := __HAVOC_malloc(80);
    call {:si_unique_call 971} Tmp_435 := __HAVOC_malloc(196);
    call {:si_unique_call 972} vslice_dummy_var_257 := __HAVOC_malloc(36);
    call {:si_unique_call 973} Tmp_444 := __HAVOC_malloc(164);
    call {:si_unique_call 974} vslice_dummy_var_258 := __HAVOC_malloc(32);
    call {:si_unique_call 975} Tmp_447 := __HAVOC_malloc(244);
    call {:si_unique_call 976} vslice_dummy_var_259 := __HAVOC_malloc(16);
    call {:si_unique_call 977} Tmp_450 := __HAVOC_malloc(400);
    call {:si_unique_call 978} Tmp_455 := __HAVOC_malloc(152);
    call {:si_unique_call 979} Tmp_457 := __HAVOC_malloc(168);
    call {:si_unique_call 980} Tmp_458 := __HAVOC_malloc(168);
    call {:si_unique_call 981} Tmp_460 := __HAVOC_malloc(240);
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    status_15 := 0;
    busNumber := -1;
    call {:si_unique_call 982} sdv_do_paged_code_check();
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} yogi_error != 1;
    Tmp_427 := strConst__li2bpl110;
    call {:si_unique_call 983} vslice_dummy_var_260 := CyyDbgPrintEx(11, Tmp_427);
    call {:si_unique_call 984} Tmp_461 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    Mem_T.INT4[Tmp_461] := resultLength;
    call {:si_unique_call 985} status_15 := IoGetDeviceProperty(0, 13, 4, 0, Tmp_461);
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    resultLength := Mem_T.INT4[Tmp_461];
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} status_15 >= 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} interfaceType == 5;
    call {:si_unique_call 986} Tmp_461 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    Mem_T.INT4[Tmp_461] := resultLength;
    call {:si_unique_call 987} status_15 := IoGetDeviceProperty(0, 14, 4, 0, Tmp_461);
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    resultLength := Mem_T.INT4[Tmp_461];
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_15 >= 0;
    call {:si_unique_call 988} Tmp_461 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    Mem_T.INT4[Tmp_461] := resultLength;
    call {:si_unique_call 989} status_15 := IoGetDeviceProperty(0, 16385, 200, 0, Tmp_461);
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    resultLength := Mem_T.INT4[Tmp_461];
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} status_15 >= 0;
    Tmp_430 := strConst__li2bpl111;
    call {:si_unique_call 990} sdv_379 := CyyCompareString(hwID, Tmp_430, 13);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_379 != 0;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    assume {:nonnull} Tmp_424 != 0;
    assume Tmp_424 > 0;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    assume {:nonnull} Tmp_454 != 0;
    assume Tmp_454 > 0;
    call {:si_unique_call 991} CyyLogError(DriverObject_2, 0, Tmp_454, Tmp_424, 0, 0, 0, 0, status_15, -1073475531, 0, 0, 0, 0);
    Tmp_450 := hwID;
    Tmp_455 := strConst__li2bpl122;
    call {:si_unique_call 992} vslice_dummy_var_261 := CyyDbgPrintEx(14, Tmp_455);
    Tmp_421 := -1073741823;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon39_Then:
    assume {:partition} sdv_379 == 0;
    goto L34;

  L34:
    call {:si_unique_call 993} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_462;
    call {:si_unique_call 994} sdv_372 := ExAllocatePoolWithTag(1, Tmp_462, -797345469);
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_452;
    call {:si_unique_call 995} sdv_RtlZeroMemory(0, Tmp_452);
    call {:si_unique_call 996} vslice_dummy_var_262 := corral_nondet();
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} busNumber == -1;
    havoc Tmp_443;
    numberToAppend := Tmp_443;
    goto L94;

  L94:
    call {:si_unique_call 997} RtlInitUnicodeString(instanceStr, 0);
    assume {:nonnull} instanceStr != 0;
    assume instanceStr > 0;
    assume {:nonnull} instanceStr != 0;
    assume instanceStr > 0;
    call {:si_unique_call 998} vslice_dummy_var_263 := RtlIntegerToUnicodeString(numberToAppend, 10, 0);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} busNumber == -1;
    call {:si_unique_call 999} vslice_dummy_var_264 := corral_nondet();
    call {:si_unique_call 1000} vslice_dummy_var_252 := corral_nondet();
    goto L112;

  L112:
    call {:si_unique_call 1001} status_15 := IoCreateDevice(0, 1648, 0, 27, 256, 1, deviceObject);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_15 >= 0;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    havoc pDevExt_12;
    call {:si_unique_call 1002} sdv_RtlZeroMemory(0, 1648);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_453;
    call {:si_unique_call 1003} sdv_385 := ExAllocatePoolWithTag(1, Tmp_453, -797345469);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_446;
    call {:si_unique_call 1004} sdv_RtlZeroMemory(0, Tmp_446);
    call {:si_unique_call 1005} vslice_dummy_var_253 := corral_nondet();
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_434;
    call {:si_unique_call 1006} sdv_368 := ExAllocatePoolWithTag(1, Tmp_434, -797345469);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1007} vslice_dummy_var_265 := corral_nondet();
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} interfaceType == 5;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto L157;

  L157:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1008} InitializeListHead(AllDevObjs__CYY_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1009} InitializeListHead(ReadQueue__CYY_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1010} InitializeListHead(WriteQueue__CYY_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1011} InitializeListHead(MaskQueue__CYY_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1012} InitializeListHead(PurgeQueue__CYY_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1013} InitializeListHead(StalledIrpQueue__CYY_DEVICE_EXTENSION(pDevExt_12));
    call {:si_unique_call 1014} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 1015} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 1016} Tmp_461 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_1229;
    Mem_T.INT4[Tmp_461] := vslice_dummy_var_1229;
    call {:si_unique_call 1017} sdv_KeInitializeSpinLock(Tmp_461);
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1018} Tmp_461 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc vslice_dummy_var_1230;
    Mem_T.INT4[Tmp_461] := vslice_dummy_var_1230;
    call {:si_unique_call 1019} sdv_KeInitializeSpinLock(Tmp_461);
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1020} KeInitializeEvent(PendingIRPEvent__CYY_DEVICE_EXTENSION(pDevExt_12), 1, 0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1021} KeInitializeEvent(PendingDpcEvent__CYY_DEVICE_EXTENSION(pDevExt_12), 1, 0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1022} KeInitializeEvent(PowerD0Event__CYY_DEVICE_EXTENSION(pDevExt_12), 1, 0);
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    assume {:nonnull} NewDeviceObject != 0;
    assume NewDeviceObject > 0;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    call {:si_unique_call 1023} sdv_ExFreePool(0);
    Tmp_423 := strConst__li2bpl116;
    call {:si_unique_call 1024} vslice_dummy_var_266 := CyyDbgPrintEx(11, Tmp_423);
    Tmp_421 := 0;
    goto L1;

  anon51_Then:
    assume {:partition} interfaceType != 5;
    goto L157;

  anon50_Then:
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} Tmp_451 != 0;
    assume Tmp_451 > 0;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    assume {:nonnull} Tmp_429 != 0;
    assume Tmp_429 > 0;
    call {:si_unique_call 1025} CyyLogError(DriverObject_2, 0, Tmp_429, Tmp_451, 0, 0, 0, 13, 0, -1073475576, 0, 0, 0, 0);
    Tmp_435 := strConst__li2bpl117;
    call {:si_unique_call 1026} vslice_dummy_var_267 := CyyDbgPrintEx(14, Tmp_435);
    status_15 := -1073741670;
    goto L216;

  L216:
    Tmp_431 := strConst__li2bpl118;
    call {:si_unique_call 1027} vslice_dummy_var_268 := CyyDbgPrintEx(14, Tmp_431);
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    call {:si_unique_call 1028} sdv_ExFreePool(0);
    goto L220;

  L220:
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1029} sdv_ExFreePool(0);
    goto L226;

  L226:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1030} sdv_ExFreePool(0);
    goto L230;

  L230:
    call {:si_unique_call 1031} IoDeleteDevice(0);
    goto L224;

  L224:
    assume {:nonnull} NewDeviceObject != 0;
    assume NewDeviceObject > 0;
    Tmp_426 := strConst__li2bpl116;
    call {:si_unique_call 1032} vslice_dummy_var_269 := CyyDbgPrintEx(11, Tmp_426);
    Tmp_421 := status_15;
    goto L1;

  anon46_Then:
    goto L230;

  anon45_Then:
    goto L226;

  anon44_Then:
    goto L224;

  anon43_Then:
    goto L220;

  anon49_Then:
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    assume {:nonnull} Tmp_432 != 0;
    assume Tmp_432 > 0;
    call {:si_unique_call 1033} CyyLogError(DriverObject_2, 0, Tmp_432, Tmp_442, 0, 0, 0, 12, 0, -1073475576, 0, 0, 0, 0);
    Tmp_444 := strConst__li2bpl119;
    call {:si_unique_call 1034} vslice_dummy_var_270 := CyyDbgPrintEx(14, Tmp_444);
    status_15 := -1073741670;
    goto L216;

  anon42_Then:
    assume {:partition} 0 > status_15;
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    assume {:nonnull} Tmp_436 != 0;
    assume Tmp_436 > 0;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    assume {:nonnull} Tmp_440 != 0;
    assume Tmp_440 > 0;
    call {:si_unique_call 1035} CyyLogError(DriverObject_2, 0, Tmp_440, Tmp_436, 0, 0, 0, 0, 0, -1073475533, 0, 0, 0, 0);
    Tmp_457 := strConst__li2bpl120;
    call {:si_unique_call 1036} vslice_dummy_var_271 := CyyDbgPrintEx(14, Tmp_457);
    goto L216;

  anon41_Then:
    assume {:partition} busNumber != -1;
    call {:si_unique_call 1037} vslice_dummy_var_272 := corral_nondet();
    call {:si_unique_call 1038} vslice_dummy_var_254 := corral_nondet();
    call {:si_unique_call 1039} vslice_dummy_var_273 := corral_nondet();
    call {:si_unique_call 1040} vslice_dummy_var_255 := corral_nondet();
    goto L112;

  anon40_Then:
    assume {:partition} busNumber != -1;
    numberToAppend := busNumber;
    goto L94;

  anon48_Then:
    assume {:nonnull} Tmp_459 != 0;
    assume Tmp_459 > 0;
    assume {:nonnull} Tmp_459 != 0;
    assume Tmp_459 > 0;
    assume {:nonnull} Tmp_459 != 0;
    assume Tmp_459 > 0;
    assume {:nonnull} Tmp_459 != 0;
    assume Tmp_459 > 0;
    assume {:nonnull} Tmp_459 != 0;
    assume Tmp_459 > 0;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    assume {:nonnull} Tmp_448 != 0;
    assume Tmp_448 > 0;
    call {:si_unique_call 1041} CyyLogError(DriverObject_2, 0, Tmp_448, Tmp_459, 0, 0, 0, 11, 0, -1073475576, 0, 0, 0, 0);
    Tmp_458 := strConst__li2bpl109;
    call {:si_unique_call 1042} vslice_dummy_var_274 := CyyDbgPrintEx(14, Tmp_458);
    Tmp_421 := -1073741670;
    goto L1;

  anon38_Then:
    assume {:partition} 0 > status_15;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    call {:si_unique_call 1043} CyyLogError(DriverObject_2, 0, Tmp_439, Tmp_422, 0, 0, 0, 0, status_15, -1073475581, 0, 0, 0, 0);
    Tmp_447 := strConst__li2bpl112;
    call {:si_unique_call 1044} vslice_dummy_var_275 := CyyDbgPrintEx(14, Tmp_447);
    Tmp_421 := status_15;
    goto L1;

  anon37_Then:
    assume {:partition} 0 > status_15;
    busNumber := -1;
    Tmp_460 := strConst__li2bpl123;
    call {:si_unique_call 1045} vslice_dummy_var_276 := CyyDbgPrintEx(14, Tmp_460);
    goto L34;

  anon36_Then:
    assume {:partition} interfaceType != 5;
    goto L34;

  anon35_Then:
    assume {:partition} 0 > status_15;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} Tmp_456 != 0;
    assume Tmp_456 > 0;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    assume {:nonnull} Tmp_438 != 0;
    assume Tmp_438 > 0;
    call {:si_unique_call 1046} CyyLogError(DriverObject_2, 0, Tmp_438, Tmp_456, 0, 0, 0, 0, status_15, -1073475583, 0, 0, 0, 0);
    Tmp_428 := strConst__li2bpl121;
    call {:si_unique_call 1047} vslice_dummy_var_277 := CyyDbgPrintEx(14, Tmp_428);
    Tmp_421 := status_15;
    goto L1;

  anon47_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyUndoExternalNaming"} CyyUndoExternalNaming(actual_Extension_8: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyUndoExternalNaming"} CyyUndoExternalNaming(actual_Extension_8: int)
{
  var {:pointer} Tmp_463: int;
  var {:pointer} keyHandle_2: int;
  var {:pointer} pRegName_1: int;
  var {:scalar} Tmp_465: int;
  var {:scalar} symLinkName: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} Tmp_470: int;
  var {:scalar} status_16: int;
  var {:scalar} Tmp_472: int;
  var {:scalar} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:pointer} Extension_8: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_1231: int;
  var vslice_dummy_var_1232: int;
  var vslice_dummy_var_1233: int;
  var vslice_dummy_var_1234: int;

  anon0:
    call {:si_unique_call 1048} vslice_dummy_var_278 := __HAVOC_malloc(4);
    call {:si_unique_call 1049} pRegName_1 := __HAVOC_malloc(4);
    call {:si_unique_call 1050} symLinkName := __HAVOC_malloc(12);
    call {:si_unique_call 1051} Tmp_472 := __HAVOC_malloc(20);
    Extension_8 := actual_Extension_8;
    call {:si_unique_call 1052} Tmp_463 := __HAVOC_malloc(76);
    call {:si_unique_call 1053} Tmp_469 := __HAVOC_malloc(132);
    call {:si_unique_call 1054} vslice_dummy_var_281 := __HAVOC_malloc(44);
    call {:si_unique_call 1055} Tmp_474 := __HAVOC_malloc(224);
    call {:si_unique_call 1056} sdv_do_paged_code_check();
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} yogi_error != 1;
    Tmp_474 := strConst__li2bpl124;
    call {:si_unique_call 1057} vslice_dummy_var_282 := CyyDbgPrintEx(6, Tmp_474);
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} Mem_T.INT4[SkipNaming__CYY_DEVICE_EXTENSION(Extension_8)] == 0;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 1058} status_16 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    call {:si_unique_call 1059} sdv_ExFreePool(0);
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    goto L17;

  L17:
    call {:si_unique_call 1060} status_16 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_16 == 0;
    call {:si_unique_call 1061} RtlInitUnicodeString(symLinkName, 0);
    call {:si_unique_call 1062} status_16 := CyyReadSymName(Extension_8, keyHandle_2, symLinkName, pRegName_1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} yogi_error != 1;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_16 != 0;
    goto L43;

  L43:
    call {:si_unique_call 1063} vslice_dummy_var_279 := ZwClose(0);
    goto L14;

  L14:
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    call {:si_unique_call 1064} sdv_ExFreePool(0);
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    call {:si_unique_call 1065} status_16 := RtlDeleteRegistryValue(4, 0, 0);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_16 < 0;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    havoc Tmp_465;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    havoc Tmp_473;
    assume {:nonnull} Tmp_472 != 0;
    assume Tmp_472 > 0;
    assume {:nonnull} Tmp_472 != 0;
    assume Tmp_472 > 0;
    assume {:nonnull} Tmp_472 != 0;
    assume Tmp_472 > 0;
    assume {:nonnull} Tmp_472 != 0;
    assume Tmp_472 > 0;
    assume {:nonnull} Tmp_472 != 0;
    assume Tmp_472 > 0;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    havoc Tmp_470;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    assume {:nonnull} Tmp_470 != 0;
    assume Tmp_470 > 0;
    havoc vslice_dummy_var_1231;
    havoc vslice_dummy_var_1232;
    havoc vslice_dummy_var_1233;
    havoc vslice_dummy_var_1234;
    call {:si_unique_call 1066} CyyLogError(vslice_dummy_var_1231, vslice_dummy_var_1232, vslice_dummy_var_1233, Tmp_472, 0, 0, 0, Tmp_473, status_16, 266246, Tmp_465, vslice_dummy_var_1234, 0, 0);
    Tmp_469 := strConst__li2bpl126;
    call {:si_unique_call 1067} vslice_dummy_var_283 := CyyDbgPrintEx(14, Tmp_469);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon34_Then:
    assume {:partition} 0 <= status_16;
    goto L1;

  anon33_Then:
    goto L1;

  anon32_Then:
    goto L1;

  anon27_Then:
    goto L55;

  anon31_Then:
    assume {:partition} status_16 == 0;
    Tmp_463 := strConst__li2bpl125;
    call {:si_unique_call 1068} vslice_dummy_var_284 := CyyDbgPrintEx(4, Tmp_463);
    call {:si_unique_call 1069} vslice_dummy_var_280 := IoDeleteSymbolicLink(0);
    call {:si_unique_call 1070} sdv_ExFreePool(0);
    call {:si_unique_call 1071} sdv_ExFreePool(0);
    goto L43;

  anon36_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon30_Then:
    assume {:partition} status_16 != 0;
    goto L14;

  anon29_Then:
    goto L17;

  anon28_Then:
    goto L14;

  anon26_Then:
    goto L14;

  anon25_Then:
    assume {:partition} Mem_T.INT4[SkipNaming__CYY_DEVICE_EXTENSION(Extension_8)] != 0;
    goto L1;

  anon35_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyySyncCompletion"} CyySyncCompletion(actual_DeviceObject_8: int, actual_Irp_8: int, actual_CyySyncEvent: int) returns (Tmp_476: int);
  free ensures {:va_keep} Tmp_476 == -1073741802;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyySyncCompletion"} CyySyncCompletion(actual_DeviceObject_8: int, actual_Irp_8: int, actual_CyySyncEvent: int) returns (Tmp_476: int)
{
  var {:pointer} CyySyncEvent_1: int;
  var {:pointer} CyySyncEvent: int;
  var vslice_dummy_var_285: int;

  anon0:
    CyySyncEvent := actual_CyySyncEvent;
    CyySyncEvent_1 := CyySyncEvent;
    call {:si_unique_call 1072} vslice_dummy_var_285 := KeSetEvent(CyySyncEvent_1, 0, 0);
    Tmp_476 := -1073741802;
    return;
}



procedure {:origName "CyyReadSymName"} CyyReadSymName(actual_PDevExt_5: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_478: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyReadSymName"} CyyReadSymName(actual_PDevExt_5: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_478: int)
{
  var {:scalar} Tmp_480: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} Tmp_482: int;
  var {:scalar} linkName_1: int;
  var {:scalar} Tmp_483: int;
  var {:scalar} Tmp_484: int;
  var {:pointer} Tmp_485: int;
  var {:pointer} sdv_402: int;
  var {:pointer} Tmp_487: int;
  var {:pointer} sdv_404: int;
  var {:scalar} Tmp_488: int;
  var {:pointer} sdv_406: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} Tmp_490: int;
  var {:scalar} Tmp_491: int;
  var {:scalar} status_17: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} pDevObj_1: int;
  var {:pointer} pDrvObj: int;
  var {:scalar} Tmp_495: int;
  var {:scalar} Tmp_496: int;
  var {:pointer} PDevExt_5: int;
  var {:pointer} hRegKey: int;
  var {:pointer} PSymName: int;
  var {:pointer} PpRegName: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_1235: int;
  var vslice_dummy_var_1236: int;

  anon0:
    call {:si_unique_call 1073} Tmp_481 := __HAVOC_malloc(20);
    call {:si_unique_call 1074} linkName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1075} Tmp_484 := __HAVOC_malloc(20);
    call {:si_unique_call 1076} Tmp_495 := __HAVOC_malloc(20);
    call {:si_unique_call 1077} Tmp_496 := __HAVOC_malloc(20);
    PDevExt_5 := actual_PDevExt_5;
    hRegKey := actual_hRegKey;
    PSymName := actual_PSymName;
    PpRegName := actual_PpRegName;
    call {:si_unique_call 1078} Tmp_482 := __HAVOC_malloc(168);
    call {:si_unique_call 1079} Tmp_485 := __HAVOC_malloc(148);
    call {:si_unique_call 1080} vslice_dummy_var_288 := __HAVOC_malloc(8);
    call {:si_unique_call 1081} Tmp_487 := __HAVOC_malloc(164);
    call {:si_unique_call 1082} Tmp_489 := __HAVOC_malloc(60);
    call {:si_unique_call 1083} Tmp_490 := __HAVOC_malloc(36);
    call {:si_unique_call 1084} Tmp_492 := __HAVOC_malloc(44);
    call {:si_unique_call 1085} vslice_dummy_var_289 := __HAVOC_malloc(8);
    call {:si_unique_call 1086} vslice_dummy_var_290 := __HAVOC_malloc(44);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc pDevObj_1;
    assume {:nonnull} pDevObj_1 != 0;
    assume pDevObj_1 > 0;
    havoc pDrvObj;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    call {:si_unique_call 1087} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    havoc Tmp_488;
    call {:si_unique_call 1088} sdv_402 := ExAllocatePoolWithTag(257, Tmp_488, -797345469);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    havoc Tmp_491;
    call {:si_unique_call 1089} sdv_RtlZeroMemory(0, Tmp_491);
    call {:si_unique_call 1090} sdv_406 := ExAllocatePoolWithTag(257, 258, -797345469);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    Tmp_490 := strConst__li2bpl94;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_1235;
    call {:si_unique_call 1091} status_17 := CyyGetRegistryKeyValue(hRegKey, Tmp_490, 18, vslice_dummy_var_1235, 256);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} yogi_error != 1;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_17 >= 0;
    goto L39;

  L39:
    call {:si_unique_call 1092} vslice_dummy_var_291 := corral_nondet();
    call {:si_unique_call 1093} vslice_dummy_var_292 := corral_nondet();
    call {:si_unique_call 1094} vslice_dummy_var_293 := corral_nondet();
    call {:si_unique_call 1095} vslice_dummy_var_286 := corral_nondet();
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_483;
    call {:si_unique_call 1096} sdv_404 := ExAllocatePoolWithTag(257, Tmp_483, -797345469);
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_480;
    call {:si_unique_call 1097} sdv_RtlZeroMemory(0, Tmp_480);
    call {:si_unique_call 1098} vslice_dummy_var_287 := corral_nondet();
    Tmp_489 := strConst__li2bpl127;
    call {:si_unique_call 1099} vslice_dummy_var_294 := CyyDbgPrintEx(4, Tmp_489);
    goto L69;

  L69:
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 1100} sdv_ExFreePool(0);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto L70;

  L70:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_17 >= 0;
    goto L76;

  L76:
    Tmp_478 := status_17;
    goto LM2;

  LM2:
    return;

  anon23_Then:
    assume {:partition} 0 > status_17;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 1101} sdv_ExFreePool(0);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto L76;

  anon24_Then:
    goto L76;

  anon22_Then:
    goto L70;

  anon29_Then:
    status_17 := -1073741670;
    goto L69;

  anon21_Then:
    assume {:partition} 0 > status_17;
    Tmp_492 := strConst__li2bpl95;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_1236;
    call {:si_unique_call 1102} status_17 := CyyGetRegistryKeyValue(hRegKey, Tmp_492, 22, vslice_dummy_var_1236, 256);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} yogi_error != 1;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_17 < 0;
    Tmp_487 := strConst__li2bpl107;
    call {:si_unique_call 1103} vslice_dummy_var_295 := CyyDbgPrintEx(14, Tmp_487);
    goto L69;

  anon25_Then:
    assume {:partition} 0 <= status_17;
    goto L39;

  anon30_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon28_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    assume {:nonnull} Tmp_495 != 0;
    assume Tmp_495 > 0;
    call {:si_unique_call 1104} CyyLogError(pDrvObj, pDevObj_1, Tmp_495, Tmp_481, 0, 0, 0, 19, 0, -1073475576, 0, 0, 0, 0);
    Tmp_485 := strConst__li2bpl108;
    call {:si_unique_call 1105} vslice_dummy_var_296 := CyyDbgPrintEx(14, Tmp_485);
    status_17 := -1073741670;
    goto L69;

  anon26_Then:
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    assume {:nonnull} Tmp_484 != 0;
    assume Tmp_484 > 0;
    call {:si_unique_call 1106} CyyLogError(pDrvObj, pDevObj_1, Tmp_484, Tmp_496, 0, 0, 0, 19, 0, -1073475576, 0, 0, 0, 0);
    Tmp_482 := strConst__li2bpl109;
    call {:si_unique_call 1107} vslice_dummy_var_297 := CyyDbgPrintEx(14, Tmp_482);
    status_17 := -1073741670;
    goto L69;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_298: int;

  anon0:
    call {:si_unique_call 1108} vslice_dummy_var_298 := __HAVOC_malloc(4);
    havoc Mem_T.INT4;
    return;
}



procedure {:origName "CyyAddToAllDevs"} CyyAddToAllDevs(actual_PListEntry: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyAddToAllDevs"} CyyAddToAllDevs(actual_PListEntry: int)
{
  var {:pointer} Tmp_499: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} PListEntry: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;

  anon0:
    call {:si_unique_call 1109} vslice_dummy_var_299 := __HAVOC_malloc(4);
    PListEntry := actual_PListEntry;
    call {:si_unique_call 1110} Tmp_499 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    Mem_T.INT4[Tmp_499] := oldIrql_3;
    call {:si_unique_call 1111} sdv_KeAcquireSpinLock(0, Tmp_499);
    assume {:nonnull} Tmp_499 != 0;
    assume Tmp_499 > 0;
    oldIrql_3 := Mem_T.INT4[Tmp_499];
    call {:si_unique_call 1112} vslice_dummy_var_300 := sdv_InsertTailList(AllDevObjs__CYY_GLOBALS(CyyGlobals), PListEntry);
    call {:si_unique_call 1113} sdv_KeReleaseSpinLock(0, oldIrql_3);
    return;
}



procedure {:origName "CyyCompareString"} CyyCompareString(actual_PString1: int, actual_PString2: int, actual_Count: int) returns (Tmp_501: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCompareString"} CyyCompareString(actual_PString1: int, actual_PString2: int, actual_Count: int) returns (Tmp_501: int)
{
  var {:pointer} PString1: int;
  var {:pointer} PString2: int;
  var {:scalar} Count: int;

  anon0:
    PString1 := actual_PString1;
    PString2 := actual_PString2;
    Count := actual_Count;
    goto L3;

  L3:
    call {:si_unique_call 1114} Count := CyyCompareString_loop_L3(PString1, PString2, Count);
    goto L3_last;

  L3_last:
    assume {:nonnull} PString1 != 0;
    assume PString1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.INT4[PString1] != 0;
    goto L5;

  L5:
    assume {:nonnull} PString1 != 0;
    assume PString1 > 0;
    assume {:nonnull} PString2 != 0;
    assume PString2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.INT4[PString1] != Mem_T.INT4[PString2];
    goto L8;

  L8:
    Tmp_501 := Count;
    return;

  anon11_Then:
    assume {:partition} Mem_T.INT4[PString1] == Mem_T.INT4[PString2];
    Count := Count - 1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Count == 0;
    goto L8;

  anon12_Then:
    assume {:partition} Count != 0;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:partition} Mem_T.INT4[PString1] == 0;
    assume {:nonnull} PString2 != 0;
    assume PString2 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Mem_T.INT4[PString2] == 0;
    goto L8;

  anon10_Then:
    assume {:partition} Mem_T.INT4[PString2] != 0;
    goto L5;
}



procedure {:origName "CyyStartDevice"} CyyStartDevice(actual_PDevObj_12: int, actual_PIrp_3: int) returns (Tmp_503: int);
  modifies alloc, Mem_T.INT4, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyStartDevice"} CyyStartDevice(actual_PDevObj_12: int, actual_PIrp_3: int) returns (Tmp_503: int)
{
  var {:pointer} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} keyHandle_3: int;
  var {:pointer} portResourcesTr: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} pDevExt_13: int;
  var {:pointer} Tmp_508: int;
  var {:pointer} portResources: int;
  var {:pointer} Tmp_509: int;
  var {:pointer} Tmp_510: int;
  var {:pointer} sdv_419: int;
  var {:scalar} dataLength: int;
  var {:pointer} sdv_426: int;
  var {:pointer} pLowerDevObj_3: int;
  var {:pointer} Tmp_511: int;
  var {:pointer} Tmp_512: int;
  var {:scalar} status_18: int;
  var {:pointer} Tmp_513: int;
  var {:scalar} Tmp_514: int;
  var {:scalar} Tmp_515: int;
  var {:pointer} PDevObj_12: int;
  var {:pointer} PIrp_3: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_1237: int;

  anon0:
    call {:si_unique_call 1115} Tmp_514 := __HAVOC_malloc(20);
    call {:si_unique_call 1116} Tmp_515 := __HAVOC_malloc(20);
    PDevObj_12 := actual_PDevObj_12;
    PIrp_3 := actual_PIrp_3;
    call {:si_unique_call 1117} Tmp_504 := __HAVOC_malloc(64);
    call {:si_unique_call 1118} Tmp_505 := __HAVOC_malloc(112);
    call {:si_unique_call 1119} Tmp_506 := __HAVOC_malloc(56);
    call {:si_unique_call 1120} Tmp_508 := __HAVOC_malloc(152);
    call {:si_unique_call 1121} Tmp_509 := __HAVOC_malloc(208);
    call {:si_unique_call 1122} Tmp_510 := __HAVOC_malloc(200);
    call {:si_unique_call 1123} Tmp_511 := __HAVOC_malloc(56);
    call {:si_unique_call 1124} Tmp_512 := __HAVOC_malloc(100);
    call {:si_unique_call 1125} Tmp_513 := __HAVOC_malloc(64);
    call {:si_unique_call 1126} vslice_dummy_var_301 := sdv_IoGetCurrentIrpStackLocation(PIrp_3);
    status_18 := -1073741822;
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    havoc pDevExt_13;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc pLowerDevObj_3;
    portResources := 0;
    portResourcesTr := 0;
    call {:si_unique_call 1127} sdv_do_paged_code_check();
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    Tmp_512 := strConst__li2bpl128;
    call {:si_unique_call 1128} vslice_dummy_var_304 := CyyDbgPrintEx(11, Tmp_512);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1129} KeInitializeEvent(CyyStartEvent__CYY_DEVICE_EXTENSION(pDevExt_13), 1, 0);
    call {:si_unique_call 1130} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1131} sdv_IoSetCompletionRoutine(PIrp_3, li2bplFunctionConstant218, CyyStartEvent__CYY_DEVICE_EXTENSION(pDevExt_13), 1, 1, 1);
    call {:si_unique_call 1132} status_18 := sdv_IoCallDriver(pLowerDevObj_3, PIrp_3);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_18 == 259;
    call {:si_unique_call 1133} vslice_dummy_var_302 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc status_18;
    goto L40;

  L40:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_18 >= 0;
    call {:si_unique_call 1134} status_18 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} status_18 >= 0;
    Tmp_506 := strConst__li2bpl130;
    call {:si_unique_call 1135} dataLength := CyyGetRegistryKeyValueLength(keyHandle_3, Tmp_506, 28);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1136} sdv_419 := ExAllocatePoolWithTag(1, dataLength, -797345469);
    portResources := sdv_419;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} portResources != 0;
    Tmp_511 := strConst__li2bpl130;
    call {:si_unique_call 1137} status_18 := CyyGetRegistryKeyValue(keyHandle_3, Tmp_511, 28, portResources, dataLength);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} status_18 < 0;
    Tmp_510 := strConst__li2bpl132;
    call {:si_unique_call 1138} vslice_dummy_var_306 := CyyDbgPrintEx(14, Tmp_510);
    goto L77;

  L77:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} portResources != 0;
    call {:si_unique_call 1139} sdv_ExFreePool(0);
    goto L78;

  L78:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} portResourcesTr != 0;
    call {:si_unique_call 1140} sdv_ExFreePool(0);
    goto L82;

  L82:
    call {:si_unique_call 1141} vslice_dummy_var_303 := ZwClose(0);
    goto L88;

  L88:
    Tmp_503 := status_18;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon36_Then:
    assume {:partition} portResourcesTr == 0;
    goto L82;

  anon35_Then:
    assume {:partition} portResources == 0;
    goto L78;

  anon34_Then:
    assume {:partition} 0 <= status_18;
    goto L65;

  L65:
    Tmp_504 := strConst__li2bpl131;
    call {:si_unique_call 1142} dataLength := CyyGetRegistryKeyValueLength(keyHandle_3, Tmp_504, 32);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1143} sdv_426 := ExAllocatePoolWithTag(1, dataLength, -797345469);
    portResourcesTr := sdv_426;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} portResourcesTr != 0;
    Tmp_513 := strConst__li2bpl131;
    call {:si_unique_call 1144} status_18 := CyyGetRegistryKeyValue(keyHandle_3, Tmp_513, 32, portResourcesTr, dataLength);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} yogi_error != 1;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_18 < 0;
    Tmp_509 := strConst__li2bpl133;
    call {:si_unique_call 1145} vslice_dummy_var_305 := CyyDbgPrintEx(14, Tmp_509);
    goto L77;

  anon37_Then:
    assume {:partition} 0 <= status_18;
    goto L95;

  L95:
    call {:si_unique_call 1146} status_18 := CyyFinishStartDevice(PDevObj_12, portResources, portResourcesTr);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} yogi_error != 1;
    goto L77;

  anon45_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon44_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon43_Then:
    assume {:partition} portResourcesTr == 0;
    goto L95;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon40_Then:
    assume {:partition} portResources == 0;
    goto L65;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon33_Then:
    assume {:partition} 0 > status_18;
    Tmp_508 := strConst__li2bpl75;
    call {:si_unique_call 1147} vslice_dummy_var_307 := CyyDbgPrintEx(14, Tmp_508);
    goto L88;

  anon32_Then:
    assume {:partition} 0 > status_18;
    Tmp_505 := strConst__li2bpl129;
    call {:si_unique_call 1148} vslice_dummy_var_308 := CyyDbgPrintEx(14, Tmp_505);
    assume {:nonnull} Tmp_515 != 0;
    assume Tmp_515 > 0;
    assume {:nonnull} Tmp_515 != 0;
    assume Tmp_515 > 0;
    assume {:nonnull} Tmp_515 != 0;
    assume Tmp_515 > 0;
    assume {:nonnull} Tmp_515 != 0;
    assume Tmp_515 > 0;
    assume {:nonnull} Tmp_515 != 0;
    assume Tmp_515 > 0;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc vslice_dummy_var_1237;
    call {:si_unique_call 1149} CyyLogError(vslice_dummy_var_1237, 0, Tmp_514, Tmp_515, 0, 0, 0, 0, status_18, -1073475530, 0, 0, 0, 0);
    Tmp_503 := status_18;
    goto L1;

  anon31_Then:
    assume {:partition} status_18 != 259;
    goto L40;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyAddDevice"} CyyAddDevice(actual_DriverObject_3: int, actual_PPdo_1: int) returns (Tmp_516: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyAddDevice"} CyyAddDevice(actual_DriverObject_3: int, actual_PPdo_1: int) returns (Tmp_516: int)
{
  var {:pointer} pDevExt_14: int;
  var {:pointer} Tmp_518: int;
  var {:scalar} Tmp_519: int;
  var {:scalar} Tmp_520: int;
  var {:pointer} Tmp_521: int;
  var {:pointer} pNewDevObj: int;
  var {:pointer} pLowerDevObj_4: int;
  var {:pointer} Tmp_522: int;
  var {:pointer} Tmp_523: int;
  var {:scalar} status_19: int;
  var {:pointer} DriverObject_3: int;
  var {:pointer} PPdo_1: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;

  anon0:
    call {:si_unique_call 1150} Tmp_519 := __HAVOC_malloc(20);
    call {:si_unique_call 1151} Tmp_520 := __HAVOC_malloc(20);
    call {:si_unique_call 1152} pNewDevObj := __HAVOC_malloc(4);
    DriverObject_3 := actual_DriverObject_3;
    PPdo_1 := actual_PPdo_1;
    call {:si_unique_call 1153} Tmp_518 := __HAVOC_malloc(140);
    call {:si_unique_call 1154} Tmp_521 := __HAVOC_malloc(204);
    call {:si_unique_call 1155} Tmp_522 := __HAVOC_malloc(248);
    call {:si_unique_call 1156} Tmp_523 := __HAVOC_malloc(80);
    assume {:nonnull} pNewDevObj != 0;
    assume pNewDevObj > 0;
    pLowerDevObj_4 := 0;
    call {:si_unique_call 1157} sdv_do_paged_code_check();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} yogi_error != 1;
    Tmp_518 := strConst__li2bpl134;
    call {:si_unique_call 1158} vslice_dummy_var_309 := CyyDbgPrintEx(11, Tmp_518);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} PPdo_1 != 0;
    call {:si_unique_call 1159} status_19 := CyyCreateDevObj(DriverObject_3, PPdo_1, pNewDevObj);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} status_19 >= 0;
    call {:si_unique_call 1160} pLowerDevObj_4 := IoAttachDeviceToDeviceStack(0, PPdo_1);
    assume {:nonnull} pNewDevObj != 0;
    assume pNewDevObj > 0;
    havoc pDevExt_14;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    assume {:nonnull} pNewDevObj != 0;
    assume pNewDevObj > 0;
    Tmp_523 := strConst__li2bpl137;
    call {:si_unique_call 1161} vslice_dummy_var_310 := CyyDbgPrintEx(11, Tmp_523);
    Tmp_516 := status_19;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon10_Then:
    assume {:partition} 0 > status_19;
    Tmp_521 := strConst__li2bpl135;
    call {:si_unique_call 1162} vslice_dummy_var_311 := CyyDbgPrintEx(14, Tmp_521);
    Tmp_516 := status_19;
    goto L1;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon9_Then:
    assume {:partition} PPdo_1 == 0;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} Tmp_520 != 0;
    assume Tmp_520 > 0;
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    assume {:nonnull} Tmp_519 != 0;
    assume Tmp_519 > 0;
    call {:si_unique_call 1163} CyyLogError(DriverObject_3, 0, Tmp_519, Tmp_520, 0, 0, 0, 0, 0, -1073475532, 0, 0, 0, 0);
    Tmp_522 := strConst__li2bpl136;
    call {:si_unique_call 1164} vslice_dummy_var_312 := CyyDbgPrintEx(14, Tmp_522);
    Tmp_516 := 26;
    goto L1;

  anon11_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyFinishStartDevice"} CyyFinishStartDevice(actual_PDevObj_13: int, actual_PResList_1: int, actual_PTrResList_1: int) returns (Tmp_524: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyFinishStartDevice"} CyyFinishStartDevice(actual_PDevObj_13: int, actual_PResList_1: int, actual_PTrResList_1: int) returns (Tmp_524: int)
{
  var {:scalar} Tmp_527: int;
  var {:scalar} Tmp_528: int;
  var {:scalar} Tmp_529: int;
  var {:dopa} {:scalar} powerPolicy: int;
  var {:pointer} Tmp_530: int;
  var {:pointer} pDevExt_15: int;
  var {:pointer} Tmp_531: int;
  var {:pointer} Tmp_532: int;
  var {:pointer} Tmp_533: int;
  var {:pointer} pnpKey: int;
  var {:pointer} Tmp_534: int;
  var {:pointer} Tmp_535: int;
  var {:pointer} Tmp_536: int;
  var {:pointer} sdv_448: int;
  var {:pointer} pConfig: int;
  var {:pointer} sdv_450: int;
  var {:scalar} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Tmp_540: int;
  var {:pointer} Tmp_541: int;
  var {:pointer} Tmp_542: int;
  var {:pointer} Tmp_543: int;
  var {:pointer} Tmp_544: int;
  var {:scalar} Tmp_545: int;
  var {:scalar} status_20: int;
  var {:scalar} Tmp_546: int;
  var {:scalar} Tmp_547: int;
  var {:pointer} Tmp_548: int;
  var {:pointer} countSoFar: int;
  var {:scalar} Tmp_550: int;
  var {:pointer} PDevObj_13: int;
  var {:pointer} PResList_1: int;
  var {:pointer} PTrResList_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_1238: int;
  var vslice_dummy_var_1239: int;
  var vslice_dummy_var_1240: int;
  var vslice_dummy_var_1241: int;
  var vslice_dummy_var_1242: int;
  var vslice_dummy_var_1243: int;
  var vslice_dummy_var_1244: int;
  var vslice_dummy_var_1245: int;
  var vslice_dummy_var_1246: int;
  var vslice_dummy_var_1247: int;
  var vslice_dummy_var_1248: int;
  var vslice_dummy_var_1249: int;
  var vslice_dummy_var_1250: int;
  var vslice_dummy_var_1251: int;
  var vslice_dummy_var_1252: int;
  var vslice_dummy_var_1253: int;

  anon0:
    call {:si_unique_call 1165} powerPolicy := __HAVOC_malloc(4);
    call {:si_unique_call 1166} Tmp_537 := __HAVOC_malloc(20);
    call {:si_unique_call 1167} Tmp_546 := __HAVOC_malloc(20);
    call {:si_unique_call 1168} Tmp_547 := __HAVOC_malloc(20);
    PDevObj_13 := actual_PDevObj_13;
    PResList_1 := actual_PResList_1;
    PTrResList_1 := actual_PTrResList_1;
    call {:si_unique_call 1169} Tmp_530 := __HAVOC_malloc(104);
    call {:si_unique_call 1170} Tmp_531 := __HAVOC_malloc(144);
    call {:si_unique_call 1171} Tmp_532 := __HAVOC_malloc(168);
    call {:si_unique_call 1172} Tmp_533 := __HAVOC_malloc(316);
    call {:si_unique_call 1173} Tmp_534 := __HAVOC_malloc(100);
    call {:si_unique_call 1174} Tmp_535 := __HAVOC_malloc(156);
    call {:si_unique_call 1175} Tmp_536 := __HAVOC_malloc(884);
    call {:si_unique_call 1176} Tmp_538 := __HAVOC_malloc(156);
    call {:si_unique_call 1177} Tmp_541 := __HAVOC_malloc(120);
    call {:si_unique_call 1178} Tmp_542 := __HAVOC_malloc(220);
    call {:si_unique_call 1179} Tmp_543 := __HAVOC_malloc(272);
    call {:si_unique_call 1180} Tmp_544 := __HAVOC_malloc(884);
    call {:si_unique_call 1181} Tmp_548 := __HAVOC_malloc(104);
    assume {:nonnull} PDevObj_13 != 0;
    assume PDevObj_13 > 0;
    havoc pDevExt_15;
    call {:si_unique_call 1182} sdv_do_paged_code_check();
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_15)], 2) != 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_15)], 1) != 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1183} CyySetDeviceFlags(pDevExt_15, Flags__CYY_DEVICE_EXTENSION(pDevExt_15), 2, 0);
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L34;

  L34:
    call {:si_unique_call 1184} sdv_450 := ExAllocatePoolWithTag(1, 96, -797345469);
    pConfig := sdv_450;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 1185} sdv_RtlZeroMemory(0, 96);
    call {:si_unique_call 1186} status_20 := CyyGetPortInfo(PDevObj_13, PResList_1, PTrResList_1, pConfig);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} yogi_error != 1;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} status_20 < 0;
    goto L59;

  L59:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} status_20 >= 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pConfig != 0;
    assume pConfig > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pConfig != 0;
    assume pConfig > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    Tmp_545 := 0;
    goto L70;

  L70:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc Tmp_529;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    Tmp_527 := 1;
    goto L78;

  L78:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L87;

  L87:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L93;

  L93:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc vslice_dummy_var_1238;
    call {:si_unique_call 1187} boogieTmp := CyyReportMaxBaudRate(vslice_dummy_var_1238);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1188} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    call {:si_unique_call 1189} sdv_448 := IoGetConfigurationInformation();
    assume {:nonnull} sdv_448 != 0;
    assume sdv_448 > 0;
    countSoFar := SerialCount__CONFIGURATION_INFORMATION(sdv_448);
    assume {:nonnull} countSoFar != 0;
    assume countSoFar > 0;
    Mem_T.INT4[countSoFar] := Mem_T.INT4[countSoFar] + 1;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1190} vslice_dummy_var_320 := IoWMIRegistrationControl(0, 1);
    goto L121;

  L121:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    call {:si_unique_call 1191} CyyUnstallIrps(pDevExt_15);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L122;

  L122:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1192} CyySetDeviceFlags(pDevExt_15, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_15), -1, 0);
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1193} CyySetDeviceFlags(pDevExt_15, Flags__CYY_DEVICE_EXTENSION(pDevExt_15), 1, 1);
    goto L132;

  L132:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 1194} sdv_ExFreePool(0);
    goto L133;

  L133:
    Tmp_541 := strConst__li2bpl139;
    call {:si_unique_call 1195} vslice_dummy_var_319 := CyyDbgPrintEx(11, Tmp_541);
    Tmp_524 := status_20;
    goto LM2;

  LM2:
    return;

  anon88_Then:
    assume {:partition} pConfig == 0;
    goto L133;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon87_Then:
    goto L122;

  anon86_Then:
    goto L121;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon103_Then:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L93;

  anon104_Then:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L93;

  anon85_Then:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L93;

  anon99_Then:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L87;

  anon100_Then:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L87;

  anon101_Then:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L87;

  anon102_Then:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L87;

  anon112_Then:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto L87;

  anon111_Then:
    Tmp_527 := 0;
    goto L78;

  anon110_Then:
    Tmp_545 := 1;
    goto L70;

  anon84_Then:
    assume {:partition} 0 > status_20;
    Tmp_548 := strConst__li2bpl138;
    call {:si_unique_call 1196} vslice_dummy_var_321 := CyyDbgPrintEx(4, Tmp_548);
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    call {:si_unique_call 1197} CyyKillPendingIrps(PDevObj_13);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1198} CyySetDeviceFlags(pDevExt_15, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_15), 1, 1);
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1199} CyySetDeviceFlags(pDevExt_15, Flags__CYY_DEVICE_EXTENSION(pDevExt_15), 1, 0);
    goto L132;

  anon115_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon89_Then:
    goto L132;

  anon81_Then:
    assume {:partition} 0 <= status_20;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc vslice_dummy_var_1239;
    call {:si_unique_call 1200} status_20 := CyyGotoPowerState(vslice_dummy_var_1239, pDevExt_15, 1);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} status_20 < 0;
    goto L59;

  anon83_Then:
    assume {:partition} 0 <= status_20;
    goto L50;

  L50:
    call {:si_unique_call 1201} status_20 := CyyFindInitController(PDevObj_13, pConfig);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} status_20 >= 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} pDevExt_15 != 0;
    Tmp_542 := strConst__li2bpl141;
    call {:si_unique_call 1202} vslice_dummy_var_317 := CyyDbgPrintEx(8, Tmp_542);
    goto L184;

  L184:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto L186;

  L186:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1203} CyyAddToAllDevs(AllDevObjs__CYY_DEVICE_EXTENSION(pDevExt_15));
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1204} vslice_dummy_var_313 := KeSynchronizeExecution(0, li2bplFunctionConstant230, 0);
    call {:si_unique_call 1205} vslice_dummy_var_314 := KeSynchronizeExecution(0, li2bplFunctionConstant231, 0);
    call {:si_unique_call 1206} vslice_dummy_var_315 := KeSynchronizeExecution(0, li2bplFunctionConstant232, 0);
    call {:si_unique_call 1207} vslice_dummy_var_316 := KeSynchronizeExecution(0, li2bplFunctionConstant233, 0);
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    Tmp_532 := strConst__li2bpl142;
    call {:si_unique_call 1208} vslice_dummy_var_318 := CyyDbgPrintEx(12, Tmp_532);
    goto L59;

  anon94_Then:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc Tmp_540;
    assume {:nonnull} Tmp_540 != 0;
    assume Tmp_540 > 0;
    havoc vslice_dummy_var_1240;
    call {:si_unique_call 1209} status_20 := CyyDoExternalNaming(pDevExt_15, vslice_dummy_var_1240);
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} yogi_error != 1;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} status_20 < 0;
    Tmp_531 := strConst__li2bpl143;
    call {:si_unique_call 1210} vslice_dummy_var_322 := CyyDbgPrintEx(14, Tmp_531);
    status_20 := 0;
    goto L59;

  anon95_Then:
    assume {:partition} 0 <= status_20;
    goto L59;

  anon116_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon92_Then:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    Tmp_533 := strConst__li2bpl144;
    call {:si_unique_call 1211} vslice_dummy_var_323 := CyyDbgPrintEx(8, Tmp_533);
    Tmp_544 := strConst__li2bpl145;
    call {:si_unique_call 1212} vslice_dummy_var_324 := CyyDbgPrintEx(8, Tmp_544);
    assume {:nonnull} pConfig != 0;
    assume pConfig > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc vslice_dummy_var_1241;
    havoc vslice_dummy_var_1242;
    havoc vslice_dummy_var_1243;
    havoc vslice_dummy_var_1244;
    havoc vslice_dummy_var_1245;
    havoc vslice_dummy_var_1246;
    havoc vslice_dummy_var_1247;
    havoc vslice_dummy_var_1248;
    call {:si_unique_call 1213} status_20 := IoConnectInterrupt(0, vslice_dummy_var_1241, vslice_dummy_var_1242, 0, vslice_dummy_var_1243, vslice_dummy_var_1244, vslice_dummy_var_1245, vslice_dummy_var_1246, vslice_dummy_var_1247, vslice_dummy_var_1248, 0);
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} status_20 >= 0;
    Tmp_530 := strConst__li2bpl147;
    call {:si_unique_call 1214} vslice_dummy_var_325 := CyyDbgPrintEx(8, Tmp_530);
    goto L186;

  anon96_Then:
    assume {:partition} 0 > status_20;
    Tmp_535 := strConst__li2bpl146;
    call {:si_unique_call 1215} vslice_dummy_var_326 := CyyDbgPrintEx(14, Tmp_535);
    Tmp_536 := strConst__li2bpl145;
    call {:si_unique_call 1216} vslice_dummy_var_327 := CyyDbgPrintEx(14, Tmp_536);
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc Tmp_550;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    assume {:nonnull} PDevObj_13 != 0;
    assume PDevObj_13 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc vslice_dummy_var_1249;
    havoc vslice_dummy_var_1250;
    havoc vslice_dummy_var_1251;
    havoc vslice_dummy_var_1252;
    call {:si_unique_call 1217} CyyLogError(vslice_dummy_var_1249, PDevObj_13, vslice_dummy_var_1250, Tmp_537, 0, 0, 0, vslice_dummy_var_1251, status_20, -1073475577, Tmp_550, vslice_dummy_var_1252, 0, 0);
    goto L59;

  anon93_Then:
    goto L186;

  anon91_Then:
    assume {:partition} pDevExt_15 == 0;
    Tmp_538 := strConst__li2bpl140;
    call {:si_unique_call 1218} vslice_dummy_var_328 := CyyDbgPrintEx(14, Tmp_538);
    goto L184;

  anon90_Then:
    assume {:partition} 0 > status_20;
    goto L59;

  anon109_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon108_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon82_Then:
    goto L50;

  anon107_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon106_Then:
    assume {:partition} pConfig == 0;
    assume {:nonnull} Tmp_546 != 0;
    assume Tmp_546 > 0;
    assume {:nonnull} Tmp_546 != 0;
    assume Tmp_546 > 0;
    assume {:nonnull} Tmp_546 != 0;
    assume Tmp_546 > 0;
    assume {:nonnull} Tmp_546 != 0;
    assume Tmp_546 > 0;
    assume {:nonnull} Tmp_546 != 0;
    assume Tmp_546 > 0;
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    assume {:nonnull} Tmp_547 != 0;
    assume Tmp_547 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc vslice_dummy_var_1253;
    call {:si_unique_call 1219} CyyLogError(vslice_dummy_var_1253, 0, Tmp_547, Tmp_546, 0, 0, 0, 31, 0, -1073475576, 0, 0, 0, 0);
    Tmp_543 := strConst__li2bpl148;
    call {:si_unique_call 1220} vslice_dummy_var_329 := CyyDbgPrintEx(14, Tmp_543);
    status_20 := -1073741670;
    goto L59;

  anon80_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_15)], 1) == 0;
    goto L17;

  L17:
    call {:si_unique_call 1221} status_20 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} status_20 >= 0;
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    Mem_T.INT4[powerPolicy] := 0;
    Tmp_534 := strConst__li2bpl149;
    call {:si_unique_call 1222} vslice_dummy_var_330 := CyyGetRegistryKeyValue(pnpKey, Tmp_534, 50, powerPolicy, 4);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} Mem_T.INT4[powerPolicy] != 0;
    Tmp_528 := 0;
    goto L268;

  L268:
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1223} vslice_dummy_var_331 := ZwClose(0);
    goto L34;

  anon98_Then:
    assume {:partition} Mem_T.INT4[powerPolicy] == 0;
    Tmp_528 := 1;
    goto L268;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon97_Then:
    assume {:partition} 0 > status_20;
    goto L34;

  anon79_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_15)], 2) == 0;
    goto L17;

  anon105_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyPnpDispatch"} CyyPnpDispatch(actual_PDevObj_14: int, actual_PIrp_4: int) returns (Tmp_551: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyPnpDispatch"} CyyPnpDispatch(actual_PDevObj_14: int, actual_PIrp_4: int) returns (Tmp_551: int)
{
  var {:pointer} sdv_465: int;
  var {:scalar} pIdBuf: int;
  var {:pointer} Tmp_552: int;
  var {:scalar} Tmp_553: int;
  var {:scalar} sdv_469: int;
  var {:scalar} gotMemory: int;
  var {:pointer} Tmp_554: int;
  var {:pointer} Tmp_555: int;
  var {:pointer} Tmp_556: int;
  var {:pointer} pResList: int;
  var {:dopa} {:scalar} portIndex: int;
  var {:pointer} Tmp_557: int;
  var {:pointer} Tmp_558: int;
  var {:pointer} Tmp_559: int;
  var {:pointer} Tmp_560: int;
  var {:pointer} Tmp_561: int;
  var {:pointer} Tmp_562: int;
  var {:pointer} pDevExt_16: int;
  var {:scalar} Tmp_563: int;
  var {:pointer} Tmp_564: int;
  var {:scalar} Tmp_565: int;
  var {:pointer} WideString: int;
  var {:pointer} Tmp_566: int;
  var {:pointer} Tmp_567: int;
  var {:pointer} Tmp_568: int;
  var {:pointer} Tmp_569: int;
  var {:scalar} cap_1: int;
  var {:pointer} Tmp_570: int;
  var {:scalar} Tmp_571: int;
  var {:scalar} pnpIdStrLen: int;
  var {:pointer} Tmp_572: int;
  var {:scalar} pendingIRPs: int;
  var {:pointer} pQueryCapsEvent: int;
  var {:pointer} Tmp_573: int;
  var {:pointer} Tmp_574: int;
  var {:pointer} pIrpStack_4: int;
  var {:pointer} Tmp_576: int;
  var {:pointer} Tmp_577: int;
  var {:pointer} Tmp_578: int;
  var {:pointer} pLowerDevObj_5: int;
  var {:pointer} Tmp_579: int;
  var {:pointer} sdv_503: int;
  var {:pointer} sdv_506: int;
  var {:scalar} gotInt: int;
  var {:pointer} pResDesc: int;
  var {:scalar} allocLen: int;
  var {:pointer} Tmp_580: int;
  var {:pointer} sdv_510: int;
  var {:pointer} Tmp_582: int;
  var {:scalar} listNum: int;
  var {:pointer} Tmp_584: int;
  var {:scalar} Tmp_585: int;
  var {:pointer} Tmp_586: int;
  var {:scalar} pendingIRPs_1: int;
  var {:pointer} Tmp_588: int;
  var {:pointer} Tmp_589: int;
  var {:pointer} Tmp_590: int;
  var {:pointer} pReqList: int;
  var {:pointer} Tmp_591: int;
  var {:pointer} Tmp_592: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_595: int;
  var {:pointer} Tmp_596: int;
  var {:scalar} pendingIRPs_2: int;
  var {:pointer} Tmp_597: int;
  var {:pointer} Tmp_598: int;
  var {:pointer} Tmp_599: int;
  var {:pointer} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:pointer} Tmp_602: int;
  var {:pointer} Tmp_603: int;
  var {:scalar} j: int;
  var {:pointer} Tmp_604: int;
  var {:pointer} Tmp_605: int;
  var {:pointer} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:scalar} Tmp_608: int;
  var {:pointer} Tmp_610: int;
  var {:scalar} sdv_533: int;
  var {:pointer} pnpKey_1: int;
  var {:pointer} Tmp_611: int;
  var {:pointer} Tmp_612: int;
  var {:pointer} Tmp_613: int;
  var {:pointer} pResFiltEvent: int;
  var {:pointer} Tmp_614: int;
  var {:pointer} Tmp_615: int;
  var {:pointer} Tmp_616: int;
  var {:pointer} Tmp_617: int;
  var {:pointer} Tmp_618: int;
  var {:pointer} Tmp_619: int;
  var {:pointer} Tmp_620: int;
  var {:scalar} curStrLen: int;
  var {:pointer} curStr: int;
  var {:scalar} gotRuntime: int;
  var {:scalar} sdv_551: int;
  var {:pointer} Tmp_621: int;
  var {:pointer} pDevCaps: int;
  var {:pointer} Tmp_622: int;
  var {:pointer} Tmp_623: int;
  var {:pointer} Tmp_624: int;
  var {:pointer} Tmp_625: int;
  var {:scalar} sdv_555: int;
  var {:scalar} status_21: int;
  var {:scalar} sdv_556: int;
  var {:pointer} Tmp_626: int;
  var {:pointer} Tmp_627: int;
  var {:scalar} Tmp_628: int;
  var {:pointer} PDevObj_14: int;
  var {:pointer} PIrp_4: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_1254: int;
  var vslice_dummy_var_1255: int;
  var vslice_dummy_var_1256: int;
  var vslice_dummy_var_1257: int;
  var vslice_dummy_var_1258: int;
  var vslice_dummy_var_1259: int;
  var vslice_dummy_var_1260: int;
  var vslice_dummy_var_1261: int;

  anon0:
    call {:si_unique_call 1224} pIdBuf := __HAVOC_malloc(12);
    call {:si_unique_call 1225} portIndex := __HAVOC_malloc(4);
    PDevObj_14 := actual_PDevObj_14;
    PIrp_4 := actual_PIrp_4;
    call {:si_unique_call 1226} Tmp_552 := __HAVOC_malloc(60);
    call {:si_unique_call 1227} Tmp_554 := __HAVOC_malloc(176);
    call {:si_unique_call 1228} Tmp_555 := __HAVOC_malloc(72);
    call {:si_unique_call 1229} Tmp_556 := __HAVOC_malloc(28);
    call {:si_unique_call 1230} Tmp_557 := __HAVOC_malloc(72);
    call {:si_unique_call 1231} Tmp_558 := __HAVOC_malloc(60);
    call {:si_unique_call 1232} Tmp_559 := __HAVOC_malloc(72);
    call {:si_unique_call 1233} Tmp_560 := __HAVOC_malloc(72);
    call {:si_unique_call 1234} Tmp_561 := __HAVOC_malloc(144);
    call {:si_unique_call 1235} Tmp_562 := __HAVOC_malloc(72);
    call {:si_unique_call 1236} Tmp_564 := __HAVOC_malloc(116);
    call {:si_unique_call 1237} WideString := __HAVOC_malloc(800);
    call {:si_unique_call 1238} Tmp_566 := __HAVOC_malloc(164);
    call {:si_unique_call 1239} Tmp_567 := __HAVOC_malloc(100);
    call {:si_unique_call 1240} Tmp_568 := __HAVOC_malloc(112);
    call {:si_unique_call 1241} Tmp_569 := __HAVOC_malloc(40);
    call {:si_unique_call 1242} Tmp_570 := __HAVOC_malloc(92);
    call {:si_unique_call 1243} Tmp_572 := __HAVOC_malloc(116);
    call {:si_unique_call 1244} Tmp_573 := __HAVOC_malloc(168);
    call {:si_unique_call 1245} Tmp_574 := __HAVOC_malloc(120);
    call {:si_unique_call 1246} Tmp_576 := __HAVOC_malloc(128);
    call {:si_unique_call 1247} Tmp_577 := __HAVOC_malloc(72);
    call {:si_unique_call 1248} Tmp_578 := __HAVOC_malloc(176);
    call {:si_unique_call 1249} Tmp_580 := __HAVOC_malloc(72);
    call {:si_unique_call 1250} vslice_dummy_var_342 := __HAVOC_malloc(20);
    call {:si_unique_call 1251} Tmp_582 := __HAVOC_malloc(60);
    call {:si_unique_call 1252} Tmp_584 := __HAVOC_malloc(60);
    call {:si_unique_call 1253} Tmp_586 := __HAVOC_malloc(120);
    call {:si_unique_call 1254} vslice_dummy_var_343 := __HAVOC_malloc(56);
    call {:si_unique_call 1255} Tmp_588 := __HAVOC_malloc(128);
    call {:si_unique_call 1256} Tmp_589 := __HAVOC_malloc(28);
    call {:si_unique_call 1257} Tmp_590 := __HAVOC_malloc(28);
    call {:si_unique_call 1258} Tmp_591 := __HAVOC_malloc(112);
    call {:si_unique_call 1259} Tmp_592 := __HAVOC_malloc(88);
    call {:si_unique_call 1260} Tmp_593 := __HAVOC_malloc(120);
    call {:si_unique_call 1261} Tmp_595 := __HAVOC_malloc(132);
    call {:si_unique_call 1262} Tmp_596 := __HAVOC_malloc(392);
    call {:si_unique_call 1263} Tmp_597 := __HAVOC_malloc(152);
    call {:si_unique_call 1264} Tmp_598 := __HAVOC_malloc(72);
    call {:si_unique_call 1265} Tmp_599 := __HAVOC_malloc(112);
    call {:si_unique_call 1266} Tmp_600 := __HAVOC_malloc(144);
    call {:si_unique_call 1267} Tmp_601 := __HAVOC_malloc(136);
    call {:si_unique_call 1268} Tmp_602 := __HAVOC_malloc(72);
    call {:si_unique_call 1269} Tmp_603 := __HAVOC_malloc(140);
    call {:si_unique_call 1270} Tmp_604 := __HAVOC_malloc(60);
    call {:si_unique_call 1271} Tmp_605 := __HAVOC_malloc(168);
    call {:si_unique_call 1272} Tmp_606 := __HAVOC_malloc(132);
    call {:si_unique_call 1273} Tmp_607 := __HAVOC_malloc(60);
    call {:si_unique_call 1274} Tmp_610 := __HAVOC_malloc(144);
    call {:si_unique_call 1275} Tmp_611 := __HAVOC_malloc(60);
    call {:si_unique_call 1276} Tmp_612 := __HAVOC_malloc(380);
    call {:si_unique_call 1277} Tmp_613 := __HAVOC_malloc(180);
    call {:si_unique_call 1278} Tmp_614 := __HAVOC_malloc(72);
    call {:si_unique_call 1279} Tmp_615 := __HAVOC_malloc(88);
    call {:si_unique_call 1280} Tmp_616 := __HAVOC_malloc(60);
    call {:si_unique_call 1281} Tmp_617 := __HAVOC_malloc(72);
    call {:si_unique_call 1282} Tmp_618 := __HAVOC_malloc(100);
    call {:si_unique_call 1283} Tmp_619 := __HAVOC_malloc(116);
    call {:si_unique_call 1284} Tmp_620 := __HAVOC_malloc(148);
    call {:si_unique_call 1285} Tmp_621 := __HAVOC_malloc(112);
    call {:si_unique_call 1286} Tmp_622 := __HAVOC_malloc(28);
    call {:si_unique_call 1287} Tmp_623 := __HAVOC_malloc(60);
    call {:si_unique_call 1288} Tmp_624 := __HAVOC_malloc(88);
    call {:si_unique_call 1289} Tmp_625 := __HAVOC_malloc(156);
    call {:si_unique_call 1290} Tmp_626 := __HAVOC_malloc(72);
    call {:si_unique_call 1291} Tmp_627 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_14 != 0;
    assume PDevObj_14 > 0;
    havoc pDevExt_16;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc pLowerDevObj_5;
    call {:si_unique_call 1292} pIrpStack_4 := sdv_IoGetCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1293} sdv_do_paged_code_check();
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1294} status_21 := CyyIRPPrologue(PIrp_4, pDevExt_16);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} status_21 != 0;
    Tmp_598 := strConst__li2bpl3;
    call {:si_unique_call 1295} vslice_dummy_var_344 := CyyDbgPrintEx(9, Tmp_598);
    call {:si_unique_call 1296} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1297} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := status_21;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon143_Then:
    assume {:partition} status_21 == 0;
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    goto L280;

  L280:
    call {:si_unique_call 1298} sdv_IoSkipCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1299} status_21 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    Tmp_551 := status_21;
    goto L1;

  anon169_Then:
    Tmp_606 := strConst__li2bpl159;
    call {:si_unique_call 1300} vslice_dummy_var_401 := CyyDbgPrintEx(12, Tmp_606);
    Tmp_552 := strConst__li2bpl160;
    call {:si_unique_call 1301} vslice_dummy_var_402 := CyyDbgPrintEx(12, Tmp_552);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1302} CyySetDeviceFlags(pDevExt_16, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_16), 8, 1);
    call {:si_unique_call 1303} CyyKillPendingIrps(PDevObj_14);
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1304} Tmp_579 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_1254;
    Mem_T.INT4[Tmp_579] := vslice_dummy_var_1254;
    call {:si_unique_call 1305} vslice_dummy_var_403 := sdv_InterlockedDecrement(Tmp_579);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1306} Tmp_579 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_1255;
    Mem_T.INT4[Tmp_579] := vslice_dummy_var_1255;
    call {:si_unique_call 1307} sdv_555 := sdv_InterlockedDecrement(Tmp_579);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    pendingIRPs_1 := sdv_555;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:partition} pendingIRPs_1 != 0;
    call {:si_unique_call 1308} vslice_dummy_var_332 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L92;

  L92:
    call {:si_unique_call 1309} Tmp_579 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_1256;
    Mem_T.INT4[Tmp_579] := vslice_dummy_var_1256;
    call {:si_unique_call 1310} vslice_dummy_var_404 := sdv_InterlockedIncrement(Tmp_579);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1311} CyyDisableInterfacesResources(PDevObj_14, 0);
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1312} sdv_IoSkipCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1313} Tmp_551 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    goto L1;

  anon213_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon212_Then:
    assume {:partition} pendingIRPs_1 == 0;
    goto L92;

  anon211_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon170_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_16)], 4) != 0;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    goto L109;

  L109:
    call {:si_unique_call 1314} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_4);
    call {:si_unique_call 1315} Tmp_551 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    goto L1;

  anon145_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_16)], 4) == 0;
    goto L109;

  anon171_Then:
    assume {:nonnull} portIndex != 0;
    assume portIndex > 0;
    Mem_T.INT4[portIndex] := 0;
    Tmp_567 := strConst__li2bpl184;
    call {:si_unique_call 1316} vslice_dummy_var_395 := CyyDbgPrintEx(12, Tmp_567);
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    call {:si_unique_call 1317} sdv_IoSkipCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1318} Tmp_551 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    goto L1;

  anon148_Then:
    goto L128;

  L128:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1319} sdv_IoSkipCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1320} Tmp_551 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    goto L1;

  anon147_Then:
    call {:si_unique_call 1321} status_21 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} status_21 >= 0;
    Tmp_569 := strConst__li2bpl76;
    call {:si_unique_call 1322} status_21 := CyyGetRegistryKeyValue(pnpKey_1, Tmp_569, 20, portIndex, 4);
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1323} vslice_dummy_var_333 := ZwClose(0);
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} status_21 >= 0;
    assume {:nonnull} portIndex != 0;
    assume portIndex > 0;
    call {:si_unique_call 1324} sdv_556 := corral_nondet();
    pnpIdStrLen := sdv_556;
    pnpIdStrLen := pnpIdStrLen * 2 + 2;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    allocLen := 0;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    havoc curStr;
    goto L179;

  L179:
    call {:si_unique_call 1325} allocLen, curStrLen := CyyPnpDispatch_loop_L179(allocLen, sdv_533, curStrLen, curStr);
    goto L179_last;

  L179_last:
    curStrLen := sdv_533;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume {:partition} curStrLen != 0;
    allocLen := allocLen + curStrLen * 2 + 2;
    goto anon208_Else_dummy;

  anon208_Else_dummy:
    assume false;
    return;

  anon208_Then:
    assume {:partition} curStrLen == 0;
    allocLen := allocLen + 2;
    Tmp_585 := allocLen + pnpIdStrLen + 2;
    call {:si_unique_call 1326} sdv_503 := ExAllocatePoolWithTag(1, Tmp_585, -797345469);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_565;
    call {:si_unique_call 1327} sdv_RtlZeroMemory(0, Tmp_565);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1328} sdv_RtlCopyMemory(0, 0, allocLen);
    call {:si_unique_call 1329} vslice_dummy_var_334 := corral_nondet();
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1330} sdv_ExFreePool(0);
    goto L208;

  L208:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1331} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_4);
    call {:si_unique_call 1332} Tmp_551 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    goto L1;

  anon209_Then:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1333} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_626 := strConst__li2bpl3;
    call {:si_unique_call 1334} vslice_dummy_var_396 := CyyDbgPrintEx(9, Tmp_626);
    call {:si_unique_call 1335} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1336} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := -1073741670;
    goto L1;

  anon207_Then:
    Tmp_604 := strConst__li2bpl161;
    call {:si_unique_call 1337} vslice_dummy_var_397 := CyyDbgPrintEx(12, Tmp_604);
    Tmp_563 := pnpIdStrLen + 4;
    call {:si_unique_call 1338} sdv_465 := ExAllocatePoolWithTag(1, Tmp_563, -797345469);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_608;
    call {:si_unique_call 1339} sdv_RtlZeroMemory(0, Tmp_608);
    call {:si_unique_call 1340} vslice_dummy_var_335 := corral_nondet();
    goto L208;

  anon210_Then:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_557 := strConst__li2bpl3;
    call {:si_unique_call 1341} vslice_dummy_var_398 := CyyDbgPrintEx(9, Tmp_557);
    call {:si_unique_call 1342} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1343} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := -1073741670;
    goto L1;

  anon150_Then:
    assume {:partition} 0 > status_21;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_580 := strConst__li2bpl3;
    call {:si_unique_call 1344} vslice_dummy_var_399 := CyyDbgPrintEx(9, Tmp_580);
    call {:si_unique_call 1345} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1346} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := status_21;
    goto L1;

  anon206_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon149_Then:
    assume {:partition} 0 > status_21;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_627 := strConst__li2bpl3;
    call {:si_unique_call 1347} vslice_dummy_var_400 := CyyDbgPrintEx(9, Tmp_627);
    call {:si_unique_call 1348} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1349} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := status_21;
    goto L1;

  anon146_Then:
    goto L128;

  anon172_Then:
    Tmp_618 := strConst__li2bpl158;
    call {:si_unique_call 1350} vslice_dummy_var_394 := CyyDbgPrintEx(12, Tmp_618);
    goto L280;

  anon173_Then:
    Tmp_615 := strConst__li2bpl157;
    call {:si_unique_call 1351} vslice_dummy_var_393 := CyyDbgPrintEx(12, Tmp_615);
    goto L280;

  anon174_Then:
    Tmp_572 := strConst__li2bpl156;
    call {:si_unique_call 1352} vslice_dummy_var_392 := CyyDbgPrintEx(12, Tmp_572);
    goto L280;

  anon175_Then:
    Tmp_621 := strConst__li2bpl155;
    call {:si_unique_call 1353} vslice_dummy_var_391 := CyyDbgPrintEx(12, Tmp_621);
    goto L280;

  anon176_Then:
    Tmp_613 := strConst__li2bpl178;
    call {:si_unique_call 1354} vslice_dummy_var_379 := CyyDbgPrintEx(12, Tmp_613);
    Tmp_582 := strConst__li2bpl160;
    call {:si_unique_call 1355} vslice_dummy_var_380 := CyyDbgPrintEx(12, Tmp_582);
    call {:si_unique_call 1356} sdv_510 := ExAllocatePoolWithTag(0, 16, -797345469);
    pResFiltEvent := sdv_510;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:partition} pResFiltEvent != 0;
    call {:si_unique_call 1357} KeInitializeEvent(pResFiltEvent, 1, 0);
    call {:si_unique_call 1358} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_4);
    call {:si_unique_call 1359} sdv_IoSetCompletionRoutine(PIrp_4, li2bplFunctionConstant218, pResFiltEvent, 1, 1, 1);
    call {:si_unique_call 1360} status_21 := sdv_IoCallDriver(pLowerDevObj_5, PIrp_4);
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} status_21 == 259;
    call {:si_unique_call 1361} vslice_dummy_var_336 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L330;

  L330:
    call {:si_unique_call 1362} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto L338;

  L338:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    havoc pReqList;
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    havoc Tmp_596;
    pResList := Tmp_596;
    Tmp_554 := strConst__li2bpl179;
    call {:si_unique_call 1363} vslice_dummy_var_381 := CyyDbgPrintEx(12, Tmp_554);
    listNum := 0;
    goto L344;

  L344:
    call {:si_unique_call 1364} gotMemory, Tmp_564, Tmp_566, Tmp_571, Tmp_573, gotInt, pResDesc, listNum, Tmp_597, Tmp_600, j, Tmp_612, gotRuntime, vslice_dummy_var_382, vslice_dummy_var_383, vslice_dummy_var_384, vslice_dummy_var_385, vslice_dummy_var_386 := CyyPnpDispatch_loop_L344(gotMemory, pResList, pDevExt_16, Tmp_564, Tmp_566, Tmp_571, Tmp_573, pLowerDevObj_5, gotInt, pResDesc, listNum, pReqList, Tmp_597, Tmp_600, j, Tmp_612, gotRuntime, vslice_dummy_var_382, vslice_dummy_var_383, vslice_dummy_var_384, vslice_dummy_var_385, vslice_dummy_var_386);
    goto L344_last;

  L344_last:
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    gotRuntime := 0;
    gotMemory := 0;
    gotInt := 0;
    Tmp_564 := strConst__li2bpl180;
    call {:si_unique_call 1365} vslice_dummy_var_382 := CyyDbgPrintEx(12, Tmp_564);
    j := 0;
    goto L353;

  L353:
    call {:si_unique_call 1366} gotMemory, Tmp_566, Tmp_571, Tmp_573, gotInt, pResDesc, Tmp_597, Tmp_600, j, Tmp_612, gotRuntime, vslice_dummy_var_383, vslice_dummy_var_384, vslice_dummy_var_385, vslice_dummy_var_386 := CyyPnpDispatch_loop_L353(gotMemory, pResList, pDevExt_16, Tmp_566, Tmp_571, Tmp_573, pLowerDevObj_5, gotInt, pResDesc, Tmp_597, Tmp_600, j, Tmp_612, gotRuntime, vslice_dummy_var_383, vslice_dummy_var_384, vslice_dummy_var_385, vslice_dummy_var_386);
    goto L353_last;

  L353_last:
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    Tmp_571 := j;
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    havoc Tmp_612;
    pResDesc := Tmp_612 + Tmp_571 * 380;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L370;

  L370:
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} gotRuntime != 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} gotMemory != 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} gotInt == 0;
    goto L371;

  L371:
    j := j + 1;
    goto L371_dummy;

  L371_dummy:
    assume false;
    return;

  anon159_Then:
    assume {:partition} gotInt != 0;
    goto L354;

  L354:
    listNum := listNum + 1;
    goto L354_dummy;

  L354_dummy:
    assume false;
    return;

  anon158_Then:
    assume {:partition} gotMemory == 0;
    goto L371;

  anon157_Then:
    assume {:partition} gotRuntime == 0;
    goto L371;

  anon191_Then:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    gotRuntime := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_597 := strConst__li2bpl182;
    call {:si_unique_call 1367} vslice_dummy_var_385 := CyyDbgPrintEx(12, Tmp_597);
    goto L370;

  anon156_Then:
    gotMemory := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_600 := strConst__li2bpl183;
    call {:si_unique_call 1368} vslice_dummy_var_386 := CyyDbgPrintEx(12, Tmp_600);
    goto L370;

  anon192_Then:
    gotInt := 1;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_566 := strConst__li2bpl181;
    call {:si_unique_call 1369} vslice_dummy_var_384 := CyyDbgPrintEx(12, Tmp_566);
    goto L370;

  anon205_Then:
    goto L370;

  anon204_Then:
    Tmp_573 := strConst__li2bpl162;
    call {:si_unique_call 1370} vslice_dummy_var_383 := CyyDbgPrintEx(12, Tmp_573);
    goto L370;

  anon155_Then:
    goto L354;

  anon154_Then:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_562 := strConst__li2bpl3;
    call {:si_unique_call 1371} vslice_dummy_var_387 := CyyDbgPrintEx(9, Tmp_562);
    call {:si_unique_call 1372} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1373} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := 0;
    goto L1;

  anon152_Then:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto L338;

  anon153_Then:
    Tmp_586 := strConst__li2bpl163;
    call {:si_unique_call 1374} vslice_dummy_var_388 := CyyDbgPrintEx(12, Tmp_586);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    havoc status_21;
    Tmp_559 := strConst__li2bpl3;
    call {:si_unique_call 1375} vslice_dummy_var_389 := CyyDbgPrintEx(9, Tmp_559);
    call {:si_unique_call 1376} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1377} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := status_21;
    goto L1;

  anon151_Then:
    assume {:partition} status_21 != 259;
    goto L330;

  anon203_Then:
    assume {:partition} pResFiltEvent == 0;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_602 := strConst__li2bpl3;
    call {:si_unique_call 1378} vslice_dummy_var_390 := CyyDbgPrintEx(9, Tmp_602);
    call {:si_unique_call 1379} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1380} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := -1073741670;
    goto L1;

  anon177_Then:
    Tmp_578 := strConst__li2bpl154;
    call {:si_unique_call 1381} vslice_dummy_var_378 := CyyDbgPrintEx(12, Tmp_578);
    goto L280;

  anon178_Then:
    Tmp_605 := strConst__li2bpl164;
    call {:si_unique_call 1382} vslice_dummy_var_374 := CyyDbgPrintEx(12, Tmp_605);
    call {:si_unique_call 1383} sdv_506 := ExAllocatePoolWithTag(0, 16, -797345469);
    pQueryCapsEvent := sdv_506;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} pQueryCapsEvent != 0;
    call {:si_unique_call 1384} KeInitializeEvent(pQueryCapsEvent, 1, 0);
    call {:si_unique_call 1385} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_4);
    call {:si_unique_call 1386} sdv_IoSetCompletionRoutine(PIrp_4, li2bplFunctionConstant218, pQueryCapsEvent, 1, 1, 1);
    call {:si_unique_call 1387} status_21 := sdv_IoCallDriver(pLowerDevObj_5, PIrp_4);
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:partition} status_21 == 259;
    call {:si_unique_call 1388} vslice_dummy_var_337 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L447;

  L447:
    call {:si_unique_call 1389} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    havoc status_21;
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto L472;

  L472:
    Tmp_560 := strConst__li2bpl3;
    call {:si_unique_call 1390} vslice_dummy_var_376 := CyyDbgPrintEx(9, Tmp_560);
    call {:si_unique_call 1391} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1392} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := status_21;
    goto L1;

  anon202_Then:
    Tmp_599 := strConst__li2bpl165;
    call {:si_unique_call 1393} vslice_dummy_var_375 := CyyDbgPrintEx(12, Tmp_599);
    call {:si_unique_call 1394} pIrpStack_4 := sdv_IoGetCurrentIrpStackLocation(PIrp_4);
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    havoc pDevCaps;
    cap_1 := 2;
    goto L465;

  L465:
    call {:si_unique_call 1395} Tmp_553, cap_1, Tmp_589, Tmp_590, Tmp_628 := CyyPnpDispatch_loop_L465(Tmp_553, pDevExt_16, cap_1, Tmp_589, Tmp_590, pDevCaps, Tmp_628);
    goto L465_last;

  L465_last:
    assume {:CounterLoop 5} {:Counter "cap_1"} true;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:partition} 7 > cap_1;
    Tmp_628 := cap_1;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc Tmp_590;
    Tmp_553 := cap_1;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    havoc Tmp_589;
    assume {:nonnull} Tmp_589 != 0;
    assume Tmp_589 > 0;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    Mem_T.INT4[Tmp_590 + Tmp_628 * 4] := Mem_T.INT4[Tmp_589 + Tmp_553 * 4];
    cap_1 := cap_1 + 1;
    goto anon161_Else_dummy;

  anon161_Else_dummy:
    assume false;
    return;

  anon161_Then:
    assume {:partition} cap_1 >= 7;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc Tmp_622;
    assume {:nonnull} Tmp_622 != 0;
    assume Tmp_622 > 0;
    Mem_T.INT4[Tmp_622] := 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc Tmp_556;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    Mem_T.INT4[Tmp_556 + 1 * 4] := 1;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto L472;

  anon160_Then:
    assume {:partition} status_21 != 259;
    goto L447;

  anon201_Then:
    assume {:partition} pQueryCapsEvent == 0;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_614 := strConst__li2bpl3;
    call {:si_unique_call 1396} vslice_dummy_var_377 := CyyDbgPrintEx(9, Tmp_614);
    call {:si_unique_call 1397} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1398} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := -1073741670;
    goto L1;

  anon179_Then:
    Tmp_576 := strConst__li2bpl153;
    call {:si_unique_call 1399} vslice_dummy_var_373 := CyyDbgPrintEx(12, Tmp_576);
    goto L280;

  anon180_Then:
    Tmp_625 := strConst__li2bpl152;
    call {:si_unique_call 1400} vslice_dummy_var_366 := CyyDbgPrintEx(12, Tmp_625);
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    Tmp_561 := strConst__li2bpl171;
    call {:si_unique_call 1401} vslice_dummy_var_371 := CyyDbgPrintEx(12, Tmp_561);
    goto L513;

  L513:
    call {:si_unique_call 1402} sdv_IoSkipCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1403} status_21 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    Tmp_551 := status_21;
    goto L1;

  anon187_Then:
    Tmp_570 := strConst__li2bpl166;
    call {:si_unique_call 1404} vslice_dummy_var_372 := CyyDbgPrintEx(12, Tmp_570);
    goto L513;

  anon188_Then:
    Tmp_588 := strConst__li2bpl170;
    call {:si_unique_call 1405} vslice_dummy_var_370 := CyyDbgPrintEx(12, Tmp_588);
    goto L513;

  anon189_Then:
    Tmp_574 := strConst__li2bpl169;
    call {:si_unique_call 1406} vslice_dummy_var_369 := CyyDbgPrintEx(12, Tmp_574);
    goto L513;

  anon190_Then:
    Tmp_595 := strConst__li2bpl168;
    call {:si_unique_call 1407} vslice_dummy_var_368 := CyyDbgPrintEx(12, Tmp_595);
    goto L513;

  anon162_Then:
    Tmp_591 := strConst__li2bpl167;
    call {:si_unique_call 1408} vslice_dummy_var_367 := CyyDbgPrintEx(12, Tmp_591);
    goto L513;

  anon181_Then:
    Tmp_603 := strConst__li2bpl151;
    call {:si_unique_call 1409} vslice_dummy_var_364 := CyyDbgPrintEx(12, Tmp_603);
    Tmp_623 := strConst__li2bpl160;
    call {:si_unique_call 1410} vslice_dummy_var_365 := CyyDbgPrintEx(12, Tmp_623);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1411} CyySetDeviceFlags(pDevExt_16, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_16), 2, 0);
    goto L530;

  L530:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1412} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_4);
    call {:si_unique_call 1413} Tmp_551 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    goto L1;

  anon163_Then:
    goto L530;

  anon182_Then:
    Tmp_601 := strConst__li2bpl172;
    call {:si_unique_call 1414} vslice_dummy_var_360 := CyyDbgPrintEx(12, Tmp_601);
    Tmp_607 := strConst__li2bpl160;
    call {:si_unique_call 1415} vslice_dummy_var_361 := CyyDbgPrintEx(12, Tmp_607);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    call {:si_unique_call 1416} sdv_IoSkipCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1417} Tmp_551 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    goto L1;

  anon164_Then:
    call {:si_unique_call 1418} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    call {:si_unique_call 1419} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_624 := strConst__li2bpl177;
    call {:si_unique_call 1420} vslice_dummy_var_362 := CyyDbgPrintEx(12, Tmp_624);
    Tmp_577 := strConst__li2bpl3;
    call {:si_unique_call 1421} vslice_dummy_var_363 := CyyDbgPrintEx(9, Tmp_577);
    call {:si_unique_call 1422} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1423} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := 17;
    goto L1;

  anon165_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1424} CyySetDeviceFlags(pDevExt_16, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_16), 2, 1);
    call {:si_unique_call 1425} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1426} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_4);
    call {:si_unique_call 1427} Tmp_551 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    goto L1;

  anon183_Then:
    Tmp_568 := strConst__li2bpl173;
    call {:si_unique_call 1428} vslice_dummy_var_356 := CyyDbgPrintEx(12, Tmp_568);
    Tmp_611 := strConst__li2bpl160;
    call {:si_unique_call 1429} vslice_dummy_var_357 := CyyDbgPrintEx(12, Tmp_611);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1430} CyySetDeviceFlags(pDevExt_16, Flags__CYY_DEVICE_EXTENSION(pDevExt_16), 2, 1);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1431} CyySetDeviceFlags(pDevExt_16, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_16), 4, 1);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1432} CyySetDeviceFlags(pDevExt_16, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_16), 2, 0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1433} Tmp_579 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_1257;
    Mem_T.INT4[Tmp_579] := vslice_dummy_var_1257;
    call {:si_unique_call 1434} vslice_dummy_var_358 := sdv_InterlockedDecrement(Tmp_579);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1435} Tmp_579 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_1258;
    Mem_T.INT4[Tmp_579] := vslice_dummy_var_1258;
    call {:si_unique_call 1436} sdv_469 := sdv_InterlockedDecrement(Tmp_579);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    pendingIRPs := sdv_469;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} pendingIRPs != 0;
    call {:si_unique_call 1437} vslice_dummy_var_338 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L617;

  L617:
    call {:si_unique_call 1438} Tmp_579 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_1259;
    Mem_T.INT4[Tmp_579] := vslice_dummy_var_1259;
    call {:si_unique_call 1439} vslice_dummy_var_359 := sdv_InterlockedIncrement(Tmp_579);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_16)], 1) != 0;
    call {:si_unique_call 1440} CyyReleaseResources(pDevExt_16);
    goto L624;

  L624:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1441} sdv_IoSkipCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1442} Tmp_551 := sdv_IoCallDriver(pLowerDevObj_5, PIrp_4);
    goto L1;

  anon166_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(pDevExt_16)], 1) == 0;
    goto L624;

  anon200_Then:
    assume {:partition} pendingIRPs == 0;
    goto L617;

  anon184_Then:
    Tmp_620 := strConst__li2bpl150;
    call {:si_unique_call 1443} vslice_dummy_var_354 := CyyDbgPrintEx(12, Tmp_620);
    Tmp_616 := strConst__li2bpl160;
    call {:si_unique_call 1444} vslice_dummy_var_355 := CyyDbgPrintEx(12, Tmp_616);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1445} CyySetDeviceFlags(pDevExt_16, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_16), 1, 0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1446} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_4);
    call {:si_unique_call 1447} Tmp_551 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    goto L1;

  anon185_Then:
    Tmp_593 := strConst__li2bpl174;
    call {:si_unique_call 1448} vslice_dummy_var_351 := CyyDbgPrintEx(12, Tmp_593);
    Tmp_584 := strConst__li2bpl160;
    call {:si_unique_call 1449} vslice_dummy_var_352 := CyyDbgPrintEx(12, Tmp_584);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1450} CyySetDeviceFlags(pDevExt_16, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_16), 1, 1);
    call {:si_unique_call 1451} CyyKillPendingIrps(PDevObj_14);
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1452} Tmp_579 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_1260;
    Mem_T.INT4[Tmp_579] := vslice_dummy_var_1260;
    call {:si_unique_call 1453} vslice_dummy_var_353 := sdv_InterlockedDecrement(Tmp_579);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1454} Tmp_579 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_1261;
    Mem_T.INT4[Tmp_579] := vslice_dummy_var_1261;
    call {:si_unique_call 1455} sdv_551 := sdv_InterlockedDecrement(Tmp_579);
    assume {:nonnull} Tmp_579 != 0;
    assume Tmp_579 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    pendingIRPs_2 := sdv_551;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:partition} pendingIRPs_2 != 0;
    call {:si_unique_call 1456} vslice_dummy_var_339 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L671;

  L671:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_16)], 8) != 0;
    goto L678;

  L678:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1457} sdv_IoSkipCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1458} status_21 := sdv_IoCallDriver(pLowerDevObj_5, PIrp_4);
    call {:si_unique_call 1459} vslice_dummy_var_340 := CyyRemoveDevObj(PDevObj_14);
    goto anon198_Then, anon198_Else;

  anon198_Else:
    assume {:partition} yogi_error != 1;
    Tmp_551 := status_21;
    goto L1;

  anon198_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon167_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_16)], 8) == 0;
    call {:si_unique_call 1460} CyyDisableInterfacesResources(PDevObj_14, 1);
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:partition} yogi_error != 1;
    goto L678;

  anon199_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon197_Then:
    assume {:partition} pendingIRPs_2 == 0;
    goto L671;

  anon196_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon186_Then:
    Tmp_610 := strConst__li2bpl175;
    call {:si_unique_call 1461} vslice_dummy_var_347 := CyyDbgPrintEx(12, Tmp_610);
    Tmp_558 := strConst__li2bpl160;
    call {:si_unique_call 1462} vslice_dummy_var_348 := CyyDbgPrintEx(12, Tmp_558);
    call {:si_unique_call 1463} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    call {:si_unique_call 1464} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_592 := strConst__li2bpl177;
    call {:si_unique_call 1465} vslice_dummy_var_349 := CyyDbgPrintEx(12, Tmp_592);
    Tmp_555 := strConst__li2bpl3;
    call {:si_unique_call 1466} vslice_dummy_var_350 := CyyDbgPrintEx(9, Tmp_555);
    call {:si_unique_call 1467} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1468} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := 17;
    goto L1;

  anon168_Then:
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1469} CyySetDeviceFlags(pDevExt_16, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_16), 1, 1);
    call {:si_unique_call 1470} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1471} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_4);
    call {:si_unique_call 1472} Tmp_551 := CyyIoCallDriver(pDevExt_16, pLowerDevObj_5, PIrp_4);
    goto L1;

  anon144_Then:
    Tmp_619 := strConst__li2bpl176;
    call {:si_unique_call 1473} vslice_dummy_var_345 := CyyDbgPrintEx(12, Tmp_619);
    call {:si_unique_call 1474} MmLockPagableSectionByHandle(0);
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    call {:si_unique_call 1475} status_21 := CyyStartDevice(PDevObj_14, PIrp_4);
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1476} vslice_dummy_var_341 := CyyGotoPowerState(PDevObj_14, pDevExt_16, 4);
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1477} MmUnlockPagableImageSection(0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_617 := strConst__li2bpl3;
    call {:si_unique_call 1478} vslice_dummy_var_346 := CyyDbgPrintEx(9, Tmp_617);
    call {:si_unique_call 1479} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1480} CyyIRPEpilogue(pDevExt_16);
    Tmp_551 := status_21;
    goto L1;

  anon195_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon194_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon193_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "SLIC_sdv_do_paged_code_check_entry"} {:osmodel} SLIC_sdv_do_paged_code_check_entry(actual_caller: int);
  modifies yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_sdv_do_paged_code_check_entry"} {:osmodel} SLIC_sdv_do_paged_code_check_entry(actual_caller: int)
{
  var {:pointer} caller: int;

  anon0:
    caller := actual_caller;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} 2 <= sdv_irql_current;
    call {:si_unique_call 1481} SLIC_ABORT_1_0(caller);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon5_Then:
    assume {:partition} sdv_irql_current < 2;
    goto L2;
}



procedure {:origName "_sdv_init21"} _sdv_init21();
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init21"} _sdv_init21()
{

  anon0:
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_ABORT_1_0"} SLIC_ABORT_1_0(actual_caller_1: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ABORT_1_0"} SLIC_ABORT_1_0(actual_caller_1: int)
{
  var {:pointer} caller_1: int;

  anon0:
    caller_1 := actual_caller_1;
    call {:si_unique_call 1482} SLIC_ERROR_ROUTINE(strConst__li2bpl186);
    return;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "CyyClrRTS"} CyyClrRTS(actual_Context_3: int) returns (Tmp_629: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_629 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyClrRTS"} CyyClrRTS(actual_Context_3: int) returns (Tmp_629: int)
{
  var {:pointer} chip_2: int;
  var {:pointer} Tmp_630: int;
  var {:scalar} Tmp_632: int;
  var {:pointer} Extension_9: int;
  var {:pointer} Context_3: int;
  var vslice_dummy_var_405: int;

  anon0:
    Context_3 := actual_Context_3;
    call {:si_unique_call 1483} Tmp_630 := __HAVOC_malloc(124);
    Extension_9 := Context_3;
    assume {:nonnull} Extension_9 != 0;
    assume Extension_9 > 0;
    havoc chip_2;
    assume {:nonnull} Extension_9 != 0;
    assume Extension_9 > 0;
    assume {:nonnull} Extension_9 != 0;
    assume Extension_9 > 0;
    havoc Tmp_632;
    Tmp_630 := strConst__li2bpl187;
    call {:si_unique_call 1484} vslice_dummy_var_405 := CyyDbgPrintEx(13, Tmp_630);
    assume {:nonnull} Extension_9 != 0;
    assume Extension_9 > 0;
    Tmp_629 := 0;
    return;
}



procedure {:origName "CyyClrDTR"} CyyClrDTR(actual_Context_4: int) returns (Tmp_636: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_636 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyClrDTR"} CyyClrDTR(actual_Context_4: int) returns (Tmp_636: int)
{
  var {:pointer} Tmp_638: int;
  var {:pointer} chip_3: int;
  var {:scalar} Tmp_640: int;
  var {:pointer} Extension_10: int;
  var {:pointer} Context_4: int;
  var vslice_dummy_var_406: int;

  anon0:
    Context_4 := actual_Context_4;
    call {:si_unique_call 1485} Tmp_638 := __HAVOC_malloc(124);
    Extension_10 := Context_4;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    havoc chip_3;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    havoc Tmp_640;
    Tmp_638 := strConst__li2bpl188;
    call {:si_unique_call 1486} vslice_dummy_var_406 := CyyDbgPrintEx(13, Tmp_638);
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    Tmp_636 := 0;
    return;
}



procedure {:origName "_sdv_init14"} _sdv_init14();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init14"} _sdv_init14()
{
  var vslice_dummy_var_407: int;

  anon0:
    call {:si_unique_call 1487} vslice_dummy_var_407 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyStartPurge"} CyyStartPurge(actual_Extension_11: int) returns (Tmp_645: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyStartPurge"} CyyStartPurge(actual_Extension_11: int) returns (Tmp_645: int)
{
  var {:pointer} Tmp_646: int;
  var {:pointer} Tmp_647: int;
  var {:scalar} Mask_2: int;
  var {:pointer} Tmp_648: int;
  var {:scalar} OldIrql_5: int;
  var {:pointer} NewIrp_1: int;
  var {:pointer} Tmp_649: int;
  var {:pointer} Tmp_650: int;
  var {:pointer} Extension_11: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_1262: int;
  var vslice_dummy_var_1263: int;
  var vslice_dummy_var_1264: int;

  anon0:
    call {:si_unique_call 1488} NewIrp_1 := __HAVOC_malloc(4);
    Extension_11 := actual_Extension_11;
    goto L5;

  L5:
    call {:si_unique_call 1489} Tmp_646, Tmp_647, Mask_2, Tmp_648, OldIrql_5, Tmp_649, Tmp_650, vslice_dummy_var_408 := CyyStartPurge_loop_L5(Tmp_646, Tmp_647, Mask_2, Tmp_648, OldIrql_5, NewIrp_1, Tmp_649, Tmp_650, Extension_11, vslice_dummy_var_408);
    goto L5_last;

  L5_last:
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    havoc Tmp_650;
    assume {:nonnull} Tmp_650 != 0;
    assume Tmp_650 > 0;
    havoc Tmp_649;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    Mask_2 := Mem_T.INT4[Tmp_649];
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(Mask_2, 1) != 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    havoc vslice_dummy_var_1262;
    call {:si_unique_call 1490} CyyKillAllReadsOrWrites(vslice_dummy_var_1262, WriteQueue__CYY_DEVICE_EXTENSION(Extension_11), CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_11));
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    havoc vslice_dummy_var_1263;
    call {:si_unique_call 1491} CyyKillAllReadsOrWrites(vslice_dummy_var_1263, WriteQueue__CYY_DEVICE_EXTENSION(Extension_11), CurrentXoffIrp__CYY_DEVICE_EXTENSION(Extension_11));
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L7;

  L7:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} BAND(Mask_2, 2) != 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    havoc vslice_dummy_var_1264;
    call {:si_unique_call 1492} CyyKillAllReadsOrWrites(vslice_dummy_var_1264, ReadQueue__CYY_DEVICE_EXTENSION(Extension_11), CurrentReadIrp__CYY_DEVICE_EXTENSION(Extension_11));
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L14;

  L14:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} BAND(Mask_2, 8) != 0;
    call {:si_unique_call 1493} Tmp_648 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_648 != 0;
    assume Tmp_648 > 0;
    Mem_T.INT4[Tmp_648] := OldIrql_5;
    call {:si_unique_call 1494} sdv_KeAcquireSpinLock(0, Tmp_648);
    assume {:nonnull} Tmp_648 != 0;
    assume Tmp_648 > 0;
    OldIrql_5 := Mem_T.INT4[Tmp_648];
    call {:si_unique_call 1495} vslice_dummy_var_408 := KeSynchronizeExecution(0, li2bplFunctionConstant437, 0);
    call {:si_unique_call 1496} sdv_KeReleaseSpinLock(0, OldIrql_5);
    goto L18;

  L18:
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    havoc Tmp_647;
    assume {:nonnull} Tmp_647 != 0;
    assume Tmp_647 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    havoc Tmp_646;
    assume {:nonnull} Tmp_646 != 0;
    assume Tmp_646 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    call {:si_unique_call 1497} CyyGetNextIrp(CurrentPurgeIrp__CYY_DEVICE_EXTENSION(Extension_11), PurgeQueue__CYY_DEVICE_EXTENSION(Extension_11), NewIrp_1, 1, Extension_11);
    assume {:nonnull} NewIrp_1 != 0;
    assume NewIrp_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    Tmp_645 := 0;
    goto LM2;

  LM2:
    return;

  anon17_Then:
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon16_Then:
    assume {:partition} BAND(Mask_2, 8) == 0;
    goto L18;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon15_Then:
    assume {:partition} BAND(Mask_2, 2) == 0;
    goto L14;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon19_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    assume {:partition} BAND(Mask_2, 1) == 0;
    goto L7;
}



procedure {:origName "_sdv_init16"} _sdv_init16();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init16"} _sdv_init16()
{
  var vslice_dummy_var_409: int;

  anon0:
    call {:si_unique_call 1498} vslice_dummy_var_409 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyKillAllStalled"} CyyKillAllStalled(actual_PDevObj_15: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyKillAllStalled"} CyyKillAllStalled(actual_PDevObj_15: int)
{
  var {:pointer} currentLastIrp: int;
  var {:pointer} Tmp_653: int;
  var {:scalar} cancelIrql: int;
  var {:pointer} pDevExt_17: int;
  var {:scalar} sdv_570: int;
  var {:pointer} sdv_571: int;
  var {:scalar} cancelRoutine_1: int;
  var {:pointer} PDevObj_15: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_1265: int;

  anon0:
    call {:si_unique_call 1499} vslice_dummy_var_410 := __HAVOC_malloc(4);
    PDevObj_15 := actual_PDevObj_15;
    assume {:nonnull} PDevObj_15 != 0;
    assume PDevObj_15 > 0;
    havoc pDevExt_17;
    call {:si_unique_call 1500} Tmp_653 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    Mem_T.INT4[Tmp_653] := cancelIrql;
    call {:si_unique_call 1501} IoAcquireCancelSpinLock(Tmp_653);
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    cancelIrql := Mem_T.INT4[Tmp_653];
    goto L10;

  L10:
    call {:si_unique_call 1502} currentLastIrp, Tmp_653, cancelIrql, sdv_570, sdv_571, cancelRoutine_1, vslice_dummy_var_411, vslice_dummy_var_412, vslice_dummy_var_413, vslice_dummy_var_414, vslice_dummy_var_415 := CyyKillAllStalled_loop_L10(currentLastIrp, Tmp_653, cancelIrql, pDevExt_17, sdv_570, sdv_571, cancelRoutine_1, PDevObj_15, vslice_dummy_var_411, vslice_dummy_var_412, vslice_dummy_var_413, vslice_dummy_var_414, vslice_dummy_var_415);
    goto L10_last;

  L10_last:
    call {:si_unique_call 1518} sdv_570 := sdv_IsListEmpty(0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_570 == 0;
    assume {:nonnull} pDevExt_17 != 0;
    assume pDevExt_17 > 0;
    havoc vslice_dummy_var_1265;
    call {:si_unique_call 1503} sdv_571 := sdv_containing_record(vslice_dummy_var_1265, 88);
    currentLastIrp := sdv_571;
    call {:si_unique_call 1504} vslice_dummy_var_411 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    cancelRoutine_1 := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(currentLastIrp)];
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(currentLastIrp)] := cancelIrql;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(currentLastIrp)] := 0;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 1505} CyyCancelCurrentWrite(PDevObj_15, currentLastIrp);
    goto L32;

  L32:
    call {:si_unique_call 1506} Tmp_653 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    Mem_T.INT4[Tmp_653] := cancelIrql;
    call {:si_unique_call 1507} IoAcquireCancelSpinLock(Tmp_653);
    assume {:nonnull} Tmp_653 != 0;
    assume Tmp_653 > 0;
    cancelIrql := Mem_T.INT4[Tmp_653];
    goto L32_dummy;

  L32_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant199;
    call {:si_unique_call 1508} CyyCancelCurrentXoff(PDevObj_15, currentLastIrp);
    goto L32;

  anon34_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant125;
    call {:si_unique_call 1509} CyyCancelImmediate(PDevObj_15, currentLastIrp);
    goto L32;

  anon33_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 1510} CyyCancelQueued(PDevObj_15, currentLastIrp);
    goto L32;

  anon32_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant179;
    call {:si_unique_call 1511} CyyCancelWait(PDevObj_15, currentLastIrp);
    goto L32;

  anon31_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 1512} CyyFilterCancelQueued(PDevObj_15, currentLastIrp);
    goto L32;

  anon30_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant321;
    call {:si_unique_call 1513} vslice_dummy_var_415 := CyyInternalIoControl(PDevObj_15, currentLastIrp);
    goto L32;

  anon29_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant325;
    call {:si_unique_call 1514} vslice_dummy_var_414 := CyyQueryInformationFile(PDevObj_15, currentLastIrp);
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon39_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon28_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant326;
    call {:si_unique_call 1515} vslice_dummy_var_413 := CyySetInformationFile(PDevObj_15, currentLastIrp);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon36_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant266;
    call {:si_unique_call 1516} vslice_dummy_var_412 := CyySystemControlDispatch(PDevObj_15, currentLastIrp);
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon37_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon27_Then:
    assume {:partition} sdv_570 != 0;
    call {:si_unique_call 1517} IoReleaseCancelSpinLock(cancelIrql);
    goto LM2;
}



procedure {:origName "CyyFilterIrps"} CyyFilterIrps(actual_PIrp_5: int, actual_PDevExt_6: int) returns (Tmp_655: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_655 == 0 || Tmp_655 == -1073741536 || Tmp_655 == 259 || Tmp_655 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyFilterIrps"} CyyFilterIrps(actual_PIrp_5: int, actual_PDevExt_6: int) returns (Tmp_655: int)
{
  var {:scalar} oldIrqlFlags: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} pIrpStack_5: int;
  var {:pointer} Tmp_656: int;
  var {:pointer} PIrp_5: int;
  var {:pointer} PDevExt_6: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;

  anon0:
    PIrp_5 := actual_PIrp_5;
    PDevExt_6 := actual_PDevExt_6;
    call {:si_unique_call 1519} pIrpStack_5 := sdv_IoGetCurrentIrpStackLocation(PIrp_5);
    call {:si_unique_call 1520} Tmp_656 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    Mem_T.INT4[Tmp_656] := oldIrqlFlags;
    call {:si_unique_call 1521} sdv_KeAcquireSpinLock(0, Tmp_656);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    oldIrqlFlags := Mem_T.INT4[Tmp_656];
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} Mem_T.INT4[DevicePNPAccept__CYY_DEVICE_EXTENSION(PDevExt_6)] != 0;
    goto L14;

  L14:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYY_DEVICE_EXTENSION(PDevExt_6)], 1) != 0;
    goto L16;

  L16:
    call {:si_unique_call 1522} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(pIrpStack_5)] == 27;
    Tmp_655 := 0;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(pIrpStack_5)] != 27;
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    Tmp_655 := -1073741738;
    goto L1;

  anon21_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYY_DEVICE_EXTENSION(PDevExt_6)], 1) == 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(PDevExt_6)], 4) == 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYY_DEVICE_EXTENSION(PDevExt_6)], 8) == 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYY_DEVICE_EXTENSION(PDevExt_6)], 2) != 0;
    call {:si_unique_call 1523} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(pIrpStack_5)] == 27;
    Tmp_655 := 0;
    goto L1;

  anon26_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(pIrpStack_5)] != 27;
    call {:si_unique_call 1524} Tmp_656 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    Mem_T.INT4[Tmp_656] := oldIrql_4;
    call {:si_unique_call 1525} IoAcquireCancelSpinLock(Tmp_656);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    oldIrql_4 := Mem_T.INT4[Tmp_656];
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 1526} IoReleaseCancelSpinLock(oldIrql_4);
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    Tmp_655 := -1073741536;
    goto L1;

  anon27_Then:
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    call {:si_unique_call 1527} sdv_IoMarkIrpPending(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PIrp_5 != 0;
    assume PIrp_5 > 0;
    call {:si_unique_call 1528} vslice_dummy_var_416 := sdv_InsertTailList(StalledIrpQueue__CYY_DEVICE_EXTENSION(PDevExt_6), ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(PIrp_5))));
    call {:si_unique_call 1529} vslice_dummy_var_417 := sdv_IoSetCancelRoutine(PIrp_5, li2bplFunctionConstant151);
    call {:si_unique_call 1530} IoReleaseCancelSpinLock(oldIrql_4);
    Tmp_655 := 259;
    goto L1;

  anon25_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYY_DEVICE_EXTENSION(PDevExt_6)], 2) == 0;
    call {:si_unique_call 1531} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    Tmp_655 := 0;
    goto L1;

  anon24_Then:
    assume {:partition} BAND(Mem_T.INT4[DevicePNPAccept__CYY_DEVICE_EXTENSION(PDevExt_6)], 8) != 0;
    goto L16;

  anon22_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(PDevExt_6)], 4) != 0;
    goto L16;

  anon19_Then:
    assume {:partition} Mem_T.INT4[DevicePNPAccept__CYY_DEVICE_EXTENSION(PDevExt_6)] == 0;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(PDevExt_6)], 4) == 0;
    call {:si_unique_call 1532} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    Tmp_655 := 0;
    goto L1;

  anon20_Then:
    assume {:partition} BAND(Mem_T.INT4[Flags__CYY_DEVICE_EXTENSION(PDevExt_6)], 4) != 0;
    goto L14;
}



procedure {:origName "CyyPoCallDriver"} CyyPoCallDriver(actual_PDevExt_7: int, actual_PDevObj_16: int, actual_PIrp_6: int) returns (Tmp_657: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_657 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyPoCallDriver"} CyyPoCallDriver(actual_PDevExt_7: int, actual_PDevObj_16: int, actual_PIrp_6: int) returns (Tmp_657: int)
{
  var {:scalar} status_22: int;
  var {:pointer} PDevExt_7: int;
  var {:pointer} PIrp_6: int;

  anon0:
    PDevExt_7 := actual_PDevExt_7;
    PIrp_6 := actual_PIrp_6;
    call {:si_unique_call 1533} status_22 := PoCallDriver(0, PIrp_6);
    call {:si_unique_call 1534} CyyIRPEpilogue(PDevExt_7);
    Tmp_657 := status_22;
    return;
}



procedure {:origName "CyyUnstallIrps"} CyyUnstallIrps(actual_PDevExt_8: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyUnstallIrps"} CyyUnstallIrps(actual_PDevExt_8: int)
{
  var {:pointer} Tmp_659: int;
  var {:pointer} Tmp_660: int;
  var {:pointer} sdv_579: int;
  var {:pointer} Tmp_661: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} pIrpStack_6: int;
  var {:scalar} Tmp_663: int;
  var {:pointer} pIrp_1: int;
  var {:pointer} Tmp_664: int;
  var {:pointer} pDevObj_2: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} pDrvObj_1: int;
  var {:pointer} pIrpLink: int;
  var {:pointer} PDevExt_8: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_422: int;
  var vslice_dummy_var_423: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_426: int;
  var vslice_dummy_var_427: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_440: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_457: int;
  var vslice_dummy_var_458: int;
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_460: int;
  var vslice_dummy_var_461: int;
  var vslice_dummy_var_462: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_464: int;
  var vslice_dummy_var_465: int;
  var vslice_dummy_var_466: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;

  anon0:
    call {:si_unique_call 1535} vslice_dummy_var_418 := __HAVOC_malloc(4);
    PDevExt_8 := actual_PDevExt_8;
    call {:si_unique_call 1536} Tmp_659 := __HAVOC_malloc(124);
    call {:si_unique_call 1537} Tmp_661 := __HAVOC_malloc(112);
    call {:si_unique_call 1538} Tmp_664 := __HAVOC_malloc(84);
    call {:si_unique_call 1539} Tmp_665 := __HAVOC_malloc(68);
    Tmp_664 := strConst__li2bpl189;
    call {:si_unique_call 1540} vslice_dummy_var_419 := CyyDbgPrintEx(2, Tmp_664);
    call {:si_unique_call 1541} Tmp_660 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    Mem_T.INT4[Tmp_660] := oldIrql_5;
    call {:si_unique_call 1542} IoAcquireCancelSpinLock(Tmp_660);
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_660];
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc pIrpLink;
    goto L16;

  L16:
    call {:si_unique_call 1543} Tmp_659, Tmp_660, sdv_579, Tmp_661, oldIrql_5, pIrpStack_6, Tmp_663, pIrp_1, pDevObj_2, pDrvObj_1, pIrpLink, vslice_dummy_var_420, vslice_dummy_var_421, vslice_dummy_var_422, vslice_dummy_var_423, vslice_dummy_var_424, vslice_dummy_var_425, vslice_dummy_var_426, vslice_dummy_var_427, vslice_dummy_var_428, vslice_dummy_var_429, vslice_dummy_var_430, vslice_dummy_var_431, vslice_dummy_var_432, vslice_dummy_var_433, vslice_dummy_var_434, vslice_dummy_var_435, vslice_dummy_var_436, vslice_dummy_var_437, vslice_dummy_var_438, vslice_dummy_var_439, vslice_dummy_var_440, vslice_dummy_var_441, vslice_dummy_var_442, vslice_dummy_var_443, vslice_dummy_var_444, vslice_dummy_var_445, vslice_dummy_var_446, vslice_dummy_var_447, vslice_dummy_var_448, vslice_dummy_var_449, vslice_dummy_var_450, vslice_dummy_var_451, vslice_dummy_var_452, vslice_dummy_var_453, vslice_dummy_var_454, vslice_dummy_var_455, vslice_dummy_var_456, vslice_dummy_var_457, vslice_dummy_var_458, vslice_dummy_var_459, vslice_dummy_var_460, vslice_dummy_var_461, vslice_dummy_var_462, vslice_dummy_var_463, vslice_dummy_var_464, vslice_dummy_var_465, vslice_dummy_var_466, vslice_dummy_var_467, vslice_dummy_var_468, vslice_dummy_var_469, vslice_dummy_var_470, vslice_dummy_var_471, vslice_dummy_var_472, vslice_dummy_var_473, vslice_dummy_var_474, vslice_dummy_var_475, vslice_dummy_var_476, vslice_dummy_var_477, vslice_dummy_var_478, vslice_dummy_var_479, vslice_dummy_var_480, vslice_dummy_var_481, vslice_dummy_var_482, vslice_dummy_var_483, vslice_dummy_var_484, vslice_dummy_var_485, vslice_dummy_var_486 := CyyUnstallIrps_loop_L16(Tmp_659, Tmp_660, sdv_579, Tmp_661, oldIrql_5, pIrpStack_6, Tmp_663, pIrp_1, pDevObj_2, pDrvObj_1, pIrpLink, PDevExt_8, vslice_dummy_var_420, vslice_dummy_var_421, vslice_dummy_var_422, vslice_dummy_var_423, vslice_dummy_var_424, vslice_dummy_var_425, vslice_dummy_var_426, vslice_dummy_var_427, vslice_dummy_var_428, vslice_dummy_var_429, vslice_dummy_var_430, vslice_dummy_var_431, vslice_dummy_var_432, vslice_dummy_var_433, vslice_dummy_var_434, vslice_dummy_var_435, vslice_dummy_var_436, vslice_dummy_var_437, vslice_dummy_var_438, vslice_dummy_var_439, vslice_dummy_var_440, vslice_dummy_var_441, vslice_dummy_var_442, vslice_dummy_var_443, vslice_dummy_var_444, vslice_dummy_var_445, vslice_dummy_var_446, vslice_dummy_var_447, vslice_dummy_var_448, vslice_dummy_var_449, vslice_dummy_var_450, vslice_dummy_var_451, vslice_dummy_var_452, vslice_dummy_var_453, vslice_dummy_var_454, vslice_dummy_var_455, vslice_dummy_var_456, vslice_dummy_var_457, vslice_dummy_var_458, vslice_dummy_var_459, vslice_dummy_var_460, vslice_dummy_var_461, vslice_dummy_var_462, vslice_dummy_var_463, vslice_dummy_var_464, vslice_dummy_var_465, vslice_dummy_var_466, vslice_dummy_var_467, vslice_dummy_var_468, vslice_dummy_var_469, vslice_dummy_var_470, vslice_dummy_var_471, vslice_dummy_var_472, vslice_dummy_var_473, vslice_dummy_var_474, vslice_dummy_var_475, vslice_dummy_var_476, vslice_dummy_var_477, vslice_dummy_var_478, vslice_dummy_var_479, vslice_dummy_var_480, vslice_dummy_var_481, vslice_dummy_var_482, vslice_dummy_var_483, vslice_dummy_var_484, vslice_dummy_var_485, vslice_dummy_var_486);
    goto L16_last;

  L16_last:
    goto anon245_Then, anon245_Else;

  anon245_Else:
    call {:si_unique_call 1544} sdv_579 := sdv_containing_record(pIrpLink, 88);
    pIrp_1 := sdv_579;
    call {:si_unique_call 1545} vslice_dummy_var_420 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1546} pIrpStack_6 := sdv_IoGetCurrentIrpStackLocation(pIrp_1);
    assume {:nonnull} pIrpStack_6 != 0;
    assume pIrpStack_6 > 0;
    havoc pDevObj_2;
    assume {:nonnull} pDevObj_2 != 0;
    assume pDevObj_2 > 0;
    havoc pDrvObj_1;
    call {:si_unique_call 1547} vslice_dummy_var_421 := sdv_IoSetCancelRoutine(pIrp_1, 0);
    call {:si_unique_call 1548} IoReleaseCancelSpinLock(oldIrql_5);
    Tmp_659 := strConst__li2bpl190;
    call {:si_unique_call 1549} vslice_dummy_var_422 := CyyDbgPrintEx(12, Tmp_659);
    assume {:nonnull} pIrpStack_6 != 0;
    assume pIrpStack_6 > 0;
    Tmp_663 := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(pIrpStack_6)];
    assume {:nonnull} pDrvObj_1 != 0;
    assume pDrvObj_1 > 0;
    havoc Tmp_661;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume Tmp_663 != 27;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume Tmp_663 != 26;
    goto anon282_Then, anon282_Else;

  anon282_Else:
    assume Tmp_663 != 25;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    assume Tmp_663 != 24;
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume Tmp_663 != 23;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume Tmp_663 != 22;
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume Tmp_663 != 21;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume Tmp_663 != 20;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume Tmp_663 != 19;
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume Tmp_663 != 18;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume Tmp_663 != 17;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume Tmp_663 != 16;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume Tmp_663 != 15;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume Tmp_663 != 14;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume Tmp_663 != 13;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume Tmp_663 != 12;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume Tmp_663 != 11;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume Tmp_663 != 10;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume Tmp_663 != 9;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume Tmp_663 != 8;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume Tmp_663 != 7;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume Tmp_663 != 6;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume Tmp_663 != 5;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume Tmp_663 != 4;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume Tmp_663 != 3;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume Tmp_663 != 2;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume Tmp_663 != 1;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume false;
    return;

  anon366_Then:
    assume Tmp_663 == 0;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661] == 0;
    goto L45;

  L45:
    call {:si_unique_call 1550} Tmp_660 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    Mem_T.INT4[Tmp_660] := oldIrql_5;
    call {:si_unique_call 1551} IoAcquireCancelSpinLock(Tmp_660);
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    oldIrql_5 := Mem_T.INT4[Tmp_660];
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc pIrpLink;
    goto L45_dummy;

  L45_dummy:
    assume false;
    return;

  anon361_Then:
    assume Tmp_663 == 1;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    goto anon274_Then, anon274_Else;

  anon274_Else:
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 1 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1552} vslice_dummy_var_486 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon275_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 1 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1553} vslice_dummy_var_485 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon365_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon274_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 1 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1554} vslice_dummy_var_484 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon364_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon362_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 1 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1555} vslice_dummy_var_483 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon363_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon360_Then:
    assume Tmp_663 == 2;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 2 * 4] == 0;
    goto L45;

  anon359_Then:
    assume Tmp_663 == 3;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 3 * 4] == 0;
    goto L45;

  anon358_Then:
    assume Tmp_663 == 4;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 4 * 4] == 0;
    goto L45;

  anon356_Then:
    assume Tmp_663 == 5;
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 5 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1556} vslice_dummy_var_482 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon357_Then, anon357_Else;

  anon357_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon357_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon354_Then:
    assume Tmp_663 == 6;
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 6 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1557} vslice_dummy_var_481 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon355_Then, anon355_Else;

  anon355_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon355_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon349_Then:
    assume Tmp_663 == 7;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    goto anon272_Then, anon272_Else;

  anon272_Else:
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 7 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1558} vslice_dummy_var_480 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon273_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 7 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1559} vslice_dummy_var_479 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon353_Then, anon353_Else;

  anon353_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon353_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon272_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 7 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1560} vslice_dummy_var_478 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon352_Then, anon352_Else;

  anon352_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon352_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon350_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 7 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1561} vslice_dummy_var_477 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon351_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon344_Then:
    assume Tmp_663 == 8;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    goto anon270_Then, anon270_Else;

  anon270_Else:
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 8 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1562} vslice_dummy_var_476 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon271_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 8 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1563} vslice_dummy_var_475 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon348_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon270_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 8 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1564} vslice_dummy_var_474 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon347_Then, anon347_Else;

  anon347_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon347_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon345_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 8 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1565} vslice_dummy_var_473 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon346_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon343_Then:
    assume Tmp_663 == 9;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 9 * 4] == 0;
    goto L45;

  anon338_Then:
    assume Tmp_663 == 10;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    goto anon268_Then, anon268_Else;

  anon268_Else:
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 10 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1566} vslice_dummy_var_472 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon269_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 10 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1567} vslice_dummy_var_471 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon342_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon268_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 10 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1568} vslice_dummy_var_470 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon341_Then, anon341_Else;

  anon341_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon341_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon339_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 10 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1569} vslice_dummy_var_469 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon340_Then, anon340_Else;

  anon340_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon340_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon333_Then:
    assume Tmp_663 == 11;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon266_Then, anon266_Else;

  anon266_Else:
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 11 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1570} vslice_dummy_var_468 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon267_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 11 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1571} vslice_dummy_var_467 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon337_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon266_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 11 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1572} vslice_dummy_var_466 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon336_Then, anon336_Else;

  anon336_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon336_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon334_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 11 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1573} vslice_dummy_var_465 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon335_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon328_Then:
    assume Tmp_663 == 12;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    goto anon264_Then, anon264_Else;

  anon264_Else:
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 12 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1574} vslice_dummy_var_464 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon265_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 12 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1575} vslice_dummy_var_463 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon332_Then, anon332_Else;

  anon332_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon332_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon264_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 12 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1576} vslice_dummy_var_462 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon331_Then, anon331_Else;

  anon331_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon331_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon329_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 12 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1577} vslice_dummy_var_461 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon330_Then, anon330_Else;

  anon330_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon330_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon323_Then:
    assume Tmp_663 == 13;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    goto anon262_Then, anon262_Else;

  anon262_Else:
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 13 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1578} vslice_dummy_var_460 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon263_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 13 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1579} vslice_dummy_var_459 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon327_Then, anon327_Else;

  anon327_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon327_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon262_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 13 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1580} vslice_dummy_var_458 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon326_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon324_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 13 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1581} vslice_dummy_var_457 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon325_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon322_Then:
    assume Tmp_663 == 14;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 14 * 4] == 0;
    goto L45;

  anon321_Then:
    assume Tmp_663 == 15;
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 15 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1582} vslice_dummy_var_456 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon316_Then:
    assume Tmp_663 == 16;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    goto anon260_Then, anon260_Else;

  anon260_Else:
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 16 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1583} vslice_dummy_var_455 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon261_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 16 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1584} vslice_dummy_var_454 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon320_Then, anon320_Else;

  anon320_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon320_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon260_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 16 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1585} vslice_dummy_var_453 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon319_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon317_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 16 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1586} vslice_dummy_var_452 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon318_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon311_Then:
    assume Tmp_663 == 17;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    goto anon258_Then, anon258_Else;

  anon258_Else:
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 17 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1587} vslice_dummy_var_451 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon259_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 17 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1588} vslice_dummy_var_450 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon315_Then, anon315_Else;

  anon315_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon315_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon258_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 17 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1589} vslice_dummy_var_449 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon314_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon312_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 17 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1590} vslice_dummy_var_448 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon313_Then, anon313_Else;

  anon313_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon313_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon310_Then:
    assume Tmp_663 == 18;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 18 * 4] == 0;
    goto L45;

  anon305_Then:
    assume Tmp_663 == 19;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    goto anon256_Then, anon256_Else;

  anon256_Else:
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 19 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1591} vslice_dummy_var_447 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon257_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 19 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1592} vslice_dummy_var_446 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon309_Then, anon309_Else;

  anon309_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon309_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon256_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 19 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1593} vslice_dummy_var_445 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon308_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon306_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 19 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1594} vslice_dummy_var_444 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon307_Then, anon307_Else;

  anon307_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon307_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon300_Then:
    assume Tmp_663 == 20;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    goto anon254_Then, anon254_Else;

  anon254_Else:
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 20 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1595} vslice_dummy_var_443 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon255_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 20 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1596} vslice_dummy_var_442 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon304_Then, anon304_Else;

  anon304_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon304_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon254_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 20 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1597} vslice_dummy_var_441 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon303_Then, anon303_Else;

  anon303_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon303_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon301_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 20 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1598} vslice_dummy_var_440 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon302_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon295_Then:
    assume Tmp_663 == 21;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 21 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1599} vslice_dummy_var_439 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon253_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 21 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1600} vslice_dummy_var_438 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon299_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon252_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 21 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1601} vslice_dummy_var_437 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon298_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon296_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 21 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1602} vslice_dummy_var_436 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon297_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon294_Then:
    assume Tmp_663 == 22;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 22 * 4] == 0;
    goto L45;

  anon292_Then:
    assume Tmp_663 == 23;
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 23 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1603} vslice_dummy_var_435 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon293_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon287_Then:
    assume Tmp_663 == 24;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    goto anon250_Then, anon250_Else;

  anon250_Else:
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 24 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1604} vslice_dummy_var_434 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon251_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 24 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1605} vslice_dummy_var_433 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon291_Then, anon291_Else;

  anon291_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon291_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon250_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 24 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1606} vslice_dummy_var_432 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon290_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon288_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 24 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1607} vslice_dummy_var_431 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon289_Then, anon289_Else;

  anon289_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon289_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon282_Then:
    assume Tmp_663 == 25;
    goto anon283_Then, anon283_Else;

  anon283_Else:
    goto anon248_Then, anon248_Else;

  anon248_Else:
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 25 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1608} vslice_dummy_var_430 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon249_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 25 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1609} vslice_dummy_var_429 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon286_Then, anon286_Else;

  anon286_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon286_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon248_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 25 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1610} vslice_dummy_var_428 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon285_Then, anon285_Else;

  anon285_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon285_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon283_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 25 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1611} vslice_dummy_var_427 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon284_Then, anon284_Else;

  anon284_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon284_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon277_Then:
    assume Tmp_663 == 26;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    goto anon246_Then, anon246_Else;

  anon246_Else:
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 26 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 1612} vslice_dummy_var_426 := CyyInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon247_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 26 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 1613} vslice_dummy_var_425 := CyyQueryInformationFile(pDevObj_2, pIrp_1);
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon281_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon246_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 26 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 1614} vslice_dummy_var_424 := CyySetInformationFile(pDevObj_2, pIrp_1);
    goto anon280_Then, anon280_Else;

  anon280_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon280_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon278_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 26 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 1615} vslice_dummy_var_423 := CyySystemControlDispatch(pDevObj_2, pIrp_1);
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon279_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon276_Then:
    assume Tmp_663 == 27;
    assume {:nonnull} Tmp_661 != 0;
    assume Tmp_661 > 0;
    assume Mem_T.INT4[Tmp_661 + 27 * 4] == 0;
    goto L45;

  anon245_Then:
    call {:si_unique_call 1616} IoReleaseCancelSpinLock(oldIrql_5);
    Tmp_665 := strConst__li2bpl191;
    call {:si_unique_call 1617} vslice_dummy_var_487 := CyyDbgPrintEx(2, Tmp_665);
    goto LM2;
}



procedure {:origName "CyyDpcEpilogue"} CyyDpcEpilogue(actual_PDevExt_9: int, actual_PDpc: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyDpcEpilogue"} CyyDpcEpilogue(actual_PDevExt_9: int, actual_PDpc: int)
{
  var {:scalar} pendingCnt: int;
  var {:pointer} Tmp_667: int;
  var {:pointer} PDevExt_9: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_1266: int;

  anon0:
    call {:si_unique_call 1618} vslice_dummy_var_488 := __HAVOC_malloc(4);
    PDevExt_9 := actual_PDevExt_9;
    call {:si_unique_call 1619} Tmp_667 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    havoc vslice_dummy_var_1266;
    Mem_T.INT4[Tmp_667] := vslice_dummy_var_1266;
    call {:si_unique_call 1620} pendingCnt := sdv_InterlockedDecrement(Tmp_667);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_667 != 0;
    assume Tmp_667 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt == 0;
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    call {:si_unique_call 1621} vslice_dummy_var_489 := KeSetEvent(PendingDpcEvent__CYY_DEVICE_EXTENSION(PDevExt_9), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt != 0;
    goto L1;
}



procedure {:origName "CyyRundownIrpRefs"} CyyRundownIrpRefs(actual_CurrentOpIrp_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_PDevExt_10: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyRundownIrpRefs"} CyyRundownIrpRefs(actual_CurrentOpIrp_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_PDevExt_10: int)
{
  var {:pointer} s_p_e_c_i_a_l_7: int;
  var {:pointer} sdv_586: int;
  var {:pointer} sdv_587: int;
  var {:pointer} s_p_e_c_i_a_l_8: int;
  var {:pointer} Tmp_668: int;
  var {:scalar} s_p_e_c_i_a_l_9: int;
  var {:scalar} sdv_589: int;
  var {:scalar} sdv_590: int;
  var {:pointer} sdv_591: int;
  var {:pointer} s_p_e_c_i_a_l_10: int;
  var {:scalar} s_p_e_c_i_a_l_11: int;
  var {:scalar} s_p_e_c_i_a_l_12: int;
  var {:pointer} CurrentOpIrp_1: int;
  var {:pointer} IntervalTimer: int;
  var {:pointer} TotalTimer: int;
  var {:pointer} PDevExt_10: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_1267: int;
  var vslice_dummy_var_1268: int;
  var vslice_dummy_var_1269: int;
  var vslice_dummy_var_1270: int;

  anon0:
    call {:si_unique_call 1622} vslice_dummy_var_490 := __HAVOC_malloc(4);
    CurrentOpIrp_1 := actual_CurrentOpIrp_1;
    IntervalTimer := actual_IntervalTimer;
    TotalTimer := actual_TotalTimer;
    PDevExt_10 := actual_PDevExt_10;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_668;
    assume {:nonnull} Tmp_668 != 0;
    assume Tmp_668 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_668)] != 0;
    s_p_e_c_i_a_l_9 := 2;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_1267;
    call {:si_unique_call 1623} sdv_586 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1267);
    assume {:nonnull} sdv_586 != 0;
    assume sdv_586 > 0;
    s_p_e_c_i_a_l_7 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_586)));
    assume {:nonnull} s_p_e_c_i_a_l_7 != 0;
    assume s_p_e_c_i_a_l_7 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_7] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_7], BNOT(s_p_e_c_i_a_l_9));
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_1268;
    call {:si_unique_call 1624} vslice_dummy_var_491 := sdv_IoSetCancelRoutine(vslice_dummy_var_1268, 0);
    goto L4;

  L4:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IntervalTimer != 0;
    call {:si_unique_call 1625} sdv_589 := CyyCancelTimer(IntervalTimer, PDevExt_10);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_589 != 0;
    s_p_e_c_i_a_l_11 := 8;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_1269;
    call {:si_unique_call 1626} sdv_591 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1269);
    assume {:nonnull} sdv_591 != 0;
    assume sdv_591 > 0;
    s_p_e_c_i_a_l_10 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_591)));
    assume {:nonnull} s_p_e_c_i_a_l_10 != 0;
    assume s_p_e_c_i_a_l_10 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_10] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_10], BNOT(s_p_e_c_i_a_l_11));
    goto L16;

  L16:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} TotalTimer != 0;
    call {:si_unique_call 1627} sdv_590 := CyyCancelTimer(TotalTimer, PDevExt_10);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_590 != 0;
    s_p_e_c_i_a_l_12 := 4;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_1270;
    call {:si_unique_call 1628} sdv_587 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1270);
    assume {:nonnull} sdv_587 != 0;
    assume sdv_587 > 0;
    s_p_e_c_i_a_l_8 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_587)));
    assume {:nonnull} s_p_e_c_i_a_l_8 != 0;
    assume s_p_e_c_i_a_l_8 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_8] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_8], BNOT(s_p_e_c_i_a_l_12));
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:partition} sdv_590 == 0;
    goto L1;

  anon12_Then:
    assume {:partition} TotalTimer == 0;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_589 == 0;
    goto L16;

  anon11_Then:
    assume {:partition} IntervalTimer == 0;
    goto L16;

  anon15_Then:
    assume {:partition} Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_668)] == 0;
    goto L4;
}



procedure {:origName "CyyStartOrQueue"} CyyStartOrQueue(actual_Extension_12: int, actual_Irp_9: int, actual_QueueToExamine: int, actual_CurrentOpIrp_2: int, actual_Starter: int) returns (Tmp_671: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyStartOrQueue"} CyyStartOrQueue(actual_Extension_12: int, actual_Irp_9: int, actual_QueueToExamine: int, actual_CurrentOpIrp_2: int, actual_Starter: int) returns (Tmp_671: int)
{
  var {:pointer} Tmp_672: int;
  var {:pointer} irpSp: int;
  var {:pointer} sdv_592: int;
  var {:pointer} Tmp_673: int;
  var {:pointer} sdv_594: int;
  var {:pointer} sdv_596: int;
  var {:scalar} oldIrql_6: int;
  var {:pointer} sdv_597: int;
  var {:scalar} sdv_598: int;
  var {:pointer} sdv_601: int;
  var {:pointer} Extension_12: int;
  var {:pointer} Irp_9: int;
  var {:pointer} QueueToExamine: int;
  var {:pointer} CurrentOpIrp_2: int;
  var {:scalar} Starter: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;

  anon0:
    Extension_12 := actual_Extension_12;
    Irp_9 := actual_Irp_9;
    QueueToExamine := actual_QueueToExamine;
    CurrentOpIrp_2 := actual_CurrentOpIrp_2;
    Starter := actual_Starter;
    call {:si_unique_call 1629} Tmp_673 := __HAVOC_malloc(72);
    call {:si_unique_call 1630} Tmp_672 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    Mem_T.INT4[Tmp_672] := oldIrql_6;
    call {:si_unique_call 1631} IoAcquireCancelSpinLock(Tmp_672);
    assume {:nonnull} Tmp_672 != 0;
    assume Tmp_672 > 0;
    oldIrql_6 := Mem_T.INT4[Tmp_672];
    call {:si_unique_call 1632} sdv_592 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} sdv_592 != 0;
    assume sdv_592 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_592)] == 4;
    call {:si_unique_call 1633} sdv_597 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    assume {:nonnull} sdv_597 != 0;
    assume sdv_597 > 0;
    goto L18;

  L18:
    call {:si_unique_call 1634} sdv_598 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_598 != 0;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    call {:si_unique_call 1635} IoReleaseCancelSpinLock(oldIrql_6);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant113;
    call {:si_unique_call 1636} Tmp_671 := CyyStartFlush(Extension_12);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon42_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon40_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant177;
    call {:si_unique_call 1637} Tmp_671 := CyyStartMask(Extension_12);
    goto L1;

  anon39_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant371;
    call {:si_unique_call 1638} Tmp_671 := CyyStartPurge(Extension_12);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon38_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant376;
    call {:si_unique_call 1639} Tmp_671 := CyyStartRead(Extension_12);
    goto L1;

  anon33_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant194;
    call {:si_unique_call 1640} Tmp_671 := CyyStartWrite#1(Extension_12);
    goto L1;

  anon32_Then:
    goto L22;

  L22:
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 1641} irpSp := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    call {:si_unique_call 1642} IoReleaseCancelSpinLock(oldIrql_6);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 1643} sdv_ExFreePool(0);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    goto L42;

  L42:
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    Tmp_673 := strConst__li2bpl3;
    call {:si_unique_call 1644} vslice_dummy_var_494 := CyyDbgPrintEx(9, Tmp_673);
    call {:si_unique_call 1645} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1646} CyyIRPEpilogue(Extension_12);
    Tmp_671 := -1073741536;
    goto L1;

  anon34_Then:
    goto L42;

  anon31_Then:
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 1647} sdv_IoMarkIrpPending(0);
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 1648} vslice_dummy_var_492 := sdv_InsertTailList(QueueToExamine, ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(Irp_9))));
    call {:si_unique_call 1649} vslice_dummy_var_493 := sdv_IoSetCancelRoutine(Irp_9, li2bplFunctionConstant149);
    call {:si_unique_call 1650} IoReleaseCancelSpinLock(oldIrql_6);
    Tmp_671 := 259;
    goto L1;

  anon30_Then:
    assume {:partition} sdv_598 == 0;
    goto L22;

  anon29_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_592)] != 4;
    call {:si_unique_call 1651} sdv_596 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} sdv_596 != 0;
    assume sdv_596 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_596)] == 14;
    call {:si_unique_call 1652} sdv_594 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} sdv_594 != 0;
    assume sdv_594 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L78;

  L78:
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    goto L18;

  anon36_Then:
    call {:si_unique_call 1653} sdv_601 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} sdv_601 != 0;
    assume sdv_601 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto L78;

  anon37_Then:
    goto L18;

  anon35_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_596)] != 14;
    goto L18;
}



procedure {:origName "CyyCancelQueued"} CyyCancelQueued(actual_DeviceObject_9: int, actual_Irp_10: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCancelQueued"} CyyCancelQueued(actual_DeviceObject_9: int, actual_Irp_10: int)
{
  var {:pointer} irpSp_1: int;
  var {:pointer} Tmp_674: int;
  var {:pointer} extension_3: int;
  var {:pointer} DeviceObject_9: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;

  anon0:
    call {:si_unique_call 1654} vslice_dummy_var_495 := __HAVOC_malloc(4);
    DeviceObject_9 := actual_DeviceObject_9;
    Irp_10 := actual_Irp_10;
    call {:si_unique_call 1655} Tmp_674 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    havoc extension_3;
    call {:si_unique_call 1656} irpSp_1 := sdv_IoGetCurrentIrpStackLocation(Irp_10);
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    call {:si_unique_call 1657} vslice_dummy_var_496 := sdv_RemoveEntryList(0);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpSp_1)] == 4;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto L18;

  L18:
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    call {:si_unique_call 1658} IoReleaseCancelSpinLock(Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_10)]);
    Tmp_674 := strConst__li2bpl3;
    call {:si_unique_call 1659} vslice_dummy_var_497 := CyyDbgPrintEx(9, Tmp_674);
    call {:si_unique_call 1660} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 1661} CyyIRPEpilogue(extension_3);
    return;

  anon11_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpSp_1)] != 4;
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpSp_1)] == 14;
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L32;

  L32:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto L18;

  anon13_Then:
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1662} sdv_ExFreePool(0);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto L18;

  anon15_Then:
    goto L18;

  anon14_Then:
    goto L32;

  anon12_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpSp_1)] != 14;
    goto L18;
}



procedure {:origName "CyyFilterCancelQueued"} CyyFilterCancelQueued(actual_PDevObj_17: int, actual_PIrp_7: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyFilterCancelQueued"} CyyFilterCancelQueued(actual_PDevObj_17: int, actual_PIrp_7: int)
{
  var {:pointer} PDevObj_17: int;
  var {:pointer} PIrp_7: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;

  anon0:
    call {:si_unique_call 1663} vslice_dummy_var_498 := __HAVOC_malloc(4);
    PDevObj_17 := actual_PDevObj_17;
    PIrp_7 := actual_PIrp_7;
    assume {:nonnull} PDevObj_17 != 0;
    assume PDevObj_17 > 0;
    call {:si_unique_call 1664} vslice_dummy_var_499 := sdv_IoGetCurrentIrpStackLocation(PIrp_7);
    assume {:nonnull} PIrp_7 != 0;
    assume PIrp_7 > 0;
    assume {:nonnull} PIrp_7 != 0;
    assume PIrp_7 > 0;
    call {:si_unique_call 1665} vslice_dummy_var_500 := sdv_RemoveEntryList(0);
    assume {:nonnull} PIrp_7 != 0;
    assume PIrp_7 > 0;
    call {:si_unique_call 1666} IoReleaseCancelSpinLock(Mem_T.CancelIrql__IRP[CancelIrql__IRP(PIrp_7)]);
    return;
}



procedure {:origName "CyyLogError"} CyyLogError(actual_DriverObject_4: int, actual_DeviceObject_10: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyLogError"} CyyLogError(actual_DriverObject_4: int, actual_DeviceObject_10: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int)
{
  var {:scalar} P1: int;
  var {:scalar} P2: int;
  var {:scalar} Tmp_679: int;
  var {:pointer} Tmp_680: int;
  var {:scalar} sdv_607: int;
  var {:pointer} errorLogEntry: int;
  var {:pointer} Tmp_681: int;
  var {:scalar} sdv_608: int;
  var {:scalar} dumpToAllocate: int;
  var {:pointer} sdv_609: int;
  var {:pointer} Tmp_684: int;
  var {:pointer} Tmp_686: int;
  var {:scalar} Tmp_687: int;
  var {:pointer} Tmp_688: int;
  var {:pointer} ptrToFirstInsert: int;
  var {:scalar} Tmp_690: int;
  var {:pointer} DriverObject_4: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} structPtr888P1: int;
  var {:pointer} structPtr888P2: int;
  var {:scalar} SequenceNumber: int;
  var {:scalar} MajorFunctionCode: int;
  var {:scalar} RetryCount: int;
  var {:scalar} UniqueErrorValue: int;
  var {:scalar} FinalStatus: int;
  var {:scalar} SpecificIOStatus: int;
  var {:scalar} LengthOfInsert1: int;
  var {:pointer} Insert1: int;
  var {:scalar} LengthOfInsert2: int;
  var {:pointer} Insert2: int;
  var vslice_dummy_var_501: int;

  anon0:
    call {:si_unique_call 1667} P1 := __HAVOC_malloc(20);
    call {:si_unique_call 1668} P2 := __HAVOC_malloc(20);
    call {:si_unique_call 1669} Tmp_679 := __HAVOC_malloc(20);
    call {:si_unique_call 1670} vslice_dummy_var_501 := __HAVOC_malloc(4);
    call {:si_unique_call 1671} Tmp_687 := __HAVOC_malloc(20);
    DriverObject_4 := actual_DriverObject_4;
    DeviceObject_10 := actual_DeviceObject_10;
    structPtr888P1 := actual_structPtr888P1;
    structPtr888P2 := actual_structPtr888P2;
    SequenceNumber := actual_SequenceNumber;
    MajorFunctionCode := actual_MajorFunctionCode;
    RetryCount := actual_RetryCount;
    UniqueErrorValue := actual_UniqueErrorValue;
    FinalStatus := actual_FinalStatus;
    SpecificIOStatus := actual_SpecificIOStatus;
    LengthOfInsert1 := actual_LengthOfInsert1;
    Insert1 := actual_Insert1;
    LengthOfInsert2 := actual_LengthOfInsert2;
    Insert2 := actual_Insert2;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    call {:si_unique_call 1672} Tmp_680 := __HAVOC_malloc(4);
    call {:si_unique_call 1673} Tmp_681 := __HAVOC_malloc(4);
    call {:si_unique_call 1674} Tmp_684 := __HAVOC_malloc(4);
    call {:si_unique_call 1675} Tmp_686 := __HAVOC_malloc(4);
    call {:si_unique_call 1676} Tmp_688 := __HAVOC_malloc(4);
    dumpToAllocate := 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Insert1 != 0;
    goto L11;

  L11:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Insert2 != 0;
    goto L13;

  L13:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} DeviceObject_10 != 0;
    goto L16;

  L16:
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    assume {:nonnull} Tmp_687 != 0;
    assume Tmp_687 > 0;
    call {:si_unique_call 1677} sdv_607 := CyyMemCompare(P1, 1, Tmp_687, 1);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_607 != 0;
    dumpToAllocate := 8;
    goto L21;

  L21:
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    call {:si_unique_call 1678} sdv_608 := CyyMemCompare(P2, 1, Tmp_679, 1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_608 != 0;
    dumpToAllocate := dumpToAllocate + 8;
    goto L27;

  L27:
    Tmp_690 := 48 + dumpToAllocate + LengthOfInsert1 + LengthOfInsert2;
    call {:si_unique_call 1679} sdv_609 := IoAllocateErrorLogEntry(0, Tmp_690);
    errorLogEntry := sdv_609;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} errorLogEntry != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} dumpToAllocate != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_684;
    call {:si_unique_call 1680} sdv_RtlCopyMemory(0, 0, 8);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} dumpToAllocate > 8;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_686;
    call {:si_unique_call 1681} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_680;
    ptrToFirstInsert := Tmp_680;
    goto L54;

  L54:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} LengthOfInsert1 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 1682} sdv_RtlCopyMemory(0, 0, LengthOfInsert1);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} LengthOfInsert2 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 1683} sdv_RtlCopyMemory(0, 0, LengthOfInsert2);
    goto L56;

  L56:
    call {:si_unique_call 1684} IoWriteErrorLogEntry(0);
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} LengthOfInsert2 == 0;
    goto L56;

  anon30_Then:
    assume {:partition} LengthOfInsert1 == 0;
    goto L56;

  anon25_Then:
    assume {:partition} 8 >= dumpToAllocate;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_688;
    ptrToFirstInsert := Tmp_688;
    goto L54;

  anon29_Then:
    assume {:partition} dumpToAllocate == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_681;
    ptrToFirstInsert := Tmp_681;
    goto L54;

  anon28_Then:
    assume {:partition} errorLogEntry == 0;
    goto L1;

  anon24_Then:
    assume {:partition} sdv_608 == 0;
    goto L27;

  anon23_Then:
    assume {:partition} sdv_607 == 0;
    goto L21;

  anon22_Then:
    assume {:partition} DeviceObject_10 == 0;
    goto L16;

  anon21_Then:
    assume {:partition} Insert2 == 0;
    LengthOfInsert2 := 0;
    goto L13;

  anon27_Then:
    assume {:partition} Insert1 == 0;
    LengthOfInsert1 := 0;
    goto L11;
}



procedure {:origName "CyyIRPPrologue"} CyyIRPPrologue(actual_PIrp_8: int, actual_PDevExt_11: int) returns (Tmp_691: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_691 == 0 || Tmp_691 == -1073741536 || Tmp_691 == 259 || Tmp_691 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyIRPPrologue"} CyyIRPPrologue(actual_PIrp_8: int, actual_PDevExt_11: int) returns (Tmp_691: int)
{
  var {:pointer} Tmp_692: int;
  var {:pointer} PIrp_8: int;
  var {:pointer} PDevExt_11: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_1271: int;

  anon0:
    PIrp_8 := actual_PIrp_8;
    PDevExt_11 := actual_PDevExt_11;
    call {:si_unique_call 1685} Tmp_692 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_11 != 0;
    assume PDevExt_11 > 0;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    havoc vslice_dummy_var_1271;
    Mem_T.INT4[Tmp_692] := vslice_dummy_var_1271;
    call {:si_unique_call 1686} vslice_dummy_var_502 := sdv_InterlockedIncrement(Tmp_692);
    assume {:nonnull} PDevExt_11 != 0;
    assume PDevExt_11 > 0;
    assume {:nonnull} Tmp_692 != 0;
    assume Tmp_692 > 0;
    call {:si_unique_call 1687} Tmp_691 := CyyFilterIrps(PIrp_8, PDevExt_11);
    return;
}



procedure {:origName "CyyUnlockPages"} CyyUnlockPages(actual_PDpc_1: int, actual_PDeferredContext: int, actual_PSysContext1: int, actual_PSysContext2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyUnlockPages"} CyyUnlockPages(actual_PDpc_1: int, actual_PDeferredContext: int, actual_PSysContext1: int, actual_PSysContext2: int)
{
  var {:pointer} pDevExt_19: int;
  var {:pointer} PDeferredContext: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_504: int;

  anon0:
    call {:si_unique_call 1688} vslice_dummy_var_503 := __HAVOC_malloc(4);
    PDeferredContext := actual_PDeferredContext;
    pDevExt_19 := PDeferredContext;
    assume {:nonnull} pDevExt_19 != 0;
    assume pDevExt_19 > 0;
    call {:si_unique_call 1689} vslice_dummy_var_504 := KeSetEvent(PendingDpcEvent__CYY_DEVICE_EXTENSION(pDevExt_19), 0, 0);
    return;
}



procedure {:origName "CyySetDeviceFlags"} CyySetDeviceFlags(actual_PDevExt_12: int, actual_PFlags: int, actual_Value: int, actual_Set: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyySetDeviceFlags"} CyySetDeviceFlags(actual_PDevExt_12: int, actual_PFlags: int, actual_Value: int, actual_Set: int)
{
  var {:scalar} oldIrql_7: int;
  var {:pointer} Tmp_700: int;
  var {:pointer} PFlags: int;
  var {:scalar} Value: int;
  var {:scalar} Set: int;
  var vslice_dummy_var_505: int;

  anon0:
    call {:si_unique_call 1690} vslice_dummy_var_505 := __HAVOC_malloc(4);
    PFlags := actual_PFlags;
    Value := actual_Value;
    Set := actual_Set;
    call {:si_unique_call 1691} Tmp_700 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    Mem_T.INT4[Tmp_700] := oldIrql_7;
    call {:si_unique_call 1692} sdv_KeAcquireSpinLock(0, Tmp_700);
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    oldIrql_7 := Mem_T.INT4[Tmp_700];
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Set != 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    Mem_T.INT4[PFlags] := BOR(Mem_T.INT4[PFlags], Value);
    goto L10;

  L10:
    call {:si_unique_call 1693} sdv_KeReleaseSpinLock(0, oldIrql_7);
    return;

  anon3_Then:
    assume {:partition} Set == 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    Mem_T.INT4[PFlags] := BAND(Mem_T.INT4[PFlags], BNOT(Value));
    goto L10;
}



procedure {:origName "CyyIoCallDriver"} CyyIoCallDriver(actual_PDevExt_13: int, actual_PDevObj_18: int, actual_PIrp_9: int) returns (Tmp_702: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_702 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyIoCallDriver"} CyyIoCallDriver(actual_PDevExt_13: int, actual_PDevObj_18: int, actual_PIrp_9: int) returns (Tmp_702: int)
{
  var {:scalar} status_23: int;
  var {:pointer} PDevExt_13: int;
  var {:pointer} PDevObj_18: int;
  var {:pointer} PIrp_9: int;

  anon0:
    PDevExt_13 := actual_PDevExt_13;
    PDevObj_18 := actual_PDevObj_18;
    PIrp_9 := actual_PIrp_9;
    call {:si_unique_call 1694} status_23 := sdv_IoCallDriver(PDevObj_18, PIrp_9);
    call {:si_unique_call 1695} CyyIRPEpilogue(PDevExt_13);
    Tmp_702 := status_23;
    return;
}



procedure {:origName "CyyKillAllReadsOrWrites"} CyyKillAllReadsOrWrites(actual_DeviceObject_11: int, actual_QueueToClean: int, actual_CurrentOpIrp_4: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyKillAllReadsOrWrites"} CyyKillAllReadsOrWrites(actual_DeviceObject_11: int, actual_QueueToClean: int, actual_CurrentOpIrp_4: int)
{
  var {:pointer} currentLastIrp_1: int;
  var {:scalar} cancelIrql_1: int;
  var {:pointer} Tmp_704: int;
  var {:scalar} sdv_619: int;
  var {:pointer} Tmp_705: int;
  var {:pointer} sdv_620: int;
  var {:scalar} cancelRoutine_2: int;
  var {:pointer} Tmp_707: int;
  var {:pointer} Tmp_708: int;
  var {:pointer} Tmp_709: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} QueueToClean: int;
  var {:pointer} CurrentOpIrp_4: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_510: int;
  var vslice_dummy_var_511: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_1272: int;
  var vslice_dummy_var_1273: int;
  var vslice_dummy_var_1274: int;
  var vslice_dummy_var_1275: int;
  var vslice_dummy_var_1276: int;
  var vslice_dummy_var_1277: int;
  var vslice_dummy_var_1278: int;
  var vslice_dummy_var_1279: int;
  var vslice_dummy_var_1280: int;
  var vslice_dummy_var_1281: int;
  var vslice_dummy_var_1282: int;

  anon0:
    call {:si_unique_call 1696} vslice_dummy_var_506 := __HAVOC_malloc(4);
    DeviceObject_11 := actual_DeviceObject_11;
    QueueToClean := actual_QueueToClean;
    CurrentOpIrp_4 := actual_CurrentOpIrp_4;
    call {:si_unique_call 1697} Tmp_707 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    Mem_T.INT4[Tmp_707] := cancelIrql_1;
    call {:si_unique_call 1698} IoAcquireCancelSpinLock(Tmp_707);
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    cancelIrql_1 := Mem_T.INT4[Tmp_707];
    goto L8;

  L8:
    call {:si_unique_call 1699} currentLastIrp_1, cancelIrql_1, sdv_619, sdv_620, cancelRoutine_2, Tmp_707, vslice_dummy_var_511, vslice_dummy_var_512, vslice_dummy_var_513, vslice_dummy_var_514, vslice_dummy_var_515 := CyyKillAllReadsOrWrites_loop_L8(currentLastIrp_1, cancelIrql_1, sdv_619, sdv_620, cancelRoutine_2, Tmp_707, DeviceObject_11, QueueToClean, vslice_dummy_var_511, vslice_dummy_var_512, vslice_dummy_var_513, vslice_dummy_var_514, vslice_dummy_var_515);
    goto L8_last;

  L8_last:
    call {:si_unique_call 1726} sdv_619 := sdv_IsListEmpty(0);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_619 == 0;
    assume {:nonnull} QueueToClean != 0;
    assume QueueToClean > 0;
    havoc vslice_dummy_var_1272;
    call {:si_unique_call 1700} sdv_620 := sdv_containing_record(vslice_dummy_var_1272, 88);
    currentLastIrp_1 := sdv_620;
    call {:si_unique_call 1701} vslice_dummy_var_511 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    cancelRoutine_2 := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(currentLastIrp_1)];
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(currentLastIrp_1)] := cancelIrql_1;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(currentLastIrp_1)] := 0;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant196;
    call {:si_unique_call 1702} CyyCancelCurrentWrite(DeviceObject_11, currentLastIrp_1);
    goto L42;

  L42:
    call {:si_unique_call 1703} Tmp_707 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    Mem_T.INT4[Tmp_707] := cancelIrql_1;
    call {:si_unique_call 1704} IoAcquireCancelSpinLock(Tmp_707);
    assume {:nonnull} Tmp_707 != 0;
    assume Tmp_707 > 0;
    cancelIrql_1 := Mem_T.INT4[Tmp_707];
    goto L42_dummy;

  L42_dummy:
    assume false;
    return;

  anon72_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant199;
    call {:si_unique_call 1705} CyyCancelCurrentXoff(DeviceObject_11, currentLastIrp_1);
    goto L42;

  anon71_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant125;
    call {:si_unique_call 1706} CyyCancelImmediate(DeviceObject_11, currentLastIrp_1);
    goto L42;

  anon70_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant149;
    call {:si_unique_call 1707} CyyCancelQueued(DeviceObject_11, currentLastIrp_1);
    goto L42;

  anon69_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant179;
    call {:si_unique_call 1708} CyyCancelWait(DeviceObject_11, currentLastIrp_1);
    goto L42;

  anon68_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant151;
    call {:si_unique_call 1709} CyyFilterCancelQueued(DeviceObject_11, currentLastIrp_1);
    goto L42;

  anon67_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant321;
    call {:si_unique_call 1710} vslice_dummy_var_515 := CyyInternalIoControl(DeviceObject_11, currentLastIrp_1);
    goto L42;

  anon66_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant325;
    call {:si_unique_call 1711} vslice_dummy_var_514 := CyyQueryInformationFile(DeviceObject_11, currentLastIrp_1);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  LM2:
    return;

  anon65_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant326;
    call {:si_unique_call 1712} vslice_dummy_var_513 := CyySetInformationFile(DeviceObject_11, currentLastIrp_1);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon80_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon78_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant266;
    call {:si_unique_call 1713} vslice_dummy_var_512 := CyySystemControlDispatch(DeviceObject_11, currentLastIrp_1);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon79_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon55_Then:
    assume {:partition} sdv_619 != 0;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc Tmp_708;
    assume {:nonnull} Tmp_708 != 0;
    assume Tmp_708 > 0;
    cancelRoutine_2 := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_708)];
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc Tmp_704;
    assume {:nonnull} Tmp_704 != 0;
    assume Tmp_704 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} cancelRoutine_2 != 0;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc Tmp_705;
    assume {:nonnull} Tmp_705 != 0;
    assume Tmp_705 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(Tmp_705)] := 0;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc Tmp_709;
    assume {:nonnull} Tmp_709 != 0;
    assume Tmp_709 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(Tmp_709)] := cancelIrql_1;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant196;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_1273;
    call {:si_unique_call 1714} CyyCancelCurrentWrite(DeviceObject_11, vslice_dummy_var_1273);
    goto L1;

  L1:
    goto LM2;

  anon64_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant199;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_1274;
    call {:si_unique_call 1715} CyyCancelCurrentXoff(DeviceObject_11, vslice_dummy_var_1274);
    goto L1;

  anon63_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant125;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_1275;
    call {:si_unique_call 1716} CyyCancelImmediate(DeviceObject_11, vslice_dummy_var_1275);
    goto L1;

  anon62_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant149;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_1276;
    call {:si_unique_call 1717} CyyCancelQueued(DeviceObject_11, vslice_dummy_var_1276);
    goto L1;

  anon61_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant179;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_1277;
    call {:si_unique_call 1718} CyyCancelWait(DeviceObject_11, vslice_dummy_var_1277);
    goto L1;

  anon60_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant151;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_1278;
    call {:si_unique_call 1719} CyyFilterCancelQueued(DeviceObject_11, vslice_dummy_var_1278);
    goto L1;

  anon59_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant321;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_1279;
    call {:si_unique_call 1720} vslice_dummy_var_510 := CyyInternalIoControl(DeviceObject_11, vslice_dummy_var_1279);
    goto L1;

  anon58_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant325;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_1280;
    call {:si_unique_call 1721} vslice_dummy_var_509 := CyyQueryInformationFile(DeviceObject_11, vslice_dummy_var_1280);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon77_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon57_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant326;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_1281;
    call {:si_unique_call 1722} vslice_dummy_var_508 := CyySetInformationFile(DeviceObject_11, vslice_dummy_var_1281);
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon76_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant266;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_1282;
    call {:si_unique_call 1723} vslice_dummy_var_507 := CyySystemControlDispatch(DeviceObject_11, vslice_dummy_var_1282);
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon75_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon73_Then:
    assume {:partition} cancelRoutine_2 == 0;
    call {:si_unique_call 1724} IoReleaseCancelSpinLock(cancelIrql_1);
    goto L1;

  anon56_Then:
    call {:si_unique_call 1725} IoReleaseCancelSpinLock(cancelIrql_1);
    goto L1;
}



procedure {:origName "CyyGetNextIrpLocked"} CyyGetNextIrpLocked(actual_CurrentOpIrp_5: int, actual_QueueToProcess_2: int, actual_NextIrp: int, actual_CompleteCurrent_1: int, actual_extension_4: int, actual_OldIrql_6: int);
  modifies alloc, Mem_T.CancelRoutine__IRP, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_OldIrql_6;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetNextIrpLocked"} CyyGetNextIrpLocked(actual_CurrentOpIrp_5: int, actual_QueueToProcess_2: int, actual_NextIrp: int, actual_CompleteCurrent_1: int, actual_extension_4: int, actual_OldIrql_6: int)
{
  var {:scalar} sdv_622: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} sdv_626: int;
  var {:pointer} Tmp_711: int;
  var {:pointer} headOfList: int;
  var {:pointer} CurrentOpIrp_5: int;
  var {:pointer} QueueToProcess_2: int;
  var {:pointer} NextIrp: int;
  var {:scalar} CompleteCurrent_1: int;
  var {:pointer} extension_4: int;
  var {:scalar} OldIrql_6: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_1283: int;

  anon0:
    call {:si_unique_call 1727} vslice_dummy_var_516 := __HAVOC_malloc(4);
    CurrentOpIrp_5 := actual_CurrentOpIrp_5;
    QueueToProcess_2 := actual_QueueToProcess_2;
    NextIrp := actual_NextIrp;
    CompleteCurrent_1 := actual_CompleteCurrent_1;
    extension_4 := actual_extension_4;
    OldIrql_6 := actual_OldIrql_6;
    call {:si_unique_call 1728} Tmp_711 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc oldIrp_1;
    call {:si_unique_call 1729} sdv_622 := sdv_IsListEmpty(0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_622 == 0;
    call {:si_unique_call 1730} headOfList := RemoveHeadList(QueueToProcess_2);
    call {:si_unique_call 1731} sdv_626 := sdv_containing_record(headOfList, 88);
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc vslice_dummy_var_1283;
    call {:si_unique_call 1732} vslice_dummy_var_518 := sdv_IoSetCancelRoutine(vslice_dummy_var_1283, 0);
    goto L11;

  L11:
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    assume {:nonnull} NextIrp != 0;
    assume NextIrp > 0;
    call {:si_unique_call 1733} IoReleaseCancelSpinLock(OldIrql_6);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} CompleteCurrent_1 != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} oldIrp_1 != 0;
    Tmp_711 := strConst__li2bpl3;
    call {:si_unique_call 1734} vslice_dummy_var_517 := CyyDbgPrintEx(9, Tmp_711);
    call {:si_unique_call 1735} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 1736} CyyIRPEpilogue(extension_4);
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} oldIrp_1 == 0;
    goto L1;

  anon8_Then:
    assume {:partition} CompleteCurrent_1 == 0;
    goto L1;

  anon7_Then:
    assume {:partition} sdv_622 != 0;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    goto L11;
}



procedure {:origName "CyyGetNextIrp"} CyyGetNextIrp(actual_CurrentOpIrp_6: int, actual_QueueToProcess_3: int, actual_NextIrp_1: int, actual_CompleteCurrent_2: int, actual_extension_5: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetNextIrp"} CyyGetNextIrp(actual_CurrentOpIrp_6: int, actual_QueueToProcess_3: int, actual_NextIrp_1: int, actual_CompleteCurrent_2: int, actual_extension_5: int)
{
  var {:pointer} Tmp_714: int;
  var {:scalar} oldIrql_8: int;
  var {:pointer} CurrentOpIrp_6: int;
  var {:pointer} QueueToProcess_3: int;
  var {:pointer} NextIrp_1: int;
  var {:scalar} CompleteCurrent_2: int;
  var {:pointer} extension_5: int;
  var vslice_dummy_var_519: int;

  anon0:
    call {:si_unique_call 1737} vslice_dummy_var_519 := __HAVOC_malloc(4);
    CurrentOpIrp_6 := actual_CurrentOpIrp_6;
    QueueToProcess_3 := actual_QueueToProcess_3;
    NextIrp_1 := actual_NextIrp_1;
    CompleteCurrent_2 := actual_CompleteCurrent_2;
    extension_5 := actual_extension_5;
    call {:si_unique_call 1738} Tmp_714 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_714 != 0;
    assume Tmp_714 > 0;
    Mem_T.INT4[Tmp_714] := oldIrql_8;
    call {:si_unique_call 1739} IoAcquireCancelSpinLock(Tmp_714);
    assume {:nonnull} Tmp_714 != 0;
    assume Tmp_714 > 0;
    oldIrql_8 := Mem_T.INT4[Tmp_714];
    call {:si_unique_call 1740} CyyGetNextIrpLocked(CurrentOpIrp_6, QueueToProcess_3, NextIrp_1, CompleteCurrent_2, extension_5, oldIrql_8);
    return;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_520: int;

  anon0:
    call {:si_unique_call 1741} vslice_dummy_var_520 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyCancelTimer"} CyyCancelTimer(actual_Timer: int, actual_PDevExt_14: int) returns (Tmp_717: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_717 == 1 || Tmp_717 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCancelTimer"} CyyCancelTimer(actual_Timer: int, actual_PDevExt_14: int) returns (Tmp_717: int)
{
  var {:scalar} cancelled: int;
  var {:pointer} Timer: int;
  var {:pointer} PDevExt_14: int;
  var vslice_dummy_var_1284: int;

  anon0:
    Timer := actual_Timer;
    PDevExt_14 := actual_PDevExt_14;
    call {:si_unique_call 1742} cancelled := KeCancelTimer(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} cancelled != 0;
    assume {:nonnull} Timer != 0;
    assume Timer > 0;
    havoc vslice_dummy_var_1284;
    call {:si_unique_call 1743} CyyDpcEpilogue(PDevExt_14, vslice_dummy_var_1284);
    goto L9;

  L9:
    Tmp_717 := cancelled;
    return;

  anon3_Then:
    assume {:partition} cancelled == 0;
    goto L9;
}



procedure {:origName "CyyIRPEpilogue"} CyyIRPEpilogue(actual_PDevExt_15: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyIRPEpilogue"} CyyIRPEpilogue(actual_PDevExt_15: int)
{
  var {:pointer} Tmp_719: int;
  var {:scalar} pendingCnt_1: int;
  var {:pointer} PDevExt_15: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_1285: int;

  anon0:
    call {:si_unique_call 1744} vslice_dummy_var_521 := __HAVOC_malloc(4);
    PDevExt_15 := actual_PDevExt_15;
    call {:si_unique_call 1745} Tmp_719 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    havoc vslice_dummy_var_1285;
    Mem_T.INT4[Tmp_719] := vslice_dummy_var_1285;
    call {:si_unique_call 1746} pendingCnt_1 := sdv_InterlockedDecrement(Tmp_719);
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    assume {:nonnull} Tmp_719 != 0;
    assume Tmp_719 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt_1 == 0;
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    call {:si_unique_call 1747} vslice_dummy_var_522 := KeSetEvent(PendingIRPEvent__CYY_DEVICE_EXTENSION(PDevExt_15), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt_1 != 0;
    goto L1;
}



procedure {:origName "CyySetTimer"} CyySetTimer(actual_Timer_1: int, actual_SD1_3: int, actual_Dpc_1: int, actual_PDevExt_16: int) returns (Tmp_721: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_721 == 1 || Tmp_721 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyySetTimer"} CyySetTimer(actual_Timer_1: int, actual_SD1_3: int, actual_Dpc_1: int, actual_PDevExt_16: int) returns (Tmp_721: int)
{
  var {:scalar} DueTime_1: int;
  var {:pointer} Tmp_722: int;
  var {:scalar} set: int;
  var {:pointer} SD1_3: int;
  var {:pointer} PDevExt_16: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_1286: int;
  var vslice_dummy_var_1287: int;

  anon0:
    call {:si_unique_call 1748} DueTime_1 := __HAVOC_malloc(20);
    SD1_3 := actual_SD1_3;
    PDevExt_16 := actual_PDevExt_16;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_3 != 0;
    assume SD1_3 > 0;
    call {:si_unique_call 1749} Tmp_722 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_16 != 0;
    assume PDevExt_16 > 0;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    havoc vslice_dummy_var_1286;
    Mem_T.INT4[Tmp_722] := vslice_dummy_var_1286;
    call {:si_unique_call 1750} vslice_dummy_var_523 := sdv_InterlockedIncrement(Tmp_722);
    assume {:nonnull} PDevExt_16 != 0;
    assume PDevExt_16 > 0;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    call {:si_unique_call 1751} set := KeSetTimer(0, DueTime_1, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} set != 0;
    call {:si_unique_call 1752} Tmp_722 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_16 != 0;
    assume PDevExt_16 > 0;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    havoc vslice_dummy_var_1287;
    Mem_T.INT4[Tmp_722] := vslice_dummy_var_1287;
    call {:si_unique_call 1753} vslice_dummy_var_524 := sdv_InterlockedDecrement(Tmp_722);
    assume {:nonnull} PDevExt_16 != 0;
    assume PDevExt_16 > 0;
    assume {:nonnull} Tmp_722 != 0;
    assume Tmp_722 > 0;
    goto L12;

  L12:
    Tmp_721 := set;
    return;

  anon3_Then:
    assume {:partition} set == 0;
    goto L12;
}



procedure {:origName "CyyCompleteIfError"} CyyCompleteIfError(actual_DeviceObject_12: int, actual_Irp_11: int) returns (Tmp_723: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} Tmp_723 == -1073741536 || Tmp_723 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCompleteIfError"} CyyCompleteIfError(actual_DeviceObject_12: int, actual_Irp_11: int) returns (Tmp_723: int)
{
  var {:pointer} irpSp_2: int;
  var {:pointer} Tmp_725: int;
  var {:scalar} status_24: int;
  var {:pointer} extension_6: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} Irp_11: int;
  var vslice_dummy_var_525: int;

  anon0:
    DeviceObject_12 := actual_DeviceObject_12;
    Irp_11 := actual_Irp_11;
    call {:si_unique_call 1754} Tmp_725 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    havoc extension_6;
    status_24 := 0;
    assume {:nonnull} extension_6 != 0;
    assume extension_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} extension_6 != 0;
    assume extension_6 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1755} irpSp_2 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpSp_2)] != 14;
    goto L17;

  L17:
    status_24 := -1073741536;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    Tmp_725 := strConst__li2bpl3;
    call {:si_unique_call 1756} vslice_dummy_var_525 := CyyDbgPrintEx(9, Tmp_725);
    call {:si_unique_call 1757} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1758} CyyIRPEpilogue(extension_6);
    goto L8;

  L8:
    Tmp_723 := status_24;
    return;

  anon10_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(irpSp_2)] == 14;
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L17;

  anon11_Then:
    goto L8;

  anon9_Then:
    goto L8;

  anon12_Then:
    goto L8;
}



procedure {:origName "CyyTimeoutXoff"} CyyTimeoutXoff(actual_Dpc_2: int, actual_DeferredContext_1: int, actual_SystemContext1_1: int, actual_SystemContext2_1: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyTimeoutXoff"} CyyTimeoutXoff(actual_Dpc_2: int, actual_DeferredContext_1: int, actual_SystemContext1_1: int, actual_SystemContext2_1: int)
{
  var {:pointer} Tmp_726: int;
  var {:pointer} Tmp_727: int;
  var {:scalar} OldIrql_7: int;
  var {:pointer} Extension_14: int;
  var {:pointer} Tmp_729: int;
  var {:pointer} Dpc_2: int;
  var {:pointer} DeferredContext_1: int;
  var vslice_dummy_var_526: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_528: int;

  anon0:
    call {:si_unique_call 1759} vslice_dummy_var_526 := __HAVOC_malloc(4);
    Dpc_2 := actual_Dpc_2;
    DeferredContext_1 := actual_DeferredContext_1;
    call {:si_unique_call 1760} Tmp_726 := __HAVOC_malloc(84);
    call {:si_unique_call 1761} Tmp_729 := __HAVOC_malloc(68);
    Extension_14 := DeferredContext_1;
    Tmp_726 := strConst__li2bpl193;
    call {:si_unique_call 1762} vslice_dummy_var_527 := CyyDbgPrintEx(2, Tmp_726);
    call {:si_unique_call 1763} Tmp_727 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_727 != 0;
    assume Tmp_727 > 0;
    Mem_T.INT4[Tmp_727] := OldIrql_7;
    call {:si_unique_call 1764} IoAcquireCancelSpinLock(Tmp_727);
    assume {:nonnull} Tmp_727 != 0;
    assume Tmp_727 > 0;
    OldIrql_7 := Mem_T.INT4[Tmp_727];
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    call {:si_unique_call 1765} CyyTryToCompleteCurrent#1(Extension_14, li2bplFunctionConstant195, OldIrql_7, -1073741812, CurrentXoffIrp__CYY_DEVICE_EXTENSION(Extension_14), 0, 0, 0, 0, 0, 4);
    call {:si_unique_call 1766} CyyDpcEpilogue(Extension_14, Dpc_2);
    Tmp_729 := strConst__li2bpl192;
    call {:si_unique_call 1767} vslice_dummy_var_528 := CyyDbgPrintEx(2, Tmp_729);
    return;
}



procedure {:origName "CyyCompleteWrite"} CyyCompleteWrite(actual_Dpc_3: int, actual_DeferredContext_2: int, actual_SystemContext1_2: int, actual_SystemContext2_2: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCompleteWrite"} CyyCompleteWrite(actual_Dpc_3: int, actual_DeferredContext_2: int, actual_SystemContext1_2: int, actual_SystemContext2_2: int)
{
  var {:pointer} Tmp_731: int;
  var {:scalar} OldIrql_8: int;
  var {:pointer} Extension_15: int;
  var {:pointer} Tmp_732: int;
  var {:pointer} Tmp_733: int;
  var {:pointer} Dpc_3: int;
  var {:pointer} DeferredContext_2: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;

  anon0:
    call {:si_unique_call 1768} vslice_dummy_var_529 := __HAVOC_malloc(4);
    Dpc_3 := actual_Dpc_3;
    DeferredContext_2 := actual_DeferredContext_2;
    call {:si_unique_call 1769} Tmp_731 := __HAVOC_malloc(76);
    call {:si_unique_call 1770} Tmp_733 := __HAVOC_malloc(92);
    Extension_15 := DeferredContext_2;
    Tmp_733 := strConst__li2bpl195;
    call {:si_unique_call 1771} vslice_dummy_var_530 := CyyDbgPrintEx(2, Tmp_733);
    call {:si_unique_call 1772} Tmp_732 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_732 != 0;
    assume Tmp_732 > 0;
    Mem_T.INT4[Tmp_732] := OldIrql_8;
    call {:si_unique_call 1773} IoAcquireCancelSpinLock(Tmp_732);
    assume {:nonnull} Tmp_732 != 0;
    assume Tmp_732 > 0;
    OldIrql_8 := Mem_T.INT4[Tmp_732];
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    call {:si_unique_call 1774} CyyTryToCompleteCurrent#1(Extension_15, 0, OldIrql_8, 0, CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_15), WriteQueue__CYY_DEVICE_EXTENSION(Extension_15), 0, WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_15), li2bplFunctionConstant194, li2bplFunctionConstant198, 1);
    call {:si_unique_call 1775} CyyDpcEpilogue(Extension_15, Dpc_3);
    Tmp_731 := strConst__li2bpl194;
    call {:si_unique_call 1776} vslice_dummy_var_531 := CyyDbgPrintEx(2, Tmp_731);
    return;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_532: int;

  anon0:
    call {:si_unique_call 1777} vslice_dummy_var_532 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyGetNextWrite"} CyyGetNextWrite(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_2: int, actual_CompleteCurrent_3: int, actual_Extension_16: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetNextWrite"} CyyGetNextWrite(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_2: int, actual_CompleteCurrent_3: int, actual_Extension_16: int)
{
  var {:pointer} s_p_e_c_i_a_l_15: int;
  var {:scalar} OldIrql_9: int;
  var {:pointer} sdv_639: int;
  var {:pointer} Irp_12: int;
  var {:pointer} Tmp_736: int;
  var {:scalar} OldIrql_10: int;
  var {:pointer} sdv_642: int;
  var {:pointer} Tmp_737: int;
  var {:pointer} sdv_644: int;
  var {:scalar} OldIrql_11: int;
  var {:pointer} Tmp_739: int;
  var {:scalar} s_p_e_c_i_a_l_16: int;
  var {:pointer} sdv_646: int;
  var {:pointer} sdv_647: int;
  var {:pointer} sdv_648: int;
  var {:pointer} s_p_e_c_i_a_l_17: int;
  var {:scalar} delta: int;
  var {:pointer} Xc_1: int;
  var {:scalar} s_p_e_c_i_a_l_18: int;
  var {:pointer} Tmp_740: int;
  var {:pointer} CurrentOpIrp_7: int;
  var {:pointer} QueueToProcess_4: int;
  var {:pointer} NewIrp_2: int;
  var {:scalar} CompleteCurrent_3: int;
  var {:pointer} Extension_16: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_534: int;
  var vslice_dummy_var_535: int;
  var vslice_dummy_var_536: int;
  var vslice_dummy_var_537: int;
  var vslice_dummy_var_538: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_1288: int;
  var vslice_dummy_var_1289: int;
  var vslice_dummy_var_1290: int;
  var vslice_dummy_var_1291: int;

  anon0:
    call {:si_unique_call 1778} vslice_dummy_var_533 := __HAVOC_malloc(4);
    call {:si_unique_call 1779} delta := __HAVOC_malloc(20);
    CurrentOpIrp_7 := actual_CurrentOpIrp_7;
    QueueToProcess_4 := actual_QueueToProcess_4;
    NewIrp_2 := actual_NewIrp_2;
    CompleteCurrent_3 := actual_CompleteCurrent_3;
    Extension_16 := actual_Extension_16;
    call {:si_unique_call 1780} Tmp_736 := __HAVOC_malloc(92);
    call {:si_unique_call 1781} Tmp_737 := __HAVOC_malloc(72);
    Tmp_736 := strConst__li2bpl196;
    call {:si_unique_call 1782} vslice_dummy_var_536 := CyyDbgPrintEx(2, Tmp_736);
    goto L6;

  L6:
    call {:si_unique_call 1783} s_p_e_c_i_a_l_15, sdv_639, Irp_12, OldIrql_10, sdv_642, sdv_644, OldIrql_11, Tmp_739, s_p_e_c_i_a_l_16, sdv_646, sdv_647, sdv_648, s_p_e_c_i_a_l_17, Xc_1, s_p_e_c_i_a_l_18, Tmp_740, CompleteCurrent_3, vslice_dummy_var_535, vslice_dummy_var_538, vslice_dummy_var_539 := CyyGetNextWrite_loop_L6(s_p_e_c_i_a_l_15, sdv_639, Irp_12, OldIrql_10, sdv_642, sdv_644, OldIrql_11, Tmp_739, s_p_e_c_i_a_l_16, sdv_646, sdv_647, sdv_648, s_p_e_c_i_a_l_17, delta, Xc_1, s_p_e_c_i_a_l_18, Tmp_740, CurrentOpIrp_7, QueueToProcess_4, NewIrp_2, CompleteCurrent_3, Extension_16, vslice_dummy_var_535, vslice_dummy_var_538, vslice_dummy_var_539);
    goto L6_last;

  L6_last:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_1291;
    call {:si_unique_call 1804} sdv_644 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1291);
    assume {:nonnull} sdv_644 != 0;
    assume sdv_644 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_644)] == 4;
    call {:si_unique_call 1784} Tmp_740 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    Mem_T.INT4[Tmp_740] := OldIrql_11;
    call {:si_unique_call 1785} IoAcquireCancelSpinLock(Tmp_740);
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    OldIrql_11 := Mem_T.INT4[Tmp_740];
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_1288;
    call {:si_unique_call 1786} sdv_648 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1288);
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    assume {:nonnull} sdv_648 != 0;
    assume sdv_648 > 0;
    call {:si_unique_call 1787} IoReleaseCancelSpinLock(OldIrql_11);
    goto L24;

  L24:
    call {:si_unique_call 1788} CyyGetNextIrp(CurrentOpIrp_7, QueueToProcess_4, NewIrp_2, CompleteCurrent_3, Extension_16);
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 1789} Tmp_740 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    Mem_T.INT4[Tmp_740] := OldIrql_9;
    call {:si_unique_call 1790} IoAcquireCancelSpinLock(Tmp_740);
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    OldIrql_9 := Mem_T.INT4[Tmp_740];
    call {:si_unique_call 1791} vslice_dummy_var_534 := KeSynchronizeExecution(0, li2bplFunctionConstant131, 0);
    call {:si_unique_call 1792} IoReleaseCancelSpinLock(OldIrql_9);
    goto L36;

  L36:
    Tmp_737 := strConst__li2bpl197;
    call {:si_unique_call 1793} vslice_dummy_var_537 := CyyDbgPrintEx(2, Tmp_737);
    return;

  anon16_Then:
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    havoc vslice_dummy_var_1289;
    call {:si_unique_call 1794} sdv_647 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1289);
    assume {:nonnull} sdv_647 != 0;
    assume sdv_647 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_647)] != 9;
    goto L36;

  anon17_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_647)] == 9;
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    havoc Tmp_739;
    assume {:nonnull} Tmp_739 != 0;
    assume Tmp_739 > 0;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_644)] != 4;
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_1290;
    call {:si_unique_call 1795} sdv_646 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1290);
    assume {:nonnull} sdv_646 != 0;
    assume sdv_646 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_646)] == 14;
    call {:si_unique_call 1796} Tmp_740 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    Mem_T.INT4[Tmp_740] := OldIrql_10;
    call {:si_unique_call 1797} IoAcquireCancelSpinLock(Tmp_740);
    assume {:nonnull} Tmp_740 != 0;
    assume Tmp_740 > 0;
    OldIrql_10 := Mem_T.INT4[Tmp_740];
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc Irp_12;
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    havoc Xc_1;
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L61;

  L61:
    call {:si_unique_call 1798} IoReleaseCancelSpinLock(OldIrql_10);
    goto L24;

  anon21_Then:
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    goto L61;

  anon19_Then:
    call {:si_unique_call 1799} vslice_dummy_var_535 := sdv_IoSetCancelRoutine(Irp_12, li2bplFunctionConstant199);
    s_p_e_c_i_a_l_16 := 2;
    call {:si_unique_call 1800} sdv_642 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    assume {:nonnull} sdv_642 != 0;
    assume sdv_642 > 0;
    s_p_e_c_i_a_l_15 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_642)));
    assume {:nonnull} s_p_e_c_i_a_l_15 != 0;
    assume s_p_e_c_i_a_l_15 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_15] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_15], s_p_e_c_i_a_l_16);
    CompleteCurrent_3 := 0;
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    call {:si_unique_call 1801} vslice_dummy_var_538 := KeSynchronizeExecution(0, li2bplFunctionConstant200, 0);
    assume {:nonnull} Xc_1 != 0;
    assume Xc_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Xc_1 != 0;
    assume Xc_1 > 0;
    assume {:nonnull} delta != 0;
    assume delta > 0;
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    call {:si_unique_call 1802} vslice_dummy_var_539 := CyySetTimer(XoffCountTimer__CYY_DEVICE_EXTENSION(Extension_16), delta, XoffCountTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_16), Extension_16);
    s_p_e_c_i_a_l_18 := 4;
    call {:si_unique_call 1803} sdv_639 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    assume {:nonnull} sdv_639 != 0;
    assume sdv_639 > 0;
    s_p_e_c_i_a_l_17 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_639)));
    assume {:nonnull} s_p_e_c_i_a_l_17 != 0;
    assume s_p_e_c_i_a_l_17 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_17] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_17], s_p_e_c_i_a_l_18);
    goto L61;

  anon20_Then:
    goto L61;

  anon18_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_646)] != 14;
    goto L24;
}



procedure {:origName "CyyWriteTimeout"} CyyWriteTimeout(actual_Dpc_4: int, actual_DeferredContext_3: int, actual_SystemContext1_3: int, actual_SystemContext2_3: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyWriteTimeout"} CyyWriteTimeout(actual_Dpc_4: int, actual_DeferredContext_3: int, actual_SystemContext1_3: int, actual_SystemContext2_3: int)
{
  var {:pointer} Tmp_741: int;
  var {:pointer} Tmp_742: int;
  var {:pointer} Tmp_743: int;
  var {:scalar} OldIrql_12: int;
  var {:pointer} Extension_17: int;
  var {:pointer} Dpc_4: int;
  var {:pointer} DeferredContext_3: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_542: int;

  anon0:
    call {:si_unique_call 1805} vslice_dummy_var_540 := __HAVOC_malloc(4);
    Dpc_4 := actual_Dpc_4;
    DeferredContext_3 := actual_DeferredContext_3;
    call {:si_unique_call 1806} Tmp_742 := __HAVOC_malloc(88);
    call {:si_unique_call 1807} Tmp_743 := __HAVOC_malloc(72);
    Extension_17 := DeferredContext_3;
    Tmp_742 := strConst__li2bpl199;
    call {:si_unique_call 1808} vslice_dummy_var_541 := CyyDbgPrintEx(2, Tmp_742);
    call {:si_unique_call 1809} Tmp_741 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    Mem_T.INT4[Tmp_741] := OldIrql_12;
    call {:si_unique_call 1810} IoAcquireCancelSpinLock(Tmp_741);
    assume {:nonnull} Tmp_741 != 0;
    assume Tmp_741 > 0;
    OldIrql_12 := Mem_T.INT4[Tmp_741];
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    call {:si_unique_call 1811} CyyTryToCompleteCurrent#1(Extension_17, li2bplFunctionConstant202, OldIrql_12, 258, CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_17), WriteQueue__CYY_DEVICE_EXTENSION(Extension_17), 0, WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_17), li2bplFunctionConstant194, li2bplFunctionConstant198, 4);
    call {:si_unique_call 1812} CyyDpcEpilogue(Extension_17, Dpc_4);
    Tmp_743 := strConst__li2bpl198;
    call {:si_unique_call 1813} vslice_dummy_var_542 := CyyDbgPrintEx(2, Tmp_743);
    return;
}



procedure {:origName "CyyCancelCurrentWrite"} CyyCancelCurrentWrite(actual_DeviceObject_13: int, actual_Irp_13: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCancelCurrentWrite"} CyyCancelCurrentWrite(actual_DeviceObject_13: int, actual_Irp_13: int)
{
  var {:pointer} Extension_18: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_543: int;

  anon0:
    call {:si_unique_call 1814} vslice_dummy_var_543 := __HAVOC_malloc(4);
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_13 := actual_Irp_13;
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc Extension_18;
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 1815} CyyTryToCompleteCurrent#1(Extension_18, li2bplFunctionConstant202, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_13)], -1073741536, CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_18), WriteQueue__CYY_DEVICE_EXTENSION(Extension_18), 0, WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_18), li2bplFunctionConstant194, li2bplFunctionConstant198, 2);
    return;
}



procedure {:origName "CyyCompleteXoff"} CyyCompleteXoff(actual_Dpc_5: int, actual_DeferredContext_4: int, actual_SystemContext1_4: int, actual_SystemContext2_4: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCompleteXoff"} CyyCompleteXoff(actual_Dpc_5: int, actual_DeferredContext_4: int, actual_SystemContext1_4: int, actual_SystemContext2_4: int)
{
  var {:pointer} Tmp_747: int;
  var {:pointer} Tmp_749: int;
  var {:scalar} OldIrql_13: int;
  var {:pointer} Tmp_750: int;
  var {:pointer} Extension_19: int;
  var {:pointer} Dpc_5: int;
  var {:pointer} DeferredContext_4: int;
  var vslice_dummy_var_544: int;
  var vslice_dummy_var_545: int;
  var vslice_dummy_var_546: int;

  anon0:
    call {:si_unique_call 1816} vslice_dummy_var_544 := __HAVOC_malloc(4);
    Dpc_5 := actual_Dpc_5;
    DeferredContext_4 := actual_DeferredContext_4;
    call {:si_unique_call 1817} Tmp_747 := __HAVOC_malloc(72);
    call {:si_unique_call 1818} Tmp_749 := __HAVOC_malloc(88);
    Extension_19 := DeferredContext_4;
    Tmp_749 := strConst__li2bpl201;
    call {:si_unique_call 1819} vslice_dummy_var_545 := CyyDbgPrintEx(2, Tmp_749);
    call {:si_unique_call 1820} Tmp_750 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    Mem_T.INT4[Tmp_750] := OldIrql_13;
    call {:si_unique_call 1821} IoAcquireCancelSpinLock(Tmp_750);
    assume {:nonnull} Tmp_750 != 0;
    assume Tmp_750 > 0;
    OldIrql_13 := Mem_T.INT4[Tmp_750];
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 1822} CyyTryToCompleteCurrent#1(Extension_19, 0, OldIrql_13, 0, CurrentXoffIrp__CYY_DEVICE_EXTENSION(Extension_19), 0, 0, XoffCountTimer__CYY_DEVICE_EXTENSION(Extension_19), 0, 0, 1);
    call {:si_unique_call 1823} CyyDpcEpilogue(Extension_19, Dpc_5);
    Tmp_747 := strConst__li2bpl200;
    call {:si_unique_call 1824} vslice_dummy_var_546 := CyyDbgPrintEx(2, Tmp_747);
    return;
}



procedure {:origName "CyyCancelCurrentXoff"} CyyCancelCurrentXoff(actual_DeviceObject_14: int, actual_Irp_14: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCancelCurrentXoff"} CyyCancelCurrentXoff(actual_DeviceObject_14: int, actual_Irp_14: int)
{
  var {:pointer} Extension_20: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Irp_14: int;
  var vslice_dummy_var_547: int;

  anon0:
    call {:si_unique_call 1825} vslice_dummy_var_547 := __HAVOC_malloc(4);
    DeviceObject_14 := actual_DeviceObject_14;
    Irp_14 := actual_Irp_14;
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc Extension_20;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    call {:si_unique_call 1826} CyyTryToCompleteCurrent#1(Extension_20, li2bplFunctionConstant195, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_14)], -1073741536, CurrentXoffIrp__CYY_DEVICE_EXTENSION(Extension_20), 0, 0, XoffCountTimer__CYY_DEVICE_EXTENSION(Extension_20), 0, 0, 2);
    return;
}



procedure {:origName "CyyWrite"} CyyWrite(actual_DeviceObject_15: int, actual_Irp_15: int) returns (Tmp_753: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, Mem_T.CancelIrql__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyWrite"} CyyWrite(actual_DeviceObject_15: int, actual_Irp_15: int) returns (Tmp_753: int)
{
  var {:pointer} Tmp_754: int;
  var {:pointer} Tmp_755: int;
  var {:scalar} sdv_657: int;
  var {:pointer} Tmp_756: int;
  var {:pointer} sdv_659: int;
  var {:pointer} Tmp_757: int;
  var {:pointer} Tmp_758: int;
  var {:pointer} Extension_21: int;
  var {:pointer} Tmp_760: int;
  var {:pointer} Tmp_761: int;
  var {:scalar} status_25: int;
  var {:pointer} Tmp_762: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_548: int;
  var vslice_dummy_var_549: int;
  var vslice_dummy_var_550: int;
  var vslice_dummy_var_551: int;
  var vslice_dummy_var_552: int;
  var vslice_dummy_var_553: int;
  var vslice_dummy_var_554: int;
  var vslice_dummy_var_555: int;

  anon0:
    DeviceObject_15 := actual_DeviceObject_15;
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 1827} Tmp_754 := __HAVOC_malloc(96);
    call {:si_unique_call 1828} Tmp_755 := __HAVOC_malloc(72);
    call {:si_unique_call 1829} Tmp_756 := __HAVOC_malloc(72);
    call {:si_unique_call 1830} Tmp_757 := __HAVOC_malloc(72);
    call {:si_unique_call 1831} Tmp_758 := __HAVOC_malloc(76);
    call {:si_unique_call 1832} Tmp_760 := __HAVOC_malloc(72);
    call {:si_unique_call 1833} Tmp_761 := __HAVOC_malloc(72);
    call {:si_unique_call 1834} Tmp_762 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc Extension_21;
    Tmp_758 := strConst__li2bpl206;
    call {:si_unique_call 1835} vslice_dummy_var_548 := CyyDbgPrintEx(2, Tmp_758);
    call {:si_unique_call 1836} status_25 := CyyIRPPrologue(Irp_15, Extension_21);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_25 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_25 != 259;
    Tmp_761 := strConst__li2bpl3;
    call {:si_unique_call 1837} vslice_dummy_var_549 := CyyDbgPrintEx(9, Tmp_761);
    call {:si_unique_call 1838} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1839} CyyIRPEpilogue(Extension_21);
    goto L18;

  L18:
    Tmp_757 := strConst__li2bpl202;
    call {:si_unique_call 1840} vslice_dummy_var_550 := CyyDbgPrintEx(2, Tmp_757);
    Tmp_753 := status_25;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} status_25 == 259;
    goto L18;

  anon11_Then:
    assume {:partition} status_25 == 0;
    Tmp_754 := strConst__li2bpl11;
    call {:si_unique_call 1841} vslice_dummy_var_551 := CyyDbgPrintEx(9, Tmp_754);
    call {:si_unique_call 1842} sdv_657 := CyyCompleteIfError(DeviceObject_15, Irp_15);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_657 != 0;
    Tmp_756 := strConst__li2bpl203;
    call {:si_unique_call 1843} vslice_dummy_var_552 := CyyDbgPrintEx(2, Tmp_756);
    Tmp_753 := -1073741536;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_657 == 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    call {:si_unique_call 1844} sdv_659 := sdv_IoGetCurrentIrpStackLocation(Irp_15);
    assume {:nonnull} sdv_659 != 0;
    assume sdv_659 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1845} status_25 := CyyStartOrQueue(Extension_21, Irp_15, WriteQueue__CYY_DEVICE_EXTENSION(Extension_21), CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_21), li2bplFunctionConstant194);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    Tmp_762 := strConst__li2bpl204;
    call {:si_unique_call 1846} vslice_dummy_var_553 := CyyDbgPrintEx(2, Tmp_762);
    Tmp_753 := status_25;
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    Tmp_760 := strConst__li2bpl3;
    call {:si_unique_call 1847} vslice_dummy_var_554 := CyyDbgPrintEx(9, Tmp_760);
    call {:si_unique_call 1848} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1849} CyyIRPEpilogue(Extension_21);
    Tmp_755 := strConst__li2bpl205;
    call {:si_unique_call 1850} vslice_dummy_var_555 := CyyDbgPrintEx(2, Tmp_755);
    Tmp_753 := 0;
    goto L1;
}



procedure {:origName "CyyCompleteWait"} CyyCompleteWait(actual_Dpc_6: int, actual_DeferredContext_5: int, actual_SystemContext1_5: int, actual_SystemContext2_5: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCompleteWait"} CyyCompleteWait(actual_Dpc_6: int, actual_DeferredContext_5: int, actual_SystemContext1_5: int, actual_SystemContext2_5: int)
{
  var {:pointer} Tmp_772: int;
  var {:pointer} Tmp_773: int;
  var {:scalar} OldIrql_15: int;
  var {:pointer} Tmp_774: int;
  var {:pointer} Extension_23: int;
  var {:pointer} Tmp_775: int;
  var {:pointer} Tmp_776: int;
  var {:pointer} Dpc_6: int;
  var {:pointer} DeferredContext_5: int;
  var vslice_dummy_var_556: int;
  var vslice_dummy_var_557: int;
  var vslice_dummy_var_558: int;
  var vslice_dummy_var_559: int;
  var vslice_dummy_var_560: int;

  anon0:
    call {:si_unique_call 1851} vslice_dummy_var_556 := __HAVOC_malloc(4);
    Dpc_6 := actual_Dpc_6;
    DeferredContext_5 := actual_DeferredContext_5;
    call {:si_unique_call 1852} Tmp_772 := __HAVOC_malloc(88);
    call {:si_unique_call 1853} Tmp_773 := __HAVOC_malloc(80);
    call {:si_unique_call 1854} Tmp_774 := __HAVOC_malloc(112);
    call {:si_unique_call 1855} Tmp_775 := __HAVOC_malloc(72);
    Extension_23 := DeferredContext_5;
    Tmp_772 := strConst__li2bpl212;
    call {:si_unique_call 1856} vslice_dummy_var_557 := CyyDbgPrintEx(2, Tmp_772);
    Tmp_773 := strConst__li2bpl209;
    call {:si_unique_call 1857} vslice_dummy_var_558 := CyyDbgPrintEx(6, Tmp_773);
    call {:si_unique_call 1858} Tmp_776 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    Mem_T.INT4[Tmp_776] := OldIrql_15;
    call {:si_unique_call 1859} IoAcquireCancelSpinLock(Tmp_776);
    assume {:nonnull} Tmp_776 != 0;
    assume Tmp_776 > 0;
    OldIrql_15 := Mem_T.INT4[Tmp_776];
    Tmp_774 := strConst__li2bpl210;
    call {:si_unique_call 1860} vslice_dummy_var_559 := CyyDbgPrintEx(7, Tmp_774);
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    call {:si_unique_call 1861} CyyTryToCompleteCurrent#1(Extension_23, 0, OldIrql_15, 0, CurrentWaitIrp__CYY_DEVICE_EXTENSION(Extension_23), 0, 0, 0, 0, 0, 1);
    call {:si_unique_call 1862} CyyDpcEpilogue(Extension_23, Dpc_6);
    Tmp_775 := strConst__li2bpl211;
    call {:si_unique_call 1863} vslice_dummy_var_560 := CyyDbgPrintEx(2, Tmp_775);
    return;
}



procedure {:origName "CyyCancelWait"} CyyCancelWait(actual_DeviceObject_16: int, actual_Irp_16: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCancelWait"} CyyCancelWait(actual_DeviceObject_16: int, actual_Irp_16: int)
{
  var {:pointer} Tmp_777: int;
  var {:pointer} Tmp_778: int;
  var {:pointer} Extension_24: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_561: int;
  var vslice_dummy_var_562: int;
  var vslice_dummy_var_563: int;

  anon0:
    call {:si_unique_call 1864} vslice_dummy_var_561 := __HAVOC_malloc(4);
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 1865} Tmp_777 := __HAVOC_malloc(108);
    call {:si_unique_call 1866} Tmp_778 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc Extension_24;
    Tmp_778 := strConst__li2bpl214;
    call {:si_unique_call 1867} vslice_dummy_var_562 := CyyDbgPrintEx(6, Tmp_778);
    Tmp_777 := strConst__li2bpl213;
    call {:si_unique_call 1868} vslice_dummy_var_563 := CyyDbgPrintEx(7, Tmp_777);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 1869} CyyTryToCompleteCurrent#1(Extension_24, li2bplFunctionConstant181, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_16)], -1073741536, CurrentWaitIrp__CYY_DEVICE_EXTENSION(Extension_24), 0, 0, 0, 0, 0, 2);
    return;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_564: int;

  anon0:
    call {:si_unique_call 1870} vslice_dummy_var_564 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyStartMask"} CyyStartMask(actual_Extension_25: int) returns (Tmp_783: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyStartMask"} CyyStartMask(actual_Extension_25: int) returns (Tmp_783: int)
{
  var {:pointer} Tmp_784: int;
  var {:pointer} s_p_e_c_i_a_l_25: int;
  var {:scalar} FirstStatus_1: int;
  var {:pointer} Tmp_785: int;
  var {:scalar} SetFirstStatus_1: int;
  var {:pointer} Tmp_786: int;
  var {:pointer} Tmp_787: int;
  var {:pointer} Tmp_788: int;
  var {:pointer} Tmp_789: int;
  var {:pointer} Tmp_790: int;
  var {:pointer} Tmp_791: int;
  var {:pointer} Tmp_792: int;
  var {:pointer} IrpSp_2: int;
  var {:scalar} OldIrql_16: int;
  var {:pointer} Tmp_793: int;
  var {:pointer} NewIrp_4: int;
  var {:scalar} s_p_e_c_i_a_l_26: int;
  var {:pointer} Tmp_794: int;
  var {:pointer} sdv_699: int;
  var {:pointer} Tmp_795: int;
  var {:pointer} Tmp_796: int;
  var {:pointer} Tmp_797: int;
  var {:pointer} Tmp_798: int;
  var {:pointer} Tmp_799: int;
  var {:pointer} Tmp_800: int;
  var {:pointer} sdv_702: int;
  var {:pointer} Tmp_801: int;
  var {:pointer} Tmp_802: int;
  var {:pointer} Extension_25: int;
  var vslice_dummy_var_565: int;
  var vslice_dummy_var_566: int;
  var vslice_dummy_var_567: int;
  var vslice_dummy_var_568: int;
  var vslice_dummy_var_569: int;
  var vslice_dummy_var_570: int;
  var vslice_dummy_var_571: int;
  var vslice_dummy_var_572: int;
  var vslice_dummy_var_573: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_575: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_577: int;
  var vslice_dummy_var_578: int;
  var vslice_dummy_var_579: int;
  var vslice_dummy_var_580: int;
  var vslice_dummy_var_581: int;
  var vslice_dummy_var_1292: int;
  var vslice_dummy_var_1293: int;
  var vslice_dummy_var_1294: int;
  var vslice_dummy_var_1295: int;

  anon0:
    call {:si_unique_call 1871} NewIrp_4 := __HAVOC_malloc(4);
    Extension_25 := actual_Extension_25;
    call {:si_unique_call 1872} Tmp_784 := __HAVOC_malloc(68);
    call {:si_unique_call 1873} Tmp_785 := __HAVOC_malloc(288);
    call {:si_unique_call 1874} Tmp_787 := __HAVOC_malloc(84);
    call {:si_unique_call 1875} Tmp_788 := __HAVOC_malloc(288);
    call {:si_unique_call 1876} Tmp_789 := __HAVOC_malloc(288);
    call {:si_unique_call 1877} Tmp_790 := __HAVOC_malloc(368);
    call {:si_unique_call 1878} Tmp_791 := __HAVOC_malloc(160);
    call {:si_unique_call 1879} Tmp_795 := __HAVOC_malloc(288);
    call {:si_unique_call 1880} Tmp_796 := __HAVOC_malloc(284);
    call {:si_unique_call 1881} Tmp_797 := __HAVOC_malloc(148);
    call {:si_unique_call 1882} Tmp_798 := __HAVOC_malloc(128);
    call {:si_unique_call 1883} Tmp_799 := __HAVOC_malloc(368);
    call {:si_unique_call 1884} Tmp_800 := __HAVOC_malloc(368);
    call {:si_unique_call 1885} Tmp_802 := __HAVOC_malloc(368);
    SetFirstStatus_1 := 0;
    Tmp_784 := strConst__li2bpl222;
    call {:si_unique_call 1886} vslice_dummy_var_566 := CyyDbgPrintEx(6, Tmp_784);
    goto L11;

  L11:
    call {:si_unique_call 1887} s_p_e_c_i_a_l_25, FirstStatus_1, Tmp_785, SetFirstStatus_1, Tmp_786, Tmp_787, Tmp_788, Tmp_789, Tmp_790, Tmp_791, Tmp_792, IrpSp_2, OldIrql_16, Tmp_793, s_p_e_c_i_a_l_26, Tmp_794, sdv_699, Tmp_795, Tmp_796, Tmp_797, Tmp_798, Tmp_799, Tmp_800, sdv_702, Tmp_801, Tmp_802, vslice_dummy_var_565, vslice_dummy_var_567, vslice_dummy_var_568, vslice_dummy_var_569, vslice_dummy_var_570, vslice_dummy_var_571, vslice_dummy_var_572, vslice_dummy_var_573, vslice_dummy_var_574, vslice_dummy_var_575, vslice_dummy_var_576, vslice_dummy_var_577, vslice_dummy_var_578, vslice_dummy_var_579, vslice_dummy_var_580, vslice_dummy_var_581 := CyyStartMask_loop_L11(s_p_e_c_i_a_l_25, FirstStatus_1, Tmp_785, SetFirstStatus_1, Tmp_786, Tmp_787, Tmp_788, Tmp_789, Tmp_790, Tmp_791, Tmp_792, IrpSp_2, OldIrql_16, Tmp_793, NewIrp_4, s_p_e_c_i_a_l_26, Tmp_794, sdv_699, Tmp_795, Tmp_796, Tmp_797, Tmp_798, Tmp_799, Tmp_800, sdv_702, Tmp_801, Tmp_802, Extension_25, vslice_dummy_var_565, vslice_dummy_var_567, vslice_dummy_var_568, vslice_dummy_var_569, vslice_dummy_var_570, vslice_dummy_var_571, vslice_dummy_var_572, vslice_dummy_var_573, vslice_dummy_var_574, vslice_dummy_var_575, vslice_dummy_var_576, vslice_dummy_var_577, vslice_dummy_var_578, vslice_dummy_var_579, vslice_dummy_var_580, vslice_dummy_var_581);
    goto L11_last;

  L11_last:
    Tmp_798 := strConst__li2bpl215;
    call {:si_unique_call 1913} vslice_dummy_var_567 := CyyDbgPrintEx(7, Tmp_798);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc vslice_dummy_var_1295;
    call {:si_unique_call 1914} IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1295);
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Tmp_787 := strConst__li2bpl216;
    call {:si_unique_call 1888} vslice_dummy_var_568 := CyyDbgPrintEx(7, Tmp_787);
    call {:si_unique_call 1889} vslice_dummy_var_565 := KeSynchronizeExecution(0, li2bplFunctionConstant178, 0);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_794;
    assume {:nonnull} Tmp_794 != 0;
    assume Tmp_794 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 1890} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_25), MaskQueue__CYY_DEVICE_EXTENSION(Extension_25), NewIrp_4, 1, Extension_25);
    Tmp_799 := strConst__li2bpl218;
    call {:si_unique_call 1891} vslice_dummy_var_569 := CyyDbgPrintEx(7, Tmp_799);
    goto L37;

  L37:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    Tmp_783 := FirstStatus_1;
    return;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_785 := strConst__li2bpl217;
    call {:si_unique_call 1892} vslice_dummy_var_570 := CyyDbgPrintEx(7, Tmp_785);
    FirstStatus_1 := 0;
    SetFirstStatus_1 := 1;
    goto L31;

  anon19_Then:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 1893} Tmp_793 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_793 != 0;
    assume Tmp_793 > 0;
    Mem_T.INT4[Tmp_793] := OldIrql_16;
    call {:si_unique_call 1894} IoAcquireCancelSpinLock(Tmp_793);
    assume {:nonnull} Tmp_793 != 0;
    assume Tmp_793 > 0;
    OldIrql_16 := Mem_T.INT4[Tmp_793];
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_792;
    assume {:nonnull} Tmp_792 != 0;
    assume Tmp_792 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_791 := strConst__li2bpl221;
    call {:si_unique_call 1895} vslice_dummy_var_574 := CyyDbgPrintEx(7, Tmp_791);
    call {:si_unique_call 1896} IoReleaseCancelSpinLock(OldIrql_16);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_801;
    assume {:nonnull} Tmp_801 != 0;
    assume Tmp_801 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L64;

  L64:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 1897} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_25), MaskQueue__CYY_DEVICE_EXTENSION(Extension_25), NewIrp_4, 1, Extension_25);
    Tmp_800 := strConst__li2bpl218;
    call {:si_unique_call 1898} vslice_dummy_var_575 := CyyDbgPrintEx(7, Tmp_800);
    goto L37;

  anon27_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_789 := strConst__li2bpl217;
    call {:si_unique_call 1899} vslice_dummy_var_576 := CyyDbgPrintEx(7, Tmp_789);
    FirstStatus_1 := -1073741536;
    SetFirstStatus_1 := 1;
    goto L64;

  anon26_Then:
    Tmp_797 := strConst__li2bpl220;
    call {:si_unique_call 1900} vslice_dummy_var_577 := CyyDbgPrintEx(7, Tmp_797);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L76;

  L76:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc vslice_dummy_var_1292;
    call {:si_unique_call 1901} sdv_699 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1292);
    assume {:nonnull} sdv_699 != 0;
    assume sdv_699 > 0;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc vslice_dummy_var_1293;
    call {:si_unique_call 1902} vslice_dummy_var_578 := sdv_IoSetCancelRoutine(vslice_dummy_var_1293, li2bplFunctionConstant179);
    s_p_e_c_i_a_l_26 := 2;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc vslice_dummy_var_1294;
    call {:si_unique_call 1903} sdv_702 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1294);
    assume {:nonnull} sdv_702 != 0;
    assume sdv_702 > 0;
    s_p_e_c_i_a_l_25 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_702)));
    assume {:nonnull} s_p_e_c_i_a_l_25 != 0;
    assume s_p_e_c_i_a_l_25 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_25] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_25], s_p_e_c_i_a_l_26);
    call {:si_unique_call 1904} vslice_dummy_var_579 := KeSynchronizeExecution(0, li2bplFunctionConstant180, 0);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 1905} CyyGetNextIrpLocked(CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_25), MaskQueue__CYY_DEVICE_EXTENSION(Extension_25), NewIrp_4, 0, Extension_25, OldIrql_16);
    Tmp_790 := strConst__li2bpl218;
    call {:si_unique_call 1906} vslice_dummy_var_580 := CyyDbgPrintEx(7, Tmp_790);
    goto L37;

  anon23_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_795 := strConst__li2bpl217;
    call {:si_unique_call 1907} vslice_dummy_var_581 := CyyDbgPrintEx(7, Tmp_795);
    FirstStatus_1 := 259;
    SetFirstStatus_1 := 1;
    call {:si_unique_call 1908} sdv_IoMarkIrpPending(0);
    goto L76;

  anon22_Then:
    goto L41;

  L41:
    Tmp_796 := strConst__li2bpl219;
    call {:si_unique_call 1909} vslice_dummy_var_571 := CyyDbgPrintEx(7, Tmp_796);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_786;
    assume {:nonnull} Tmp_786 != 0;
    assume Tmp_786 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L112;

  L112:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 1910} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_25), MaskQueue__CYY_DEVICE_EXTENSION(Extension_25), NewIrp_4, 1, Extension_25);
    Tmp_802 := strConst__li2bpl218;
    call {:si_unique_call 1911} vslice_dummy_var_572 := CyyDbgPrintEx(7, Tmp_802);
    goto L37;

  anon25_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_788 := strConst__li2bpl217;
    call {:si_unique_call 1912} vslice_dummy_var_573 := CyyDbgPrintEx(7, Tmp_788);
    FirstStatus_1 := -1073741811;
    SetFirstStatus_1 := 1;
    goto L112;

  anon20_Then:
    goto L41;
}



procedure {:origName "CyyStartFlush"} CyyStartFlush(actual_Extension_26: int) returns (Tmp_803: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyStartFlush"} CyyStartFlush(actual_Extension_26: int) returns (Tmp_803: int)
{
  var {:pointer} Tmp_805: int;
  var {:pointer} NewIrp_5: int;
  var {:pointer} Extension_26: int;
  var vslice_dummy_var_582: int;

  anon0:
    call {:si_unique_call 1915} NewIrp_5 := __HAVOC_malloc(4);
    Extension_26 := actual_Extension_26;
    call {:si_unique_call 1916} sdv_do_paged_code_check();
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    havoc Tmp_805;
    assume {:nonnull} Tmp_805 != 0;
    assume Tmp_805 > 0;
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    call {:si_unique_call 1917} CyyGetNextWrite(CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_26), WriteQueue__CYY_DEVICE_EXTENSION(Extension_26), NewIrp_5, 1, Extension_26);
    assume {:nonnull} NewIrp_5 != 0;
    assume NewIrp_5 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 1918} vslice_dummy_var_582 := CyyStartWrite#1(Extension_26);
    goto L12;

  L12:
    Tmp_803 := 0;
    goto LM2;

  LM2:
    return;

  anon5_Then:
    goto L12;

  anon6_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyDbgPrintEx"} CyyDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_806: int);
  free ensures {:va_keep} Tmp_806 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyDbgPrintEx"} CyyDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_806: int)
{

  anon0:
    Tmp_806 := 0;
    return;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead: int)
{
  var {:pointer} ListHead: int;
  var vslice_dummy_var_583: int;

  anon0:
    call {:si_unique_call 1919} vslice_dummy_var_583 := __HAVOC_malloc(4);
    ListHead := actual_ListHead;
    assume {:nonnull} ListHead != 0;
    assume ListHead > 0;
    assume {:nonnull} ListHead != 0;
    assume ListHead > 0;
    return;
}



procedure {:origName "CyyFlush"} CyyFlush(actual_DeviceObject_17: int, actual_Irp_17: int) returns (Tmp_810: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, Mem_T.CancelIrql__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyFlush"} CyyFlush(actual_DeviceObject_17: int, actual_Irp_17: int) returns (Tmp_810: int)
{
  var {:pointer} Tmp_811: int;
  var {:pointer} Tmp_812: int;
  var {:pointer} Tmp_813: int;
  var {:pointer} Extension_27: int;
  var {:scalar} sdv_712: int;
  var {:pointer} Tmp_815: int;
  var {:scalar} status_26: int;
  var {:pointer} Tmp_816: int;
  var {:pointer} Tmp_817: int;
  var {:pointer} DeviceObject_17: int;
  var {:pointer} Irp_17: int;
  var vslice_dummy_var_584: int;
  var vslice_dummy_var_585: int;
  var vslice_dummy_var_586: int;
  var vslice_dummy_var_587: int;
  var vslice_dummy_var_588: int;
  var vslice_dummy_var_589: int;

  anon0:
    DeviceObject_17 := actual_DeviceObject_17;
    Irp_17 := actual_Irp_17;
    call {:si_unique_call 1920} Tmp_811 := __HAVOC_malloc(72);
    call {:si_unique_call 1921} Tmp_812 := __HAVOC_malloc(76);
    call {:si_unique_call 1922} Tmp_813 := __HAVOC_malloc(72);
    call {:si_unique_call 1923} Tmp_815 := __HAVOC_malloc(72);
    call {:si_unique_call 1924} Tmp_816 := __HAVOC_malloc(96);
    call {:si_unique_call 1925} Tmp_817 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_17 != 0;
    assume DeviceObject_17 > 0;
    havoc Extension_27;
    call {:si_unique_call 1926} sdv_do_paged_code_check();
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} yogi_error != 1;
    Tmp_816 := strConst__li2bpl11;
    call {:si_unique_call 1927} vslice_dummy_var_584 := CyyDbgPrintEx(9, Tmp_816);
    Tmp_812 := strConst__li2bpl223;
    call {:si_unique_call 1928} vslice_dummy_var_585 := CyyDbgPrintEx(2, Tmp_812);
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    call {:si_unique_call 1929} status_26 := CyyIRPPrologue(Irp_17, Extension_27);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_26 != 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status_26 >= 0;
    goto L29;

  L29:
    Tmp_811 := strConst__li2bpl224;
    call {:si_unique_call 1930} vslice_dummy_var_586 := CyyDbgPrintEx(2, Tmp_811);
    Tmp_810 := status_26;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon14_Then:
    assume {:partition} 0 > status_26;
    Tmp_815 := strConst__li2bpl3;
    call {:si_unique_call 1931} vslice_dummy_var_587 := CyyDbgPrintEx(9, Tmp_815);
    call {:si_unique_call 1932} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1933} CyyIRPEpilogue(Extension_27);
    goto L29;

  anon11_Then:
    assume {:partition} status_26 == 0;
    call {:si_unique_call 1934} sdv_712 := CyyCompleteIfError(DeviceObject_17, Irp_17);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_712 != 0;
    Tmp_813 := strConst__li2bpl225;
    call {:si_unique_call 1935} vslice_dummy_var_588 := CyyDbgPrintEx(2, Tmp_813);
    Tmp_810 := -1073741536;
    goto L1;

  anon12_Then:
    assume {:partition} sdv_712 == 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    call {:si_unique_call 1936} status_26 := CyyStartOrQueue(Extension_27, Irp_17, WriteQueue__CYY_DEVICE_EXTENSION(Extension_27), CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_27), li2bplFunctionConstant113);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    Tmp_817 := strConst__li2bpl226;
    call {:si_unique_call 1937} vslice_dummy_var_589 := CyyDbgPrintEx(2, Tmp_817);
    Tmp_810 := status_26;
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon13_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_1: int) returns (Tmp_818: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_1: int) returns (Tmp_818: int)
{
  var {:pointer} Entry: int;
  var {:pointer} Flink: int;
  var {:pointer} ListHead_1: int;

  anon0:
    ListHead_1 := actual_ListHead_1;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    havoc Entry;
    assume {:nonnull} Entry != 0;
    assume Entry > 0;
    havoc Flink;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    Tmp_818 := Entry;
    return;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_590: int;

  anon0:
    call {:si_unique_call 1938} vslice_dummy_var_590 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyySetInformationFile"} CyySetInformationFile(actual_DeviceObject_18: int, actual_Irp_18: int) returns (Tmp_822: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyySetInformationFile"} CyySetInformationFile(actual_DeviceObject_18: int, actual_Irp_18: int) returns (Tmp_822: int)
{
  var {:pointer} Tmp_823: int;
  var {:scalar} Status_2: int;
  var {:pointer} Tmp_824: int;
  var {:pointer} sdv_715: int;
  var {:pointer} sdv_718: int;
  var {:scalar} sdv_719: int;
  var {:pointer} Tmp_826: int;
  var {:pointer} DeviceObject_18: int;
  var {:pointer} Irp_18: int;
  var vslice_dummy_var_591: int;
  var vslice_dummy_var_592: int;
  var vslice_dummy_var_593: int;
  var vslice_dummy_var_1296: int;
  var vslice_dummy_var_1297: int;
  var vslice_dummy_var_1298: int;

  anon0:
    DeviceObject_18 := actual_DeviceObject_18;
    Irp_18 := actual_Irp_18;
    call {:si_unique_call 1939} Tmp_823 := __HAVOC_malloc(96);
    call {:si_unique_call 1940} Tmp_824 := __HAVOC_malloc(72);
    call {:si_unique_call 1941} Tmp_826 := __HAVOC_malloc(72);
    call {:si_unique_call 1942} sdv_do_paged_code_check();
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc vslice_dummy_var_1296;
    call {:si_unique_call 1943} Status_2 := CyyIRPPrologue(Irp_18, vslice_dummy_var_1296);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Status_2 != 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Status_2 != 259;
    Tmp_824 := strConst__li2bpl3;
    call {:si_unique_call 1944} vslice_dummy_var_591 := CyyDbgPrintEx(9, Tmp_824);
    call {:si_unique_call 1945} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc vslice_dummy_var_1297;
    call {:si_unique_call 1946} CyyIRPEpilogue(vslice_dummy_var_1297);
    goto L16;

  L16:
    Tmp_822 := Status_2;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon14_Then:
    assume {:partition} Status_2 == 259;
    goto L16;

  anon13_Then:
    assume {:partition} Status_2 == 0;
    Tmp_823 := strConst__li2bpl11;
    call {:si_unique_call 1947} vslice_dummy_var_592 := CyyDbgPrintEx(9, Tmp_823);
    call {:si_unique_call 1948} sdv_719 := CyyCompleteIfError(DeviceObject_18, Irp_18);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_719 != 0;
    Tmp_822 := -1073741536;
    goto L1;

  anon15_Then:
    assume {:partition} sdv_719 == 0;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    call {:si_unique_call 1949} sdv_718 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} sdv_718 != 0;
    assume sdv_718 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto L39;

  L39:
    Status_2 := 0;
    goto L40;

  L40:
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    Tmp_826 := strConst__li2bpl3;
    call {:si_unique_call 1950} vslice_dummy_var_593 := CyyDbgPrintEx(9, Tmp_826);
    call {:si_unique_call 1951} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    havoc vslice_dummy_var_1298;
    call {:si_unique_call 1952} CyyIRPEpilogue(vslice_dummy_var_1298);
    Tmp_822 := Status_2;
    goto L1;

  anon16_Then:
    call {:si_unique_call 1953} sdv_715 := sdv_IoGetCurrentIrpStackLocation(Irp_18);
    assume {:nonnull} sdv_715 != 0;
    assume sdv_715 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    Status_2 := -1073741811;
    goto L40;

  anon17_Then:
    goto L39;

  anon18_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "CyyQueryInformationFile"} CyyQueryInformationFile(actual_DeviceObject_19: int, actual_Irp_19: int) returns (Tmp_827: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyQueryInformationFile"} CyyQueryInformationFile(actual_DeviceObject_19: int, actual_Irp_19: int) returns (Tmp_827: int)
{
  var {:scalar} Status_3: int;
  var {:pointer} Tmp_828: int;
  var {:pointer} IrpSp_3: int;
  var {:pointer} Tmp_829: int;
  var {:scalar} sdv_726: int;
  var {:pointer} Tmp_830: int;
  var {:scalar} status_27: int;
  var {:pointer} Buf: int;
  var {:pointer} Tmp_832: int;
  var {:pointer} DeviceObject_19: int;
  var {:pointer} Irp_19: int;
  var vslice_dummy_var_594: int;
  var vslice_dummy_var_595: int;
  var vslice_dummy_var_596: int;
  var vslice_dummy_var_1299: int;
  var vslice_dummy_var_1300: int;
  var vslice_dummy_var_1301: int;

  anon0:
    DeviceObject_19 := actual_DeviceObject_19;
    Irp_19 := actual_Irp_19;
    call {:si_unique_call 1954} Tmp_828 := __HAVOC_malloc(72);
    call {:si_unique_call 1955} Tmp_830 := __HAVOC_malloc(96);
    call {:si_unique_call 1956} Tmp_832 := __HAVOC_malloc(72);
    call {:si_unique_call 1957} sdv_do_paged_code_check();
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    havoc vslice_dummy_var_1299;
    call {:si_unique_call 1958} status_27 := CyyIRPPrologue(Irp_19, vslice_dummy_var_1299);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} status_27 != 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status_27 != 259;
    Tmp_832 := strConst__li2bpl3;
    call {:si_unique_call 1959} vslice_dummy_var_594 := CyyDbgPrintEx(9, Tmp_832);
    call {:si_unique_call 1960} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    havoc vslice_dummy_var_1300;
    call {:si_unique_call 1961} CyyIRPEpilogue(vslice_dummy_var_1300);
    goto L18;

  L18:
    Tmp_827 := status_27;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon14_Then:
    assume {:partition} status_27 == 259;
    goto L18;

  anon13_Then:
    assume {:partition} status_27 == 0;
    Tmp_830 := strConst__li2bpl11;
    call {:si_unique_call 1962} vslice_dummy_var_595 := CyyDbgPrintEx(9, Tmp_830);
    call {:si_unique_call 1963} sdv_726 := CyyCompleteIfError(DeviceObject_19, Irp_19);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_726 != 0;
    Tmp_827 := -1073741536;
    goto L1;

  anon15_Then:
    assume {:partition} sdv_726 == 0;
    call {:si_unique_call 1964} IrpSp_3 := sdv_IoGetCurrentIrpStackLocation(Irp_19);
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    Status_3 := 0;
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    havoc Buf;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L49;

  L49:
    Tmp_828 := strConst__li2bpl3;
    call {:si_unique_call 1965} vslice_dummy_var_596 := CyyDbgPrintEx(9, Tmp_828);
    call {:si_unique_call 1966} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject_19 != 0;
    assume DeviceObject_19 > 0;
    havoc vslice_dummy_var_1301;
    call {:si_unique_call 1967} CyyIRPEpilogue(vslice_dummy_var_1301);
    Tmp_827 := Status_3;
    goto L1;

  anon18_Then:
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    havoc Tmp_829;
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L49;

  anon16_Then:
    Status_3 := -1073741811;
    assume {:nonnull} Irp_19 != 0;
    assume Irp_19 > 0;
    goto L49;

  anon17_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "_sdv_init17"} _sdv_init17();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init17"} _sdv_init17()
{
  var vslice_dummy_var_597: int;

  anon0:
    call {:si_unique_call 1968} vslice_dummy_var_597 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_598: int;

  anon0:
    call {:si_unique_call 1969} vslice_dummy_var_598 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_DbgBreakPoint"} {:osmodel} sdv_DbgBreakPoint();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_DbgBreakPoint"} {:osmodel} sdv_DbgBreakPoint()
{
  var vslice_dummy_var_599: int;

  anon0:
    call {:si_unique_call 1970} vslice_dummy_var_599 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_600: int;

  anon0:
    call {:si_unique_call 1971} vslice_dummy_var_600 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_841: int);
  free ensures {:va_keep} Tmp_841 == actual_Address;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_841: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    record := Address;
    Tmp_841 := record;
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_601: int;

  anon0:
    call {:si_unique_call 1972} vslice_dummy_var_601 := __HAVOC_malloc(4);
    p := actual_p;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    assume {:nonnull} p != 0;
    assume p > 0;
    Mem_T.INT4[p] := sdv_irql_previous;
    return;
}



procedure {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_845: int);
  modifies alloc, Mem_T.INT4, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_845: int)
{
  var {:scalar} status_28: int;
  var {:pointer} p1: int;
  var {:pointer} p2: int;

  anon0:
    p1 := actual_p1;
    p2 := actual_p2;
    status_28 := 0;
    call {:si_unique_call 1973} sdv_stub_add_begin();
    call {:si_unique_call 1974} status_28 := CyyAddDevice(p1, p2);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 1975} sdv_stub_add_end();
    Tmp_845 := status_28;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_847: int);
  free ensures {:va_keep} Tmp_847 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_847: int)
{

  anon0:
    Tmp_847 := 1;
    return;
}



procedure {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end();
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end()
{
  var vslice_dummy_var_602: int;

  anon0:
    call {:si_unique_call 1976} vslice_dummy_var_602 := __HAVOC_malloc(4);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int)
{
  var vslice_dummy_var_603: int;

  anon0:
    call {:si_unique_call 1977} vslice_dummy_var_603 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer_2: int, actual_structPtr888DueTime: int, actual_Dpc_7: int) returns (Tmp_853: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_853 == 1 || Tmp_853 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer_2: int, actual_structPtr888DueTime: int, actual_Dpc_7: int) returns (Tmp_853: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 1978} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_853 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_853 := 0;
    goto L1;
}



procedure {:origName "IoGetDeviceProperty"} {:osmodel} IoGetDeviceProperty(actual_DeviceObject_20: int, actual_DeviceProperty: int, actual_BufferLength: int, actual_PropertyBuffer: int, actual_ResultLength: int) returns (Tmp_855: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_855 == -1073741584 || Tmp_855 == -1073741808 || Tmp_855 == -1073741823 || Tmp_855 == 0 || Tmp_855 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoGetDeviceProperty"} {:osmodel} IoGetDeviceProperty(actual_DeviceObject_20: int, actual_DeviceProperty: int, actual_BufferLength: int, actual_PropertyBuffer: int, actual_ResultLength: int) returns (Tmp_855: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_729: int;
  var {:scalar} BufferLength: int;
  var {:pointer} ResultLength: int;

  anon0:
    BufferLength := actual_BufferLength;
    ResultLength := actual_ResultLength;
    L := sdv_729;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 0 >= L;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} L != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == -1;
    Tmp_855 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} L != -1;
    Tmp_855 := -1073741808;
    goto L1;

  anon10_Then:
    assume {:partition} L == 0;
    Tmp_855 := -1073741823;
    goto L1;

  anon12_Then:
    assume {:partition} L > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BufferLength >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_855 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} L > BufferLength;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Mem_T.INT4[ResultLength] := L;
    Tmp_855 := -1073741789;
    goto L1;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_857: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_857: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_857 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_857 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_857 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_8: int, actual_DeferredRoutine: int, actual_DeferredContext_6: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_8: int, actual_DeferredRoutine: int, actual_DeferredContext_6: int)
{
  var {:pointer} Dpc_8: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_604: int;

  anon0:
    call {:si_unique_call 1979} vslice_dummy_var_604 := __HAVOC_malloc(4);
    Dpc_8 := actual_Dpc_8;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_8 != 0;
    assume Dpc_8 > 0;
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject_5: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_21: int) returns (Tmp_861: int);
  free ensures {:va_keep} Tmp_861 == -1073741824 || Tmp_861 == -1073741771 || Tmp_861 == -1073741670 || Tmp_861 == -1073741823 || Tmp_861 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject_5: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_21: int) returns (Tmp_861: int)
{
  var {:pointer} DeviceObject_21: int;

  anon0:
    DeviceObject_21 := actual_DeviceObject_21;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    Tmp_861 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    Tmp_861 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    Tmp_861 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    Tmp_861 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    goto L21;

  L21:
    Tmp_861 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_21 != 0;
    assume DeviceObject_21 > 0;
    goto L21;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_605: int;

  anon0:
    call {:si_unique_call 1980} vslice_dummy_var_605 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_865: int);
  modifies Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_865: int)
{
  var {:scalar} r: int;
  var {:pointer} pirp_2: int;
  var {:scalar} CancelRoutine: int;

  anon0:
    pirp_2 := actual_pirp_2;
    CancelRoutine := actual_CancelRoutine;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    r := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(pirp_2)];
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(pirp_2)] := CancelRoutine;
    Tmp_865 := r;
    return;
}



procedure {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int)
{
  var vslice_dummy_var_606: int;

  anon0:
    call {:si_unique_call 1981} vslice_dummy_var_606 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_869: int);
  free ensures {:va_keep} Tmp_869 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_869: int)
{

  anon0:
    Tmp_869 := 1;
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int)
{
  var {:pointer} r_1: int;
  var {:pointer} pirp_3: int;
  var vslice_dummy_var_607: int;

  anon0:
    call {:si_unique_call 1982} vslice_dummy_var_607 := __HAVOC_malloc(4);
    pirp_3 := actual_pirp_3;
    assume {:nonnull} pirp_3 != 0;
    assume pirp_3 > 0;
    r_1 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_3)))];
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int)
{
  var vslice_dummy_var_608: int;

  anon0:
    call {:si_unique_call 1983} vslice_dummy_var_608 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_875: int);
  free ensures {:va_keep} Tmp_875 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_875: int)
{

  anon0:
    Tmp_875 := 1;
    return;
}



procedure {:origName "OneOfTwoBOOLEAN"} {:osmodel} OneOfTwoBOOLEAN() returns (Tmp_877: int);
  free ensures {:va_keep} Tmp_877 == 1 || Tmp_877 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "OneOfTwoBOOLEAN"} {:osmodel} OneOfTwoBOOLEAN() returns (Tmp_877: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_877 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_877 := 0;
    goto L1;
}



procedure {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_5: int, actual_Environment: int) returns (Tmp_879: int);
  free ensures {:va_keep} Tmp_879 == 0 || Tmp_879 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_5: int, actual_Environment: int) returns (Tmp_879: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_879 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_879 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int)
{
  var {:pointer} pirp_5: int;
  var vslice_dummy_var_609: int;

  anon0:
    call {:si_unique_call 1984} vslice_dummy_var_609 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;
}



procedure {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_9: int) returns (Tmp_883: int);
  free ensures {:va_keep} Tmp_883 == 1 || Tmp_883 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_9: int) returns (Tmp_883: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_883 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_883 := 0;
    goto L1;
}



procedure {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_885: int);
  free ensures {:va_keep} Tmp_885 == 0 || Tmp_885 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_885: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_885 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_885 := -1073741823;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, Mem_T.INT4, Mem_T.CurrentStackLocation_unnamed_tag_7, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:pointer} Tmp_887: int;
  var {:scalar} sdv_740: int;
  var {:pointer} Tmp_888: int;
  var {:scalar} u: int;
  var {:pointer} Tmp_890: int;
  var {:pointer} sdv_753: int;
  var {:pointer} Tmp_891: int;
  var {:scalar} sdv_759: int;
  var {:pointer} Tmp_892: int;
  var vslice_dummy_var_610: int;
  var vslice_dummy_var_611: int;
  var vslice_dummy_var_612: int;
  var vslice_dummy_var_613: int;
  var vslice_dummy_var_614: int;
  var vslice_dummy_var_615: int;
  var vslice_dummy_var_616: int;
  var vslice_dummy_var_617: int;
  var vslice_dummy_var_618: int;
  var vslice_dummy_var_619: int;
  var vslice_dummy_var_620: int;
  var vslice_dummy_var_621: int;
  var vslice_dummy_var_622: int;
  var vslice_dummy_var_623: int;
  var vslice_dummy_var_624: int;
  var vslice_dummy_var_625: int;
  var vslice_dummy_var_626: int;
  var vslice_dummy_var_627: int;
  var vslice_dummy_var_628: int;
  var vslice_dummy_var_1302: int;
  var vslice_dummy_var_1303: int;
  var vslice_dummy_var_1304: int;
  var vslice_dummy_var_1305: int;
  var vslice_dummy_var_1306: int;
  var vslice_dummy_var_1307: int;
  var vslice_dummy_var_1308: int;
  var vslice_dummy_var_1309: int;
  var vslice_dummy_var_1310: int;
  var vslice_dummy_var_1311: int;
  var vslice_dummy_var_1312: int;

  anon0:
    call {:si_unique_call 1985} u := __HAVOC_malloc(12);
    call {:si_unique_call 1986} vslice_dummy_var_610 := __HAVOC_malloc(4);
    call {:si_unique_call 1987} sdv_759 := sdv_CheckDispatchRoutines();
    call {:si_unique_call 1988} sdv_740 := sdv_CheckStartIoRoutines();
    call {:si_unique_call 1989} vslice_dummy_var_611 := sdv_CheckDpcRoutines();
    call {:si_unique_call 1990} vslice_dummy_var_612 := sdv_CheckIsrRoutines();
    call {:si_unique_call 1991} vslice_dummy_var_613 := sdv_CheckCancelRoutines();
    call {:si_unique_call 1992} vslice_dummy_var_614 := sdv_CheckIoDpcRoutines();
    call {:si_unique_call 1993} vslice_dummy_var_615 := sdv_IoCompletionRoutines();
    call {:si_unique_call 1994} vslice_dummy_var_616 := sdv_CheckWorkerRoutines();
    call {:si_unique_call 1995} vslice_dummy_var_617 := sdv_CheckAddDevice();
    call {:si_unique_call 1996} vslice_dummy_var_618 := sdv_CheckIrpMjPnp();
    call {:si_unique_call 1997} vslice_dummy_var_619 := sdv_CheckIrpMjPower();
    call {:si_unique_call 1998} vslice_dummy_var_620 := sdv_CheckDriverUnload();
    goto anon199_Then, anon199_Else;

  anon199_Else:
    goto anon290_Then, anon290_Else;

  anon290_Else:
    goto anon289_Then, anon289_Else;

  anon289_Else:
    goto anon288_Then, anon288_Else;

  anon288_Else:
    goto anon287_Then, anon287_Else;

  anon287_Else:
    goto anon286_Then, anon286_Else;

  anon286_Else:
    goto anon285_Then, anon285_Else;

  anon285_Else:
    goto anon284_Then, anon284_Else;

  anon284_Else:
    goto anon283_Then, anon283_Else;

  anon283_Else:
    goto anon282_Then, anon282_Else;

  anon282_Else:
    goto anon281_Then, anon281_Else;

  anon281_Else:
    goto anon280_Then, anon280_Else;

  anon280_Else:
    goto anon279_Then, anon279_Else;

  anon279_Else:
    goto anon278_Then, anon278_Else;

  anon278_Else:
    goto anon277_Then, anon277_Else;

  anon277_Else:
    goto anon276_Then, anon276_Else;

  anon276_Else:
    goto anon275_Then, anon275_Else;

  anon275_Else:
    goto anon274_Then, anon274_Else;

  anon274_Else:
    goto anon273_Then, anon273_Else;

  anon273_Else:
    goto anon272_Then, anon272_Else;

  anon272_Else:
    goto anon271_Then, anon271_Else;

  anon271_Else:
    goto anon270_Then, anon270_Else;

  anon270_Else:
    goto anon269_Then, anon269_Else;

  anon269_Else:
    goto anon268_Then, anon268_Else;

  anon268_Else:
    goto anon267_Then, anon267_Else;

  anon267_Else:
    goto anon266_Then, anon266_Else;

  anon266_Else:
    goto anon265_Then, anon265_Else;

  anon265_Else:
    goto anon264_Then, anon264_Else;

  anon264_Else:
    goto anon263_Then, anon263_Else;

  anon263_Else:
    goto anon262_Then, anon262_Else;

  anon262_Else:
    goto anon261_Then, anon261_Else;

  anon261_Else:
    goto anon260_Then, anon260_Else;

  anon260_Else:
    goto anon259_Then, anon259_Else;

  anon259_Else:
    goto anon258_Then, anon258_Else;

  anon258_Else:
    goto anon257_Then, anon257_Else;

  anon257_Else:
    goto anon256_Then, anon256_Else;

  anon256_Else:
    goto anon255_Then, anon255_Else;

  anon255_Else:
    goto anon254_Then, anon254_Else;

  anon254_Else:
    goto anon253_Then, anon253_Else;

  anon253_Else:
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto anon251_Then, anon251_Else;

  anon251_Else:
    goto anon250_Then, anon250_Else;

  anon250_Else:
    goto anon249_Then, anon249_Else;

  anon249_Else:
    goto anon248_Then, anon248_Else;

  anon248_Else:
    goto anon247_Then, anon247_Else;

  anon247_Else:
    goto anon246_Then, anon246_Else;

  anon246_Else:
    goto anon245_Then, anon245_Else;

  anon245_Else:
    goto anon244_Then, anon244_Else;

  anon244_Else:
    goto anon243_Then, anon243_Else;

  anon243_Else:
    goto anon242_Then, anon242_Else;

  anon242_Else:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    goto anon240_Then, anon240_Else;

  anon240_Else:
    goto anon239_Then, anon239_Else;

  anon239_Else:
    goto anon238_Then, anon238_Else;

  anon238_Else:
    goto anon237_Then, anon237_Else;

  anon237_Else:
    goto anon236_Then, anon236_Else;

  anon236_Else:
    goto anon235_Then, anon235_Else;

  anon235_Else:
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    goto anon230_Then, anon230_Else;

  anon230_Else:
    goto anon229_Then, anon229_Else;

  anon229_Else:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    goto anon226_Then, anon226_Else;

  anon226_Else:
    goto anon225_Then, anon225_Else;

  anon225_Else:
    goto anon224_Then, anon224_Else;

  anon224_Else:
    goto anon223_Then, anon223_Else;

  anon223_Else:
    goto anon222_Then, anon222_Else;

  anon222_Else:
    goto anon221_Then, anon221_Else;

  anon221_Else:
    goto anon220_Then, anon220_Else;

  anon220_Else:
    goto anon219_Then, anon219_Else;

  anon219_Else:
    goto anon218_Then, anon218_Else;

  anon218_Else:
    goto anon217_Then, anon217_Else;

  anon217_Else:
    goto anon216_Then, anon216_Else;

  anon216_Else:
    goto anon215_Then, anon215_Else;

  anon215_Else:
    goto anon214_Then, anon214_Else;

  anon214_Else:
    goto anon213_Then, anon213_Else;

  anon213_Else:
    goto anon212_Then, anon212_Else;

  anon212_Else:
    goto anon211_Then, anon211_Else;

  anon211_Else:
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto anon209_Then, anon209_Else;

  anon209_Else:
    goto anon208_Then, anon208_Else;

  anon208_Else:
    goto anon207_Then, anon207_Else;

  anon207_Else:
    goto anon206_Then, anon206_Else;

  anon206_Else:
    goto anon205_Then, anon205_Else;

  anon205_Else:
    goto anon204_Then, anon204_Else;

  anon204_Else:
    goto anon203_Then, anon203_Else;

  anon203_Else:
    goto anon202_Then, anon202_Else;

  anon202_Else:
    call {:si_unique_call 1999} sdv_RunUnload(sdv_driver_object);
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon297_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon202_Then:
    goto L1;

  anon203_Then:
    call {:si_unique_call 2000} vslice_dummy_var_622 := sdv_RunRemoveDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon296_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon204_Then:
    call {:si_unique_call 2001} sdv_stub_driver_init();
    call {:si_unique_call 2002} vslice_dummy_var_623 := sdv_RunStartDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon295_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon205_Then:
    call {:si_unique_call 2003} vslice_dummy_var_621 := sdv_RunAddDevice(sdv_driver_object, sdv_p_devobj_pdo);
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon294_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon206_Then:
    call {:si_unique_call 2004} vslice_dummy_var_628 := DriverEntry(sdv_driver_object, u);
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon293_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon207_Then:
    goto L1;

  anon208_Then:
    goto L1;

  anon209_Then:
    goto L1;

  anon210_Then:
    goto L1;

  anon211_Then:
    goto L1;

  anon212_Then:
    goto L1;

  anon213_Then:
    goto L1;

  anon214_Then:
    goto L1;

  anon215_Then:
    goto L1;

  anon216_Then:
    goto L1;

  anon217_Then:
    goto L1;

  anon218_Then:
    goto L1;

  anon219_Then:
    goto L1;

  anon220_Then:
    goto L1;

  anon221_Then:
    goto L1;

  anon222_Then:
    goto L1;

  anon223_Then:
    goto L1;

  anon224_Then:
    goto L1;

  anon225_Then:
    goto L1;

  anon226_Then:
    goto L1;

  anon227_Then:
    goto L1;

  anon228_Then:
    goto L1;

  anon229_Then:
    goto L1;

  anon230_Then:
    goto L1;

  anon231_Then:
    goto L1;

  anon232_Then:
    goto L1;

  anon233_Then:
    goto L1;

  anon234_Then:
    goto L1;

  anon235_Then:
    goto L1;

  anon236_Then:
    goto L1;

  anon237_Then:
    goto L1;

  anon238_Then:
    goto L1;

  anon239_Then:
    goto L1;

  anon240_Then:
    goto L1;

  anon241_Then:
    goto L1;

  anon242_Then:
    goto L1;

  anon243_Then:
    call {:si_unique_call 2005} sdv_stub_power_completion_begin();
    call {:si_unique_call 2006} sdv_753 := sdv_SetPowerRequestIrpMinorFunction(sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(sdv_irp)))] := sdv_753;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Tmp_892 := Overlay_unnamed_tag_6(Tail__IRP(sdv_irp));
    assume {:nonnull} Tmp_892 != 0;
    assume Tmp_892 > 0;
    Tmp_890 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Tmp_892)];
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Tmp_891 := Overlay_unnamed_tag_6(Tail__IRP(sdv_irp));
    assume {:nonnull} Tmp_891 != 0;
    assume Tmp_891 > 0;
    Tmp_887 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Tmp_891)];
    assume {:nonnull} Tmp_887 != 0;
    assume Tmp_887 > 0;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    havoc vslice_dummy_var_1302;
    havoc vslice_dummy_var_1303;
    call {:si_unique_call 2007} CyyWakeCompletion(sdv_p_devobj_fdo, vslice_dummy_var_1302, vslice_dummy_var_1303, sdv_pv2, IoStatus__IRP(sdv_irp));
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon244_Then:
    goto L1;

  anon245_Then:
    goto L1;

  anon246_Then:
    goto L1;

  anon247_Then:
    goto L1;

  anon248_Then:
    goto L1;

  anon249_Then:
    goto L1;

  anon250_Then:
    goto L1;

  anon251_Then:
    goto L1;

  anon252_Then:
    goto L1;

  anon253_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2008} vslice_dummy_var_627 := CyySystemPowerComplete(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon254_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2009} vslice_dummy_var_626 := CyySyncCompletion(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon255_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    call {:si_unique_call 2010} vslice_dummy_var_625 := CyyDevicePowerComplete(sdv_p_devobj_fdo, sdv_irp, sdv_pv2);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon256_Then:
    call {:si_unique_call 2011} Tmp_888 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_888] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2012} IoAcquireCancelSpinLock(Tmp_888);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_888];
    call {:si_unique_call 2013} CyyFilterCancelQueued(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon257_Then:
    call {:si_unique_call 2014} Tmp_888 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_888] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2015} IoAcquireCancelSpinLock(Tmp_888);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_888];
    call {:si_unique_call 2016} CyyCancelWait(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon258_Then:
    call {:si_unique_call 2017} Tmp_888 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_888] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2018} IoAcquireCancelSpinLock(Tmp_888);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_888];
    call {:si_unique_call 2019} CyyCancelQueued(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon259_Then:
    call {:si_unique_call 2020} Tmp_888 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_888] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2021} IoAcquireCancelSpinLock(Tmp_888);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_888];
    call {:si_unique_call 2022} CyyCancelImmediate(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon260_Then:
    call {:si_unique_call 2023} Tmp_888 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_888] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2024} IoAcquireCancelSpinLock(Tmp_888);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_888];
    call {:si_unique_call 2025} CyyCancelCurrentXoff(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon261_Then:
    call {:si_unique_call 2026} Tmp_888 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_888] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2027} IoAcquireCancelSpinLock(Tmp_888);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_888];
    call {:si_unique_call 2028} CyyCancelCurrentWrite(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon262_Then:
    call {:si_unique_call 2029} Tmp_888 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.INT4[Tmp_888] := Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)];
    call {:si_unique_call 2030} IoAcquireCancelSpinLock(Tmp_888);
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(sdv_irp)] := Mem_T.INT4[Tmp_888];
    call {:si_unique_call 2031} CyyCancelCurrentRead(sdv_p_devobj_fdo, sdv_irp);
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(sdv_irp)] := 0;
    goto L1;

  anon263_Then:
    goto L1;

  anon264_Then:
    goto L1;

  anon265_Then:
    goto L1;

  anon266_Then:
    goto L1;

  anon267_Then:
    goto L1;

  anon268_Then:
    goto L1;

  anon269_Then:
    goto L1;

  anon270_Then:
    goto L1;

  anon271_Then:
    goto L1;

  anon272_Then:
    goto L1;

  anon273_Then:
    goto L1;

  anon274_Then:
    goto L1;

  anon275_Then:
    goto L1;

  anon276_Then:
    goto L1;

  anon277_Then:
    goto L1;

  anon278_Then:
    goto L1;

  anon279_Then:
    goto L1;

  anon280_Then:
    goto L1;

  anon281_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    havoc vslice_dummy_var_1304;
    call {:si_unique_call 2032} CyyWriteTimeout(sdv_kdpc, vslice_dummy_var_1304, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon282_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    havoc vslice_dummy_var_1305;
    call {:si_unique_call 2033} CyyUnlockPages(sdv_kdpc, vslice_dummy_var_1305, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon283_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    havoc vslice_dummy_var_1306;
    call {:si_unique_call 2034} CyyTimeoutXoff(sdv_kdpc, vslice_dummy_var_1306, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon284_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    havoc vslice_dummy_var_1307;
    call {:si_unique_call 2035} CyyReadTimeout(sdv_kdpc, vslice_dummy_var_1307, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon285_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    havoc vslice_dummy_var_1308;
    call {:si_unique_call 2036} CyyCompleteXoff(sdv_kdpc, vslice_dummy_var_1308, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon286_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    havoc vslice_dummy_var_1309;
    call {:si_unique_call 2037} CyyCompleteWrite(sdv_kdpc, vslice_dummy_var_1309, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon287_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    havoc vslice_dummy_var_1310;
    call {:si_unique_call 2038} CyyCompleteWait(sdv_kdpc, vslice_dummy_var_1310, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon288_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    havoc vslice_dummy_var_1311;
    call {:si_unique_call 2039} CyyCompleteRead(sdv_kdpc, vslice_dummy_var_1311, sdv_pv2, sdv_pv3);
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon289_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    havoc vslice_dummy_var_1312;
    call {:si_unique_call 2040} CyyCommError(sdv_kdpc, vslice_dummy_var_1312, sdv_pv2, sdv_pv3);
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume {:partition} yogi_error != 1;
    sdv_irql_current := 0;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    goto L1;

  anon292_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon290_Then:
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:partition} sdv_740 != 0;
    call {:si_unique_call 2041} sdv_stub_driver_init();
    call {:si_unique_call 2042} sdv_RunStartIo(0, 0);
    goto L1;

  anon201_Then:
    assume {:partition} sdv_740 == 0;
    goto L1;

  anon199_Then:
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:partition} sdv_759 != 0;
    call {:si_unique_call 2043} sdv_stub_driver_init();
    call {:si_unique_call 2044} vslice_dummy_var_624 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon291_Then, anon291_Else;

  anon291_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon291_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon200_Then:
    assume {:partition} sdv_759 == 0;
    goto L1;
}



procedure {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_893: int);
  free ensures {:va_keep} Tmp_893 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_893: int)
{

  anon0:
    Tmp_893 := 1;
    return;
}



procedure {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_895: int);
  free ensures {:va_keep} Tmp_895 == 0 || Tmp_895 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_895: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_895 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_895 := -1073741823;
    goto L1;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_897: int);
  free ensures {:va_keep} Tmp_897 == 0 || Tmp_897 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_897: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_897 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_897 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_899: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_899: int)
{
  var {:pointer} sdv_776: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 2045} sdv_776 := __HAVOC_malloc(1);
    Tmp_899 := sdv_776;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_899 := 0;
    goto L1;
}



procedure {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_901: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_901: int)
{
  var {:pointer} sdv_778: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 2046} sdv_778 := __HAVOC_malloc(NumberOfBytes);
    Tmp_901 := sdv_778;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_901 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_903: int);
  free ensures {:va_keep} Tmp_903 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_903: int)
{

  anon0:
    Tmp_903 := 0;
    return;
}



procedure {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_905: int);
  free ensures {:va_keep} Tmp_905 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_905: int)
{

  anon0:
    Tmp_905 := 1;
    return;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_22: int, actual_Irp_20: int) returns (Tmp_907: int);
  free ensures {:va_keep} Tmp_907 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_22: int, actual_Irp_20: int) returns (Tmp_907: int)
{
  var {:scalar} status_30: int;
  var {:pointer} Irp_20: int;

  anon0:
    Irp_20 := actual_Irp_20;
    status_30 := 259;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_20;
    goto L25;

  L25:
    Tmp_907 := status_30;
    return;

  anon33_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon32_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_20;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_20;
    goto L19;

  anon40_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon39_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_20;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_20;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_20;
    goto L44;

  anon41_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_20;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_20;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_20;
    goto L28;

  anon31_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_20;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_20;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_20;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_20;
    goto L36;
}



procedure {:origName "WmiSystemControl"} {:osmodel} WmiSystemControl(actual_WmiLibInfo: int, actual_DeviceObject_23: int, actual_pirp_6: int, actual_IrpDisposition: int) returns (Tmp_909: int);
  modifies Mem_T.INT4, alloc;
  free ensures {:va_keep} Tmp_909 == 0 || Tmp_909 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "WmiSystemControl"} {:osmodel} WmiSystemControl(actual_WmiLibInfo: int, actual_DeviceObject_23: int, actual_pirp_6: int, actual_IrpDisposition: int) returns (Tmp_909: int)
{
  var {:scalar} s_1: int;
  var {:pointer} IrpDisposition: int;

  anon0:
    IrpDisposition := actual_IrpDisposition;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    Mem_T.INT4[IrpDisposition] := 3;
    s_1 := 0;
    call {:si_unique_call 2047} sdv_stub_WmiIrpForward(0);
    goto L24;

  L24:
    Tmp_909 := s_1;
    return;

  anon11_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    Mem_T.INT4[IrpDisposition] := 2;
    call {:si_unique_call 2048} sdv_stub_WmiIrpForward(0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    s_1 := 0;
    goto L24;

  anon10_Then:
    s_1 := -1073741808;
    goto L24;

  anon12_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    Mem_T.INT4[IrpDisposition] := 1;
    s_1 := 0;
    call {:si_unique_call 2049} sdv_stub_WmiIrpNotCompleted(0);
    goto L24;

  anon9_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    Mem_T.INT4[IrpDisposition] := 0;
    s_1 := 0;
    call {:si_unique_call 2050} sdv_stub_WmiIrpProcessed(0);
    goto L24;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_24: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_24: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_2: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 2051} State := __HAVOC_malloc(8);
    call {:si_unique_call 2052} r_2 := __HAVOC_malloc(8);
    call {:si_unique_call 2053} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_3: int) returns (Tmp_912: int);
  free ensures {:va_keep} Tmp_912 == 1 || Tmp_912 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_3: int) returns (Tmp_912: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_912 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_912 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_629: int;

  anon0:
    call {:si_unique_call 2054} vslice_dummy_var_629 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_7: int, actual_CompletionRoutine: int, actual_Context_6: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_7: int, actual_CompletionRoutine: int, actual_Context_6: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp_3: int;
  var {:pointer} pirp_7: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_6: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_630: int;

  anon0:
    call {:si_unique_call 2055} vslice_dummy_var_630 := __HAVOC_malloc(4);
    pirp_7 := actual_pirp_7;
    CompletionRoutine := actual_CompletionRoutine;
    Context_6 := actual_Context_6;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 2056} irpSp_3 := sdv_IoGetNextIrpStackLocation(pirp_7);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 1;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_631: int;

  anon0:
    call {:si_unique_call 2057} vslice_dummy_var_631 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 1;
    return;
}



procedure {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin()
{
  var vslice_dummy_var_632: int;

  anon0:
    call {:si_unique_call 2058} vslice_dummy_var_632 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_922: int);
  free ensures {:va_keep} Tmp_922 == 1 || Tmp_922 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_922: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_922 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_922 := 0;
    goto L1;
}



procedure {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName: int) returns (Tmp_924: int);
  free ensures {:va_keep} Tmp_924 == 0 || Tmp_924 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName: int) returns (Tmp_924: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_924 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_924 := -1073741823;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_21: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_21: int)
{
  var vslice_dummy_var_633: int;

  anon0:
    call {:si_unique_call 2059} vslice_dummy_var_633 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_928: int);
  free ensures {:va_keep} Tmp_928 == 258 || Tmp_928 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_928: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_928 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_928 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_928 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_25: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_25: int)
{
  var vslice_dummy_var_634: int;

  anon0:
    call {:si_unique_call 2060} vslice_dummy_var_634 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_932: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_932: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_932 := OldState;
    return;
}



procedure {:origName "sdv_MmLockPagableCodeSection"} {:osmodel} sdv_MmLockPagableCodeSection(actual_AddressWithinSection: int) returns (Tmp_936: int);
  free ensures {:va_keep} Tmp_936 == actual_AddressWithinSection;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_MmLockPagableCodeSection"} {:osmodel} sdv_MmLockPagableCodeSection(actual_AddressWithinSection: int) returns (Tmp_936: int)
{
  var {:pointer} AddressWithinSection: int;

  anon0:
    AddressWithinSection := actual_AddressWithinSection;
    Tmp_936 := AddressWithinSection;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_8: int) returns (Tmp_938: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_8: int) returns (Tmp_938: int)
{
  var {:pointer} pirp_8: int;

  anon0:
    pirp_8 := actual_pirp_8;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    Tmp_938 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_8)))];
    return;
}



procedure {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_new;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_635: int;

  anon0:
    call {:si_unique_call 2061} vslice_dummy_var_635 := __HAVOC_malloc(4);
    new := actual_new;
    sdv_irql_current := new;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 0 || sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_power_completion_begin"} {:osmodel} sdv_stub_power_completion_begin()
{
  var vslice_dummy_var_636: int;

  anon0:
    call {:si_unique_call 2062} vslice_dummy_var_636 := __HAVOC_malloc(4);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    goto L1;
}



procedure {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_944: int);
  free ensures {:va_keep} Tmp_944 == old(sdv_irql_current);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_944: int)
{

  anon0:
    Tmp_944 := sdv_irql_current;
    return;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_26: int, actual_MinorFunction_1: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_7: int, actual_Irp_22: int) returns (Tmp_946: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_946 == -1073741584 || Tmp_946 == 259 || Tmp_946 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_26: int, actual_MinorFunction_1: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_7: int, actual_Irp_22: int) returns (Tmp_946: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} MinorFunction_1: int;
  var {:pointer} structPtr888PowerState: int;

  anon0:
    call {:si_unique_call 2063} PowerState := __HAVOC_malloc(8);
    MinorFunction_1 := actual_MinorFunction_1;
    structPtr888PowerState := actual_structPtr888PowerState;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction_1 != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction_1 != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction_1 != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_946 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction_1 == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_946 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_946 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction_1 == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction_1 == 3;
    goto L13;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_948: int, dup_assertVar: bool);
  modifies alloc, yogi_error, Mem_T.INT4, Mem_T.CurrentStackLocation_unnamed_tag_7, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "main"} {:osmodel} main() returns (Tmp_948: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_949: int;
  var {:scalar} Tmp_951: int;
  var boogieTmp: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var CyyGlobals__Loc: int;
  var SerialPortNameGuid__Loc: int;
  var SerailPortPerfGuid__Loc: int;
  var SerialPortPropertiesGuid__Loc: int;
  var SerialPortHWGuid__Loc: int;
  var SerialPortCommGuid__Loc: int;
  var KeTickCount__Loc: int;
  var CyyPhysicalZero__Loc: int;
  var CyyPhysicalZero_1__Loc: int;
  var driverDefaults__Loc: int;
  var CyyPhysicalZero_2__Loc: int;
  var GUID_DEVINTERFACE_COMPORT__Loc: int;
  var CyyPhysicalZero_3__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_DpcContext__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var sdv_MmMapIoSpace_int__Loc: int;
  var vslice_dummy_var_713: int;
  var vslice_dummy_var_714: int;
  var vslice_dummy_var_715: int;
  var vslice_dummy_var_716: int;
  var vslice_dummy_var_717: int;
  var vslice_dummy_var_718: int;
  var vslice_dummy_var_719: int;
  var vslice_dummy_var_720: int;
  var vslice_dummy_var_721: int;
  var vslice_dummy_var_722: int;
  var vslice_dummy_var_723: int;
  var vslice_dummy_var_724: int;
  var vslice_dummy_var_725: int;
  var vslice_dummy_var_726: int;
  var vslice_dummy_var_727: int;
  var vslice_dummy_var_728: int;
  var vslice_dummy_var_729: int;
  var vslice_dummy_var_730: int;
  var vslice_dummy_var_731: int;
  var vslice_dummy_var_732: int;
  var vslice_dummy_var_733: int;
  var vslice_dummy_var_734: int;
  var vslice_dummy_var_735: int;
  var vslice_dummy_var_736: int;
  var vslice_dummy_var_737: int;
  var vslice_dummy_var_738: int;
  var vslice_dummy_var_739: int;
  var vslice_dummy_var_740: int;
  var vslice_dummy_var_741: int;
  var vslice_dummy_var_742: int;
  var vslice_dummy_var_743: int;
  var vslice_dummy_var_744: int;
  var vslice_dummy_var_745: int;
  var vslice_dummy_var_746: int;
  var vslice_dummy_var_747: int;
  var vslice_dummy_var_748: int;
  var vslice_dummy_var_749: int;
  var vslice_dummy_var_750: int;
  var vslice_dummy_var_751: int;
  var vslice_dummy_var_752: int;
  var vslice_dummy_var_753: int;
  var vslice_dummy_var_754: int;
  var vslice_dummy_var_755: int;
  var vslice_dummy_var_756: int;
  var vslice_dummy_var_757: int;
  var vslice_dummy_var_758: int;
  var vslice_dummy_var_759: int;
  var vslice_dummy_var_760: int;
  var vslice_dummy_var_761: int;
  var vslice_dummy_var_762: int;
  var vslice_dummy_var_763: int;
  var vslice_dummy_var_764: int;
  var vslice_dummy_var_765: int;
  var vslice_dummy_var_766: int;
  var vslice_dummy_var_767: int;
  var vslice_dummy_var_768: int;
  var vslice_dummy_var_769: int;
  var vslice_dummy_var_770: int;
  var vslice_dummy_var_771: int;
  var vslice_dummy_var_772: int;
  var vslice_dummy_var_773: int;
  var vslice_dummy_var_774: int;
  var vslice_dummy_var_775: int;
  var vslice_dummy_var_776: int;
  var vslice_dummy_var_777: int;
  var vslice_dummy_var_778: int;
  var vslice_dummy_var_779: int;
  var vslice_dummy_var_780: int;
  var vslice_dummy_var_781: int;
  var vslice_dummy_var_782: int;
  var vslice_dummy_var_783: int;
  var vslice_dummy_var_784: int;
  var vslice_dummy_var_785: int;
  var vslice_dummy_var_786: int;
  var vslice_dummy_var_787: int;
  var vslice_dummy_var_788: int;
  var vslice_dummy_var_789: int;
  var vslice_dummy_var_790: int;
  var vslice_dummy_var_791: int;
  var vslice_dummy_var_792: int;
  var vslice_dummy_var_793: int;
  var vslice_dummy_var_794: int;
  var vslice_dummy_var_795: int;
  var vslice_dummy_var_796: int;
  var vslice_dummy_var_797: int;
  var vslice_dummy_var_798: int;
  var vslice_dummy_var_799: int;
  var vslice_dummy_var_800: int;
  var vslice_dummy_var_801: int;
  var vslice_dummy_var_802: int;
  var vslice_dummy_var_803: int;
  var vslice_dummy_var_804: int;
  var vslice_dummy_var_805: int;
  var vslice_dummy_var_806: int;
  var vslice_dummy_var_807: int;
  var vslice_dummy_var_1313: int;
  var vslice_dummy_var_1314: int;
  var vslice_dummy_var_1315: int;
  var vslice_dummy_var_1316: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 2064} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 2065} CyyGlobals__Loc := __HAVOC_malloc_or_null(28);
    assume CyyGlobals__Loc == CyyGlobals;
    assume CyyGlobals != 0;
    call {:si_unique_call 2066} SerialPortNameGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortNameGuid__Loc == SerialPortNameGuid;
    assume SerialPortNameGuid != 0;
    call {:si_unique_call 2067} SerailPortPerfGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerailPortPerfGuid__Loc == SerailPortPerfGuid;
    assume SerailPortPerfGuid != 0;
    call {:si_unique_call 2068} SerialPortPropertiesGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortPropertiesGuid__Loc == SerialPortPropertiesGuid;
    assume SerialPortPropertiesGuid != 0;
    call {:si_unique_call 2069} SerialPortHWGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortHWGuid__Loc == SerialPortHWGuid;
    assume SerialPortHWGuid != 0;
    call {:si_unique_call 2070} SerialPortCommGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortCommGuid__Loc == SerialPortCommGuid;
    assume SerialPortCommGuid != 0;
    call {:si_unique_call 2071} KeTickCount__Loc := __HAVOC_malloc_or_null(12);
    assume KeTickCount__Loc == KeTickCount;
    assume KeTickCount != 0;
    call {:si_unique_call 2072} CyyPhysicalZero__Loc := __HAVOC_malloc_or_null(20);
    assume CyyPhysicalZero__Loc == CyyPhysicalZero;
    assume CyyPhysicalZero != 0;
    call {:si_unique_call 2073} CyyPhysicalZero_1__Loc := __HAVOC_malloc_or_null(20);
    assume CyyPhysicalZero_1__Loc == CyyPhysicalZero_1;
    assume CyyPhysicalZero_1 != 0;
    call {:si_unique_call 2074} driverDefaults__Loc := __HAVOC_malloc_or_null(76);
    assume driverDefaults__Loc == driverDefaults;
    assume driverDefaults != 0;
    call {:si_unique_call 2075} CyyPhysicalZero_2__Loc := __HAVOC_malloc_or_null(20);
    assume CyyPhysicalZero_2__Loc == CyyPhysicalZero_2;
    assume CyyPhysicalZero_2 != 0;
    call {:si_unique_call 2076} GUID_DEVINTERFACE_COMPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_COMPORT__Loc == GUID_DEVINTERFACE_COMPORT;
    assume GUID_DEVINTERFACE_COMPORT != 0;
    call {:si_unique_call 2077} CyyPhysicalZero_3__Loc := __HAVOC_malloc_or_null(20);
    assume CyyPhysicalZero_3__Loc == CyyPhysicalZero_3;
    assume CyyPhysicalZero_3 != 0;
    call {:si_unique_call 2078} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 2079} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 2080} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 2081} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 2082} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 2083} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 2084} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 2085} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 2086} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 2087} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 2088} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 2089} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 2090} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 2091} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 2092} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 2093} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 2094} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 2095} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 2096} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 2097} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 2098} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 2099} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 2100} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 2101} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 2102} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 2103} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 2104} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 2105} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 2106} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 2107} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 2108} sdv_DpcContext__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_DpcContext__Loc == sdv_DpcContext;
    assume sdv_DpcContext != 0;
    call {:si_unique_call 2109} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 2110} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 2111} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 2112} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 2113} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 2114} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 2115} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 2116} sdv_MmMapIoSpace_int__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MmMapIoSpace_int__Loc == sdv_MmMapIoSpace_int;
    assume sdv_MmMapIoSpace_int != 0;
    call {:si_unique_call 2117} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 2118} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 2119} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 2120} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 2121} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 2122} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 2123} boogieTmp := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc == boogieTmp;
    call {:si_unique_call 2124} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 2125} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 2126} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 2127} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 2128} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 2129} vslice_dummy_var_713 := __HAVOC_malloc(4);
    call {:si_unique_call 2130} vslice_dummy_var_714 := __HAVOC_malloc(4);
    call {:si_unique_call 2131} vslice_dummy_var_715 := __HAVOC_malloc(4);
    call {:si_unique_call 2132} vslice_dummy_var_716 := __HAVOC_malloc(4);
    call {:si_unique_call 2133} vslice_dummy_var_717 := __HAVOC_malloc(4);
    call {:si_unique_call 2134} vslice_dummy_var_718 := __HAVOC_malloc(4);
    call {:si_unique_call 2135} vslice_dummy_var_1313 := __HAVOC_malloc(60);
    call {:si_unique_call 2136} vslice_dummy_var_719 := __HAVOC_malloc(4);
    call {:si_unique_call 2137} vslice_dummy_var_720 := __HAVOC_malloc(4);
    call {:si_unique_call 2138} vslice_dummy_var_721 := __HAVOC_malloc(4);
    call {:si_unique_call 2139} vslice_dummy_var_722 := __HAVOC_malloc(4);
    call {:si_unique_call 2140} vslice_dummy_var_723 := __HAVOC_malloc(4);
    call {:si_unique_call 2141} vslice_dummy_var_724 := __HAVOC_malloc(4);
    call {:si_unique_call 2142} vslice_dummy_var_725 := __HAVOC_malloc(4);
    call {:si_unique_call 2143} vslice_dummy_var_726 := __HAVOC_malloc(4);
    call {:si_unique_call 2144} vslice_dummy_var_727 := __HAVOC_malloc(4);
    call {:si_unique_call 2145} vslice_dummy_var_728 := __HAVOC_malloc(4);
    call {:si_unique_call 2146} vslice_dummy_var_1314 := __HAVOC_malloc(32);
    call {:si_unique_call 2147} vslice_dummy_var_729 := __HAVOC_malloc(4);
    call {:si_unique_call 2148} vslice_dummy_var_730 := __HAVOC_malloc(4);
    call {:si_unique_call 2149} vslice_dummy_var_731 := __HAVOC_malloc(4);
    call {:si_unique_call 2150} vslice_dummy_var_732 := __HAVOC_malloc(4);
    call {:si_unique_call 2151} vslice_dummy_var_733 := __HAVOC_malloc(4);
    call {:si_unique_call 2152} vslice_dummy_var_734 := __HAVOC_malloc(4);
    call {:si_unique_call 2153} vslice_dummy_var_735 := __HAVOC_malloc(4);
    call {:si_unique_call 2154} vslice_dummy_var_736 := __HAVOC_malloc(4);
    call {:si_unique_call 2155} vslice_dummy_var_737 := __HAVOC_malloc(4);
    call {:si_unique_call 2156} vslice_dummy_var_1315 := __HAVOC_malloc(24);
    call {:si_unique_call 2157} vslice_dummy_var_738 := __HAVOC_malloc(4);
    call {:si_unique_call 2158} vslice_dummy_var_739 := __HAVOC_malloc(4);
    call {:si_unique_call 2159} vslice_dummy_var_740 := __HAVOC_malloc(4);
    call {:si_unique_call 2160} vslice_dummy_var_741 := __HAVOC_malloc(4);
    call {:si_unique_call 2161} vslice_dummy_var_742 := __HAVOC_malloc(4);
    call {:si_unique_call 2162} vslice_dummy_var_743 := __HAVOC_malloc(4);
    call {:si_unique_call 2163} vslice_dummy_var_744 := __HAVOC_malloc(4);
    call {:si_unique_call 2164} vslice_dummy_var_745 := __HAVOC_malloc(4);
    call {:si_unique_call 2165} vslice_dummy_var_746 := __HAVOC_malloc(4);
    call {:si_unique_call 2166} vslice_dummy_var_747 := __HAVOC_malloc(4);
    call {:si_unique_call 2167} vslice_dummy_var_748 := __HAVOC_malloc(4);
    call {:si_unique_call 2168} vslice_dummy_var_749 := __HAVOC_malloc(4);
    call {:si_unique_call 2169} vslice_dummy_var_750 := __HAVOC_malloc(4);
    call {:si_unique_call 2170} vslice_dummy_var_751 := __HAVOC_malloc(4);
    call {:si_unique_call 2171} vslice_dummy_var_752 := __HAVOC_malloc(4);
    call {:si_unique_call 2172} vslice_dummy_var_753 := __HAVOC_malloc(4);
    call {:si_unique_call 2173} vslice_dummy_var_754 := __HAVOC_malloc(4);
    call {:si_unique_call 2174} vslice_dummy_var_755 := __HAVOC_malloc(4);
    call {:si_unique_call 2175} vslice_dummy_var_756 := __HAVOC_malloc(4);
    call {:si_unique_call 2176} vslice_dummy_var_757 := __HAVOC_malloc(4);
    call {:si_unique_call 2177} vslice_dummy_var_758 := __HAVOC_malloc(4);
    call {:si_unique_call 2178} vslice_dummy_var_1316 := __HAVOC_malloc(60);
    call {:si_unique_call 2179} vslice_dummy_var_759 := __HAVOC_malloc(4);
    call {:si_unique_call 2180} vslice_dummy_var_760 := __HAVOC_malloc(4);
    call {:si_unique_call 2181} vslice_dummy_var_761 := __HAVOC_malloc(4);
    call {:si_unique_call 2182} vslice_dummy_var_762 := __HAVOC_malloc(4);
    call {:si_unique_call 2183} vslice_dummy_var_763 := __HAVOC_malloc(4);
    call {:si_unique_call 2184} vslice_dummy_var_764 := __HAVOC_malloc(4);
    call {:si_unique_call 2185} vslice_dummy_var_765 := __HAVOC_malloc(4);
    call {:si_unique_call 2186} vslice_dummy_var_766 := __HAVOC_malloc(4);
    call {:si_unique_call 2187} vslice_dummy_var_767 := __HAVOC_malloc(4);
    call {:si_unique_call 2188} vslice_dummy_var_768 := __HAVOC_malloc(4);
    call {:si_unique_call 2189} vslice_dummy_var_769 := __HAVOC_malloc(4);
    call {:si_unique_call 2190} vslice_dummy_var_770 := __HAVOC_malloc(4);
    call {:si_unique_call 2191} vslice_dummy_var_771 := __HAVOC_malloc(4);
    call {:si_unique_call 2192} vslice_dummy_var_772 := __HAVOC_malloc(4);
    call {:si_unique_call 2193} vslice_dummy_var_773 := __HAVOC_malloc(4);
    call {:si_unique_call 2194} vslice_dummy_var_774 := __HAVOC_malloc(4);
    call {:si_unique_call 2195} vslice_dummy_var_775 := __HAVOC_malloc(4);
    call {:si_unique_call 2196} vslice_dummy_var_776 := __HAVOC_malloc(4);
    call {:si_unique_call 2197} vslice_dummy_var_777 := __HAVOC_malloc(4);
    call {:si_unique_call 2198} vslice_dummy_var_778 := __HAVOC_malloc(4);
    call {:si_unique_call 2199} vslice_dummy_var_779 := __HAVOC_malloc(4);
    call {:si_unique_call 2200} vslice_dummy_var_780 := __HAVOC_malloc(4);
    call {:si_unique_call 2201} vslice_dummy_var_781 := __HAVOC_malloc(4);
    call {:si_unique_call 2202} vslice_dummy_var_782 := __HAVOC_malloc(4);
    call {:si_unique_call 2203} vslice_dummy_var_783 := __HAVOC_malloc(4);
    call {:si_unique_call 2204} vslice_dummy_var_784 := __HAVOC_malloc(4);
    call {:si_unique_call 2205} vslice_dummy_var_785 := __HAVOC_malloc(4);
    call {:si_unique_call 2206} vslice_dummy_var_786 := __HAVOC_malloc(4);
    call {:si_unique_call 2207} vslice_dummy_var_787 := __HAVOC_malloc(4);
    call {:si_unique_call 2208} vslice_dummy_var_788 := __HAVOC_malloc(4);
    call {:si_unique_call 2209} vslice_dummy_var_789 := __HAVOC_malloc(4);
    call {:si_unique_call 2210} vslice_dummy_var_790 := __HAVOC_malloc(4);
    call {:si_unique_call 2211} vslice_dummy_var_791 := __HAVOC_malloc(4);
    call {:si_unique_call 2212} vslice_dummy_var_792 := __HAVOC_malloc(4);
    call {:si_unique_call 2213} vslice_dummy_var_793 := __HAVOC_malloc(4);
    call {:si_unique_call 2214} vslice_dummy_var_794 := __HAVOC_malloc(4);
    call {:si_unique_call 2215} vslice_dummy_var_795 := __HAVOC_malloc(4);
    call {:si_unique_call 2216} vslice_dummy_var_796 := __HAVOC_malloc(4);
    call {:si_unique_call 2217} vslice_dummy_var_797 := __HAVOC_malloc(4);
    call {:si_unique_call 2218} vslice_dummy_var_798 := __HAVOC_malloc(4);
    call {:si_unique_call 2219} vslice_dummy_var_799 := __HAVOC_malloc(4);
    call {:si_unique_call 2220} vslice_dummy_var_800 := __HAVOC_malloc(4);
    call {:si_unique_call 2221} vslice_dummy_var_801 := __HAVOC_malloc(4);
    call {:si_unique_call 2222} vslice_dummy_var_802 := __HAVOC_malloc(4);
    call {:si_unique_call 2223} vslice_dummy_var_803 := __HAVOC_malloc(4);
    call {:si_unique_call 2224} vslice_dummy_var_804 := __HAVOC_malloc(4);
    call {:si_unique_call 2225} vslice_dummy_var_805 := __HAVOC_malloc(4);
    call {:si_unique_call 2226} vslice_dummy_var_806 := __HAVOC_malloc(4);
    call {:si_unique_call 2227} vslice_dummy_var_807 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 2228} corralExtraInit();
    call {:si_unique_call 2229} corralExplainErrorInit();
    call {:si_unique_call 2230} _sdv_init21();
    call {:si_unique_call 2231} _sdv_init18();
    call {:si_unique_call 2232} _sdv_init19();
    call {:si_unique_call 2233} _sdv_init17();
    call {:si_unique_call 2234} _sdv_init1();
    call {:si_unique_call 2235} _sdv_init4();
    call {:si_unique_call 2236} _sdv_init5();
    call {:si_unique_call 2237} _sdv_init3();
    call {:si_unique_call 2238} _sdv_init16();
    call {:si_unique_call 2239} _sdv_init14();
    call {:si_unique_call 2240} _sdv_init6();
    call {:si_unique_call 2241} _sdv_init15();
    call {:si_unique_call 2242} _sdv_init10();
    call {:si_unique_call 2243} _sdv_init11();
    call {:si_unique_call 2244} _sdv_init9();
    call {:si_unique_call 2245} _sdv_init12();
    call {:si_unique_call 2246} _sdv_init13();
    call {:si_unique_call 2247} _sdv_init7();
    call {:si_unique_call 2248} _sdv_init8();
    call {:si_unique_call 2249} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_951 := 0;
    goto L44;

  L44:
    assume Tmp_951 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_949 := 0;
    goto L48;

  L48:
    assume Tmp_949 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(sdv_irp)))] := sdv_harnessStackLocation;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(sdv_other_irp)))] := sdv_other_harnessStackLocation;
    call {:si_unique_call 2250} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L42;

  L42:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_949 := 1;
    goto L48;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_951 := 1;
    goto L44;
}



procedure {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_952: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_952: int)
{
  var {:pointer} sdv_789: int;

  anon0:
    call {:si_unique_call 2251} sdv_789 := __HAVOC_malloc(1);
    Tmp_952 := sdv_789;
    return;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_9: int);
  modifies alloc, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_9: int)
{
  var {:pointer} pirp_9: int;
  var vslice_dummy_var_637: int;

  anon0:
    call {:si_unique_call 2252} vslice_dummy_var_637 := __HAVOC_malloc(4);
    pirp_9 := actual_pirp_9;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_9 == sdv_harnessIrp;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation_next)] := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_harnessStackLocation)];
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_9 == sdv_other_harnessIrp;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation_next)] := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_other_harnessStackLocation)];
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_9 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_9 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_23: int) returns (Tmp_956: int);
  free ensures {:va_keep} Tmp_956 == 0 || Tmp_956 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_23: int) returns (Tmp_956: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_956 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_956 := 1;
    goto L1;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_958: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_958: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    Mem_T.INT4[Addend] := Mem_T.INT4[Addend] - 1;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    Tmp_958 := Mem_T.INT4[Addend];
    return;
}



procedure {:origName "sdv_RunRemoveDevice"} {:osmodel} sdv_RunRemoveDevice(actual_po: int, actual_pirp_10: int) returns (Tmp_960: int);
  modifies Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CancelRoutine__IRP, alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunRemoveDevice"} {:osmodel} sdv_RunRemoveDevice(actual_po: int, actual_pirp_10: int) returns (Tmp_960: int)
{
  var {:pointer} ps: int;
  var {:scalar} status_32: int;
  var {:pointer} po: int;
  var {:pointer} pirp_10: int;

  anon0:
    po := actual_po;
    pirp_10 := actual_pirp_10;
    status_32 := 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    ps := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_10)))];
    assume {:nonnull} ps != 0;
    assume ps > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps)] := 27;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(pirp_10)] := 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2253} sdv_stub_dispatch_begin();
    call {:si_unique_call 2254} sdv_SetStatus(pirp_10);
    call {:si_unique_call 2255} status_32 := CyyPnpDispatch(po, pirp_10);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2256} sdv_stub_dispatch_end(status_32, 0);
    Tmp_960 := status_32;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end()
{
  var vslice_dummy_var_638: int;

  anon0:
    call {:si_unique_call 2257} vslice_dummy_var_638 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int)
{
  var {:pointer} DestinationString: int;
  var {:pointer} SourceString: int;
  var vslice_dummy_var_639: int;

  anon0:
    call {:si_unique_call 2258} vslice_dummy_var_639 := __HAVOC_malloc(4);
    DestinationString := actual_DestinationString;
    SourceString := actual_SourceString;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString != 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString == 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString == 0;
    goto L4;
}



procedure {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int)
{
  var vslice_dummy_var_640: int;

  anon0:
    call {:si_unique_call 2259} vslice_dummy_var_640 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_968: int);
  free ensures {:va_keep} Tmp_968 == 0 || Tmp_968 == actual_TargetDevice_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_968: int)
{
  var {:pointer} TargetDevice_1: int;

  anon0:
    TargetDevice_1 := actual_TargetDevice_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} TargetDevice_1 == sdv_p_devobj_pdo;
    Tmp_968 := TargetDevice_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} TargetDevice_1 != sdv_p_devobj_pdo;
    Tmp_968 := 0;
    goto L1;
}



procedure {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po_1: int, actual_pirp_11: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po_1: int, actual_pirp_11: int)
{
  var vslice_dummy_var_641: int;
  var vslice_dummy_var_642: int;

  anon0:
    call {:si_unique_call 2260} vslice_dummy_var_641 := __HAVOC_malloc(4);
    call {:si_unique_call 2261} sdv_stub_startio_begin();
    call {:si_unique_call 2262} vslice_dummy_var_642 := sdv_DoNothing();
    call {:si_unique_call 2263} sdv_stub_startio_end();
    return;
}



procedure {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_972: int);
  free ensures {:va_keep} Tmp_972 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_972: int)
{

  anon0:
    Tmp_972 := 1;
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int)
{
  var vslice_dummy_var_643: int;

  anon0:
    call {:si_unique_call 2264} vslice_dummy_var_643 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po_2: int, actual_pirp_12: int) returns (Tmp_976: int);
  modifies Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.CancelRoutine__IRP, alloc, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po_2: int, actual_pirp_12: int) returns (Tmp_976: int)
{
  var {:pointer} ps_1: int;
  var {:scalar} status_33: int;
  var {:pointer} po_2: int;
  var {:pointer} pirp_12: int;

  anon0:
    po_2 := actual_po_2;
    pirp_12 := actual_pirp_12;
    status_33 := 0;
    assume {:nonnull} pirp_12 != 0;
    assume pirp_12 > 0;
    ps_1 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_12)))];
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_1)] := 27;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} pirp_12 != 0;
    assume pirp_12 > 0;
    assume {:nonnull} pirp_12 != 0;
    assume pirp_12 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(pirp_12)] := 0;
    assume {:nonnull} pirp_12 != 0;
    assume pirp_12 > 0;
    call {:si_unique_call 2265} sdv_SetStatus(pirp_12);
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2266} sdv_stub_dispatch_begin();
    call {:si_unique_call 2267} status_33 := CyyPnpDispatch(po_2, pirp_12);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2268} sdv_stub_dispatch_end(status_33, 0);
    Tmp_976 := status_33;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin()
{
  var vslice_dummy_var_644: int;

  anon0:
    call {:si_unique_call 2269} vslice_dummy_var_644 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    return;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value_1: int, actual_Base: int, actual_String: int) returns (Tmp_980: int);
  free ensures {:va_keep} Tmp_980 == 0 || Tmp_980 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value_1: int, actual_Base: int, actual_String: int) returns (Tmp_980: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_980 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_980 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_645: int;

  anon0:
    call {:si_unique_call 2270} vslice_dummy_var_645 := __HAVOC_malloc(4);
    call {:si_unique_call 2271} SLIC_sdv_do_paged_code_check_entry(strConst__li2bpl227);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_8: int) returns (Tmp_984: int);
  free ensures {:va_keep} Tmp_984 == 0 || Tmp_984 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_8: int) returns (Tmp_984: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_984 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_984 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_13: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_13: int)
{
  var vslice_dummy_var_646: int;

  anon0:
    call {:si_unique_call 2272} vslice_dummy_var_646 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_WmiIrpNotCompleted"} {:osmodel} sdv_stub_WmiIrpNotCompleted(actual_pirp_14: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_WmiIrpNotCompleted"} {:osmodel} sdv_stub_WmiIrpNotCompleted(actual_pirp_14: int)
{
  var vslice_dummy_var_647: int;

  anon0:
    call {:si_unique_call 2273} vslice_dummy_var_647 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int)
{
  var vslice_dummy_var_648: int;

  anon0:
    call {:si_unique_call 2274} vslice_dummy_var_648 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_3: int, actual_pirp_15: int) returns (Tmp_992: int);
  modifies alloc, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, Mem_T.INT4, Mem_T.CancelIrql__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, yogi_error;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_3: int, actual_pirp_15: int) returns (Tmp_992: int)
{
  var {:pointer} ps_2: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_993: int;
  var {:scalar} sdv_804: int;
  var {:scalar} Tmp_995: int;
  var {:scalar} status_34: int;
  var {:pointer} po_3: int;
  var {:pointer} pirp_15: int;

  anon0:
    po_3 := actual_po_3;
    pirp_15 := actual_pirp_15;
    status_34 := 0;
    minor := sdv_804;
    assume {:nonnull} pirp_15 != 0;
    assume pirp_15 > 0;
    ps_2 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_15)))];
    assume {:nonnull} pirp_15 != 0;
    assume pirp_15 > 0;
    assume {:nonnull} pirp_15 != 0;
    assume pirp_15 > 0;
    call {:si_unique_call 2275} sdv_SetStatus(pirp_15);
    assume {:nonnull} pirp_15 != 0;
    assume pirp_15 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(pirp_15)] := 0;
    assume {:nonnull} pirp_15 != 0;
    assume pirp_15 > 0;
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    call {:si_unique_call 2276} sdv_stub_dispatch_begin();
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 27;
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L60;

  L60:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    Tmp_995 := 0;
    goto L216;

  L216:
    assume Tmp_995 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L66;

  L66:
    call {:si_unique_call 2277} status_34 := CyyPnpDispatch(po_3, pirp_15);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    call {:si_unique_call 2278} sdv_stub_dispatch_end(status_34, 0);
    assume {:nonnull} pirp_15 != 0;
    assume pirp_15 > 0;
    Tmp_992 := status_34;
    goto LM2;

  LM2:
    return;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    goto L66;

  anon65_Then:
    Tmp_995 := 1;
    goto L216;

  anon63_Then:
    goto L61;

  anon89_Then:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    Tmp_993 := 0;
    goto L222;

  L222:
    assume Tmp_993 != 0;
    goto L60;

  anon62_Then:
    Tmp_993 := 1;
    goto L222;

  anon66_Then:
    call {:si_unique_call 2279} status_34 := sdv_DoNothing();
    goto L72;

  anon67_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 23;
    call {:si_unique_call 2280} status_34 := sdv_DoNothing();
    goto L72;

  anon68_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 22;
    call {:si_unique_call 2281} sdv_SetPowerIrpMinorFunction(pirp_15);
    call {:si_unique_call 2282} status_34 := CyyPowerDispatch(po_3, pirp_15);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 18;
    call {:si_unique_call 2283} status_34 := CyyCleanup(po_3, pirp_15);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 2284} status_34 := sdv_DoNothing();
    goto L72;

  anon71_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 16;
    call {:si_unique_call 2285} status_34 := sdv_DoNothing();
    goto L72;

  anon72_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 15;
    call {:si_unique_call 2286} status_34 := sdv_DoNothing();
    goto L72;

  anon73_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 14;
    call {:si_unique_call 2287} status_34 := CyyIoControl(po_3, pirp_15);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon86_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    call {:si_unique_call 2288} status_34 := sdv_DoNothing();
    goto L72;

  anon75_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 9;
    call {:si_unique_call 2289} status_34 := CyyFlush(po_3, pirp_15);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon85_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 6;
    call {:si_unique_call 2290} status_34 := sdv_DoNothing();
    goto L72;

  anon77_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 5;
    call {:si_unique_call 2291} status_34 := sdv_DoNothing();
    goto L72;

  anon78_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 4;
    call {:si_unique_call 2292} status_34 := CyyWrite(po_3, pirp_15);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 3;
    call {:si_unique_call 2293} status_34 := CyyRead(po_3, pirp_15);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon83_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 2;
    call {:si_unique_call 2294} status_34 := CyyClose(po_3, pirp_15);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    assume {:nonnull} ps_2 != 0;
    assume ps_2 > 0;
    Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(ps_2)] := 0;
    call {:si_unique_call 2295} status_34 := CyyCreateOpen(po_3, pirp_15);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_996: int);
  free ensures {:va_keep} Tmp_996 == -1073741823 || Tmp_996 == -1073741808 || Tmp_996 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_996: int)
{
  var {:scalar} Tmp_998: int;
  var {:pointer} SymbolicLinkName_2: int;

  anon0:
    SymbolicLinkName_2 := actual_SymbolicLinkName_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_996 := -1073741823;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_996 := -1073741808;
    goto L1;

  anon7_Then:
    assume {:nonnull} SymbolicLinkName_2 != 0;
    assume SymbolicLinkName_2 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_998 := 0;
    goto L22;

  L22:
    assume Tmp_998 != 0;
    Tmp_996 := 0;
    goto L1;

  anon8_Then:
    Tmp_998 := 1;
    goto L22;
}



procedure {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_999: int);
  free ensures {:va_keep} Tmp_999 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_999: int)
{

  anon0:
    Tmp_999 := 1;
    return;
}



procedure {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_1001: int);
  free ensures {:va_keep} Tmp_1001 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_1001: int)
{

  anon0:
    Tmp_1001 := 0;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new_1: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == actual_new_1;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_649: int;

  anon0:
    call {:si_unique_call 2296} vslice_dummy_var_649 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    sdv_irql_current := new_1;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_16: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_16: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_650: int;

  anon0:
    call {:si_unique_call 2297} vslice_dummy_var_650 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init19"} {:osmodel} _sdv_init19();
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == 0;
  free ensures {:va_keep} sdv_irql_previous_2 == 0;
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == 0;
  free ensures {:va_keep} sdv_irql_previous_4 == 0;
  free ensures {:va_keep} sdv_irql_previous_3 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init19"} {:osmodel} _sdv_init19()
{
  var vslice_dummy_var_651: int;

  anon0:
    call {:si_unique_call 2298} vslice_dummy_var_651 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    sdv_irql_current := 0;
    sdv_irql_previous := 0;
    sdv_irql_previous_2 := 0;
    sdv_irql_previous_3 := 0;
    sdv_irql_previous_4 := 0;
    sdv_irql_previous_5 := 0;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_Io_Removelock_release_wait_returned == 0;
    assume sdv_ke_dpc == li2bplFunctionConstant517;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant520;
    assume sdv_p_devobj_top == sdv_devobj_top;
    Mem_T.INT4[sdv_MmMapIoSpace_int] := 0;
    return;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_652: int;

  anon0:
    call {:si_unique_call 2299} vslice_dummy_var_652 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength_1: int) returns (Tmp_1011: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} Tmp_1011 == -1073741811 || Tmp_1011 == -1073741823 || Tmp_1011 == 0 || Tmp_1011 == 5 || Tmp_1011 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength_1: int) returns (Tmp_1011: int)
{
  var {:scalar} L_1: int;
  var {:scalar} sdv_816: int;
  var {:scalar} Length_3: int;
  var {:pointer} ResultLength_1: int;

  anon0:
    Length_3 := actual_Length_3;
    ResultLength_1 := actual_ResultLength_1;
    L_1 := sdv_816;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L_1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L_1 == 0;
    Tmp_1011 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L_1 != 0;
    Tmp_1011 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L_1 == Length_3;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_3 != 0;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Mem_T.INT4[ResultLength_1] := L_1;
    Tmp_1011 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_3 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L_1 > Length_3;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Mem_T.INT4[ResultLength_1] := L_1;
    Tmp_1011 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_3 >= L_1;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Mem_T.INT4[ResultLength_1] := L_1;
    Tmp_1011 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L_1 != Length_3;
    goto L13;
}



procedure {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_1013: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_1013: int)
{
  var {:scalar} PhysicalAddress: int;
  var {:pointer} structPtr888PhysicalAddress: int;

  anon0:
    call {:si_unique_call 2300} PhysicalAddress := __HAVOC_malloc(20);
    structPtr888PhysicalAddress := actual_structPtr888PhysicalAddress;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    Tmp_1013 := sdv_MmMapIoSpace_int;
    return;
}



procedure {:origName "sdv_stub_WmiIrpForward"} {:osmodel} sdv_stub_WmiIrpForward(actual_pirp_17: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_WmiIrpForward"} {:osmodel} sdv_stub_WmiIrpForward(actual_pirp_17: int)
{
  var vslice_dummy_var_653: int;

  anon0:
    call {:si_unique_call 2301} vslice_dummy_var_653 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSynchronizeExecution"} {:osmodel} KeSynchronizeExecution(actual_Interrupt: int, actual_SynchronizeRoutine: int, actual_SynchronizeContext: int) returns (Tmp_1017: int);
  free ensures {:va_keep} Tmp_1017 == 1 || Tmp_1017 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeSynchronizeExecution"} {:osmodel} KeSynchronizeExecution(actual_Interrupt: int, actual_SynchronizeRoutine: int, actual_SynchronizeContext: int) returns (Tmp_1017: int)
{
  var {:scalar} b_1: int;

  anon0:
    call {:si_unique_call 2302} b_1 := OneOfTwoBOOLEAN();
    Tmp_1017 := b_1;
    return;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_654: int;

  anon0:
    call {:si_unique_call 2303} vslice_dummy_var_654 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_1021: int);
  free ensures {:va_keep} Tmp_1021 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_1021: int)
{

  anon0:
    Tmp_1021 := 0;
    return;
}



procedure {:origName "sdv_stub_WmiIrpProcessed"} {:osmodel} sdv_stub_WmiIrpProcessed(actual_pirp_18: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_WmiIrpProcessed"} {:osmodel} sdv_stub_WmiIrpProcessed(actual_pirp_18: int)
{
  var vslice_dummy_var_655: int;

  anon0:
    call {:si_unique_call 2304} vslice_dummy_var_655 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_1027: int);
  free ensures {:va_keep} Tmp_1027 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_1027: int)
{

  anon0:
    Tmp_1027 := 0;
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1029: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1029: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    Mem_T.INT4[Addend_1] := Mem_T.INT4[Addend_1] + 1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    Tmp_1029 := Mem_T.INT4[Addend_1];
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4;
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_current == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int)
{
  var vslice_dummy_var_656: int;

  anon0:
    call {:si_unique_call 2305} vslice_dummy_var_656 := __HAVOC_malloc(4);
    sdv_irql_current := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_5;
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1033: int);
  free ensures {:va_keep} Tmp_1033 == 1 || Tmp_1033 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1033: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1033 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1033 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_1035: int);
  free ensures {:va_keep} Tmp_1035 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_1035: int)
{

  anon0:
    Tmp_1035 := 1;
    return;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_27: int, actual_Irp_24: int) returns (Tmp_1037: int);
  free ensures {:va_keep} Tmp_1037 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_27: int, actual_Irp_24: int) returns (Tmp_1037: int)
{
  var {:scalar} status_35: int;
  var {:pointer} Irp_24: int;

  anon0:
    Irp_24 := actual_Irp_24;
    status_35 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_24;
    goto L25;

  L25:
    Tmp_1037 := status_35;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_24;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_24;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_24;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_24;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_24;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_24;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_24;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_24;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_24;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_24;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_24;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_24;
    goto L36;
}



procedure {:origName "IoDisconnectInterrupt"} {:osmodel} IoDisconnectInterrupt(actual_InterruptObject: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoDisconnectInterrupt"} {:osmodel} IoDisconnectInterrupt(actual_InterruptObject: int)
{
  var vslice_dummy_var_657: int;

  anon0:
    call {:si_unique_call 2306} vslice_dummy_var_657 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_1: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_1: int, actual_State_1: int)
{
  var {:pointer} Event_1: int;
  var {:scalar} Type_1: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_658: int;

  anon0:
    call {:si_unique_call 2307} vslice_dummy_var_658 := __HAVOC_malloc(4);
    Event_1 := actual_Event_1;
    Type_1 := actual_Type_1;
    State_1 := actual_State_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_4: int)
{
  var vslice_dummy_var_659: int;

  anon0:
    call {:si_unique_call 2308} vslice_dummy_var_659 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_28: int, actual_Irp_25: int) returns (Tmp_1045: int);
  free ensures {:va_keep} Tmp_1045 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_28: int, actual_Irp_25: int) returns (Tmp_1045: int)
{
  var {:pointer} Irp_25: int;

  anon0:
    Irp_25 := actual_Irp_25;
    call {:si_unique_call 2309} Tmp_1045 := IofCallDriver(0, Irp_25);
    return;
}



procedure {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_2: int);
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.INT4;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 2;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_2: int)
{
  var {:pointer} p_2: int;
  var vslice_dummy_var_660: int;

  anon0:
    call {:si_unique_call 2310} vslice_dummy_var_660 := __HAVOC_malloc(4);
    p_2 := actual_p_2;
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 2;
    assume {:nonnull} p_2 != 0;
    assume p_2 > 0;
    Mem_T.INT4[p_2] := sdv_irql_previous;
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int);
  modifies alloc, Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int)
{
  var {:pointer} SpinLock_2: int;
  var vslice_dummy_var_661: int;

  anon0:
    call {:si_unique_call 2311} vslice_dummy_var_661 := __HAVOC_malloc(4);
    SpinLock_2 := actual_SpinLock_2;
    assume {:nonnull} SpinLock_2 != 0;
    assume SpinLock_2 > 0;
    Mem_T.INT4[SpinLock_2] := 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_1051: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_1051: int)
{
  var {:pointer} sdv_822: int;
  var {:scalar} NumberOfBytes_3: int;

  anon0:
    NumberOfBytes_3 := actual_NumberOfBytes_3;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 2312} sdv_822 := __HAVOC_malloc(NumberOfBytes_3);
    Tmp_1051 := sdv_822;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1051 := 0;
    goto L1;
}



procedure {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_2: int, actual_Path_2: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_1053: int);
  free ensures {:va_keep} Tmp_1053 == 0 || Tmp_1053 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_2: int, actual_Path_2: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_1053: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1053 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1053 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int);
  modifies alloc, yogi_error;
  free ensures {:va_keep} old(sdv_irql_current) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == 1 ==> yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int)
{
  var {:pointer} pdrivo: int;
  var vslice_dummy_var_662: int;

  anon0:
    call {:si_unique_call 2313} vslice_dummy_var_662 := __HAVOC_malloc(4);
    pdrivo := actual_pdrivo;
    call {:si_unique_call 2314} CyyUnload(pdrivo);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_1057: int);
  free ensures {:va_keep} Tmp_1057 == -1073741772 || Tmp_1057 == -1073741824 || Tmp_1057 == -1073741789 || Tmp_1057 == -1073741670 || Tmp_1057 == -1073741808 || Tmp_1057 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_1057: int)
{

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1057 := -1073741772;
    goto L1;

  L1:
    return;

  anon12_Then:
    Tmp_1057 := -1073741824;
    goto L1;

  anon13_Then:
    Tmp_1057 := -1073741789;
    goto L1;

  anon14_Then:
    Tmp_1057 := -1073741670;
    goto L1;

  anon15_Then:
    Tmp_1057 := -1073741808;
    goto L1;

  anon11_Then:
    Tmp_1057 := 0;
    goto L1;
}



procedure {:origName "IoConnectInterrupt"} {:osmodel} IoConnectInterrupt(actual_InterruptObject_1: int, actual_ServiceRoutine: int, actual_ServiceContext: int, actual_SpinLock_3: int, actual_Vector: int, actual_Irql: int, actual_SynchronizeIrql: int, actual_InterruptMode: int, actual_ShareVector: int, actual_ProcessorEnableMask: int, actual_FloatingSave: int) returns (Tmp_1059: int);
  free ensures {:va_keep} Tmp_1059 == -1073741811 || Tmp_1059 == -1073741670 || Tmp_1059 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoConnectInterrupt"} {:osmodel} IoConnectInterrupt(actual_InterruptObject_1: int, actual_ServiceRoutine: int, actual_ServiceContext: int, actual_SpinLock_3: int, actual_Vector: int, actual_Irql: int, actual_SynchronizeIrql: int, actual_InterruptMode: int, actual_ShareVector: int, actual_ProcessorEnableMask: int, actual_FloatingSave: int) returns (Tmp_1059: int)
{
  var {:scalar} ServiceRoutine: int;
  var {:pointer} ServiceContext: int;

  anon0:
    ServiceRoutine := actual_ServiceRoutine;
    ServiceContext := actual_ServiceContext;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_1059 := -1073741811;
    goto L1;

  L1:
    return;

  anon5_Then:
    Tmp_1059 := -1073741670;
    goto L1;

  anon6_Then:
    Tmp_1059 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_663: int;

  anon0:
    call {:si_unique_call 2315} vslice_dummy_var_663 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetPowerRequestIrpMinorFunction"} {:osmodel} sdv_SetPowerRequestIrpMinorFunction(actual_pirp_19: int) returns (Tmp_1063: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_SetPowerRequestIrpMinorFunction"} {:osmodel} sdv_SetPowerRequestIrpMinorFunction(actual_pirp_19: int) returns (Tmp_1063: int)
{
  var {:pointer} r_4: int;
  var {:pointer} pirp_19: int;

  anon0:
    pirp_19 := actual_pirp_19;
    assume {:nonnull} pirp_19 != 0;
    assume pirp_19 > 0;
    r_4 := Mem_T.CurrentStackLocation_unnamed_tag_7[CurrentStackLocation_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(pirp_19)))];
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  L37:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L40;

  L40:
    Tmp_1063 := r_4;
    return;

  anon45_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon46_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon47_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon48_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon49_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon38_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L37;

  anon39_Then:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  L69:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L40;

  anon50_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  anon51_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  anon36_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L69;

  anon35_Then:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  L55:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L40;

  anon40_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon41_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon42_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon43_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon44_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;

  anon37_Then:
    assume {:nonnull} r_4 != 0;
    assume r_4 > 0;
    goto L55;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) <= 2 && old(sdv_irql_previous) <= 2 && old(sdv_irql_previous_2) <= 2 && old(sdv_irql_previous_3) <= 2 ==> sdv_irql_current <= 2 && sdv_irql_previous <= 2 && sdv_irql_previous_2 <= 2 && sdv_irql_previous_3 <= 2 && sdv_irql_current >= 0 && sdv_irql_previous >= 0 && sdv_irql_previous_2 >= 0 && sdv_irql_previous_3 >= 0;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_current == 0;
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_2);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_664: int;

  anon0:
    call {:si_unique_call 2316} vslice_dummy_var_664 := __HAVOC_malloc(4);
    sdv_irql_previous_5 := sdv_irql_previous_4;
    sdv_irql_previous_4 := sdv_irql_previous_3;
    sdv_irql_previous_3 := sdv_irql_previous_2;
    sdv_irql_previous_2 := sdv_irql_previous;
    sdv_irql_previous := sdv_irql_current;
    sdv_irql_current := 0;
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_29: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1067: int);
  free ensures {:va_keep} Tmp_1067 == -1073741811 || Tmp_1067 == -1073741808 || Tmp_1067 == -1073741823 || Tmp_1067 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_29: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1067: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1067 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_1067 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_1067 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_1067 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_1069: int);
  free ensures {:va_keep} Tmp_1069 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_1069: int)
{

  anon0:
    Tmp_1069 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1071: int);
  free ensures {:va_keep} Tmp_1071 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1071: int)
{

  anon0:
    Tmp_1071 := -1073741823;
    return;
}



procedure {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_30: int, actual_Action: int) returns (Tmp_1073: int);
  free ensures {:va_keep} Tmp_1073 == -1073741823 || Tmp_1073 == -1073741811 || Tmp_1073 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_30: int, actual_Action: int) returns (Tmp_1073: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1073 := -1073741823;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1073 := -1073741811;
    goto L1;

  anon5_Then:
    Tmp_1073 := 0;
    goto L1;
}



procedure {:origName "_sdv_init18"} _sdv_init18();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "_sdv_init18"} _sdv_init18()
{
  var vslice_dummy_var_665: int;

  anon0:
    call {:si_unique_call 2317} vslice_dummy_var_665 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyResizeBuffer"} CyyResizeBuffer(actual_Extension_28: int) returns (Tmp_1077: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} Tmp_1077 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyResizeBuffer"} CyyResizeBuffer(actual_Extension_28: int) returns (Tmp_1077: int)
{
  var {:pointer} Tmp_1078: int;
  var {:pointer} Tmp_1079: int;
  var {:pointer} irpSp_4: int;
  var {:pointer} newBuffer: int;
  var {:pointer} Tmp_1080: int;
  var {:pointer} rs: int;
  var {:pointer} Tmp_1081: int;
  var {:scalar} rp: int;
  var {:scalar} controlIrql: int;
  var {:pointer} Extension_28: int;
  var boogieTmp: int;
  var vslice_dummy_var_666: int;
  var vslice_dummy_var_1317: int;

  anon0:
    call {:si_unique_call 2318} rp := __HAVOC_malloc(20);
    Extension_28 := actual_Extension_28;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    havoc Tmp_1081;
    assume {:nonnull} Tmp_1081 != 0;
    assume Tmp_1081 > 0;
    havoc rs;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    havoc vslice_dummy_var_1317;
    call {:si_unique_call 2319} irpSp_4 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1317);
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    havoc newBuffer;
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    havoc Tmp_1080;
    assume {:nonnull} Tmp_1080 != 0;
    assume Tmp_1080 > 0;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    havoc Tmp_1078;
    assume {:nonnull} Tmp_1078 != 0;
    assume Tmp_1078 > 0;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    assume {:nonnull} rs != 0;
    assume rs > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rs != 0;
    assume rs > 0;
    call {:si_unique_call 2320} Tmp_1079 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1079 != 0;
    assume Tmp_1079 > 0;
    Mem_T.INT4[Tmp_1079] := controlIrql;
    call {:si_unique_call 2321} sdv_KeAcquireSpinLock(0, Tmp_1079);
    assume {:nonnull} Tmp_1079 != 0;
    assume Tmp_1079 > 0;
    controlIrql := Mem_T.INT4[Tmp_1079];
    assume {:nonnull} rp != 0;
    assume rp > 0;
    call {:si_unique_call 2322} boogieTmp := CyyMoveToNewIntBuffer(Extension_28, newBuffer);
    call {:si_unique_call 2323} vslice_dummy_var_666 := KeSynchronizeExecution(0, li2bplFunctionConstant465, 0);
    call {:si_unique_call 2324} sdv_KeReleaseSpinLock(0, controlIrql);
    call {:si_unique_call 2325} sdv_ExFreePool(0);
    goto L20;

  L20:
    Tmp_1077 := 0;
    return;

  anon3_Then:
    call {:si_unique_call 2326} sdv_ExFreePool(0);
    goto L20;
}



procedure {:origName "CyyCancelCurrentRead"} CyyCancelCurrentRead(actual_DeviceObject_31: int, actual_Irp_26: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCancelCurrentRead"} CyyCancelCurrentRead(actual_DeviceObject_31: int, actual_Irp_26: int)
{
  var {:pointer} extension_7: int;
  var {:pointer} DeviceObject_31: int;
  var {:pointer} Irp_26: int;
  var vslice_dummy_var_667: int;

  anon0:
    call {:si_unique_call 2327} vslice_dummy_var_667 := __HAVOC_malloc(4);
    DeviceObject_31 := actual_DeviceObject_31;
    Irp_26 := actual_Irp_26;
    assume {:nonnull} DeviceObject_31 != 0;
    assume DeviceObject_31 > 0;
    havoc extension_7;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    assume {:nonnull} Irp_26 != 0;
    assume Irp_26 > 0;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 2328} CyyTryToCompleteCurrent#1(extension_7, li2bplFunctionConstant461, Mem_T.CancelIrql__IRP[CancelIrql__IRP(Irp_26)], -1073741536, CurrentReadIrp__CYY_DEVICE_EXTENSION(extension_7), ReadQueue__CYY_DEVICE_EXTENSION(extension_7), ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(extension_7), ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(extension_7), li2bplFunctionConstant376, li2bplFunctionConstant144, 2);
    return;
}



procedure {:origName "CyyStartRead"} CyyStartRead(actual_Extension_29: int) returns (Tmp_1084: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_3) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_3) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyStartRead"} CyyStartRead(actual_Extension_29: int) returns (Tmp_1084: int)
{
  var {:scalar} localStatus_1: int;
  var {:pointer} s_p_e_c_i_a_l_27: int;
  var {:pointer} Tmp_1085: int;
  var {:pointer} sdv_835: int;
  var {:pointer} Tmp_1086: int;
  var {:pointer} sdv_836: int;
  var {:scalar} totalTime: int;
  var {:scalar} os2ssreturn: int;
  var {:scalar} updateChar: int;
  var {:scalar} timeoutsForIrp: int;
  var {:scalar} setFirstStatus: int;
  var {:pointer} Tmp_1087: int;
  var {:pointer} newIrp_1: int;
  var {:scalar} useTotalTimer: int;
  var {:scalar} multiplierVal: int;
  var {:scalar} crunchDownToOne: int;
  var {:pointer} sdv_841: int;
  var {:scalar} s_p_e_c_i_a_l_28: int;
  var {:scalar} oldIrql_9: int;
  var {:pointer} Tmp_1088: int;
  var {:pointer} sdv_843: int;
  var {:scalar} constantVal: int;
  var {:pointer} s_p_e_c_i_a_l_29: int;
  var {:pointer} sdv_847: int;
  var {:scalar} controlIrql_1: int;
  var {:pointer} Tmp_1089: int;
  var {:pointer} Tmp_1090: int;
  var {:pointer} Tmp_1091: int;
  var {:scalar} s_p_e_c_i_a_l_30: int;
  var {:scalar} returnWithWhatsPresent: int;
  var {:pointer} Tmp_1092: int;
  var {:pointer} Tmp_1093: int;
  var {:scalar} useIntervalTimer: int;
  var {:pointer} sdv_850: int;
  var {:scalar} firstStatus: int;
  var {:pointer} Tmp_1094: int;
  var {:pointer} Extension_29: int;
  var boogieTmp: int;
  var vslice_dummy_var_668: int;
  var vslice_dummy_var_669: int;
  var vslice_dummy_var_670: int;
  var vslice_dummy_var_671: int;
  var vslice_dummy_var_672: int;
  var vslice_dummy_var_673: int;
  var vslice_dummy_var_674: int;
  var vslice_dummy_var_675: int;
  var vslice_dummy_var_1318: int;
  var vslice_dummy_var_1319: int;
  var vslice_dummy_var_1320: int;
  var vslice_dummy_var_1321: int;
  var vslice_dummy_var_1322: int;
  var vslice_dummy_var_1323: int;
  var vslice_dummy_var_1324: int;

  anon0:
    call {:si_unique_call 2329} totalTime := __HAVOC_malloc(20);
    call {:si_unique_call 2330} updateChar := __HAVOC_malloc(12);
    call {:si_unique_call 2331} timeoutsForIrp := __HAVOC_malloc(20);
    call {:si_unique_call 2332} newIrp_1 := __HAVOC_malloc(4);
    Extension_29 := actual_Extension_29;
    call {:si_unique_call 2333} Tmp_1086 := __HAVOC_malloc(72);
    call {:si_unique_call 2334} Tmp_1090 := __HAVOC_malloc(76);
    setFirstStatus := 0;
    Tmp_1090 := strConst__li2bpl229;
    call {:si_unique_call 2335} vslice_dummy_var_671 := CyyDbgPrintEx(2, Tmp_1090);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto L23;

  L23:
    call {:si_unique_call 2336} localStatus_1, Tmp_1085, sdv_835, os2ssreturn, setFirstStatus, Tmp_1087, useTotalTimer, multiplierVal, crunchDownToOne, sdv_841, oldIrql_9, Tmp_1088, sdv_843, constantVal, controlIrql_1, Tmp_1089, Tmp_1091, returnWithWhatsPresent, Tmp_1092, Tmp_1093, useIntervalTimer, sdv_850, firstStatus, boogieTmp, vslice_dummy_var_668, vslice_dummy_var_669, vslice_dummy_var_670, vslice_dummy_var_673 := CyyStartRead_loop_L23(localStatus_1, Tmp_1085, sdv_835, totalTime, os2ssreturn, updateChar, timeoutsForIrp, setFirstStatus, Tmp_1087, newIrp_1, useTotalTimer, multiplierVal, crunchDownToOne, sdv_841, oldIrql_9, Tmp_1088, sdv_843, constantVal, controlIrql_1, Tmp_1089, Tmp_1091, returnWithWhatsPresent, Tmp_1092, Tmp_1093, useIntervalTimer, sdv_850, firstStatus, Extension_29, boogieTmp, vslice_dummy_var_668, vslice_dummy_var_669, vslice_dummy_var_670, vslice_dummy_var_673);
    goto L23_last;

  L23_last:
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc vslice_dummy_var_1324;
    call {:si_unique_call 2367} sdv_841 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1324);
    assume {:nonnull} sdv_841 != 0;
    assume sdv_841 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_841)] != 3;
    call {:si_unique_call 2337} localStatus_1 := CyyResizeBuffer(Extension_29);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  L37:
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    call {:si_unique_call 2338} CyyGetNextIrp(CurrentReadIrp__CYY_DEVICE_EXTENSION(Extension_29), ReadQueue__CYY_DEVICE_EXTENSION(Extension_29), newIrp_1, 1, Extension_29);
    assume {:nonnull} newIrp_1 != 0;
    assume newIrp_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_1086 := strConst__li2bpl228;
    call {:si_unique_call 2339} vslice_dummy_var_672 := CyyDbgPrintEx(2, Tmp_1086);
    Tmp_1084 := firstStatus;
    goto L1;

  L1:
    return;

  anon61_Then:
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    assume false;
    return;

  anon60_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := localStatus_1;
    setFirstStatus := 1;
    goto L37;

  anon59_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(sdv_841)] == 3;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc vslice_dummy_var_1318;
    call {:si_unique_call 2340} sdv_843 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1318);
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    assume {:nonnull} sdv_843 != 0;
    assume sdv_843 > 0;
    useTotalTimer := 0;
    returnWithWhatsPresent := 0;
    os2ssreturn := 0;
    crunchDownToOne := 0;
    useIntervalTimer := 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    call {:si_unique_call 2341} vslice_dummy_var_673 := CyyCancelTimer(ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_29), Extension_29);
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    call {:si_unique_call 2342} vslice_dummy_var_668 := CyyCancelTimer(ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(Extension_29), Extension_29);
    call {:si_unique_call 2343} Tmp_1092 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1092 != 0;
    assume Tmp_1092 > 0;
    Mem_T.INT4[Tmp_1092] := controlIrql_1;
    call {:si_unique_call 2344} sdv_KeAcquireSpinLock(0, Tmp_1092);
    assume {:nonnull} Tmp_1092 != 0;
    assume Tmp_1092 > 0;
    controlIrql_1 := Mem_T.INT4[Tmp_1092];
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    call {:si_unique_call 2345} sdv_KeReleaseSpinLock(0, controlIrql_1);
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    useIntervalTimer := 1;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    goto L66;

  L66:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L76;

  L76:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L83;

  L83:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} useTotalTimer != 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    assume {:nonnull} totalTime != 0;
    assume totalTime > 0;
    goto L84;

  L84:
    call {:si_unique_call 2346} Tmp_1092 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1092 != 0;
    assume Tmp_1092 > 0;
    Mem_T.INT4[Tmp_1092] := controlIrql_1;
    call {:si_unique_call 2347} sdv_KeAcquireSpinLock(0, Tmp_1092);
    assume {:nonnull} Tmp_1092 != 0;
    assume Tmp_1092 > 0;
    controlIrql_1 := Mem_T.INT4[Tmp_1092];
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    call {:si_unique_call 2348} boogieTmp := CyyGetCharsFromIntBuffer(Extension_29);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} returnWithWhatsPresent != 0;
    goto L94;

  L94:
    call {:si_unique_call 2349} vslice_dummy_var_669 := KeSynchronizeExecution(0, li2bplFunctionConstant458, 0);
    call {:si_unique_call 2350} sdv_KeReleaseSpinLock(0, controlIrql_1);
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc Tmp_1093;
    assume {:nonnull} Tmp_1093 != 0;
    assume Tmp_1093 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L37;

  anon83_Then:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  anon72_Then:
    assume {:partition} returnWithWhatsPresent == 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} os2ssreturn != 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc Tmp_1088;
    assume {:nonnull} Tmp_1088 != 0;
    assume Tmp_1088 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L105;

  L105:
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc vslice_dummy_var_1319;
    call {:si_unique_call 2351} sdv_850 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1319);
    assume {:nonnull} sdv_850 != 0;
    assume sdv_850 > 0;
    call {:si_unique_call 2352} Tmp_1092 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1092 != 0;
    assume Tmp_1092 > 0;
    Mem_T.INT4[Tmp_1092] := oldIrql_9;
    call {:si_unique_call 2353} IoAcquireCancelSpinLock(Tmp_1092);
    assume {:nonnull} Tmp_1092 != 0;
    assume Tmp_1092 > 0;
    oldIrql_9 := Mem_T.INT4[Tmp_1092];
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc Tmp_1087;
    assume {:nonnull} Tmp_1087 != 0;
    assume Tmp_1087 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 2354} IoReleaseCancelSpinLock(oldIrql_9);
    call {:si_unique_call 2355} sdv_KeReleaseSpinLock(0, controlIrql_1);
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc Tmp_1091;
    assume {:nonnull} Tmp_1091 != 0;
    assume Tmp_1091 > 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc Tmp_1085;
    assume {:nonnull} Tmp_1085 != 0;
    assume Tmp_1085 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := -1073741536;
    setFirstStatus := 1;
    goto L37;

  anon86_Then:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  anon85_Then:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} crunchDownToOne != 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc vslice_dummy_var_1320;
    call {:si_unique_call 2356} sdv_835 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1320);
    assume {:nonnull} sdv_835 != 0;
    assume sdv_835 > 0;
    goto L126;

  L126:
    call {:si_unique_call 2357} vslice_dummy_var_670 := KeSynchronizeExecution(0, li2bplFunctionConstant459, 0);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 2358} IoReleaseCancelSpinLock(oldIrql_9);
    call {:si_unique_call 2359} sdv_KeReleaseSpinLock(0, controlIrql_1);
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc Tmp_1089;
    assume {:nonnull} Tmp_1089 != 0;
    assume Tmp_1089 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L37;

  anon87_Then:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  anon76_Then:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} useTotalTimer != 0;
    s_p_e_c_i_a_l_28 := 4;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc vslice_dummy_var_1321;
    call {:si_unique_call 2360} sdv_836 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1321);
    assume {:nonnull} sdv_836 != 0;
    assume sdv_836 > 0;
    s_p_e_c_i_a_l_27 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_836)));
    assume {:nonnull} s_p_e_c_i_a_l_27 != 0;
    assume s_p_e_c_i_a_l_27 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_27] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_27], s_p_e_c_i_a_l_28);
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    call {:si_unique_call 2361} vslice_dummy_var_674 := CyySetTimer(ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_29), totalTime, TotalReadTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_29), Extension_29);
    goto L146;

  L146:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} useIntervalTimer != 0;
    s_p_e_c_i_a_l_30 := 8;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc vslice_dummy_var_1322;
    call {:si_unique_call 2362} sdv_847 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1322);
    assume {:nonnull} sdv_847 != 0;
    assume sdv_847 > 0;
    s_p_e_c_i_a_l_29 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_847)));
    assume {:nonnull} s_p_e_c_i_a_l_29 != 0;
    assume s_p_e_c_i_a_l_29 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_29] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_29], s_p_e_c_i_a_l_30);
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc Tmp_1094;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    assume {:nonnull} Tmp_1094 != 0;
    assume Tmp_1094 > 0;
    havoc vslice_dummy_var_1323;
    call {:si_unique_call 2363} vslice_dummy_var_675 := CyySetTimer(ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(Extension_29), vslice_dummy_var_1323, IntervalReadTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_29), Extension_29);
    goto L158;

  L158:
    call {:si_unique_call 2364} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 2365} IoReleaseCancelSpinLock(oldIrql_9);
    call {:si_unique_call 2366} sdv_KeReleaseSpinLock(0, controlIrql_1);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} setFirstStatus != 0;
    goto L183;

  L183:
    Tmp_1084 := firstStatus;
    goto L1;

  anon79_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 259;
    goto L183;

  anon78_Then:
    assume {:partition} useIntervalTimer == 0;
    goto L158;

  anon77_Then:
    assume {:partition} useTotalTimer == 0;
    goto L146;

  anon75_Then:
    assume {:partition} crunchDownToOne == 0;
    goto L126;

  anon84_Then:
    goto L94;

  anon74_Then:
    assume {:partition} os2ssreturn == 0;
    goto L105;

  anon73_Then:
    goto L94;

  anon71_Then:
    assume {:partition} useTotalTimer == 0;
    goto L84;

  anon70_Then:
    goto L77;

  L77:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    crunchDownToOne := 1;
    multiplierVal := 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L83;

  anon80_Then:
    goto L83;

  anon69_Then:
    goto L83;

  anon68_Then:
    goto L77;

  anon66_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    returnWithWhatsPresent := 1;
    goto L83;

  anon67_Then:
    goto L76;

  anon63_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L192;

  L192:
    useTotalTimer := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L83;

  anon65_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L192;

  anon81_Then:
    goto L83;

  anon82_Then:
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    goto L66;

  anon64_Then:
    goto L66;

  anon62_Then:
    goto L66;
}



procedure {:origName "CyyReadTimeout"} CyyReadTimeout(actual_Dpc_10: int, actual_DeferredContext_7: int, actual_SystemContext1_6: int, actual_SystemContext2_6: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyReadTimeout"} CyyReadTimeout(actual_Dpc_10: int, actual_DeferredContext_7: int, actual_SystemContext1_6: int, actual_SystemContext2_6: int)
{
  var {:scalar} oldIrql_10: int;
  var {:pointer} Tmp_1095: int;
  var {:pointer} Tmp_1096: int;
  var {:pointer} extension_8: int;
  var {:pointer} Tmp_1097: int;
  var {:pointer} Dpc_10: int;
  var {:pointer} DeferredContext_7: int;
  var vslice_dummy_var_676: int;
  var vslice_dummy_var_677: int;
  var vslice_dummy_var_678: int;

  anon0:
    call {:si_unique_call 2368} vslice_dummy_var_676 := __HAVOC_malloc(4);
    Dpc_10 := actual_Dpc_10;
    DeferredContext_7 := actual_DeferredContext_7;
    call {:si_unique_call 2369} Tmp_1096 := __HAVOC_malloc(84);
    call {:si_unique_call 2370} Tmp_1097 := __HAVOC_malloc(68);
    extension_8 := DeferredContext_7;
    Tmp_1096 := strConst__li2bpl231;
    call {:si_unique_call 2371} vslice_dummy_var_677 := CyyDbgPrintEx(2, Tmp_1096);
    call {:si_unique_call 2372} Tmp_1095 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1095 != 0;
    assume Tmp_1095 > 0;
    Mem_T.INT4[Tmp_1095] := oldIrql_10;
    call {:si_unique_call 2373} IoAcquireCancelSpinLock(Tmp_1095);
    assume {:nonnull} Tmp_1095 != 0;
    assume Tmp_1095 > 0;
    oldIrql_10 := Mem_T.INT4[Tmp_1095];
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    call {:si_unique_call 2374} CyyTryToCompleteCurrent#1(extension_8, li2bplFunctionConstant461, oldIrql_10, 258, CurrentReadIrp__CYY_DEVICE_EXTENSION(extension_8), ReadQueue__CYY_DEVICE_EXTENSION(extension_8), ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(extension_8), ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(extension_8), li2bplFunctionConstant376, li2bplFunctionConstant144, 4);
    call {:si_unique_call 2375} CyyDpcEpilogue(extension_8, Dpc_10);
    Tmp_1097 := strConst__li2bpl230;
    call {:si_unique_call 2376} vslice_dummy_var_678 := CyyDbgPrintEx(2, Tmp_1097);
    return;
}



procedure {:origName "CyyCompleteRead"} CyyCompleteRead(actual_Dpc_11: int, actual_DeferredContext_8: int, actual_SystemContext1_7: int, actual_SystemContext2_7: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyCompleteRead"} CyyCompleteRead(actual_Dpc_11: int, actual_DeferredContext_8: int, actual_SystemContext1_7: int, actual_SystemContext2_7: int)
{
  var {:pointer} Tmp_1099: int;
  var {:pointer} Tmp_1100: int;
  var {:pointer} Tmp_1101: int;
  var {:scalar} oldIrql_11: int;
  var {:pointer} extension_9: int;
  var {:pointer} Dpc_11: int;
  var {:pointer} DeferredContext_8: int;
  var vslice_dummy_var_679: int;
  var vslice_dummy_var_680: int;
  var vslice_dummy_var_681: int;

  anon0:
    call {:si_unique_call 2377} vslice_dummy_var_679 := __HAVOC_malloc(4);
    Dpc_11 := actual_Dpc_11;
    DeferredContext_8 := actual_DeferredContext_8;
    call {:si_unique_call 2378} Tmp_1099 := __HAVOC_malloc(88);
    call {:si_unique_call 2379} Tmp_1100 := __HAVOC_malloc(88);
    extension_9 := DeferredContext_8;
    Tmp_1099 := strConst__li2bpl233;
    call {:si_unique_call 2380} vslice_dummy_var_680 := CyyDbgPrintEx(2, Tmp_1099);
    call {:si_unique_call 2381} Tmp_1101 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1101 != 0;
    assume Tmp_1101 > 0;
    Mem_T.INT4[Tmp_1101] := oldIrql_11;
    call {:si_unique_call 2382} IoAcquireCancelSpinLock(Tmp_1101);
    assume {:nonnull} Tmp_1101 != 0;
    assume Tmp_1101 > 0;
    oldIrql_11 := Mem_T.INT4[Tmp_1101];
    assume {:nonnull} extension_9 != 0;
    assume extension_9 > 0;
    assume {:nonnull} extension_9 != 0;
    assume extension_9 > 0;
    call {:si_unique_call 2383} CyyTryToCompleteCurrent#1(extension_9, 0, oldIrql_11, 0, CurrentReadIrp__CYY_DEVICE_EXTENSION(extension_9), ReadQueue__CYY_DEVICE_EXTENSION(extension_9), ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(extension_9), ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(extension_9), li2bplFunctionConstant376, li2bplFunctionConstant144, 1);
    call {:si_unique_call 2384} CyyDpcEpilogue(extension_9, Dpc_11);
    Tmp_1100 := strConst__li2bpl232;
    call {:si_unique_call 2385} vslice_dummy_var_681 := CyyDbgPrintEx(2, Tmp_1100);
    return;
}



procedure {:origName "CyyMoveToNewIntBuffer"} CyyMoveToNewIntBuffer(actual_Extension_30: int, actual_NewBuffer: int) returns (Tmp_1103: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyMoveToNewIntBuffer"} CyyMoveToNewIntBuffer(actual_Extension_30: int, actual_NewBuffer: int) returns (Tmp_1103: int)
{
  var {:scalar} firstTryNumberToGet: int;
  var {:scalar} Tmp_1106: int;
  var {:scalar} numberOfCharsMoved: int;
  var {:pointer} Extension_30: int;
  var {:pointer} NewBuffer: int;

  anon0:
    Extension_30 := actual_Extension_30;
    NewBuffer := actual_NewBuffer;
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    havoc numberOfCharsMoved;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} numberOfCharsMoved != 0;
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    havoc firstTryNumberToGet;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} firstTryNumberToGet >= numberOfCharsMoved;
    call {:si_unique_call 2386} sdv_RtlMoveMemory(0, 0, numberOfCharsMoved);
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    goto L6;

  L6:
    Tmp_1103 := numberOfCharsMoved;
    return;

  anon7_Then:
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    goto L6;

  anon9_Then:
    assume {:partition} numberOfCharsMoved > firstTryNumberToGet;
    call {:si_unique_call 2387} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet);
    Tmp_1106 := numberOfCharsMoved - firstTryNumberToGet;
    call {:si_unique_call 2388} sdv_RtlMoveMemory(0, 0, Tmp_1106);
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    goto L6;

  anon8_Then:
    assume {:partition} numberOfCharsMoved == 0;
    goto L6;
}



procedure {:origName "CyyGetCharsFromIntBuffer"} CyyGetCharsFromIntBuffer(actual_Extension_31: int) returns (Tmp_1107: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyGetCharsFromIntBuffer"} CyyGetCharsFromIntBuffer(actual_Extension_31: int) returns (Tmp_1107: int)
{
  var {:scalar} numberOfCharsToGet: int;
  var {:scalar} firstTryNumberToGet_1: int;
  var {:scalar} Tmp_1110: int;
  var {:pointer} Tmp_1111: int;
  var {:pointer} Tmp_1112: int;
  var {:pointer} Tmp_1113: int;
  var {:pointer} Tmp_1114: int;
  var {:pointer} Tmp_1116: int;
  var {:pointer} Extension_31: int;
  var vslice_dummy_var_682: int;
  var vslice_dummy_var_683: int;
  var vslice_dummy_var_684: int;
  var vslice_dummy_var_1325: int;
  var vslice_dummy_var_1326: int;
  var vslice_dummy_var_1327: int;

  anon0:
    Extension_31 := actual_Extension_31;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc numberOfCharsToGet;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc numberOfCharsToGet;
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} numberOfCharsToGet != 0;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc firstTryNumberToGet_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} firstTryNumberToGet_1 > numberOfCharsToGet;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc vslice_dummy_var_1325;
    call {:si_unique_call 2389} vslice_dummy_var_683 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1325);
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc Tmp_1116;
    assume {:nonnull} Tmp_1116 != 0;
    assume Tmp_1116 > 0;
    call {:si_unique_call 2390} sdv_RtlMoveMemory(0, 0, numberOfCharsToGet);
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    goto L9;

  L9:
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc Tmp_1112;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc Tmp_1113;
    assume {:nonnull} Tmp_1112 != 0;
    assume Tmp_1112 > 0;
    assume {:nonnull} Tmp_1113 != 0;
    assume Tmp_1113 > 0;
    Tmp_1107 := numberOfCharsToGet;
    return;

  anon12_Then:
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    goto L9;

  anon11_Then:
    assume {:partition} numberOfCharsToGet >= firstTryNumberToGet_1;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc vslice_dummy_var_1326;
    call {:si_unique_call 2391} vslice_dummy_var_682 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1326);
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc Tmp_1114;
    assume {:nonnull} Tmp_1114 != 0;
    assume Tmp_1114 > 0;
    call {:si_unique_call 2392} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet_1);
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    Tmp_1110 := numberOfCharsToGet - firstTryNumberToGet_1;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc vslice_dummy_var_1327;
    call {:si_unique_call 2393} vslice_dummy_var_684 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1327);
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc Tmp_1111;
    assume {:nonnull} Tmp_1111 != 0;
    assume Tmp_1111 > 0;
    call {:si_unique_call 2394} sdv_RtlMoveMemory(0, 0, Tmp_1110);
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    goto L9;

  anon9_Then:
    assume {:partition} numberOfCharsToGet == 0;
    goto L9;

  anon10_Then:
    goto L7;
}



procedure {:origName "CyyRead"} CyyRead(actual_DeviceObject_32: int, actual_Irp_27: int) returns (Tmp_1118: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, Mem_T.CancelIrql__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyRead"} CyyRead(actual_DeviceObject_32: int, actual_Irp_27: int) returns (Tmp_1118: int)
{
  var {:pointer} Tmp_1119: int;
  var {:pointer} Tmp_1120: int;
  var {:pointer} Tmp_1121: int;
  var {:scalar} sdv_860: int;
  var {:pointer} Tmp_1122: int;
  var {:pointer} sdv_862: int;
  var {:pointer} Tmp_1123: int;
  var {:pointer} Tmp_1124: int;
  var {:pointer} Tmp_1125: int;
  var {:pointer} Tmp_1127: int;
  var {:scalar} status_36: int;
  var {:pointer} extension_10: int;
  var {:pointer} DeviceObject_32: int;
  var {:pointer} Irp_27: int;
  var vslice_dummy_var_685: int;
  var vslice_dummy_var_686: int;
  var vslice_dummy_var_687: int;
  var vslice_dummy_var_688: int;
  var vslice_dummy_var_689: int;
  var vslice_dummy_var_690: int;
  var vslice_dummy_var_691: int;
  var vslice_dummy_var_692: int;

  anon0:
    DeviceObject_32 := actual_DeviceObject_32;
    Irp_27 := actual_Irp_27;
    call {:si_unique_call 2395} Tmp_1119 := __HAVOC_malloc(68);
    call {:si_unique_call 2396} Tmp_1120 := __HAVOC_malloc(72);
    call {:si_unique_call 2397} Tmp_1121 := __HAVOC_malloc(96);
    call {:si_unique_call 2398} Tmp_1122 := __HAVOC_malloc(72);
    call {:si_unique_call 2399} Tmp_1123 := __HAVOC_malloc(68);
    call {:si_unique_call 2400} Tmp_1124 := __HAVOC_malloc(72);
    call {:si_unique_call 2401} Tmp_1125 := __HAVOC_malloc(68);
    call {:si_unique_call 2402} Tmp_1127 := __HAVOC_malloc(68);
    assume {:nonnull} DeviceObject_32 != 0;
    assume DeviceObject_32 > 0;
    havoc extension_10;
    Tmp_1120 := strConst__li2bpl238;
    call {:si_unique_call 2403} vslice_dummy_var_685 := CyyDbgPrintEx(2, Tmp_1120);
    call {:si_unique_call 2404} status_36 := CyyIRPPrologue(Irp_27, extension_10);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_36 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_36 != 259;
    Tmp_1122 := strConst__li2bpl3;
    call {:si_unique_call 2405} vslice_dummy_var_686 := CyyDbgPrintEx(9, Tmp_1122);
    call {:si_unique_call 2406} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2407} CyyIRPEpilogue(extension_10);
    goto L19;

  L19:
    Tmp_1127 := strConst__li2bpl234;
    call {:si_unique_call 2408} vslice_dummy_var_687 := CyyDbgPrintEx(2, Tmp_1127);
    Tmp_1118 := status_36;
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} status_36 == 259;
    goto L19;

  anon11_Then:
    assume {:partition} status_36 == 0;
    Tmp_1121 := strConst__li2bpl11;
    call {:si_unique_call 2409} vslice_dummy_var_688 := CyyDbgPrintEx(9, Tmp_1121);
    call {:si_unique_call 2410} sdv_860 := CyyCompleteIfError(DeviceObject_32, Irp_27);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_860 != 0;
    Tmp_1125 := strConst__li2bpl235;
    call {:si_unique_call 2411} vslice_dummy_var_689 := CyyDbgPrintEx(2, Tmp_1125);
    Tmp_1118 := -1073741536;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_860 == 0;
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    call {:si_unique_call 2412} sdv_862 := sdv_IoGetCurrentIrpStackLocation(Irp_27);
    assume {:nonnull} sdv_862 != 0;
    assume sdv_862 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} extension_10 != 0;
    assume extension_10 > 0;
    call {:si_unique_call 2413} status_36 := CyyStartOrQueue(extension_10, Irp_27, ReadQueue__CYY_DEVICE_EXTENSION(extension_10), CurrentReadIrp__CYY_DEVICE_EXTENSION(extension_10), li2bplFunctionConstant376);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    Tmp_1119 := strConst__li2bpl236;
    call {:si_unique_call 2414} vslice_dummy_var_690 := CyyDbgPrintEx(2, Tmp_1119);
    Tmp_1118 := status_36;
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon14_Then:
    assume {:nonnull} Irp_27 != 0;
    assume Irp_27 > 0;
    Tmp_1124 := strConst__li2bpl3;
    call {:si_unique_call 2415} vslice_dummy_var_691 := CyyDbgPrintEx(9, Tmp_1124);
    call {:si_unique_call 2416} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2417} CyyIRPEpilogue(extension_10);
    Tmp_1123 := strConst__li2bpl237;
    call {:si_unique_call 2418} vslice_dummy_var_692 := CyyDbgPrintEx(2, Tmp_1123);
    Tmp_1118 := 0;
    goto L1;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    assume (forall x: int :: { Mem_T.CancelRoutine__IRP[x] } Mem_T.CancelRoutine__IRP[x] <= 0 || Mem_T.CancelRoutine__IRP[x] > 520);
    return;
}



function {:inline true} {:fieldmap "Mem_T.AddDevice__DRIVER_EXTENSION"} {:fieldname "AddDevice"} AddDevice__DRIVER_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Affinity__CONFIG_DATA"} {:fieldname "Affinity"} Affinity__CONFIG_DATA(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.Affinity_unnamed_tag_43"} {:fieldname "Affinity"} Affinity_unnamed_tag_43(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__CYY_GLOBALS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AllocationSize__FILE_STANDARD_INFORMATION"} {:fieldname "AllocationSize"} AllocationSize__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "AlternativeLists"} AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Argument4"} Argument4_unnamed_tag_40(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_3"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BaseIOAddress__SERIAL_WMI_HW_DATA"} {:fieldname "BaseIOAddress"} BaseIOAddress__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.BaudRate__SERIAL_BAUD_RATE"} {:fieldname "BaudRate"} BaudRate__SERIAL_BAUD_RATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Baud__CYY_IOCTL_BAUD"} {:fieldname "Baud"} Baud__CYY_IOCTL_BAUD(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BitsPerByte__SERIAL_WMI_COMM_DATA"} {:fieldname "BitsPerByte"} BitsPerByte__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryAddressSpace__CONFIG_DATA"} {:fieldname "BoardMemoryAddressSpace"} BoardMemoryAddressSpace__CONFIG_DATA(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryAddressSpace__CYY_DEVICE_EXTENSION"} {:fieldname "BoardMemoryAddressSpace"} BoardMemoryAddressSpace__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 584
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryLength__CONFIG_DATA"} {:fieldname "BoardMemoryLength"} BoardMemoryLength__CONFIG_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryLength__CYY_DEVICE_EXTENSION"} {:fieldname "BoardMemoryLength"} BoardMemoryLength__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 436
}

function {:inline true} {:fieldmap "Mem_T.BoardMemory__CYY_DEVICE_EXTENSION"} {:fieldname "BoardMemory"} BoardMemory__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T.BreakChar__SERIAL_CHARS"} {:fieldname "BreakChar"} BreakChar__SERIAL_CHARS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BufferSizePt8__CYY_DEVICE_EXTENSION"} {:fieldname "BufferSizePt8"} BufferSizePt8__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T.BufferSize__CYY_DEVICE_EXTENSION"} {:fieldname "BufferSize"} BufferSize__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 368
}

function {:inline true} {:fieldmap "Mem_T.Buffer__UNICODE_STRING"} {:fieldname "Buffer"} Buffer__UNICODE_STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "BusNumber"} BusNumber__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CONFIG_DATA"} {:fieldname "BusNumber"} BusNumber__CONFIG_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CYY_DEVICE_EXTENSION"} {:fieldname "BusNumber"} BusNumber__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 588
}

function {:inline true} {:fieldmap "Mem_T.CDClock__CYY_DEVICE_EXTENSION"} {:fieldname "CDClock"} CDClock__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3424
}

function {:inline true} {:fieldmap "Mem_T.CancelIrql__IRP"} {:fieldname "CancelIrql"} CancelIrql__IRP(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Cd1400__CYY_DEVICE_EXTENSION"} {:fieldname "Cd1400"} Cd1400__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.Cd1400__CYY_DISPATCH"} {:fieldname "Cd1400"} Cd1400__CYY_DISPATCH(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CdChannel__CYY_DEVICE_EXTENSION"} {:fieldname "CdChannel"} CdChannel__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T.CharsCopied__SERIAL_UPDATE_CHAR"} {:fieldname "CharsCopied"} CharsCopied__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CharsInInterruptBuffer__CYY_DEVICE_EXTENSION"} {:fieldname "CharsInInterruptBuffer"} CharsInInterruptBuffer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.CmdFailureLog__CYY_DEVICE_EXTENSION"} {:fieldname "CmdFailureLog"} CmdFailureLog__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3452
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommErrorDpc"} CommErrorDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 836
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommWaitDpc"} CommWaitDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 876
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteImmediateDpc"} CompleteImmediateDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 916
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteReadDpc"} CompleteReadDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 676
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteWriteDpc"} CompleteWriteDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 636
}

function {:inline true} {:fieldmap "Mem_T.Completed__SERIAL_UPDATE_CHAR"} {:fieldname "Completed"} Completed__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.ControlHandShake__SERIAL_HANDFLOW"} {:fieldname "ControlHandShake"} ControlHandShake__SERIAL_HANDFLOW(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ControlLock__CYY_DEVICE_EXTENSION"} {:fieldname "ControlLock"} ControlLock__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 628
}

function {:inline true} {:fieldmap "Mem_T.CountOfTryingToLowerRTS__CYY_DEVICE_EXTENSION"} {:fieldname "CountOfTryingToLowerRTS"} CountOfTryingToLowerRTS__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.CountOnLastRead__CYY_DEVICE_EXTENSION"} {:fieldname "CountOnLastRead"} CountOnLastRead__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.Count__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "Count"} Count__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Count__IO_RESOURCE_LIST"} {:fieldname "Count"} Count__IO_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Counter__SERIAL_XOFF_COUNTER"} {:fieldname "Counter"} Counter__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Create_unnamed_tag_8"} {:fieldname "Create"} Create_unnamed_tag_8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CreatedSerialCommEntry__CYY_DEVICE_EXTENSION"} {:fieldname "CreatedSerialCommEntry"} CreatedSerialCommEntry__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 624
}

function {:inline true} {:fieldmap "Mem_T.CreatedSymbolicLink__CYY_DEVICE_EXTENSION"} {:fieldname "CreatedSymbolicLink"} CreatedSymbolicLink__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 620
}

function {:inline true} {:fieldmap "Mem_T.CurrentBaud__CYY_DEVICE_EXTENSION"} {:fieldname "CurrentBaud"} CurrentBaud__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.CurrentByteOffset__FILE_POSITION_INFORMATION"} {:fieldname "CurrentByteOffset"} CurrentByteOffset__FILE_POSITION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CurrentCharSlot__CYY_DEVICE_EXTENSION"} {:fieldname "CurrentCharSlot"} CurrentCharSlot__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 348
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentImmediateIrp"} CurrentImmediateIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentMaskIrp"} CurrentMaskIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 308
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentPurgeIrp"} CurrentPurgeIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentReadIrp"} CurrentReadIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.CurrentRxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentRxQueue"} CurrentRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_7"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_7(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CurrentTxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentTxQueue"} CurrentTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWaitIrp"} CurrentWaitIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWriteIrp"} CurrentWriteIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentXoffIrp"} CurrentXoffIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.CutOverAmount__CYY_DEVICE_EXTENSION"} {:fieldname "CutOverAmount"} CutOverAmount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "CyyStartEvent"} CyyStartEvent__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2448
}

function {:inline true} {:fieldmap "Mem_T.DTRset__CYY_DEVICE_EXTENSION"} {:fieldname "DTRset"} DTRset__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3440
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataLength__KEY_VALUE_FULL_INFORMATION"} {:fieldname "DataLength"} DataLength__KEY_VALUE_FULL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Data__CYY_IOCTL_SYNC"} {:fieldname "Data"} Data__CYY_IOCTL_SYNC(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DebugLevel"} DebugLevel__CYY_REGISTRY_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DefaultData__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultData"} DefaultData__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DefaultLength__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultLength"} DefaultLength__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DefaultType__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultType"} DefaultType__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DeletePending__FILE_STANDARD_INFORMATION"} {:fieldname "DeletePending"} DeletePending__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Descriptors__IO_RESOURCE_LIST"} {:fieldname "Descriptors"} Descriptors__IO_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceClassSymbolicName"} DeviceClassSymbolicName__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2292
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceIsOpened__CYY_DEVICE_EXTENSION"} {:fieldname "DeviceIsOpened"} DeviceIsOpened__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 540
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceName"} DeviceName__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__CYY_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__IO_STACK_LOCATION"} {:fieldname "DeviceObject"} DeviceObject__IO_STACK_LOCATION(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__POWER_COMPLETION_CONTEXT"} {:fieldname "DeviceObject"} DeviceObject__POWER_COMPLETION_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DevicePNPAccept"} DevicePNPAccept__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2308
}

function {:inline true} {:fieldmap "Mem_T.DeviceStateMap__CYY_DEVICE_EXTENSION"} {:fieldname "DeviceStateMap"} DeviceStateMap__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2636
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__CYY_DEVICE_EXTENSION"} {:fieldname "DeviceState"} DeviceState__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2572
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__CYY_DEVICE_EXTENSION"} {:fieldname "DeviceWake"} DeviceWake__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3084
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Directory__FILE_STANDARD_INFORMATION"} {:fieldname "Directory"} Directory__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DosName"} DosName__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.DpcCount__CYY_DEVICE_EXTENSION"} {:fieldname "DpcCount"} DpcCount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3292
}

function {:inline true} {:fieldmap "Mem_T.Dpc__KTIMER"} {:fieldname "Dpc"} Dpc__KTIMER(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DriverExtension__DRIVER_OBJECT"} {:fieldname "DriverExtension"} DriverExtension__DRIVER_OBJECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__CYY_DEVICE_EXTENSION"} {:fieldname "DriverObject"} DriverObject__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2164
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__DEVICE_OBJECT"} {:fieldname "DriverObject"} DriverObject__DEVICE_OBJECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DriverUnload__DRIVER_OBJECT"} {:fieldname "DriverUnload"} DriverUnload__DRIVER_OBJECT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.EndOfFile__FILE_STANDARD_INFORMATION"} {:fieldname "EndOfFile"} EndOfFile__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.EntryContext__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "EntryContext"} EntryContext__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.EofChar__SERIAL_CHARS"} {:fieldname "EofChar"} EofChar__SERIAL_CHARS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ErrorChar__SERIAL_CHARS"} {:fieldname "ErrorChar"} ErrorChar__SERIAL_CHARS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ErrorWord__CYY_DEVICE_EXTENSION"} {:fieldname "ErrorWord"} ErrorWord__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.EscapeChar__CYY_DEVICE_EXTENSION"} {:fieldname "EscapeChar"} EscapeChar__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 608
}

function {:inline true} {:fieldmap "Mem_T.EventChar__SERIAL_CHARS"} {:fieldname "EventChar"} EventChar__SERIAL_CHARS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ExecuteWmiMethod__WMILIB_CONTEXT"} {:fieldname "ExecuteWmiMethod"} ExecuteWmiMethod__WMILIB_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Extension__CYY_IOCTL_BAUD"} {:fieldname "Extension"} Extension__CYY_IOCTL_BAUD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__CYY_IOCTL_SYNC"} {:fieldname "Extension"} Extension__CYY_IOCTL_SYNC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_RESIZE_PARAMS"} {:fieldname "Extension"} Extension__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_UPDATE_CHAR"} {:fieldname "Extension"} Extension__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extensions__CYY_DISPATCH"} {:fieldname "Extensions"} Extensions__CYY_DISPATCH(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.FileInformationClass_unnamed_tag_13"} {:fieldname "FileInformationClass"} FileInformationClass_unnamed_tag_13(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FilterResourceRequirements_unnamed_tag_8"} {:fieldname "FilterResourceRequirements"} FilterResourceRequirements_unnamed_tag_8(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirstReadableChar__CYY_DEVICE_EXTENSION"} {:fieldname "FirstReadableChar"} FirstReadableChar__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 356
}

function {:inline true} {:fieldmap "Mem_T.FlagsLock__CYY_DEVICE_EXTENSION"} {:fieldname "FlagsLock"} FlagsLock__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 632
}

function {:inline true} {:fieldmap "Mem_T.Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "Flags"} Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Flags"} Flags__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2440
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Flags"} Flags__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FlowReplace__SERIAL_HANDFLOW"} {:fieldname "FlowReplace"} FlowReplace__SERIAL_HANDFLOW(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GlobalsSpinLock__CYY_GLOBALS"} {:fieldname "GlobalsSpinLock"} GlobalsSpinLock__CYY_GLOBALS(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.GuidCount__WMILIB_CONTEXT"} {:fieldname "GuidCount"} GuidCount__WMILIB_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.GuidList__WMILIB_CONTEXT"} {:fieldname "GuidList"} GuidList__WMILIB_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HandFlow__CYY_DEVICE_EXTENSION"} {:fieldname "HandFlow"} HandFlow__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 492
}

function {:inline true} {:fieldmap "Mem_T._SERIAL_HANDFLOW"} {:fieldname "HandFlow"} HandFlow__SERIAL_BASIC_SETTINGS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.High1Time__KSYSTEM_TIME"} {:fieldname "High1Time"} High1Time__KSYSTEM_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.High2Time__KSYSTEM_TIME"} {:fieldname "High2Time"} High2Time__KSYSTEM_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HistoryMask__CYY_DEVICE_EXTENSION"} {:fieldname "HistoryMask"} HistoryMask__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ImmediateTotalTimer"} ImmediateTotalTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1676
}

function {:inline true} {:fieldmap "Mem_T.InSize__SERIAL_QUEUE_SIZE"} {:fieldname "InSize"} InSize__SERIAL_QUEUE_SIZE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_20"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "InterfaceType"} InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CONFIG_DATA"} {:fieldname "InterfaceType"} InterfaceType__CONFIG_DATA(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CYY_DEVICE_EXTENSION"} {:fieldname "InterfaceType"} InterfaceType__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 592
}

function {:inline true} {:fieldmap "Mem_T.InterruptMode__CONFIG_DATA"} {:fieldname "InterruptMode"} InterruptMode__CONFIG_DATA(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.InterruptReadBuffer__CYY_DEVICE_EXTENSION"} {:fieldname "InterruptReadBuffer"} InterruptReadBuffer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.InterruptShareable__CYY_DEVICE_EXTENSION"} {:fieldname "InterruptShareable"} InterruptShareable__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 616
}

function {:inline true} {:fieldmap "Mem_T.InterruptType__SERIAL_WMI_HW_DATA"} {:fieldname "InterruptType"} InterruptType__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.P_KINTERRUPT"} {:fieldname "Interrupt"} Interrupt__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.Interrupt_unnamed_tag_41"} {:fieldname "Interrupt"} Interrupt_unnamed_tag_41(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IntervalReadTimeoutDpc"} IntervalReadTimeoutDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 756
}

function {:inline true} {:fieldmap "Mem_T.IntervalTimeToUse__CYY_DEVICE_EXTENSION"} {:fieldname "IntervalTimeToUse"} IntervalTimeToUse__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.IntervalTime__CYY_DEVICE_EXTENSION"} {:fieldname "IntervalTime"} IntervalTime__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoResourceRequirementList_unnamed_tag_29"} {:fieldname "IoResourceRequirementList"} IoResourceRequirementList_unnamed_tag_29(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._IO_STATUS_BLOCK"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IrpMaskLocation__CYY_DEVICE_EXTENSION"} {:fieldname "IrpMaskLocation"} IrpMaskLocation__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T.IrqAffinityMask__SERIAL_WMI_HW_DATA"} {:fieldname "IrqAffinityMask"} IrqAffinityMask__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.IrqLevel__SERIAL_WMI_HW_DATA"} {:fieldname "IrqLevel"} IrqLevel__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IrqNumber__SERIAL_WMI_HW_DATA"} {:fieldname "IrqNumber"} IrqNumber__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IrqVector__SERIAL_WMI_HW_DATA"} {:fieldname "IrqVector"} IrqVector__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irql__CYY_DEVICE_EXTENSION"} {:fieldname "Irql"} Irql__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.IsBusy__SERIAL_WMI_COMM_DATA"} {:fieldname "IsBusy"} IsBusy__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.IsPci__CYY_DEVICE_EXTENSION"} {:fieldname "IsPci"} IsPci__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3456
}

function {:inline true} {:fieldmap "Mem_T.IsPci__CYY_DISPATCH"} {:fieldname "IsPci"} IsPci__CYY_DISPATCH(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IsrUnlockPagesDpc"} IsrUnlockPagesDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1156
}

function {:inline true} {:fieldmap "Mem_T.IsrWaitMask__CYY_DEVICE_EXTENSION"} {:fieldname "IsrWaitMask"} IsrWaitMask__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.LastCharSlot__CYY_DEVICE_EXTENSION"} {:fieldname "LastCharSlot"} LastCharSlot__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_16"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_42"} {:fieldname "Length"} Length_unnamed_tag_42(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Level_unnamed_tag_43"} {:fieldname "Level"} Level_unnamed_tag_43(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry_unnamed_tag_7(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.List__CM_RESOURCE_LIST"} {:fieldname "List"} List__CM_RESOURCE_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.List__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "List"} List__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "LongIntervalAmount"} LongIntervalAmount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.LowPart__KSYSTEM_TIME"} {:fieldname "LowPart"} LowPart__KSYSTEM_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__CYY_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2156
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "LowerRTSTimer"} LowerRTSTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1996
}

function {:inline true} {:fieldmap "Mem_T.MSVR_DTR__CYY_DEVICE_EXTENSION"} {:fieldname "MSVR_DTR"} MSVR_DTR__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3432
}

function {:inline true} {:fieldmap "Mem_T.MSVR_RTS__CYY_DEVICE_EXTENSION"} {:fieldname "MSVR_RTS"} MSVR_RTS__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3428
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "MaskQueue"} MaskQueue__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 284
}

function {:inline true} {:fieldmap "Mem_T.MaxBaud__SERIAL_COMMPROP"} {:fieldname "MaxBaud"} MaxBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MaxRxQueue__SERIAL_COMMPROP"} {:fieldname "MaxRxQueue"} MaxRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.MaxTxQueue__SERIAL_COMMPROP"} {:fieldname "MaxTxQueue"} MaxTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.MaximumBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumBaudRate"} MaximumBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.MaximumInputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumInputBufferSize"} MaximumInputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__UNICODE_STRING"} {:fieldname "MaximumLength"} MaximumLength__UNICODE_STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumOutputBufferSize"} MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_41"} {:fieldname "Memory"} Memory_unnamed_tag_41(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_53"} {:fieldname "Memory"} Memory_unnamed_tag_53(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Name__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Name"} Name__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NewBufferSize__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBufferSize"} NewBufferSize__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.NewBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBuffer"} NewBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "NtNameForPort"} NtNameForPort__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.NumberMoved__SERIAL_RESIZE_PARAMS"} {:fieldname "NumberMoved"} NumberMoved__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.NumberNeededForRead__CYY_DEVICE_EXTENSION"} {:fieldname "NumberNeededForRead"} NumberNeededForRead__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.NumberOfLinks__FILE_STANDARD_INFORMATION"} {:fieldname "NumberOfLinks"} NumberOfLinks__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.NumberOfStrings__IO_ERROR_LOG_PACKET"} {:fieldname "NumberOfStrings"} NumberOfStrings__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "ObjectDirectory"} ObjectDirectory__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.OldBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "OldBuffer"} OldBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "OpenCount"} OpenCount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2444
}

function {:inline true} {:fieldmap "Mem_T.Options_unnamed_tag_9"} {:fieldname "Options"} Options_unnamed_tag_9(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalBoardMemory__CYY_DEVICE_EXTENSION"} {:fieldname "OriginalBoardMemory"} OriginalBoardMemory__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.OriginalCd1400__CYY_DEVICE_EXTENSION"} {:fieldname "OriginalCd1400"} OriginalCd1400__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 240
}

function {:inline true} {:fieldmap "Mem_T.OriginalIrql__CONFIG_DATA"} {:fieldname "OriginalIrql"} OriginalIrql__CONFIG_DATA(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.OriginalIrql__CYY_DEVICE_EXTENSION"} {:fieldname "OriginalIrql"} OriginalIrql__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 568
}

function {:inline true} {:fieldmap "Mem_T.OriginalRuntimeMemory__CYY_DEVICE_EXTENSION"} {:fieldname "OriginalRuntimeMemory"} OriginalRuntimeMemory__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.OriginalVector__CONFIG_DATA"} {:fieldname "OriginalVector"} OriginalVector__CONFIG_DATA(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.OriginalVector__CYY_DEVICE_EXTENSION"} {:fieldname "OriginalVector"} OriginalVector__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 564
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.OurIsrContext__CYY_DEVICE_EXTENSION"} {:fieldname "OurIsrContext"} OurIsrContext__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T.OurIsr__CYY_DEVICE_EXTENSION"} {:fieldname "OurIsr"} OurIsr__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_20"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_7"} {:fieldname "Overlay"} Overlay_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OwnsPowerPolicy__CYY_DEVICE_EXTENSION"} {:fieldname "OwnsPowerPolicy"} OwnsPowerPolicy__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3076
}

function {:inline true} {:fieldmap "Mem_T.PAGESER_Handle__CYY_GLOBALS"} {:fieldname "PAGESER_Handle"} PAGESER_Handle__CYY_GLOBALS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PNPState__CYY_DEVICE_EXTENSION"} {:fieldname "PNPState"} PNPState__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2436
}

function {:inline true} {:fieldmap "Mem_T.PacketLength__SERIAL_COMMPROP"} {:fieldname "PacketLength"} PacketLength__SERIAL_COMMPROP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PacketVersion__SERIAL_COMMPROP"} {:fieldname "PacketVersion"} PacketVersion__SERIAL_COMMPROP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParityCheckEnable__SERIAL_WMI_COMM_DATA"} {:fieldname "ParityCheckEnable"} ParityCheckEnable__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_LINE_CONTROL"} {:fieldname "Parity"} Parity__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_WMI_COMM_DATA"} {:fieldname "Parity"} Parity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PartialDescriptors__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialDescriptors"} PartialDescriptors__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialResourceList"} PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PciSlot__CYY_DEVICE_EXTENSION"} {:fieldname "PciSlot"} PciSlot__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3460
}

function {:inline true} {:fieldmap "Mem_T.Pdo__CYY_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3088
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingDpcEvent"} PendingDpcEvent__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3296
}

function {:inline true} {:fieldmap "Mem_T.PendingIRPCnt__CYY_DEVICE_EXTENSION"} {:fieldname "PendingIRPCnt"} PendingIRPCnt__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2304
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingIRPEvent"} PendingIRPEvent__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2312
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PendingWakeIrp__CYY_DEVICE_EXTENSION"} {:fieldname "PendingWakeIrp"} PendingWakeIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3096
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "PerhapsLowerRTSDpc"} PerhapsLowerRTSDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1116
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PermitShareDefault"} PermitShareDefault__CYY_REGISTRY_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.PermitSystemWideShare__CYY_REGISTRY_DATA"} {:fieldname "PermitSystemWideShare"} PermitSystemWideShare__CYY_REGISTRY_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PhysicalBoardMemory__CONFIG_DATA"} {:fieldname "PhysicalBoardMemory"} PhysicalBoardMemory__CONFIG_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.PhysicalRuntime__CONFIG_DATA"} {:fieldname "PhysicalRuntime"} PhysicalRuntime__CONFIG_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PortIndex"} PortIndex__CONFIG_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.PortIndex__CYY_DEVICE_EXTENSION"} {:fieldname "PortIndex"} PortIndex__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PowerD0Event"} PowerD0Event__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2664
}

function {:inline true} {:fieldmap "Mem_T.PowerState__CYY_DEVICE_EXTENSION"} {:fieldname "PowerState"} PowerState__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2160
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.ProvCapabilities__SERIAL_COMMPROP"} {:fieldname "ProvCapabilities"} ProvCapabilities__SERIAL_COMMPROP(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ProvSubType__SERIAL_COMMPROP"} {:fieldname "ProvSubType"} ProvSubType__SERIAL_COMMPROP(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PurgeQueue"} PurgeQueue__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 292
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryFile_unnamed_tag_8"} {:fieldname "QueryFile"} QueryFile_unnamed_tag_8(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "QueryWmiDataBlock"} QueryWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiRegInfo__WMILIB_CONTEXT"} {:fieldname "QueryWmiRegInfo"} QueryWmiRegInfo__WMILIB_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.RTSset__CYY_DEVICE_EXTENSION"} {:fieldname "RTSset"} RTSset__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3436
}

function {:inline true} {:fieldmap "Mem_T.RXHolding__CYY_DEVICE_EXTENSION"} {:fieldname "RXHolding"} RXHolding__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T.ReadBufferBase__CYY_DEVICE_EXTENSION"} {:fieldname "ReadBufferBase"} ReadBufferBase__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.ReadIntervalTimeout__SERIAL_TIMEOUTS"} {:fieldname "ReadIntervalTimeout"} ReadIntervalTimeout__SERIAL_TIMEOUTS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ReadQueue"} ReadQueue__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 268
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestIntervalTimer"} ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1356
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestTotalTimer"} ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1196
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutConstant"} ReadTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutMultiplier"} ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Read_unnamed_tag_8"} {:fieldname "Read"} Read_unnamed_tag_8(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.RegistryPath__CYY_GLOBALS"} {:fieldname "RegistryPath"} RegistryPath__CYY_GLOBALS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Reopen__CYY_DEVICE_STATE"} {:fieldname "Reopen"} Reopen__CYY_DEVICE_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.RuntimeAddressSpace__CONFIG_DATA"} {:fieldname "RuntimeAddressSpace"} RuntimeAddressSpace__CONFIG_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.RuntimeAddressSpace__CYY_DEVICE_EXTENSION"} {:fieldname "RuntimeAddressSpace"} RuntimeAddressSpace__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 580
}

function {:inline true} {:fieldmap "Mem_T.RuntimeLength__CONFIG_DATA"} {:fieldname "RuntimeLength"} RuntimeLength__CONFIG_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RuntimeLength__CYY_DEVICE_EXTENSION"} {:fieldname "RuntimeLength"} RuntimeLength__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.Runtime__CYY_DEVICE_EXTENSION"} {:fieldname "Runtime"} Runtime__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "RxFIFODefault"} RxFIFODefault__CYY_REGISTRY_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "RxFIFO"} RxFIFO__CONFIG_DATA(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.RxFifoTrigger__CYY_DEVICE_EXTENSION"} {:fieldname "RxFifoTrigger"} RxFifoTrigger__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 612
}

function {:inline true} {:fieldmap "Mem_T.RxFifo__SERIAL_BASIC_SETTINGS"} {:fieldname "RxFifo"} RxFifo__SERIAL_BASIC_SETTINGS(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SIrp__POWER_COMPLETION_CONTEXT"} {:fieldname "SIrp"} SIrp__POWER_COMPLETION_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.SendWaitWake__CYY_DEVICE_EXTENSION"} {:fieldname "SendWaitWake"} SendWaitWake__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3092
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SerialCount"} SerialCount__CONFIGURATION_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.ServiceMask__SERIAL_COMMPROP"} {:fieldname "ServiceMask"} ServiceMask__SERIAL_COMMPROP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SetFile_unnamed_tag_8"} {:fieldname "SetFile"} SetFile_unnamed_tag_8(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "SetWmiDataBlock"} SetWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataItem__WMILIB_CONTEXT"} {:fieldname "SetWmiDataItem"} SetWmiDataItem__WMILIB_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SettableBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableBaudRate"} SettableBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.SettableBaud__SERIAL_COMMPROP"} {:fieldname "SettableBaud"} SettableBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SettableDataBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableDataBits"} SettableDataBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.SettableData__SERIAL_COMMPROP"} {:fieldname "SettableData"} SettableData__SERIAL_COMMPROP(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SettableFlowControl__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableFlowControl"} SettableFlowControl__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.SettableParams__SERIAL_COMMPROP"} {:fieldname "SettableParams"} SettableParams__SERIAL_COMMPROP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SettableParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParityCheck"} SettableParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.SettableParity__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParity"} SettableParity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.SettableStopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableStopBits"} SettableStopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.SettableStopParity__SERIAL_COMMPROP"} {:fieldname "SettableStopParity"} SettableStopParity__SERIAL_COMMPROP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ShareDisposition__IO_RESOURCE_DESCRIPTOR"} {:fieldname "ShareDisposition"} ShareDisposition__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "ShortIntervalAmount"} ShortIntervalAmount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "ShouldBreakOnEntry"} ShouldBreakOnEntry__CYY_REGISTRY_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SkipNaming"} SkipNaming__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3420
}

function {:inline true} {:fieldmap "Mem_T.SpecialChars__CYY_DEVICE_EXTENSION"} {:fieldname "SpecialChars"} SpecialChars__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 468
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "StalledIrpQueue"} StalledIrpQueue__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2788
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "StartTimerLowerRTSDpc"} StartTimerLowerRTSDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1076
}

function {:inline true} {:fieldmap "Mem_T.Start_unnamed_tag_42"} {:fieldname "Start"} Start_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_37"} {:fieldname "State"} State_unnamed_tag_37(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_LINE_CONTROL"} {:fieldname "StopBits"} StopBits__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "StopBits"} StopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.StringOffset__IO_ERROR_LOG_PACKET"} {:fieldname "StringOffset"} StringOffset__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Support16BitMode__SERIAL_WMI_COMM_DATA"} {:fieldname "Support16BitMode"} Support16BitMode__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.SupportDTRDSR__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportDTRDSR"} SupportDTRDSR__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportIntervalTimeouts"} SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.SupportParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportParityCheck"} SupportParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SupportRTSCTS__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportRTSCTS"} SupportRTSCTS__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.SupportXonXoff__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportXonXoff"} SupportXonXoff__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.SupportedBauds__CYY_DEVICE_EXTENSION"} {:fieldname "SupportedBauds"} SupportedBauds__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "SymbolicLinkName"} SymbolicLinkName__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_3"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__CYY_DEVICE_EXTENSION"} {:fieldname "SystemWake"} SystemWake__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3080
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.TXHolding__CYY_DEVICE_EXTENSION"} {:fieldname "TXHolding"} TXHolding__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Timeout__SERIAL_XOFF_COUNTER"} {:fieldname "Timeout"} Timeout__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Timeouts__CYY_DEVICE_EXTENSION"} {:fieldname "Timeouts"} Timeouts__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 448
}

function {:inline true} {:fieldmap "Mem_T.TotalCharsQueued__CYY_DEVICE_EXTENSION"} {:fieldname "TotalCharsQueued"} TotalCharsQueued__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalImmediateTimeoutDpc"} TotalImmediateTimeoutDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 956
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalReadTimeoutDpc"} TotalReadTimeoutDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 716
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalWriteTimeoutDpc"} TotalWriteTimeoutDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 796
}

function {:inline true} {:fieldmap "Mem_T.TrIrql__CONFIG_DATA"} {:fieldname "TrIrql"} TrIrql__CONFIG_DATA(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.TrVector__CONFIG_DATA"} {:fieldname "TrVector"} TrVector__CONFIG_DATA(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TranslatedBoardMemory__CONFIG_DATA"} {:fieldname "TranslatedBoardMemory"} TranslatedBoardMemory__CONFIG_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.TranslatedRuntime__CONFIG_DATA"} {:fieldname "TranslatedRuntime"} TranslatedRuntime__CONFIG_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "TxFIFODefault"} TxFIFODefault__CYY_REGISTRY_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "TxFIFO"} TxFIFO__CONFIG_DATA(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.TxFifoAmount__CYY_DEVICE_EXTENSION"} {:fieldname "TxFifoAmount"} TxFifoAmount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.TxFifo__SERIAL_BASIC_SETTINGS"} {:fieldname "TxFifo"} TxFifo__SERIAL_BASIC_SETTINGS(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Type3InputBuffer_unnamed_tag_20"} {:fieldname "Type3InputBuffer"} Type3InputBuffer_unnamed_tag_20(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Type__IO_RESOURCE_DESCRIPTOR"} {:fieldname "Type"} Type__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_26"} {:fieldname "Type"} Type_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_37"} {:fieldname "Type"} Type_unnamed_tag_37(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ValidDataMask__CYY_DEVICE_EXTENSION"} {:fieldname "ValidDataMask"} ValidDataMask__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 604
}

function {:inline true} {:fieldmap "Mem_T.Vector__CYY_DEVICE_EXTENSION"} {:fieldname "Vector"} Vector__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 556
}

function {:inline true} {:fieldmap "Mem_T.Vector_unnamed_tag_43"} {:fieldname "Vector"} Vector_unnamed_tag_43(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.WmiCommData__CYY_DEVICE_EXTENSION"} {:fieldname "WmiCommData"} WmiCommData__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3144
}

function {:inline true} {:fieldmap "Mem_T.WmiFunctionControl__WMILIB_CONTEXT"} {:fieldname "WmiFunctionControl"} WmiFunctionControl__WMILIB_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.WmiHwData__CYY_DEVICE_EXTENSION"} {:fieldname "WmiHwData"} WmiHwData__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3244
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "WmiIdentifier"} WmiIdentifier__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3132
}

function {:inline true} {:fieldmap "Mem_T.WmiLibInfo__CYY_DEVICE_EXTENSION"} {:fieldname "WmiLibInfo"} WmiLibInfo__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3100
}

function {:inline true} {:fieldmap "Mem_T.WordLength__SERIAL_LINE_CONTROL"} {:fieldname "WordLength"} WordLength__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "WriteQueue"} WriteQueue__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 276
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "WriteRequestTotalTimer"} WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1516
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutConstant"} WriteTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutMultiplier"} WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Write_unnamed_tag_8"} {:fieldname "Write"} Write_unnamed_tag_8(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.XoffChar__SERIAL_CHARS"} {:fieldname "XoffChar"} XoffChar__SERIAL_CHARS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.XoffCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffCharacter"} XoffCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountCompleteDpc"} XoffCountCompleteDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1036
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountTimeoutDpc"} XoffCountTimeoutDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 996
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "XoffCountTimer"} XoffCountTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1836
}

function {:inline true} {:fieldmap "Mem_T.XoffLimit__SERIAL_HANDFLOW"} {:fieldname "XoffLimit"} XoffLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.XoffXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffXmitThreshold"} XoffXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.XonChar__SERIAL_CHARS"} {:fieldname "XonChar"} XonChar__SERIAL_CHARS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.XonCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XonCharacter"} XonCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.XonLimit__SERIAL_HANDFLOW"} {:fieldname "XonLimit"} XonLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.XonXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XonXmitThreshold"} XonXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.cor1__CYY_DEVICE_EXTENSION"} {:fieldname "cor1"} cor1__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.u__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.u__IO_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

const {:string ""} unique strConst__li2bpl0: int;

const {:string " The default interrupt read buffer size is: %d\n------  The XoffLimit is                         : %d\n------  The XonLimit is                          : %d\n------  The pt 8 size is                         : %d\n"} unique strConst__li2bpl48: int;

const {:string "%s%u"} unique strConst__li2bpl185: int;

const {:string "%x irp was already marked as cancelled\n"} unique strConst__li2bpl221: int;

const {:string "%x is a SETMASK irp\n"} unique strConst__li2bpl216: int;

const {:string "%x was the first irp processed by this\n------- invocation of startmask\n"} unique strConst__li2bpl217: int;

const {:string "%x will become the current wait irp\n"} unique strConst__li2bpl220: int;

const {:string "------- BusRelations Query\n"} unique strConst__li2bpl167: int;

const {:string "------- EjectionRelations Query\n"} unique strConst__li2bpl168: int;

const {:string "------- PowerRelations Query\n"} unique strConst__li2bpl169: int;

const {:string "------- RemovalRelations Query\n"} unique strConst__li2bpl170: int;

const {:string "------- Sharing interrupt for device %x\n"} unique strConst__li2bpl181: int;

const {:string "------- TargetDeviceRelation Query\n"} unique strConst__li2bpl171: int;

const {:string "------- Unknown Query\n"} unique strConst__li2bpl166: int;

const {:string "------- We should not have Port resource\n"} unique strConst__li2bpl162: int;

const {:string "<CyyCommError\n"} unique strConst__li2bpl59: int;

const {:string "<CyyCompleteRead(%X)\n"} unique strConst__li2bpl232: int;

const {:string "<CyyCompleteWait\n"} unique strConst__li2bpl211: int;

const {:string "<CyyCompleteWrite\n"} unique strConst__li2bpl194: int;

const {:string "<CyyCompleteXoff\n"} unique strConst__li2bpl200: int;

const {:string "<CyyDisableInterfaces\n"} unique strConst__li2bpl64: int;

const {:string "<CyyFlush (1) %X\n"} unique strConst__li2bpl225: int;

const {:string "<CyyFlush (2) %X\n"} unique strConst__li2bpl226: int;

const {:string "<CyyFlush (3) %X\n"} unique strConst__li2bpl224: int;

const {:string "<CyyGetNextWrite\n"} unique strConst__li2bpl197: int;

const {:string "<CyyGetRegistryKeyValue %X\n"} unique strConst__li2bpl5: int;

const {:string "<CyyInitMultiPort (1) %X\n"} unique strConst__li2bpl33: int;

const {:string "<CyyInitMultiPort (3) %X\n"} unique strConst__li2bpl34: int;

const {:string "<CyyKillPendingIrps\n"} unique strConst__li2bpl51: int;

const {:string "<CyyRead (1) %X\n"} unique strConst__li2bpl234: int;

const {:string "<CyyRead (2) %X\n"} unique strConst__li2bpl235: int;

const {:string "<CyyRead (3) %X\n"} unique strConst__li2bpl236: int;

const {:string "<CyyRead (4) %X\n"} unique strConst__li2bpl237: int;

const {:string "<CyyReadTimeout\n"} unique strConst__li2bpl230: int;

const {:string "<CyyReleaseResources\n"} unique strConst__li2bpl55: int;

const {:string "<CyyRemoveDevObj %X\n"} unique strConst__li2bpl50: int;

const {:string "<CyyStartImmediate\n"} unique strConst__li2bpl2: int;

const {:string "<CyyStartRead %X\n"} unique strConst__li2bpl228: int;

const {:string "<CyyStartWrite %X\n"} unique strConst__li2bpl207: int;

const {:string "<CyyTimeoutXoff\n"} unique strConst__li2bpl192: int;

const {:string "<CyyUnstallIrps\n"} unique strConst__li2bpl191: int;

const {:string "<CyyWrite (1) %X\n"} unique strConst__li2bpl202: int;

const {:string "<CyyWrite (2) %X\n"} unique strConst__li2bpl203: int;

const {:string "<CyyWrite (3) %X\n"} unique strConst__li2bpl204: int;

const {:string "<CyyWrite (4) %X\n"} unique strConst__li2bpl205: int;

const {:string "<CyyWriteTimeout\n"} unique strConst__li2bpl198: int;

const {:string ">CyyCommError(%X)\n"} unique strConst__li2bpl60: int;

const {:string ">CyyCompleteRead(%X)\n"} unique strConst__li2bpl233: int;

const {:string ">CyyCompleteWait(%X)\n"} unique strConst__li2bpl212: int;

const {:string ">CyyCompleteWrite(%X)\n"} unique strConst__li2bpl195: int;

const {:string ">CyyCompleteXoff(%X)\n"} unique strConst__li2bpl201: int;

const {:string ">CyyDisableInterfaces(%X, %s)\n"} unique strConst__li2bpl63: int;

const {:string ">CyyFindInitController(%X, %X)\n"} unique strConst__li2bpl43: int;

const {:string ">CyyFlush(%X, %X)\n"} unique strConst__li2bpl223: int;

const {:string ">CyyGetNextWrite(XXX)\n"} unique strConst__li2bpl196: int;

const {:string ">CyyGetRegistryKeyValue(XXX)\n"} unique strConst__li2bpl4: int;

const {:string ">CyyInitMultiPort(%X, %X, %X)\n"} unique strConst__li2bpl32: int;

const {:string ">CyyKillPendingIrps(%X)\n"} unique strConst__li2bpl52: int;

const {:string ">CyyRead(%X, %X)\n"} unique strConst__li2bpl238: int;

const {:string ">CyyReadTimeout(%X)\n"} unique strConst__li2bpl231: int;

const {:string ">CyyReleaseResources(%X)\n"} unique strConst__li2bpl53: int;

const {:string ">CyyRemoveDevObj(%X)\n"} unique strConst__li2bpl49: int;

const {:string ">CyyStartImmediate(%X)\n"} unique strConst__li2bpl1: int;

const {:string ">CyyStartRead(%X)\n"} unique strConst__li2bpl229: int;

const {:string ">CyyStartWrite(%X)\n"} unique strConst__li2bpl208: int;

const {:string ">CyyTimeoutXoff(%X)\n"} unique strConst__li2bpl193: int;

const {:string ">CyyUnstallIrps(%X)\n"} unique strConst__li2bpl189: int;

const {:string ">CyyWrite(%X, %X)\n"} unique strConst__li2bpl206: int;

const {:string ">CyyWriteTimeout(%X)\n"} unique strConst__li2bpl199: int;

const {:string "About to connect to interrupt for port %wZ\n------- address of extension is %x\n"} unique strConst__li2bpl144: int;

const {:string "Aha! It is a first multi\n"} unique strConst__li2bpl38: int;

const {:string "Aha! It is a multiport node\n"} unique strConst__li2bpl40: int;

const {:string "Already in requested power state\n"} unique strConst__li2bpl28: int;

const {:string "Attempting to init %wZ\n------- Runtime Memory is %x\n------- Board Memory is %x\n------- BusNumber is %d\n------- BusType is %d\n------- Runtime AddressSpace is %d\n------- Board AddressSpace is %d\n------- Interrupt Mode is %d\n"} unique strConst__li2bpl44: int;

const {:string "Board Memory address: %x\n"} unique strConst__li2bpl80: int;

const {:string "Bogus Runtime address %x\n"} unique strConst__li2bpl91: int;

const {:string "Bogus board address %x\n"} unique strConst__li2bpl90: int;

const {:string "Bogus vector %x\n"} unique strConst__li2bpl89: int;

const {:string "BreakOnEntry"} unique strConst__li2bpl6: int;

const {:string "Can't filter NULL resources!\n"} unique strConst__li2bpl163: int;

const {:string "Canceling wait for irp %x\n"} unique strConst__li2bpl213: int;

const {:string "Cleaning up failed start\n"} unique strConst__li2bpl138: int;

const {:string "Clearing DTR for Port%d Pci%d\n"} unique strConst__li2bpl188: int;

const {:string "Clearing RTS for Port%d Pci%d\n"} unique strConst__li2bpl187: int;

const {:string "Close open count bad for: 0x%x\n"} unique strConst__li2bpl67: int;

const {:string "Close prologue failed for: %x\n"} unique strConst__li2bpl66: int;

const {:string "Com Board AddressSpace: %x\n"} unique strConst__li2bpl84: int;

const {:string "Com InterfaceType: %x\n"} unique strConst__li2bpl86: int;

const {:string "Com InterruptMode: %x\n"} unique strConst__li2bpl85: int;

const {:string "Com OriginalIrql: %x\n"} unique strConst__li2bpl88: int;

const {:string "Com OriginalVector: %x\n"} unique strConst__li2bpl87: int;

const {:string "Com Port BusNumber: %x\n"} unique strConst__li2bpl82: int;

const {:string "Com Port Index: %x\n"} unique strConst__li2bpl81: int;

const {:string "Com Runtime AddressSpace: %x\n"} unique strConst__li2bpl83: int;

const {:string "Complete Irp: %X\n"} unique strConst__li2bpl3: int;

const {:string "Completing wait for irp %x\n"} unique strConst__li2bpl210: int;

const {:string "Configuration error for %wZ\n------- Same multiport - different Runtime addresses\n"} unique strConst__li2bpl41: int;

const {:string "Configuration error for %wZ\n------- Same multiport - different interrupts\n"} unique strConst__li2bpl39: int;

const {:string "Connected interrupt %08X\n"} unique strConst__li2bpl147: int;

const {:string "Could not map Board memory for device registers for %wZ\n"} unique strConst__li2bpl47: int;

const {:string "Could not map Runtime memory for device registers for %wZ\n"} unique strConst__li2bpl46: int;

const {:string "Couldn't allocate memory for DeviceName\n"} unique strConst__li2bpl119: int;

const {:string "Couldn't allocate memory for Dos name\n"} unique strConst__li2bpl104: int;

const {:string "Couldn't allocate memory for WMI name\n"} unique strConst__li2bpl106: int;

const {:string "Couldn't allocate memory for buffer\n"} unique strConst__li2bpl108: int;

const {:string "Couldn't allocate memory for device name\n"} unique strConst__li2bpl109: int;

const {:string "Couldn't allocate memory for symbolic link name\n"} unique strConst__li2bpl105: int;

const {:string "Couldn't allocate memory for the\n------  user configuration record\n"} unique strConst__li2bpl148: int;

const {:string "Couldn't connect to interrupt for %wZ\n"} unique strConst__li2bpl146: int;

const {:string "Couldn't create the device map entry\n------- for port %wZ\n"} unique strConst__li2bpl102: int;

const {:string "Couldn't create the symbolic link\nfor port %wZ\n"} unique strConst__li2bpl103: int;

const {:string "Couldn't delete value entry %wZ\n"} unique strConst__li2bpl126: int;

const {:string "Couldn't register class association for port %wZ\n"} unique strConst__li2bpl99: int;

const {:string "Couldn't set class association for port %wZ\n"} unique strConst__li2bpl100: int;

const {:string "Count: %x  Addr: 0x%x\n"} unique strConst__li2bpl68: int;

const {:string "Cyclom-Y\\Port"} unique strConst__li2bpl111: int;

const {:string "CyyAddDevice - error creating new devobj [%#08lx]\n"} unique strConst__li2bpl135: int;

const {:string "CyyAddDevice: Cannot allocate memory for NtName\n"} unique strConst__li2bpl117: int;

const {:string "CyyAddDevice: Create device failed - %x \n"} unique strConst__li2bpl120: int;

const {:string "CyyAddDevice: Enumeration request, returning NO_MORE_ENTRIES\n"} unique strConst__li2bpl136: int;

const {:string "CyyCreateDevObj Error, Cleaning up\n"} unique strConst__li2bpl118: int;

const {:string "CyyCreateDevObj: Bad HardwareID: %ws\n"} unique strConst__li2bpl122: int;

const {:string "CyyCreateDevObj: IoGetDeviceProperty BusNumber failed (%x)\n"} unique strConst__li2bpl123: int;

const {:string "CyyCreateDevObj: IoGetDeviceProperty HardwareID failed (%x)\n"} unique strConst__li2bpl112: int;

const {:string "CyyCreateDevObj: IoGetDeviceProperty LegacyBusType failed (%x)\n"} unique strConst__li2bpl121: int;

const {:string "CyyFinishStartDevice got NULL pDevExt\n"} unique strConst__li2bpl140: int;

const {:string "CyyGetRegistryKeyValue PortResources failed - %x\n"} unique strConst__li2bpl132: int;

const {:string "CyyGetRegistryKeyValue PortResourcesTr failed - %x\n"} unique strConst__li2bpl133: int;

const {:string "CyyPort"} unique strConst__li2bpl115: int;

const {:string "CyyRelinquishPowerPolicy"} unique strConst__li2bpl149: int;

const {:string "CyySkipExternalNaming"} unique strConst__li2bpl93: int;

const {:string "DPC's drained: %x\n"} unique strConst__li2bpl70: int;

const {:string "DebugLevel"} unique strConst__li2bpl7: int;

const {:string "Deleting Link %wZ\n"} unique strConst__li2bpl125: int;

const {:string "DevicePowerState\n"} unique strConst__li2bpl27: int;

const {:string "Dispatch entry for: %x\n"} unique strConst__li2bpl11: int;

const {:string "DosDevices"} unique strConst__li2bpl97: int;

const {:string "DosName is %wZ\n"} unique strConst__li2bpl98: int;

const {:string "Draining DPC's: %x\n"} unique strConst__li2bpl71: int;

const {:string "Enter CyyAddDevice with PPdo 0x%x\n"} unique strConst__li2bpl134: int;

const {:string "Enter CyyCreateDevObj\n"} unique strConst__li2bpl110: int;

const {:string "Error in config record for %wZ\n------  Runtime memory wraps around CD1400 registers\n"} unique strConst__li2bpl37: int;

const {:string "Error in config record for %wZ\n------  Runtime memory wraps around physical memory\n"} unique strConst__li2bpl35: int;

const {:string "Error in config record for %wZ\n------  board memory wraps around physical memory\n"} unique strConst__li2bpl36: int;

const {:string "External Naming Failed - Status %x\n"} unique strConst__li2bpl143: int;

const {:string "FALSE"} unique strConst__li2bpl61: int;

const {:string "Getting PortName/Identifier failed - %x\n"} unique strConst__li2bpl107: int;

const {:string "Going to power state D0\n"} unique strConst__li2bpl30: int;

const {:string "Going to power state D3\n"} unique strConst__li2bpl29: int;

const {:string "Got IRP_MN_CANCEL_REMOVE_DEVICE Irp "} unique strConst__li2bpl150: int;

const {:string "Got IRP_MN_CANCEL_STOP_DEVICE Irp "} unique strConst__li2bpl151: int;

const {:string "Got IRP_MN_EJECT Irp\n"} unique strConst__li2bpl157: int;

const {:string "Got IRP_MN_FILTER_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl178: int;

const {:string "Got IRP_MN_POWER_SEQUENCE Irp\n"} unique strConst__li2bpl22: int;

const {:string "Got IRP_MN_QUERY_DEVICE_CAPABILITIES IRP\n"} unique strConst__li2bpl164: int;

const {:string "Got IRP_MN_QUERY_DEVICE_RELATIONS Irp\n"} unique strConst__li2bpl152: int;

const {:string "Got IRP_MN_QUERY_ID Irp\n"} unique strConst__li2bpl184: int;

const {:string "Got IRP_MN_QUERY_INTERFACE Irp\n"} unique strConst__li2bpl153: int;

const {:string "Got IRP_MN_QUERY_POWER Irp\n"} unique strConst__li2bpl24: int;

const {:string "Got IRP_MN_QUERY_REMOVE_DEVICE Irp "} unique strConst__li2bpl175: int;

const {:string "Got IRP_MN_QUERY_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl154: int;

const {:string "Got IRP_MN_QUERY_STOP_DEVICE Irp "} unique strConst__li2bpl172: int;

const {:string "Got IRP_MN_READ_CONFIG Irp\n"} unique strConst__li2bpl155: int;

const {:string "Got IRP_MN_REMOVE_DEVICE Irp "} unique strConst__li2bpl174: int;

const {:string "Got IRP_MN_SET_LOCK Irp\n"} unique strConst__li2bpl158: int;

const {:string "Got IRP_MN_SET_POWER Irp\n"} unique strConst__li2bpl23: int;

const {:string "Got IRP_MN_START_DEVICE Irp\n"} unique strConst__li2bpl176: int;

const {:string "Got IRP_MN_STOP_DEVICE Irp "} unique strConst__li2bpl173: int;

const {:string "Got IRP_MN_SURPRISE_REMOVAL Irp "} unique strConst__li2bpl159: int;

const {:string "Got IRP_MN_WAIT_WAKE Irp\n"} unique strConst__li2bpl21: int;

const {:string "Got IRP_MN_WRITE_CONFIG Irp\n"} unique strConst__li2bpl156: int;

const {:string "ID is sole ID\n"} unique strConst__li2bpl161: int;

const {:string "Identifier"} unique strConst__li2bpl95: int;

const {:string "In CyyCancelWait\n"} unique strConst__li2bpl214: int;

const {:string "In CyyClose\n"} unique strConst__li2bpl69: int;

const {:string "In CyyCompleteWait\n"} unique strConst__li2bpl209: int;

const {:string "In CyyCreateOpen\n"} unique strConst__li2bpl65: int;

const {:string "In CyyGotoPowerState\n"} unique strConst__li2bpl19: int;

const {:string "In CyySetPowerD3\n"} unique strConst__li2bpl31: int;

const {:string "In CyyStartMask\n"} unique strConst__li2bpl222: int;

const {:string "In CyyUndoExternalNaming for extension: %x of port %wZ\n"} unique strConst__li2bpl124: int;

const {:string "In CyyUnload\n"} unique strConst__li2bpl57: int;

const {:string "In Ioctl processing for set mask\n"} unique strConst__li2bpl15: int;

const {:string "In Ioctl processing for wait mask\n"} unique strConst__li2bpl12: int;

const {:string "Initializing for configuration record of %wZ\n"} unique strConst__li2bpl45: int;

const {:string "Invalid Bus type %x\n"} unique strConst__li2bpl78: int;

const {:string "Invalid size fo the buffer %d\n"} unique strConst__li2bpl16: int;

const {:string "Invalid size for the buffer %d\n"} unique strConst__li2bpl14: int;

const {:string "IoConnectInterrupt Args:\nInterrupt           %x\nOurIsr              %x\nOurIsrContext       %x\nNULL\nVector              %x\nIrql                %x\nInterruptMode       %x\nInterruptShareable  %x\nProcessorAffinity   %x\nFALSE\n"} unique strConst__li2bpl145: int;

const {:string "IoOpenDeviceRegistryKey failed - %x \n"} unique strConst__li2bpl75: int;

const {:string "Leave CyyAddDevice\n"} unique strConst__li2bpl137: int;

const {:string "Leave CyyCreateDevObj\n"} unique strConst__li2bpl116: int;

const {:string "Leaving CyyGotoPowerState\n"} unique strConst__li2bpl20: int;

const {:string "List has %x lists (including alternatives)\n"} unique strConst__li2bpl179: int;

const {:string "List has %x resources in it\n"} unique strConst__li2bpl180: int;

const {:string "Mapping power capabilities\n"} unique strConst__li2bpl165: int;

const {:string "Matched to %x\n"} unique strConst__li2bpl42: int;

const {:string "Not doing external naming -- state is %x\n"} unique strConst__li2bpl142: int;

const {:string "Pci"} unique strConst__li2bpl114: int;

const {:string "Perhaps another mask irp was found in the queue\n------- %x/%x <- values should be the same\n"} unique strConst__li2bpl218: int;

const {:string "PermitShare"} unique strConst__li2bpl10: int;

const {:string "Port index too large %x\n"} unique strConst__li2bpl77: int;

const {:string "PortIndex"} unique strConst__li2bpl76: int;

const {:string "PortName"} unique strConst__li2bpl94: int;

const {:string "PortResources"} unique strConst__li2bpl130: int;

const {:string "PortResourcesTr"} unique strConst__li2bpl131: int;

const {:string "Read name %wZ\n"} unique strConst__li2bpl127: int;

const {:string "Release - disconnecting interrupt %X\n"} unique strConst__li2bpl54: int;

const {:string "Release - freeing multi context\n"} unique strConst__li2bpl56: int;

const {:string "Runtime Memory address: %x\n"} unique strConst__li2bpl92: int;

const {:string "RxFIFO"} unique strConst__li2bpl8: int;

const {:string "SERIALCOMM"} unique strConst__li2bpl101: int;

const {:string "STARTMASK - CurrentMaskIrp: %x\n"} unique strConst__li2bpl215: int;

const {:string "Sharing Board Memory for device %x\n"} unique strConst__li2bpl183: int;

const {:string "Sharing Runtime Memory for device %x\n"} unique strConst__li2bpl182: int;

const {:string "Starting or queuing set mask irp %x\n"} unique strConst__li2bpl17: int;

const {:string "Starting or queuing wait mask irp%x\n"} unique strConst__li2bpl13: int;

const {:string "SystemPowerState\n"} unique strConst__li2bpl26: int;

const {:string "TR resource pointer is %x\n"} unique strConst__li2bpl74: int;

const {:string "TRUE"} unique strConst__li2bpl62: int;

const {:string "The driver is calling PAGED_CODE() at IRQL >= DISPATCH_LEVEL."} unique strConst__li2bpl186: int;

const {:string "The number of bytes in the extension is: %d\n"} unique strConst__li2bpl58: int;

const {:string "There aren't that many of those\nbusses on this system,%x\n"} unique strConst__li2bpl79: int;

const {:string "TxFIFO"} unique strConst__li2bpl9: int;

const {:string "UNKNOWN PowerState\n"} unique strConst__li2bpl25: int;

const {:string "Unknown mask %x\n"} unique strConst__li2bpl18: int;

const {:string "Unstalling Irp 0x%x with 0x%x\n"} unique strConst__li2bpl190: int;

const {:string "WaitIrp is invalid\n------- IsrWaitMask: %x\n------- CurrentWaitIrp: %x\n"} unique strConst__li2bpl219: int;

const {:string "\\"} unique strConst__li2bpl96: int;

const {:string "\\Device\\"} unique strConst__li2bpl113: int;

const {:string "callee"} unique strConst__li2bpl227: int;

const {:string "entering CyyGetPortInfo\n"} unique strConst__li2bpl72: int;

const {:string "entering CyyStartDevice\n"} unique strConst__li2bpl128: int;

const {:string "error with IoCallDriver %x\n"} unique strConst__li2bpl129: int;

const {:string "failing; device open\n"} unique strConst__li2bpl177: int;

const {:string "for device %x\n"} unique strConst__li2bpl160: int;

const {:string "leaving CyyFinishStartDevice\n"} unique strConst__li2bpl139: int;

const {:string "pDevExt: Interrupt %x\n-------               OurIsr %x\n"} unique strConst__li2bpl141: int;

const {:string "resource pointer is %x\n"} unique strConst__li2bpl73: int;

const {:allocated} li2bplFunctionConstant112: int;

axiom li2bplFunctionConstant112 == 112;

const {:allocated} li2bplFunctionConstant113: int;

axiom li2bplFunctionConstant113 == 113;

const {:allocated} li2bplFunctionConstant125: int;

axiom li2bplFunctionConstant125 == 125;

const {:allocated} li2bplFunctionConstant126: int;

axiom li2bplFunctionConstant126 == 126;

const {:allocated} li2bplFunctionConstant127: int;

axiom li2bplFunctionConstant127 == 127;

const {:allocated} li2bplFunctionConstant128: int;

axiom li2bplFunctionConstant128 == 128;

const {:allocated} li2bplFunctionConstant129: int;

axiom li2bplFunctionConstant129 == 129;

const {:allocated} li2bplFunctionConstant130: int;

axiom li2bplFunctionConstant130 == 130;

const {:allocated} li2bplFunctionConstant131: int;

axiom li2bplFunctionConstant131 == 131;

const {:allocated} li2bplFunctionConstant144: int;

axiom li2bplFunctionConstant144 == 144;

const {:allocated} li2bplFunctionConstant149: int;

axiom li2bplFunctionConstant149 == 149;

const {:allocated} li2bplFunctionConstant151: int;

axiom li2bplFunctionConstant151 == 151;

const {:allocated} li2bplFunctionConstant161: int;

axiom li2bplFunctionConstant161 == 161;

const {:allocated} li2bplFunctionConstant177: int;

axiom li2bplFunctionConstant177 == 177;

const {:allocated} li2bplFunctionConstant178: int;

axiom li2bplFunctionConstant178 == 178;

const {:allocated} li2bplFunctionConstant179: int;

axiom li2bplFunctionConstant179 == 179;

const {:allocated} li2bplFunctionConstant180: int;

axiom li2bplFunctionConstant180 == 180;

const {:allocated} li2bplFunctionConstant181: int;

axiom li2bplFunctionConstant181 == 181;

const {:allocated} li2bplFunctionConstant182: int;

axiom li2bplFunctionConstant182 == 182;

const {:allocated} li2bplFunctionConstant193: int;

axiom li2bplFunctionConstant193 == 193;

const {:allocated} li2bplFunctionConstant194: int;

axiom li2bplFunctionConstant194 == 194;

const {:allocated} li2bplFunctionConstant195: int;

axiom li2bplFunctionConstant195 == 195;

const {:allocated} li2bplFunctionConstant196: int;

axiom li2bplFunctionConstant196 == 196;

const {:allocated} li2bplFunctionConstant197: int;

axiom li2bplFunctionConstant197 == 197;

const {:allocated} li2bplFunctionConstant198: int;

axiom li2bplFunctionConstant198 == 198;

const {:allocated} li2bplFunctionConstant199: int;

axiom li2bplFunctionConstant199 == 199;

const {:allocated} li2bplFunctionConstant200: int;

axiom li2bplFunctionConstant200 == 200;

const {:allocated} li2bplFunctionConstant201: int;

axiom li2bplFunctionConstant201 == 201;

const {:allocated} li2bplFunctionConstant202: int;

axiom li2bplFunctionConstant202 == 202;

const {:allocated} li2bplFunctionConstant203: int;

axiom li2bplFunctionConstant203 == 203;

const {:allocated} li2bplFunctionConstant204: int;

axiom li2bplFunctionConstant204 == 204;

const {:allocated} li2bplFunctionConstant205: int;

axiom li2bplFunctionConstant205 == 205;

const {:allocated} li2bplFunctionConstant218: int;

axiom li2bplFunctionConstant218 == 218;

const {:allocated} li2bplFunctionConstant221: int;

axiom li2bplFunctionConstant221 == 221;

const {:allocated} li2bplFunctionConstant222: int;

axiom li2bplFunctionConstant222 == 222;

const {:allocated} li2bplFunctionConstant226: int;

axiom li2bplFunctionConstant226 == 226;

const {:allocated} li2bplFunctionConstant227: int;

axiom li2bplFunctionConstant227 == 227;

const {:allocated} li2bplFunctionConstant228: int;

axiom li2bplFunctionConstant228 == 228;

const {:allocated} li2bplFunctionConstant229: int;

axiom li2bplFunctionConstant229 == 229;

const {:allocated} li2bplFunctionConstant230: int;

axiom li2bplFunctionConstant230 == 230;

const {:allocated} li2bplFunctionConstant231: int;

axiom li2bplFunctionConstant231 == 231;

const {:allocated} li2bplFunctionConstant232: int;

axiom li2bplFunctionConstant232 == 232;

const {:allocated} li2bplFunctionConstant233: int;

axiom li2bplFunctionConstant233 == 233;

const {:allocated} li2bplFunctionConstant234: int;

axiom li2bplFunctionConstant234 == 234;

const {:allocated} li2bplFunctionConstant236: int;

axiom li2bplFunctionConstant236 == 236;

const {:allocated} li2bplFunctionConstant266: int;

axiom li2bplFunctionConstant266 == 266;

const {:allocated} li2bplFunctionConstant284: int;

axiom li2bplFunctionConstant284 == 284;

const {:allocated} li2bplFunctionConstant285: int;

axiom li2bplFunctionConstant285 == 285;

const {:allocated} li2bplFunctionConstant287: int;

axiom li2bplFunctionConstant287 == 287;

const {:allocated} li2bplFunctionConstant288: int;

axiom li2bplFunctionConstant288 == 288;

const {:allocated} li2bplFunctionConstant289: int;

axiom li2bplFunctionConstant289 == 289;

const {:allocated} li2bplFunctionConstant290: int;

axiom li2bplFunctionConstant290 == 290;

const {:allocated} li2bplFunctionConstant291: int;

axiom li2bplFunctionConstant291 == 291;

const {:allocated} li2bplFunctionConstant295: int;

axiom li2bplFunctionConstant295 == 295;

const {:allocated} li2bplFunctionConstant318: int;

axiom li2bplFunctionConstant318 == 318;

const {:allocated} li2bplFunctionConstant319: int;

axiom li2bplFunctionConstant319 == 319;

const {:allocated} li2bplFunctionConstant320: int;

axiom li2bplFunctionConstant320 == 320;

const {:allocated} li2bplFunctionConstant321: int;

axiom li2bplFunctionConstant321 == 321;

const {:allocated} li2bplFunctionConstant322: int;

axiom li2bplFunctionConstant322 == 322;

const {:allocated} li2bplFunctionConstant323: int;

axiom li2bplFunctionConstant323 == 323;

const {:allocated} li2bplFunctionConstant324: int;

axiom li2bplFunctionConstant324 == 324;

const {:allocated} li2bplFunctionConstant325: int;

axiom li2bplFunctionConstant325 == 325;

const {:allocated} li2bplFunctionConstant326: int;

axiom li2bplFunctionConstant326 == 326;

const {:allocated} li2bplFunctionConstant327: int;

axiom li2bplFunctionConstant327 == 327;

const {:allocated} li2bplFunctionConstant334: int;

axiom li2bplFunctionConstant334 == 334;

const {:allocated} li2bplFunctionConstant335: int;

axiom li2bplFunctionConstant335 == 335;

const {:allocated} li2bplFunctionConstant336: int;

axiom li2bplFunctionConstant336 == 336;

const {:allocated} li2bplFunctionConstant337: int;

axiom li2bplFunctionConstant337 == 337;

const {:allocated} li2bplFunctionConstant338: int;

axiom li2bplFunctionConstant338 == 338;

const {:allocated} li2bplFunctionConstant339: int;

axiom li2bplFunctionConstant339 == 339;

const {:allocated} li2bplFunctionConstant355: int;

axiom li2bplFunctionConstant355 == 355;

const {:allocated} li2bplFunctionConstant356: int;

axiom li2bplFunctionConstant356 == 356;

const {:allocated} li2bplFunctionConstant357: int;

axiom li2bplFunctionConstant357 == 357;

const {:allocated} li2bplFunctionConstant358: int;

axiom li2bplFunctionConstant358 == 358;

const {:allocated} li2bplFunctionConstant360: int;

axiom li2bplFunctionConstant360 == 360;

const {:allocated} li2bplFunctionConstant361: int;

axiom li2bplFunctionConstant361 == 361;

const {:allocated} li2bplFunctionConstant362: int;

axiom li2bplFunctionConstant362 == 362;

const {:allocated} li2bplFunctionConstant363: int;

axiom li2bplFunctionConstant363 == 363;

const {:allocated} li2bplFunctionConstant364: int;

axiom li2bplFunctionConstant364 == 364;

const {:allocated} li2bplFunctionConstant365: int;

axiom li2bplFunctionConstant365 == 365;

const {:allocated} li2bplFunctionConstant366: int;

axiom li2bplFunctionConstant366 == 366;

const {:allocated} li2bplFunctionConstant367: int;

axiom li2bplFunctionConstant367 == 367;

const {:allocated} li2bplFunctionConstant368: int;

axiom li2bplFunctionConstant368 == 368;

const {:allocated} li2bplFunctionConstant369: int;

axiom li2bplFunctionConstant369 == 369;

const {:allocated} li2bplFunctionConstant370: int;

axiom li2bplFunctionConstant370 == 370;

const {:allocated} li2bplFunctionConstant371: int;

axiom li2bplFunctionConstant371 == 371;

const {:allocated} li2bplFunctionConstant372: int;

axiom li2bplFunctionConstant372 == 372;

const {:allocated} li2bplFunctionConstant373: int;

axiom li2bplFunctionConstant373 == 373;

const {:allocated} li2bplFunctionConstant374: int;

axiom li2bplFunctionConstant374 == 374;

const {:allocated} li2bplFunctionConstant375: int;

axiom li2bplFunctionConstant375 == 375;

const {:allocated} li2bplFunctionConstant376: int;

axiom li2bplFunctionConstant376 == 376;

const {:allocated} li2bplFunctionConstant378: int;

axiom li2bplFunctionConstant378 == 378;

const {:allocated} li2bplFunctionConstant379: int;

axiom li2bplFunctionConstant379 == 379;

const {:allocated} li2bplFunctionConstant423: int;

axiom li2bplFunctionConstant423 == 423;

const {:allocated} li2bplFunctionConstant424: int;

axiom li2bplFunctionConstant424 == 424;

const {:allocated} li2bplFunctionConstant437: int;

axiom li2bplFunctionConstant437 == 437;

const {:allocated} li2bplFunctionConstant458: int;

axiom li2bplFunctionConstant458 == 458;

const {:allocated} li2bplFunctionConstant459: int;

axiom li2bplFunctionConstant459 == 459;

const {:allocated} li2bplFunctionConstant461: int;

axiom li2bplFunctionConstant461 == 461;

const {:allocated} li2bplFunctionConstant465: int;

axiom li2bplFunctionConstant465 == 465;

const {:allocated} li2bplFunctionConstant515: int;

axiom li2bplFunctionConstant515 == 515;

const {:allocated} li2bplFunctionConstant517: int;

axiom li2bplFunctionConstant517 == 517;

const {:allocated} li2bplFunctionConstant520: int;

axiom li2bplFunctionConstant520 == 520;

implementation {:origName "CyyTryToCompleteCurrent"} CyyTryToCompleteCurrent#0(actual_Extension_13: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_1: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} s_p_e_c_i_a_l_13: int;
  var {:pointer} sdv_613: int;
  var {:pointer} Tmp_695: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_696: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} sdv_615: int;
  var {:pointer} oldIrp: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Extension_13: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_3: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} IntervalTimer_1: int;
  var {:pointer} TotalTimer_1: int;
  var {:scalar} Starter_1: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_693: int;
  var vslice_dummy_var_694: int;
  var vslice_dummy_var_695: int;
  var vslice_dummy_var_696: int;
  var vslice_dummy_var_697: int;
  var vslice_dummy_var_1328: int;
  var vslice_dummy_var_1329: int;

  anon0:
    call {:si_unique_call 2419} newIrp := __HAVOC_malloc(4);
    call {:si_unique_call 2420} vslice_dummy_var_693 := __HAVOC_malloc(4);
    Extension_13 := actual_Extension_13;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_3 := actual_CurrentOpIrp_3;
    QueueToProcess_1 := actual_QueueToProcess_1;
    IntervalTimer_1 := actual_IntervalTimer_1;
    TotalTimer_1 := actual_TotalTimer_1;
    Starter_1 := actual_Starter_1;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 2421} Tmp_695 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_14 := RefType;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_1328;
    call {:si_unique_call 2422} sdv_613 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1328);
    assume {:nonnull} sdv_613 != 0;
    assume sdv_613 > 0;
    s_p_e_c_i_a_l_13 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_613)));
    assume {:nonnull} s_p_e_c_i_a_l_13 != 0;
    assume s_p_e_c_i_a_l_13 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_13] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_13], BNOT(s_p_e_c_i_a_l_14));
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 2423} vslice_dummy_var_694 := KeSynchronizeExecution(0, SynchRoutine, 0);
    goto L12;

  L12:
    call {:si_unique_call 2424} CyyRundownIrpRefs(CurrentOpIrp_3, IntervalTimer_1, TotalTimer_1, Extension_13);
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_1329;
    call {:si_unique_call 2425} sdv_615 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1329);
    assume {:nonnull} sdv_615 != 0;
    assume sdv_615 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_699;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_696;
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    goto L28;

  L28:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    call {:si_unique_call 2426} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_695 := strConst__li2bpl3;
    call {:si_unique_call 2427} vslice_dummy_var_697 := CyyDbgPrintEx(9, Tmp_695);
    call {:si_unique_call 2428} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2429} CyyIRPEpilogue(Extension_13);
    goto L1;

  L1:
    return;

  anon18_Then:
    call {:si_unique_call 2430} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant128;
    call {:si_unique_call 2431} CyyGetNextImmediate(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_13);
    goto L37;

  L37:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant376;
    call {:si_unique_call 2432} vslice_dummy_var_696 := CyyStartRead(Extension_13);
    goto L1;

  anon21_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant194;
    call {:si_unique_call 2433} vslice_dummy_var_695 := CyyStartWrite#0(Extension_13);
    goto L1;

  anon20_Then:
    goto L1;

  anon22_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant144;
    call {:si_unique_call 2434} CyyGetNextIrp(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_13);
    goto L37;

  anon19_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant198;
    call {:si_unique_call 2435} CyyGetNextWrite(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_13);
    goto L37;

  anon24_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L28;

  anon17_Then:
    call {:si_unique_call 2436} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon23_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "CyyTryToCompleteCurrent"} CyyTryToCompleteCurrent#0(actual_Extension_13: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_1: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyTryToCompleteCurrent"} CyyTryToCompleteCurrent#1(actual_Extension_13: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_1: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} s_p_e_c_i_a_l_13: int;
  var {:pointer} sdv_613: int;
  var {:pointer} Tmp_695: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_696: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} sdv_615: int;
  var {:pointer} oldIrp: int;
  var {:pointer} Tmp_699: int;
  var {:pointer} Extension_13: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_3: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} IntervalTimer_1: int;
  var {:pointer} TotalTimer_1: int;
  var {:scalar} Starter_1: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_698: int;
  var vslice_dummy_var_699: int;
  var vslice_dummy_var_700: int;
  var vslice_dummy_var_701: int;
  var vslice_dummy_var_702: int;
  var vslice_dummy_var_1330: int;
  var vslice_dummy_var_1331: int;

  anon0:
    call {:si_unique_call 2437} newIrp := __HAVOC_malloc(4);
    call {:si_unique_call 2438} vslice_dummy_var_698 := __HAVOC_malloc(4);
    Extension_13 := actual_Extension_13;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_3 := actual_CurrentOpIrp_3;
    QueueToProcess_1 := actual_QueueToProcess_1;
    IntervalTimer_1 := actual_IntervalTimer_1;
    TotalTimer_1 := actual_TotalTimer_1;
    Starter_1 := actual_Starter_1;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 2439} Tmp_695 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_14 := RefType;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_1330;
    call {:si_unique_call 2440} sdv_613 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1330);
    assume {:nonnull} sdv_613 != 0;
    assume sdv_613 > 0;
    s_p_e_c_i_a_l_13 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_613)));
    assume {:nonnull} s_p_e_c_i_a_l_13 != 0;
    assume s_p_e_c_i_a_l_13 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_13] := BAND(Mem_T.INT4[s_p_e_c_i_a_l_13], BNOT(s_p_e_c_i_a_l_14));
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 2441} vslice_dummy_var_699 := KeSynchronizeExecution(0, SynchRoutine, 0);
    goto L12;

  L12:
    call {:si_unique_call 2442} CyyRundownIrpRefs(CurrentOpIrp_3, IntervalTimer_1, TotalTimer_1, Extension_13);
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_1331;
    call {:si_unique_call 2443} sdv_615 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1331);
    assume {:nonnull} sdv_615 != 0;
    assume sdv_615 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_699;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_696;
    assume {:nonnull} Tmp_696 != 0;
    assume Tmp_696 > 0;
    goto L28;

  L28:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    call {:si_unique_call 2444} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_695 := strConst__li2bpl3;
    call {:si_unique_call 2445} vslice_dummy_var_702 := CyyDbgPrintEx(9, Tmp_695);
    call {:si_unique_call 2446} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2447} CyyIRPEpilogue(Extension_13);
    goto L1;

  L1:
    return;

  anon18_Then:
    call {:si_unique_call 2448} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant128;
    call {:si_unique_call 2449} CyyGetNextImmediate(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_13);
    goto L37;

  L37:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant376;
    call {:si_unique_call 2450} vslice_dummy_var_701 := CyyStartRead(Extension_13);
    goto L1;

  anon21_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant194;
    call {:si_unique_call 2451} vslice_dummy_var_700 := CyyStartWrite#1(Extension_13);
    goto L1;

  anon20_Then:
    goto L1;

  anon22_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant144;
    call {:si_unique_call 2452} CyyGetNextIrp(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_13);
    goto L37;

  anon19_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant198;
    call {:si_unique_call 2453} CyyGetNextWrite(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_13);
    goto L37;

  anon24_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L28;

  anon17_Then:
    call {:si_unique_call 2454} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon23_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "CyyTryToCompleteCurrent"} CyyTryToCompleteCurrent#1(actual_Extension_13: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_1: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_5) || sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_4);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyStartWrite"} CyyStartWrite#0(actual_Extension_22: int) returns (Tmp_763: int)
{
  var {:pointer} Tmp_764: int;
  var {:pointer} s_p_e_c_i_a_l_19: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} s_p_e_c_i_a_l_20: int;
  var {:pointer} Tmp_765: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_766: int;
  var {:pointer} sdv_670: int;
  var {:scalar} OldIrql_14: int;
  var {:pointer} sdv_671: int;
  var {:pointer} sdv_672: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_21: int;
  var {:pointer} sdv_673: int;
  var {:pointer} Tmp_767: int;
  var {:pointer} sdv_675: int;
  var {:pointer} s_p_e_c_i_a_l_22: int;
  var {:pointer} Tmp_768: int;
  var {:scalar} s_p_e_c_i_a_l_23: int;
  var {:pointer} Tmp_769: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} Tmp_770: int;
  var {:scalar} s_p_e_c_i_a_l_24: int;
  var {:pointer} Extension_22: int;
  var vslice_dummy_var_703: int;
  var vslice_dummy_var_704: int;
  var vslice_dummy_var_705: int;
  var vslice_dummy_var_706: int;
  var vslice_dummy_var_707: int;
  var vslice_dummy_var_1332: int;
  var vslice_dummy_var_1333: int;
  var vslice_dummy_var_1334: int;
  var vslice_dummy_var_1335: int;
  var vslice_dummy_var_1336: int;
  var vslice_dummy_var_1337: int;
  var vslice_dummy_var_1338: int;

  anon0:
    call {:si_unique_call 2455} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2456} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2457} Timeouts_1 := __HAVOC_malloc(20);
    Extension_22 := actual_Extension_22;
    call {:si_unique_call 2458} Tmp_765 := __HAVOC_malloc(76);
    call {:si_unique_call 2459} Tmp_767 := __HAVOC_malloc(80);
    SetFirstStatus := 0;
    Tmp_767 := strConst__li2bpl208;
    call {:si_unique_call 2460} vslice_dummy_var_706 := CyyDbgPrintEx(2, Tmp_767);
    goto L14;

  L14:
    call {:si_unique_call 2461} Tmp_764, FirstStatus, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_766, OldIrql_14, sdv_671, sdv_675, Tmp_768, Tmp_770 := CyyStartWrite#0_loop_L14(Tmp_764, FirstStatus, TotalTime_1, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_766, OldIrql_14, sdv_671, NewIrp_3, sdv_675, Tmp_768, Timeouts_1, Tmp_770, Extension_22);
    goto L14_last;

  L14_last:
    call {:si_unique_call 2483} Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    Mem_T.INT4[Tmp_764] := OldIrql_14;
    call {:si_unique_call 2484} IoAcquireCancelSpinLock(Tmp_764);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_764];
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1332;
    call {:si_unique_call 2462} sdv_671 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1332);
    assume {:nonnull} sdv_671 != 0;
    assume sdv_671 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    s_p_e_c_i_a_l_21 := 16;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1333;
    call {:si_unique_call 2463} sdv_673 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1333);
    assume {:nonnull} sdv_673 != 0;
    assume sdv_673 > 0;
    s_p_e_c_i_a_l_19 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_673)));
    assume {:nonnull} s_p_e_c_i_a_l_19 != 0;
    assume s_p_e_c_i_a_l_19 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_19] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_19], s_p_e_c_i_a_l_21);
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_769;
    assume {:nonnull} Tmp_769 != 0;
    assume Tmp_769 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume false;
    return;

  anon22_Then:
    call {:si_unique_call 2464} IoReleaseCancelSpinLock(OldIrql_14);
    goto L40;

  L40:
    UseATimer_1 := 0;
    call {:si_unique_call 2465} Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    Mem_T.INT4[Tmp_764] := OldIrql_14;
    call {:si_unique_call 2466} sdv_KeAcquireSpinLock(0, Tmp_764);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_764];
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2467} sdv_KeReleaseSpinLock(0, OldIrql_14);
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L51;

  L51:
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1334;
    call {:si_unique_call 2468} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1334);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(IrpSp_1)] == 4;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_770;
    goto L59;

  L59:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1335;
    call {:si_unique_call 2469} sdv_675 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1335);
    assume {:nonnull} sdv_675 != 0;
    assume sdv_675 > 0;
    call {:si_unique_call 2470} Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    Mem_T.INT4[Tmp_764] := OldIrql_14;
    call {:si_unique_call 2471} IoAcquireCancelSpinLock(Tmp_764);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_764];
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_766;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2472} IoReleaseCancelSpinLock(OldIrql_14);
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_768;
    assume {:nonnull} Tmp_768 != 0;
    assume Tmp_768 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    call {:si_unique_call 2473} CyyGetNextWrite(CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_22), WriteQueue__CYY_DEVICE_EXTENSION(Extension_22), NewIrp_3, 1, Extension_22);
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L79;

  L79:
    Tmp_765 := strConst__li2bpl207;
    call {:si_unique_call 2474} vslice_dummy_var_707 := CyyDbgPrintEx(2, Tmp_765);
    Tmp_763 := FirstStatus;
    return;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L75;

  anon28_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L87;

  L87:
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1336;
    call {:si_unique_call 2475} vslice_dummy_var_703 := sdv_IoSetCancelRoutine(vslice_dummy_var_1336, li2bplFunctionConstant196);
    s_p_e_c_i_a_l_23 := 2;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1337;
    call {:si_unique_call 2476} sdv_670 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1337);
    assume {:nonnull} sdv_670 != 0;
    assume sdv_670 > 0;
    s_p_e_c_i_a_l_22 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_670)));
    assume {:nonnull} s_p_e_c_i_a_l_22 != 0;
    assume s_p_e_c_i_a_l_22 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_22] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_22], s_p_e_c_i_a_l_23);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    call {:si_unique_call 2477} vslice_dummy_var_705 := CyySetTimer(WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_22), TotalTime_1, TotalWriteTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_22), Extension_22);
    s_p_e_c_i_a_l_24 := 4;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1338;
    call {:si_unique_call 2478} sdv_672 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1338);
    assume {:nonnull} sdv_672 != 0;
    assume sdv_672 > 0;
    s_p_e_c_i_a_l_20 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_672)));
    assume {:nonnull} s_p_e_c_i_a_l_20 != 0;
    assume s_p_e_c_i_a_l_20 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_20] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_20], s_p_e_c_i_a_l_24);
    goto L99;

  L99:
    call {:si_unique_call 2479} vslice_dummy_var_704 := KeSynchronizeExecution(0, li2bplFunctionConstant197, 0);
    call {:si_unique_call 2480} IoReleaseCancelSpinLock(OldIrql_14);
    goto L79;

  anon30_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L99;

  anon25_Then:
    assume {:partition} SetFirstStatus == 0;
    call {:si_unique_call 2481} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L87;

  anon27_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(IrpSp_1)] != 4;
    Tmp_770 := 1;
    goto L59;

  anon23_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L60;

  anon24_Then:
    goto L51;

  anon21_Then:
    call {:si_unique_call 2482} IoReleaseCancelSpinLock(OldIrql_14);
    goto L40;
}



procedure {:origName "CyyStartWrite"} CyyStartWrite#0(actual_Extension_22: int) returns (Tmp_763: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:origName "CyyStartWrite"} CyyStartWrite#1(actual_Extension_22: int) returns (Tmp_763: int)
{
  var {:pointer} Tmp_764: int;
  var {:pointer} s_p_e_c_i_a_l_19: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} s_p_e_c_i_a_l_20: int;
  var {:pointer} Tmp_765: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_766: int;
  var {:pointer} sdv_670: int;
  var {:scalar} OldIrql_14: int;
  var {:pointer} sdv_671: int;
  var {:pointer} sdv_672: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_21: int;
  var {:pointer} sdv_673: int;
  var {:pointer} Tmp_767: int;
  var {:pointer} sdv_675: int;
  var {:pointer} s_p_e_c_i_a_l_22: int;
  var {:pointer} Tmp_768: int;
  var {:scalar} s_p_e_c_i_a_l_23: int;
  var {:pointer} Tmp_769: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} Tmp_770: int;
  var {:scalar} s_p_e_c_i_a_l_24: int;
  var {:pointer} Extension_22: int;
  var vslice_dummy_var_708: int;
  var vslice_dummy_var_709: int;
  var vslice_dummy_var_710: int;
  var vslice_dummy_var_711: int;
  var vslice_dummy_var_712: int;
  var vslice_dummy_var_1339: int;
  var vslice_dummy_var_1340: int;
  var vslice_dummy_var_1341: int;
  var vslice_dummy_var_1342: int;
  var vslice_dummy_var_1343: int;
  var vslice_dummy_var_1344: int;
  var vslice_dummy_var_1345: int;

  anon0:
    call {:si_unique_call 2485} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2486} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2487} Timeouts_1 := __HAVOC_malloc(20);
    Extension_22 := actual_Extension_22;
    call {:si_unique_call 2488} Tmp_765 := __HAVOC_malloc(76);
    call {:si_unique_call 2489} Tmp_767 := __HAVOC_malloc(80);
    SetFirstStatus := 0;
    Tmp_767 := strConst__li2bpl208;
    call {:si_unique_call 2490} vslice_dummy_var_711 := CyyDbgPrintEx(2, Tmp_767);
    goto L14;

  L14:
    call {:si_unique_call 2491} Tmp_764, s_p_e_c_i_a_l_19, FirstStatus, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_766, OldIrql_14, sdv_671, s_p_e_c_i_a_l_21, sdv_673, sdv_675, Tmp_768, Tmp_769, Tmp_770 := CyyStartWrite#1_loop_L14(Tmp_764, s_p_e_c_i_a_l_19, FirstStatus, TotalTime_1, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_766, OldIrql_14, sdv_671, NewIrp_3, s_p_e_c_i_a_l_21, sdv_673, sdv_675, Tmp_768, Tmp_769, Timeouts_1, Tmp_770, Extension_22);
    goto L14_last;

  L14_last:
    call {:si_unique_call 2514} Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    Mem_T.INT4[Tmp_764] := OldIrql_14;
    call {:si_unique_call 2515} IoAcquireCancelSpinLock(Tmp_764);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_764];
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1339;
    call {:si_unique_call 2492} sdv_671 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1339);
    assume {:nonnull} sdv_671 != 0;
    assume sdv_671 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    s_p_e_c_i_a_l_21 := 16;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1340;
    call {:si_unique_call 2493} sdv_673 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1340);
    assume {:nonnull} sdv_673 != 0;
    assume sdv_673 > 0;
    s_p_e_c_i_a_l_19 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_673)));
    assume {:nonnull} s_p_e_c_i_a_l_19 != 0;
    assume s_p_e_c_i_a_l_19 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_19] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_19], s_p_e_c_i_a_l_21);
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_769;
    assume {:nonnull} Tmp_769 != 0;
    assume Tmp_769 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    call {:si_unique_call 2494} CyyTryToCompleteCurrent#0(Extension_22, li2bplFunctionConstant195, OldIrql_14, -1073741816, CurrentXoffIrp__CYY_DEVICE_EXTENSION(Extension_22), 0, 0, XoffCountTimer__CYY_DEVICE_EXTENSION(Extension_22), 0, 0, 16);
    goto L40;

  L40:
    UseATimer_1 := 0;
    call {:si_unique_call 2495} Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    Mem_T.INT4[Tmp_764] := OldIrql_14;
    call {:si_unique_call 2496} sdv_KeAcquireSpinLock(0, Tmp_764);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_764];
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2497} sdv_KeReleaseSpinLock(0, OldIrql_14);
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L51;

  L51:
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1341;
    call {:si_unique_call 2498} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1341);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(IrpSp_1)] == 4;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_770;
    goto L59;

  L59:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1342;
    call {:si_unique_call 2499} sdv_675 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1342);
    assume {:nonnull} sdv_675 != 0;
    assume sdv_675 > 0;
    call {:si_unique_call 2500} Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    Mem_T.INT4[Tmp_764] := OldIrql_14;
    call {:si_unique_call 2501} IoAcquireCancelSpinLock(Tmp_764);
    assume {:nonnull} Tmp_764 != 0;
    assume Tmp_764 > 0;
    OldIrql_14 := Mem_T.INT4[Tmp_764];
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_766;
    assume {:nonnull} Tmp_766 != 0;
    assume Tmp_766 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2502} IoReleaseCancelSpinLock(OldIrql_14);
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_768;
    assume {:nonnull} Tmp_768 != 0;
    assume Tmp_768 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    call {:si_unique_call 2503} CyyGetNextWrite(CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_22), WriteQueue__CYY_DEVICE_EXTENSION(Extension_22), NewIrp_3, 1, Extension_22);
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L79;

  L79:
    Tmp_765 := strConst__li2bpl207;
    call {:si_unique_call 2504} vslice_dummy_var_712 := CyyDbgPrintEx(2, Tmp_765);
    Tmp_763 := FirstStatus;
    return;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L75;

  anon28_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L87;

  L87:
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1343;
    call {:si_unique_call 2505} vslice_dummy_var_708 := sdv_IoSetCancelRoutine(vslice_dummy_var_1343, li2bplFunctionConstant196);
    s_p_e_c_i_a_l_23 := 2;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1344;
    call {:si_unique_call 2506} sdv_670 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1344);
    assume {:nonnull} sdv_670 != 0;
    assume sdv_670 > 0;
    s_p_e_c_i_a_l_22 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_670)));
    assume {:nonnull} s_p_e_c_i_a_l_22 != 0;
    assume s_p_e_c_i_a_l_22 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_22] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_22], s_p_e_c_i_a_l_23);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    call {:si_unique_call 2507} vslice_dummy_var_710 := CyySetTimer(WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_22), TotalTime_1, TotalWriteTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_22), Extension_22);
    s_p_e_c_i_a_l_24 := 4;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_1345;
    call {:si_unique_call 2508} sdv_672 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1345);
    assume {:nonnull} sdv_672 != 0;
    assume sdv_672 > 0;
    s_p_e_c_i_a_l_20 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_672)));
    assume {:nonnull} s_p_e_c_i_a_l_20 != 0;
    assume s_p_e_c_i_a_l_20 > 0;
    Mem_T.INT4[s_p_e_c_i_a_l_20] := BOR(Mem_T.INT4[s_p_e_c_i_a_l_20], s_p_e_c_i_a_l_24);
    goto L99;

  L99:
    call {:si_unique_call 2509} vslice_dummy_var_709 := KeSynchronizeExecution(0, li2bplFunctionConstant197, 0);
    call {:si_unique_call 2510} IoReleaseCancelSpinLock(OldIrql_14);
    goto L79;

  anon30_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L99;

  anon25_Then:
    assume {:partition} SetFirstStatus == 0;
    call {:si_unique_call 2511} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L87;

  anon27_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(IrpSp_1)] != 4;
    Tmp_770 := 1;
    goto L59;

  anon23_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L60;

  anon24_Then:
    goto L51;

  anon22_Then:
    call {:si_unique_call 2512} IoReleaseCancelSpinLock(OldIrql_14);
    goto L40;

  anon21_Then:
    call {:si_unique_call 2513} IoReleaseCancelSpinLock(OldIrql_14);
    goto L40;
}



procedure {:origName "CyyStartWrite"} CyyStartWrite#1(actual_Extension_22: int) returns (Tmp_763: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation CyyCDCmd_loop_L35(in_s_p_e_c_i_a_l_6: int, in_nextQuery: int)
{

  entry:
    goto L35, exit;

  exit:
    return;

  L35:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_6 != 0;
    assume in_s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_6 != 0;
    assume in_s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_6 != 0;
    assume in_s_p_e_c_i_a_l_6 > 0;
    goto anon21_Then;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    call {:si_unique_call 2516} {:si_old_unique_call 1} CyyCDCmd_loop_L35(in_s_p_e_c_i_a_l_6, in_nextQuery);
    return;
}



procedure {:LoopProcedure} CyyCDCmd_loop_L35(in_s_p_e_c_i_a_l_6: int, in_nextQuery: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyCDCmd_loop_L30(in_Tmp_99: int, in_chip: int, in_oneSecond: int, in_sdv_101: int, in_s_p_e_c_i_a_l_6: int, in_difference: int, in_value: int, in_startOfSpin: int, in_nextQuery: int) returns (out_Tmp_99: int, out_sdv_101: int, out_s_p_e_c_i_a_l_6: int, out_value: int)
{

  entry:
    out_Tmp_99, out_sdv_101, out_s_p_e_c_i_a_l_6, out_value := in_Tmp_99, in_sdv_101, in_s_p_e_c_i_a_l_6, in_value;
    goto L30, exit;

  exit:
    return;

  L30:
    goto anon15_Else;

  anon15_Else:
    assume {:partition} out_value != 0;
    out_Tmp_99 := KeTickCount;
    assume {:nonnull} out_Tmp_99 != 0;
    assume out_Tmp_99 > 0;
    havoc out_s_p_e_c_i_a_l_6;
    goto L35;

  L35:
    call {:si_unique_call 2519} CyyCDCmd_loop_L35(out_s_p_e_c_i_a_l_6, in_nextQuery);
    goto L35_last;

  L35_last:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_6 != 0;
    assume out_s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_6 != 0;
    assume out_s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_6 != 0;
    assume out_s_p_e_c_i_a_l_6 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    call {:si_unique_call 2518} out_sdv_101 := corral_nondet();
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_oneSecond != 0;
    assume in_oneSecond > 0;
    goto anon17_Then;

  anon17_Then:
    call {:si_unique_call 2517} out_value := corral_nondet();
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    call {:si_unique_call 2520} {:si_old_unique_call 1} out_Tmp_99, out_sdv_101, out_s_p_e_c_i_a_l_6, out_value := CyyCDCmd_loop_L30(out_Tmp_99, in_chip, in_oneSecond, out_sdv_101, out_s_p_e_c_i_a_l_6, in_difference, out_value, in_startOfSpin, in_nextQuery);
    return;

  anon21_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} CyyCDCmd_loop_L30(in_Tmp_99: int, in_chip: int, in_oneSecond: int, in_sdv_101: int, in_s_p_e_c_i_a_l_6: int, in_difference: int, in_value: int, in_startOfSpin: int, in_nextQuery: int) returns (out_Tmp_99: int, out_sdv_101: int, out_s_p_e_c_i_a_l_6: int, out_value: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyCDCmd_loop_L18(in_s_p_e_c_i_a_l_5: int, in_startOfSpin: int)
{

  entry:
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} in_s_p_e_c_i_a_l_5 != 0;
    assume in_s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_5 != 0;
    assume in_s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_5 != 0;
    assume in_s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    goto anon20_Then;

  anon20_Then:
    goto anon20_Then_dummy;

  anon20_Then_dummy:
    call {:si_unique_call 2521} {:si_old_unique_call 1} CyyCDCmd_loop_L18(in_s_p_e_c_i_a_l_5, in_startOfSpin);
    return;
}



procedure {:LoopProcedure} CyyCDCmd_loop_L18(in_s_p_e_c_i_a_l_5: int, in_startOfSpin: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyInternalIoControl_loop_L115(in_pDevExt_1: int, in_Tmp_111: int, in_Tmp_112: int, in_cap: int, in_Tmp_115: int, in_Tmp_118: int) returns (out_Tmp_111: int, out_Tmp_112: int, out_cap: int, out_Tmp_115: int, out_Tmp_118: int)
{

  entry:
    out_Tmp_111, out_Tmp_112, out_cap, out_Tmp_115, out_Tmp_118 := in_Tmp_111, in_Tmp_112, in_cap, in_Tmp_115, in_Tmp_118;
    goto L115, exit;

  exit:
    return;

  L115:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon43_Else;

  anon43_Else:
    assume {:partition} 7 > out_cap;
    out_Tmp_111 := out_cap;
    assume {:nonnull} in_pDevExt_1 != 0;
    assume in_pDevExt_1 > 0;
    havoc out_Tmp_112;
    assume {:nonnull} out_Tmp_112 != 0;
    assume out_Tmp_112 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} Mem_T.INT4[out_Tmp_112 + out_Tmp_111 * 4] >= 1;
    out_Tmp_115 := out_cap;
    assume {:nonnull} in_pDevExt_1 != 0;
    assume in_pDevExt_1 > 0;
    havoc out_Tmp_118;
    assume {:nonnull} out_Tmp_118 != 0;
    assume out_Tmp_118 > 0;
    assume {:nonnull} in_pDevExt_1 != 0;
    assume in_pDevExt_1 > 0;
    goto anon50_Else;

  anon50_Else:
    goto L118;

  L118:
    out_cap := out_cap + 1;
    goto L118_dummy;

  L118_dummy:
    havoc out_cap;
    return;

  anon49_Then:
    assume {:partition} 1 > Mem_T.INT4[out_Tmp_112 + out_Tmp_111 * 4];
    goto L118;
}



procedure {:LoopProcedure} CyyInternalIoControl_loop_L115(in_pDevExt_1: int, in_Tmp_111: int, in_Tmp_112: int, in_cap: int, in_Tmp_115: int, in_Tmp_118: int) returns (out_Tmp_111: int, out_Tmp_112: int, out_cap: int, out_Tmp_115: int, out_Tmp_118: int);
  free ensures {:va_keep} out_Tmp_111 == in_cap || out_Tmp_111 == in_Tmp_111;
  free ensures {:va_keep} out_Tmp_115 == in_cap || out_Tmp_115 == in_Tmp_115;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyFindInitController_loop_L84(in_sdv_156: int, in_pCurDevObj: int, in_sdv_168: int, in_pExtension: int, in_oldIrql: int, in_Tmp_185: int, in_PConfig: int) returns (out_sdv_156: int, out_pCurDevObj: int, out_sdv_168: int, out_pExtension: int, out_oldIrql: int, out_Tmp_185: int)
{
  var vslice_dummy_var_1346: int;
  var vslice_dummy_var_1347: int;
  var vslice_dummy_var_1348: int;
  var vslice_dummy_var_1349: int;

  entry:
    out_sdv_156, out_pCurDevObj, out_sdv_168, out_pExtension, out_oldIrql, out_Tmp_185 := in_sdv_156, in_pCurDevObj, in_sdv_168, in_pExtension, in_oldIrql, in_Tmp_185;
    goto L84, exit;

  exit:
    return;

  L84:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_1346;
    havoc vslice_dummy_var_1347;
    havoc vslice_dummy_var_1348;
    havoc vslice_dummy_var_1349;
    call {:si_unique_call 2526} out_sdv_156 := CyyMemCompare(vslice_dummy_var_1346, vslice_dummy_var_1347, vslice_dummy_var_1348, vslice_dummy_var_1349);
    goto anon56_Then;

  anon56_Then:
    assume {:partition} out_sdv_156 != 0;
    goto L85;

  L85:
    call {:si_unique_call 2524} out_Tmp_185 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_185 != 0;
    assume out_Tmp_185 > 0;
    Mem_T.INT4[out_Tmp_185] := out_oldIrql;
    call {:si_unique_call 2525} sdv_KeAcquireSpinLock(0, out_Tmp_185);
    assume {:nonnull} out_Tmp_185 != 0;
    assume out_Tmp_185 > 0;
    out_oldIrql := Mem_T.INT4[out_Tmp_185];
    assume {:nonnull} out_pCurDevObj != 0;
    assume out_pCurDevObj > 0;
    havoc out_pCurDevObj;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 2523} out_sdv_168 := sdv_containing_record(out_pCurDevObj, 4);
    out_pExtension := out_sdv_168;
    goto L134;

  L134:
    call {:si_unique_call 2522} sdv_KeReleaseSpinLock(0, out_oldIrql);
    goto anon61_Else;

  anon61_Else:
    goto anon62_Else;

  anon62_Else:
    goto anon62_Else_dummy;

  anon62_Else_dummy:
    call {:si_unique_call 2527} {:si_old_unique_call 1} out_sdv_156, out_pCurDevObj, out_sdv_168, out_pExtension, out_oldIrql, out_Tmp_185 := CyyFindInitController_loop_L84(out_sdv_156, out_pCurDevObj, out_sdv_168, out_pExtension, out_oldIrql, out_Tmp_185, in_PConfig);
    return;

  anon64_Then:
    goto L134;

  anon55_Then:
    goto L85;

  anon54_Then:
    goto L85;

  anon53_Then:
    goto L85;
}



procedure {:LoopProcedure} CyyFindInitController_loop_L84(in_sdv_156: int, in_pCurDevObj: int, in_sdv_168: int, in_pExtension: int, in_oldIrql: int, in_Tmp_185: int, in_PConfig: int) returns (out_sdv_156: int, out_pCurDevObj: int, out_sdv_168: int, out_pExtension: int, out_oldIrql: int, out_Tmp_185: int);
  modifies alloc, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, Mem_T.INT4, sdv_irql_previous_5;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_sdv_156 == 0 || out_sdv_156 == 2 || out_sdv_156 == 1 || out_sdv_156 == in_sdv_156;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyClose_loop_L114(in_extension_2: int, in_vslice_dummy_var_179: int) returns (out_vslice_dummy_var_179: int)
{

  entry:
    out_vslice_dummy_var_179 := in_vslice_dummy_var_179;
    goto L114, exit;

  exit:
    return;

  L114:
    call {:si_unique_call 2528} out_vslice_dummy_var_179 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} in_extension_2 != 0;
    assume in_extension_2 > 0;
    goto anon32_Then;

  anon32_Then:
    goto anon32_Then_dummy;

  anon32_Then_dummy:
    call {:si_unique_call 2529} {:si_old_unique_call 1} out_vslice_dummy_var_179 := CyyClose_loop_L114(in_extension_2, out_vslice_dummy_var_179);
    return;
}



procedure {:LoopProcedure} CyyClose_loop_L114(in_extension_2: int, in_vslice_dummy_var_179: int) returns (out_vslice_dummy_var_179: int);
  free ensures {:va_keep} out_vslice_dummy_var_179 == 0 || out_vslice_dummy_var_179 == -1073741823 || out_vslice_dummy_var_179 == in_vslice_dummy_var_179;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyClose_loop_L82(in_i: int, in_vslice_dummy_var_176: int) returns (out_i: int, out_vslice_dummy_var_176: int)
{

  entry:
    out_i, out_vslice_dummy_var_176 := in_i, in_vslice_dummy_var_176;
    goto L82, exit;

  exit:
    return;

  L82:
    assume {:CounterLoop 12} {:Counter "i"} true;
    goto anon29_Else;

  anon29_Else:
    assume {:partition} 12 > out_i;
    call {:si_unique_call 2530} out_vslice_dummy_var_176 := KeDelayExecutionThread(0, 0, 0);
    out_i := out_i + 1;
    goto anon29_Else_dummy;

  anon29_Else_dummy:
    havoc out_i;
    return;
}



procedure {:LoopProcedure} CyyClose_loop_L82(in_i: int, in_vslice_dummy_var_176: int) returns (out_i: int, out_vslice_dummy_var_176: int);
  free ensures {:va_keep} out_vslice_dummy_var_176 == 0 || out_vslice_dummy_var_176 == -1073741823 || out_vslice_dummy_var_176 == in_vslice_dummy_var_176;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyGetPortInfo_loop_L52(in_i_1: int, in_count: int, in_pPartialResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int)
{

  entry:
    out_i_1 := in_i_1;
    goto L52, exit;

  exit:
    return;

  L52:
    goto anon58_Else;

  anon58_Else:
    assume {:partition} in_count > out_i_1;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto L62;

  L62:
    out_i_1 := out_i_1 + 1;
    goto L62_dummy;

  L62_dummy:
    call {:si_unique_call 2531} {:si_old_unique_call 1} out_i_1 := CyyGetPortInfo_loop_L52(out_i_1, in_count, in_pPartialResourceDesc, in_PConfig_1);
    return;

  anon74_Then:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L62;

  anon60_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L62;

  anon59_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    goto L62;

  anon78_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    goto L62;
}



procedure {:LoopProcedure} CyyGetPortInfo_loop_L52(in_i_1: int, in_count: int, in_pPartialResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyGetPortInfo_loop_L79(in_i_1: int, in_count: int, in_pPartialTrResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int)
{

  entry:
    out_i_1 := in_i_1;
    goto L79, exit;

  exit:
    return;

  L79:
    goto anon61_Else;

  anon61_Else:
    assume {:partition} in_count > out_i_1;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto L88;

  L88:
    out_i_1 := out_i_1 + 1;
    goto L88_dummy;

  L88_dummy:
    call {:si_unique_call 2532} {:si_old_unique_call 1} out_i_1 := CyyGetPortInfo_loop_L79(out_i_1, in_count, in_pPartialTrResourceDesc, in_PConfig_1);
    return;

  anon75_Then:
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L88;

  anon63_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L88;

  anon62_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L88;
}



procedure {:LoopProcedure} CyyGetPortInfo_loop_L79(in_i_1: int, in_count: int, in_pPartialTrResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyCompareString_loop_L3(in_PString1: int, in_PString2: int, in_Count: int) returns (out_Count: int)
{

  entry:
    out_Count := in_Count;
    goto L3, exit;

  exit:
    return;

  L3:
    assume {:nonnull} in_PString1 != 0;
    assume in_PString1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Mem_T.INT4[in_PString1] != 0;
    goto L5;

  L5:
    assume {:nonnull} in_PString1 != 0;
    assume in_PString1 > 0;
    assume {:nonnull} in_PString2 != 0;
    assume in_PString2 > 0;
    goto anon11_Then;

  anon11_Then:
    assume {:partition} Mem_T.INT4[in_PString1] == Mem_T.INT4[in_PString2];
    out_Count := out_Count - 1;
    goto anon12_Then;

  anon12_Then:
    assume {:partition} out_Count != 0;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    havoc out_Count;
    return;

  anon9_Then:
    assume {:partition} Mem_T.INT4[in_PString1] == 0;
    assume {:nonnull} in_PString2 != 0;
    assume in_PString2 > 0;
    goto anon10_Then;

  anon10_Then:
    assume {:partition} Mem_T.INT4[in_PString2] != 0;
    goto L5;
}



procedure {:LoopProcedure} CyyCompareString_loop_L3(in_PString1: int, in_PString2: int, in_Count: int) returns (out_Count: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyPnpDispatch_loop_L179(in_allocLen: int, in_sdv_533: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int)
{

  entry:
    out_allocLen, out_curStrLen := in_allocLen, in_curStrLen;
    goto L179, exit;

  exit:
    return;

  L179:
    out_curStrLen := in_sdv_533;
    goto anon208_Else;

  anon208_Else:
    assume {:partition} out_curStrLen != 0;
    out_allocLen := out_allocLen + out_curStrLen * 2 + 2;
    goto anon208_Else_dummy;

  anon208_Else_dummy:
    havoc out_allocLen;
    return;
}



procedure {:LoopProcedure} CyyPnpDispatch_loop_L179(in_allocLen: int, in_sdv_533: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int);
  free ensures {:va_keep} out_curStrLen == in_sdv_533 || out_curStrLen == in_curStrLen;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyPnpDispatch_loop_L353(in_gotMemory: int, in_pResList: int, in_pDevExt_16: int, in_Tmp_566: int, in_Tmp_571: int, in_Tmp_573: int, in_pLowerDevObj_5: int, in_gotInt: int, in_pResDesc: int, in_Tmp_597: int, in_Tmp_600: int, in_j: int, in_Tmp_612: int, in_gotRuntime: int, in_vslice_dummy_var_383: int, in_vslice_dummy_var_384: int, in_vslice_dummy_var_385: int, in_vslice_dummy_var_386: int) returns (out_gotMemory: int, out_Tmp_566: int, out_Tmp_571: int, out_Tmp_573: int, out_gotInt: int, out_pResDesc: int, out_Tmp_597: int, out_Tmp_600: int, out_j: int, out_Tmp_612: int, out_gotRuntime: int, out_vslice_dummy_var_383: int, out_vslice_dummy_var_384: int, out_vslice_dummy_var_385: int, out_vslice_dummy_var_386: int)
{

  entry:
    out_gotMemory, out_Tmp_566, out_Tmp_571, out_Tmp_573, out_gotInt, out_pResDesc, out_Tmp_597, out_Tmp_600, out_j, out_Tmp_612, out_gotRuntime, out_vslice_dummy_var_383, out_vslice_dummy_var_384, out_vslice_dummy_var_385, out_vslice_dummy_var_386 := in_gotMemory, in_Tmp_566, in_Tmp_571, in_Tmp_573, in_gotInt, in_pResDesc, in_Tmp_597, in_Tmp_600, in_j, in_Tmp_612, in_gotRuntime, in_vslice_dummy_var_383, in_vslice_dummy_var_384, in_vslice_dummy_var_385, in_vslice_dummy_var_386;
    goto L353, exit;

  exit:
    return;

  L353:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon155_Else;

  anon155_Else:
    out_Tmp_571 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_612;
    out_pResDesc := out_Tmp_612 + out_Tmp_571 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L370;

  L370:
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} out_gotRuntime != 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} out_gotMemory != 0;
    goto anon159_Else;

  anon159_Else:
    assume {:partition} out_gotInt == 0;
    goto L371;

  L371:
    out_j := out_j + 1;
    goto L371_dummy;

  L371_dummy:
    call {:si_unique_call 2537} {:si_old_unique_call 1} out_gotMemory, out_Tmp_566, out_Tmp_571, out_Tmp_573, out_gotInt, out_pResDesc, out_Tmp_597, out_Tmp_600, out_j, out_Tmp_612, out_gotRuntime, out_vslice_dummy_var_383, out_vslice_dummy_var_384, out_vslice_dummy_var_385, out_vslice_dummy_var_386 := CyyPnpDispatch_loop_L353(out_gotMemory, in_pResList, in_pDevExt_16, out_Tmp_566, out_Tmp_571, out_Tmp_573, in_pLowerDevObj_5, out_gotInt, out_pResDesc, out_Tmp_597, out_Tmp_600, out_j, out_Tmp_612, out_gotRuntime, out_vslice_dummy_var_383, out_vslice_dummy_var_384, out_vslice_dummy_var_385, out_vslice_dummy_var_386);
    return;

  anon158_Then:
    assume {:partition} out_gotMemory == 0;
    goto L371;

  anon157_Then:
    assume {:partition} out_gotRuntime == 0;
    goto L371;

  anon191_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    out_gotRuntime := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_597 := strConst__li2bpl182;
    call {:si_unique_call 2533} out_vslice_dummy_var_385 := CyyDbgPrintEx(12, out_Tmp_597);
    goto L370;

  anon156_Then:
    out_gotMemory := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_600 := strConst__li2bpl183;
    call {:si_unique_call 2534} out_vslice_dummy_var_386 := CyyDbgPrintEx(12, out_Tmp_600);
    goto L370;

  anon192_Then:
    out_gotInt := 1;
    assume {:nonnull} in_pDevExt_16 != 0;
    assume in_pDevExt_16 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_566 := strConst__li2bpl181;
    call {:si_unique_call 2535} out_vslice_dummy_var_384 := CyyDbgPrintEx(12, out_Tmp_566);
    goto L370;

  anon205_Then:
    goto L370;

  anon204_Then:
    out_Tmp_573 := strConst__li2bpl162;
    call {:si_unique_call 2536} out_vslice_dummy_var_383 := CyyDbgPrintEx(12, out_Tmp_573);
    goto L370;
}



procedure {:LoopProcedure} CyyPnpDispatch_loop_L353(in_gotMemory: int, in_pResList: int, in_pDevExt_16: int, in_Tmp_566: int, in_Tmp_571: int, in_Tmp_573: int, in_pLowerDevObj_5: int, in_gotInt: int, in_pResDesc: int, in_Tmp_597: int, in_Tmp_600: int, in_j: int, in_Tmp_612: int, in_gotRuntime: int, in_vslice_dummy_var_383: int, in_vslice_dummy_var_384: int, in_vslice_dummy_var_385: int, in_vslice_dummy_var_386: int) returns (out_gotMemory: int, out_Tmp_566: int, out_Tmp_571: int, out_Tmp_573: int, out_gotInt: int, out_pResDesc: int, out_Tmp_597: int, out_Tmp_600: int, out_j: int, out_Tmp_612: int, out_gotRuntime: int, out_vslice_dummy_var_383: int, out_vslice_dummy_var_384: int, out_vslice_dummy_var_385: int, out_vslice_dummy_var_386: int);
  free ensures {:va_keep} out_gotMemory == 1 || out_gotMemory == in_gotMemory;
  free ensures {:va_keep} out_gotInt == 1 || out_gotInt == in_gotInt;
  free ensures {:va_keep} out_gotRuntime == 1 || out_gotRuntime == in_gotRuntime;
  free ensures {:va_keep} out_vslice_dummy_var_383 == 0 || out_vslice_dummy_var_383 == in_vslice_dummy_var_383;
  free ensures {:va_keep} out_vslice_dummy_var_384 == 0 || out_vslice_dummy_var_384 == in_vslice_dummy_var_384;
  free ensures {:va_keep} out_vslice_dummy_var_385 == 0 || out_vslice_dummy_var_385 == in_vslice_dummy_var_385;
  free ensures {:va_keep} out_vslice_dummy_var_386 == 0 || out_vslice_dummy_var_386 == in_vslice_dummy_var_386;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyPnpDispatch_loop_L344(in_gotMemory: int, in_pResList: int, in_pDevExt_16: int, in_Tmp_564: int, in_Tmp_566: int, in_Tmp_571: int, in_Tmp_573: int, in_pLowerDevObj_5: int, in_gotInt: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_597: int, in_Tmp_600: int, in_j: int, in_Tmp_612: int, in_gotRuntime: int, in_vslice_dummy_var_382: int, in_vslice_dummy_var_383: int, in_vslice_dummy_var_384: int, in_vslice_dummy_var_385: int, in_vslice_dummy_var_386: int) returns (out_gotMemory: int, out_Tmp_564: int, out_Tmp_566: int, out_Tmp_571: int, out_Tmp_573: int, out_gotInt: int, out_pResDesc: int, out_listNum: int, out_Tmp_597: int, out_Tmp_600: int, out_j: int, out_Tmp_612: int, out_gotRuntime: int, out_vslice_dummy_var_382: int, out_vslice_dummy_var_383: int, out_vslice_dummy_var_384: int, out_vslice_dummy_var_385: int, out_vslice_dummy_var_386: int)
{

  entry:
    out_gotMemory, out_Tmp_564, out_Tmp_566, out_Tmp_571, out_Tmp_573, out_gotInt, out_pResDesc, out_listNum, out_Tmp_597, out_Tmp_600, out_j, out_Tmp_612, out_gotRuntime, out_vslice_dummy_var_382, out_vslice_dummy_var_383, out_vslice_dummy_var_384, out_vslice_dummy_var_385, out_vslice_dummy_var_386 := in_gotMemory, in_Tmp_564, in_Tmp_566, in_Tmp_571, in_Tmp_573, in_gotInt, in_pResDesc, in_listNum, in_Tmp_597, in_Tmp_600, in_j, in_Tmp_612, in_gotRuntime, in_vslice_dummy_var_382, in_vslice_dummy_var_383, in_vslice_dummy_var_384, in_vslice_dummy_var_385, in_vslice_dummy_var_386;
    goto L344, exit;

  exit:
    return;

  L344:
    assume {:nonnull} in_pReqList != 0;
    assume in_pReqList > 0;
    goto anon154_Else;

  anon154_Else:
    out_gotRuntime := 0;
    out_gotMemory := 0;
    out_gotInt := 0;
    out_Tmp_564 := strConst__li2bpl180;
    call {:si_unique_call 2539} out_vslice_dummy_var_382 := CyyDbgPrintEx(12, out_Tmp_564);
    out_j := 0;
    goto L353;

  L353:
    call {:si_unique_call 2538} out_gotMemory, out_Tmp_566, out_Tmp_571, out_Tmp_573, out_gotInt, out_pResDesc, out_Tmp_597, out_Tmp_600, out_j, out_Tmp_612, out_gotRuntime, out_vslice_dummy_var_383, out_vslice_dummy_var_384, out_vslice_dummy_var_385, out_vslice_dummy_var_386 := CyyPnpDispatch_loop_L353(out_gotMemory, in_pResList, in_pDevExt_16, out_Tmp_566, out_Tmp_571, out_Tmp_573, in_pLowerDevObj_5, out_gotInt, out_pResDesc, out_Tmp_597, out_Tmp_600, out_j, out_Tmp_612, out_gotRuntime, out_vslice_dummy_var_383, out_vslice_dummy_var_384, out_vslice_dummy_var_385, out_vslice_dummy_var_386);
    goto L353_last;

  L353_last:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    out_Tmp_571 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_612;
    out_pResDesc := out_Tmp_612 + out_Tmp_571 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    goto L370;

  L370:
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} out_gotRuntime != 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} out_gotMemory != 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:partition} out_gotInt == 0;
    goto L371;

  L371:
    out_j := out_j + 1;
    assume false;
    return;

  anon159_Then:
    assume {:partition} out_gotInt != 0;
    goto L354;

  L354:
    out_listNum := out_listNum + 1;
    goto L354_dummy;

  L354_dummy:
    call {:si_unique_call 2544} {:si_old_unique_call 1} out_gotMemory, out_Tmp_564, out_Tmp_566, out_Tmp_571, out_Tmp_573, out_gotInt, out_pResDesc, out_listNum, out_Tmp_597, out_Tmp_600, out_j, out_Tmp_612, out_gotRuntime, out_vslice_dummy_var_382, out_vslice_dummy_var_383, out_vslice_dummy_var_384, out_vslice_dummy_var_385, out_vslice_dummy_var_386 := CyyPnpDispatch_loop_L344(out_gotMemory, in_pResList, in_pDevExt_16, out_Tmp_564, out_Tmp_566, out_Tmp_571, out_Tmp_573, in_pLowerDevObj_5, out_gotInt, out_pResDesc, out_listNum, in_pReqList, out_Tmp_597, out_Tmp_600, out_j, out_Tmp_612, out_gotRuntime, out_vslice_dummy_var_382, out_vslice_dummy_var_383, out_vslice_dummy_var_384, out_vslice_dummy_var_385, out_vslice_dummy_var_386);
    return;

  anon158_Then:
    assume {:partition} out_gotMemory == 0;
    goto L371;

  anon157_Then:
    assume {:partition} out_gotRuntime == 0;
    goto L371;

  anon191_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    out_gotRuntime := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_597 := strConst__li2bpl182;
    call {:si_unique_call 2540} out_vslice_dummy_var_385 := CyyDbgPrintEx(12, out_Tmp_597);
    goto L370;

  anon156_Then:
    out_gotMemory := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_600 := strConst__li2bpl183;
    call {:si_unique_call 2541} out_vslice_dummy_var_386 := CyyDbgPrintEx(12, out_Tmp_600);
    goto L370;

  anon192_Then:
    out_gotInt := 1;
    assume {:nonnull} in_pDevExt_16 != 0;
    assume in_pDevExt_16 > 0;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_566 := strConst__li2bpl181;
    call {:si_unique_call 2542} out_vslice_dummy_var_384 := CyyDbgPrintEx(12, out_Tmp_566);
    goto L370;

  anon205_Then:
    goto L370;

  anon204_Then:
    out_Tmp_573 := strConst__li2bpl162;
    call {:si_unique_call 2543} out_vslice_dummy_var_383 := CyyDbgPrintEx(12, out_Tmp_573);
    goto L370;

  anon155_Then:
    goto L354;
}



procedure {:LoopProcedure} CyyPnpDispatch_loop_L344(in_gotMemory: int, in_pResList: int, in_pDevExt_16: int, in_Tmp_564: int, in_Tmp_566: int, in_Tmp_571: int, in_Tmp_573: int, in_pLowerDevObj_5: int, in_gotInt: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_597: int, in_Tmp_600: int, in_j: int, in_Tmp_612: int, in_gotRuntime: int, in_vslice_dummy_var_382: int, in_vslice_dummy_var_383: int, in_vslice_dummy_var_384: int, in_vslice_dummy_var_385: int, in_vslice_dummy_var_386: int) returns (out_gotMemory: int, out_Tmp_564: int, out_Tmp_566: int, out_Tmp_571: int, out_Tmp_573: int, out_gotInt: int, out_pResDesc: int, out_listNum: int, out_Tmp_597: int, out_Tmp_600: int, out_j: int, out_Tmp_612: int, out_gotRuntime: int, out_vslice_dummy_var_382: int, out_vslice_dummy_var_383: int, out_vslice_dummy_var_384: int, out_vslice_dummy_var_385: int, out_vslice_dummy_var_386: int);
  free ensures {:va_keep} out_gotMemory == 1 || out_gotMemory == 0 || out_gotMemory == in_gotMemory;
  free ensures {:va_keep} out_gotInt == 1 || out_gotInt == 0 || out_gotInt == in_gotInt;
  free ensures {:va_keep} out_gotRuntime == 1 || out_gotRuntime == 0 || out_gotRuntime == in_gotRuntime;
  free ensures {:va_keep} out_vslice_dummy_var_382 == 0 || out_vslice_dummy_var_382 == in_vslice_dummy_var_382;
  free ensures {:va_keep} out_vslice_dummy_var_383 == 0 || out_vslice_dummy_var_383 == in_vslice_dummy_var_383;
  free ensures {:va_keep} out_vslice_dummy_var_384 == 0 || out_vslice_dummy_var_384 == in_vslice_dummy_var_384;
  free ensures {:va_keep} out_vslice_dummy_var_385 == 0 || out_vslice_dummy_var_385 == in_vslice_dummy_var_385;
  free ensures {:va_keep} out_vslice_dummy_var_386 == 0 || out_vslice_dummy_var_386 == in_vslice_dummy_var_386;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:SIextraRecBound 5} CyyPnpDispatch_loop_L465(in_Tmp_553: int, in_pDevExt_16: int, in_cap_1: int, in_Tmp_589: int, in_Tmp_590: int, in_pDevCaps: int, in_Tmp_628: int) returns (out_Tmp_553: int, out_cap_1: int, out_Tmp_589: int, out_Tmp_590: int, out_Tmp_628: int)
{

  entry:
    out_Tmp_553, out_cap_1, out_Tmp_589, out_Tmp_590, out_Tmp_628 := in_Tmp_553, in_cap_1, in_Tmp_589, in_Tmp_590, in_Tmp_628;
    goto L465, exit;

  exit:
    return;

  L465:
    assume {:CounterLoop 5} {:Counter "cap_1"} true;
    goto anon161_Else;

  anon161_Else:
    assume {:partition} 7 > out_cap_1;
    out_Tmp_628 := out_cap_1;
    assume {:nonnull} in_pDevExt_16 != 0;
    assume in_pDevExt_16 > 0;
    havoc out_Tmp_590;
    out_Tmp_553 := out_cap_1;
    assume {:nonnull} in_pDevCaps != 0;
    assume in_pDevCaps > 0;
    havoc out_Tmp_589;
    assume {:nonnull} out_Tmp_589 != 0;
    assume out_Tmp_589 > 0;
    assume {:nonnull} out_Tmp_590 != 0;
    assume out_Tmp_590 > 0;
    Mem_T.INT4[out_Tmp_590 + out_Tmp_628 * 4] := Mem_T.INT4[out_Tmp_589 + out_Tmp_553 * 4];
    out_cap_1 := out_cap_1 + 1;
    goto anon161_Else_dummy;

  anon161_Else_dummy:
    call {:si_unique_call 2545} {:si_old_unique_call 1} out_Tmp_553, out_cap_1, out_Tmp_589, out_Tmp_590, out_Tmp_628 := CyyPnpDispatch_loop_L465(out_Tmp_553, in_pDevExt_16, out_cap_1, out_Tmp_589, out_Tmp_590, in_pDevCaps, out_Tmp_628);
    return;
}



procedure {:LoopProcedure} CyyPnpDispatch_loop_L465(in_Tmp_553: int, in_pDevExt_16: int, in_cap_1: int, in_Tmp_589: int, in_Tmp_590: int, in_pDevCaps: int, in_Tmp_628: int) returns (out_Tmp_553: int, out_cap_1: int, out_Tmp_589: int, out_Tmp_590: int, out_Tmp_628: int);
  modifies Mem_T.INT4;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyStartPurge_loop_L5(in_Tmp_646: int, in_Tmp_647: int, in_Mask_2: int, in_Tmp_648: int, in_OldIrql_5: int, in_NewIrp_1: int, in_Tmp_649: int, in_Tmp_650: int, in_Extension_11: int, in_vslice_dummy_var_408: int) returns (out_Tmp_646: int, out_Tmp_647: int, out_Mask_2: int, out_Tmp_648: int, out_OldIrql_5: int, out_Tmp_649: int, out_Tmp_650: int, out_vslice_dummy_var_408: int)
{
  var vslice_dummy_var_1350: int;
  var vslice_dummy_var_1351: int;
  var vslice_dummy_var_1352: int;

  entry:
    out_Tmp_646, out_Tmp_647, out_Mask_2, out_Tmp_648, out_OldIrql_5, out_Tmp_649, out_Tmp_650, out_vslice_dummy_var_408 := in_Tmp_646, in_Tmp_647, in_Mask_2, in_Tmp_648, in_OldIrql_5, in_Tmp_649, in_Tmp_650, in_vslice_dummy_var_408;
    goto L5, exit;

  exit:
    return;

  L5:
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    havoc out_Tmp_650;
    assume {:nonnull} out_Tmp_650 != 0;
    assume out_Tmp_650 > 0;
    havoc out_Tmp_649;
    assume {:nonnull} out_Tmp_649 != 0;
    assume out_Tmp_649 > 0;
    out_Mask_2 := Mem_T.INT4[out_Tmp_649];
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} BAND(out_Mask_2, 1) != 0;
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    havoc vslice_dummy_var_1351;
    call {:si_unique_call 2552} CyyKillAllReadsOrWrites(vslice_dummy_var_1351, WriteQueue__CYY_DEVICE_EXTENSION(in_Extension_11), CurrentWriteIrp__CYY_DEVICE_EXTENSION(in_Extension_11));
    goto anon19_Else;

  anon19_Else:
    assume {:partition} yogi_error != 1;
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    havoc vslice_dummy_var_1350;
    call {:si_unique_call 2551} CyyKillAllReadsOrWrites(vslice_dummy_var_1350, WriteQueue__CYY_DEVICE_EXTENSION(in_Extension_11), CurrentXoffIrp__CYY_DEVICE_EXTENSION(in_Extension_11));
    goto anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L7;

  L7:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} BAND(out_Mask_2, 2) != 0;
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    havoc vslice_dummy_var_1352;
    call {:si_unique_call 2553} CyyKillAllReadsOrWrites(vslice_dummy_var_1352, ReadQueue__CYY_DEVICE_EXTENSION(in_Extension_11), CurrentReadIrp__CYY_DEVICE_EXTENSION(in_Extension_11));
    goto anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L14;

  L14:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} BAND(out_Mask_2, 8) != 0;
    call {:si_unique_call 2547} out_Tmp_648 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_648 != 0;
    assume out_Tmp_648 > 0;
    Mem_T.INT4[out_Tmp_648] := out_OldIrql_5;
    call {:si_unique_call 2548} sdv_KeAcquireSpinLock(0, out_Tmp_648);
    assume {:nonnull} out_Tmp_648 != 0;
    assume out_Tmp_648 > 0;
    out_OldIrql_5 := Mem_T.INT4[out_Tmp_648];
    call {:si_unique_call 2549} out_vslice_dummy_var_408 := KeSynchronizeExecution(0, li2bplFunctionConstant437, 0);
    call {:si_unique_call 2550} sdv_KeReleaseSpinLock(0, out_OldIrql_5);
    goto L18;

  L18:
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    havoc out_Tmp_647;
    assume {:nonnull} out_Tmp_647 != 0;
    assume out_Tmp_647 > 0;
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    havoc out_Tmp_646;
    assume {:nonnull} out_Tmp_646 != 0;
    assume out_Tmp_646 > 0;
    assume {:nonnull} in_Extension_11 != 0;
    assume in_Extension_11 > 0;
    call {:si_unique_call 2546} CyyGetNextIrp(CurrentPurgeIrp__CYY_DEVICE_EXTENSION(in_Extension_11), PurgeQueue__CYY_DEVICE_EXTENSION(in_Extension_11), in_NewIrp_1, 1, in_Extension_11);
    assume {:nonnull} in_NewIrp_1 != 0;
    assume in_NewIrp_1 > 0;
    goto anon17_Then;

  anon17_Then:
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    call {:si_unique_call 2554} {:si_old_unique_call 1} out_Tmp_646, out_Tmp_647, out_Mask_2, out_Tmp_648, out_OldIrql_5, out_Tmp_649, out_Tmp_650, out_vslice_dummy_var_408 := CyyStartPurge_loop_L5(out_Tmp_646, out_Tmp_647, out_Mask_2, out_Tmp_648, out_OldIrql_5, in_NewIrp_1, out_Tmp_649, out_Tmp_650, in_Extension_11, out_vslice_dummy_var_408);
    return;

  anon16_Then:
    assume {:partition} BAND(out_Mask_2, 8) == 0;
    goto L18;

  anon15_Then:
    assume {:partition} BAND(out_Mask_2, 2) == 0;
    goto L14;

  anon18_Then:
    assume {:partition} BAND(out_Mask_2, 1) == 0;
    goto L7;
}



procedure {:LoopProcedure} CyyStartPurge_loop_L5(in_Tmp_646: int, in_Tmp_647: int, in_Mask_2: int, in_Tmp_648: int, in_OldIrql_5: int, in_NewIrp_1: int, in_Tmp_649: int, in_Tmp_650: int, in_Extension_11: int, in_vslice_dummy_var_408: int) returns (out_Tmp_646: int, out_Tmp_647: int, out_Mask_2: int, out_Tmp_648: int, out_OldIrql_5: int, out_Tmp_649: int, out_Tmp_650: int, out_vslice_dummy_var_408: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} out_vslice_dummy_var_408 == 1 || out_vslice_dummy_var_408 == 0 || out_vslice_dummy_var_408 == in_vslice_dummy_var_408;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyKillAllStalled_loop_L10(in_currentLastIrp: int, in_Tmp_653: int, in_cancelIrql: int, in_pDevExt_17: int, in_sdv_570: int, in_sdv_571: int, in_cancelRoutine_1: int, in_PDevObj_15: int, in_vslice_dummy_var_411: int, in_vslice_dummy_var_412: int, in_vslice_dummy_var_413: int, in_vslice_dummy_var_414: int, in_vslice_dummy_var_415: int) returns (out_currentLastIrp: int, out_Tmp_653: int, out_cancelIrql: int, out_sdv_570: int, out_sdv_571: int, out_cancelRoutine_1: int, out_vslice_dummy_var_411: int, out_vslice_dummy_var_412: int, out_vslice_dummy_var_413: int, out_vslice_dummy_var_414: int, out_vslice_dummy_var_415: int)
{
  var vslice_dummy_var_1353: int;

  entry:
    out_currentLastIrp, out_Tmp_653, out_cancelIrql, out_sdv_570, out_sdv_571, out_cancelRoutine_1, out_vslice_dummy_var_411, out_vslice_dummy_var_412, out_vslice_dummy_var_413, out_vslice_dummy_var_414, out_vslice_dummy_var_415 := in_currentLastIrp, in_Tmp_653, in_cancelIrql, in_sdv_570, in_sdv_571, in_cancelRoutine_1, in_vslice_dummy_var_411, in_vslice_dummy_var_412, in_vslice_dummy_var_413, in_vslice_dummy_var_414, in_vslice_dummy_var_415;
    goto L10, exit;

  exit:
    return;

  L10:
    call {:si_unique_call 2555} out_sdv_570 := sdv_IsListEmpty(0);
    goto anon27_Else;

  anon27_Else:
    assume {:partition} out_sdv_570 == 0;
    assume {:nonnull} in_pDevExt_17 != 0;
    assume in_pDevExt_17 > 0;
    havoc vslice_dummy_var_1353;
    call {:si_unique_call 2566} out_sdv_571 := sdv_containing_record(vslice_dummy_var_1353, 88);
    out_currentLastIrp := out_sdv_571;
    call {:si_unique_call 2567} out_vslice_dummy_var_411 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    out_cancelRoutine_1 := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(out_currentLastIrp)];
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(out_currentLastIrp)] := out_cancelIrql;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(out_currentLastIrp)] := 0;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 2558} CyyCancelCurrentWrite(in_PDevObj_15, out_currentLastIrp);
    goto L32;

  L32:
    call {:si_unique_call 2556} out_Tmp_653 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_653 != 0;
    assume out_Tmp_653 > 0;
    Mem_T.INT4[out_Tmp_653] := out_cancelIrql;
    call {:si_unique_call 2557} IoAcquireCancelSpinLock(out_Tmp_653);
    assume {:nonnull} out_Tmp_653 != 0;
    assume out_Tmp_653 > 0;
    out_cancelIrql := Mem_T.INT4[out_Tmp_653];
    goto L32_dummy;

  L32_dummy:
    call {:si_unique_call 2570} {:si_old_unique_call 1} out_currentLastIrp, out_Tmp_653, out_cancelIrql, out_sdv_570, out_sdv_571, out_cancelRoutine_1, out_vslice_dummy_var_411, out_vslice_dummy_var_412, out_vslice_dummy_var_413, out_vslice_dummy_var_414, out_vslice_dummy_var_415 := CyyKillAllStalled_loop_L10(out_currentLastIrp, out_Tmp_653, out_cancelIrql, in_pDevExt_17, out_sdv_570, out_sdv_571, out_cancelRoutine_1, in_PDevObj_15, out_vslice_dummy_var_411, out_vslice_dummy_var_412, out_vslice_dummy_var_413, out_vslice_dummy_var_414, out_vslice_dummy_var_415);
    return;

  anon35_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant199;
    call {:si_unique_call 2559} CyyCancelCurrentXoff(in_PDevObj_15, out_currentLastIrp);
    goto L32;

  anon34_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant125;
    call {:si_unique_call 2560} CyyCancelImmediate(in_PDevObj_15, out_currentLastIrp);
    goto L32;

  anon33_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 2561} CyyCancelQueued(in_PDevObj_15, out_currentLastIrp);
    goto L32;

  anon32_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant179;
    call {:si_unique_call 2562} CyyCancelWait(in_PDevObj_15, out_currentLastIrp);
    goto L32;

  anon31_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 2563} CyyFilterCancelQueued(in_PDevObj_15, out_currentLastIrp);
    goto L32;

  anon30_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant321;
    call {:si_unique_call 2564} out_vslice_dummy_var_415 := CyyInternalIoControl(in_PDevObj_15, out_currentLastIrp);
    goto L32;

  anon29_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant325;
    call {:si_unique_call 2569} out_vslice_dummy_var_414 := CyyQueryInformationFile(in_PDevObj_15, out_currentLastIrp);
    goto anon39_Else;

  anon39_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon28_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant326;
    call {:si_unique_call 2568} out_vslice_dummy_var_413 := CyySetInformationFile(in_PDevObj_15, out_currentLastIrp);
    goto anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto L32;

  anon36_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant266;
    call {:si_unique_call 2565} out_vslice_dummy_var_412 := CyySystemControlDispatch(in_PDevObj_15, out_currentLastIrp);
    goto anon37_Else;

  anon37_Else:
    assume {:partition} yogi_error != 1;
    goto L32;
}



procedure {:LoopProcedure} CyyKillAllStalled_loop_L10(in_currentLastIrp: int, in_Tmp_653: int, in_cancelIrql: int, in_pDevExt_17: int, in_sdv_570: int, in_sdv_571: int, in_cancelRoutine_1: int, in_PDevObj_15: int, in_vslice_dummy_var_411: int, in_vslice_dummy_var_412: int, in_vslice_dummy_var_413: int, in_vslice_dummy_var_414: int, in_vslice_dummy_var_415: int) returns (out_currentLastIrp: int, out_Tmp_653: int, out_cancelIrql: int, out_sdv_570: int, out_sdv_571: int, out_cancelRoutine_1: int, out_vslice_dummy_var_411: int, out_vslice_dummy_var_412: int, out_vslice_dummy_var_413: int, out_vslice_dummy_var_414: int, out_vslice_dummy_var_415: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} out_sdv_570 == 1 || out_sdv_570 == 0 || out_sdv_570 == in_sdv_570;
  free ensures {:va_keep} out_vslice_dummy_var_411 == 1 || out_vslice_dummy_var_411 == 0 || out_vslice_dummy_var_411 == in_vslice_dummy_var_411;
  free ensures {:va_keep} out_vslice_dummy_var_415 == 0 || out_vslice_dummy_var_415 == -1073741536 || out_vslice_dummy_var_415 == 259 || out_vslice_dummy_var_415 == -1073741738 || out_vslice_dummy_var_415 == -1073741811 || out_vslice_dummy_var_415 == -1073741789 || out_vslice_dummy_var_415 == -1073741637 || out_vslice_dummy_var_415 == in_vslice_dummy_var_415;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyUnstallIrps_loop_L16(in_Tmp_659: int, in_Tmp_660: int, in_sdv_579: int, in_Tmp_661: int, in_oldIrql_5: int, in_pIrpStack_6: int, in_Tmp_663: int, in_pIrp_1: int, in_pDevObj_2: int, in_pDrvObj_1: int, in_pIrpLink: int, in_PDevExt_8: int, in_vslice_dummy_var_420: int, in_vslice_dummy_var_421: int, in_vslice_dummy_var_422: int, in_vslice_dummy_var_423: int, in_vslice_dummy_var_424: int, in_vslice_dummy_var_425: int, in_vslice_dummy_var_426: int, in_vslice_dummy_var_427: int, in_vslice_dummy_var_428: int, in_vslice_dummy_var_429: int, in_vslice_dummy_var_430: int, in_vslice_dummy_var_431: int, in_vslice_dummy_var_432: int, in_vslice_dummy_var_433: int, in_vslice_dummy_var_434: int, in_vslice_dummy_var_435: int, in_vslice_dummy_var_436: int, in_vslice_dummy_var_437: int, in_vslice_dummy_var_438: int, in_vslice_dummy_var_439: int, in_vslice_dummy_var_440: int, in_vslice_dummy_var_441: int, in_vslice_dummy_var_442: int, in_vslice_dummy_var_443: int, in_vslice_dummy_var_444: int, in_vslice_dummy_var_445: int, in_vslice_dummy_var_446: int, in_vslice_dummy_var_447: int, in_vslice_dummy_var_448: int, in_vslice_dummy_var_449: int, in_vslice_dummy_var_450: int, in_vslice_dummy_var_451: int, in_vslice_dummy_var_452: int, in_vslice_dummy_var_453: int, in_vslice_dummy_var_454: int, in_vslice_dummy_var_455: int, in_vslice_dummy_var_456: int, in_vslice_dummy_var_457: int, in_vslice_dummy_var_458: int, in_vslice_dummy_var_459: int, in_vslice_dummy_var_460: int, in_vslice_dummy_var_461: int, in_vslice_dummy_var_462: int, in_vslice_dummy_var_463: int, in_vslice_dummy_var_464: int, in_vslice_dummy_var_465: int, in_vslice_dummy_var_466: int, in_vslice_dummy_var_467: int, in_vslice_dummy_var_468: int, in_vslice_dummy_var_469: int, in_vslice_dummy_var_470: int, in_vslice_dummy_var_471: int, in_vslice_dummy_var_472: int, in_vslice_dummy_var_473: int, in_vslice_dummy_var_474: int, in_vslice_dummy_var_475: int, in_vslice_dummy_var_476: int, in_vslice_dummy_var_477: int, in_vslice_dummy_var_478: int, in_vslice_dummy_var_479: int, in_vslice_dummy_var_480: int, in_vslice_dummy_var_481: int, in_vslice_dummy_var_482: int, in_vslice_dummy_var_483: int, in_vslice_dummy_var_484: int, in_vslice_dummy_var_485: int, in_vslice_dummy_var_486: int) returns (out_Tmp_659: int, out_Tmp_660: int, out_sdv_579: int, out_Tmp_661: int, out_oldIrql_5: int, out_pIrpStack_6: int, out_Tmp_663: int, out_pIrp_1: int, out_pDevObj_2: int, out_pDrvObj_1: int, out_pIrpLink: int, out_vslice_dummy_var_420: int, out_vslice_dummy_var_421: int, out_vslice_dummy_var_422: int, out_vslice_dummy_var_423: int, out_vslice_dummy_var_424: int, out_vslice_dummy_var_425: int, out_vslice_dummy_var_426: int, out_vslice_dummy_var_427: int, out_vslice_dummy_var_428: int, out_vslice_dummy_var_429: int, out_vslice_dummy_var_430: int, out_vslice_dummy_var_431: int, out_vslice_dummy_var_432: int, out_vslice_dummy_var_433: int, out_vslice_dummy_var_434: int, out_vslice_dummy_var_435: int, out_vslice_dummy_var_436: int, out_vslice_dummy_var_437: int, out_vslice_dummy_var_438: int, out_vslice_dummy_var_439: int, out_vslice_dummy_var_440: int, out_vslice_dummy_var_441: int, out_vslice_dummy_var_442: int, out_vslice_dummy_var_443: int, out_vslice_dummy_var_444: int, out_vslice_dummy_var_445: int, out_vslice_dummy_var_446: int, out_vslice_dummy_var_447: int, out_vslice_dummy_var_448: int, out_vslice_dummy_var_449: int, out_vslice_dummy_var_450: int, out_vslice_dummy_var_451: int, out_vslice_dummy_var_452: int, out_vslice_dummy_var_453: int, out_vslice_dummy_var_454: int, out_vslice_dummy_var_455: int, out_vslice_dummy_var_456: int, out_vslice_dummy_var_457: int, out_vslice_dummy_var_458: int, out_vslice_dummy_var_459: int, out_vslice_dummy_var_460: int, out_vslice_dummy_var_461: int, out_vslice_dummy_var_462: int, out_vslice_dummy_var_463: int, out_vslice_dummy_var_464: int, out_vslice_dummy_var_465: int, out_vslice_dummy_var_466: int, out_vslice_dummy_var_467: int, out_vslice_dummy_var_468: int, out_vslice_dummy_var_469: int, out_vslice_dummy_var_470: int, out_vslice_dummy_var_471: int, out_vslice_dummy_var_472: int, out_vslice_dummy_var_473: int, out_vslice_dummy_var_474: int, out_vslice_dummy_var_475: int, out_vslice_dummy_var_476: int, out_vslice_dummy_var_477: int, out_vslice_dummy_var_478: int, out_vslice_dummy_var_479: int, out_vslice_dummy_var_480: int, out_vslice_dummy_var_481: int, out_vslice_dummy_var_482: int, out_vslice_dummy_var_483: int, out_vslice_dummy_var_484: int, out_vslice_dummy_var_485: int, out_vslice_dummy_var_486: int)
{

  entry:
    out_Tmp_659, out_Tmp_660, out_sdv_579, out_Tmp_661, out_oldIrql_5, out_pIrpStack_6, out_Tmp_663, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, out_vslice_dummy_var_420, out_vslice_dummy_var_421, out_vslice_dummy_var_422, out_vslice_dummy_var_423, out_vslice_dummy_var_424, out_vslice_dummy_var_425, out_vslice_dummy_var_426, out_vslice_dummy_var_427, out_vslice_dummy_var_428, out_vslice_dummy_var_429, out_vslice_dummy_var_430, out_vslice_dummy_var_431, out_vslice_dummy_var_432, out_vslice_dummy_var_433, out_vslice_dummy_var_434, out_vslice_dummy_var_435, out_vslice_dummy_var_436, out_vslice_dummy_var_437, out_vslice_dummy_var_438, out_vslice_dummy_var_439, out_vslice_dummy_var_440, out_vslice_dummy_var_441, out_vslice_dummy_var_442, out_vslice_dummy_var_443, out_vslice_dummy_var_444, out_vslice_dummy_var_445, out_vslice_dummy_var_446, out_vslice_dummy_var_447, out_vslice_dummy_var_448, out_vslice_dummy_var_449, out_vslice_dummy_var_450, out_vslice_dummy_var_451, out_vslice_dummy_var_452, out_vslice_dummy_var_453, out_vslice_dummy_var_454, out_vslice_dummy_var_455, out_vslice_dummy_var_456, out_vslice_dummy_var_457, out_vslice_dummy_var_458, out_vslice_dummy_var_459, out_vslice_dummy_var_460, out_vslice_dummy_var_461, out_vslice_dummy_var_462, out_vslice_dummy_var_463, out_vslice_dummy_var_464, out_vslice_dummy_var_465, out_vslice_dummy_var_466, out_vslice_dummy_var_467, out_vslice_dummy_var_468, out_vslice_dummy_var_469, out_vslice_dummy_var_470, out_vslice_dummy_var_471, out_vslice_dummy_var_472, out_vslice_dummy_var_473, out_vslice_dummy_var_474, out_vslice_dummy_var_475, out_vslice_dummy_var_476, out_vslice_dummy_var_477, out_vslice_dummy_var_478, out_vslice_dummy_var_479, out_vslice_dummy_var_480, out_vslice_dummy_var_481, out_vslice_dummy_var_482, out_vslice_dummy_var_483, out_vslice_dummy_var_484, out_vslice_dummy_var_485, out_vslice_dummy_var_486 := in_Tmp_659, in_Tmp_660, in_sdv_579, in_Tmp_661, in_oldIrql_5, in_pIrpStack_6, in_Tmp_663, in_pIrp_1, in_pDevObj_2, in_pDrvObj_1, in_pIrpLink, in_vslice_dummy_var_420, in_vslice_dummy_var_421, in_vslice_dummy_var_422, in_vslice_dummy_var_423, in_vslice_dummy_var_424, in_vslice_dummy_var_425, in_vslice_dummy_var_426, in_vslice_dummy_var_427, in_vslice_dummy_var_428, in_vslice_dummy_var_429, in_vslice_dummy_var_430, in_vslice_dummy_var_431, in_vslice_dummy_var_432, in_vslice_dummy_var_433, in_vslice_dummy_var_434, in_vslice_dummy_var_435, in_vslice_dummy_var_436, in_vslice_dummy_var_437, in_vslice_dummy_var_438, in_vslice_dummy_var_439, in_vslice_dummy_var_440, in_vslice_dummy_var_441, in_vslice_dummy_var_442, in_vslice_dummy_var_443, in_vslice_dummy_var_444, in_vslice_dummy_var_445, in_vslice_dummy_var_446, in_vslice_dummy_var_447, in_vslice_dummy_var_448, in_vslice_dummy_var_449, in_vslice_dummy_var_450, in_vslice_dummy_var_451, in_vslice_dummy_var_452, in_vslice_dummy_var_453, in_vslice_dummy_var_454, in_vslice_dummy_var_455, in_vslice_dummy_var_456, in_vslice_dummy_var_457, in_vslice_dummy_var_458, in_vslice_dummy_var_459, in_vslice_dummy_var_460, in_vslice_dummy_var_461, in_vslice_dummy_var_462, in_vslice_dummy_var_463, in_vslice_dummy_var_464, in_vslice_dummy_var_465, in_vslice_dummy_var_466, in_vslice_dummy_var_467, in_vslice_dummy_var_468, in_vslice_dummy_var_469, in_vslice_dummy_var_470, in_vslice_dummy_var_471, in_vslice_dummy_var_472, in_vslice_dummy_var_473, in_vslice_dummy_var_474, in_vslice_dummy_var_475, in_vslice_dummy_var_476, in_vslice_dummy_var_477, in_vslice_dummy_var_478, in_vslice_dummy_var_479, in_vslice_dummy_var_480, in_vslice_dummy_var_481, in_vslice_dummy_var_482, in_vslice_dummy_var_483, in_vslice_dummy_var_484, in_vslice_dummy_var_485, in_vslice_dummy_var_486;
    goto L16, exit;

  exit:
    return;

  L16:
    goto anon245_Else;

  anon245_Else:
    call {:si_unique_call 2589} out_sdv_579 := sdv_containing_record(out_pIrpLink, 88);
    out_pIrp_1 := out_sdv_579;
    call {:si_unique_call 2590} out_vslice_dummy_var_420 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2591} out_pIrpStack_6 := sdv_IoGetCurrentIrpStackLocation(out_pIrp_1);
    assume {:nonnull} out_pIrpStack_6 != 0;
    assume out_pIrpStack_6 > 0;
    havoc out_pDevObj_2;
    assume {:nonnull} out_pDevObj_2 != 0;
    assume out_pDevObj_2 > 0;
    havoc out_pDrvObj_1;
    call {:si_unique_call 2592} out_vslice_dummy_var_421 := sdv_IoSetCancelRoutine(out_pIrp_1, 0);
    call {:si_unique_call 2593} IoReleaseCancelSpinLock(out_oldIrql_5);
    out_Tmp_659 := strConst__li2bpl190;
    call {:si_unique_call 2594} out_vslice_dummy_var_422 := CyyDbgPrintEx(12, out_Tmp_659);
    assume {:nonnull} out_pIrpStack_6 != 0;
    assume out_pIrpStack_6 > 0;
    out_Tmp_663 := Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_pIrpStack_6)];
    assume {:nonnull} out_pDrvObj_1 != 0;
    assume out_pDrvObj_1 > 0;
    havoc out_Tmp_661;
    goto anon276_Then, anon276_Else;

  anon276_Else:
    assume out_Tmp_663 != 27;
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume out_Tmp_663 != 26;
    goto anon282_Then, anon282_Else;

  anon282_Else:
    assume out_Tmp_663 != 25;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    assume out_Tmp_663 != 24;
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume out_Tmp_663 != 23;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume out_Tmp_663 != 22;
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume out_Tmp_663 != 21;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume out_Tmp_663 != 20;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    assume out_Tmp_663 != 19;
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume out_Tmp_663 != 18;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    assume out_Tmp_663 != 17;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume out_Tmp_663 != 16;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    assume out_Tmp_663 != 15;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume out_Tmp_663 != 14;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume out_Tmp_663 != 13;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume out_Tmp_663 != 12;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    assume out_Tmp_663 != 11;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume out_Tmp_663 != 10;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    assume out_Tmp_663 != 9;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume out_Tmp_663 != 8;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume out_Tmp_663 != 7;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume out_Tmp_663 != 6;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume out_Tmp_663 != 5;
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume out_Tmp_663 != 4;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume out_Tmp_663 != 3;
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume out_Tmp_663 != 2;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume out_Tmp_663 != 1;
    goto anon366_Then;

  anon366_Then:
    assume out_Tmp_663 == 0;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661] == 0;
    goto L45;

  L45:
    call {:si_unique_call 2571} out_Tmp_660 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_660 != 0;
    assume out_Tmp_660 > 0;
    Mem_T.INT4[out_Tmp_660] := out_oldIrql_5;
    call {:si_unique_call 2572} IoAcquireCancelSpinLock(out_Tmp_660);
    assume {:nonnull} out_Tmp_660 != 0;
    assume out_Tmp_660 > 0;
    out_oldIrql_5 := Mem_T.INT4[out_Tmp_660];
    assume {:nonnull} in_PDevExt_8 != 0;
    assume in_PDevExt_8 > 0;
    havoc out_pIrpLink;
    goto L45_dummy;

  L45_dummy:
    call {:si_unique_call 2643} {:si_old_unique_call 1} out_Tmp_659, out_Tmp_660, out_sdv_579, out_Tmp_661, out_oldIrql_5, out_pIrpStack_6, out_Tmp_663, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, out_vslice_dummy_var_420, out_vslice_dummy_var_421, out_vslice_dummy_var_422, out_vslice_dummy_var_423, out_vslice_dummy_var_424, out_vslice_dummy_var_425, out_vslice_dummy_var_426, out_vslice_dummy_var_427, out_vslice_dummy_var_428, out_vslice_dummy_var_429, out_vslice_dummy_var_430, out_vslice_dummy_var_431, out_vslice_dummy_var_432, out_vslice_dummy_var_433, out_vslice_dummy_var_434, out_vslice_dummy_var_435, out_vslice_dummy_var_436, out_vslice_dummy_var_437, out_vslice_dummy_var_438, out_vslice_dummy_var_439, out_vslice_dummy_var_440, out_vslice_dummy_var_441, out_vslice_dummy_var_442, out_vslice_dummy_var_443, out_vslice_dummy_var_444, out_vslice_dummy_var_445, out_vslice_dummy_var_446, out_vslice_dummy_var_447, out_vslice_dummy_var_448, out_vslice_dummy_var_449, out_vslice_dummy_var_450, out_vslice_dummy_var_451, out_vslice_dummy_var_452, out_vslice_dummy_var_453, out_vslice_dummy_var_454, out_vslice_dummy_var_455, out_vslice_dummy_var_456, out_vslice_dummy_var_457, out_vslice_dummy_var_458, out_vslice_dummy_var_459, out_vslice_dummy_var_460, out_vslice_dummy_var_461, out_vslice_dummy_var_462, out_vslice_dummy_var_463, out_vslice_dummy_var_464, out_vslice_dummy_var_465, out_vslice_dummy_var_466, out_vslice_dummy_var_467, out_vslice_dummy_var_468, out_vslice_dummy_var_469, out_vslice_dummy_var_470, out_vslice_dummy_var_471, out_vslice_dummy_var_472, out_vslice_dummy_var_473, out_vslice_dummy_var_474, out_vslice_dummy_var_475, out_vslice_dummy_var_476, out_vslice_dummy_var_477, out_vslice_dummy_var_478, out_vslice_dummy_var_479, out_vslice_dummy_var_480, out_vslice_dummy_var_481, out_vslice_dummy_var_482, out_vslice_dummy_var_483, out_vslice_dummy_var_484, out_vslice_dummy_var_485, out_vslice_dummy_var_486 := CyyUnstallIrps_loop_L16(out_Tmp_659, out_Tmp_660, out_sdv_579, out_Tmp_661, out_oldIrql_5, out_pIrpStack_6, out_Tmp_663, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, in_PDevExt_8, out_vslice_dummy_var_420, out_vslice_dummy_var_421, out_vslice_dummy_var_422, out_vslice_dummy_var_423, out_vslice_dummy_var_424, out_vslice_dummy_var_425, out_vslice_dummy_var_426, out_vslice_dummy_var_427, out_vslice_dummy_var_428, out_vslice_dummy_var_429, out_vslice_dummy_var_430, out_vslice_dummy_var_431, out_vslice_dummy_var_432, out_vslice_dummy_var_433, out_vslice_dummy_var_434, out_vslice_dummy_var_435, out_vslice_dummy_var_436, out_vslice_dummy_var_437, out_vslice_dummy_var_438, out_vslice_dummy_var_439, out_vslice_dummy_var_440, out_vslice_dummy_var_441, out_vslice_dummy_var_442, out_vslice_dummy_var_443, out_vslice_dummy_var_444, out_vslice_dummy_var_445, out_vslice_dummy_var_446, out_vslice_dummy_var_447, out_vslice_dummy_var_448, out_vslice_dummy_var_449, out_vslice_dummy_var_450, out_vslice_dummy_var_451, out_vslice_dummy_var_452, out_vslice_dummy_var_453, out_vslice_dummy_var_454, out_vslice_dummy_var_455, out_vslice_dummy_var_456, out_vslice_dummy_var_457, out_vslice_dummy_var_458, out_vslice_dummy_var_459, out_vslice_dummy_var_460, out_vslice_dummy_var_461, out_vslice_dummy_var_462, out_vslice_dummy_var_463, out_vslice_dummy_var_464, out_vslice_dummy_var_465, out_vslice_dummy_var_466, out_vslice_dummy_var_467, out_vslice_dummy_var_468, out_vslice_dummy_var_469, out_vslice_dummy_var_470, out_vslice_dummy_var_471, out_vslice_dummy_var_472, out_vslice_dummy_var_473, out_vslice_dummy_var_474, out_vslice_dummy_var_475, out_vslice_dummy_var_476, out_vslice_dummy_var_477, out_vslice_dummy_var_478, out_vslice_dummy_var_479, out_vslice_dummy_var_480, out_vslice_dummy_var_481, out_vslice_dummy_var_482, out_vslice_dummy_var_483, out_vslice_dummy_var_484, out_vslice_dummy_var_485, out_vslice_dummy_var_486);
    return;

  anon361_Then:
    assume out_Tmp_663 == 1;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    goto anon274_Then, anon274_Else;

  anon274_Else:
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 1 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2573} out_vslice_dummy_var_486 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon275_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 1 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2642} out_vslice_dummy_var_485 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon365_Else;

  anon365_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon274_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 1 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2641} out_vslice_dummy_var_484 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon364_Else;

  anon364_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon362_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 1 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2640} out_vslice_dummy_var_483 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon363_Else;

  anon363_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon360_Then:
    assume out_Tmp_663 == 2;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 2 * 4] == 0;
    goto L45;

  anon359_Then:
    assume out_Tmp_663 == 3;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 3 * 4] == 0;
    goto L45;

  anon358_Then:
    assume out_Tmp_663 == 4;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 4 * 4] == 0;
    goto L45;

  anon356_Then:
    assume out_Tmp_663 == 5;
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 5 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2639} out_vslice_dummy_var_482 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon357_Else;

  anon357_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon354_Then:
    assume out_Tmp_663 == 6;
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 6 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2638} out_vslice_dummy_var_481 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon355_Else;

  anon355_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon349_Then:
    assume out_Tmp_663 == 7;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    goto anon272_Then, anon272_Else;

  anon272_Else:
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 7 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2574} out_vslice_dummy_var_480 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon273_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 7 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2637} out_vslice_dummy_var_479 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon353_Else;

  anon353_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon272_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 7 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2636} out_vslice_dummy_var_478 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon352_Else;

  anon352_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon350_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 7 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2635} out_vslice_dummy_var_477 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon351_Else;

  anon351_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon344_Then:
    assume out_Tmp_663 == 8;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    goto anon270_Then, anon270_Else;

  anon270_Else:
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 8 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2575} out_vslice_dummy_var_476 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon271_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 8 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2634} out_vslice_dummy_var_475 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon348_Else;

  anon348_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon270_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 8 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2633} out_vslice_dummy_var_474 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon347_Else;

  anon347_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon345_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 8 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2632} out_vslice_dummy_var_473 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon346_Else;

  anon346_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon343_Then:
    assume out_Tmp_663 == 9;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 9 * 4] == 0;
    goto L45;

  anon338_Then:
    assume out_Tmp_663 == 10;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    goto anon268_Then, anon268_Else;

  anon268_Else:
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 10 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2576} out_vslice_dummy_var_472 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon269_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 10 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2631} out_vslice_dummy_var_471 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon342_Else;

  anon342_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon268_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 10 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2630} out_vslice_dummy_var_470 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon341_Else;

  anon341_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon339_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 10 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2629} out_vslice_dummy_var_469 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon340_Else;

  anon340_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon333_Then:
    assume out_Tmp_663 == 11;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    goto anon266_Then, anon266_Else;

  anon266_Else:
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 11 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2577} out_vslice_dummy_var_468 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon267_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 11 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2628} out_vslice_dummy_var_467 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon337_Else;

  anon337_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon266_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 11 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2627} out_vslice_dummy_var_466 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon336_Else;

  anon336_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon334_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 11 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2626} out_vslice_dummy_var_465 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon335_Else;

  anon335_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon328_Then:
    assume out_Tmp_663 == 12;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    goto anon264_Then, anon264_Else;

  anon264_Else:
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 12 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2578} out_vslice_dummy_var_464 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon265_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 12 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2625} out_vslice_dummy_var_463 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon332_Else;

  anon332_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon264_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 12 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2624} out_vslice_dummy_var_462 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon331_Else;

  anon331_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon329_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 12 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2623} out_vslice_dummy_var_461 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon330_Else;

  anon330_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon323_Then:
    assume out_Tmp_663 == 13;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    goto anon262_Then, anon262_Else;

  anon262_Else:
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 13 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2579} out_vslice_dummy_var_460 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon263_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 13 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2622} out_vslice_dummy_var_459 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon327_Else;

  anon327_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon262_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 13 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2621} out_vslice_dummy_var_458 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon326_Else;

  anon326_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon324_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 13 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2620} out_vslice_dummy_var_457 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon325_Else;

  anon325_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon322_Then:
    assume out_Tmp_663 == 14;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 14 * 4] == 0;
    goto L45;

  anon321_Then:
    assume out_Tmp_663 == 15;
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 15 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2580} out_vslice_dummy_var_456 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon316_Then:
    assume out_Tmp_663 == 16;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    goto anon260_Then, anon260_Else;

  anon260_Else:
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 16 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2581} out_vslice_dummy_var_455 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon261_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 16 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2619} out_vslice_dummy_var_454 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon320_Else;

  anon320_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon260_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 16 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2618} out_vslice_dummy_var_453 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon319_Else;

  anon319_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon317_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 16 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2617} out_vslice_dummy_var_452 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon318_Else;

  anon318_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon311_Then:
    assume out_Tmp_663 == 17;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    goto anon258_Then, anon258_Else;

  anon258_Else:
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 17 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2582} out_vslice_dummy_var_451 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon259_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 17 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2616} out_vslice_dummy_var_450 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon315_Else;

  anon315_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon258_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 17 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2615} out_vslice_dummy_var_449 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon314_Else;

  anon314_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon312_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 17 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2614} out_vslice_dummy_var_448 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon313_Else;

  anon313_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon310_Then:
    assume out_Tmp_663 == 18;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 18 * 4] == 0;
    goto L45;

  anon305_Then:
    assume out_Tmp_663 == 19;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    goto anon256_Then, anon256_Else;

  anon256_Else:
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 19 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2583} out_vslice_dummy_var_447 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon257_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 19 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2613} out_vslice_dummy_var_446 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon309_Else;

  anon309_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon256_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 19 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2612} out_vslice_dummy_var_445 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon308_Else;

  anon308_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon306_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 19 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2611} out_vslice_dummy_var_444 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon307_Else;

  anon307_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon300_Then:
    assume out_Tmp_663 == 20;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    goto anon254_Then, anon254_Else;

  anon254_Else:
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 20 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2584} out_vslice_dummy_var_443 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon255_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 20 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2610} out_vslice_dummy_var_442 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon304_Else;

  anon304_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon254_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 20 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2609} out_vslice_dummy_var_441 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon303_Else;

  anon303_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon301_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 20 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2608} out_vslice_dummy_var_440 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon302_Else;

  anon302_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon295_Then:
    assume out_Tmp_663 == 21;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 21 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2585} out_vslice_dummy_var_439 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon253_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 21 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2607} out_vslice_dummy_var_438 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon299_Else;

  anon299_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon252_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 21 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2606} out_vslice_dummy_var_437 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon298_Else;

  anon298_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon296_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 21 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2605} out_vslice_dummy_var_436 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon297_Else;

  anon297_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon294_Then:
    assume out_Tmp_663 == 22;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 22 * 4] == 0;
    goto L45;

  anon292_Then:
    assume out_Tmp_663 == 23;
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 23 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2604} out_vslice_dummy_var_435 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon293_Else;

  anon293_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon287_Then:
    assume out_Tmp_663 == 24;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    goto anon250_Then, anon250_Else;

  anon250_Else:
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 24 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2586} out_vslice_dummy_var_434 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon251_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 24 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2603} out_vslice_dummy_var_433 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon291_Else;

  anon291_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon250_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 24 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2602} out_vslice_dummy_var_432 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon290_Else;

  anon290_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon288_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 24 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2601} out_vslice_dummy_var_431 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon289_Else;

  anon289_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon282_Then:
    assume out_Tmp_663 == 25;
    goto anon283_Then, anon283_Else;

  anon283_Else:
    goto anon248_Then, anon248_Else;

  anon248_Else:
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 25 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2587} out_vslice_dummy_var_430 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon249_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 25 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2600} out_vslice_dummy_var_429 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon286_Else;

  anon286_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon248_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 25 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2599} out_vslice_dummy_var_428 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon285_Else;

  anon285_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon283_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 25 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2598} out_vslice_dummy_var_427 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon284_Else;

  anon284_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon277_Then:
    assume out_Tmp_663 == 26;
    goto anon278_Then, anon278_Else;

  anon278_Else:
    goto anon246_Then, anon246_Else;

  anon246_Else:
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 26 * 4] == li2bplFunctionConstant321;
    call {:si_unique_call 2588} out_vslice_dummy_var_426 := CyyInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon247_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 26 * 4] == li2bplFunctionConstant325;
    call {:si_unique_call 2597} out_vslice_dummy_var_425 := CyyQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon281_Else;

  anon281_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon246_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 26 * 4] == li2bplFunctionConstant326;
    call {:si_unique_call 2596} out_vslice_dummy_var_424 := CyySetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto anon280_Else;

  anon280_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon278_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 26 * 4] == li2bplFunctionConstant266;
    call {:si_unique_call 2595} out_vslice_dummy_var_423 := CyySystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto anon279_Else;

  anon279_Else:
    assume {:partition} yogi_error != 1;
    goto L45;

  anon276_Then:
    assume out_Tmp_663 == 27;
    assume {:nonnull} out_Tmp_661 != 0;
    assume out_Tmp_661 > 0;
    assume Mem_T.INT4[out_Tmp_661 + 27 * 4] == 0;
    goto L45;
}



procedure {:LoopProcedure} CyyUnstallIrps_loop_L16(in_Tmp_659: int, in_Tmp_660: int, in_sdv_579: int, in_Tmp_661: int, in_oldIrql_5: int, in_pIrpStack_6: int, in_Tmp_663: int, in_pIrp_1: int, in_pDevObj_2: int, in_pDrvObj_1: int, in_pIrpLink: int, in_PDevExt_8: int, in_vslice_dummy_var_420: int, in_vslice_dummy_var_421: int, in_vslice_dummy_var_422: int, in_vslice_dummy_var_423: int, in_vslice_dummy_var_424: int, in_vslice_dummy_var_425: int, in_vslice_dummy_var_426: int, in_vslice_dummy_var_427: int, in_vslice_dummy_var_428: int, in_vslice_dummy_var_429: int, in_vslice_dummy_var_430: int, in_vslice_dummy_var_431: int, in_vslice_dummy_var_432: int, in_vslice_dummy_var_433: int, in_vslice_dummy_var_434: int, in_vslice_dummy_var_435: int, in_vslice_dummy_var_436: int, in_vslice_dummy_var_437: int, in_vslice_dummy_var_438: int, in_vslice_dummy_var_439: int, in_vslice_dummy_var_440: int, in_vslice_dummy_var_441: int, in_vslice_dummy_var_442: int, in_vslice_dummy_var_443: int, in_vslice_dummy_var_444: int, in_vslice_dummy_var_445: int, in_vslice_dummy_var_446: int, in_vslice_dummy_var_447: int, in_vslice_dummy_var_448: int, in_vslice_dummy_var_449: int, in_vslice_dummy_var_450: int, in_vslice_dummy_var_451: int, in_vslice_dummy_var_452: int, in_vslice_dummy_var_453: int, in_vslice_dummy_var_454: int, in_vslice_dummy_var_455: int, in_vslice_dummy_var_456: int, in_vslice_dummy_var_457: int, in_vslice_dummy_var_458: int, in_vslice_dummy_var_459: int, in_vslice_dummy_var_460: int, in_vslice_dummy_var_461: int, in_vslice_dummy_var_462: int, in_vslice_dummy_var_463: int, in_vslice_dummy_var_464: int, in_vslice_dummy_var_465: int, in_vslice_dummy_var_466: int, in_vslice_dummy_var_467: int, in_vslice_dummy_var_468: int, in_vslice_dummy_var_469: int, in_vslice_dummy_var_470: int, in_vslice_dummy_var_471: int, in_vslice_dummy_var_472: int, in_vslice_dummy_var_473: int, in_vslice_dummy_var_474: int, in_vslice_dummy_var_475: int, in_vslice_dummy_var_476: int, in_vslice_dummy_var_477: int, in_vslice_dummy_var_478: int, in_vslice_dummy_var_479: int, in_vslice_dummy_var_480: int, in_vslice_dummy_var_481: int, in_vslice_dummy_var_482: int, in_vslice_dummy_var_483: int, in_vslice_dummy_var_484: int, in_vslice_dummy_var_485: int, in_vslice_dummy_var_486: int) returns (out_Tmp_659: int, out_Tmp_660: int, out_sdv_579: int, out_Tmp_661: int, out_oldIrql_5: int, out_pIrpStack_6: int, out_Tmp_663: int, out_pIrp_1: int, out_pDevObj_2: int, out_pDrvObj_1: int, out_pIrpLink: int, out_vslice_dummy_var_420: int, out_vslice_dummy_var_421: int, out_vslice_dummy_var_422: int, out_vslice_dummy_var_423: int, out_vslice_dummy_var_424: int, out_vslice_dummy_var_425: int, out_vslice_dummy_var_426: int, out_vslice_dummy_var_427: int, out_vslice_dummy_var_428: int, out_vslice_dummy_var_429: int, out_vslice_dummy_var_430: int, out_vslice_dummy_var_431: int, out_vslice_dummy_var_432: int, out_vslice_dummy_var_433: int, out_vslice_dummy_var_434: int, out_vslice_dummy_var_435: int, out_vslice_dummy_var_436: int, out_vslice_dummy_var_437: int, out_vslice_dummy_var_438: int, out_vslice_dummy_var_439: int, out_vslice_dummy_var_440: int, out_vslice_dummy_var_441: int, out_vslice_dummy_var_442: int, out_vslice_dummy_var_443: int, out_vslice_dummy_var_444: int, out_vslice_dummy_var_445: int, out_vslice_dummy_var_446: int, out_vslice_dummy_var_447: int, out_vslice_dummy_var_448: int, out_vslice_dummy_var_449: int, out_vslice_dummy_var_450: int, out_vslice_dummy_var_451: int, out_vslice_dummy_var_452: int, out_vslice_dummy_var_453: int, out_vslice_dummy_var_454: int, out_vslice_dummy_var_455: int, out_vslice_dummy_var_456: int, out_vslice_dummy_var_457: int, out_vslice_dummy_var_458: int, out_vslice_dummy_var_459: int, out_vslice_dummy_var_460: int, out_vslice_dummy_var_461: int, out_vslice_dummy_var_462: int, out_vslice_dummy_var_463: int, out_vslice_dummy_var_464: int, out_vslice_dummy_var_465: int, out_vslice_dummy_var_466: int, out_vslice_dummy_var_467: int, out_vslice_dummy_var_468: int, out_vslice_dummy_var_469: int, out_vslice_dummy_var_470: int, out_vslice_dummy_var_471: int, out_vslice_dummy_var_472: int, out_vslice_dummy_var_473: int, out_vslice_dummy_var_474: int, out_vslice_dummy_var_475: int, out_vslice_dummy_var_476: int, out_vslice_dummy_var_477: int, out_vslice_dummy_var_478: int, out_vslice_dummy_var_479: int, out_vslice_dummy_var_480: int, out_vslice_dummy_var_481: int, out_vslice_dummy_var_482: int, out_vslice_dummy_var_483: int, out_vslice_dummy_var_484: int, out_vslice_dummy_var_485: int, out_vslice_dummy_var_486: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_vslice_dummy_var_420 == 1 || out_vslice_dummy_var_420 == 0 || out_vslice_dummy_var_420 == in_vslice_dummy_var_420;
  free ensures {:va_keep} out_vslice_dummy_var_422 == 0 || out_vslice_dummy_var_422 == in_vslice_dummy_var_422;
  free ensures {:va_keep} out_vslice_dummy_var_426 == 0 || out_vslice_dummy_var_426 == -1073741536 || out_vslice_dummy_var_426 == 259 || out_vslice_dummy_var_426 == -1073741738 || out_vslice_dummy_var_426 == -1073741811 || out_vslice_dummy_var_426 == -1073741789 || out_vslice_dummy_var_426 == -1073741637 || out_vslice_dummy_var_426 == in_vslice_dummy_var_426;
  free ensures {:va_keep} out_vslice_dummy_var_430 == 0 || out_vslice_dummy_var_430 == -1073741536 || out_vslice_dummy_var_430 == 259 || out_vslice_dummy_var_430 == -1073741738 || out_vslice_dummy_var_430 == -1073741811 || out_vslice_dummy_var_430 == -1073741789 || out_vslice_dummy_var_430 == -1073741637 || out_vslice_dummy_var_430 == in_vslice_dummy_var_430;
  free ensures {:va_keep} out_vslice_dummy_var_434 == 0 || out_vslice_dummy_var_434 == -1073741536 || out_vslice_dummy_var_434 == 259 || out_vslice_dummy_var_434 == -1073741738 || out_vslice_dummy_var_434 == -1073741811 || out_vslice_dummy_var_434 == -1073741789 || out_vslice_dummy_var_434 == -1073741637 || out_vslice_dummy_var_434 == in_vslice_dummy_var_434;
  free ensures {:va_keep} out_vslice_dummy_var_439 == 0 || out_vslice_dummy_var_439 == -1073741536 || out_vslice_dummy_var_439 == 259 || out_vslice_dummy_var_439 == -1073741738 || out_vslice_dummy_var_439 == -1073741811 || out_vslice_dummy_var_439 == -1073741789 || out_vslice_dummy_var_439 == -1073741637 || out_vslice_dummy_var_439 == in_vslice_dummy_var_439;
  free ensures {:va_keep} out_vslice_dummy_var_443 == 0 || out_vslice_dummy_var_443 == -1073741536 || out_vslice_dummy_var_443 == 259 || out_vslice_dummy_var_443 == -1073741738 || out_vslice_dummy_var_443 == -1073741811 || out_vslice_dummy_var_443 == -1073741789 || out_vslice_dummy_var_443 == -1073741637 || out_vslice_dummy_var_443 == in_vslice_dummy_var_443;
  free ensures {:va_keep} out_vslice_dummy_var_447 == 0 || out_vslice_dummy_var_447 == -1073741536 || out_vslice_dummy_var_447 == 259 || out_vslice_dummy_var_447 == -1073741738 || out_vslice_dummy_var_447 == -1073741811 || out_vslice_dummy_var_447 == -1073741789 || out_vslice_dummy_var_447 == -1073741637 || out_vslice_dummy_var_447 == in_vslice_dummy_var_447;
  free ensures {:va_keep} out_vslice_dummy_var_451 == 0 || out_vslice_dummy_var_451 == -1073741536 || out_vslice_dummy_var_451 == 259 || out_vslice_dummy_var_451 == -1073741738 || out_vslice_dummy_var_451 == -1073741811 || out_vslice_dummy_var_451 == -1073741789 || out_vslice_dummy_var_451 == -1073741637 || out_vslice_dummy_var_451 == in_vslice_dummy_var_451;
  free ensures {:va_keep} out_vslice_dummy_var_455 == 0 || out_vslice_dummy_var_455 == -1073741536 || out_vslice_dummy_var_455 == 259 || out_vslice_dummy_var_455 == -1073741738 || out_vslice_dummy_var_455 == -1073741811 || out_vslice_dummy_var_455 == -1073741789 || out_vslice_dummy_var_455 == -1073741637 || out_vslice_dummy_var_455 == in_vslice_dummy_var_455;
  free ensures {:va_keep} out_vslice_dummy_var_456 == 0 || out_vslice_dummy_var_456 == -1073741536 || out_vslice_dummy_var_456 == 259 || out_vslice_dummy_var_456 == -1073741738 || out_vslice_dummy_var_456 == -1073741811 || out_vslice_dummy_var_456 == -1073741789 || out_vslice_dummy_var_456 == -1073741637 || out_vslice_dummy_var_456 == in_vslice_dummy_var_456;
  free ensures {:va_keep} out_vslice_dummy_var_460 == 0 || out_vslice_dummy_var_460 == -1073741536 || out_vslice_dummy_var_460 == 259 || out_vslice_dummy_var_460 == -1073741738 || out_vslice_dummy_var_460 == -1073741811 || out_vslice_dummy_var_460 == -1073741789 || out_vslice_dummy_var_460 == -1073741637 || out_vslice_dummy_var_460 == in_vslice_dummy_var_460;
  free ensures {:va_keep} out_vslice_dummy_var_464 == 0 || out_vslice_dummy_var_464 == -1073741536 || out_vslice_dummy_var_464 == 259 || out_vslice_dummy_var_464 == -1073741738 || out_vslice_dummy_var_464 == -1073741811 || out_vslice_dummy_var_464 == -1073741789 || out_vslice_dummy_var_464 == -1073741637 || out_vslice_dummy_var_464 == in_vslice_dummy_var_464;
  free ensures {:va_keep} out_vslice_dummy_var_468 == 0 || out_vslice_dummy_var_468 == -1073741536 || out_vslice_dummy_var_468 == 259 || out_vslice_dummy_var_468 == -1073741738 || out_vslice_dummy_var_468 == -1073741811 || out_vslice_dummy_var_468 == -1073741789 || out_vslice_dummy_var_468 == -1073741637 || out_vslice_dummy_var_468 == in_vslice_dummy_var_468;
  free ensures {:va_keep} out_vslice_dummy_var_472 == 0 || out_vslice_dummy_var_472 == -1073741536 || out_vslice_dummy_var_472 == 259 || out_vslice_dummy_var_472 == -1073741738 || out_vslice_dummy_var_472 == -1073741811 || out_vslice_dummy_var_472 == -1073741789 || out_vslice_dummy_var_472 == -1073741637 || out_vslice_dummy_var_472 == in_vslice_dummy_var_472;
  free ensures {:va_keep} out_vslice_dummy_var_476 == 0 || out_vslice_dummy_var_476 == -1073741536 || out_vslice_dummy_var_476 == 259 || out_vslice_dummy_var_476 == -1073741738 || out_vslice_dummy_var_476 == -1073741811 || out_vslice_dummy_var_476 == -1073741789 || out_vslice_dummy_var_476 == -1073741637 || out_vslice_dummy_var_476 == in_vslice_dummy_var_476;
  free ensures {:va_keep} out_vslice_dummy_var_480 == 0 || out_vslice_dummy_var_480 == -1073741536 || out_vslice_dummy_var_480 == 259 || out_vslice_dummy_var_480 == -1073741738 || out_vslice_dummy_var_480 == -1073741811 || out_vslice_dummy_var_480 == -1073741789 || out_vslice_dummy_var_480 == -1073741637 || out_vslice_dummy_var_480 == in_vslice_dummy_var_480;
  free ensures {:va_keep} out_vslice_dummy_var_486 == 0 || out_vslice_dummy_var_486 == -1073741536 || out_vslice_dummy_var_486 == 259 || out_vslice_dummy_var_486 == -1073741738 || out_vslice_dummy_var_486 == -1073741811 || out_vslice_dummy_var_486 == -1073741789 || out_vslice_dummy_var_486 == -1073741637 || out_vslice_dummy_var_486 == in_vslice_dummy_var_486;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyKillAllReadsOrWrites_loop_L8(in_currentLastIrp_1: int, in_cancelIrql_1: int, in_sdv_619: int, in_sdv_620: int, in_cancelRoutine_2: int, in_Tmp_707: int, in_DeviceObject_11: int, in_QueueToClean: int, in_vslice_dummy_var_511: int, in_vslice_dummy_var_512: int, in_vslice_dummy_var_513: int, in_vslice_dummy_var_514: int, in_vslice_dummy_var_515: int) returns (out_currentLastIrp_1: int, out_cancelIrql_1: int, out_sdv_619: int, out_sdv_620: int, out_cancelRoutine_2: int, out_Tmp_707: int, out_vslice_dummy_var_511: int, out_vslice_dummy_var_512: int, out_vslice_dummy_var_513: int, out_vslice_dummy_var_514: int, out_vslice_dummy_var_515: int)
{
  var vslice_dummy_var_1354: int;

  entry:
    out_currentLastIrp_1, out_cancelIrql_1, out_sdv_619, out_sdv_620, out_cancelRoutine_2, out_Tmp_707, out_vslice_dummy_var_511, out_vslice_dummy_var_512, out_vslice_dummy_var_513, out_vslice_dummy_var_514, out_vslice_dummy_var_515 := in_currentLastIrp_1, in_cancelIrql_1, in_sdv_619, in_sdv_620, in_cancelRoutine_2, in_Tmp_707, in_vslice_dummy_var_511, in_vslice_dummy_var_512, in_vslice_dummy_var_513, in_vslice_dummy_var_514, in_vslice_dummy_var_515;
    goto L8, exit;

  exit:
    return;

  L8:
    call {:si_unique_call 2644} out_sdv_619 := sdv_IsListEmpty(0);
    goto anon55_Else;

  anon55_Else:
    assume {:partition} out_sdv_619 == 0;
    assume {:nonnull} in_QueueToClean != 0;
    assume in_QueueToClean > 0;
    havoc vslice_dummy_var_1354;
    call {:si_unique_call 2655} out_sdv_620 := sdv_containing_record(vslice_dummy_var_1354, 88);
    out_currentLastIrp_1 := out_sdv_620;
    call {:si_unique_call 2656} out_vslice_dummy_var_511 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    out_cancelRoutine_2 := Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(out_currentLastIrp_1)];
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    Mem_T.CancelIrql__IRP[CancelIrql__IRP(out_currentLastIrp_1)] := out_cancelIrql_1;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    Mem_T.CancelRoutine__IRP[CancelRoutine__IRP(out_currentLastIrp_1)] := 0;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant196;
    call {:si_unique_call 2647} CyyCancelCurrentWrite(in_DeviceObject_11, out_currentLastIrp_1);
    goto L42;

  L42:
    call {:si_unique_call 2645} out_Tmp_707 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_707 != 0;
    assume out_Tmp_707 > 0;
    Mem_T.INT4[out_Tmp_707] := out_cancelIrql_1;
    call {:si_unique_call 2646} IoAcquireCancelSpinLock(out_Tmp_707);
    assume {:nonnull} out_Tmp_707 != 0;
    assume out_Tmp_707 > 0;
    out_cancelIrql_1 := Mem_T.INT4[out_Tmp_707];
    goto L42_dummy;

  L42_dummy:
    call {:si_unique_call 2659} {:si_old_unique_call 1} out_currentLastIrp_1, out_cancelIrql_1, out_sdv_619, out_sdv_620, out_cancelRoutine_2, out_Tmp_707, out_vslice_dummy_var_511, out_vslice_dummy_var_512, out_vslice_dummy_var_513, out_vslice_dummy_var_514, out_vslice_dummy_var_515 := CyyKillAllReadsOrWrites_loop_L8(out_currentLastIrp_1, out_cancelIrql_1, out_sdv_619, out_sdv_620, out_cancelRoutine_2, out_Tmp_707, in_DeviceObject_11, in_QueueToClean, out_vslice_dummy_var_511, out_vslice_dummy_var_512, out_vslice_dummy_var_513, out_vslice_dummy_var_514, out_vslice_dummy_var_515);
    return;

  anon72_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant199;
    call {:si_unique_call 2648} CyyCancelCurrentXoff(in_DeviceObject_11, out_currentLastIrp_1);
    goto L42;

  anon71_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant125;
    call {:si_unique_call 2649} CyyCancelImmediate(in_DeviceObject_11, out_currentLastIrp_1);
    goto L42;

  anon70_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant149;
    call {:si_unique_call 2650} CyyCancelQueued(in_DeviceObject_11, out_currentLastIrp_1);
    goto L42;

  anon69_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant179;
    call {:si_unique_call 2651} CyyCancelWait(in_DeviceObject_11, out_currentLastIrp_1);
    goto L42;

  anon68_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant151;
    call {:si_unique_call 2652} CyyFilterCancelQueued(in_DeviceObject_11, out_currentLastIrp_1);
    goto L42;

  anon67_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant321;
    call {:si_unique_call 2653} out_vslice_dummy_var_515 := CyyInternalIoControl(in_DeviceObject_11, out_currentLastIrp_1);
    goto L42;

  anon66_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant325;
    call {:si_unique_call 2658} out_vslice_dummy_var_514 := CyyQueryInformationFile(in_DeviceObject_11, out_currentLastIrp_1);
    goto anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon65_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant326;
    call {:si_unique_call 2657} out_vslice_dummy_var_513 := CyySetInformationFile(in_DeviceObject_11, out_currentLastIrp_1);
    goto anon80_Else;

  anon80_Else:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon78_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant266;
    call {:si_unique_call 2654} out_vslice_dummy_var_512 := CyySystemControlDispatch(in_DeviceObject_11, out_currentLastIrp_1);
    goto anon79_Else;

  anon79_Else:
    assume {:partition} yogi_error != 1;
    goto L42;
}



procedure {:LoopProcedure} CyyKillAllReadsOrWrites_loop_L8(in_currentLastIrp_1: int, in_cancelIrql_1: int, in_sdv_619: int, in_sdv_620: int, in_cancelRoutine_2: int, in_Tmp_707: int, in_DeviceObject_11: int, in_QueueToClean: int, in_vslice_dummy_var_511: int, in_vslice_dummy_var_512: int, in_vslice_dummy_var_513: int, in_vslice_dummy_var_514: int, in_vslice_dummy_var_515: int) returns (out_currentLastIrp_1: int, out_cancelIrql_1: int, out_sdv_619: int, out_sdv_620: int, out_cancelRoutine_2: int, out_Tmp_707: int, out_vslice_dummy_var_511: int, out_vslice_dummy_var_512: int, out_vslice_dummy_var_513: int, out_vslice_dummy_var_514: int, out_vslice_dummy_var_515: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION, yogi_error;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} sdv_irql_current == 2 || sdv_irql_current == old(sdv_irql_current);
  free ensures {:va_keep} out_sdv_619 == 1 || out_sdv_619 == 0 || out_sdv_619 == in_sdv_619;
  free ensures {:va_keep} out_vslice_dummy_var_511 == 1 || out_vslice_dummy_var_511 == 0 || out_vslice_dummy_var_511 == in_vslice_dummy_var_511;
  free ensures {:va_keep} out_vslice_dummy_var_515 == 0 || out_vslice_dummy_var_515 == -1073741536 || out_vslice_dummy_var_515 == 259 || out_vslice_dummy_var_515 == -1073741738 || out_vslice_dummy_var_515 == -1073741811 || out_vslice_dummy_var_515 == -1073741789 || out_vslice_dummy_var_515 == -1073741637 || out_vslice_dummy_var_515 == in_vslice_dummy_var_515;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyGetNextWrite_loop_L6(in_s_p_e_c_i_a_l_15: int, in_sdv_639: int, in_Irp_12: int, in_OldIrql_10: int, in_sdv_642: int, in_sdv_644: int, in_OldIrql_11: int, in_Tmp_739: int, in_s_p_e_c_i_a_l_16: int, in_sdv_646: int, in_sdv_647: int, in_sdv_648: int, in_s_p_e_c_i_a_l_17: int, in_delta: int, in_Xc_1: int, in_s_p_e_c_i_a_l_18: int, in_Tmp_740: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_2: int, in_CompleteCurrent_3: int, in_Extension_16: int, in_vslice_dummy_var_535: int, in_vslice_dummy_var_538: int, in_vslice_dummy_var_539: int) returns (out_s_p_e_c_i_a_l_15: int, out_sdv_639: int, out_Irp_12: int, out_OldIrql_10: int, out_sdv_642: int, out_sdv_644: int, out_OldIrql_11: int, out_Tmp_739: int, out_s_p_e_c_i_a_l_16: int, out_sdv_646: int, out_sdv_647: int, out_sdv_648: int, out_s_p_e_c_i_a_l_17: int, out_Xc_1: int, out_s_p_e_c_i_a_l_18: int, out_Tmp_740: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_535: int, out_vslice_dummy_var_538: int, out_vslice_dummy_var_539: int)
{
  var vslice_dummy_var_1355: int;
  var vslice_dummy_var_1356: int;
  var vslice_dummy_var_1357: int;
  var vslice_dummy_var_1358: int;

  entry:
    out_s_p_e_c_i_a_l_15, out_sdv_639, out_Irp_12, out_OldIrql_10, out_sdv_642, out_sdv_644, out_OldIrql_11, out_Tmp_739, out_s_p_e_c_i_a_l_16, out_sdv_646, out_sdv_647, out_sdv_648, out_s_p_e_c_i_a_l_17, out_Xc_1, out_s_p_e_c_i_a_l_18, out_Tmp_740, out_CompleteCurrent_3, out_vslice_dummy_var_535, out_vslice_dummy_var_538, out_vslice_dummy_var_539 := in_s_p_e_c_i_a_l_15, in_sdv_639, in_Irp_12, in_OldIrql_10, in_sdv_642, in_sdv_644, in_OldIrql_11, in_Tmp_739, in_s_p_e_c_i_a_l_16, in_sdv_646, in_sdv_647, in_sdv_648, in_s_p_e_c_i_a_l_17, in_Xc_1, in_s_p_e_c_i_a_l_18, in_Tmp_740, in_CompleteCurrent_3, in_vslice_dummy_var_535, in_vslice_dummy_var_538, in_vslice_dummy_var_539;
    goto L6, exit;

  exit:
    return;

  L6:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_1355;
    call {:si_unique_call 2660} out_sdv_644 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1355);
    assume {:nonnull} out_sdv_644 != 0;
    assume out_sdv_644 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_sdv_644)] == 4;
    call {:si_unique_call 2663} out_Tmp_740 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_740 != 0;
    assume out_Tmp_740 > 0;
    Mem_T.INT4[out_Tmp_740] := out_OldIrql_11;
    call {:si_unique_call 2664} IoAcquireCancelSpinLock(out_Tmp_740);
    assume {:nonnull} out_Tmp_740 != 0;
    assume out_Tmp_740 > 0;
    out_OldIrql_11 := Mem_T.INT4[out_Tmp_740];
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_1357;
    call {:si_unique_call 2665} out_sdv_648 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1357);
    assume {:nonnull} in_Extension_16 != 0;
    assume in_Extension_16 > 0;
    assume {:nonnull} out_sdv_648 != 0;
    assume out_sdv_648 > 0;
    call {:si_unique_call 2666} IoReleaseCancelSpinLock(out_OldIrql_11);
    goto L24;

  L24:
    call {:si_unique_call 2662} CyyGetNextIrp(in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_2, out_CompleteCurrent_3, in_Extension_16);
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    goto anon16_Then;

  anon16_Then:
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    havoc vslice_dummy_var_1356;
    call {:si_unique_call 2661} out_sdv_647 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1356);
    assume {:nonnull} out_sdv_647 != 0;
    assume out_sdv_647 > 0;
    goto anon17_Then;

  anon17_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_sdv_647)] == 9;
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    havoc out_Tmp_739;
    assume {:nonnull} out_Tmp_739 != 0;
    assume out_Tmp_739 > 0;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    call {:si_unique_call 2676} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_15, out_sdv_639, out_Irp_12, out_OldIrql_10, out_sdv_642, out_sdv_644, out_OldIrql_11, out_Tmp_739, out_s_p_e_c_i_a_l_16, out_sdv_646, out_sdv_647, out_sdv_648, out_s_p_e_c_i_a_l_17, out_Xc_1, out_s_p_e_c_i_a_l_18, out_Tmp_740, out_CompleteCurrent_3, out_vslice_dummy_var_535, out_vslice_dummy_var_538, out_vslice_dummy_var_539 := CyyGetNextWrite_loop_L6(out_s_p_e_c_i_a_l_15, out_sdv_639, out_Irp_12, out_OldIrql_10, out_sdv_642, out_sdv_644, out_OldIrql_11, out_Tmp_739, out_s_p_e_c_i_a_l_16, out_sdv_646, out_sdv_647, out_sdv_648, out_s_p_e_c_i_a_l_17, in_delta, out_Xc_1, out_s_p_e_c_i_a_l_18, out_Tmp_740, in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_2, out_CompleteCurrent_3, in_Extension_16, out_vslice_dummy_var_535, out_vslice_dummy_var_538, out_vslice_dummy_var_539);
    return;

  anon15_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_sdv_644)] != 4;
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_1358;
    call {:si_unique_call 2668} out_sdv_646 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1358);
    assume {:nonnull} out_sdv_646 != 0;
    assume out_sdv_646 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_sdv_646)] == 14;
    call {:si_unique_call 2674} out_Tmp_740 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_740 != 0;
    assume out_Tmp_740 > 0;
    Mem_T.INT4[out_Tmp_740] := out_OldIrql_10;
    call {:si_unique_call 2675} IoAcquireCancelSpinLock(out_Tmp_740);
    assume {:nonnull} out_Tmp_740 != 0;
    assume out_Tmp_740 > 0;
    out_OldIrql_10 := Mem_T.INT4[out_Tmp_740];
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc out_Irp_12;
    assume {:nonnull} out_Irp_12 != 0;
    assume out_Irp_12 > 0;
    havoc out_Xc_1;
    assume {:nonnull} in_Extension_16 != 0;
    assume in_Extension_16 > 0;
    assume {:nonnull} out_Irp_12 != 0;
    assume out_Irp_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L61;

  L61:
    call {:si_unique_call 2667} IoReleaseCancelSpinLock(out_OldIrql_10);
    goto L24;

  anon21_Then:
    assume {:nonnull} out_Irp_12 != 0;
    assume out_Irp_12 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} out_Irp_12 != 0;
    assume out_Irp_12 > 0;
    goto L61;

  anon19_Then:
    call {:si_unique_call 2671} out_vslice_dummy_var_535 := sdv_IoSetCancelRoutine(out_Irp_12, li2bplFunctionConstant199);
    out_s_p_e_c_i_a_l_16 := 2;
    call {:si_unique_call 2672} out_sdv_642 := sdv_IoGetCurrentIrpStackLocation(out_Irp_12);
    assume {:nonnull} out_sdv_642 != 0;
    assume out_sdv_642 > 0;
    out_s_p_e_c_i_a_l_15 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_642)));
    assume {:nonnull} out_s_p_e_c_i_a_l_15 != 0;
    assume out_s_p_e_c_i_a_l_15 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_15] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_15], out_s_p_e_c_i_a_l_16);
    out_CompleteCurrent_3 := 0;
    assume {:nonnull} in_Extension_16 != 0;
    assume in_Extension_16 > 0;
    call {:si_unique_call 2673} out_vslice_dummy_var_538 := KeSynchronizeExecution(0, li2bplFunctionConstant200, 0);
    assume {:nonnull} out_Xc_1 != 0;
    assume out_Xc_1 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} out_Xc_1 != 0;
    assume out_Xc_1 > 0;
    assume {:nonnull} in_delta != 0;
    assume in_delta > 0;
    assume {:nonnull} in_Extension_16 != 0;
    assume in_Extension_16 > 0;
    call {:si_unique_call 2669} out_vslice_dummy_var_539 := CyySetTimer(XoffCountTimer__CYY_DEVICE_EXTENSION(in_Extension_16), in_delta, XoffCountTimeoutDpc__CYY_DEVICE_EXTENSION(in_Extension_16), in_Extension_16);
    out_s_p_e_c_i_a_l_18 := 4;
    call {:si_unique_call 2670} out_sdv_639 := sdv_IoGetCurrentIrpStackLocation(out_Irp_12);
    assume {:nonnull} out_sdv_639 != 0;
    assume out_sdv_639 > 0;
    out_s_p_e_c_i_a_l_17 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_639)));
    assume {:nonnull} out_s_p_e_c_i_a_l_17 != 0;
    assume out_s_p_e_c_i_a_l_17 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_17] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_17], out_s_p_e_c_i_a_l_18);
    goto L61;

  anon20_Then:
    goto L61;

  anon18_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_sdv_646)] != 14;
    goto L24;
}



procedure {:LoopProcedure} CyyGetNextWrite_loop_L6(in_s_p_e_c_i_a_l_15: int, in_sdv_639: int, in_Irp_12: int, in_OldIrql_10: int, in_sdv_642: int, in_sdv_644: int, in_OldIrql_11: int, in_Tmp_739: int, in_s_p_e_c_i_a_l_16: int, in_sdv_646: int, in_sdv_647: int, in_sdv_648: int, in_s_p_e_c_i_a_l_17: int, in_delta: int, in_Xc_1: int, in_s_p_e_c_i_a_l_18: int, in_Tmp_740: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_2: int, in_CompleteCurrent_3: int, in_Extension_16: int, in_vslice_dummy_var_535: int, in_vslice_dummy_var_538: int, in_vslice_dummy_var_539: int) returns (out_s_p_e_c_i_a_l_15: int, out_sdv_639: int, out_Irp_12: int, out_OldIrql_10: int, out_sdv_642: int, out_sdv_644: int, out_OldIrql_11: int, out_Tmp_739: int, out_s_p_e_c_i_a_l_16: int, out_sdv_646: int, out_sdv_647: int, out_sdv_648: int, out_s_p_e_c_i_a_l_17: int, out_Xc_1: int, out_s_p_e_c_i_a_l_18: int, out_Tmp_740: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_535: int, out_vslice_dummy_var_538: int, out_vslice_dummy_var_539: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_s_p_e_c_i_a_l_16 == 2 || out_s_p_e_c_i_a_l_16 == in_s_p_e_c_i_a_l_16;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_18 == 4 || out_s_p_e_c_i_a_l_18 == in_s_p_e_c_i_a_l_18;
  free ensures {:va_keep} out_CompleteCurrent_3 == 0 || out_CompleteCurrent_3 == in_CompleteCurrent_3;
  free ensures {:va_keep} out_vslice_dummy_var_538 == 1 || out_vslice_dummy_var_538 == 0 || out_vslice_dummy_var_538 == in_vslice_dummy_var_538;
  free ensures {:va_keep} out_vslice_dummy_var_539 == 1 || out_vslice_dummy_var_539 == 0 || out_vslice_dummy_var_539 == in_vslice_dummy_var_539;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyStartMask_loop_L11(in_s_p_e_c_i_a_l_25: int, in_FirstStatus_1: int, in_Tmp_785: int, in_SetFirstStatus_1: int, in_Tmp_786: int, in_Tmp_787: int, in_Tmp_788: int, in_Tmp_789: int, in_Tmp_790: int, in_Tmp_791: int, in_Tmp_792: int, in_IrpSp_2: int, in_OldIrql_16: int, in_Tmp_793: int, in_NewIrp_4: int, in_s_p_e_c_i_a_l_26: int, in_Tmp_794: int, in_sdv_699: int, in_Tmp_795: int, in_Tmp_796: int, in_Tmp_797: int, in_Tmp_798: int, in_Tmp_799: int, in_Tmp_800: int, in_sdv_702: int, in_Tmp_801: int, in_Tmp_802: int, in_Extension_25: int, in_vslice_dummy_var_565: int, in_vslice_dummy_var_567: int, in_vslice_dummy_var_568: int, in_vslice_dummy_var_569: int, in_vslice_dummy_var_570: int, in_vslice_dummy_var_571: int, in_vslice_dummy_var_572: int, in_vslice_dummy_var_573: int, in_vslice_dummy_var_574: int, in_vslice_dummy_var_575: int, in_vslice_dummy_var_576: int, in_vslice_dummy_var_577: int, in_vslice_dummy_var_578: int, in_vslice_dummy_var_579: int, in_vslice_dummy_var_580: int, in_vslice_dummy_var_581: int) returns (out_s_p_e_c_i_a_l_25: int, out_FirstStatus_1: int, out_Tmp_785: int, out_SetFirstStatus_1: int, out_Tmp_786: int, out_Tmp_787: int, out_Tmp_788: int, out_Tmp_789: int, out_Tmp_790: int, out_Tmp_791: int, out_Tmp_792: int, out_IrpSp_2: int, out_OldIrql_16: int, out_Tmp_793: int, out_s_p_e_c_i_a_l_26: int, out_Tmp_794: int, out_sdv_699: int, out_Tmp_795: int, out_Tmp_796: int, out_Tmp_797: int, out_Tmp_798: int, out_Tmp_799: int, out_Tmp_800: int, out_sdv_702: int, out_Tmp_801: int, out_Tmp_802: int, out_vslice_dummy_var_565: int, out_vslice_dummy_var_567: int, out_vslice_dummy_var_568: int, out_vslice_dummy_var_569: int, out_vslice_dummy_var_570: int, out_vslice_dummy_var_571: int, out_vslice_dummy_var_572: int, out_vslice_dummy_var_573: int, out_vslice_dummy_var_574: int, out_vslice_dummy_var_575: int, out_vslice_dummy_var_576: int, out_vslice_dummy_var_577: int, out_vslice_dummy_var_578: int, out_vslice_dummy_var_579: int, out_vslice_dummy_var_580: int, out_vslice_dummy_var_581: int)
{
  var vslice_dummy_var_1359: int;
  var vslice_dummy_var_1360: int;
  var vslice_dummy_var_1361: int;
  var vslice_dummy_var_1362: int;

  entry:
    out_s_p_e_c_i_a_l_25, out_FirstStatus_1, out_Tmp_785, out_SetFirstStatus_1, out_Tmp_786, out_Tmp_787, out_Tmp_788, out_Tmp_789, out_Tmp_790, out_Tmp_791, out_Tmp_792, out_IrpSp_2, out_OldIrql_16, out_Tmp_793, out_s_p_e_c_i_a_l_26, out_Tmp_794, out_sdv_699, out_Tmp_795, out_Tmp_796, out_Tmp_797, out_Tmp_798, out_Tmp_799, out_Tmp_800, out_sdv_702, out_Tmp_801, out_Tmp_802, out_vslice_dummy_var_565, out_vslice_dummy_var_567, out_vslice_dummy_var_568, out_vslice_dummy_var_569, out_vslice_dummy_var_570, out_vslice_dummy_var_571, out_vslice_dummy_var_572, out_vslice_dummy_var_573, out_vslice_dummy_var_574, out_vslice_dummy_var_575, out_vslice_dummy_var_576, out_vslice_dummy_var_577, out_vslice_dummy_var_578, out_vslice_dummy_var_579, out_vslice_dummy_var_580, out_vslice_dummy_var_581 := in_s_p_e_c_i_a_l_25, in_FirstStatus_1, in_Tmp_785, in_SetFirstStatus_1, in_Tmp_786, in_Tmp_787, in_Tmp_788, in_Tmp_789, in_Tmp_790, in_Tmp_791, in_Tmp_792, in_IrpSp_2, in_OldIrql_16, in_Tmp_793, in_s_p_e_c_i_a_l_26, in_Tmp_794, in_sdv_699, in_Tmp_795, in_Tmp_796, in_Tmp_797, in_Tmp_798, in_Tmp_799, in_Tmp_800, in_sdv_702, in_Tmp_801, in_Tmp_802, in_vslice_dummy_var_565, in_vslice_dummy_var_567, in_vslice_dummy_var_568, in_vslice_dummy_var_569, in_vslice_dummy_var_570, in_vslice_dummy_var_571, in_vslice_dummy_var_572, in_vslice_dummy_var_573, in_vslice_dummy_var_574, in_vslice_dummy_var_575, in_vslice_dummy_var_576, in_vslice_dummy_var_577, in_vslice_dummy_var_578, in_vslice_dummy_var_579, in_vslice_dummy_var_580, in_vslice_dummy_var_581;
    goto L11, exit;

  exit:
    return;

  L11:
    out_Tmp_798 := strConst__li2bpl215;
    call {:si_unique_call 2677} out_vslice_dummy_var_567 := CyyDbgPrintEx(7, out_Tmp_798);
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc vslice_dummy_var_1359;
    call {:si_unique_call 2678} out_IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1359);
    assume {:nonnull} out_IrpSp_2 != 0;
    assume out_IrpSp_2 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    out_Tmp_787 := strConst__li2bpl216;
    call {:si_unique_call 2702} out_vslice_dummy_var_568 := CyyDbgPrintEx(7, out_Tmp_787);
    call {:si_unique_call 2703} out_vslice_dummy_var_565 := KeSynchronizeExecution(0, li2bplFunctionConstant178, 0);
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc out_Tmp_794;
    assume {:nonnull} out_Tmp_794 != 0;
    assume out_Tmp_794 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L31;

  L31:
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    call {:si_unique_call 2679} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(in_Extension_25), MaskQueue__CYY_DEVICE_EXTENSION(in_Extension_25), in_NewIrp_4, 1, in_Extension_25);
    out_Tmp_799 := strConst__li2bpl218;
    call {:si_unique_call 2680} out_vslice_dummy_var_569 := CyyDbgPrintEx(7, out_Tmp_799);
    goto L37;

  L37:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    goto anon21_Then;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    call {:si_unique_call 2704} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_25, out_FirstStatus_1, out_Tmp_785, out_SetFirstStatus_1, out_Tmp_786, out_Tmp_787, out_Tmp_788, out_Tmp_789, out_Tmp_790, out_Tmp_791, out_Tmp_792, out_IrpSp_2, out_OldIrql_16, out_Tmp_793, out_s_p_e_c_i_a_l_26, out_Tmp_794, out_sdv_699, out_Tmp_795, out_Tmp_796, out_Tmp_797, out_Tmp_798, out_Tmp_799, out_Tmp_800, out_sdv_702, out_Tmp_801, out_Tmp_802, out_vslice_dummy_var_565, out_vslice_dummy_var_567, out_vslice_dummy_var_568, out_vslice_dummy_var_569, out_vslice_dummy_var_570, out_vslice_dummy_var_571, out_vslice_dummy_var_572, out_vslice_dummy_var_573, out_vslice_dummy_var_574, out_vslice_dummy_var_575, out_vslice_dummy_var_576, out_vslice_dummy_var_577, out_vslice_dummy_var_578, out_vslice_dummy_var_579, out_vslice_dummy_var_580, out_vslice_dummy_var_581 := CyyStartMask_loop_L11(out_s_p_e_c_i_a_l_25, out_FirstStatus_1, out_Tmp_785, out_SetFirstStatus_1, out_Tmp_786, out_Tmp_787, out_Tmp_788, out_Tmp_789, out_Tmp_790, out_Tmp_791, out_Tmp_792, out_IrpSp_2, out_OldIrql_16, out_Tmp_793, in_NewIrp_4, out_s_p_e_c_i_a_l_26, out_Tmp_794, out_sdv_699, out_Tmp_795, out_Tmp_796, out_Tmp_797, out_Tmp_798, out_Tmp_799, out_Tmp_800, out_sdv_702, out_Tmp_801, out_Tmp_802, in_Extension_25, out_vslice_dummy_var_565, out_vslice_dummy_var_567, out_vslice_dummy_var_568, out_vslice_dummy_var_569, out_vslice_dummy_var_570, out_vslice_dummy_var_571, out_vslice_dummy_var_572, out_vslice_dummy_var_573, out_vslice_dummy_var_574, out_vslice_dummy_var_575, out_vslice_dummy_var_576, out_vslice_dummy_var_577, out_vslice_dummy_var_578, out_vslice_dummy_var_579, out_vslice_dummy_var_580, out_vslice_dummy_var_581);
    return;

  anon24_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_785 := strConst__li2bpl217;
    call {:si_unique_call 2701} out_vslice_dummy_var_570 := CyyDbgPrintEx(7, out_Tmp_785);
    out_FirstStatus_1 := 0;
    out_SetFirstStatus_1 := 1;
    goto L31;

  anon19_Then:
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2696} out_Tmp_793 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_793 != 0;
    assume out_Tmp_793 > 0;
    Mem_T.INT4[out_Tmp_793] := out_OldIrql_16;
    call {:si_unique_call 2697} IoAcquireCancelSpinLock(out_Tmp_793);
    assume {:nonnull} out_Tmp_793 != 0;
    assume out_Tmp_793 > 0;
    out_OldIrql_16 := Mem_T.INT4[out_Tmp_793];
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc out_Tmp_792;
    assume {:nonnull} out_Tmp_792 != 0;
    assume out_Tmp_792 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    out_Tmp_791 := strConst__li2bpl221;
    call {:si_unique_call 2699} out_vslice_dummy_var_574 := CyyDbgPrintEx(7, out_Tmp_791);
    call {:si_unique_call 2700} IoReleaseCancelSpinLock(out_OldIrql_16);
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc out_Tmp_801;
    assume {:nonnull} out_Tmp_801 != 0;
    assume out_Tmp_801 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L64;

  L64:
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    call {:si_unique_call 2681} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(in_Extension_25), MaskQueue__CYY_DEVICE_EXTENSION(in_Extension_25), in_NewIrp_4, 1, in_Extension_25);
    out_Tmp_800 := strConst__li2bpl218;
    call {:si_unique_call 2682} out_vslice_dummy_var_575 := CyyDbgPrintEx(7, out_Tmp_800);
    goto L37;

  anon27_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_789 := strConst__li2bpl217;
    call {:si_unique_call 2698} out_vslice_dummy_var_576 := CyyDbgPrintEx(7, out_Tmp_789);
    out_FirstStatus_1 := -1073741536;
    out_SetFirstStatus_1 := 1;
    goto L64;

  anon26_Then:
    out_Tmp_797 := strConst__li2bpl220;
    call {:si_unique_call 2695} out_vslice_dummy_var_577 := CyyDbgPrintEx(7, out_Tmp_797);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L76;

  L76:
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc vslice_dummy_var_1360;
    call {:si_unique_call 2683} out_sdv_699 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1360);
    assume {:nonnull} out_sdv_699 != 0;
    assume out_sdv_699 > 0;
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc vslice_dummy_var_1361;
    call {:si_unique_call 2684} out_vslice_dummy_var_578 := sdv_IoSetCancelRoutine(vslice_dummy_var_1361, li2bplFunctionConstant179);
    out_s_p_e_c_i_a_l_26 := 2;
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc vslice_dummy_var_1362;
    call {:si_unique_call 2685} out_sdv_702 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1362);
    assume {:nonnull} out_sdv_702 != 0;
    assume out_sdv_702 > 0;
    out_s_p_e_c_i_a_l_25 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_702)));
    assume {:nonnull} out_s_p_e_c_i_a_l_25 != 0;
    assume out_s_p_e_c_i_a_l_25 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_25] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_25], out_s_p_e_c_i_a_l_26);
    call {:si_unique_call 2686} out_vslice_dummy_var_579 := KeSynchronizeExecution(0, li2bplFunctionConstant180, 0);
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    call {:si_unique_call 2687} CyyGetNextIrpLocked(CurrentMaskIrp__CYY_DEVICE_EXTENSION(in_Extension_25), MaskQueue__CYY_DEVICE_EXTENSION(in_Extension_25), in_NewIrp_4, 0, in_Extension_25, out_OldIrql_16);
    out_Tmp_790 := strConst__li2bpl218;
    call {:si_unique_call 2688} out_vslice_dummy_var_580 := CyyDbgPrintEx(7, out_Tmp_790);
    goto L37;

  anon23_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_795 := strConst__li2bpl217;
    call {:si_unique_call 2693} out_vslice_dummy_var_581 := CyyDbgPrintEx(7, out_Tmp_795);
    out_FirstStatus_1 := 259;
    out_SetFirstStatus_1 := 1;
    call {:si_unique_call 2694} sdv_IoMarkIrpPending(0);
    goto L76;

  anon22_Then:
    goto L41;

  L41:
    out_Tmp_796 := strConst__li2bpl219;
    call {:si_unique_call 2692} out_vslice_dummy_var_571 := CyyDbgPrintEx(7, out_Tmp_796);
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    havoc out_Tmp_786;
    assume {:nonnull} out_Tmp_786 != 0;
    assume out_Tmp_786 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L112;

  L112:
    assume {:nonnull} in_Extension_25 != 0;
    assume in_Extension_25 > 0;
    call {:si_unique_call 2689} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(in_Extension_25), MaskQueue__CYY_DEVICE_EXTENSION(in_Extension_25), in_NewIrp_4, 1, in_Extension_25);
    out_Tmp_802 := strConst__li2bpl218;
    call {:si_unique_call 2690} out_vslice_dummy_var_572 := CyyDbgPrintEx(7, out_Tmp_802);
    goto L37;

  anon25_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_788 := strConst__li2bpl217;
    call {:si_unique_call 2691} out_vslice_dummy_var_573 := CyyDbgPrintEx(7, out_Tmp_788);
    out_FirstStatus_1 := -1073741811;
    out_SetFirstStatus_1 := 1;
    goto L112;

  anon20_Then:
    goto L41;
}



procedure {:LoopProcedure} CyyStartMask_loop_L11(in_s_p_e_c_i_a_l_25: int, in_FirstStatus_1: int, in_Tmp_785: int, in_SetFirstStatus_1: int, in_Tmp_786: int, in_Tmp_787: int, in_Tmp_788: int, in_Tmp_789: int, in_Tmp_790: int, in_Tmp_791: int, in_Tmp_792: int, in_IrpSp_2: int, in_OldIrql_16: int, in_Tmp_793: int, in_NewIrp_4: int, in_s_p_e_c_i_a_l_26: int, in_Tmp_794: int, in_sdv_699: int, in_Tmp_795: int, in_Tmp_796: int, in_Tmp_797: int, in_Tmp_798: int, in_Tmp_799: int, in_Tmp_800: int, in_sdv_702: int, in_Tmp_801: int, in_Tmp_802: int, in_Extension_25: int, in_vslice_dummy_var_565: int, in_vslice_dummy_var_567: int, in_vslice_dummy_var_568: int, in_vslice_dummy_var_569: int, in_vslice_dummy_var_570: int, in_vslice_dummy_var_571: int, in_vslice_dummy_var_572: int, in_vslice_dummy_var_573: int, in_vslice_dummy_var_574: int, in_vslice_dummy_var_575: int, in_vslice_dummy_var_576: int, in_vslice_dummy_var_577: int, in_vslice_dummy_var_578: int, in_vslice_dummy_var_579: int, in_vslice_dummy_var_580: int, in_vslice_dummy_var_581: int) returns (out_s_p_e_c_i_a_l_25: int, out_FirstStatus_1: int, out_Tmp_785: int, out_SetFirstStatus_1: int, out_Tmp_786: int, out_Tmp_787: int, out_Tmp_788: int, out_Tmp_789: int, out_Tmp_790: int, out_Tmp_791: int, out_Tmp_792: int, out_IrpSp_2: int, out_OldIrql_16: int, out_Tmp_793: int, out_s_p_e_c_i_a_l_26: int, out_Tmp_794: int, out_sdv_699: int, out_Tmp_795: int, out_Tmp_796: int, out_Tmp_797: int, out_Tmp_798: int, out_Tmp_799: int, out_Tmp_800: int, out_sdv_702: int, out_Tmp_801: int, out_Tmp_802: int, out_vslice_dummy_var_565: int, out_vslice_dummy_var_567: int, out_vslice_dummy_var_568: int, out_vslice_dummy_var_569: int, out_vslice_dummy_var_570: int, out_vslice_dummy_var_571: int, out_vslice_dummy_var_572: int, out_vslice_dummy_var_573: int, out_vslice_dummy_var_574: int, out_vslice_dummy_var_575: int, out_vslice_dummy_var_576: int, out_vslice_dummy_var_577: int, out_vslice_dummy_var_578: int, out_vslice_dummy_var_579: int, out_vslice_dummy_var_580: int, out_vslice_dummy_var_581: int);
  modifies alloc, Mem_T.INT4, Mem_T.CancelRoutine__IRP, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_FirstStatus_1 == 0 || out_FirstStatus_1 == -1073741536 || out_FirstStatus_1 == 259 || out_FirstStatus_1 == -1073741811 || out_FirstStatus_1 == in_FirstStatus_1;
  free ensures {:va_keep} out_SetFirstStatus_1 == 1 || out_SetFirstStatus_1 == in_SetFirstStatus_1;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_26 == 2 || out_s_p_e_c_i_a_l_26 == in_s_p_e_c_i_a_l_26;
  free ensures {:va_keep} out_vslice_dummy_var_565 == 1 || out_vslice_dummy_var_565 == 0 || out_vslice_dummy_var_565 == in_vslice_dummy_var_565;
  free ensures {:va_keep} out_vslice_dummy_var_567 == 0 || out_vslice_dummy_var_567 == in_vslice_dummy_var_567;
  free ensures {:va_keep} out_vslice_dummy_var_568 == 0 || out_vslice_dummy_var_568 == in_vslice_dummy_var_568;
  free ensures {:va_keep} out_vslice_dummy_var_569 == 0 || out_vslice_dummy_var_569 == in_vslice_dummy_var_569;
  free ensures {:va_keep} out_vslice_dummy_var_570 == 0 || out_vslice_dummy_var_570 == in_vslice_dummy_var_570;
  free ensures {:va_keep} out_vslice_dummy_var_571 == 0 || out_vslice_dummy_var_571 == in_vslice_dummy_var_571;
  free ensures {:va_keep} out_vslice_dummy_var_572 == 0 || out_vslice_dummy_var_572 == in_vslice_dummy_var_572;
  free ensures {:va_keep} out_vslice_dummy_var_573 == 0 || out_vslice_dummy_var_573 == in_vslice_dummy_var_573;
  free ensures {:va_keep} out_vslice_dummy_var_574 == 0 || out_vslice_dummy_var_574 == in_vslice_dummy_var_574;
  free ensures {:va_keep} out_vslice_dummy_var_575 == 0 || out_vslice_dummy_var_575 == in_vslice_dummy_var_575;
  free ensures {:va_keep} out_vslice_dummy_var_576 == 0 || out_vslice_dummy_var_576 == in_vslice_dummy_var_576;
  free ensures {:va_keep} out_vslice_dummy_var_577 == 0 || out_vslice_dummy_var_577 == in_vslice_dummy_var_577;
  free ensures {:va_keep} out_vslice_dummy_var_579 == 1 || out_vslice_dummy_var_579 == 0 || out_vslice_dummy_var_579 == in_vslice_dummy_var_579;
  free ensures {:va_keep} out_vslice_dummy_var_580 == 0 || out_vslice_dummy_var_580 == in_vslice_dummy_var_580;
  free ensures {:va_keep} out_vslice_dummy_var_581 == 0 || out_vslice_dummy_var_581 == in_vslice_dummy_var_581;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyStartRead_loop_L23(in_localStatus_1: int, in_Tmp_1085: int, in_sdv_835: int, in_totalTime: int, in_os2ssreturn: int, in_updateChar: int, in_timeoutsForIrp: int, in_setFirstStatus: int, in_Tmp_1087: int, in_newIrp_1: int, in_useTotalTimer: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_841: int, in_oldIrql_9: int, in_Tmp_1088: int, in_sdv_843: int, in_constantVal: int, in_controlIrql_1: int, in_Tmp_1089: int, in_Tmp_1091: int, in_returnWithWhatsPresent: int, in_Tmp_1092: int, in_Tmp_1093: int, in_useIntervalTimer: int, in_sdv_850: int, in_firstStatus: int, in_Extension_29: int, in_boogieTmp: int, in_vslice_dummy_var_668: int, in_vslice_dummy_var_669: int, in_vslice_dummy_var_670: int, in_vslice_dummy_var_673: int) returns (out_localStatus_1: int, out_Tmp_1085: int, out_sdv_835: int, out_os2ssreturn: int, out_setFirstStatus: int, out_Tmp_1087: int, out_useTotalTimer: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_841: int, out_oldIrql_9: int, out_Tmp_1088: int, out_sdv_843: int, out_constantVal: int, out_controlIrql_1: int, out_Tmp_1089: int, out_Tmp_1091: int, out_returnWithWhatsPresent: int, out_Tmp_1092: int, out_Tmp_1093: int, out_useIntervalTimer: int, out_sdv_850: int, out_firstStatus: int, out_boogieTmp: int, out_vslice_dummy_var_668: int, out_vslice_dummy_var_669: int, out_vslice_dummy_var_670: int, out_vslice_dummy_var_673: int)
{
  var vslice_dummy_var_1363: int;
  var vslice_dummy_var_1364: int;
  var vslice_dummy_var_1365: int;
  var vslice_dummy_var_1366: int;

  entry:
    out_localStatus_1, out_Tmp_1085, out_sdv_835, out_os2ssreturn, out_setFirstStatus, out_Tmp_1087, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_841, out_oldIrql_9, out_Tmp_1088, out_sdv_843, out_constantVal, out_controlIrql_1, out_Tmp_1089, out_Tmp_1091, out_returnWithWhatsPresent, out_Tmp_1092, out_Tmp_1093, out_useIntervalTimer, out_sdv_850, out_firstStatus, out_boogieTmp, out_vslice_dummy_var_668, out_vslice_dummy_var_669, out_vslice_dummy_var_670, out_vslice_dummy_var_673 := in_localStatus_1, in_Tmp_1085, in_sdv_835, in_os2ssreturn, in_setFirstStatus, in_Tmp_1087, in_useTotalTimer, in_multiplierVal, in_crunchDownToOne, in_sdv_841, in_oldIrql_9, in_Tmp_1088, in_sdv_843, in_constantVal, in_controlIrql_1, in_Tmp_1089, in_Tmp_1091, in_returnWithWhatsPresent, in_Tmp_1092, in_Tmp_1093, in_useIntervalTimer, in_sdv_850, in_firstStatus, in_boogieTmp, in_vslice_dummy_var_668, in_vslice_dummy_var_669, in_vslice_dummy_var_670, in_vslice_dummy_var_673;
    goto L23, exit;

  exit:
    return;

  L23:
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    havoc vslice_dummy_var_1363;
    call {:si_unique_call 2705} out_sdv_841 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1363);
    assume {:nonnull} out_sdv_841 != 0;
    assume out_sdv_841 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_sdv_841)] != 3;
    call {:si_unique_call 2727} out_localStatus_1 := CyyResizeBuffer(in_Extension_29);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  L37:
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    call {:si_unique_call 2706} CyyGetNextIrp(CurrentReadIrp__CYY_DEVICE_EXTENSION(in_Extension_29), ReadQueue__CYY_DEVICE_EXTENSION(in_Extension_29), in_newIrp_1, 1, in_Extension_29);
    assume {:nonnull} in_newIrp_1 != 0;
    assume in_newIrp_1 > 0;
    goto anon61_Then;

  anon61_Then:
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    call {:si_unique_call 2728} {:si_old_unique_call 1} out_localStatus_1, out_Tmp_1085, out_sdv_835, out_os2ssreturn, out_setFirstStatus, out_Tmp_1087, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_841, out_oldIrql_9, out_Tmp_1088, out_sdv_843, out_constantVal, out_controlIrql_1, out_Tmp_1089, out_Tmp_1091, out_returnWithWhatsPresent, out_Tmp_1092, out_Tmp_1093, out_useIntervalTimer, out_sdv_850, out_firstStatus, out_boogieTmp, out_vslice_dummy_var_668, out_vslice_dummy_var_669, out_vslice_dummy_var_670, out_vslice_dummy_var_673 := CyyStartRead_loop_L23(out_localStatus_1, out_Tmp_1085, out_sdv_835, in_totalTime, out_os2ssreturn, in_updateChar, in_timeoutsForIrp, out_setFirstStatus, out_Tmp_1087, in_newIrp_1, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_841, out_oldIrql_9, out_Tmp_1088, out_sdv_843, out_constantVal, out_controlIrql_1, out_Tmp_1089, out_Tmp_1091, out_returnWithWhatsPresent, out_Tmp_1092, out_Tmp_1093, out_useIntervalTimer, out_sdv_850, out_firstStatus, in_Extension_29, out_boogieTmp, out_vslice_dummy_var_668, out_vslice_dummy_var_669, out_vslice_dummy_var_670, out_vslice_dummy_var_673);
    return;

  anon60_Then:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := out_localStatus_1;
    out_setFirstStatus := 1;
    goto L37;

  anon59_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_sdv_841)] == 3;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    havoc vslice_dummy_var_1366;
    call {:si_unique_call 2717} out_sdv_843 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1366);
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    assume {:nonnull} out_sdv_843 != 0;
    assume out_sdv_843 > 0;
    out_useTotalTimer := 0;
    out_returnWithWhatsPresent := 0;
    out_os2ssreturn := 0;
    out_crunchDownToOne := 0;
    out_useIntervalTimer := 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    call {:si_unique_call 2718} out_vslice_dummy_var_673 := CyyCancelTimer(ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(in_Extension_29), in_Extension_29);
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    call {:si_unique_call 2719} out_vslice_dummy_var_668 := CyyCancelTimer(ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(in_Extension_29), in_Extension_29);
    call {:si_unique_call 2720} out_Tmp_1092 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1092 != 0;
    assume out_Tmp_1092 > 0;
    Mem_T.INT4[out_Tmp_1092] := out_controlIrql_1;
    call {:si_unique_call 2721} sdv_KeAcquireSpinLock(0, out_Tmp_1092);
    assume {:nonnull} out_Tmp_1092 != 0;
    assume out_Tmp_1092 > 0;
    out_controlIrql_1 := Mem_T.INT4[out_Tmp_1092];
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    call {:si_unique_call 2722} sdv_KeReleaseSpinLock(0, out_controlIrql_1);
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_useIntervalTimer := 1;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    goto L66;

  L66:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L76;

  L76:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L83;

  L83:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} out_useTotalTimer != 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    assume {:nonnull} in_totalTime != 0;
    assume in_totalTime > 0;
    goto L84;

  L84:
    call {:si_unique_call 2714} out_Tmp_1092 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1092 != 0;
    assume out_Tmp_1092 > 0;
    Mem_T.INT4[out_Tmp_1092] := out_controlIrql_1;
    call {:si_unique_call 2715} sdv_KeAcquireSpinLock(0, out_Tmp_1092);
    assume {:nonnull} out_Tmp_1092 != 0;
    assume out_Tmp_1092 > 0;
    out_controlIrql_1 := Mem_T.INT4[out_Tmp_1092];
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    call {:si_unique_call 2716} out_boogieTmp := CyyGetCharsFromIntBuffer(in_Extension_29);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} out_returnWithWhatsPresent != 0;
    goto L94;

  L94:
    call {:si_unique_call 2725} out_vslice_dummy_var_669 := KeSynchronizeExecution(0, li2bplFunctionConstant458, 0);
    call {:si_unique_call 2726} sdv_KeReleaseSpinLock(0, out_controlIrql_1);
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    havoc out_Tmp_1093;
    assume {:nonnull} out_Tmp_1093 != 0;
    assume out_Tmp_1093 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L37;

  anon83_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  anon72_Then:
    assume {:partition} out_returnWithWhatsPresent == 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} out_os2ssreturn != 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    havoc out_Tmp_1088;
    assume {:nonnull} out_Tmp_1088 != 0;
    assume out_Tmp_1088 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L105;

  L105:
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    havoc vslice_dummy_var_1365;
    call {:si_unique_call 2711} out_sdv_850 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1365);
    assume {:nonnull} out_sdv_850 != 0;
    assume out_sdv_850 > 0;
    call {:si_unique_call 2712} out_Tmp_1092 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1092 != 0;
    assume out_Tmp_1092 > 0;
    Mem_T.INT4[out_Tmp_1092] := out_oldIrql_9;
    call {:si_unique_call 2713} IoAcquireCancelSpinLock(out_Tmp_1092);
    assume {:nonnull} out_Tmp_1092 != 0;
    assume out_Tmp_1092 > 0;
    out_oldIrql_9 := Mem_T.INT4[out_Tmp_1092];
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    havoc out_Tmp_1087;
    assume {:nonnull} out_Tmp_1087 != 0;
    assume out_Tmp_1087 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 2723} IoReleaseCancelSpinLock(out_oldIrql_9);
    call {:si_unique_call 2724} sdv_KeReleaseSpinLock(0, out_controlIrql_1);
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    havoc out_Tmp_1091;
    assume {:nonnull} out_Tmp_1091 != 0;
    assume out_Tmp_1091 > 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    havoc out_Tmp_1085;
    assume {:nonnull} out_Tmp_1085 != 0;
    assume out_Tmp_1085 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := -1073741536;
    out_setFirstStatus := 1;
    goto L37;

  anon86_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  anon85_Then:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} out_crunchDownToOne != 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    havoc vslice_dummy_var_1364;
    call {:si_unique_call 2710} out_sdv_835 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1364);
    assume {:nonnull} out_sdv_835 != 0;
    assume out_sdv_835 > 0;
    goto L126;

  L126:
    call {:si_unique_call 2709} out_vslice_dummy_var_670 := KeSynchronizeExecution(0, li2bplFunctionConstant459, 0);
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    goto anon76_Else;

  anon76_Else:
    call {:si_unique_call 2707} IoReleaseCancelSpinLock(out_oldIrql_9);
    call {:si_unique_call 2708} sdv_KeReleaseSpinLock(0, out_controlIrql_1);
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    havoc out_Tmp_1089;
    assume {:nonnull} out_Tmp_1089 != 0;
    assume out_Tmp_1089 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L37;

  anon87_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  anon75_Then:
    assume {:partition} out_crunchDownToOne == 0;
    goto L126;

  anon84_Then:
    goto L94;

  anon74_Then:
    assume {:partition} out_os2ssreturn == 0;
    goto L105;

  anon73_Then:
    goto L94;

  anon71_Then:
    assume {:partition} out_useTotalTimer == 0;
    goto L84;

  anon70_Then:
    goto L77;

  L77:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    out_crunchDownToOne := 1;
    out_multiplierVal := 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L83;

  anon80_Then:
    goto L83;

  anon69_Then:
    goto L83;

  anon68_Then:
    goto L77;

  anon66_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    out_returnWithWhatsPresent := 1;
    goto L83;

  anon67_Then:
    goto L76;

  anon63_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L192;

  L192:
    out_useTotalTimer := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L83;

  anon65_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L192;

  anon81_Then:
    goto L83;

  anon82_Then:
    assume {:nonnull} in_Extension_29 != 0;
    assume in_Extension_29 > 0;
    goto L66;

  anon64_Then:
    goto L66;

  anon62_Then:
    goto L66;
}



procedure {:LoopProcedure} CyyStartRead_loop_L23(in_localStatus_1: int, in_Tmp_1085: int, in_sdv_835: int, in_totalTime: int, in_os2ssreturn: int, in_updateChar: int, in_timeoutsForIrp: int, in_setFirstStatus: int, in_Tmp_1087: int, in_newIrp_1: int, in_useTotalTimer: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_841: int, in_oldIrql_9: int, in_Tmp_1088: int, in_sdv_843: int, in_constantVal: int, in_controlIrql_1: int, in_Tmp_1089: int, in_Tmp_1091: int, in_returnWithWhatsPresent: int, in_Tmp_1092: int, in_Tmp_1093: int, in_useIntervalTimer: int, in_sdv_850: int, in_firstStatus: int, in_Extension_29: int, in_boogieTmp: int, in_vslice_dummy_var_668: int, in_vslice_dummy_var_669: int, in_vslice_dummy_var_670: int, in_vslice_dummy_var_673: int) returns (out_localStatus_1: int, out_Tmp_1085: int, out_sdv_835: int, out_os2ssreturn: int, out_setFirstStatus: int, out_Tmp_1087: int, out_useTotalTimer: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_841: int, out_oldIrql_9: int, out_Tmp_1088: int, out_sdv_843: int, out_constantVal: int, out_controlIrql_1: int, out_Tmp_1089: int, out_Tmp_1091: int, out_returnWithWhatsPresent: int, out_Tmp_1092: int, out_Tmp_1093: int, out_useIntervalTimer: int, out_sdv_850: int, out_firstStatus: int, out_boogieTmp: int, out_vslice_dummy_var_668: int, out_vslice_dummy_var_669: int, out_vslice_dummy_var_670: int, out_vslice_dummy_var_673: int);
  modifies alloc, Mem_T.INT4, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_localStatus_1 == 0 || out_localStatus_1 == in_localStatus_1;
  free ensures {:va_keep} out_os2ssreturn == 0 || out_os2ssreturn == 1 || out_os2ssreturn == in_os2ssreturn;
  free ensures {:va_keep} out_setFirstStatus == 1 || out_setFirstStatus == in_setFirstStatus;
  free ensures {:va_keep} out_useTotalTimer == 0 || out_useTotalTimer == 1 || out_useTotalTimer == in_useTotalTimer;
  free ensures {:va_keep} out_crunchDownToOne == 0 || out_crunchDownToOne == 1 || out_crunchDownToOne == in_crunchDownToOne;
  free ensures {:va_keep} out_returnWithWhatsPresent == 1 || out_returnWithWhatsPresent == 0 || out_returnWithWhatsPresent == in_returnWithWhatsPresent;
  free ensures {:va_keep} out_useIntervalTimer == 1 || out_useIntervalTimer == 0 || out_useIntervalTimer == in_useIntervalTimer;
  free ensures {:va_keep} out_firstStatus == 0 || out_firstStatus == -1073741536 || out_firstStatus == in_firstStatus;
  free ensures {:va_keep} out_vslice_dummy_var_668 == 1 || out_vslice_dummy_var_668 == 0 || out_vslice_dummy_var_668 == in_vslice_dummy_var_668;
  free ensures {:va_keep} out_vslice_dummy_var_669 == 1 || out_vslice_dummy_var_669 == 0 || out_vslice_dummy_var_669 == in_vslice_dummy_var_669;
  free ensures {:va_keep} out_vslice_dummy_var_670 == 1 || out_vslice_dummy_var_670 == 0 || out_vslice_dummy_var_670 == in_vslice_dummy_var_670;
  free ensures {:va_keep} out_vslice_dummy_var_673 == 1 || out_vslice_dummy_var_673 == 0 || out_vslice_dummy_var_673 == in_vslice_dummy_var_673;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyStartWrite#0_loop_L14(in_Tmp_764: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_766: int, in_OldIrql_14: int, in_sdv_671: int, in_NewIrp_3: int, in_sdv_675: int, in_Tmp_768: int, in_Timeouts_1: int, in_Tmp_770: int, in_Extension_22: int) returns (out_Tmp_764: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_766: int, out_OldIrql_14: int, out_sdv_671: int, out_sdv_675: int, out_Tmp_768: int, out_Tmp_770: int)
{
  var vslice_dummy_var_1367: int;
  var vslice_dummy_var_1368: int;
  var vslice_dummy_var_1369: int;

  entry:
    out_Tmp_764, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_766, out_OldIrql_14, out_sdv_671, out_sdv_675, out_Tmp_768, out_Tmp_770 := in_Tmp_764, in_FirstStatus, in_SetFirstStatus, in_UseATimer_1, in_IrpSp_1, in_Tmp_766, in_OldIrql_14, in_sdv_671, in_sdv_675, in_Tmp_768, in_Tmp_770;
    goto L14, exit;

  exit:
    return;

  L14:
    call {:si_unique_call 2729} out_Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    Mem_T.INT4[out_Tmp_764] := out_OldIrql_14;
    call {:si_unique_call 2730} IoAcquireCancelSpinLock(out_Tmp_764);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_764];
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc vslice_dummy_var_1368;
    call {:si_unique_call 2741} out_sdv_671 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1368);
    assume {:nonnull} out_sdv_671 != 0;
    assume out_sdv_671 > 0;
    goto anon22_Then;

  anon22_Then:
    call {:si_unique_call 2739} IoReleaseCancelSpinLock(out_OldIrql_14);
    goto L40;

  L40:
    out_UseATimer_1 := 0;
    call {:si_unique_call 2736} out_Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    Mem_T.INT4[out_Tmp_764] := out_OldIrql_14;
    call {:si_unique_call 2737} sdv_KeAcquireSpinLock(0, out_Tmp_764);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_764];
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 2738} sdv_KeReleaseSpinLock(0, out_OldIrql_14);
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L51;

  L51:
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc vslice_dummy_var_1369;
    call {:si_unique_call 2742} out_IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1369);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_IrpSp_1)] == 4;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    havoc out_Tmp_770;
    goto L59;

  L59:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc vslice_dummy_var_1367;
    call {:si_unique_call 2733} out_sdv_675 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1367);
    assume {:nonnull} out_sdv_675 != 0;
    assume out_sdv_675 > 0;
    call {:si_unique_call 2734} out_Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    Mem_T.INT4[out_Tmp_764] := out_OldIrql_14;
    call {:si_unique_call 2735} IoAcquireCancelSpinLock(out_Tmp_764);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_764];
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc out_Tmp_766;
    assume {:nonnull} out_Tmp_766 != 0;
    assume out_Tmp_766 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 2732} IoReleaseCancelSpinLock(out_OldIrql_14);
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc out_Tmp_768;
    assume {:nonnull} out_Tmp_768 != 0;
    assume out_Tmp_768 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    call {:si_unique_call 2731} CyyGetNextWrite(CurrentWriteIrp__CYY_DEVICE_EXTENSION(in_Extension_22), WriteQueue__CYY_DEVICE_EXTENSION(in_Extension_22), in_NewIrp_3, 1, in_Extension_22);
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon26_Then;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    call {:si_unique_call 2743} {:si_old_unique_call 1} out_Tmp_764, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_766, out_OldIrql_14, out_sdv_671, out_sdv_675, out_Tmp_768, out_Tmp_770 := CyyStartWrite#0_loop_L14(out_Tmp_764, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_766, out_OldIrql_14, out_sdv_671, in_NewIrp_3, out_sdv_675, out_Tmp_768, in_Timeouts_1, out_Tmp_770, in_Extension_22);
    return;

  anon29_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L75;

  anon27_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_IrpSp_1)] != 4;
    out_Tmp_770 := 1;
    goto L59;

  anon23_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L60;

  anon24_Then:
    goto L51;

  anon21_Then:
    call {:si_unique_call 2740} IoReleaseCancelSpinLock(out_OldIrql_14);
    goto L40;
}



procedure {:LoopProcedure} CyyStartWrite#0_loop_L14(in_Tmp_764: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_766: int, in_OldIrql_14: int, in_sdv_671: int, in_NewIrp_3: int, in_sdv_675: int, in_Tmp_768: int, in_Timeouts_1: int, in_Tmp_770: int, in_Extension_22: int) returns (out_Tmp_764: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_766: int, out_OldIrql_14: int, out_sdv_671: int, out_sdv_675: int, out_Tmp_768: int, out_Tmp_770: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures {:va_keep} out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures {:va_keep} out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation CyyStartWrite#1_loop_L14(in_Tmp_764: int, in_s_p_e_c_i_a_l_19: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_766: int, in_OldIrql_14: int, in_sdv_671: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_21: int, in_sdv_673: int, in_sdv_675: int, in_Tmp_768: int, in_Tmp_769: int, in_Timeouts_1: int, in_Tmp_770: int, in_Extension_22: int) returns (out_Tmp_764: int, out_s_p_e_c_i_a_l_19: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_766: int, out_OldIrql_14: int, out_sdv_671: int, out_s_p_e_c_i_a_l_21: int, out_sdv_673: int, out_sdv_675: int, out_Tmp_768: int, out_Tmp_769: int, out_Tmp_770: int)
{
  var vslice_dummy_var_1370: int;
  var vslice_dummy_var_1371: int;
  var vslice_dummy_var_1372: int;
  var vslice_dummy_var_1373: int;

  entry:
    out_Tmp_764, out_s_p_e_c_i_a_l_19, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_766, out_OldIrql_14, out_sdv_671, out_s_p_e_c_i_a_l_21, out_sdv_673, out_sdv_675, out_Tmp_768, out_Tmp_769, out_Tmp_770 := in_Tmp_764, in_s_p_e_c_i_a_l_19, in_FirstStatus, in_SetFirstStatus, in_UseATimer_1, in_IrpSp_1, in_Tmp_766, in_OldIrql_14, in_sdv_671, in_s_p_e_c_i_a_l_21, in_sdv_673, in_sdv_675, in_Tmp_768, in_Tmp_769, in_Tmp_770;
    goto L14, exit;

  exit:
    return;

  L14:
    call {:si_unique_call 2744} out_Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    Mem_T.INT4[out_Tmp_764] := out_OldIrql_14;
    call {:si_unique_call 2745} IoAcquireCancelSpinLock(out_Tmp_764);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_764];
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc vslice_dummy_var_1372;
    call {:si_unique_call 2758} out_sdv_671 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1372);
    assume {:nonnull} out_sdv_671 != 0;
    assume out_sdv_671 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    out_s_p_e_c_i_a_l_21 := 16;
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc vslice_dummy_var_1371;
    call {:si_unique_call 2754} out_sdv_673 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1371);
    assume {:nonnull} out_sdv_673 != 0;
    assume out_sdv_673 > 0;
    out_s_p_e_c_i_a_l_19 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_673)));
    assume {:nonnull} out_s_p_e_c_i_a_l_19 != 0;
    assume out_s_p_e_c_i_a_l_19 > 0;
    Mem_T.INT4[out_s_p_e_c_i_a_l_19] := BOR(Mem_T.INT4[out_s_p_e_c_i_a_l_19], out_s_p_e_c_i_a_l_21);
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc out_Tmp_769;
    assume {:nonnull} out_Tmp_769 != 0;
    assume out_Tmp_769 > 0;
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    call {:si_unique_call 2755} CyyTryToCompleteCurrent#0(in_Extension_22, li2bplFunctionConstant195, out_OldIrql_14, -1073741816, CurrentXoffIrp__CYY_DEVICE_EXTENSION(in_Extension_22), 0, 0, XoffCountTimer__CYY_DEVICE_EXTENSION(in_Extension_22), 0, 0, 16);
    goto L40;

  L40:
    out_UseATimer_1 := 0;
    call {:si_unique_call 2751} out_Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    Mem_T.INT4[out_Tmp_764] := out_OldIrql_14;
    call {:si_unique_call 2752} sdv_KeAcquireSpinLock(0, out_Tmp_764);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_764];
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 2753} sdv_KeReleaseSpinLock(0, out_OldIrql_14);
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L51;

  L51:
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc vslice_dummy_var_1373;
    call {:si_unique_call 2759} out_IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1373);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_IrpSp_1)] == 4;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    havoc out_Tmp_770;
    goto L59;

  L59:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc vslice_dummy_var_1370;
    call {:si_unique_call 2748} out_sdv_675 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1370);
    assume {:nonnull} out_sdv_675 != 0;
    assume out_sdv_675 > 0;
    call {:si_unique_call 2749} out_Tmp_764 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    Mem_T.INT4[out_Tmp_764] := out_OldIrql_14;
    call {:si_unique_call 2750} IoAcquireCancelSpinLock(out_Tmp_764);
    assume {:nonnull} out_Tmp_764 != 0;
    assume out_Tmp_764 > 0;
    out_OldIrql_14 := Mem_T.INT4[out_Tmp_764];
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc out_Tmp_766;
    assume {:nonnull} out_Tmp_766 != 0;
    assume out_Tmp_766 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 2747} IoReleaseCancelSpinLock(out_OldIrql_14);
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    havoc out_Tmp_768;
    assume {:nonnull} out_Tmp_768 != 0;
    assume out_Tmp_768 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} in_Extension_22 != 0;
    assume in_Extension_22 > 0;
    call {:si_unique_call 2746} CyyGetNextWrite(CurrentWriteIrp__CYY_DEVICE_EXTENSION(in_Extension_22), WriteQueue__CYY_DEVICE_EXTENSION(in_Extension_22), in_NewIrp_3, 1, in_Extension_22);
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon26_Then;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    call {:si_unique_call 2760} {:si_old_unique_call 1} out_Tmp_764, out_s_p_e_c_i_a_l_19, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_766, out_OldIrql_14, out_sdv_671, out_s_p_e_c_i_a_l_21, out_sdv_673, out_sdv_675, out_Tmp_768, out_Tmp_769, out_Tmp_770 := CyyStartWrite#1_loop_L14(out_Tmp_764, out_s_p_e_c_i_a_l_19, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_766, out_OldIrql_14, out_sdv_671, in_NewIrp_3, out_s_p_e_c_i_a_l_21, out_sdv_673, out_sdv_675, out_Tmp_768, out_Tmp_769, in_Timeouts_1, out_Tmp_770, in_Extension_22);
    return;

  anon29_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L75;

  anon27_Then:
    assume {:partition} Mem_T.MajorFunction__IO_STACK_LOCATION[MajorFunction__IO_STACK_LOCATION(out_IrpSp_1)] != 4;
    out_Tmp_770 := 1;
    goto L59;

  anon23_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L60;

  anon24_Then:
    goto L51;

  anon22_Then:
    call {:si_unique_call 2756} IoReleaseCancelSpinLock(out_OldIrql_14);
    goto L40;

  anon21_Then:
    call {:si_unique_call 2757} IoReleaseCancelSpinLock(out_OldIrql_14);
    goto L40;
}



procedure {:LoopProcedure} CyyStartWrite#1_loop_L14(in_Tmp_764: int, in_s_p_e_c_i_a_l_19: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_766: int, in_OldIrql_14: int, in_sdv_671: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_21: int, in_sdv_673: int, in_sdv_675: int, in_Tmp_768: int, in_Tmp_769: int, in_Timeouts_1: int, in_Tmp_770: int, in_Extension_22: int) returns (out_Tmp_764: int, out_s_p_e_c_i_a_l_19: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_766: int, out_OldIrql_14: int, out_sdv_671: int, out_s_p_e_c_i_a_l_21: int, out_sdv_673: int, out_sdv_675: int, out_Tmp_768: int, out_Tmp_769: int, out_Tmp_770: int);
  modifies alloc, Mem_T.INT4, sdv_irql_previous_5, sdv_irql_previous_4, sdv_irql_previous_3, sdv_irql_previous_2, sdv_irql_previous, sdv_irql_current, Mem_T.CancelRoutine__IRP;
  free ensures {:va_keep} old(sdv_irql_current) == sdv_irql_current;
  free ensures {:va_keep} old(sdv_irql_previous) == sdv_irql_previous;
  free ensures {:va_keep} sdv_irql_previous_5 == old(sdv_irql_previous_5) || sdv_irql_previous_5 == old(sdv_irql_previous_4) || sdv_irql_previous_5 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_2 == old(sdv_irql_previous_2);
  free ensures {:va_keep} sdv_irql_previous == old(sdv_irql_previous);
  free ensures {:va_keep} sdv_irql_previous_4 == old(sdv_irql_previous_4) || sdv_irql_previous_4 == old(sdv_irql_previous_3);
  free ensures {:va_keep} sdv_irql_previous_3 == old(sdv_irql_previous_3);
  free ensures {:va_keep} out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures {:va_keep} out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures {:va_keep} out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_21 == 16 || out_s_p_e_c_i_a_l_21 == in_s_p_e_c_i_a_l_21;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



procedure fakeMain() returns (Tmp_948: int, dup_assertVar: bool);
  modifies alloc, yogi_error, Mem_T.INT4, Mem_T.CurrentStackLocation_unnamed_tag_7, sdv_irql_current, sdv_irql_previous, sdv_irql_previous_2, sdv_irql_previous_3, sdv_irql_previous_4, sdv_irql_previous_5, Mem_T.CancelIrql__IRP, Mem_T.CancelRoutine__IRP, Mem_T.MajorFunction__IO_STACK_LOCATION;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} alloc >= old(alloc);



implementation {:entrypoint} fakeMain() returns (Tmp_948: int, dup_assertVar: bool)
{

  start:
    call Tmp_948, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


