var {:scalar} alloc: int;

var {:scalar} queued: int;

var {:scalar} yogi_error: int;

var {:scalar} stack_location: int;

var {:scalar} locked: int;

var {:pointer} SLAM_guard_S_0: int;

var {:scalar} markedPending: int;

var {:scalar} queuedWithoutMarking: int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const SerialPortNameGuid: int;

const SerailPortPerfGuid: int;

const SerialPortPropertiesGuid: int;

const SerialPortHWGuid: int;

const CyzGlobals: int;

const SerialPortCommGuid: int;

const CyzPhysicalZero: int;

const KeTickCount: int;

const CyzPhysicalZero_1: int;

const driverDefaults: int;

const CyzPhysicalZero_2: int;

const GUID_DEVINTERFACE_COMPORT: int;

const sdv_cancelFptr: int;

const SLAM_guard_S_0_init: int;

const CyzPhysicalZero_3: int;

const CyzPhysicalZero_4: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const KdDebuggerNotPresent: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_Io_Removelock_release_wait_returned: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const KdDebuggerEnabled: int;

const sdv_isr_routine: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_harnessStackLocation: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_driver_object: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_pDpcContext: int;

const sdv_harnessDeviceExtension: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_19: int, actual_sdv_20: int) returns (Tmp_18: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_19: int, actual_sdv_20: int) returns (Tmp_18: int)
{
  var {:scalar} sdv_21: int;

  anon0:
    call {:si_unique_call 0} Tmp_18 := __HAVOC_malloc(4);
    call {:si_unique_call 1} sdv_21 := __HAVOC_malloc(4);
    call {:si_unique_call 2} SLIC_sdv_InsertTailList_entry(0);
    assume {:nonnull} Tmp_18 != 0;
    assume Tmp_18 > 0;
    assume {:nonnull} sdv_21 != 0;
    assume sdv_21 > 0;
    return;
}



procedure {:origName "CyzFlush"} CyzFlush(actual_DeviceObject: int, actual_Irp: int) returns (Tmp_28: int);
  modifies alloc, yogi_error, locked, queuedWithoutMarking, markedPending, queued, stack_location;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzFlush"} CyzFlush(actual_DeviceObject: int, actual_Irp: int) returns (Tmp_28: int)
{
  var {:pointer} Tmp_29: int;
  var {:pointer} Tmp_30: int;
  var {:pointer} Tmp_31: int;
  var {:pointer} Tmp_32: int;
  var {:pointer} Extension: int;
  var {:scalar} sdv_37: int;
  var {:scalar} status: int;
  var {:pointer} Tmp_33: int;
  var {:pointer} Tmp_35: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_0: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;

  anon0:
    DeviceObject := actual_DeviceObject;
    Irp := actual_Irp;
    call {:si_unique_call 3} Tmp_29 := __HAVOC_malloc(72);
    call {:si_unique_call 4} Tmp_30 := __HAVOC_malloc(72);
    call {:si_unique_call 5} Tmp_31 := __HAVOC_malloc(72);
    call {:si_unique_call 6} Tmp_32 := __HAVOC_malloc(76);
    call {:si_unique_call 7} Tmp_33 := __HAVOC_malloc(96);
    call {:si_unique_call 8} Tmp_35 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    havoc Extension;
    call {:si_unique_call 9} sdv_do_paged_code_check();
    Tmp_33 := strConst__li2bpl1;
    call {:si_unique_call 10} vslice_dummy_var_0 := CyzDbgPrintEx(9, Tmp_33);
    Tmp_32 := strConst__li2bpl2;
    call {:si_unique_call 11} vslice_dummy_var_1 := CyzDbgPrintEx(2, Tmp_32);
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    call {:si_unique_call 12} status := CyzIRPPrologue(Irp, Extension);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status != 0;
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status >= 0;
    goto L29;

  L29:
    Tmp_29 := strConst__li2bpl4;
    call {:si_unique_call 13} vslice_dummy_var_2 := CyzDbgPrintEx(2, Tmp_29);
    Tmp_28 := status;
    goto L1;

  L1:
    call {:si_unique_call 14} SLIC_CyzFlush_exit(strConst__li2bpl0, Tmp_28);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} 0 > status;
    Tmp_31 := strConst__li2bpl3;
    call {:si_unique_call 15} vslice_dummy_var_3 := CyzDbgPrintEx(9, Tmp_31);
    call {:si_unique_call 16} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 17} CyzIRPEpilogue(Extension);
    goto L29;

  anon9_Then:
    assume {:partition} status == 0;
    call {:si_unique_call 18} sdv_37 := CyzCompleteIfError(DeviceObject, Irp);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_37 != 0;
    Tmp_35 := strConst__li2bpl5;
    call {:si_unique_call 19} vslice_dummy_var_4 := CyzDbgPrintEx(2, Tmp_35);
    Tmp_28 := -1073741536;
    goto L1;

  anon10_Then:
    assume {:partition} sdv_37 == 0;
    assume {:nonnull} Extension != 0;
    assume Extension > 0;
    call {:si_unique_call 20} status := CyzStartOrQueue(Extension, Irp, WriteQueue__CYZ_DEVICE_EXTENSION(Extension), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension), li2bplFunctionConstant131);
    Tmp_30 := strConst__li2bpl6;
    call {:si_unique_call 21} vslice_dummy_var_5 := CyzDbgPrintEx(2, Tmp_30);
    Tmp_28 := status;
    goto L1;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_6: int;

  anon0:
    call {:si_unique_call 22} vslice_dummy_var_6 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzStartFlush"} CyzStartFlush(actual_Extension_1: int) returns (Tmp_38: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_38 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzStartFlush"} CyzStartFlush(actual_Extension_1: int) returns (Tmp_38: int)
{
  var {:pointer} NewIrp: int;
  var {:pointer} Tmp_39: int;
  var {:pointer} Extension_1: int;
  var vslice_dummy_var_7: int;

  anon0:
    call {:si_unique_call 23} NewIrp := __HAVOC_malloc(4);
    Extension_1 := actual_Extension_1;
    call {:si_unique_call 24} sdv_do_paged_code_check();
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc Tmp_39;
    assume {:nonnull} Tmp_39 != 0;
    assume Tmp_39 > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    call {:si_unique_call 25} CyzGetNextWrite(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_1), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_1), NewIrp, 1, Extension_1);
    assume {:nonnull} NewIrp != 0;
    assume NewIrp > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 26} vslice_dummy_var_7 := CyzStartWrite#1(Extension_1);
    goto L12;

  L12:
    Tmp_38 := 0;
    return;

  anon3_Then:
    goto L12;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_8: int;

  anon0:
    call {:si_unique_call 27} vslice_dummy_var_8 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzSystemControlDispatch"} CyzSystemControlDispatch(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_43: int);
  modifies alloc, stack_location;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} Tmp_43 == 259 || Tmp_43 == 0 || Tmp_43 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSystemControlDispatch"} CyzSystemControlDispatch(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_43: int)
{
  var {:dopa} {:scalar} disposition: int;
  var {:pointer} pDevExt: int;
  var {:scalar} status_1: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} Irp_1: int;
  var vslice_dummy_var_0: int;
  var vslice_dummy_var_1: int;

  anon0:
    call {:si_unique_call 28} disposition := __HAVOC_malloc(4);
    DeviceObject_1 := actual_DeviceObject_1;
    Irp_1 := actual_Irp_1;
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc pDevExt;
    call {:si_unique_call 29} sdv_do_paged_code_check();
    call {:si_unique_call 30} status_1 := WmiSystemControl(0, 0, Irp_1, disposition);
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} disposition != 0;
    assume disposition > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    goto L22;

  L22:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume Irp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 31} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L45;

  L45:
    call {:si_unique_call 32} sdv_IoSkipCurrentIrpStackLocation(Irp_1);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume Irp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 33} SLIC_sdv_IoCallDriver_entry(0);
    goto L48;

  L48:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc vslice_dummy_var_0;
    call {:si_unique_call 34} status_1 := sdv_IoCallDriver(vslice_dummy_var_0, Irp_1);
    goto L30;

  L30:
    Tmp_43 := status_1;
    return;

  anon20_Then:
    assume !(Irp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L48;

  anon19_Then:
    assume !(Irp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L45;

  anon22_Then:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume Irp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 35} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L51;

  L51:
    call {:si_unique_call 36} sdv_IoSkipCurrentIrpStackLocation(Irp_1);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume Irp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 37} SLIC_sdv_IoCallDriver_entry(0);
    goto L54;

  L54:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc vslice_dummy_var_1;
    call {:si_unique_call 38} status_1 := sdv_IoCallDriver(vslice_dummy_var_1, Irp_1);
    goto L30;

  anon21_Then:
    assume !(Irp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L54;

  anon18_Then:
    assume !(Irp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L51;

  anon23_Then:
    goto L22;

  anon24_Then:
    call {:si_unique_call 39} sdv_IoCompleteRequest(0, 0);
    goto L30;

  anon17_Then:
    goto L30;
}



procedure {:origName "CyzGetRegistryKeyValueLength"} CyzGetRegistryKeyValueLength(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int) returns (Tmp_45: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetRegistryKeyValueLength"} CyzGetRegistryKeyValueLength(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int) returns (Tmp_45: int)
{
  var {:pointer} fullInfo: int;
  var {:scalar} length: int;
  var {:pointer} sdv_43: int;
  var {:scalar} keyName: int;
  var {:pointer} Tmp_46: int;
  var {:pointer} KeyNameString: int;
  var {:scalar} KeyNameStringLength: int;
  var vslice_dummy_var_9: int;

  anon0:
    call {:si_unique_call 40} keyName := __HAVOC_malloc(12);
    KeyNameString := actual_KeyNameString;
    KeyNameStringLength := actual_KeyNameStringLength;
    call {:si_unique_call 41} sdv_do_paged_code_check();
    call {:si_unique_call 42} RtlInitUnicodeString(keyName, KeyNameString);
    length := 24 + KeyNameStringLength;
    call {:si_unique_call 43} sdv_43 := ExAllocatePoolWithTag(1, length, -797279933);
    fullInfo := sdv_43;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} fullInfo != 0;
    call {:si_unique_call 44} Tmp_46 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    call {:si_unique_call 45} vslice_dummy_var_9 := ZwQueryValueKey(0, 0, 1, 0, length, Tmp_46);
    assume {:nonnull} Tmp_46 != 0;
    assume Tmp_46 > 0;
    havoc length;
    call {:si_unique_call 46} sdv_ExFreePool(0);
    goto L18;

  L18:
    Tmp_45 := length;
    return;

  anon3_Then:
    assume {:partition} fullInfo == 0;
    goto L18;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_10: int;

  anon0:
    call {:si_unique_call 47} vslice_dummy_var_10 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGetConfigDefaults"} CyzGetConfigDefaults(actual_DriverDefaultsPtr: int, actual_RegistryPath: int) returns (Tmp_49: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_49 == 0 || Tmp_49 == -1073741823 || Tmp_49 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetConfigDefaults"} CyzGetConfigDefaults(actual_DriverDefaultsPtr: int, actual_RegistryPath: int) returns (Tmp_49: int)
{
  var {:pointer} paramTable: int;
  var {:scalar} Tmp_50: int;
  var {:dopa} {:scalar} DbgDefault: int;
  var {:pointer} sdv_45: int;
  var {:scalar} Tmp_51: int;
  var {:scalar} Status: int;
  var {:dopa} {:scalar} notThereDefault: int;
  var {:scalar} Tmp_56: int;
  var {:pointer} path: int;
  var {:dopa} {:scalar} zero: int;
  var {:pointer} DriverDefaultsPtr: int;
  var {:pointer} RegistryPath: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 48} DbgDefault := __HAVOC_malloc(4);
    call {:si_unique_call 49} notThereDefault := __HAVOC_malloc(4);
    call {:si_unique_call 50} zero := __HAVOC_malloc(4);
    DriverDefaultsPtr := actual_DriverDefaultsPtr;
    RegistryPath := actual_RegistryPath;
    call {:si_unique_call 51} paramTable := __HAVOC_malloc(224);
    call {:si_unique_call 52} vslice_dummy_var_11 := __HAVOC_malloc(48);
    Status := 0;
    assume {:nonnull} zero != 0;
    assume zero > 0;
    assume {:nonnull} DbgDefault != 0;
    assume DbgDefault > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    call {:si_unique_call 53} sdv_do_paged_code_check();
    assume {:nonnull} RegistryPath != 0;
    assume RegistryPath > 0;
    havoc Tmp_56;
    call {:si_unique_call 54} sdv_45 := ExAllocatePoolWithTag(1, Tmp_56, -797279933);
    path := sdv_45;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} path != 0;
    call {:si_unique_call 55} sdv_RtlZeroMemory(0, 56);
    call {:si_unique_call 56} sdv_RtlZeroMemory(0, 224);
    assume {:nonnull} RegistryPath != 0;
    assume RegistryPath > 0;
    havoc Tmp_51;
    call {:si_unique_call 57} sdv_RtlZeroMemory(0, Tmp_51);
    assume {:nonnull} RegistryPath != 0;
    assume RegistryPath > 0;
    havoc Tmp_50;
    call {:si_unique_call 58} sdv_RtlMoveMemory(0, 0, Tmp_50);
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    assume {:nonnull} paramTable != 0;
    assume paramTable > 0;
    call {:si_unique_call 59} Status := sdv_RtlQueryRegistryValues(0, 0, 0, 0, 0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Status >= 0;
    goto L63;

  L63:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} notThereDefault != 0;
    assume notThereDefault > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    call {:si_unique_call 60} vslice_dummy_var_12 := RtlWriteRegistryValue(0, 0, 0, 4, 0, 4);
    goto L64;

  L64:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} path != 0;
    call {:si_unique_call 61} sdv_ExFreePool(0);
    goto L69;

  L69:
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    Tmp_49 := Status;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} path == 0;
    goto L69;

  anon10_Then:
    goto L64;

  anon9_Then:
    assume {:partition} 0 > Status;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    assume {:nonnull} DriverDefaultsPtr != 0;
    assume DriverDefaultsPtr > 0;
    goto L63;

  anon12_Then:
    assume {:partition} path == 0;
    Status := -1073741670;
    Tmp_49 := Status;
    goto L1;
}



procedure {:origName "CyzGetRegistryKeyValue"} CyzGetRegistryKeyValue(actual_Handle_1: int, actual_KeyNameString_1: int, actual_KeyNameStringLength_1: int, actual_Data: int, actual_DataLength: int) returns (Tmp_57: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_57 == -1073741811 || Tmp_57 == -1073741823 || Tmp_57 == 0 || Tmp_57 == 5 || Tmp_57 == -1073741789 || Tmp_57 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetRegistryKeyValue"} CyzGetRegistryKeyValue(actual_Handle_1: int, actual_KeyNameString_1: int, actual_KeyNameStringLength_1: int, actual_Data: int, actual_DataLength: int) returns (Tmp_57: int)
{
  var {:pointer} fullInfo_1: int;
  var {:pointer} Tmp_58: int;
  var {:scalar} length_1: int;
  var {:pointer} Tmp_59: int;
  var {:pointer} sdv_49: int;
  var {:scalar} ntStatus: int;
  var {:scalar} keyName_1: int;
  var {:pointer} Tmp_60: int;
  var {:pointer} KeyNameString_1: int;
  var {:scalar} KeyNameStringLength_1: int;
  var {:scalar} DataLength: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_2: int;

  anon0:
    call {:si_unique_call 62} keyName_1 := __HAVOC_malloc(12);
    KeyNameString_1 := actual_KeyNameString_1;
    KeyNameStringLength_1 := actual_KeyNameStringLength_1;
    DataLength := actual_DataLength;
    call {:si_unique_call 63} Tmp_58 := __HAVOC_malloc(120);
    call {:si_unique_call 64} Tmp_59 := __HAVOC_malloc(112);
    ntStatus := -1073741670;
    call {:si_unique_call 65} sdv_do_paged_code_check();
    Tmp_58 := strConst__li2bpl11;
    call {:si_unique_call 66} vslice_dummy_var_13 := CyzDbgPrintEx(2, Tmp_58);
    call {:si_unique_call 67} RtlInitUnicodeString(keyName_1, KeyNameString_1);
    length_1 := 24 + KeyNameStringLength_1 + DataLength;
    call {:si_unique_call 68} sdv_49 := ExAllocatePoolWithTag(1, length_1, -797279933);
    fullInfo_1 := sdv_49;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} fullInfo_1 != 0;
    call {:si_unique_call 69} Tmp_60 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_60 != 0;
    assume Tmp_60 > 0;
    call {:si_unique_call 70} ntStatus := ZwQueryValueKey(0, 0, 1, 0, length_1, Tmp_60);
    assume {:nonnull} Tmp_60 != 0;
    assume Tmp_60 > 0;
    havoc length_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} ntStatus >= 0;
    assume {:nonnull} fullInfo_1 != 0;
    assume fullInfo_1 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} fullInfo_1 != 0;
    assume fullInfo_1 > 0;
    havoc vslice_dummy_var_2;
    call {:si_unique_call 71} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_2);
    goto L31;

  L31:
    call {:si_unique_call 72} sdv_ExFreePool(0);
    goto L23;

  L23:
    Tmp_59 := strConst__li2bpl12;
    call {:si_unique_call 73} vslice_dummy_var_14 := CyzDbgPrintEx(2, Tmp_59);
    Tmp_57 := ntStatus;
    return;

  anon8_Then:
    goto L31;

  anon7_Then:
    assume {:partition} 0 > ntStatus;
    goto L31;

  anon9_Then:
    assume {:partition} fullInfo_1 == 0;
    goto L23;
}



procedure {:origName "CyzSetMCRContents"} CyzSetMCRContents(actual_Context: int) returns (Tmp_62: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_62 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetMCRContents"} CyzSetMCRContents(actual_Context: int) returns (Tmp_62: int)
{
  var {:scalar} op: int;
  var {:scalar} Tmp_64: int;
  var {:pointer} Extension_2: int;
  var {:pointer} Tmp_65: int;
  var {:pointer} Tmp_66: int;
  var {:pointer} Result: int;
  var {:scalar} rs: int;
  var {:pointer} Context: int;

  anon0:
    Context := actual_Context;
    Tmp_65 := Context;
    assume {:nonnull} Tmp_65 != 0;
    assume Tmp_65 > 0;
    havoc Extension_2;
    Tmp_66 := Context;
    assume {:nonnull} Tmp_66 != 0;
    assume Tmp_66 > 0;
    havoc Result;
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    call {:si_unique_call 74} rs := corral_nondet();
    assume {:nonnull} Result != 0;
    assume Result > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    rs := BOR(rs, 4);
    goto L18;

  L18:
    assume {:nonnull} Result != 0;
    assume Result > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    rs := BOR(rs, 1);
    goto L21;

  L21:
    Tmp_64 := BOR(rs, 0);
    call {:si_unique_call 75} CyzIssueCmd(Extension_2, 4, Tmp_64, 0);
    call {:si_unique_call 76} op := corral_nondet();
    assume {:nonnull} Result != 0;
    assume Result > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    op := BOR(op, 4);
    goto L35;

  L35:
    call {:si_unique_call 77} CyzIssueCmd(Extension_2, 2, 0, 0);
    Tmp_62 := 0;
    return;

  anon9_Then:
    op := BAND(op, BNOT(4));
    goto L35;

  anon8_Then:
    rs := BAND(rs, BNOT(1));
    goto L21;

  anon7_Then:
    rs := BAND(rs, BNOT(4));
    goto L18;
}



procedure {:origName "CyzGetProperties"} CyzGetProperties(actual_Extension_3: int, actual_Properties: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetProperties"} CyzGetProperties(actual_Extension_3: int, actual_Properties: int)
{
  var {:pointer} Extension_3: int;
  var {:pointer} Properties: int;
  var vslice_dummy_var_15: int;

  anon0:
    call {:si_unique_call 78} vslice_dummy_var_15 := __HAVOC_malloc(4);
    Extension_3 := actual_Extension_3;
    Properties := actual_Properties;
    call {:si_unique_call 79} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    return;
}



procedure {:origName "CyzGetStats"} CyzGetStats(actual_Context_1: int) returns (Tmp_69: int);
  free ensures {:va_keep} Tmp_69 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetStats"} CyzGetStats(actual_Context_1: int) returns (Tmp_69: int)
{
  var {:pointer} irpSp: int;
  var {:pointer} Tmp_70: int;
  var {:pointer} Tmp_71: int;
  var {:pointer} sp: int;
  var {:pointer} extension: int;
  var {:pointer} Context_1: int;

  anon0:
    Context_1 := actual_Context_1;
    call {:si_unique_call 80} irpSp := sdv_IoGetCurrentIrpStackLocation(Context_1);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    havoc Tmp_70;
    assume {:nonnull} Tmp_70 != 0;
    assume Tmp_70 > 0;
    havoc extension;
    Tmp_71 := Context_1;
    assume {:nonnull} Tmp_71 != 0;
    assume Tmp_71 > 0;
    havoc sp;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} sp != 0;
    assume sp > 0;
    Tmp_69 := 0;
    return;
}



procedure {:origName "_sdv_init13"} _sdv_init13();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init13"} _sdv_init13()
{
  var vslice_dummy_var_16: int;

  anon0:
    call {:si_unique_call 81} vslice_dummy_var_16 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzIoControl"} CyzIoControl(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_75: int);
  modifies alloc, locked, queuedWithoutMarking, yogi_error, markedPending, queued, stack_location;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzIoControl"} CyzIoControl(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_75: int)
{
  var {:scalar} OldIrql: int;
  var {:pointer} Tmp_76: int;
  var {:pointer} Tmp_77: int;
  var {:pointer} NewChars: int;
  var {:scalar} Tmp_78: int;
  var {:pointer} NewTimeouts: int;
  var {:scalar} Tmp_79: int;
  var {:scalar} Tmp_80: int;
  var {:pointer} Tmp_81: int;
  var {:pointer} escapeChar: int;
  var {:scalar} Mask: int;
  var {:scalar} S: int;
  var {:pointer} Lc: int;
  var {:scalar} Tmp_82: int;
  var {:pointer} Tmp_83: int;
  var {:pointer} Tmp_84: int;
  var {:scalar} Status_1: int;
  var {:scalar} prologueStatus: int;
  var {:pointer} Tmp_85: int;
  var {:pointer} Tmp_86: int;
  var {:pointer} Tmp_87: int;
  var {:pointer} Tmp_88: int;
  var {:scalar} S_1: int;
  var {:pointer} Rs: int;
  var {:pointer} Br: int;
  var {:pointer} Tmp_89: int;
  var {:pointer} Tmp_90: int;
  var {:pointer} Tmp_91: int;
  var {:pointer} IrpSp: int;
  var {:scalar} S_2: int;
  var {:scalar} Tmp_92: int;
  var {:pointer} Tmp_93: int;
  var {:pointer} HandFlow: int;
  var {:scalar} OldIrql_1: int;
  var {:scalar} LData: int;
  var {:scalar} S_3: int;
  var {:pointer} Extension_4: int;
  var {:scalar} LParity: int;
  var {:scalar} Tmp_94: int;
  var {:pointer} Tmp_95: int;
  var {:scalar} Tmp_96: int;
  var {:scalar} Tmp_97: int;
  var {:scalar} sdv_85: int;
  var {:pointer} Tmp_98: int;
  var {:scalar} S_4: int;
  var {:pointer} Tmp_99: int;
  var {:scalar} Mask_1: int;
  var {:scalar} ModemControl: int;
  var {:scalar} NewMask: int;
  var {:pointer} Xc: int;
  var {:pointer} Tmp_100: int;
  var {:scalar} LStop: int;
  var {:pointer} Tmp_101: int;
  var {:scalar} S_5: int;
  var {:scalar} rs_1: int;
  var {:scalar} BaudRate: int;
  var {:scalar} S_6: int;
  var {:scalar} S_7: int;
  var {:scalar} Tmp_102: int;
  var {:scalar} pollIrql: int;
  var {:pointer} Tmp_103: int;
  var {:pointer} Lc_1: int;
  var {:pointer} Tmp_104: int;
  var {:scalar} S_8: int;
  var {:pointer} Tmp_105: int;
  var {:pointer} DeviceObject_2: int;
  var {:pointer} Irp_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_9: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 82} S := __HAVOC_malloc(8);
    call {:si_unique_call 83} S_1 := __HAVOC_malloc(8);
    call {:si_unique_call 84} S_2 := __HAVOC_malloc(8);
    call {:si_unique_call 85} S_3 := __HAVOC_malloc(8);
    call {:si_unique_call 86} S_4 := __HAVOC_malloc(8);
    call {:si_unique_call 87} S_5 := __HAVOC_malloc(8);
    call {:si_unique_call 88} S_6 := __HAVOC_malloc(8);
    call {:si_unique_call 89} S_7 := __HAVOC_malloc(8);
    call {:si_unique_call 90} S_8 := __HAVOC_malloc(8);
    DeviceObject_2 := actual_DeviceObject_2;
    Irp_2 := actual_Irp_2;
    call {:si_unique_call 91} Tmp_76 := __HAVOC_malloc(124);
    call {:si_unique_call 92} Tmp_81 := __HAVOC_malloc(72);
    call {:si_unique_call 93} Tmp_83 := __HAVOC_malloc(96);
    call {:si_unique_call 94} Tmp_86 := __HAVOC_malloc(148);
    call {:si_unique_call 95} Tmp_89 := __HAVOC_malloc(128);
    call {:si_unique_call 96} Tmp_90 := __HAVOC_malloc(136);
    call {:si_unique_call 97} Tmp_100 := __HAVOC_malloc(140);
    call {:si_unique_call 98} Tmp_101 := __HAVOC_malloc(68);
    call {:si_unique_call 99} Tmp_104 := __HAVOC_malloc(148);
    call {:si_unique_call 100} Tmp_105 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    havoc Extension_4;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 101} sdv_IoCompleteRequest(0, 0);
    Tmp_75 := -1073741808;
    goto L1;

  L1:
    call {:si_unique_call 102} SLIC_CyzIoControl_exit(strConst__li2bpl0, Tmp_75);
    goto anon415_Then, anon415_Else;

  anon415_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon415_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon414_Then:
    call {:si_unique_call 103} prologueStatus := CyzIRPPrologue(Irp_2, Extension_4);
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume {:partition} prologueStatus != 0;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume {:partition} prologueStatus != 259;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    Tmp_81 := strConst__li2bpl3;
    call {:si_unique_call 104} vslice_dummy_var_37 := CyzDbgPrintEx(9, Tmp_81);
    call {:si_unique_call 105} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 106} CyzIRPEpilogue(Extension_4);
    goto L25;

  L25:
    Tmp_75 := prologueStatus;
    goto L1;

  anon296_Then:
    assume {:partition} prologueStatus == 259;
    goto L25;

  anon295_Then:
    assume {:partition} prologueStatus == 0;
    Tmp_83 := strConst__li2bpl1;
    call {:si_unique_call 107} vslice_dummy_var_38 := CyzDbgPrintEx(9, Tmp_83);
    call {:si_unique_call 108} sdv_85 := CyzCompleteIfError(DeviceObject_2, Irp_2);
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:partition} sdv_85 != 0;
    Tmp_75 := -1073741536;
    goto L1;

  anon297_Then:
    assume {:partition} sdv_85 == 0;
    call {:si_unique_call 109} IrpSp := sdv_IoGetCurrentIrpStackLocation(Irp_2);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    Status_1 := 0;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    Status_1 := -1073741789;
    goto L96;

  L96:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    Tmp_105 := strConst__li2bpl3;
    call {:si_unique_call 110} vslice_dummy_var_39 := CyzDbgPrintEx(9, Tmp_105);
    call {:si_unique_call 111} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 112} CyzIRPEpilogue(Extension_4);
    Tmp_75 := Status_1;
    goto L1;

  anon309_Then:
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon441_Then, anon441_Else;

  anon441_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_3;
    call {:si_unique_call 113} Status_1 := CyzGotoPowerState(vslice_dummy_var_3, Extension_4, 1);
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume {:partition} Status_1 >= 0;
    goto L109;

  L109:
    call {:si_unique_call 114} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 115} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    call {:si_unique_call 116} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 117} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 118} vslice_dummy_var_17 := CyzSetFCRContents(S_1);
    call {:si_unique_call 119} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 120} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon310_Then:
    assume {:partition} 0 > Status_1;
    goto L96;

  anon441_Then:
    goto L109;

  anon369_Then:
    Status_1 := -1073741811;
    goto L96;

  anon370_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    Status_1 := -1073741789;
    goto L96;

  anon311_Then:
    assume {:nonnull} S != 0;
    assume S > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S != 0;
    assume S > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon440_Then, anon440_Else;

  anon440_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_4;
    call {:si_unique_call 121} Status_1 := CyzGotoPowerState(vslice_dummy_var_4, Extension_4, 1);
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume {:partition} Status_1 >= 0;
    goto L137;

  L137:
    call {:si_unique_call 122} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 123} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    call {:si_unique_call 124} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 125} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 126} vslice_dummy_var_18 := CyzSetMCRContents(S);
    call {:si_unique_call 127} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 128} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon312_Then:
    assume {:partition} 0 > Status_1;
    goto L96;

  anon440_Then:
    goto L137;

  anon371_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    Status_1 := -1073741789;
    goto L96;

  anon313_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    call {:si_unique_call 129} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 130} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    call {:si_unique_call 131} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 132} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 133} vslice_dummy_var_19 := CyzGetMCRContents(S_6);
    call {:si_unique_call 134} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 135} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon372_Then:
    call {:si_unique_call 136} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 137} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 138} vslice_dummy_var_20 := CyzClearStats(Extension_4);
    call {:si_unique_call 139} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon373_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    Status_1 := -1073741789;
    goto L96;

  anon308_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 140} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 141} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 142} vslice_dummy_var_21 := CyzGetStats(Irp_2);
    call {:si_unique_call 143} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon374_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    Status_1 := -1073741789;
    goto L96;

  anon307_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_91;
    assume {:nonnull} Tmp_91 != 0;
    assume Tmp_91 > 0;
    goto L96;

  anon375_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc escapeChar;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon439_Then, anon439_Else;

  anon439_Else:
    Status_1 := -1073741789;
    goto L96;

  anon439_Then:
    call {:si_unique_call 144} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 145} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    goto L220;

  L220:
    Status_1 := -1073741811;
    call {:si_unique_call 146} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon315_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    goto L220;

  anon317_Then:
    goto L217;

  L217:
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    call {:si_unique_call 147} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 148} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 149} vslice_dummy_var_22 := CyzSetEscapeChar(Irp_2);
    call {:si_unique_call 150} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 151} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon316_Then:
    goto L220;

  anon314_Then:
    goto L217;

  anon376_Then:
    ModemControl := 0;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    Status_1 := -1073741789;
    goto L96;

  anon438_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 152} rs_1 := corral_nondet();
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume {:partition} BAND(rs_1, 4) != 0;
    ModemControl := BOR(ModemControl, 1);
    goto L254;

  L254:
    goto anon319_Then, anon319_Else;

  anon319_Else:
    assume {:partition} BAND(rs_1, 1) != 0;
    ModemControl := BOR(ModemControl, 2);
    goto L256;

  L256:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_85;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    goto L96;

  anon319_Then:
    assume {:partition} BAND(rs_1, 1) == 0;
    goto L256;

  anon318_Then:
    assume {:partition} BAND(rs_1, 4) == 0;
    goto L254;

  anon377_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    Status_1 := -1073741789;
    goto L96;

  anon306_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    Tmp_98 := AssociatedIrp__IRP(Irp_2);
    assume {:nonnull} Tmp_98 != 0;
    assume Tmp_98 > 0;
    havoc vslice_dummy_var_5;
    call {:si_unique_call 153} CyzGetProperties(Extension_4, vslice_dummy_var_5);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L96;

  anon378_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Xc;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    Status_1 := -1073741789;
    goto L96;

  anon437_Then:
    assume {:nonnull} Xc != 0;
    assume Xc > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    Status_1 := -1073741811;
    goto L96;

  anon320_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 154} Tmp_75 := CyzStartOrQueue(Extension_4, Irp_2, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant194);
    goto L1;

  anon379_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    Status_1 := -1073741789;
    goto L96;

  anon321_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    call {:si_unique_call 155} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 156} IoAcquireCancelSpinLock(Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    call {:si_unique_call 157} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 158} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 159} vslice_dummy_var_23 := CyzGetCommStatus(S_8);
    call {:si_unique_call 160} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 161} IoReleaseCancelSpinLock(OldIrql_1);
    goto L96;

  anon380_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    Status_1 := -1073741789;
    goto L96;

  anon322_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    call {:si_unique_call 162} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 163} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    call {:si_unique_call 164} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 165} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 166} vslice_dummy_var_24 := CyzGetModemUpdate(S_7);
    call {:si_unique_call 167} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 168} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon381_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc HandFlow;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    Status_1 := -1073741789;
    goto L96;

  anon435_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    Status_1 := -1073741811;
    goto L96;

  anon323_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    Status_1 := -1073741811;
    goto L96;

  anon324_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    havoc Tmp_80;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    assume {:partition} Tmp_80 == 3;
    Status_1 := -1073741811;
    goto L96;

  anon436_Then:
    assume {:partition} Tmp_80 != 3;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    goto L341;

  L341:
    Status_1 := -1073741811;
    goto L96;

  anon325_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    goto L345;

  L345:
    Status_1 := -1073741811;
    goto L96;

  anon327_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    call {:si_unique_call 169} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 170} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    Status_1 := -1073741811;
    call {:si_unique_call 171} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon330_Then:
    goto L353;

  L353:
    call {:si_unique_call 172} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 173} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 174} vslice_dummy_var_25 := CyzSetHandFlow(S_5);
    call {:si_unique_call 175} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 176} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon329_Then:
    goto L353;

  anon328_Then:
    goto L345;

  anon326_Then:
    goto L341;

  anon382_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    Status_1 := -1073741789;
    goto L96;

  anon305_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 177} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 178} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_103;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    call {:si_unique_call 179} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon383_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc NewChars;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    Status_1 := -1073741789;
    goto L96;

  anon434_Then:
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    call {:si_unique_call 180} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 181} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    goto L397;

  L397:
    Status_1 := -1073741811;
    call {:si_unique_call 182} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon332_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto L397;

  anon333_Then:
    goto L394;

  L394:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    call {:si_unique_call 183} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 184} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 185} vslice_dummy_var_26 := CyzSetChars(S_3);
    call {:si_unique_call 186} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 187} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon331_Then:
    goto L394;

  anon384_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    Status_1 := -1073741789;
    goto L96;

  anon304_Then:
    call {:si_unique_call 188} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 189} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_93;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_93 != 0;
    assume Tmp_93 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 190} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon385_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Lc_1;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    Status_1 := -1073741789;
    goto L96;

  anon428_Then:
    call {:si_unique_call 191} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 192} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_92;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:partition} Tmp_92 == 1;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  L438:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  L443:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_82;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:partition} Tmp_82 == 64;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L449;

  L449:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 193} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon337_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L449;

  anon430_Then:
    assume {:partition} Tmp_82 != 64;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L449;

  anon335_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon336_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon338_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon339_Then:
    goto L443;

  anon334_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L443;

  anon429_Then:
    assume {:partition} Tmp_92 != 1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_102;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} Tmp_102 == 2;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  anon431_Then:
    assume {:partition} Tmp_102 != 2;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_97;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    assume {:partition} Tmp_97 == 4;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  anon432_Then:
    assume {:partition} Tmp_97 != 4;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_79;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    assume {:partition} Tmp_79 == 8;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L438;

  anon433_Then:
    assume {:partition} Tmp_79 != 8;
    goto L438;

  anon386_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Br;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    Status_1 := -1073741789;
    goto L96;

  anon427_Then:
    call {:si_unique_call 194} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 195} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Br != 0;
    assume Br > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 196} sdv_KeReleaseSpinLock(0, OldIrql_1);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto L96;

  anon387_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    Status_1 := -1073741789;
    goto L96;

  anon340_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_84;
    assume {:nonnull} Tmp_84 != 0;
    assume Tmp_84 > 0;
    havoc Mask;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:partition} Mask != 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    assume {:partition} BAND(Mask, -16) == 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 197} Tmp_75 := CyzStartOrQueue(Extension_4, Irp_2, PurgeQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant380);
    goto L1;

  anon341_Then:
    assume {:partition} BAND(Mask, -16) != 0;
    goto L485;

  L485:
    Status_1 := -1073741811;
    goto L96;

  anon426_Then:
    assume {:partition} Mask == 0;
    goto L485;

  anon388_Then:
    Tmp_100 := strConst__li2bpl13;
    call {:si_unique_call 198} vslice_dummy_var_44 := CyzDbgPrintEx(9, Tmp_100);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    Tmp_89 := strConst__li2bpl15;
    call {:si_unique_call 199} vslice_dummy_var_45 := CyzDbgPrintEx(6, Tmp_89);
    Status_1 := -1073741789;
    goto L96;

  anon342_Then:
    Tmp_104 := strConst__li2bpl14;
    call {:si_unique_call 200} vslice_dummy_var_46 := CyzDbgPrintEx(9, Tmp_104);
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 201} Tmp_75 := CyzStartOrQueue(Extension_4, Irp_2, MaskQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant177);
    goto L1;

  anon389_Then:
    Tmp_90 := strConst__li2bpl16;
    call {:si_unique_call 202} vslice_dummy_var_40 := CyzDbgPrintEx(9, Tmp_90);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    Tmp_76 := strConst__li2bpl17;
    call {:si_unique_call 203} vslice_dummy_var_41 := CyzDbgPrintEx(6, Tmp_76);
    Status_1 := -1073741789;
    goto L96;

  anon343_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_77;
    assume {:nonnull} Tmp_77 != 0;
    assume Tmp_77 > 0;
    havoc NewMask;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} BAND(NewMask, -8192) != 0;
    Tmp_101 := strConst__li2bpl19;
    call {:si_unique_call 204} vslice_dummy_var_42 := CyzDbgPrintEx(6, Tmp_101);
    Status_1 := -1073741811;
    goto L96;

  anon425_Then:
    assume {:partition} BAND(NewMask, -8192) == 0;
    Tmp_86 := strConst__li2bpl18;
    call {:si_unique_call 205} vslice_dummy_var_43 := CyzDbgPrintEx(9, Tmp_86);
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 206} Tmp_75 := CyzStartOrQueue(Extension_4, Irp_2, MaskQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant177);
    goto L1;

  anon390_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    Status_1 := -1073741789;
    goto L96;

  anon303_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_95;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    goto L96;

  anon391_Then:
    call {:si_unique_call 207} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 208} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 209} vslice_dummy_var_27 := CyzPretendXon(Extension_4);
    call {:si_unique_call 210} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon392_Then:
    call {:si_unique_call 211} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 212} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 213} vslice_dummy_var_28 := CyzPretendXoff(Extension_4);
    call {:si_unique_call 214} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon393_Then:
    goto L59;

  L59:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_6;
    call {:si_unique_call 215} Status_1 := CyzGotoPowerState(vslice_dummy_var_6, Extension_4, 1);
    goto anon344_Then, anon344_Else;

  anon344_Else:
    assume {:partition} Status_1 >= 0;
    goto L547;

  L547:
    call {:si_unique_call 216} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 217} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_96;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:partition} Tmp_96 == 128;
    goto L559;

  L559:
    Status_1 := -1073741811;
    goto L560;

  L560:
    call {:si_unique_call 218} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon423_Then:
    assume {:partition} Tmp_96 != 128;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_94;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} Tmp_94 != 192;
    call {:si_unique_call 219} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 220} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    call {:si_unique_call 221} vslice_dummy_var_30 := CyzSetRTS(Extension_4);
    goto L575;

  L575:
    call {:si_unique_call 222} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L560;

  anon345_Then:
    call {:si_unique_call 223} vslice_dummy_var_29 := CyzClrRTS(Extension_4);
    goto L575;

  anon424_Then:
    assume {:partition} Tmp_94 == 192;
    goto L559;

  anon344_Then:
    assume {:partition} 0 > Status_1;
    goto L96;

  anon302_Then:
    goto L547;

  anon394_Then:
    goto L59;

  anon395_Then:
    goto L96;

  anon396_Then:
    goto L57;

  L57:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_7;
    call {:si_unique_call 224} Status_1 := CyzGotoPowerState(vslice_dummy_var_7, Extension_4, 1);
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} Status_1 >= 0;
    goto L578;

  L578:
    call {:si_unique_call 225} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 226} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_78;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    assume {:partition} Tmp_78 == 2;
    Status_1 := -1073741811;
    goto L593;

  L593:
    call {:si_unique_call 227} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon422_Then:
    assume {:partition} Tmp_78 != 2;
    call {:si_unique_call 228} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 229} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon347_Then, anon347_Else;

  anon347_Else:
    call {:si_unique_call 230} vslice_dummy_var_32 := CyzSetDTR(Extension_4);
    goto L604;

  L604:
    call {:si_unique_call 231} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L593;

  anon347_Then:
    call {:si_unique_call 232} vslice_dummy_var_31 := CyzClrDTR(Extension_4);
    goto L604;

  anon346_Then:
    assume {:partition} 0 > Status_1;
    goto L96;

  anon301_Then:
    goto L578;

  anon397_Then:
    goto L57;

  anon398_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    Status_1 := -1073741789;
    goto L96;

  anon300_Then:
    call {:si_unique_call 233} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 234} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_99;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_99 != 0;
    assume Tmp_99 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_99 != 0;
    assume Tmp_99 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_99 != 0;
    assume Tmp_99 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_99 != 0;
    assume Tmp_99 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Tmp_99 != 0;
    assume Tmp_99 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 235} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon399_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc NewTimeouts;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    Status_1 := -1073741789;
    goto L96;

  anon421_Then:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon350_Then, anon350_Else;

  anon350_Else:
    Status_1 := -1073741811;
    goto L96;

  anon350_Then:
    goto L623;

  L623:
    call {:si_unique_call 236} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 237} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    call {:si_unique_call 238} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon349_Then:
    goto L623;

  anon348_Then:
    goto L623;

  anon400_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    Status_1 := -1073741789;
    goto L96;

  anon351_Then:
    call {:si_unique_call 239} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 240} IoAcquireCancelSpinLock(Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    Status_1 := -1073741811;
    call {:si_unique_call 241} IoReleaseCancelSpinLock(OldIrql);
    goto L96;

  anon352_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    call {:si_unique_call 242} IoReleaseCancelSpinLock(OldIrql);
    Status_1 := -1073741536;
    goto L96;

  anon353_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 243} IoReleaseCancelSpinLock(OldIrql);
    call {:si_unique_call 244} CyzStartImmediate(Extension_4);
    Tmp_75 := 259;
    goto L1;

  anon401_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_8;
    call {:si_unique_call 245} Status_1 := CyzGotoPowerState(vslice_dummy_var_8, Extension_4, 1);
    goto anon354_Then, anon354_Else;

  anon354_Else:
    assume {:partition} Status_1 >= 0;
    goto L665;

  L665:
    call {:si_unique_call 246} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 247} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 248} vslice_dummy_var_33 := CyzTurnOffBreak(Extension_4);
    call {:si_unique_call 249} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon354_Then:
    assume {:partition} 0 > Status_1;
    goto L96;

  anon299_Then:
    goto L665;

  anon402_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_9;
    call {:si_unique_call 250} Status_1 := CyzGotoPowerState(vslice_dummy_var_9, Extension_4, 1);
    goto anon355_Then, anon355_Else;

  anon355_Else:
    assume {:partition} Status_1 >= 0;
    goto L681;

  L681:
    call {:si_unique_call 251} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 252} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 253} vslice_dummy_var_34 := CyzTurnOnBreak(Extension_4);
    call {:si_unique_call 254} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L96;

  anon355_Then:
    assume {:partition} 0 > Status_1;
    goto L96;

  anon298_Then:
    goto L681;

  anon403_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Lc;
    Mask_1 := 255;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    Status_1 := -1073741789;
    goto L96;

  anon419_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_10;
    call {:si_unique_call 255} Status_1 := CyzGotoPowerState(vslice_dummy_var_10, Extension_4, 1);
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:partition} Status_1 >= 0;
    goto L707;

  L707:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon357_Then, anon357_Else;

  anon357_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    LData := 8;
    Mask_1 := 255;
    goto L721;

  L721:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 8;
    goto L731;

  L731:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume {:partition} LData == 1;
    Status_1 := -1073741811;
    goto L96;

  anon361_Then:
    assume {:partition} LData != 1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LStop := 64;
    goto L741;

  L741:
    call {:si_unique_call 256} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 257} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 258} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 259} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 260} vslice_dummy_var_35 := CyzSetLineControl(Extension_4);
    call {:si_unique_call 261} sdv_KeReleaseSpinLock(0, pollIrql);
    call {:si_unique_call 262} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon412_Then:
    Status_1 := -1073741811;
    goto L96;

  anon413_Then:
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} LData != 1;
    Status_1 := -1073741811;
    goto L96;

  anon360_Then:
    assume {:partition} LData == 1;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LStop := 32;
    goto L741;

  anon359_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LStop := 16;
    goto L741;

  anon408_Then:
    Status_1 := -1073741811;
    goto L96;

  anon409_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 4;
    goto L731;

  anon410_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 2;
    goto L731;

  anon411_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 1;
    goto L731;

  anon420_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    LParity := 0;
    goto L731;

  anon405_Then:
    Status_1 := -1073741811;
    goto L96;

  anon406_Then:
    LData := 4;
    Mask_1 := 127;
    goto L721;

  anon407_Then:
    LData := 2;
    Mask_1 := 63;
    goto L721;

  anon357_Then:
    LData := 1;
    Mask_1 := 31;
    goto L721;

  anon358_Then:
    assume {:partition} 0 > Status_1;
    goto L96;

  anon356_Then:
    goto L707;

  anon404_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Rs;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    Status_1 := -1073741789;
    goto L96;

  anon418_Then:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    goto anon362_Then, anon362_Else;

  anon362_Else:
    Status_1 := 0;
    goto L96;

  anon362_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    havoc vslice_dummy_var_11;
    call {:si_unique_call 263} boogieTmp := sdv_ExAllocatePoolWithQuotaTag(0, vslice_dummy_var_11, -797279933);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    call {:si_unique_call 264} Tmp_75 := CyzStartOrQueue(Extension_4, Irp_2, ReadQueue__CYZ_DEVICE_EXTENSION(Extension_4), CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_4), li2bplFunctionConstant381);
    goto L1;

  anon363_Then:
    goto L96;

  anon416_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    Status_1 := -1073741789;
    goto L96;

  anon364_Then:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc Tmp_87;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    havoc BaudRate;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:partition} BaudRate != 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:partition} Status_1 >= 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc vslice_dummy_var_12;
    call {:si_unique_call 265} Status_1 := CyzGotoPowerState(vslice_dummy_var_12, Extension_4, 1);
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:partition} Status_1 >= 0;
    goto L814;

  L814:
    call {:si_unique_call 266} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 267} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc OldIrql_1;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:partition} Status_1 >= 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    call {:si_unique_call 268} Tmp_88 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    call {:si_unique_call 269} sdv_KeAcquireSpinLock(0, Tmp_88);
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc pollIrql;
    call {:si_unique_call 270} vslice_dummy_var_36 := CyzSetBaud(S_2);
    call {:si_unique_call 271} sdv_KeReleaseSpinLock(0, pollIrql);
    goto L825;

  L825:
    call {:si_unique_call 272} sdv_KeReleaseSpinLock(0, OldIrql_1);
    goto L96;

  anon368_Then:
    assume {:partition} 0 > Status_1;
    goto L825;

  anon367_Then:
    assume {:partition} 0 > Status_1;
    goto L96;

  anon366_Then:
    goto L814;

  anon365_Then:
    assume {:partition} 0 > Status_1;
    goto L814;

  anon417_Then:
    assume {:partition} BaudRate == 0;
    Status_1 := -1073741811;
    goto L96;
}



procedure {:origName "CyzClearStats"} CyzClearStats(actual_Context_2: int) returns (Tmp_106: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_106 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzClearStats"} CyzClearStats(actual_Context_2: int) returns (Tmp_106: int)
{
  var {:pointer} Tmp_108: int;
  var {:pointer} Tmp_110: int;
  var {:pointer} Context_2: int;

  anon0:
    Context_2 := actual_Context_2;
    Tmp_110 := Context_2;
    assume {:nonnull} Tmp_110 != 0;
    assume Tmp_110 > 0;
    call {:si_unique_call 273} sdv_RtlZeroMemory(0, 24);
    Tmp_108 := Context_2;
    assume {:nonnull} Tmp_108 != 0;
    assume Tmp_108 > 0;
    call {:si_unique_call 274} sdv_RtlZeroMemory(0, 24);
    Tmp_106 := 0;
    return;
}



procedure {:origName "CyzSetBasicFifoSettings"} CyzSetBasicFifoSettings(actual_Context_3: int) returns (Tmp_112: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_112 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetBasicFifoSettings"} CyzSetBasicFifoSettings(actual_Context_3: int) returns (Tmp_112: int)
{
  var {:pointer} pBasic: int;
  var {:pointer} S_9: int;
  var {:pointer} Extension_5: int;
  var {:pointer} Context_3: int;

  anon0:
    Context_3 := actual_Context_3;
    S_9 := Context_3;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    havoc Extension_5;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    havoc pBasic;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} pBasic != 0;
    assume pBasic > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    goto L20;

  L20:
    call {:si_unique_call 275} CyzIssueCmd(Extension_5, 2, 0, 1);
    Tmp_112 := 0;
    return;

  anon3_Then:
    goto L20;
}



procedure {:origName "CyzSetEscapeChar"} CyzSetEscapeChar(actual_Context_4: int) returns (Tmp_114: int);
  free ensures {:va_keep} Tmp_114 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetEscapeChar"} CyzSetEscapeChar(actual_Context_4: int) returns (Tmp_114: int)
{
  var {:pointer} Tmp_115: int;
  var {:pointer} Tmp_116: int;
  var {:pointer} sdv_104: int;
  var {:pointer} Tmp_118: int;
  var {:pointer} extension_1: int;
  var {:pointer} Context_4: int;

  anon0:
    Context_4 := actual_Context_4;
    call {:si_unique_call 276} sdv_104 := sdv_IoGetCurrentIrpStackLocation(Context_4);
    assume {:nonnull} sdv_104 != 0;
    assume sdv_104 > 0;
    havoc Tmp_118;
    assume {:nonnull} Tmp_118 != 0;
    assume Tmp_118 > 0;
    havoc extension_1;
    Tmp_116 := Context_4;
    assume {:nonnull} Tmp_116 != 0;
    assume Tmp_116 > 0;
    havoc Tmp_115;
    assume {:nonnull} Tmp_115 != 0;
    assume Tmp_115 > 0;
    assume {:nonnull} extension_1 != 0;
    assume extension_1 > 0;
    Tmp_114 := 0;
    return;
}



procedure {:origName "CyzGetCommStatus"} CyzGetCommStatus(actual_Context_5: int) returns (Tmp_119: int);
  free ensures {:va_keep} Tmp_119 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetCommStatus"} CyzGetCommStatus(actual_Context_5: int) returns (Tmp_119: int)
{
  var {:pointer} Stat: int;
  var {:pointer} sdv_105: int;
  var {:pointer} Tmp_120: int;
  var {:pointer} Extension_6: int;
  var {:pointer} Tmp_122: int;
  var {:pointer} Context_5: int;
  var vslice_dummy_var_13: int;

  anon0:
    Context_5 := actual_Context_5;
    Tmp_120 := Context_5;
    assume {:nonnull} Tmp_120 != 0;
    assume Tmp_120 > 0;
    havoc Extension_6;
    Tmp_122 := Context_5;
    assume {:nonnull} Tmp_122 != 0;
    assume Tmp_122 > 0;
    havoc Stat;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc vslice_dummy_var_13;
    call {:si_unique_call 277} sdv_105 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_13);
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} sdv_105 != 0;
    assume sdv_105 > 0;
    goto L13;

  L13:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L22;

  L22:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L24;

  L24:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L26;

  L26:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L28;

  L28:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L20;

  L20:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Stat != 0;
    assume Stat > 0;
    goto L33;

  L33:
    Tmp_119 := 0;
    return;

  anon25_Then:
    goto L33;

  anon19_Then:
    goto L31;

  anon24_Then:
    goto L20;

  anon23_Then:
    goto L28;

  anon22_Then:
    goto L26;

  anon21_Then:
    goto L24;

  anon20_Then:
    goto L22;

  anon27_Then:
    goto L20;

  anon26_Then:
    goto L13;
}



procedure {:origName "CyzIssueCmd"} CyzIssueCmd(actual_Extension_7: int, actual_cmd: int, actual_param: int, actual_wait: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzIssueCmd"} CyzIssueCmd(actual_Extension_7: int, actual_cmd: int, actual_param: int, actual_wait: int)
{
  var {:scalar} interval100ms: int;
  var {:scalar} Tmp_123: int;
  var {:pointer} s_p_e_c_i_a_l_1: int;
  var {:pointer} Tmp_124: int;
  var {:pointer} Tmp_125: int;
  var {:scalar} Tmp_126: int;
  var {:scalar} sdv_106: int;
  var {:pointer} Tmp_127: int;
  var {:pointer} Tmp_128: int;
  var {:pointer} Tmp_129: int;
  var {:scalar} OldIrql_2: int;
  var {:scalar} sdv_107: int;
  var {:pointer} s_p_e_c_i_a_l_2: int;
  var {:scalar} sdv_108: int;
  var {:scalar} sdv_109: int;
  var {:scalar} difference: int;
  var {:pointer} Tmp_131: int;
  var {:pointer} s_p_e_c_i_a_l_3: int;
  var {:scalar} Tmp_132: int;
  var {:pointer} s_p_e_c_i_a_l_4: int;
  var {:pointer} Tmp_133: int;
  var {:scalar} startOfSpin: int;
  var {:scalar} nextQuery: int;
  var {:pointer} Tmp_134: int;
  var {:scalar} Tmp_135: int;
  var {:pointer} Extension_7: int;
  var {:scalar} wait: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;

  anon0:
    call {:si_unique_call 278} interval100ms := __HAVOC_malloc(20);
    call {:si_unique_call 279} Tmp_126 := __HAVOC_malloc(20);
    call {:si_unique_call 280} vslice_dummy_var_47 := __HAVOC_malloc(4);
    call {:si_unique_call 281} difference := __HAVOC_malloc(20);
    call {:si_unique_call 282} startOfSpin := __HAVOC_malloc(20);
    call {:si_unique_call 283} nextQuery := __HAVOC_malloc(20);
    call {:si_unique_call 284} Tmp_135 := __HAVOC_malloc(20);
    Extension_7 := actual_Extension_7;
    wait := actual_wait;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 285} Tmp_134 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    call {:si_unique_call 286} sdv_KeAcquireSpinLock(0, Tmp_134);
    assume {:nonnull} Tmp_134 != 0;
    assume Tmp_134 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_128;
    assume {:nonnull} Tmp_128 != 0;
    assume Tmp_128 > 0;
    assume {:nonnull} interval100ms != 0;
    assume interval100ms > 0;
    Tmp_133 := KeTickCount;
    assume {:nonnull} Tmp_133 != 0;
    assume Tmp_133 > 0;
    havoc s_p_e_c_i_a_l_1;
    goto L20;

  L20:
    call {:si_unique_call 287} CyzIssueCmd_loop_L20(s_p_e_c_i_a_l_1, startOfSpin);
    goto L20_last;

  L20_last:
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L27;

  L27:
    call {:si_unique_call 288} sdv_106, Tmp_129, sdv_107, s_p_e_c_i_a_l_2 := CyzIssueCmd_loop_L27(interval100ms, sdv_106, Tmp_129, sdv_107, s_p_e_c_i_a_l_2, difference, startOfSpin, nextQuery);
    goto L27_last;

  L27_last:
    call {:si_unique_call 301} sdv_106 := corral_nondet();
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} BAND(sdv_106, 255) != 0;
    Tmp_129 := KeTickCount;
    assume {:nonnull} Tmp_129 != 0;
    assume Tmp_129 > 0;
    havoc s_p_e_c_i_a_l_2;
    goto L35;

  L35:
    call {:si_unique_call 289} CyzIssueCmd_loop_L35(s_p_e_c_i_a_l_2, nextQuery);
    goto L35_last;

  L35_last:
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_2 != 0;
    assume s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_2 != 0;
    assume s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_2 != 0;
    assume s_p_e_c_i_a_l_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    call {:si_unique_call 290} sdv_107 := corral_nondet();
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} interval100ms != 0;
    assume interval100ms > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L49;

  L49:
    call {:si_unique_call 291} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L1;

  L1:
    return;

  anon25_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_123;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    assume {:nonnull} Tmp_135 != 0;
    assume Tmp_135 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_124;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_124 != 0;
    assume Tmp_124 > 0;
    havoc vslice_dummy_var_14;
    havoc vslice_dummy_var_15;
    call {:si_unique_call 292} CyzLogError(vslice_dummy_var_14, 0, vslice_dummy_var_15, Tmp_135, 0, 0, 0, Tmp_123, 0, 266240, 0, 0, 0, 0);
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto L49;

  anon24_Then:
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    assume false;
    return;

  anon31_Then:
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    assume false;
    return;

  anon23_Then:
    assume {:partition} BAND(sdv_106, 255) == 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} wait != 0;
    Tmp_131 := KeTickCount;
    assume {:nonnull} Tmp_131 != 0;
    assume Tmp_131 > 0;
    havoc s_p_e_c_i_a_l_3;
    goto L74;

  L74:
    call {:si_unique_call 293} CyzIssueCmd_loop_L74(s_p_e_c_i_a_l_3, startOfSpin);
    goto L74_last;

  L74_last:
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L81;

  L81:
    call {:si_unique_call 294} Tmp_125, sdv_108, sdv_109, s_p_e_c_i_a_l_4 := CyzIssueCmd_loop_L81(interval100ms, Tmp_125, sdv_108, sdv_109, difference, s_p_e_c_i_a_l_4, startOfSpin, nextQuery);
    goto L81_last;

  L81_last:
    call {:si_unique_call 300} sdv_108 := corral_nondet();
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} BAND(sdv_108, 255) != 0;
    Tmp_125 := KeTickCount;
    assume {:nonnull} Tmp_125 != 0;
    assume Tmp_125 > 0;
    havoc s_p_e_c_i_a_l_4;
    goto L88;

  L88:
    call {:si_unique_call 295} CyzIssueCmd_loop_L88(s_p_e_c_i_a_l_4, nextQuery);
    goto L88_last;

  L88_last:
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_4 != 0;
    assume s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_4 != 0;
    assume s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_4 != 0;
    assume s_p_e_c_i_a_l_4 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    call {:si_unique_call 296} sdv_109 := corral_nondet();
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} interval100ms != 0;
    assume interval100ms > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L102;

  L102:
    call {:si_unique_call 297} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L1;

  anon29_Then:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_132;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} Tmp_126 != 0;
    assume Tmp_126 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_127;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_127 != 0;
    assume Tmp_127 > 0;
    havoc vslice_dummy_var_16;
    havoc vslice_dummy_var_17;
    call {:si_unique_call 298} CyzLogError(vslice_dummy_var_16, 0, vslice_dummy_var_17, Tmp_126, 0, 0, 0, Tmp_132, 0, 266240, 0, 0, 0, 0);
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto L102;

  anon28_Then:
    goto anon28_Then_dummy;

  anon28_Then_dummy:
    assume false;
    return;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} BAND(sdv_108, 255) == 0;
    goto L68;

  L68:
    call {:si_unique_call 299} sdv_KeReleaseSpinLock(0, OldIrql_2);
    goto L1;

  anon32_Then:
    goto anon32_Then_dummy;

  anon32_Then_dummy:
    assume false;
    return;

  anon26_Then:
    assume {:partition} wait == 0;
    goto L68;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    assume false;
    return;
}



procedure {:origName "CyzInternalIoControl"} CyzInternalIoControl(actual_PDevObj: int, actual_PIrp: int) returns (Tmp_136: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_136 == 0 || Tmp_136 == -1073741536 || Tmp_136 == 259 || Tmp_136 == -1073741738 || Tmp_136 == -1073741811 || Tmp_136 == -1073741789 || Tmp_136 == -1073741637;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzInternalIoControl"} CyzInternalIoControl(actual_PDevObj: int, actual_PIrp: int) returns (Tmp_136: int)
{
  var {:pointer} Tmp_137: int;
  var {:scalar} basic: int;
  var {:pointer} pBasic_1: int;
  var {:pointer} Tmp_138: int;
  var {:pointer} pDevExt_1: int;
  var {:pointer} Tmp_139: int;
  var {:scalar} prologueStatus_1: int;
  var {:scalar} S_10: int;
  var {:scalar} cap: int;
  var {:scalar} OldIrql_3: int;
  var {:pointer} Tmp_140: int;
  var {:scalar} Tmp_141: int;
  var {:pointer} Tmp_142: int;
  var {:pointer} pIrpStack: int;
  var {:scalar} sdv_117: int;
  var {:pointer} Tmp_143: int;
  var {:scalar} Tmp_144: int;
  var {:scalar} status_2: int;
  var {:scalar} pollIrql_1: int;
  var {:pointer} PDevObj: int;
  var {:pointer} PIrp: int;
  var boogieTmp: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 302} basic := __HAVOC_malloc(44);
    call {:si_unique_call 303} S_10 := __HAVOC_malloc(8);
    PDevObj := actual_PDevObj;
    PIrp := actual_PIrp;
    call {:si_unique_call 304} Tmp_137 := __HAVOC_malloc(72);
    call {:si_unique_call 305} Tmp_138 := __HAVOC_malloc(96);
    call {:si_unique_call 306} Tmp_139 := __HAVOC_malloc(28);
    call {:si_unique_call 307} Tmp_140 := __HAVOC_malloc(72);
    call {:si_unique_call 308} Tmp_143 := __HAVOC_malloc(28);
    assume {:nonnull} PDevObj != 0;
    assume PDevObj > 0;
    havoc pDevExt_1;
    call {:si_unique_call 309} prologueStatus_1 := CyzIRPPrologue(PIrp, pDevExt_1);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} prologueStatus_1 != 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} prologueStatus_1 != 259;
    Tmp_140 := strConst__li2bpl3;
    call {:si_unique_call 310} vslice_dummy_var_51 := CyzDbgPrintEx(9, Tmp_140);
    call {:si_unique_call 311} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 312} CyzIRPEpilogue(pDevExt_1);
    goto L20;

  L20:
    Tmp_136 := prologueStatus_1;
    goto L1;

  L1:
    return;

  anon32_Then:
    assume {:partition} prologueStatus_1 == 259;
    goto L20;

  anon31_Then:
    assume {:partition} prologueStatus_1 == 0;
    Tmp_138 := strConst__li2bpl1;
    call {:si_unique_call 313} vslice_dummy_var_52 := CyzDbgPrintEx(9, Tmp_138);
    call {:si_unique_call 314} sdv_117 := CyzCompleteIfError(PDevObj, PIrp);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_117 != 0;
    Tmp_136 := -1073741536;
    goto L1;

  anon33_Then:
    assume {:partition} sdv_117 == 0;
    call {:si_unique_call 315} pIrpStack := sdv_IoGetCurrentIrpStackLocation(PIrp);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    status_2 := 0;
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto L50;

  L50:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    status_2 := -1073741789;
    goto L59;

  L59:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    Tmp_137 := strConst__li2bpl3;
    call {:si_unique_call 316} vslice_dummy_var_53 := CyzDbgPrintEx(9, Tmp_137);
    call {:si_unique_call 317} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 318} CyzIRPEpilogue(pDevExt_1);
    Tmp_136 := status_2;
    goto L1;

  anon35_Then:
    call {:si_unique_call 319} sdv_RtlZeroMemory(0, 44);
    assume {:nonnull} basic != 0;
    assume basic > 0;
    assume {:nonnull} basic != 0;
    assume basic > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    havoc pBasic_1;
    call {:si_unique_call 320} sdv_RtlCopyMemory(0, 0, 20);
    call {:si_unique_call 321} sdv_RtlCopyMemory(0, 0, 16);
    assume {:nonnull} pBasic_1 != 0;
    assume pBasic_1 > 0;
    call {:si_unique_call 322} boogieTmp := corral_nondet();
    assume {:nonnull} pBasic_1 != 0;
    assume pBasic_1 > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    pBasic_1 := basic;
    goto L86;

  L86:
    call {:si_unique_call 323} Tmp_142 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    call {:si_unique_call 324} sdv_KeAcquireSpinLock(0, Tmp_142);
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    havoc OldIrql_3;
    call {:si_unique_call 325} sdv_RtlCopyMemory(0, 0, 20);
    assume {:nonnull} S_10 != 0;
    assume S_10 > 0;
    assume {:nonnull} S_10 != 0;
    assume S_10 > 0;
    assume {:nonnull} pBasic_1 != 0;
    assume pBasic_1 > 0;
    call {:si_unique_call 326} Tmp_142 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    call {:si_unique_call 327} sdv_KeAcquireSpinLock(0, Tmp_142);
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    havoc pollIrql_1;
    call {:si_unique_call 328} vslice_dummy_var_48 := CyzSetHandFlow(S_10);
    call {:si_unique_call 329} sdv_KeReleaseSpinLock(0, pollIrql_1);
    assume {:nonnull} S_10 != 0;
    assume S_10 > 0;
    call {:si_unique_call 330} Tmp_142 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    call {:si_unique_call 331} sdv_KeAcquireSpinLock(0, Tmp_142);
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    havoc pollIrql_1;
    call {:si_unique_call 332} vslice_dummy_var_49 := CyzSetBasicFifoSettings(S_10);
    call {:si_unique_call 333} sdv_KeReleaseSpinLock(0, pollIrql_1);
    call {:si_unique_call 334} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L59;

  anon45_Then:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    status_2 := -1073741789;
    goto L59;

  anon34_Then:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    havoc pBasic_1;
    goto L86;

  anon38_Then:
    status_2 := -1073741811;
    goto L59;

  anon39_Then:
    goto L50;

  anon40_Then:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    call {:si_unique_call 335} vslice_dummy_var_50 := IoCancelIrp(0);
    goto L121;

  L121:
    status_2 := 0;
    goto L59;

  anon44_Then:
    goto L121;

  anon41_Then:
    cap := 2;
    goto L126;

  L126:
    call {:si_unique_call 336} Tmp_139, cap, Tmp_141, Tmp_143, Tmp_144 := CyzInternalIoControl_loop_L126(pDevExt_1, Tmp_139, cap, Tmp_141, Tmp_143, Tmp_144);
    goto L126_last;

  L126_last:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} 7 > cap;
    Tmp_141 := cap;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc Tmp_139;
    assume {:nonnull} Tmp_139 != 0;
    assume Tmp_139 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    Tmp_144 := cap;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc Tmp_143;
    assume {:nonnull} Tmp_143 != 0;
    assume Tmp_143 > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto L129;

  L129:
    cap := cap + 1;
    goto L129_dummy;

  L129_dummy:
    assume false;
    return;

  anon43_Then:
    goto L127;

  L127:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} 7 > cap;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    status_2 := 0;
    goto L59;

  anon37_Then:
    assume {:partition} cap >= 7;
    status_2 := -1073741637;
    goto L59;

  anon42_Then:
    goto L129;

  anon36_Then:
    assume {:partition} cap >= 7;
    goto L127;
}



procedure {:origName "CyzSetFCRContents"} CyzSetFCRContents(actual_Context_6: int) returns (Tmp_145: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_145 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetFCRContents"} CyzSetFCRContents(actual_Context_6: int) returns (Tmp_145: int)
{
  var {:pointer} Tmp_147: int;
  var {:pointer} Extension_8: int;
  var {:pointer} Tmp_148: int;
  var {:pointer} Result_1: int;
  var {:pointer} Context_6: int;

  anon0:
    Context_6 := actual_Context_6;
    Tmp_148 := Context_6;
    assume {:nonnull} Tmp_148 != 0;
    assume Tmp_148 > 0;
    havoc Extension_8;
    Tmp_147 := Context_6;
    assume {:nonnull} Tmp_147 != 0;
    assume Tmp_147 > 0;
    havoc Result_1;
    assume {:nonnull} Result_1 != 0;
    assume Result_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    call {:si_unique_call 337} CyzIssueCmd(Extension_8, 87, 0, 0);
    goto L8;

  L8:
    assume {:nonnull} Result_1 != 0;
    assume Result_1 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 338} CyzIssueCmd(Extension_8, 86, 0, 0);
    goto L12;

  L12:
    Tmp_145 := 0;
    return;

  anon5_Then:
    goto L12;

  anon6_Then:
    goto L8;
}



procedure {:origName "CyzGetMCRContents"} CyzGetMCRContents(actual_Context_7: int) returns (Tmp_149: int);
  free ensures {:va_keep} Tmp_149 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetMCRContents"} CyzGetMCRContents(actual_Context_7: int) returns (Tmp_149: int)
{
  var {:pointer} Tmp_150: int;
  var {:scalar} op_1: int;
  var {:pointer} Extension_9: int;
  var {:pointer} Tmp_152: int;
  var {:pointer} Result_2: int;
  var {:scalar} rs_2: int;
  var {:pointer} Context_7: int;

  anon0:
    Context_7 := actual_Context_7;
    Tmp_152 := Context_7;
    assume {:nonnull} Tmp_152 != 0;
    assume Tmp_152 > 0;
    havoc Extension_9;
    Tmp_150 := Context_7;
    assume {:nonnull} Tmp_150 != 0;
    assume Tmp_150 > 0;
    havoc Result_2;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    assume {:nonnull} Extension_9 != 0;
    assume Extension_9 > 0;
    call {:si_unique_call 339} rs_2 := corral_nondet();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} BAND(rs_2, 4) != 0;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    goto L17;

  L17:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} BAND(rs_2, 1) != 0;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    goto L19;

  L19:
    call {:si_unique_call 340} op_1 := corral_nondet();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(op_1, 4) != 0;
    assume {:nonnull} Result_2 != 0;
    assume Result_2 > 0;
    goto L25;

  L25:
    Tmp_149 := 0;
    return;

  anon9_Then:
    assume {:partition} BAND(op_1, 4) == 0;
    goto L25;

  anon8_Then:
    assume {:partition} BAND(rs_2, 1) == 0;
    goto L19;

  anon7_Then:
    assume {:partition} BAND(rs_2, 4) == 0;
    goto L17;
}



procedure {:origName "CyzGetModemUpdate"} CyzGetModemUpdate(actual_Context_8: int) returns (Tmp_153: int);
  modifies alloc, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_153 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetModemUpdate"} CyzGetModemUpdate(actual_Context_8: int) returns (Tmp_153: int)
{
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_156: int;
  var {:pointer} Extension_10: int;
  var {:pointer} Result_3: int;
  var {:pointer} Context_8: int;
  var boogieTmp: int;

  anon0:
    Context_8 := actual_Context_8;
    Tmp_156 := Context_8;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    havoc Extension_10;
    Tmp_154 := Context_8;
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    havoc Result_3;
    assume {:nonnull} Result_3 != 0;
    assume Result_3 > 0;
    call {:si_unique_call 341} boogieTmp := CyzHandleModemUpdate#1(Extension_10, 0, 0);
    Tmp_153 := 0;
    return;
}



procedure {:origName "CyzSetChars"} CyzSetChars(actual_Context_9: int) returns (Tmp_157: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_157 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetChars"} CyzSetChars(actual_Context_9: int) returns (Tmp_157: int)
{
  var {:pointer} Tmp_158: int;
  var {:pointer} Extension_11: int;
  var {:pointer} Tmp_161: int;
  var {:pointer} Tmp_163: int;
  var {:pointer} Context_9: int;

  anon0:
    Context_9 := actual_Context_9;
    Tmp_158 := Context_9;
    assume {:nonnull} Tmp_158 != 0;
    assume Tmp_158 > 0;
    havoc Extension_11;
    Tmp_161 := Context_9;
    assume {:nonnull} Tmp_161 != 0;
    assume Tmp_161 > 0;
    havoc Tmp_163;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} Tmp_163 != 0;
    assume Tmp_163 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    call {:si_unique_call 342} CyzIssueCmd(Extension_11, 3, 0, 0);
    Tmp_157 := 0;
    return;
}



procedure {:origName "CyzSetBaud"} CyzSetBaud(actual_Context_10: int) returns (Tmp_164: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_164 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetBaud"} CyzSetBaud(actual_Context_10: int) returns (Tmp_164: int)
{
  var {:pointer} Tmp_166: int;
  var {:pointer} Tmp_167: int;
  var {:pointer} Extension_12: int;
  var {:pointer} Context_10: int;

  anon0:
    Context_10 := actual_Context_10;
    Tmp_167 := Context_10;
    assume {:nonnull} Tmp_167 != 0;
    assume Tmp_167 > 0;
    havoc Extension_12;
    Tmp_166 := Context_10;
    assume {:nonnull} Tmp_166 != 0;
    assume Tmp_166 > 0;
    assume {:nonnull} Extension_12 != 0;
    assume Extension_12 > 0;
    call {:si_unique_call 343} CyzIssueCmd(Extension_12, 3, 0, 0);
    Tmp_164 := 0;
    return;
}



procedure {:origName "CyzSetLineControl"} CyzSetLineControl(actual_Context_11: int) returns (Tmp_168: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_168 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetLineControl"} CyzSetLineControl(actual_Context_11: int) returns (Tmp_168: int)
{
  var {:pointer} Extension_13: int;
  var {:pointer} Context_11: int;

  anon0:
    Context_11 := actual_Context_11;
    Extension_13 := Context_11;
    assume {:nonnull} Extension_13 != 0;
    assume Extension_13 > 0;
    call {:si_unique_call 344} CyzIssueCmd(Extension_13, 3, 0, 0);
    Tmp_168 := 0;
    return;
}



procedure {:origName "CyzUnload"} CyzUnload(actual_DriverObject: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzUnload"} CyzUnload(actual_DriverObject: int)
{
  var {:pointer} Tmp_172: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;

  anon0:
    call {:si_unique_call 345} vslice_dummy_var_54 := __HAVOC_malloc(4);
    call {:si_unique_call 346} Tmp_172 := __HAVOC_malloc(56);
    call {:si_unique_call 347} sdv_do_paged_code_check();
    call {:si_unique_call 348} vslice_dummy_var_55 := sdv_MmLockPagableCodeSection(li2bplFunctionConstant331);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 349} sdv_ExFreePool(0);
    goto L13;

  L13:
    Tmp_172 := strConst__li2bpl20;
    call {:si_unique_call 350} vslice_dummy_var_56 := CyzDbgPrintEx(6, Tmp_172);
    call {:si_unique_call 351} MmUnlockPagableImageSection(0);
    return;

  anon3_Then:
    goto L13;
}



procedure {:origName "CyzCleanLists"} CyzCleanLists(actual_Context_12: int) returns (Tmp_173: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_173 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCleanLists"} CyzCleanLists(actual_Context_12: int) returns (Tmp_173: int)
{
  var {:scalar} i: int;
  var {:scalar} Tmp_174: int;
  var {:pointer} Tmp_175: int;
  var {:pointer} pDevExt_2: int;
  var {:scalar} cancelled: int;
  var {:scalar} Tmp_176: int;
  var {:pointer} Tmp_177: int;
  var {:pointer} Tmp_178: int;
  var {:pointer} Tmp_179: int;
  var {:pointer} pDispatch_1: int;
  var {:pointer} Context_12: int;
  var vslice_dummy_var_57: int;

  anon0:
    Context_12 := actual_Context_12;
    call {:si_unique_call 352} Tmp_175 := __HAVOC_malloc(256);
    call {:si_unique_call 353} Tmp_178 := __HAVOC_malloc(256);
    call {:si_unique_call 354} Tmp_179 := __HAVOC_malloc(140);
    pDevExt_2 := Context_12;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc pDispatch_1;
    Tmp_179 := strConst__li2bpl21;
    call {:si_unique_call 355} vslice_dummy_var_57 := CyzDbgPrintEx(12, Tmp_179);
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_176;
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    havoc Tmp_175;
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    i := 0;
    goto L15;

  L15:
    call {:si_unique_call 356} i, Tmp_174, Tmp_177, Tmp_178 := CyzCleanLists_loop_L15(i, Tmp_174, pDevExt_2, Tmp_177, Tmp_178, pDispatch_1);
    goto L15_last;

  L15_last:
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    Tmp_174 := i;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_177;
    assume {:nonnull} Tmp_177 != 0;
    assume Tmp_177 > 0;
    havoc Tmp_178;
    assume {:nonnull} Tmp_178 != 0;
    assume Tmp_178 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto L18;

  L18:
    i := i + 1;
    goto L18_dummy;

  L18_dummy:
    assume false;
    return;

  anon18_Then:
    goto L16;

  L16:
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    call {:si_unique_call 357} cancelled := KeCancelTimer(0);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} cancelled != 0;
    assume {:nonnull} pDispatch_1 != 0;
    assume pDispatch_1 > 0;
    goto L12;

  L12:
    Tmp_173 := 1;
    return;

  anon17_Then:
    assume {:partition} cancelled == 0;
    goto L12;

  anon15_Then:
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    goto L12;

  anon16_Then:
    goto L18;

  anon14_Then:
    goto L16;

  anon13_Then:
    goto L12;
}



procedure {:origName "CyzDoesPortExist"} CyzDoesPortExist(actual_Extension_14: int, actual_InsertString: int) returns (Tmp_181: int);
  free ensures {:va_keep} Tmp_181 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzDoesPortExist"} CyzDoesPortExist(actual_Extension_14: int, actual_InsertString: int) returns (Tmp_181: int)
{

  anon0:
    Tmp_181 := 1;
    return;
}



procedure {:origName "CyzMemCompare"} CyzMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_183: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_183 == 0 || Tmp_183 == 2 || Tmp_183 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzMemCompare"} CyzMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_183: int)
{
  var {:scalar} A: int;
  var {:scalar} B: int;
  var {:scalar} b: int;
  var {:scalar} higher: int;
  var {:scalar} lowerSpan: int;
  var {:scalar} lower: int;
  var {:scalar} a: int;
  var {:pointer} structPtr888A: int;
  var {:scalar} SpanOfA: int;
  var {:pointer} structPtr888B: int;
  var {:scalar} SpanOfB: int;

  anon0:
    call {:si_unique_call 358} A := __HAVOC_malloc(20);
    call {:si_unique_call 359} B := __HAVOC_malloc(20);
    call {:si_unique_call 360} b := __HAVOC_malloc(20);
    call {:si_unique_call 361} higher := __HAVOC_malloc(20);
    call {:si_unique_call 362} lower := __HAVOC_malloc(20);
    call {:si_unique_call 363} a := __HAVOC_malloc(20);
    structPtr888A := actual_structPtr888A;
    SpanOfA := actual_SpanOfA;
    structPtr888B := actual_structPtr888B;
    SpanOfB := actual_SpanOfB;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_183 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfB;
    goto L17;

  L17:
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_183 := 2;
    goto L1;

  anon8_Then:
    Tmp_183 := 1;
    goto L1;

  anon7_Then:
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfA;
    goto L17;
}



procedure {:origName "CyzReset"} CyzReset(actual_Context_13: int) returns (Tmp_185: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_185 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzReset"} CyzReset(actual_Context_13: int) returns (Tmp_185: int)
{
  var {:scalar} s: int;
  var {:pointer} extension_2: int;
  var {:pointer} Context_13: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;

  anon0:
    call {:si_unique_call 364} s := __HAVOC_malloc(8);
    Context_13 := actual_Context_13;
    extension_2 := Context_13;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 365} vslice_dummy_var_60 := CyzSetLineControl(extension_2);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 366} vslice_dummy_var_58 := CyzSetupNewHandFlow(extension_2, HandFlow__CYZ_DEVICE_EXTENSION(extension_2));
    call {:si_unique_call 367} vslice_dummy_var_59 := CyzHandleModemUpdate#1(extension_2, 0, 0);
    assume {:nonnull} s != 0;
    assume s > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} s != 0;
    assume s > 0;
    call {:si_unique_call 368} vslice_dummy_var_61 := CyzSetBaud(s);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 369} CyzIssueCmd(extension_2, 3, 0, 0);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    Tmp_185 := 0;
    return;
}



procedure {:origName "CyzRemoveDevObj"} CyzRemoveDevObj(actual_PDevObj_1: int) returns (Tmp_187: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_187 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzRemoveDevObj"} CyzRemoveDevObj(actual_PDevObj_1: int) returns (Tmp_187: int)
{
  var {:pointer} pDevExt_3: int;
  var {:pointer} Tmp_193: int;
  var {:pointer} Tmp_194: int;
  var {:pointer} PDevObj_1: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;

  anon0:
    PDevObj_1 := actual_PDevObj_1;
    call {:si_unique_call 370} Tmp_193 := __HAVOC_malloc(84);
    call {:si_unique_call 371} Tmp_194 := __HAVOC_malloc(88);
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    havoc pDevExt_3;
    call {:si_unique_call 372} sdv_do_paged_code_check();
    Tmp_194 := strConst__li2bpl22;
    call {:si_unique_call 373} vslice_dummy_var_62 := CyzDbgPrintEx(2, Tmp_194);
    call {:si_unique_call 374} IoDetachDevice(0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 375} sdv_ExFreePool(0);
    goto L15;

  L15:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 376} sdv_ExFreePool(0);
    goto L19;

  L19:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 377} sdv_ExFreePool(0);
    goto L23;

  L23:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 378} sdv_ExFreePool(0);
    goto L27;

  L27:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 379} sdv_ExFreePool(0);
    goto L31;

  L31:
    call {:si_unique_call 380} IoDeleteDevice(0);
    Tmp_193 := strConst__li2bpl23;
    call {:si_unique_call 381} vslice_dummy_var_63 := CyzDbgPrintEx(2, Tmp_193);
    Tmp_187 := 0;
    return;

  anon15_Then:
    goto L31;

  anon14_Then:
    goto L27;

  anon13_Then:
    goto L23;

  anon12_Then:
    goto L19;

  anon11_Then:
    goto L15;
}



procedure {:origName "CyzFindInitController"} CyzFindInitController(actual_PDevObj_2: int, actual_PConfig: int) returns (Tmp_196: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_196 == -1073741810 || Tmp_196 == 0 || Tmp_196 == -1073741709 || Tmp_196 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzFindInitController"} CyzFindInitController(actual_PDevObj_2: int, actual_PConfig: int) returns (Tmp_196: int)
{
  var {:pointer} Tmp_197: int;
  var {:scalar} Tmp_198: int;
  var {:scalar} Tmp_199: int;
  var {:scalar} Tmp_200: int;
  var {:scalar} sdv_133: int;
  var {:scalar} sdv_135: int;
  var {:scalar} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:pointer} pCurDevObj: int;
  var {:pointer} Tmp_203: int;
  var {:scalar} Tmp_204: int;
  var {:pointer} pDevExt_4: int;
  var {:pointer} sdv_137: int;
  var {:scalar} Tmp_205: int;
  var {:pointer} Tmp_206: int;
  var {:scalar} Tmp_207: int;
  var {:pointer} sdv_139: int;
  var {:pointer} Tmp_208: int;
  var {:scalar} sdv_141: int;
  var {:pointer} Tmp_209: int;
  var {:pointer} Tmp_210: int;
  var {:pointer} pExtension: int;
  var {:scalar} oldIrql: int;
  var {:scalar} sdv_145: int;
  var {:pointer} Tmp_211: int;
  var {:pointer} Tmp_212: int;
  var {:scalar} Tmp_213: int;
  var {:scalar} sdv_146: int;
  var {:scalar} Tmp_214: int;
  var {:scalar} Tmp_215: int;
  var {:scalar} sdv_150: int;
  var {:scalar} status_3: int;
  var {:scalar} serialPhysicalMax: int;
  var {:pointer} Tmp_216: int;
  var {:scalar} sdv_152: int;
  var {:scalar} Tmp_217: int;
  var {:scalar} Tmp_218: int;
  var {:pointer} PDevObj_2: int;
  var {:pointer} PConfig: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 382} Tmp_201 := __HAVOC_malloc(20);
    call {:si_unique_call 383} Tmp_204 := __HAVOC_malloc(20);
    call {:si_unique_call 384} Tmp_213 := __HAVOC_malloc(20);
    call {:si_unique_call 385} serialPhysicalMax := __HAVOC_malloc(20);
    PDevObj_2 := actual_PDevObj_2;
    PConfig := actual_PConfig;
    call {:si_unique_call 386} Tmp_197 := __HAVOC_malloc(104);
    call {:si_unique_call 387} Tmp_202 := __HAVOC_malloc(116);
    call {:si_unique_call 388} Tmp_203 := __HAVOC_malloc(60);
    call {:si_unique_call 389} Tmp_208 := __HAVOC_malloc(328);
    call {:si_unique_call 390} Tmp_209 := __HAVOC_malloc(328);
    call {:si_unique_call 391} Tmp_210 := __HAVOC_malloc(336);
    call {:si_unique_call 392} Tmp_211 := __HAVOC_malloc(324);
    call {:si_unique_call 393} Tmp_212 := __HAVOC_malloc(128);
    call {:si_unique_call 394} Tmp_216 := __HAVOC_malloc(776);
    assume {:nonnull} PDevObj_2 != 0;
    assume PDevObj_2 > 0;
    havoc pDevExt_4;
    Tmp_212 := strConst__li2bpl31;
    call {:si_unique_call 395} vslice_dummy_var_64 := CyzDbgPrintEx(2, Tmp_212);
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    Tmp_216 := strConst__li2bpl32;
    call {:si_unique_call 396} vslice_dummy_var_65 := CyzDbgPrintEx(4, Tmp_216);
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_18;
    havoc vslice_dummy_var_19;
    call {:si_unique_call 397} sdv_145 := CyzMemCompare(vslice_dummy_var_18, vslice_dummy_var_19, serialPhysicalMax, 0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_145 != 2;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_214;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc Tmp_215;
    assume {:nonnull} Tmp_213 != 0;
    assume Tmp_213 > 0;
    assume {:nonnull} Tmp_213 != 0;
    assume Tmp_213 > 0;
    assume {:nonnull} Tmp_213 != 0;
    assume Tmp_213 > 0;
    assume {:nonnull} Tmp_213 != 0;
    assume Tmp_213 > 0;
    assume {:nonnull} Tmp_213 != 0;
    assume Tmp_213 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_2 != 0;
    assume PDevObj_2 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_20;
    havoc vslice_dummy_var_21;
    havoc vslice_dummy_var_22;
    call {:si_unique_call 398} CyzLogError(vslice_dummy_var_20, 0, vslice_dummy_var_21, Tmp_213, 0, 0, 0, Tmp_215, 0, -1073475558, Tmp_214, vslice_dummy_var_22, 0, 0);
    Tmp_210 := strConst__li2bpl24;
    call {:si_unique_call 399} vslice_dummy_var_66 := CyzDbgPrintEx(1, Tmp_210);
    Tmp_196 := -1073741810;
    goto L1;

  L1:
    return;

  anon31_Then:
    assume {:partition} sdv_145 == 2;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_23;
    havoc vslice_dummy_var_24;
    call {:si_unique_call 400} sdv_146 := CyzMemCompare(vslice_dummy_var_23, vslice_dummy_var_24, serialPhysicalMax, 0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_146 != 2;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_198;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc Tmp_199;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_2 != 0;
    assume PDevObj_2 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_25;
    havoc vslice_dummy_var_26;
    havoc vslice_dummy_var_27;
    call {:si_unique_call 401} CyzLogError(vslice_dummy_var_25, 0, vslice_dummy_var_26, Tmp_201, 0, 0, 0, Tmp_199, 0, -1073475557, Tmp_198, vslice_dummy_var_27, 0, 0);
    Tmp_208 := strConst__li2bpl25;
    call {:si_unique_call 402} vslice_dummy_var_67 := CyzDbgPrintEx(1, Tmp_208);
    Tmp_196 := -1073741810;
    goto L1;

  anon32_Then:
    assume {:partition} sdv_146 == 2;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} Tmp_204 != 0;
    assume Tmp_204 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_28;
    havoc vslice_dummy_var_29;
    call {:si_unique_call 403} sdv_150 := CyzMemCompare(vslice_dummy_var_28, vslice_dummy_var_29, Tmp_204, 0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_150 != 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_30;
    havoc vslice_dummy_var_31;
    havoc vslice_dummy_var_32;
    havoc vslice_dummy_var_33;
    call {:si_unique_call 404} sdv_141 := CyzMemCompare(vslice_dummy_var_30, vslice_dummy_var_31, vslice_dummy_var_32, vslice_dummy_var_33);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_141 != 2;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_217;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc Tmp_200;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_2 != 0;
    assume PDevObj_2 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc vslice_dummy_var_34;
    havoc vslice_dummy_var_35;
    havoc vslice_dummy_var_36;
    havoc vslice_dummy_var_37;
    call {:si_unique_call 405} CyzLogError(vslice_dummy_var_34, 0, vslice_dummy_var_35, vslice_dummy_var_36, 0, 0, 0, Tmp_200, 0, -1073475556, Tmp_217, vslice_dummy_var_37, 0, 0);
    Tmp_211 := strConst__li2bpl26;
    call {:si_unique_call 406} vslice_dummy_var_68 := CyzDbgPrintEx(1, Tmp_211);
    Tmp_196 := -1073741810;
    goto L1;

  anon34_Then:
    assume {:partition} sdv_141 == 2;
    goto L52;

  L52:
    call {:si_unique_call 407} Tmp_206 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    call {:si_unique_call 408} sdv_KeAcquireSpinLock(0, Tmp_206);
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    havoc oldIrql;
    call {:si_unique_call 409} sdv_152 := sdv_IsListEmpty(0);
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_152 != 0;
    pCurDevObj := 0;
    pExtension := 0;
    goto L75;

  L75:
    call {:si_unique_call 410} sdv_KeReleaseSpinLock(0, oldIrql);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L82;

  L82:
    call {:si_unique_call 411} sdv_133, pCurDevObj, sdv_137, Tmp_206, pExtension, oldIrql := CyzFindInitController_loop_L82(sdv_133, pCurDevObj, sdv_137, Tmp_206, pExtension, oldIrql, PConfig);
    goto L82_last;

  L82_last:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_38;
    havoc vslice_dummy_var_39;
    havoc vslice_dummy_var_40;
    havoc vslice_dummy_var_41;
    call {:si_unique_call 412} sdv_133 := CyzMemCompare(vslice_dummy_var_38, vslice_dummy_var_39, vslice_dummy_var_40, vslice_dummy_var_41);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} sdv_133 == 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_42;
    havoc vslice_dummy_var_43;
    havoc vslice_dummy_var_44;
    havoc vslice_dummy_var_45;
    call {:si_unique_call 413} sdv_135 := CyzMemCompare(vslice_dummy_var_42, vslice_dummy_var_43, vslice_dummy_var_44, vslice_dummy_var_45);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} sdv_135 != 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_218;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    havoc Tmp_205;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc Tmp_207;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_2 != 0;
    assume PDevObj_2 > 0;
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_46;
    havoc vslice_dummy_var_47;
    havoc vslice_dummy_var_48;
    havoc vslice_dummy_var_49;
    havoc vslice_dummy_var_50;
    call {:si_unique_call 414} CyzLogError(vslice_dummy_var_46, 0, vslice_dummy_var_47, vslice_dummy_var_48, 0, 0, 0, Tmp_207, 0, -1073475550, Tmp_205, vslice_dummy_var_49, Tmp_218, vslice_dummy_var_50);
    Tmp_209 := strConst__li2bpl29;
    call {:si_unique_call 415} vslice_dummy_var_70 := CyzDbgPrintEx(1, Tmp_209);
    Tmp_196 := -1073741810;
    goto L1;

  anon41_Then:
    assume {:partition} sdv_135 == 0;
    Tmp_202 := strConst__li2bpl28;
    call {:si_unique_call 416} vslice_dummy_var_71 := CyzDbgPrintEx(4, Tmp_202);
    Tmp_203 := strConst__li2bpl30;
    call {:si_unique_call 417} vslice_dummy_var_72 := CyzDbgPrintEx(4, Tmp_203);
    call {:si_unique_call 418} status_3 := CyzInitMultiPort(pExtension, PConfig, PDevObj_2);
    Tmp_196 := status_3;
    goto L1;

  anon40_Then:
    assume {:partition} sdv_133 != 0;
    goto L83;

  L83:
    call {:si_unique_call 419} Tmp_206 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    call {:si_unique_call 420} sdv_KeAcquireSpinLock(0, Tmp_206);
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    havoc oldIrql;
    assume {:nonnull} pCurDevObj != 0;
    assume pCurDevObj > 0;
    havoc pCurDevObj;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 421} sdv_137 := sdv_containing_record(pCurDevObj, 4);
    pExtension := sdv_137;
    goto L119;

  L119:
    call {:si_unique_call 422} sdv_KeReleaseSpinLock(0, oldIrql);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto anon43_Else_dummy;

  anon43_Else_dummy:
    assume false;
    return;

  anon43_Then:
    goto L79;

  L79:
    Tmp_197 := strConst__li2bpl27;
    call {:si_unique_call 423} vslice_dummy_var_69 := CyzDbgPrintEx(4, Tmp_197);
    call {:si_unique_call 424} status_3 := CyzInitController(PDevObj_2, PConfig);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} status_3 >= 0;
    Tmp_196 := 0;
    goto L1;

  anon44_Then:
    assume {:partition} 0 > status_3;
    Tmp_196 := status_3;
    goto L1;

  anon42_Then:
    goto L79;

  anon45_Then:
    goto L119;

  anon39_Then:
    goto L83;

  anon38_Then:
    goto L83;

  anon37_Then:
    goto L83;

  anon36_Then:
    goto L79;

  anon35_Then:
    assume {:partition} sdv_152 == 0;
    havoc pCurDevObj;
    call {:si_unique_call 425} sdv_139 := sdv_containing_record(pCurDevObj, 4);
    pExtension := sdv_139;
    goto L75;

  anon33_Then:
    assume {:partition} sdv_150 == 0;
    goto L52;
}



procedure {:origName "CyzDisableInterfacesResources"} CyzDisableInterfacesResources(actual_PDevObj_3: int, actual_DisableUART: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzDisableInterfacesResources"} CyzDisableInterfacesResources(actual_PDevObj_3: int, actual_DisableUART: int)
{
  var {:pointer} Tmp_221: int;
  var {:pointer} pDevExt_5: int;
  var {:pointer} Tmp_222: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} PDevObj_3: int;
  var {:scalar} DisableUART: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;

  anon0:
    call {:si_unique_call 426} vslice_dummy_var_73 := __HAVOC_malloc(4);
    PDevObj_3 := actual_PDevObj_3;
    DisableUART := actual_DisableUART;
    call {:si_unique_call 427} Tmp_221 := __HAVOC_malloc(124);
    call {:si_unique_call 428} Tmp_222 := __HAVOC_malloc(92);
    assume {:nonnull} PDevObj_3 != 0;
    assume PDevObj_3 > 0;
    havoc pDevExt_5;
    call {:si_unique_call 429} sdv_do_paged_code_check();
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} DisableUART != 0;
    Tmp_223 := strConst__li2bpl34;
    goto L11;

  L11:
    Tmp_221 := strConst__li2bpl35;
    call {:si_unique_call 430} vslice_dummy_var_75 := CyzDbgPrintEx(2, Tmp_221);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L20;

  L20:
    call {:si_unique_call 431} vslice_dummy_var_74 := IoWMIRegistrationControl(0, 2);
    goto L15;

  L15:
    call {:si_unique_call 432} CyzUndoExternalNaming(pDevExt_5);
    Tmp_222 := strConst__li2bpl36;
    call {:si_unique_call 433} vslice_dummy_var_76 := CyzDbgPrintEx(2, Tmp_222);
    return;

  anon9_Then:
    call {:si_unique_call 434} CyzReleaseResources(pDevExt_5);
    goto L20;

  anon8_Then:
    goto L15;

  anon7_Then:
    assume {:partition} DisableUART == 0;
    Tmp_223 := strConst__li2bpl33;
    goto L11;
}



procedure {:origName "CyzKillPendingIrps"} CyzKillPendingIrps(actual_PDevObj_4: int);
  modifies alloc, locked, queuedWithoutMarking, stack_location, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzKillPendingIrps"} CyzKillPendingIrps(actual_PDevObj_4: int)
{
  var {:pointer} pDevExt_6: int;
  var {:pointer} Tmp_224: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} Tmp_227: int;
  var {:pointer} Tmp_228: int;
  var {:pointer} Tmp_229: int;
  var {:scalar} cancelRoutine: int;
  var {:scalar} oldIrql_1: int;
  var {:pointer} Tmp_230: int;
  var {:pointer} Tmp_231: int;
  var {:pointer} PDevObj_4: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;

  anon0:
    call {:si_unique_call 435} vslice_dummy_var_77 := __HAVOC_malloc(4);
    PDevObj_4 := actual_PDevObj_4;
    call {:si_unique_call 436} Tmp_227 := __HAVOC_malloc(100);
    call {:si_unique_call 437} Tmp_229 := __HAVOC_malloc(84);
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    havoc pDevExt_6;
    Tmp_227 := strConst__li2bpl38;
    call {:si_unique_call 438} vslice_dummy_var_79 := CyzDbgPrintEx(2, Tmp_227);
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    call {:si_unique_call 439} CyzKillAllReadsOrWrites(PDevObj_4, WriteQueue__CYZ_DEVICE_EXTENSION(pDevExt_6), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(pDevExt_6));
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    call {:si_unique_call 440} CyzKillAllReadsOrWrites(PDevObj_4, ReadQueue__CYZ_DEVICE_EXTENSION(pDevExt_6), CurrentReadIrp__CYZ_DEVICE_EXTENSION(pDevExt_6));
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    call {:si_unique_call 441} CyzKillAllReadsOrWrites(PDevObj_4, PurgeQueue__CYZ_DEVICE_EXTENSION(pDevExt_6), CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(pDevExt_6));
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    call {:si_unique_call 442} CyzKillAllReadsOrWrites(PDevObj_4, MaskQueue__CYZ_DEVICE_EXTENSION(pDevExt_6), CurrentMaskIrp__CYZ_DEVICE_EXTENSION(pDevExt_6));
    call {:si_unique_call 443} Tmp_231 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    call {:si_unique_call 444} IoAcquireCancelSpinLock(Tmp_231);
    assume {:nonnull} Tmp_231 != 0;
    assume Tmp_231 > 0;
    havoc oldIrql_1;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc Tmp_225;
    assume {:nonnull} Tmp_225 != 0;
    assume Tmp_225 > 0;
    havoc cancelRoutine;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc Tmp_230;
    assume {:nonnull} Tmp_230 != 0;
    assume Tmp_230 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} cancelRoutine != 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc Tmp_224;
    assume {:nonnull} Tmp_224 != 0;
    assume Tmp_224 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc Tmp_228;
    assume {:nonnull} Tmp_228 != 0;
    assume Tmp_228 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant456;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_51;
    call {:si_unique_call 445} CyzCancelCurrentRead(PDevObj_4, vslice_dummy_var_51);
    goto L40;

  L40:
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 446} vslice_dummy_var_78 := IoCancelIrp(0);
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto L41;

  L41:
    call {:si_unique_call 447} CyzKillAllStalled(PDevObj_4);
    Tmp_229 := strConst__li2bpl37;
    call {:si_unique_call 448} vslice_dummy_var_81 := CyzDbgPrintEx(2, Tmp_229);
    return;

  anon28_Then:
    goto L41;

  anon37_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant196;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_52;
    call {:si_unique_call 449} CyzCancelCurrentWrite(PDevObj_4, vslice_dummy_var_52);
    goto L40;

  anon36_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant198;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_53;
    call {:si_unique_call 450} CyzCancelCurrentXoff(PDevObj_4, vslice_dummy_var_53);
    goto L40;

  anon35_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant312;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_54;
    call {:si_unique_call 451} CyzCancelImmediate(PDevObj_4, vslice_dummy_var_54);
    goto L40;

  anon34_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant149;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_55;
    call {:si_unique_call 452} CyzCancelQueued(PDevObj_4, vslice_dummy_var_55);
    goto L40;

  anon33_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant178;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_56;
    call {:si_unique_call 453} CyzCancelWait(PDevObj_4, vslice_dummy_var_56);
    goto L40;

  anon32_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant151;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_57;
    call {:si_unique_call 454} CyzFilterCancelQueued(PDevObj_4, vslice_dummy_var_57);
    goto L40;

  anon31_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant334;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_58;
    call {:si_unique_call 455} vslice_dummy_var_84 := CyzInternalIoControl(PDevObj_4, vslice_dummy_var_58);
    goto L40;

  anon30_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant338;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_59;
    call {:si_unique_call 456} vslice_dummy_var_83 := CyzQueryInformationFile(PDevObj_4, vslice_dummy_var_59);
    goto L40;

  anon29_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant339;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_60;
    call {:si_unique_call 457} vslice_dummy_var_82 := CyzSetInformationFile(PDevObj_4, vslice_dummy_var_60);
    goto L40;

  anon39_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant262;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    havoc vslice_dummy_var_61;
    call {:si_unique_call 458} vslice_dummy_var_80 := CyzSystemControlDispatch(PDevObj_4, vslice_dummy_var_61);
    goto L40;

  anon38_Then:
    assume {:partition} cancelRoutine == 0;
    call {:si_unique_call 459} IoReleaseCancelSpinLock(oldIrql_1);
    goto L40;

  anon27_Then:
    call {:si_unique_call 460} IoReleaseCancelSpinLock(oldIrql_1);
    goto L40;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init12"} _sdv_init12()
{
  var vslice_dummy_var_85: int;

  anon0:
    call {:si_unique_call 461} vslice_dummy_var_85 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzReleaseResources"} CyzReleaseResources(actual_PDevExt: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzReleaseResources"} CyzReleaseResources(actual_PDevExt: int)
{
  var {:scalar} sdv_162: int;
  var {:scalar} sdv_164: int;
  var {:scalar} sdv_165: int;
  var {:scalar} sdv_166: int;
  var {:scalar} sdv_167: int;
  var {:scalar} sdv_169: int;
  var {:scalar} sdv_170: int;
  var {:pointer} Tmp_234: int;
  var {:pointer} Tmp_235: int;
  var {:scalar} sdv_175: int;
  var {:pointer} Tmp_237: int;
  var {:scalar} sdv_180: int;
  var {:scalar} sdv_182: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_188: int;
  var {:scalar} sdv_190: int;
  var {:scalar} pollCount: int;
  var {:scalar} timerStarted: int;
  var {:scalar} sdv_193: int;
  var {:scalar} timerDrained: int;
  var {:pointer} pDispatch_2: int;
  var {:scalar} pollIrql_2: int;
  var {:scalar} sdv_196: int;
  var {:pointer} Tmp_238: int;
  var {:pointer} PDevExt: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;

  anon0:
    call {:si_unique_call 462} vslice_dummy_var_86 := __HAVOC_malloc(4);
    PDevExt := actual_PDevExt;
    call {:si_unique_call 463} Tmp_234 := __HAVOC_malloc(104);
    call {:si_unique_call 464} Tmp_237 := __HAVOC_malloc(132);
    call {:si_unique_call 465} Tmp_238 := __HAVOC_malloc(88);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc pDispatch_2;
    Tmp_234 := strConst__li2bpl41;
    call {:si_unique_call 466} vslice_dummy_var_96 := CyzDbgPrintEx(2, Tmp_234);
    call {:si_unique_call 467} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 468} sdv_KeAcquireSpinLock(0, Tmp_235);
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    havoc oldIrql_2;
    call {:si_unique_call 469} vslice_dummy_var_87 := sdv_RemoveEntryList(0);
    call {:si_unique_call 470} sdv_KeReleaseSpinLock(0, oldIrql_2);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 471} InitializeListHead(AllDevObjs__CYZ_DEVICE_EXTENSION(PDevExt));
    call {:si_unique_call 472} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 473} sdv_KeAcquireSpinLock(0, Tmp_235);
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    havoc pollIrql_2;
    call {:si_unique_call 474} vslice_dummy_var_88 := CyzCleanLists(PDevExt);
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    havoc timerStarted;
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    havoc timerDrained;
    call {:si_unique_call 475} sdv_KeReleaseSpinLock(0, pollIrql_2);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} timerStarted != 0;
    goto L38;

  L38:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 476} vslice_dummy_var_89 := CyzCancelTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 477} vslice_dummy_var_90 := CyzCancelTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 478} vslice_dummy_var_91 := CyzCancelTimer(WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 479} vslice_dummy_var_92 := CyzCancelTimer(ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 480} vslice_dummy_var_93 := CyzCancelTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    call {:si_unique_call 481} vslice_dummy_var_94 := CyzCancelTimer(LowerRTSTimer__CYZ_DEVICE_EXTENSION(PDevExt), PDevExt);
    call {:si_unique_call 482} sdv_196 := KeRemoveQueueDpc(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_196 != 0;
    call {:si_unique_call 483} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 484} vslice_dummy_var_97 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L60;

  L60:
    call {:si_unique_call 485} sdv_180 := KeRemoveQueueDpc(0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_180 != 0;
    call {:si_unique_call 486} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 487} vslice_dummy_var_98 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L67;

  L67:
    call {:si_unique_call 488} sdv_167 := KeRemoveQueueDpc(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_167 != 0;
    call {:si_unique_call 489} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 490} vslice_dummy_var_99 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L74;

  L74:
    call {:si_unique_call 491} sdv_190 := KeRemoveQueueDpc(0);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_190 != 0;
    call {:si_unique_call 492} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 493} vslice_dummy_var_100 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L81;

  L81:
    call {:si_unique_call 494} sdv_164 := KeRemoveQueueDpc(0);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} sdv_164 != 0;
    call {:si_unique_call 495} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 496} vslice_dummy_var_101 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L88;

  L88:
    call {:si_unique_call 497} sdv_182 := KeRemoveQueueDpc(0);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_182 != 0;
    call {:si_unique_call 498} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 499} vslice_dummy_var_102 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L95;

  L95:
    call {:si_unique_call 500} sdv_169 := KeRemoveQueueDpc(0);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} sdv_169 != 0;
    call {:si_unique_call 501} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 502} vslice_dummy_var_103 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L102;

  L102:
    call {:si_unique_call 503} sdv_170 := KeRemoveQueueDpc(0);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} sdv_170 != 0;
    call {:si_unique_call 504} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 505} vslice_dummy_var_104 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L109;

  L109:
    call {:si_unique_call 506} sdv_166 := KeRemoveQueueDpc(0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} sdv_166 != 0;
    call {:si_unique_call 507} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 508} vslice_dummy_var_105 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L116;

  L116:
    call {:si_unique_call 509} sdv_193 := KeRemoveQueueDpc(0);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_193 != 0;
    call {:si_unique_call 510} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 511} vslice_dummy_var_106 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L123;

  L123:
    call {:si_unique_call 512} sdv_175 := KeRemoveQueueDpc(0);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} sdv_175 != 0;
    call {:si_unique_call 513} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 514} vslice_dummy_var_107 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L130;

  L130:
    call {:si_unique_call 515} sdv_162 := KeRemoveQueueDpc(0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} sdv_162 != 0;
    call {:si_unique_call 516} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 517} vslice_dummy_var_108 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L137;

  L137:
    call {:si_unique_call 518} sdv_188 := KeRemoveQueueDpc(0);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} sdv_188 != 0;
    call {:si_unique_call 519} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 520} vslice_dummy_var_109 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    goto L144;

  L144:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 521} MmUnmapIoSpace(0, 64);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L148;

  L148:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    call {:si_unique_call 522} MmUnmapIoSpace(0, 96);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L153;

  L153:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 523} MmUnmapIoSpace(0, 64);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L158;

  L158:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_62;
    call {:si_unique_call 524} MmUnmapIoSpace(0, vslice_dummy_var_62);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L163;

  L163:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_63;
    call {:si_unique_call 525} MmUnmapIoSpace(0, vslice_dummy_var_63);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L168;

  L168:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    call {:si_unique_call 526} MmUnmapIoSpace(0, 5768);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L173;

  L173:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    havoc vslice_dummy_var_64;
    call {:si_unique_call 527} MmUnmapIoSpace(0, vslice_dummy_var_64);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L178;

  L178:
    Tmp_238 := strConst__li2bpl39;
    call {:si_unique_call 528} vslice_dummy_var_110 := CyzDbgPrintEx(2, Tmp_238);
    return;

  anon70_Then:
    goto L178;

  anon69_Then:
    goto L173;

  anon68_Then:
    goto L168;

  anon67_Then:
    goto L163;

  anon66_Then:
    goto L158;

  anon65_Then:
    goto L153;

  anon64_Then:
    goto L148;

  anon63_Then:
    assume {:partition} sdv_188 == 0;
    goto L144;

  anon62_Then:
    assume {:partition} sdv_162 == 0;
    goto L137;

  anon61_Then:
    assume {:partition} sdv_175 == 0;
    goto L130;

  anon60_Then:
    assume {:partition} sdv_193 == 0;
    goto L123;

  anon59_Then:
    assume {:partition} sdv_166 == 0;
    goto L116;

  anon58_Then:
    assume {:partition} sdv_170 == 0;
    goto L109;

  anon57_Then:
    assume {:partition} sdv_169 == 0;
    goto L102;

  anon56_Then:
    assume {:partition} sdv_182 == 0;
    goto L95;

  anon55_Then:
    assume {:partition} sdv_164 == 0;
    goto L88;

  anon54_Then:
    assume {:partition} sdv_190 == 0;
    goto L81;

  anon53_Then:
    assume {:partition} sdv_167 == 0;
    goto L74;

  anon52_Then:
    assume {:partition} sdv_180 == 0;
    goto L67;

  anon51_Then:
    assume {:partition} sdv_196 == 0;
    goto L60;

  anon49_Then:
    assume {:partition} timerStarted == 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} timerDrained != 0;
    goto L188;

  L188:
    call {:si_unique_call 529} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    call {:si_unique_call 530} sdv_KeAcquireSpinLock(0, Tmp_235);
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    havoc pollIrql_2;
    call {:si_unique_call 531} Tmp_235 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    call {:si_unique_call 532} sdv_165 := sdv_InterlockedDecrement(Tmp_235);
    assume {:nonnull} Tmp_235 != 0;
    assume Tmp_235 > 0;
    assume {:nonnull} pDispatch_2 != 0;
    assume pDispatch_2 > 0;
    pollCount := sdv_165;
    call {:si_unique_call 533} sdv_KeReleaseSpinLock(0, pollIrql_2);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} pollCount == 0;
    Tmp_237 := strConst__li2bpl40;
    call {:si_unique_call 534} vslice_dummy_var_111 := CyzDbgPrintEx(12, Tmp_237);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    call {:si_unique_call 535} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L38;

  anon72_Then:
    goto L38;

  anon71_Then:
    assume {:partition} pollCount != 0;
    goto L38;

  anon50_Then:
    assume {:partition} timerDrained == 0;
    call {:si_unique_call 536} vslice_dummy_var_95 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L188;
}



procedure {:origName "DriverEntry"} DriverEntry(actual_DriverObject_1: int, actual_RegistryPath_1: int) returns (Tmp_239: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_239 == 0 || Tmp_239 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "DriverEntry"} DriverEntry(actual_DriverObject_1: int, actual_RegistryPath_1: int) returns (Tmp_239: int)
{
  var {:scalar} Tmp_240: int;
  var {:scalar} Tmp_241: int;
  var {:pointer} Tmp_242: int;
  var {:pointer} Tmp_243: int;
  var {:pointer} Tmp_244: int;
  var {:pointer} Tmp_245: int;
  var {:pointer} Tmp_246: int;
  var {:pointer} Tmp_247: int;
  var {:pointer} Tmp_248: int;
  var {:pointer} sdv_199: int;
  var {:pointer} lockPtr_1: int;
  var {:scalar} Tmp_249: int;
  var {:pointer} Tmp_250: int;
  var {:pointer} Tmp_251: int;
  var {:pointer} Tmp_252: int;
  var {:pointer} Tmp_253: int;
  var {:pointer} Tmp_254: int;
  var {:pointer} Tmp_255: int;
  var {:pointer} Tmp_256: int;
  var {:pointer} Tmp_257: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} DriverObject_1: int;
  var {:pointer} RegistryPath_1: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;

  anon0:
    DriverObject_1 := actual_DriverObject_1;
    RegistryPath_1 := actual_RegistryPath_1;
    call {:si_unique_call 537} Tmp_242 := __HAVOC_malloc(112);
    call {:si_unique_call 538} Tmp_243 := __HAVOC_malloc(112);
    call {:si_unique_call 539} Tmp_244 := __HAVOC_malloc(112);
    call {:si_unique_call 540} Tmp_245 := __HAVOC_malloc(112);
    call {:si_unique_call 541} Tmp_246 := __HAVOC_malloc(112);
    call {:si_unique_call 542} Tmp_247 := __HAVOC_malloc(112);
    call {:si_unique_call 543} Tmp_248 := __HAVOC_malloc(112);
    call {:si_unique_call 544} Tmp_251 := __HAVOC_malloc(112);
    call {:si_unique_call 545} Tmp_252 := __HAVOC_malloc(180);
    call {:si_unique_call 546} Tmp_253 := __HAVOC_malloc(112);
    call {:si_unique_call 547} Tmp_255 := __HAVOC_malloc(112);
    call {:si_unique_call 548} Tmp_256 := __HAVOC_malloc(112);
    call {:si_unique_call 549} Tmp_257 := __HAVOC_malloc(112);
    call {:si_unique_call 550} Tmp_258 := __HAVOC_malloc(112);
    call {:si_unique_call 551} lockPtr_1 := sdv_MmLockPagableCodeSection(li2bplFunctionConstant330);
    call {:si_unique_call 552} sdv_do_paged_code_check();
    assume {:nonnull} RegistryPath_1 != 0;
    assume RegistryPath_1 > 0;
    assume {:nonnull} RegistryPath_1 != 0;
    assume RegistryPath_1 > 0;
    havoc Tmp_241;
    call {:si_unique_call 553} sdv_199 := ExAllocatePoolWithTag(1, Tmp_241, -797279933);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    havoc Tmp_249;
    call {:si_unique_call 554} sdv_RtlZeroMemory(0, Tmp_249);
    assume {:nonnull} RegistryPath_1 != 0;
    assume RegistryPath_1 > 0;
    havoc Tmp_240;
    call {:si_unique_call 555} sdv_RtlMoveMemory(0, 0, Tmp_240);
    call {:si_unique_call 556} Tmp_254 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    call {:si_unique_call 557} sdv_KeInitializeSpinLock(Tmp_254);
    assume {:nonnull} Tmp_254 != 0;
    assume Tmp_254 > 0;
    call {:si_unique_call 558} InitializeListHead(AllDevObjs__CYZ_GLOBALS(CyzGlobals));
    call {:si_unique_call 559} vslice_dummy_var_112 := CyzGetConfigDefaults(driverDefaults, RegistryPath_1);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 560} sdv_DbgBreakPoint();
    goto L41;

  L41:
    Tmp_252 := strConst__li2bpl42;
    call {:si_unique_call 561} vslice_dummy_var_113 := CyzDbgPrintEx(3, Tmp_252);
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_250;
    assume {:nonnull} Tmp_250 != 0;
    assume Tmp_250 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_243;
    assume {:nonnull} Tmp_243 != 0;
    assume Tmp_243 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_258;
    assume {:nonnull} Tmp_258 != 0;
    assume Tmp_258 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_248;
    assume {:nonnull} Tmp_248 != 0;
    assume Tmp_248 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_246;
    assume {:nonnull} Tmp_246 != 0;
    assume Tmp_246 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_257;
    assume {:nonnull} Tmp_257 != 0;
    assume Tmp_257 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_242;
    assume {:nonnull} Tmp_242 != 0;
    assume Tmp_242 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_253;
    assume {:nonnull} Tmp_253 != 0;
    assume Tmp_253 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_247;
    assume {:nonnull} Tmp_247 != 0;
    assume Tmp_247 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_245;
    assume {:nonnull} Tmp_245 != 0;
    assume Tmp_245 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_256;
    assume {:nonnull} Tmp_256 != 0;
    assume Tmp_256 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_244;
    assume {:nonnull} Tmp_244 != 0;
    assume Tmp_244 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_251;
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} DriverObject_1 != 0;
    assume DriverObject_1 > 0;
    havoc Tmp_255;
    assume {:nonnull} Tmp_255 != 0;
    assume Tmp_255 > 0;
    call {:si_unique_call 562} MmUnlockPagableImageSection(0);
    Tmp_239 := 0;
    goto L1;

  L1:
    return;

  anon5_Then:
    goto L41;

  anon6_Then:
    call {:si_unique_call 563} MmUnlockPagableImageSection(0);
    Tmp_239 := -1073741670;
    goto L1;
}



procedure {:origName "CyzInitController"} CyzInitController(actual_PDevObj_5: int, actual_PConfigData: int) returns (Tmp_259: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_259 == 0 || Tmp_259 == -1073741810 || Tmp_259 == -1073741709 || Tmp_259 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzInitController"} CyzInitController(actual_PDevObj_5: int, actual_PConfigData: int) returns (Tmp_259: int)
{
  var {:scalar} Tmp_260: int;
  var {:scalar} Tmp_261: int;
  var {:pointer} Tmp_262: int;
  var {:scalar} rx: int;
  var {:pointer} Tmp_263: int;
  var {:scalar} Tmp_264: int;
  var {:pointer} sdv_206: int;
  var {:scalar} firstTimeThisBoard: int;
  var {:scalar} Tmp_265: int;
  var {:scalar} Tmp_266: int;
  var {:scalar} Tmp_267: int;
  var {:scalar} Tmp_268: int;
  var {:scalar} Tmp_269: int;
  var {:pointer} sdv_212: int;
  var {:scalar} Tmp_270: int;
  var {:scalar} sdv_214: int;
  var {:pointer} Tmp_271: int;
  var {:scalar} incPoll: int;
  var {:pointer} Tmp_272: int;
  var {:pointer} Tmp_273: int;
  var {:scalar} Tmp_274: int;
  var {:pointer} pDevExt_7: int;
  var {:scalar} Tmp_275: int;
  var {:scalar} zf_1: int;
  var {:scalar} Tmp_276: int;
  var {:pointer} BoardMemory: int;
  var {:scalar} Tmp_277: int;
  var {:scalar} Tmp_278: int;
  var {:pointer} Tmp_279: int;
  var {:scalar} Tmp_280: int;
  var {:pointer} Tmp_282: int;
  var {:pointer} sdv_219: int;
  var {:scalar} Tmp_284: int;
  var {:scalar} Tmp_285: int;
  var {:pointer} Tmp_286: int;
  var {:scalar} Tmp_287: int;
  var {:scalar} allocedDispatch: int;
  var {:scalar} Tmp_288: int;
  var {:scalar} Tmp_289: int;
  var {:scalar} Tmp_290: int;
  var {:pointer} Tmp_291: int;
  var {:pointer} Tmp_292: int;
  var {:pointer} sdv_226: int;
  var {:scalar} Tmp_293: int;
  var {:scalar} Tmp_294: int;
  var {:pointer} sdv_227: int;
  var {:scalar} buf_4: int;
  var {:scalar} Tmp_295: int;
  var {:scalar} Tmp_296: int;
  var {:scalar} Tmp_297: int;
  var {:pointer} sdv_232: int;
  var {:scalar} Tmp_298: int;
  var {:scalar} Tmp_299: int;
  var {:pointer} zfw: int;
  var {:scalar} Tmp_300: int;
  var {:scalar} Tmp_301: int;
  var {:scalar} board_2: int;
  var {:pointer} sdv_235: int;
  var {:scalar} status_4: int;
  var {:scalar} tx_1: int;
  var {:pointer} sdv_237: int;
  var {:pointer} Tmp_302: int;
  var {:pointer} Tmp_303: int;
  var {:scalar} pollingCycle: int;
  var {:pointer} pDispatch_3: int;
  var {:scalar} ch_9: int;
  var {:scalar} Tmp_304: int;
  var {:scalar} Tmp_305: int;
  var {:pointer} Tmp_306: int;
  var {:scalar} Tmp_308: int;
  var {:scalar} Tmp_309: int;
  var {:scalar} intr: int;
  var {:pointer} Tmp_310: int;
  var {:pointer} PDevObj_5: int;
  var {:pointer} PConfigData: int;
  var boogieTmp: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;

  anon0:
    call {:si_unique_call 564} Tmp_260 := __HAVOC_malloc(20);
    call {:si_unique_call 565} rx := __HAVOC_malloc(20);
    call {:si_unique_call 566} Tmp_264 := __HAVOC_malloc(20);
    call {:si_unique_call 567} vslice_dummy_var_114 := __HAVOC_malloc(20);
    call {:si_unique_call 568} vslice_dummy_var_115 := __HAVOC_malloc(20);
    call {:si_unique_call 569} Tmp_266 := __HAVOC_malloc(20);
    call {:si_unique_call 570} Tmp_267 := __HAVOC_malloc(20);
    call {:si_unique_call 571} Tmp_268 := __HAVOC_malloc(20);
    call {:si_unique_call 572} Tmp_269 := __HAVOC_malloc(20);
    call {:si_unique_call 573} Tmp_275 := __HAVOC_malloc(20);
    call {:si_unique_call 574} zf_1 := __HAVOC_malloc(20);
    call {:si_unique_call 575} Tmp_280 := __HAVOC_malloc(20);
    call {:si_unique_call 576} Tmp_284 := __HAVOC_malloc(20);
    call {:si_unique_call 577} vslice_dummy_var_116 := __HAVOC_malloc(20);
    call {:si_unique_call 578} Tmp_287 := __HAVOC_malloc(20);
    call {:si_unique_call 579} vslice_dummy_var_117 := __HAVOC_malloc(20);
    call {:si_unique_call 580} Tmp_289 := __HAVOC_malloc(20);
    call {:si_unique_call 581} buf_4 := __HAVOC_malloc(20);
    call {:si_unique_call 582} Tmp_295 := __HAVOC_malloc(20);
    call {:si_unique_call 583} vslice_dummy_var_118 := __HAVOC_malloc(20);
    call {:si_unique_call 584} Tmp_298 := __HAVOC_malloc(20);
    call {:si_unique_call 585} Tmp_299 := __HAVOC_malloc(20);
    call {:si_unique_call 586} board_2 := __HAVOC_malloc(20);
    call {:si_unique_call 587} vslice_dummy_var_119 := __HAVOC_malloc(20);
    call {:si_unique_call 588} tx_1 := __HAVOC_malloc(20);
    call {:si_unique_call 589} ch_9 := __HAVOC_malloc(20);
    call {:si_unique_call 590} Tmp_305 := __HAVOC_malloc(20);
    call {:si_unique_call 591} vslice_dummy_var_120 := __HAVOC_malloc(20);
    call {:si_unique_call 592} Tmp_308 := __HAVOC_malloc(20);
    PDevObj_5 := actual_PDevObj_5;
    PConfigData := actual_PConfigData;
    call {:si_unique_call 593} Tmp_262 := __HAVOC_malloc(4096);
    call {:si_unique_call 594} Tmp_263 := __HAVOC_malloc(132);
    call {:si_unique_call 595} Tmp_271 := __HAVOC_malloc(184);
    call {:si_unique_call 596} Tmp_273 := __HAVOC_malloc(236);
    call {:si_unique_call 597} Tmp_279 := __HAVOC_malloc(180);
    call {:si_unique_call 598} Tmp_282 := __HAVOC_malloc(840);
    call {:si_unique_call 599} Tmp_286 := __HAVOC_malloc(140);
    call {:si_unique_call 600} Tmp_291 := __HAVOC_malloc(172);
    call {:si_unique_call 601} Tmp_292 := __HAVOC_malloc(168);
    call {:si_unique_call 602} Tmp_302 := __HAVOC_malloc(228);
    call {:si_unique_call 603} Tmp_303 := __HAVOC_malloc(176);
    call {:si_unique_call 604} Tmp_306 := __HAVOC_malloc(168);
    call {:si_unique_call 605} Tmp_310 := __HAVOC_malloc(6144);
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    havoc pDevExt_7;
    status_4 := 0;
    allocedDispatch := 0;
    pDispatch_3 := 0;
    incPoll := 0;
    call {:si_unique_call 606} sdv_do_paged_code_check();
    Tmp_271 := strConst__li2bpl43;
    call {:si_unique_call 607} vslice_dummy_var_121 := CyzDbgPrintEx(4, Tmp_271);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    firstTimeThisBoard := 0;
    goto L40;

  L40:
    call {:si_unique_call 608} KeInitializeTimer(0);
    call {:si_unique_call 609} KeInitializeTimer(0);
    call {:si_unique_call 610} KeInitializeTimer(0);
    call {:si_unique_call 611} KeInitializeTimer(0);
    call {:si_unique_call 612} KeInitializeTimer(0);
    call {:si_unique_call 613} KeInitializeTimer(0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 614} KeInitializeDpc(CompleteWriteDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant199, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 615} KeInitializeDpc(CompleteReadDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant347, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 616} KeInitializeDpc(TotalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant348, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 617} KeInitializeDpc(IntervalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant349, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 618} KeInitializeDpc(TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant203, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 619} KeInitializeDpc(CommErrorDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant350, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 620} KeInitializeDpc(CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant313, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 621} KeInitializeDpc(TotalImmediateTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant315, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 622} KeInitializeDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant182, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 623} KeInitializeDpc(XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant205, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 624} KeInitializeDpc(XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant204, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 625} KeInitializeDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant351, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 626} KeInitializeDpc(PerhapsLowerRTSDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant352, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 627} KeInitializeDpc(IsrUnlockPagesDpc__CYZ_DEVICE_EXTENSION(pDevExt_7), li2bplFunctionConstant161, 0);
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_295 != 0;
    assume Tmp_295 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_295 != 0;
    assume Tmp_295 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_295 != 0;
    assume Tmp_295 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_295 != 0;
    assume Tmp_295 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_295 != 0;
    assume Tmp_295 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_65;
    call {:si_unique_call 628} sdv_226 := MmMapIoSpace(Tmp_295, vslice_dummy_var_65, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_299 != 0;
    assume Tmp_299 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_299 != 0;
    assume Tmp_299 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_299 != 0;
    assume Tmp_299 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_299 != 0;
    assume Tmp_299 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} Tmp_299 != 0;
    assume Tmp_299 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_66;
    call {:si_unique_call 629} sdv_227 := MmMapIoSpace(Tmp_299, vslice_dummy_var_66, 0);
    BoardMemory := sdv_227;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} BoardMemory != 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L132;

  L132:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L134;

  L134:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L135;

  L135:
    call {:si_unique_call 630} vslice_dummy_var_122 := corral_nondet();
    zfw := BoardMemory;
    assume {:nonnull} zfw != 0;
    assume zfw > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_285;
    assume {:nonnull} zfw != 0;
    assume zfw > 0;
    havoc Tmp_310;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_270;
    assume {:nonnull} zfw != 0;
    assume zfw > 0;
    havoc Tmp_262;
    call {:si_unique_call 631} vslice_dummy_var_123 := corral_nondet();
    call {:si_unique_call 632} vslice_dummy_var_124 := corral_nondet();
    call {:si_unique_call 633} vslice_dummy_var_125 := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 634} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 635} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 636} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 637} boogieTmp := corral_nondet();
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 638} boogieTmp := corral_nondet();
    assume {:nonnull} ch_9 != 0;
    assume ch_9 > 0;
    call {:si_unique_call 639} boogieTmp := corral_nondet();
    assume {:nonnull} ch_9 != 0;
    assume ch_9 > 0;
    call {:si_unique_call 640} boogieTmp := corral_nondet();
    assume {:nonnull} ch_9 != 0;
    assume ch_9 > 0;
    call {:si_unique_call 641} boogieTmp := corral_nondet();
    assume {:nonnull} ch_9 != 0;
    assume ch_9 > 0;
    call {:si_unique_call 642} boogieTmp := corral_nondet();
    assume {:nonnull} ch_9 != 0;
    assume ch_9 > 0;
    call {:si_unique_call 643} boogieTmp := corral_nondet();
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    call {:si_unique_call 644} boogieTmp := corral_nondet();
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    call {:si_unique_call 645} boogieTmp := corral_nondet();
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    call {:si_unique_call 646} boogieTmp := corral_nondet();
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    call {:si_unique_call 647} boogieTmp := corral_nondet();
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    call {:si_unique_call 648} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 649} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 650} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 651} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 652} boogieTmp := corral_nondet();
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    call {:si_unique_call 653} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 654} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 655} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 656} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 657} boogieTmp := corral_nondet();
    assume {:nonnull} rx != 0;
    assume rx > 0;
    call {:si_unique_call 658} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 659} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 660} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 661} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 662} boogieTmp := corral_nondet();
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 663} boogieTmp := corral_nondet();
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_67;
    call {:si_unique_call 664} MmUnmapIoSpace(0, vslice_dummy_var_67);
    assume {:nonnull} Tmp_266 != 0;
    assume Tmp_266 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_266 != 0;
    assume Tmp_266 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_266 != 0;
    assume Tmp_266 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_266 != 0;
    assume Tmp_266 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    assume {:nonnull} Tmp_266 != 0;
    assume Tmp_266 > 0;
    assume {:nonnull} board_2 != 0;
    assume board_2 > 0;
    call {:si_unique_call 665} sdv_232 := MmMapIoSpace(Tmp_266, 64, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    assume {:nonnull} ch_9 != 0;
    assume ch_9 > 0;
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    assume {:nonnull} ch_9 != 0;
    assume ch_9 > 0;
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    assume {:nonnull} ch_9 != 0;
    assume ch_9 > 0;
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    assume {:nonnull} ch_9 != 0;
    assume ch_9 > 0;
    assume {:nonnull} Tmp_267 != 0;
    assume Tmp_267 > 0;
    assume {:nonnull} ch_9 != 0;
    assume ch_9 > 0;
    call {:si_unique_call 666} sdv_235 := MmMapIoSpace(Tmp_267, 96, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} Tmp_289 != 0;
    assume Tmp_289 > 0;
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    assume {:nonnull} Tmp_289 != 0;
    assume Tmp_289 > 0;
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    assume {:nonnull} Tmp_289 != 0;
    assume Tmp_289 > 0;
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    assume {:nonnull} Tmp_289 != 0;
    assume Tmp_289 > 0;
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    assume {:nonnull} Tmp_289 != 0;
    assume Tmp_289 > 0;
    assume {:nonnull} buf_4 != 0;
    assume buf_4 > 0;
    call {:si_unique_call 667} sdv_206 := MmMapIoSpace(Tmp_289, 64, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 668} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 669} boogieTmp := corral_nondet();
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} tx_1 != 0;
    assume tx_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_68;
    call {:si_unique_call 670} sdv_219 := MmMapIoSpace(Tmp_268, vslice_dummy_var_68, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} Tmp_275 != 0;
    assume Tmp_275 > 0;
    assume {:nonnull} rx != 0;
    assume rx > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_69;
    call {:si_unique_call 671} sdv_212 := MmMapIoSpace(Tmp_275, vslice_dummy_var_69, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Tmp_269 != 0;
    assume Tmp_269 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_269 != 0;
    assume Tmp_269 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_269 != 0;
    assume Tmp_269 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_269 != 0;
    assume Tmp_269 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    assume {:nonnull} Tmp_269 != 0;
    assume Tmp_269 > 0;
    assume {:nonnull} zf_1 != 0;
    assume zf_1 > 0;
    call {:si_unique_call 672} sdv_237 := MmMapIoSpace(Tmp_269, 5768, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 673} sdv_214 := CyzDoesPortExist(pDevExt_7, DeviceName__CYZ_DEVICE_EXTENSION(pDevExt_7));
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} sdv_214 != 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 674} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 675} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 676} boogieTmp := corral_nondet();
    Tmp_282 := strConst__li2bpl53;
    call {:si_unique_call 677} vslice_dummy_var_126 := CyzDbgPrintEx(4, Tmp_282);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc pDispatch_3;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} firstTimeThisBoard != 0;
    pollingCycle := 10;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    havoc vslice_dummy_var_70;
    call {:si_unique_call 678} boogieTmp := RtlLargeIntegerNegate(vslice_dummy_var_70);
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 679} Tmp_272 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 680} sdv_KeInitializeSpinLock(Tmp_272);
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 681} KeInitializeTimer(0);
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 682} KeInitializeDpc(PollingDpc__CYZ_DISPATCH(pDispatch_3), li2bplFunctionConstant113, 0);
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 683} KeInitializeEvent(PendingDpcEvent__CYZ_DISPATCH(pDispatch_3), 1, 0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 684} intr := corral_nondet();
    intr := BOR(intr, BOR(65536, 131072));
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 685} boogieTmp := corral_nondet();
    goto L261;

  L261:
    call {:si_unique_call 686} Tmp_272 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 687} vslice_dummy_var_127 := sdv_InterlockedIncrement(Tmp_272);
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    incPoll := 1;
    goto L299;

  L299:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_4 >= 0;
    goto L301;

  L301:
    Tmp_259 := status_4;
    return;

  anon61_Then:
    assume {:partition} 0 > status_4;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} incPoll != 0;
    call {:si_unique_call 688} Tmp_272 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    call {:si_unique_call 689} vslice_dummy_var_128 := sdv_InterlockedDecrement(Tmp_272);
    assume {:nonnull} Tmp_272 != 0;
    assume Tmp_272 > 0;
    assume {:nonnull} pDispatch_3 != 0;
    assume pDispatch_3 > 0;
    goto L302;

  L302:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} allocedDispatch != 0;
    call {:si_unique_call 690} sdv_ExFreePool(0);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L306;

  L306:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc vslice_dummy_var_71;
    call {:si_unique_call 691} MmUnmapIoSpace(0, vslice_dummy_var_71);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L311;

  L311:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    call {:si_unique_call 692} MmUnmapIoSpace(0, 64);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L316;

  L316:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    call {:si_unique_call 693} MmUnmapIoSpace(0, 96);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L321;

  L321:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    call {:si_unique_call 694} MmUnmapIoSpace(0, 64);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L326;

  L326:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_72;
    call {:si_unique_call 695} MmUnmapIoSpace(0, vslice_dummy_var_72);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L331;

  L331:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_73;
    call {:si_unique_call 696} MmUnmapIoSpace(0, vslice_dummy_var_73);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L336;

  L336:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    call {:si_unique_call 697} MmUnmapIoSpace(0, 5768);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L301;

  anon70_Then:
    goto L301;

  anon69_Then:
    goto L336;

  anon68_Then:
    goto L331;

  anon67_Then:
    goto L326;

  anon66_Then:
    goto L321;

  anon65_Then:
    goto L316;

  anon64_Then:
    goto L311;

  anon63_Then:
    assume {:partition} allocedDispatch == 0;
    goto L306;

  anon62_Then:
    assume {:partition} incPoll == 0;
    goto L302;

  anon84_Then:
    assume {:partition} firstTimeThisBoard == 0;
    goto L261;

  anon60_Then:
    assume {:partition} sdv_214 == 0;
    Tmp_286 := strConst__li2bpl44;
    call {:si_unique_call 698} vslice_dummy_var_129 := CyzDbgPrintEx(1, Tmp_286);
    status_4 := -1073741810;
    goto L299;

  anon83_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_261;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc Tmp_297;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    assume {:nonnull} Tmp_298 != 0;
    assume Tmp_298 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_74;
    havoc vslice_dummy_var_75;
    havoc vslice_dummy_var_76;
    havoc vslice_dummy_var_77;
    call {:si_unique_call 699} CyzLogError(vslice_dummy_var_74, vslice_dummy_var_75, vslice_dummy_var_76, Tmp_298, 0, 0, 0, Tmp_297, 0, -1073475524, Tmp_261, vslice_dummy_var_77, 0, 0);
    Tmp_279 := strConst__li2bpl45;
    call {:si_unique_call 700} vslice_dummy_var_130 := CyzDbgPrintEx(1, Tmp_279);
    status_4 := -1073741709;
    goto L299;

  anon82_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_304;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc Tmp_300;
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    assume {:nonnull} Tmp_308 != 0;
    assume Tmp_308 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_78;
    havoc vslice_dummy_var_79;
    havoc vslice_dummy_var_80;
    havoc vslice_dummy_var_81;
    call {:si_unique_call 701} CyzLogError(vslice_dummy_var_78, vslice_dummy_var_79, vslice_dummy_var_80, Tmp_308, 0, 0, 0, Tmp_300, 0, -1073475525, Tmp_304, vslice_dummy_var_81, 0, 0);
    Tmp_306 := strConst__li2bpl46;
    call {:si_unique_call 702} vslice_dummy_var_131 := CyzDbgPrintEx(1, Tmp_306);
    status_4 := -1073741709;
    goto L299;

  anon81_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_277;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc Tmp_265;
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    assume {:nonnull} Tmp_284 != 0;
    assume Tmp_284 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_82;
    havoc vslice_dummy_var_83;
    havoc vslice_dummy_var_84;
    havoc vslice_dummy_var_85;
    call {:si_unique_call 703} CyzLogError(vslice_dummy_var_82, vslice_dummy_var_83, vslice_dummy_var_84, Tmp_284, 0, 0, 0, Tmp_265, 0, -1073475526, Tmp_277, vslice_dummy_var_85, 0, 0);
    Tmp_292 := strConst__li2bpl47;
    call {:si_unique_call 704} vslice_dummy_var_132 := CyzDbgPrintEx(1, Tmp_292);
    status_4 := -1073741709;
    goto L299;

  anon80_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_274;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc Tmp_309;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} Tmp_260 != 0;
    assume Tmp_260 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_86;
    havoc vslice_dummy_var_87;
    havoc vslice_dummy_var_88;
    havoc vslice_dummy_var_89;
    call {:si_unique_call 705} CyzLogError(vslice_dummy_var_86, vslice_dummy_var_87, vslice_dummy_var_88, Tmp_260, 0, 0, 0, Tmp_309, 0, -1073475527, Tmp_274, vslice_dummy_var_89, 0, 0);
    Tmp_303 := strConst__li2bpl48;
    call {:si_unique_call 706} vslice_dummy_var_133 := CyzDbgPrintEx(1, Tmp_303);
    status_4 := -1073741709;
    goto L299;

  anon79_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_278;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc Tmp_294;
    assume {:nonnull} Tmp_287 != 0;
    assume Tmp_287 > 0;
    assume {:nonnull} Tmp_287 != 0;
    assume Tmp_287 > 0;
    assume {:nonnull} Tmp_287 != 0;
    assume Tmp_287 > 0;
    assume {:nonnull} Tmp_287 != 0;
    assume Tmp_287 > 0;
    assume {:nonnull} Tmp_287 != 0;
    assume Tmp_287 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_90;
    havoc vslice_dummy_var_91;
    havoc vslice_dummy_var_92;
    havoc vslice_dummy_var_93;
    call {:si_unique_call 707} CyzLogError(vslice_dummy_var_90, vslice_dummy_var_91, vslice_dummy_var_92, Tmp_287, 0, 0, 0, Tmp_294, 0, -1073475528, Tmp_278, vslice_dummy_var_93, 0, 0);
    Tmp_291 := strConst__li2bpl49;
    call {:si_unique_call 708} vslice_dummy_var_134 := CyzDbgPrintEx(1, Tmp_291);
    status_4 := -1073741709;
    goto L299;

  anon78_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_293;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc Tmp_296;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} Tmp_264 != 0;
    assume Tmp_264 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_94;
    havoc vslice_dummy_var_95;
    havoc vslice_dummy_var_96;
    havoc vslice_dummy_var_97;
    call {:si_unique_call 709} CyzLogError(vslice_dummy_var_94, vslice_dummy_var_95, vslice_dummy_var_96, Tmp_264, 0, 0, 0, Tmp_296, 0, -1073475529, Tmp_293, vslice_dummy_var_97, 0, 0);
    Tmp_263 := strConst__li2bpl50;
    call {:si_unique_call 710} vslice_dummy_var_135 := CyzDbgPrintEx(1, Tmp_263);
    status_4 := -1073741709;
    goto L299;

  anon58_Then:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L135;

  anon59_Then:
    goto L134;

  anon72_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L132;

  anon73_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L132;

  anon74_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L132;

  anon77_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto L132;

  anon76_Then:
    assume {:partition} BoardMemory == 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_290;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc Tmp_276;
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    assume {:nonnull} Tmp_305 != 0;
    assume Tmp_305 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_98;
    havoc vslice_dummy_var_99;
    havoc vslice_dummy_var_100;
    havoc vslice_dummy_var_101;
    call {:si_unique_call 711} CyzLogError(vslice_dummy_var_98, vslice_dummy_var_99, vslice_dummy_var_100, Tmp_305, 0, 0, 0, Tmp_276, 0, -1073475574, Tmp_290, vslice_dummy_var_101, 0, 0);
    Tmp_302 := strConst__li2bpl51;
    call {:si_unique_call 712} vslice_dummy_var_136 := CyzDbgPrintEx(1, Tmp_302);
    status_4 := -1073741709;
    goto L299;

  anon75_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_301;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    havoc Tmp_288;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} PConfigData != 0;
    assume PConfigData > 0;
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_102;
    havoc vslice_dummy_var_103;
    havoc vslice_dummy_var_104;
    havoc vslice_dummy_var_105;
    call {:si_unique_call 713} CyzLogError(vslice_dummy_var_102, vslice_dummy_var_103, vslice_dummy_var_104, Tmp_280, 0, 0, 0, Tmp_288, 0, -1073475573, Tmp_301, vslice_dummy_var_105, 0, 0);
    Tmp_273 := strConst__li2bpl52;
    call {:si_unique_call 714} vslice_dummy_var_137 := CyzDbgPrintEx(1, Tmp_273);
    status_4 := -1073741709;
    goto L299;

  anon57_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    call {:si_unique_call 715} boogieTmp := ExAllocatePoolWithTag(0, 384, -797279933);
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    call {:si_unique_call 716} sdv_RtlZeroMemory(0, 384);
    allocedDispatch := 1;
    firstTimeThisBoard := 1;
    goto L40;

  anon71_Then:
    status_4 := -1073741670;
    goto L299;
}



procedure {:origName "CyzInitMultiPort"} CyzInitMultiPort(actual_PDevExt_1: int, actual_PConfigData_1: int, actual_PDevObj_6: int) returns (Tmp_311: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_311 == 0 || Tmp_311 == -1073741810 || Tmp_311 == -1073741709 || Tmp_311 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzInitMultiPort"} CyzInitMultiPort(actual_PDevExt_1: int, actual_PConfigData_1: int, actual_PDevObj_6: int) returns (Tmp_311: int)
{
  var {:pointer} Tmp_312: int;
  var {:pointer} Tmp_313: int;
  var {:pointer} Tmp_314: int;
  var {:pointer} pNewExt: int;
  var {:scalar} status_5: int;
  var {:pointer} PDevExt_1: int;
  var {:pointer} PConfigData_1: int;
  var {:pointer} PDevObj_6: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;

  anon0:
    PDevExt_1 := actual_PDevExt_1;
    PConfigData_1 := actual_PConfigData_1;
    PDevObj_6 := actual_PDevObj_6;
    call {:si_unique_call 717} Tmp_312 := __HAVOC_malloc(104);
    call {:si_unique_call 718} Tmp_313 := __HAVOC_malloc(104);
    call {:si_unique_call 719} Tmp_314 := __HAVOC_malloc(124);
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    havoc pNewExt;
    call {:si_unique_call 720} sdv_do_paged_code_check();
    Tmp_314 := strConst__li2bpl54;
    call {:si_unique_call 721} vslice_dummy_var_138 := CyzDbgPrintEx(2, Tmp_314);
    assume {:nonnull} PDevExt_1 != 0;
    assume PDevExt_1 > 0;
    assume {:nonnull} pNewExt != 0;
    assume pNewExt > 0;
    call {:si_unique_call 722} status_5 := CyzInitController(PDevObj_6, PConfigData_1);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_5 >= 0;
    Tmp_313 := strConst__li2bpl56;
    call {:si_unique_call 723} vslice_dummy_var_139 := CyzDbgPrintEx(2, Tmp_313);
    Tmp_311 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} 0 > status_5;
    Tmp_312 := strConst__li2bpl55;
    call {:si_unique_call 724} vslice_dummy_var_140 := CyzDbgPrintEx(2, Tmp_312);
    Tmp_311 := status_5;
    goto L1;
}



procedure {:origName "CyzSetPowerD3"} CyzSetPowerD3(actual_PDevObj_7: int, actual_PIrp_1: int) returns (Tmp_316: int);
  modifies alloc, stack_location, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_316 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetPowerD3"} CyzSetPowerD3(actual_PDevObj_7: int, actual_PIrp_1: int) returns (Tmp_316: int)
{
  var {:pointer} SD1: int;
  var {:pointer} Tmp_317: int;
  var {:pointer} pDevExt_8: int;
  var {:scalar} sdv_1: int;
  var {:pointer} pIrpStack_1: int;
  var {:pointer} PDevObj_7: int;
  var {:pointer} PIrp_1: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;

  anon0:
    call {:si_unique_call 725} sdv_1 := __HAVOC_malloc(8);
    PDevObj_7 := actual_PDevObj_7;
    PIrp_1 := actual_PIrp_1;
    call {:si_unique_call 726} Tmp_317 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_7 != 0;
    assume PDevObj_7 > 0;
    havoc pDevExt_8;
    call {:si_unique_call 727} pIrpStack_1 := sdv_IoGetCurrentIrpStackLocation(PIrp_1);
    call {:si_unique_call 728} sdv_do_paged_code_check();
    Tmp_317 := strConst__li2bpl57;
    call {:si_unique_call 729} vslice_dummy_var_142 := CyzDbgPrintEx(6, Tmp_317);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    call {:si_unique_call 730} vslice_dummy_var_141 := CyzSendWaitWake(pDevExt_8);
    goto L19;

  L19:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    havoc vslice_dummy_var_106;
    havoc vslice_dummy_var_107;
    call {:si_unique_call 731} SD1 := PoSetPowerState(0, vslice_dummy_var_106, vslice_dummy_var_107);
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    call {:si_unique_call 732} vslice_dummy_var_143 := CyzTryToDisableTimer(pDevExt_8);
    call {:si_unique_call 733} CyzSaveDeviceState(pDevExt_8);
    goto L26;

  L26:
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    call {:si_unique_call 734} PoStartNextPowerIrp(0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume PIrp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 735} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L50;

  L50:
    call {:si_unique_call 736} sdv_IoSkipCurrentIrpStackLocation(PIrp_1);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    havoc vslice_dummy_var_108;
    call {:si_unique_call 737} Tmp_316 := CyzPoCallDriver(pDevExt_8, vslice_dummy_var_108, PIrp_1);
    return;

  anon9_Then:
    assume !(PIrp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L50;

  anon8_Then:
    goto L26;

  anon7_Then:
    goto L19;
}



procedure {:origName "CyzSendWaitWake"} CyzSendWaitWake(actual_PDevExt_2: int) returns (Tmp_319: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_319 == -1073741436 || Tmp_319 == 0 || Tmp_319 == -1073741584 || Tmp_319 == 259 || Tmp_319 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSendWaitWake"} CyzSendWaitWake(actual_PDevExt_2: int) returns (Tmp_319: int)
{
  var {:scalar} powerState: int;
  var {:pointer} pIrp: int;
  var {:scalar} status_7: int;
  var {:pointer} Tmp_320: int;
  var {:pointer} PDevExt_2: int;
  var vslice_dummy_var_144: int;

  anon0:
    call {:si_unique_call 738} powerState := __HAVOC_malloc(8);
    PDevExt_2 := actual_PDevExt_2;
    call {:si_unique_call 739} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_319 := -1073741436;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_319 := -1073741436;
    goto L1;

  anon12_Then:
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 740} Tmp_320 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} Tmp_320 != 0;
    assume Tmp_320 > 0;
    call {:si_unique_call 741} vslice_dummy_var_144 := sdv_InterlockedIncrement(Tmp_320);
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} Tmp_320 != 0;
    assume Tmp_320 > 0;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 742} status_7 := PoRequestPowerIrp(0, 0, powerState, li2bplFunctionConstant290, 0, 0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status_7 == 259;
    status_7 := 0;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    goto L27;

  L27:
    Tmp_319 := status_7;
    goto L1;

  anon14_Then:
    assume {:partition} status_7 != 259;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status_7 < 0;
    call {:si_unique_call 743} CyzIRPEpilogue(PDevExt_2);
    goto L27;

  anon15_Then:
    assume {:partition} 0 <= status_7;
    goto L27;

  anon13_Then:
    Tmp_319 := -1073741436;
    goto L1;
}



procedure {:origName "CyzPowerDispatch"} CyzPowerDispatch(actual_PDevObj_8: int, actual_PIrp_2: int) returns (Tmp_321: int);
  modifies alloc, stack_location, markedPending, yogi_error, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzPowerDispatch"} CyzPowerDispatch(actual_PDevObj_8: int, actual_PIrp_2: int) returns (Tmp_321: int)
{
  var {:pointer} Tmp_322: int;
  var {:pointer} Tmp_323: int;
  var {:pointer} pDevExt_9: int;
  var {:pointer} Tmp_325: int;
  var {:pointer} Tmp_326: int;
  var {:pointer} Tmp_327: int;
  var {:pointer} Tmp_328: int;
  var {:pointer} Tmp_329: int;
  var {:pointer} pIrpStack_2: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} Tmp_331: int;
  var {:pointer} pLowerDevObj: int;
  var {:pointer} Tmp_332: int;
  var {:scalar} status_8: int;
  var {:pointer} Tmp_333: int;
  var {:pointer} Tmp_334: int;
  var {:pointer} PDevObj_8: int;
  var {:pointer} PIrp_2: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;

  anon0:
    PDevObj_8 := actual_PDevObj_8;
    PIrp_2 := actual_PIrp_2;
    call {:si_unique_call 744} Tmp_322 := __HAVOC_malloc(100);
    call {:si_unique_call 745} Tmp_323 := __HAVOC_malloc(72);
    call {:si_unique_call 746} Tmp_325 := __HAVOC_malloc(136);
    call {:si_unique_call 747} Tmp_326 := __HAVOC_malloc(72);
    call {:si_unique_call 748} Tmp_327 := __HAVOC_malloc(72);
    call {:si_unique_call 749} Tmp_328 := __HAVOC_malloc(124);
    call {:si_unique_call 750} Tmp_329 := __HAVOC_malloc(72);
    call {:si_unique_call 751} Tmp_330 := __HAVOC_malloc(80);
    call {:si_unique_call 752} Tmp_331 := __HAVOC_malloc(100);
    call {:si_unique_call 753} Tmp_332 := __HAVOC_malloc(104);
    call {:si_unique_call 754} Tmp_333 := __HAVOC_malloc(104);
    call {:si_unique_call 755} Tmp_334 := __HAVOC_malloc(112);
    assume {:nonnull} PDevObj_8 != 0;
    assume PDevObj_8 > 0;
    havoc pDevExt_9;
    call {:si_unique_call 756} pIrpStack_2 := sdv_IoGetCurrentIrpStackLocation(PIrp_2);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc pLowerDevObj;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 757} sdv_do_paged_code_check();
    call {:si_unique_call 758} status_8 := CyzIRPPrologue(PIrp_2, pDevExt_9);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} status_8 != 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_8 != 259;
    call {:si_unique_call 759} PoStartNextPowerIrp(0);
    Tmp_329 := strConst__li2bpl3;
    call {:si_unique_call 760} vslice_dummy_var_147 := CyzDbgPrintEx(9, Tmp_329);
    call {:si_unique_call 761} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 762} CyzIRPEpilogue(pDevExt_9);
    goto L26;

  L26:
    Tmp_321 := status_8;
    goto L1;

  L1:
    call {:si_unique_call 763} SLIC_CyzPowerDispatch_exit(strConst__li2bpl0, Tmp_321);
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon67_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon48_Then:
    assume {:partition} status_8 == 259;
    goto L26;

  anon47_Then:
    assume {:partition} status_8 == 0;
    status_8 := 0;
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    Tmp_334 := strConst__li2bpl61;
    call {:si_unique_call 764} vslice_dummy_var_157 := CyzDbgPrintEx(12, Tmp_334);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L57;

  L57:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc status_8;
    call {:si_unique_call 765} PoStartNextPowerIrp(0);
    Tmp_327 := strConst__li2bpl3;
    call {:si_unique_call 766} vslice_dummy_var_158 := CyzDbgPrintEx(9, Tmp_327);
    call {:si_unique_call 767} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 768} CyzIRPEpilogue(pDevExt_9);
    Tmp_321 := status_8;
    goto L1;

  anon52_Then:
    goto L58;

  L58:
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    status_8 := 0;
    call {:si_unique_call 769} PoStartNextPowerIrp(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume PIrp_2 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 770} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L188;

  L188:
    call {:si_unique_call 771} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 772} Tmp_321 := CyzPoCallDriver(pDevExt_9, pLowerDevObj, PIrp_2);
    goto L1;

  anon53_Then:
    assume !(PIrp_2 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L188;

  anon51_Then:
    goto L58;

  anon49_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L58;

  anon50_Then:
    goto L57;

  anon60_Then:
    goto L40;

  L40:
    call {:si_unique_call 773} PoStartNextPowerIrp(0);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume PIrp_2 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 774} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L179;

  L179:
    call {:si_unique_call 775} sdv_IoSkipCurrentIrpStackLocation(PIrp_2);
    call {:si_unique_call 776} status_8 := CyzPoCallDriver(pDevExt_9, pLowerDevObj, PIrp_2);
    Tmp_321 := status_8;
    goto L1;

  anon59_Then:
    assume !(PIrp_2 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L179;

  anon61_Then:
    Tmp_332 := strConst__li2bpl60;
    call {:si_unique_call 777} vslice_dummy_var_150 := CyzDbgPrintEx(12, Tmp_332);
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_323 := strConst__li2bpl64;
    call {:si_unique_call 778} vslice_dummy_var_152 := CyzDbgPrintEx(12, Tmp_323);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc status_8;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    Tmp_325 := strConst__li2bpl65;
    call {:si_unique_call 779} vslice_dummy_var_153 := CyzDbgPrintEx(12, Tmp_325);
    goto L40;

  anon69_Then:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} pIrpStack_2 != 0;
    assume pIrpStack_2 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L107;

  L107:
    Tmp_322 := strConst__li2bpl66;
    call {:si_unique_call 780} vslice_dummy_var_155 := CyzDbgPrintEx(12, Tmp_322);
    call {:si_unique_call 781} Tmp_321 := CyzSetPowerD3(PDevObj_8, PIrp_2);
    goto L1;

  anon64_Then:
    goto L40;

  anon65_Then:
    goto L107;

  anon66_Then:
    goto L107;

  anon55_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    Tmp_331 := strConst__li2bpl67;
    call {:si_unique_call 782} vslice_dummy_var_154 := CyzDbgPrintEx(12, Tmp_331);
    call {:si_unique_call 783} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 784} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 785} sdv_IoSetCompletionRoutine(PIrp_2, li2bplFunctionConstant285, 0, 1, 1, 1);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume PIrp_2 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 786} SLIC_PoCallDriver_entry(0);
    goto L185;

  L185:
    call {:si_unique_call 787} vslice_dummy_var_146 := PoCallDriver(0, PIrp_2);
    Tmp_321 := 259;
    goto L1;

  anon57_Then:
    assume !(PIrp_2 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L185;

  anon56_Then:
    goto L40;

  anon63_Then:
    Tmp_330 := strConst__li2bpl62;
    call {:si_unique_call 788} vslice_dummy_var_156 := CyzDbgPrintEx(12, Tmp_330);
    goto L40;

  anon54_Then:
    Tmp_326 := strConst__li2bpl63;
    call {:si_unique_call 789} vslice_dummy_var_151 := CyzDbgPrintEx(12, Tmp_326);
    call {:si_unique_call 790} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 791} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    call {:si_unique_call 792} sdv_IoSetCompletionRoutine(PIrp_2, li2bplFunctionConstant284, 0, 1, 1, 1);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume PIrp_2 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 793} SLIC_PoCallDriver_entry(0);
    goto L182;

  L182:
    call {:si_unique_call 794} vslice_dummy_var_145 := PoCallDriver(0, PIrp_2);
    Tmp_321 := 259;
    goto L1;

  anon58_Then:
    assume !(PIrp_2 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L182;

  anon62_Then:
    Tmp_328 := strConst__li2bpl59;
    call {:si_unique_call 795} vslice_dummy_var_149 := CyzDbgPrintEx(12, Tmp_328);
    goto L40;

  anon68_Then:
    Tmp_333 := strConst__li2bpl58;
    call {:si_unique_call 796} vslice_dummy_var_148 := CyzDbgPrintEx(12, Tmp_333);
    goto L40;
}



procedure {:origName "CyzSaveDeviceState"} CyzSaveDeviceState(actual_PDevExt_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSaveDeviceState"} CyzSaveDeviceState(actual_PDevExt_3: int)
{
  var {:pointer} Tmp_336: int;
  var {:pointer} Tmp_337: int;
  var {:pointer} PDevExt_3: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;

  anon0:
    call {:si_unique_call 797} vslice_dummy_var_159 := __HAVOC_malloc(4);
    PDevExt_3 := actual_PDevExt_3;
    call {:si_unique_call 798} Tmp_336 := __HAVOC_malloc(116);
    call {:si_unique_call 799} Tmp_337 := __HAVOC_malloc(112);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 800} sdv_do_paged_code_check();
    Tmp_336 := strConst__li2bpl68;
    call {:si_unique_call 801} vslice_dummy_var_160 := CyzDbgPrintEx(11, Tmp_336);
    Tmp_337 := strConst__li2bpl69;
    call {:si_unique_call 802} vslice_dummy_var_161 := CyzDbgPrintEx(11, Tmp_337);
    return;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_162: int;

  anon0:
    call {:si_unique_call 803} vslice_dummy_var_162 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGotoPowerState"} CyzGotoPowerState(actual_PDevObj_9: int, actual_PDevExt_4: int, actual_DevPowerState: int) returns (Tmp_341: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_341 == 0 || Tmp_341 == -1073741584 || Tmp_341 == 259 || Tmp_341 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGotoPowerState"} CyzGotoPowerState(actual_PDevObj_9: int, actual_PDevExt_4: int, actual_DevPowerState: int) returns (Tmp_341: int)
{
  var {:scalar} powerState_1: int;
  var {:pointer} Tmp_342: int;
  var {:pointer} Tmp_343: int;
  var {:scalar} gotoPowEvent: int;
  var {:scalar} status_9: int;
  var {:scalar} DevPowerState: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;

  anon0:
    call {:si_unique_call 804} powerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 805} gotoPowEvent := __HAVOC_malloc(124);
    DevPowerState := actual_DevPowerState;
    call {:si_unique_call 806} Tmp_342 := __HAVOC_malloc(108);
    call {:si_unique_call 807} Tmp_343 := __HAVOC_malloc(88);
    call {:si_unique_call 808} sdv_do_paged_code_check();
    Tmp_343 := strConst__li2bpl70;
    call {:si_unique_call 809} vslice_dummy_var_164 := CyzDbgPrintEx(11, Tmp_343);
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    call {:si_unique_call 810} KeInitializeEvent(gotoPowEvent, 1, 0);
    call {:si_unique_call 811} status_9 := PoRequestPowerIrp(0, 2, powerState_1, li2bplFunctionConstant280, 0, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_9 == 259;
    call {:si_unique_call 812} vslice_dummy_var_163 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    status_9 := 0;
    goto L21;

  L21:
    Tmp_342 := strConst__li2bpl71;
    call {:si_unique_call 813} vslice_dummy_var_165 := CyzDbgPrintEx(11, Tmp_342);
    Tmp_341 := status_9;
    return;

  anon3_Then:
    assume {:partition} status_9 != 259;
    goto L21;
}



procedure {:origName "CyzGiveImmediateToIsr"} CyzGiveImmediateToIsr(actual_Context_14: int) returns (Tmp_345: int);
  free ensures {:va_keep} Tmp_345 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGiveImmediateToIsr"} CyzGiveImmediateToIsr(actual_Context_14: int) returns (Tmp_345: int)
{
  var {:pointer} s_p_e_c_i_a_l_5: int;
  var {:pointer} sdv_276: int;
  var {:pointer} Tmp_346: int;
  var {:scalar} s_p_e_c_i_a_l_6: int;
  var {:pointer} Extension_15: int;
  var {:pointer} Tmp_348: int;
  var {:pointer} Context_14: int;
  var vslice_dummy_var_109: int;

  anon0:
    Context_14 := actual_Context_14;
    Extension_15 := Context_14;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc Tmp_348;
    assume {:nonnull} Tmp_348 != 0;
    assume Tmp_348 > 0;
    havoc Tmp_346;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} Tmp_346 != 0;
    assume Tmp_346 > 0;
    s_p_e_c_i_a_l_6 := 1;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    havoc vslice_dummy_var_109;
    call {:si_unique_call 814} sdv_276 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_109);
    assume {:nonnull} sdv_276 != 0;
    assume sdv_276 > 0;
    s_p_e_c_i_a_l_5 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_276)));
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    Tmp_345 := 0;
    return;
}



procedure {:origName "CyzCancelImmediate"} CyzCancelImmediate(actual_DeviceObject_3: int, actual_Irp_3: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCancelImmediate"} CyzCancelImmediate(actual_DeviceObject_3: int, actual_Irp_3: int)
{
  var {:pointer} Extension_16: int;
  var {:pointer} DeviceObject_3: int;
  var {:pointer} Irp_3: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_110: int;

  anon0:
    call {:si_unique_call 815} vslice_dummy_var_166 := __HAVOC_malloc(4);
    DeviceObject_3 := actual_DeviceObject_3;
    Irp_3 := actual_Irp_3;
    assume {:nonnull} DeviceObject_3 != 0;
    assume DeviceObject_3 > 0;
    havoc Extension_16;
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    havoc vslice_dummy_var_110;
    call {:si_unique_call 816} CyzTryToCompleteCurrent#1(Extension_16, li2bplFunctionConstant316, vslice_dummy_var_110, -1073741536, CurrentImmediateIrp__CYZ_DEVICE_EXTENSION(Extension_16), 0, 0, ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(Extension_16), 0, li2bplFunctionConstant314, 2);
    return;
}



procedure {:origName "CyzGrabImmediateFromIsr"} CyzGrabImmediateFromIsr(actual_Context_15: int) returns (Tmp_351: int);
  free ensures {:va_keep} Tmp_351 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGrabImmediateFromIsr"} CyzGrabImmediateFromIsr(actual_Context_15: int) returns (Tmp_351: int)
{
  var {:pointer} s_p_e_c_i_a_l_7: int;
  var {:pointer} sdv_277: int;
  var {:scalar} s_p_e_c_i_a_l_8: int;
  var {:pointer} Extension_17: int;
  var {:pointer} Context_15: int;
  var vslice_dummy_var_111: int;

  anon0:
    Context_15 := actual_Context_15;
    Extension_17 := Context_15;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    s_p_e_c_i_a_l_8 := 1;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_111;
    call {:si_unique_call 817} sdv_277 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_111);
    assume {:nonnull} sdv_277 != 0;
    assume sdv_277 > 0;
    s_p_e_c_i_a_l_7 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_277)));
    assume {:nonnull} s_p_e_c_i_a_l_7 != 0;
    assume s_p_e_c_i_a_l_7 > 0;
    goto L6;

  L6:
    Tmp_351 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init11"} _sdv_init11()
{
  var vslice_dummy_var_167: int;

  anon0:
    call {:si_unique_call 818} vslice_dummy_var_167 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGetNextImmediate"} CyzGetNextImmediate(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp_1: int, actual_CompleteCurrent: int, actual_Extension_18: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetNextImmediate"} CyzGetNextImmediate(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp_1: int, actual_CompleteCurrent: int, actual_Extension_18: int)
{
  var {:pointer} Tmp_356: int;
  var {:scalar} OldIrql_4: int;
  var {:pointer} OldIrp: int;
  var {:pointer} Tmp_357: int;
  var {:scalar} pollIrql_3: int;
  var {:pointer} CurrentOpIrp: int;
  var {:pointer} NewIrp_1: int;
  var {:pointer} Extension_18: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;

  anon0:
    call {:si_unique_call 819} vslice_dummy_var_168 := __HAVOC_malloc(4);
    CurrentOpIrp := actual_CurrentOpIrp;
    NewIrp_1 := actual_NewIrp_1;
    Extension_18 := actual_Extension_18;
    call {:si_unique_call 820} Tmp_356 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    havoc OldIrp;
    call {:si_unique_call 821} Tmp_357 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    call {:si_unique_call 822} IoAcquireCancelSpinLock(Tmp_357);
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    havoc OldIrql_4;
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    assume {:nonnull} NewIrp_1 != 0;
    assume NewIrp_1 > 0;
    call {:si_unique_call 823} Tmp_357 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    call {:si_unique_call 824} sdv_KeAcquireSpinLock(0, Tmp_357);
    assume {:nonnull} Tmp_357 != 0;
    assume Tmp_357 > 0;
    havoc pollIrql_3;
    call {:si_unique_call 825} vslice_dummy_var_169 := CyzProcessEmptyTransmit(Extension_18);
    call {:si_unique_call 826} sdv_KeReleaseSpinLock(0, pollIrql_3);
    call {:si_unique_call 827} IoReleaseCancelSpinLock(OldIrql_4);
    Tmp_356 := strConst__li2bpl3;
    call {:si_unique_call 828} vslice_dummy_var_170 := CyzDbgPrintEx(9, Tmp_356);
    call {:si_unique_call 829} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 830} CyzIRPEpilogue(Extension_18);
    return;
}



procedure {:origName "CyzStartImmediate"} CyzStartImmediate(actual_Extension_19: int);
  modifies alloc, markedPending, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzStartImmediate"} CyzStartImmediate(actual_Extension_19: int)
{
  var {:pointer} Tmp_358: int;
  var {:pointer} s_p_e_c_i_a_l_9: int;
  var {:pointer} Tmp_359: int;
  var {:scalar} TotalTime: int;
  var {:pointer} sdv_281: int;
  var {:scalar} UseATimer: int;
  var {:pointer} Tmp_360: int;
  var {:pointer} sdv_283: int;
  var {:scalar} OldIrql_5: int;
  var {:pointer} sdv_284: int;
  var {:pointer} Tmp_361: int;
  var {:scalar} s_p_e_c_i_a_l_10: int;
  var {:pointer} s_p_e_c_i_a_l_11: int;
  var {:pointer} Tmp_362: int;
  var {:pointer} OldIrp_1: int;
  var {:scalar} s_p_e_c_i_a_l_12: int;
  var {:pointer} Tmp_363: int;
  var {:scalar} Timeouts: int;
  var {:scalar} pollIrql_4: int;
  var {:pointer} Extension_19: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;

  anon0:
    call {:si_unique_call 831} TotalTime := __HAVOC_malloc(20);
    call {:si_unique_call 832} Timeouts := __HAVOC_malloc(20);
    call {:si_unique_call 833} vslice_dummy_var_171 := __HAVOC_malloc(4);
    Extension_19 := actual_Extension_19;
    call {:si_unique_call 834} Tmp_358 := __HAVOC_malloc(80);
    call {:si_unique_call 835} Tmp_359 := __HAVOC_malloc(96);
    call {:si_unique_call 836} Tmp_360 := __HAVOC_malloc(72);
    Tmp_359 := strConst__li2bpl72;
    call {:si_unique_call 837} vslice_dummy_var_175 := CyzDbgPrintEx(2, Tmp_359);
    UseATimer := 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc Tmp_361;
    assume {:nonnull} Tmp_361 != 0;
    assume Tmp_361 > 0;
    call {:si_unique_call 838} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 839} Tmp_363 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    call {:si_unique_call 840} sdv_KeAcquireSpinLock(0, Tmp_363);
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    havoc OldIrql_5;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    call {:si_unique_call 841} sdv_KeReleaseSpinLock(0, OldIrql_5);
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L25;

  L25:
    UseATimer := 1;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    goto L29;

  L29:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_112;
    call {:si_unique_call 842} sdv_284 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_112);
    assume {:nonnull} sdv_284 != 0;
    assume sdv_284 > 0;
    call {:si_unique_call 843} Tmp_363 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    call {:si_unique_call 844} IoAcquireCancelSpinLock(Tmp_363);
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    havoc OldIrql_5;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc Tmp_362;
    assume {:nonnull} Tmp_362 != 0;
    assume Tmp_362 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc OldIrp_1;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 845} IoReleaseCancelSpinLock(OldIrql_5);
    assume {:nonnull} OldIrp_1 != 0;
    assume OldIrp_1 > 0;
    assume {:nonnull} OldIrp_1 != 0;
    assume OldIrp_1 > 0;
    Tmp_360 := strConst__li2bpl3;
    call {:si_unique_call 846} vslice_dummy_var_176 := CyzDbgPrintEx(9, Tmp_360);
    call {:si_unique_call 847} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 848} CyzIRPEpilogue(Extension_19);
    goto L57;

  L57:
    Tmp_358 := strConst__li2bpl73;
    call {:si_unique_call 849} vslice_dummy_var_177 := CyzDbgPrintEx(2, Tmp_358);
    return;

  anon11_Then:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_113;
    call {:si_unique_call 850} vslice_dummy_var_172 := sdv_IoSetCancelRoutine(vslice_dummy_var_113, li2bplFunctionConstant312);
    s_p_e_c_i_a_l_10 := 2;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_114;
    call {:si_unique_call 851} sdv_281 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_114);
    assume {:nonnull} sdv_281 != 0;
    assume sdv_281 > 0;
    s_p_e_c_i_a_l_9 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_281)));
    assume {:nonnull} s_p_e_c_i_a_l_9 != 0;
    assume s_p_e_c_i_a_l_9 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} UseATimer != 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 852} vslice_dummy_var_173 := CyzSetTimer(ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(Extension_19), TotalTime, TotalImmediateTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_19), Extension_19);
    s_p_e_c_i_a_l_12 := 4;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_115;
    call {:si_unique_call 853} sdv_283 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_115);
    assume {:nonnull} sdv_283 != 0;
    assume sdv_283 > 0;
    s_p_e_c_i_a_l_11 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_283)));
    assume {:nonnull} s_p_e_c_i_a_l_11 != 0;
    assume s_p_e_c_i_a_l_11 > 0;
    goto L69;

  L69:
    call {:si_unique_call 854} Tmp_363 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    call {:si_unique_call 855} sdv_KeAcquireSpinLock(0, Tmp_363);
    assume {:nonnull} Tmp_363 != 0;
    assume Tmp_363 > 0;
    havoc pollIrql_4;
    call {:si_unique_call 856} vslice_dummy_var_174 := CyzGiveImmediateToIsr(Extension_19);
    call {:si_unique_call 857} sdv_KeReleaseSpinLock(0, pollIrql_4);
    call {:si_unique_call 858} IoReleaseCancelSpinLock(OldIrql_5);
    goto L57;

  anon12_Then:
    assume {:partition} UseATimer == 0;
    goto L69;

  anon9_Then:
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L29;

  anon10_Then:
    goto L25;
}



procedure {:origName "_sdv_init10"} _sdv_init10();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init10"} _sdv_init10()
{
  var vslice_dummy_var_178: int;

  anon0:
    call {:si_unique_call 859} vslice_dummy_var_178 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzCreateOpen"} CyzCreateOpen(actual_DeviceObject_4: int, actual_Irp_4: int) returns (Tmp_367: int);
  modifies alloc, locked, queuedWithoutMarking, yogi_error, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCreateOpen"} CyzCreateOpen(actual_DeviceObject_4: int, actual_Irp_4: int) returns (Tmp_367: int)
{
  var {:scalar} localStatus: int;
  var {:pointer} sdv_289: int;
  var {:scalar} Tmp_368: int;
  var {:pointer} sdv_291: int;
  var {:pointer} Tmp_369: int;
  var {:pointer} Tmp_370: int;
  var {:pointer} Tmp_371: int;
  var {:pointer} Tmp_372: int;
  var {:pointer} Tmp_373: int;
  var {:pointer} sdv_298: int;
  var {:scalar} sdv_299: int;
  var {:scalar} sdv_300: int;
  var {:pointer} Tmp_374: int;
  var {:pointer} Tmp_375: int;
  var {:pointer} sdv_305: int;
  var {:pointer} Tmp_376: int;
  var {:pointer} Tmp_377: int;
  var {:pointer} pDispatch_4: int;
  var {:pointer} extension_3: int;
  var {:scalar} pollIrql_5: int;
  var {:scalar} pollingIrql: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_4: int;
  var boogieTmp: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;

  anon0:
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_4 := actual_Irp_4;
    call {:si_unique_call 860} Tmp_369 := __HAVOC_malloc(72);
    call {:si_unique_call 861} Tmp_370 := __HAVOC_malloc(256);
    call {:si_unique_call 862} Tmp_371 := __HAVOC_malloc(72);
    call {:si_unique_call 863} Tmp_372 := __HAVOC_malloc(72);
    call {:si_unique_call 864} Tmp_373 := __HAVOC_malloc(72);
    call {:si_unique_call 865} Tmp_374 := __HAVOC_malloc(96);
    call {:si_unique_call 866} Tmp_376 := __HAVOC_malloc(72);
    call {:si_unique_call 867} Tmp_377 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc extension_3;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc pDispatch_4;
    call {:si_unique_call 868} sdv_do_paged_code_check();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    call {:si_unique_call 869} sdv_IoCompleteRequest(0, 0);
    Tmp_367 := -1073741670;
    goto L1;

  L1:
    call {:si_unique_call 870} SLIC_CyzCreateOpen_exit(strConst__li2bpl0, Tmp_367);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon41_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon31_Then:
    call {:si_unique_call 871} ExAcquireFastMutex(0);
    call {:si_unique_call 872} localStatus := CyzIRPPrologue(Irp_4, extension_3);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} localStatus != 0;
    call {:si_unique_call 873} ExReleaseFastMutex(0);
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} localStatus != 259;
    Tmp_373 := strConst__li2bpl3;
    call {:si_unique_call 874} vslice_dummy_var_183 := CyzDbgPrintEx(9, Tmp_373);
    call {:si_unique_call 875} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 876} CyzIRPEpilogue(extension_3);
    goto L34;

  L34:
    Tmp_367 := localStatus;
    goto L1;

  anon33_Then:
    assume {:partition} localStatus == 259;
    goto L34;

  anon32_Then:
    assume {:partition} localStatus == 0;
    call {:si_unique_call 877} Tmp_375 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 878} sdv_299 := sdv_InterlockedIncrement(Tmp_375);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_299 != 1;
    call {:si_unique_call 879} ExReleaseFastMutex(0);
    call {:si_unique_call 880} Tmp_375 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 881} vslice_dummy_var_184 := sdv_InterlockedDecrement(Tmp_375);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    Tmp_369 := strConst__li2bpl3;
    call {:si_unique_call 882} vslice_dummy_var_185 := CyzDbgPrintEx(9, Tmp_369);
    call {:si_unique_call 883} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 884} CyzIRPEpilogue(extension_3);
    Tmp_367 := -1073741790;
    goto L1;

  anon34_Then:
    assume {:partition} sdv_299 == 1;
    Tmp_374 := strConst__li2bpl1;
    call {:si_unique_call 885} vslice_dummy_var_186 := CyzDbgPrintEx(9, Tmp_374);
    Tmp_371 := strConst__li2bpl74;
    call {:si_unique_call 886} vslice_dummy_var_187 := CyzDbgPrintEx(6, Tmp_371);
    call {:si_unique_call 887} sdv_298 := sdv_IoGetCurrentIrpStackLocation(Irp_4);
    assume {:nonnull} sdv_298 != 0;
    assume sdv_298 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 888} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    call {:si_unique_call 889} Tmp_375 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 890} vslice_dummy_var_188 := sdv_InterlockedDecrement(Tmp_375);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Tmp_376 := strConst__li2bpl3;
    call {:si_unique_call 891} vslice_dummy_var_189 := CyzDbgPrintEx(9, Tmp_376);
    call {:si_unique_call 892} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 893} CyzIRPEpilogue(extension_3);
    Tmp_367 := -1073741565;
    goto L1;

  anon35_Then:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 894} sdv_300 := corral_nondet();
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_300 != 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} sdv_300 != 1;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_300 == 2;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc vslice_dummy_var_116;
    call {:si_unique_call 895} sdv_289 := ExAllocatePoolWithTag(0, vslice_dummy_var_116, -797279933);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    goto L98;

  L98:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc vslice_dummy_var_117;
    call {:si_unique_call 896} sdv_291 := ExAllocatePoolWithTag(0, vslice_dummy_var_117, -797279933);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L97;

  L97:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc vslice_dummy_var_118;
    call {:si_unique_call 897} sdv_305 := ExAllocatePoolWithTag(0, vslice_dummy_var_118, -797279933);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto L96;

  L96:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    call {:si_unique_call 898} MmLockPagableSectionByHandle(0);
    call {:si_unique_call 899} vslice_dummy_var_179 := CyzGotoPowerState(DeviceObject_4, extension_3, 1);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 900} boogieTmp := corral_nondet();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 901} boogieTmp := corral_nondet();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 902} boogieTmp := corral_nondet();
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 903} Tmp_375 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    call {:si_unique_call 904} sdv_KeAcquireSpinLock(0, Tmp_375);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    havoc pollIrql_5;
    call {:si_unique_call 905} vslice_dummy_var_180 := CyzClearStats(extension_3);
    call {:si_unique_call 906} sdv_KeReleaseSpinLock(0, pollIrql_5);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 907} Tmp_375 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    call {:si_unique_call 908} sdv_KeAcquireSpinLock(0, Tmp_375);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    havoc pollIrql_5;
    call {:si_unique_call 909} vslice_dummy_var_181 := CyzMarkOpen(extension_3);
    call {:si_unique_call 910} sdv_KeReleaseSpinLock(0, pollIrql_5);
    call {:si_unique_call 911} Tmp_375 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    call {:si_unique_call 912} sdv_KeAcquireSpinLock(0, Tmp_375);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    havoc pollingIrql;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    havoc Tmp_368;
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    havoc Tmp_370;
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L168;

  L168:
    call {:si_unique_call 913} sdv_KeReleaseSpinLock(0, pollingIrql);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    call {:si_unique_call 914} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    havoc localStatus;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} localStatus >= 0;
    goto L179;

  L179:
    Tmp_377 := strConst__li2bpl3;
    call {:si_unique_call 915} vslice_dummy_var_190 := CyzDbgPrintEx(9, Tmp_377);
    call {:si_unique_call 916} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 917} CyzIRPEpilogue(extension_3);
    Tmp_367 := localStatus;
    goto L1;

  anon43_Then:
    assume {:partition} 0 > localStatus;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    call {:si_unique_call 918} sdv_ExFreePool(0);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto L189;

  L189:
    call {:si_unique_call 919} Tmp_375 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 920} vslice_dummy_var_191 := sdv_InterlockedDecrement(Tmp_375);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto L179;

  anon38_Then:
    goto L189;

  anon42_Then:
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    havoc vslice_dummy_var_119;
    havoc vslice_dummy_var_120;
    call {:si_unique_call 921} vslice_dummy_var_182 := KeSetTimerEx(0, vslice_dummy_var_119, vslice_dummy_var_120, 0);
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    assume {:nonnull} pDispatch_4 != 0;
    assume pDispatch_4 > 0;
    goto L168;

  anon37_Then:
    call {:si_unique_call 922} ExReleaseFastMutex(0);
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    call {:si_unique_call 923} Tmp_375 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    call {:si_unique_call 924} vslice_dummy_var_192 := sdv_InterlockedDecrement(Tmp_375);
    assume {:nonnull} Tmp_375 != 0;
    assume Tmp_375 > 0;
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    Tmp_372 := strConst__li2bpl3;
    call {:si_unique_call 925} vslice_dummy_var_193 := CyzDbgPrintEx(9, Tmp_372);
    call {:si_unique_call 926} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 927} CyzIRPEpilogue(extension_3);
    Tmp_367 := -1073741670;
    goto L1;

  anon44_Then:
    goto L96;

  anon45_Then:
    goto L96;

  anon39_Then:
    assume {:partition} sdv_300 != 2;
    goto L96;

  anon40_Then:
    assume {:partition} sdv_300 == 1;
    goto L98;

  anon36_Then:
    assume {:partition} sdv_300 == 0;
    goto L97;
}



procedure {:origName "CyzTryToDisableTimer"} CyzTryToDisableTimer(actual_Context_16: int) returns (Tmp_378: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_378 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzTryToDisableTimer"} CyzTryToDisableTimer(actual_Context_16: int) returns (Tmp_378: int)
{
  var {:scalar} Tmp_379: int;
  var {:scalar} channel: int;
  var {:pointer} Tmp_380: int;
  var {:pointer} Tmp_381: int;
  var {:scalar} cancelled_1: int;
  var {:scalar} oldIrql_3: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} pDispatch_5: int;
  var {:pointer} extension_4: int;
  var {:pointer} Context_16: int;
  var vslice_dummy_var_194: int;

  anon0:
    Context_16 := actual_Context_16;
    call {:si_unique_call 928} Tmp_381 := __HAVOC_malloc(256);
    call {:si_unique_call 929} Tmp_383 := __HAVOC_malloc(256);
    extension_4 := Context_16;
    assume {:nonnull} extension_4 != 0;
    assume extension_4 > 0;
    havoc pDispatch_5;
    call {:si_unique_call 930} Tmp_380 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_380 != 0;
    assume Tmp_380 > 0;
    call {:si_unique_call 931} sdv_KeAcquireSpinLock(0, Tmp_380);
    assume {:nonnull} Tmp_380 != 0;
    assume Tmp_380 > 0;
    havoc oldIrql_3;
    assume {:nonnull} extension_4 != 0;
    assume extension_4 > 0;
    havoc Tmp_379;
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    havoc Tmp_381;
    assume {:nonnull} Tmp_381 != 0;
    assume Tmp_381 > 0;
    channel := 0;
    goto L14;

  L14:
    call {:si_unique_call 932} channel, Tmp_382, Tmp_383 := CyzTryToDisableTimer_loop_L14(channel, Tmp_382, Tmp_383, pDispatch_5);
    goto L14_last;

  L14_last:
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_382 := channel;
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    havoc Tmp_383;
    assume {:nonnull} Tmp_383 != 0;
    assume Tmp_383 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    channel := channel + 1;
    goto anon12_Else_dummy;

  anon12_Else_dummy:
    assume false;
    return;

  anon12_Then:
    goto L15;

  L15:
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    call {:si_unique_call 933} cancelled_1 := KeCancelTimer(0);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} cancelled_1 != 0;
    assume {:nonnull} pDispatch_5 != 0;
    assume pDispatch_5 > 0;
    goto L29;

  L29:
    call {:si_unique_call 934} vslice_dummy_var_194 := KeRemoveQueueDpc(0);
    goto L19;

  L19:
    call {:si_unique_call 935} sdv_KeReleaseSpinLock(0, oldIrql_3);
    Tmp_378 := 0;
    return;

  anon11_Then:
    assume {:partition} cancelled_1 == 0;
    goto L29;

  anon10_Then:
    goto L19;

  anon9_Then:
    goto L15;
}



procedure {:origName "CyzClose"} CyzClose(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_384: int);
  modifies alloc, locked, queuedWithoutMarking, yogi_error, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzClose"} CyzClose(actual_DeviceObject_5: int, actual_Irp_5: int) returns (Tmp_384: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:pointer} structPtr888d200ms: int;
  var {:pointer} structPtr888d100ms: int;
  var {:pointer} Tmp_385: int;
  var {:pointer} Tmp_386: int;
  var {:scalar} flushCount: int;
  var {:scalar} sdv: int;
  var {:scalar} charTime: int;
  var {:scalar} waitAmount2: int;
  var {:scalar} pendingDPCs: int;
  var {:scalar} waitAmount1: int;
  var {:scalar} sdv_323: int;
  var {:scalar} S_11: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:scalar} tx_2: int;
  var {:scalar} d200ms: int;
  var {:scalar} tenCharDelay: int;
  var {:pointer} Tmp_389: int;
  var {:pointer} Tmp_390: int;
  var {:scalar} d100ms: int;
  var {:scalar} tx_3: int;
  var {:pointer} Tmp_391: int;
  var {:pointer} Tmp_392: int;
  var {:dopa} {:scalar} txempty: int;
  var {:pointer} Tmp_393: int;
  var {:scalar} tx_4: int;
  var {:scalar} status_10: int;
  var {:pointer} extension_5: int;
  var {:scalar} pollIrql_6: int;
  var {:pointer} Tmp_394: int;
  var {:pointer} Tmp_395: int;
  var {:pointer} DeviceObject_5: int;
  var {:pointer} Irp_5: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;

  anon0:
    call {:si_unique_call 936} sdv := __HAVOC_malloc(20);
    call {:si_unique_call 937} charTime := __HAVOC_malloc(20);
    call {:si_unique_call 938} vslice_dummy_var_195 := __HAVOC_malloc(20);
    call {:si_unique_call 939} S_11 := __HAVOC_malloc(8);
    call {:si_unique_call 940} d200ms := __HAVOC_malloc(20);
    call {:si_unique_call 941} tenCharDelay := __HAVOC_malloc(20);
    call {:si_unique_call 942} vslice_dummy_var_196 := __HAVOC_malloc(20);
    call {:si_unique_call 943} d100ms := __HAVOC_malloc(20);
    call {:si_unique_call 944} txempty := __HAVOC_malloc(4);
    DeviceObject_5 := actual_DeviceObject_5;
    Irp_5 := actual_Irp_5;
    call {:si_unique_call 945} Tmp_385 := __HAVOC_malloc(124);
    call {:si_unique_call 946} Tmp_386 := __HAVOC_malloc(92);
    call {:si_unique_call 947} Tmp_387 := __HAVOC_malloc(76);
    call {:si_unique_call 948} Tmp_388 := __HAVOC_malloc(72);
    call {:si_unique_call 949} Tmp_389 := __HAVOC_malloc(128);
    call {:si_unique_call 950} Tmp_390 := __HAVOC_malloc(96);
    call {:si_unique_call 951} Tmp_391 := __HAVOC_malloc(52);
    call {:si_unique_call 952} Tmp_392 := __HAVOC_malloc(72);
    call {:si_unique_call 953} Tmp_393 := __HAVOC_malloc(72);
    call {:si_unique_call 954} Tmp_395 := __HAVOC_malloc(80);
    call {:si_unique_call 955} structPtr888d200ms := RtlConvertLongToLargeInteger(-2000000);
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    assume {:nonnull} d200ms != 0;
    assume d200ms > 0;
    assume {:nonnull} structPtr888d200ms != 0;
    assume structPtr888d200ms > 0;
    call {:si_unique_call 956} structPtr888d100ms := RtlConvertLongToLargeInteger(-1000000);
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} d100ms != 0;
    assume d100ms > 0;
    assume {:nonnull} structPtr888d100ms != 0;
    assume structPtr888d100ms > 0;
    assume {:nonnull} DeviceObject_5 != 0;
    assume DeviceObject_5 > 0;
    havoc extension_5;
    call {:si_unique_call 957} ExAcquireFastMutex(0);
    call {:si_unique_call 958} status_10 := CyzIRPPrologue(Irp_5, extension_5);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} status_10 != 0;
    Tmp_385 := strConst__li2bpl75;
    call {:si_unique_call 959} vslice_dummy_var_210 := CyzDbgPrintEx(3, Tmp_385);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} status_10 == -1073741738;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 960} sdv_ExFreePool(0);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    havoc status_10;
    goto L44;

  L44:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_10 != 259;
    Tmp_392 := strConst__li2bpl3;
    call {:si_unique_call 961} vslice_dummy_var_211 := CyzDbgPrintEx(9, Tmp_392);
    call {:si_unique_call 962} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 963} CyzIRPEpilogue(extension_5);
    call {:si_unique_call 964} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 965} vslice_dummy_var_212 := sdv_InterlockedDecrement(Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto L52;

  L52:
    call {:si_unique_call 966} ExReleaseFastMutex(0);
    Tmp_384 := status_10;
    goto L1;

  L1:
    call {:si_unique_call 967} SLIC_CyzClose_exit(strConst__li2bpl0, Tmp_384);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon38_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon32_Then:
    assume {:partition} status_10 == 259;
    goto L52;

  anon31_Then:
    assume {:partition} status_10 != -1073741738;
    goto L44;

  anon29_Then:
    assume {:partition} status_10 == 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    Tmp_389 := strConst__li2bpl76;
    call {:si_unique_call 968} vslice_dummy_var_213 := CyzDbgPrintEx(0, Tmp_389);
    Tmp_386 := strConst__li2bpl77;
    call {:si_unique_call 969} vslice_dummy_var_214 := CyzDbgPrintEx(0, Tmp_386);
    call {:si_unique_call 970} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Tmp_393 := strConst__li2bpl3;
    call {:si_unique_call 971} vslice_dummy_var_215 := CyzDbgPrintEx(9, Tmp_393);
    call {:si_unique_call 972} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 973} CyzIRPEpilogue(extension_5);
    Tmp_384 := -1073741808;
    goto L1;

  anon30_Then:
    Tmp_390 := strConst__li2bpl1;
    call {:si_unique_call 974} vslice_dummy_var_216 := CyzDbgPrintEx(9, Tmp_390);
    Tmp_391 := strConst__li2bpl78;
    call {:si_unique_call 975} vslice_dummy_var_217 := CyzDbgPrintEx(6, Tmp_391);
    call {:si_unique_call 976} structPtr888sdv := CyzGetCharTime(extension_5);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} charTime != 0;
    assume charTime > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 977} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    call {:si_unique_call 978} sdv_KeAcquireSpinLock(0, Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    havoc pollIrql_6;
    call {:si_unique_call 979} vslice_dummy_var_197 := CyzTurnOffBreak(extension_5);
    call {:si_unique_call 980} sdv_KeReleaseSpinLock(0, pollIrql_6);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 981} tx_3 := corral_nondet();
    call {:si_unique_call 982} tx_4 := corral_nondet();
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    havoc tx_2;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} tx_3 >= tx_4;
    waitAmount1 := tx_3 - tx_4;
    waitAmount2 := 0;
    goto L123;

  L123:
    flushCount := waitAmount1 + waitAmount2;
    flushCount := flushCount + 74;
    assume {:nonnull} S_11 != 0;
    assume S_11 > 0;
    assume {:nonnull} S_11 != 0;
    assume S_11 > 0;
    goto L127;

  L127:
    call {:si_unique_call 983} flushCount, pollIrql_6, Tmp_394, vslice_dummy_var_198, vslice_dummy_var_199 := CyzClose_loop_L127(flushCount, S_11, txempty, pollIrql_6, Tmp_394, vslice_dummy_var_198, vslice_dummy_var_199);
    goto L127_last;

  L127_last:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} flushCount != 0;
    call {:si_unique_call 984} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    call {:si_unique_call 985} sdv_KeAcquireSpinLock(0, Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    havoc pollIrql_6;
    call {:si_unique_call 986} vslice_dummy_var_198 := CyzCheckIfTxEmpty(S_11);
    call {:si_unique_call 987} sdv_KeReleaseSpinLock(0, pollIrql_6);
    assume {:nonnull} txempty != 0;
    assume txempty > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    call {:si_unique_call 988} vslice_dummy_var_199 := KeDelayExecutionThread(0, 0, 0);
    flushCount := flushCount - 1;
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    assume false;
    return;

  anon34_Then:
    goto L128;

  L128:
    call {:si_unique_call 989} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    call {:si_unique_call 990} sdv_KeAcquireSpinLock(0, Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    havoc pollIrql_6;
    call {:si_unique_call 991} vslice_dummy_var_200 := CyzMarkClose(extension_5);
    call {:si_unique_call 992} sdv_KeReleaseSpinLock(0, pollIrql_6);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 993} CyzIssueCmd(extension_5, 17, 0, 0);
    goto L153;

  L153:
    assume {:nonnull} charTime != 0;
    assume charTime > 0;
    assume {:nonnull} tenCharDelay != 0;
    assume tenCharDelay > 0;
    call {:si_unique_call 994} vslice_dummy_var_218 := KeDelayExecutionThread(0, 1, 0);
    call {:si_unique_call 995} vslice_dummy_var_201 := CyzClrDTR(extension_5);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L167;

  L167:
    call {:si_unique_call 996} vslice_dummy_var_202 := CyzClose_loop_L167(extension_5, vslice_dummy_var_202);
    goto L167_last;

  L167_last:
    call {:si_unique_call 1027} vslice_dummy_var_202 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    call {:si_unique_call 997} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    call {:si_unique_call 998} sdv_KeAcquireSpinLock(0, Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    havoc pollIrql_6;
    call {:si_unique_call 999} vslice_dummy_var_203 := CyzNullSynch(0);
    call {:si_unique_call 1000} sdv_KeReleaseSpinLock(0, pollIrql_6);
    goto L164;

  L164:
    call {:si_unique_call 1001} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    call {:si_unique_call 1002} sdv_KeAcquireSpinLock(0, Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    havoc pollIrql_6;
    call {:si_unique_call 1003} vslice_dummy_var_204 := CyzClrRTS(extension_5);
    call {:si_unique_call 1004} sdv_KeReleaseSpinLock(0, pollIrql_6);
    call {:si_unique_call 1005} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    call {:si_unique_call 1006} sdv_KeAcquireSpinLock(0, Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    havoc pollIrql_6;
    call {:si_unique_call 1007} vslice_dummy_var_205 := CyzDisableHw(extension_5);
    call {:si_unique_call 1008} sdv_KeReleaseSpinLock(0, pollIrql_6);
    call {:si_unique_call 1009} vslice_dummy_var_206 := CyzTryToDisableTimer(extension_5);
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    call {:si_unique_call 1010} sdv_ExFreePool(0);
    goto L203;

  L203:
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 1011} vslice_dummy_var_208 := IoCancelIrp(0);
    goto L209;

  L209:
    call {:si_unique_call 1012} vslice_dummy_var_207 := CyzGotoPowerState(DeviceObject_5, extension_5, 4);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Tmp_388 := strConst__li2bpl3;
    call {:si_unique_call 1013} vslice_dummy_var_219 := CyzDbgPrintEx(9, Tmp_388);
    call {:si_unique_call 1014} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1015} CyzIRPEpilogue(extension_5);
    call {:si_unique_call 1016} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 1017} sdv_323 := sdv_InterlockedDecrement(Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    pendingDPCs := sdv_323;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} pendingDPCs != 0;
    Tmp_395 := strConst__li2bpl80;
    call {:si_unique_call 1018} vslice_dummy_var_220 := CyzDbgPrintEx(4, Tmp_395);
    call {:si_unique_call 1019} vslice_dummy_var_209 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L231;

  L231:
    Tmp_387 := strConst__li2bpl79;
    call {:si_unique_call 1020} vslice_dummy_var_221 := CyzDbgPrintEx(4, Tmp_387);
    call {:si_unique_call 1021} ExReleaseFastMutex(0);
    call {:si_unique_call 1022} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 1023} vslice_dummy_var_222 := sdv_InterlockedIncrement(Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 1024} Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 1025} vslice_dummy_var_223 := sdv_InterlockedDecrement(Tmp_394);
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} extension_5 != 0;
    assume extension_5 > 0;
    call {:si_unique_call 1026} MmUnlockPagableImageSection(0);
    Tmp_384 := 0;
    goto L1;

  anon42_Then:
    assume {:partition} pendingDPCs == 0;
    goto L231;

  anon41_Then:
    goto L209;

  anon40_Then:
    goto L203;

  anon37_Then:
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    assume false;
    return;

  anon36_Then:
    goto L164;

  anon35_Then:
    goto L153;

  anon33_Then:
    assume {:partition} flushCount == 0;
    goto L128;

  anon39_Then:
    assume {:partition} tx_4 > tx_3;
    waitAmount1 := tx_2 - tx_4;
    waitAmount2 := tx_3;
    goto L123;
}



procedure {:origName "CyzMarkOpen"} CyzMarkOpen(actual_Context_17: int) returns (Tmp_396: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_396 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzMarkOpen"} CyzMarkOpen(actual_Context_17: int) returns (Tmp_396: int)
{
  var {:pointer} extension_6: int;
  var {:pointer} Context_17: int;
  var vslice_dummy_var_224: int;

  anon0:
    Context_17 := actual_Context_17;
    extension_6 := Context_17;
    call {:si_unique_call 1028} vslice_dummy_var_224 := CyzReset(extension_6);
    assume {:nonnull} extension_6 != 0;
    assume extension_6 > 0;
    assume {:nonnull} extension_6 != 0;
    assume extension_6 > 0;
    Tmp_396 := 0;
    return;
}



procedure {:origName "_sdv_init15"} _sdv_init15();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init15"} _sdv_init15()
{
  var vslice_dummy_var_225: int;

  anon0:
    call {:si_unique_call 1029} vslice_dummy_var_225 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzNullSynch"} CyzNullSynch(actual_Context_18: int) returns (Tmp_400: int);
  free ensures {:va_keep} Tmp_400 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzNullSynch"} CyzNullSynch(actual_Context_18: int) returns (Tmp_400: int)
{

  anon0:
    Tmp_400 := 0;
    return;
}



procedure {:origName "CyzGetCharTime"} CyzGetCharTime(actual_Extension_20: int) returns (SD3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetCharTime"} CyzGetCharTime(actual_Extension_20: int) returns (SD3: int)
{
  var {:scalar} dataSize: int;
  var {:scalar} Tmp_3: int;
  var {:scalar} charTime_1: int;
  var {:scalar} Tmp_402: int;
  var {:scalar} Tmp_404: int;
  var {:scalar} Tmp_405: int;
  var {:scalar} bitTime: int;
  var {:scalar} paritySize: int;
  var {:scalar} Tmp_406: int;
  var {:scalar} tmp: int;
  var {:scalar} stopSize: int;
  var {:pointer} Extension_20: int;

  anon0:
    call {:si_unique_call 1030} Tmp_3 := __HAVOC_malloc(20);
    call {:si_unique_call 1031} tmp := __HAVOC_malloc(20);
    Extension_20 := actual_Extension_20;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_406;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Tmp_406 == 1;
    dataSize := 5;
    goto L13;

  L13:
    paritySize := 1;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L16;

  L16:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_405;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Tmp_405 == 16;
    stopSize := 1;
    goto L20;

  L20:
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc bitTime;
    charTime_1 := bitTime + (dataSize + paritySize + stopSize) * bitTime;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_3 != 0;
    assume Tmp_3 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    SD3 := Tmp_3;
    return;

  anon13_Then:
    assume {:partition} Tmp_405 != 16;
    stopSize := 2;
    goto L20;

  anon12_Then:
    paritySize := 0;
    goto L16;

  anon11_Then:
    assume {:partition} Tmp_406 != 1;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_404;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Tmp_404 == 2;
    dataSize := 6;
    goto L13;

  anon14_Then:
    assume {:partition} Tmp_404 != 2;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_402;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Tmp_402 == 4;
    dataSize := 7;
    goto L13;

  anon15_Then:
    assume {:partition} Tmp_402 != 4;
    dataSize := 8;
    goto L13;
}



procedure {:origName "CyzDisableHw"} CyzDisableHw(actual_Context_19: int) returns (Tmp_407: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_407 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzDisableHw"} CyzDisableHw(actual_Context_19: int) returns (Tmp_407: int)
{
  var {:pointer} extension_7: int;
  var {:pointer} Context_19: int;

  anon0:
    Context_19 := actual_Context_19;
    extension_7 := Context_19;
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 1032} CyzIssueCmd(extension_7, 2, 0, 0);
    call {:si_unique_call 1033} CyzIssueCmd(extension_7, 1, 0, 0);
    Tmp_407 := 0;
    return;
}



procedure {:origName "CyzMarkClose"} CyzMarkClose(actual_Context_20: int) returns (Tmp_409: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_409 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzMarkClose"} CyzMarkClose(actual_Context_20: int) returns (Tmp_409: int)
{
  var {:pointer} extension_8: int;
  var {:pointer} Context_20: int;

  anon0:
    Context_20 := actual_Context_20;
    extension_8 := Context_20;
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    call {:si_unique_call 1034} CyzIssueCmd(extension_8, 2, 0, 0);
    assume {:nonnull} extension_8 != 0;
    assume extension_8 > 0;
    Tmp_409 := 0;
    return;
}



procedure {:origName "CyzCleanup"} CyzCleanup(actual_DeviceObject_6: int, actual_Irp_6: int) returns (Tmp_411: int);
  modifies alloc, locked, queuedWithoutMarking, stack_location, markedPending, queued, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCleanup"} CyzCleanup(actual_DeviceObject_6: int, actual_Irp_6: int) returns (Tmp_411: int)
{
  var {:pointer} Tmp_412: int;
  var {:pointer} Tmp_413: int;
  var {:scalar} status_11: int;
  var {:pointer} extension_9: int;
  var {:pointer} Tmp_414: int;
  var {:pointer} DeviceObject_6: int;
  var {:pointer} Irp_6: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;

  anon0:
    DeviceObject_6 := actual_DeviceObject_6;
    Irp_6 := actual_Irp_6;
    call {:si_unique_call 1035} Tmp_412 := __HAVOC_malloc(72);
    call {:si_unique_call 1036} Tmp_413 := __HAVOC_malloc(96);
    call {:si_unique_call 1037} Tmp_414 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_6 != 0;
    assume DeviceObject_6 > 0;
    havoc extension_9;
    call {:si_unique_call 1038} sdv_do_paged_code_check();
    call {:si_unique_call 1039} status_11 := CyzIRPPrologue(Irp_6, extension_9);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_11 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} status_11 == -1073741738;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    havoc status_11;
    goto L18;

  L18:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_11 != 259;
    Tmp_414 := strConst__li2bpl3;
    call {:si_unique_call 1040} vslice_dummy_var_226 := CyzDbgPrintEx(9, Tmp_414);
    call {:si_unique_call 1041} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1042} CyzIRPEpilogue(extension_9);
    goto L21;

  L21:
    Tmp_411 := status_11;
    goto L1;

  L1:
    call {:si_unique_call 1043} SLIC_CyzCleanup_exit(strConst__li2bpl0, Tmp_411);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon11_Then:
    assume {:partition} status_11 == 259;
    goto L21;

  anon10_Then:
    assume {:partition} status_11 != -1073741738;
    goto L18;

  anon9_Then:
    assume {:partition} status_11 == 0;
    Tmp_413 := strConst__li2bpl1;
    call {:si_unique_call 1044} vslice_dummy_var_227 := CyzDbgPrintEx(9, Tmp_413);
    call {:si_unique_call 1045} CyzKillPendingIrps(DeviceObject_6);
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    Tmp_412 := strConst__li2bpl3;
    call {:si_unique_call 1046} vslice_dummy_var_228 := CyzDbgPrintEx(9, Tmp_412);
    call {:si_unique_call 1047} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1048} CyzIRPEpilogue(extension_9);
    Tmp_411 := 0;
    goto L1;
}



procedure {:origName "CyzGetPortInfo"} CyzGetPortInfo(actual_PDevObj_10: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig_1: int) returns (Tmp_416: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_416 == -1073741488 || Tmp_416 == -1073741670 || Tmp_416 == 0 || Tmp_416 == -1073741811 || Tmp_416 == -1073741808 || Tmp_416 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetPortInfo"} CyzGetPortInfo(actual_PDevObj_10: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig_1: int) returns (Tmp_416: int)
{
  var {:scalar} i_1: int;
  var {:pointer} pPartialResourceList: int;
  var {:pointer} pFullTrResourceDesc: int;
  var {:pointer} Tmp_417: int;
  var {:scalar} count: int;
  var {:pointer} Tmp_418: int;
  var {:pointer} Tmp_419: int;
  var {:scalar} Tmp_420: int;
  var {:pointer} Tmp_421: int;
  var {:scalar} Tmp_422: int;
  var {:pointer} keyHandle: int;
  var {:scalar} Tmp_423: int;
  var {:pointer} Tmp_424: int;
  var {:scalar} Tmp_425: int;
  var {:pointer} Tmp_426: int;
  var {:pointer} pPartialTrResourceDesc: int;
  var {:scalar} Tmp_427: int;
  var {:pointer} Tmp_428: int;
  var {:pointer} pDevExt_10: int;
  var {:scalar} Tmp_429: int;
  var {:pointer} Tmp_431: int;
  var {:pointer} Tmp_432: int;
  var {:pointer} Tmp_433: int;
  var {:scalar} Tmp_434: int;
  var {:pointer} Tmp_435: int;
  var {:dopa} {:scalar} firmwareVersion: int;
  var {:pointer} Tmp_436: int;
  var {:pointer} FwVersionBuffer: int;
  var {:scalar} Tmp_437: int;
  var {:scalar} foundIt: int;
  var {:pointer} Tmp_438: int;
  var {:scalar} Tmp_439: int;
  var {:scalar} Tmp_440: int;
  var {:pointer} pFullResourceDesc: int;
  var {:pointer} Tmp_441: int;
  var {:scalar} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:scalar} Tmp_444: int;
  var {:scalar} Tmp_445: int;
  var {:pointer} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} Tmp_448: int;
  var {:scalar} FwVersion: int;
  var {:pointer} Tmp_449: int;
  var {:pointer} Tmp_450: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_451: int;
  var {:pointer} Tmp_452: int;
  var {:pointer} pPartialTrResourceList: int;
  var {:scalar} Tmp_453: int;
  var {:scalar} Tmp_454: int;
  var {:scalar} Tmp_455: int;
  var {:pointer} pPartialResourceDesc: int;
  var {:pointer} Tmp_456: int;
  var {:pointer} PDevObj_10: int;
  var {:pointer} PResList: int;
  var {:pointer} PTrResList: int;
  var {:pointer} PConfig_1: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;

  anon0:
    call {:si_unique_call 1049} Tmp_422 := __HAVOC_malloc(20);
    call {:si_unique_call 1050} firmwareVersion := __HAVOC_malloc(4);
    call {:si_unique_call 1051} Tmp_437 := __HAVOC_malloc(20);
    call {:si_unique_call 1052} Tmp_439 := __HAVOC_malloc(20);
    call {:si_unique_call 1053} Tmp_442 := __HAVOC_malloc(20);
    call {:si_unique_call 1054} Tmp_444 := __HAVOC_malloc(20);
    call {:si_unique_call 1055} FwVersion := __HAVOC_malloc(12);
    call {:si_unique_call 1056} Tmp_453 := __HAVOC_malloc(20);
    PDevObj_10 := actual_PDevObj_10;
    PResList := actual_PResList;
    PTrResList := actual_PTrResList;
    PConfig_1 := actual_PConfig_1;
    call {:si_unique_call 1057} Tmp_417 := __HAVOC_malloc(92);
    call {:si_unique_call 1058} Tmp_418 := __HAVOC_malloc(64);
    call {:si_unique_call 1059} Tmp_419 := __HAVOC_malloc(104);
    call {:si_unique_call 1060} Tmp_421 := __HAVOC_malloc(264);
    call {:si_unique_call 1061} Tmp_424 := __HAVOC_malloc(104);
    call {:si_unique_call 1062} Tmp_426 := __HAVOC_malloc(96);
    call {:si_unique_call 1063} Tmp_428 := __HAVOC_malloc(208);
    call {:si_unique_call 1064} Tmp_431 := __HAVOC_malloc(232);
    call {:si_unique_call 1065} Tmp_432 := __HAVOC_malloc(108);
    call {:si_unique_call 1066} Tmp_433 := __HAVOC_malloc(56);
    call {:si_unique_call 1067} Tmp_435 := __HAVOC_malloc(92);
    call {:si_unique_call 1068} Tmp_436 := __HAVOC_malloc(112);
    call {:si_unique_call 1069} FwVersionBuffer := __HAVOC_malloc(40);
    call {:si_unique_call 1070} Tmp_438 := __HAVOC_malloc(112);
    call {:si_unique_call 1071} Tmp_441 := __HAVOC_malloc(264);
    call {:si_unique_call 1072} Tmp_443 := __HAVOC_malloc(96);
    call {:si_unique_call 1073} Tmp_446 := __HAVOC_malloc(84);
    call {:si_unique_call 1074} Tmp_447 := __HAVOC_malloc(100);
    call {:si_unique_call 1075} Tmp_448 := __HAVOC_malloc(40);
    call {:si_unique_call 1076} Tmp_449 := __HAVOC_malloc(80);
    call {:si_unique_call 1077} Tmp_450 := __HAVOC_malloc(120);
    call {:si_unique_call 1078} Tmp_451 := __HAVOC_malloc(96);
    call {:si_unique_call 1079} Tmp_452 := __HAVOC_malloc(152);
    call {:si_unique_call 1080} Tmp_456 := __HAVOC_malloc(100);
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    havoc pDevExt_10;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    status_12 := -1073741822;
    pFullResourceDesc := 0;
    pFullTrResourceDesc := 0;
    call {:si_unique_call 1081} sdv_do_paged_code_check();
    Tmp_456 := strConst__li2bpl81;
    call {:si_unique_call 1082} vslice_dummy_var_231 := CyzDbgPrintEx(11, Tmp_456);
    Tmp_451 := strConst__li2bpl82;
    call {:si_unique_call 1083} vslice_dummy_var_232 := CyzDbgPrintEx(12, Tmp_451);
    Tmp_432 := strConst__li2bpl83;
    call {:si_unique_call 1084} vslice_dummy_var_233 := CyzDbgPrintEx(12, Tmp_432);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} PResList != 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} PTrResList != 0;
    assume {:nonnull} PResList != 0;
    assume PResList > 0;
    havoc Tmp_421;
    pFullResourceDesc := Tmp_421;
    assume {:nonnull} PTrResList != 0;
    assume PTrResList > 0;
    havoc Tmp_441;
    pFullTrResourceDesc := Tmp_441;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} pFullResourceDesc != 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    pPartialResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullResourceDesc);
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc pPartialResourceDesc;
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    i_1 := 0;
    goto L53;

  L53:
    call {:si_unique_call 1085} i_1 := CyzGetPortInfo_loop_L53(i_1, count, pPartialResourceDesc, PConfig_1);
    goto L53_last;

  L53_last:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} count > i_1;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L62;

  L62:
    i_1 := i_1 + 1;
    goto L62_dummy;

  L62_dummy:
    assume false;
    return;

  anon47_Then:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L62;

  anon48_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L62;

  anon46_Then:
    assume {:partition} i_1 >= count;
    goto L46;

  L46:
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} pFullTrResourceDesc != 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    pPartialTrResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullTrResourceDesc);
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc pPartialTrResourceDesc;
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    i_1 := 0;
    goto L73;

  L73:
    call {:si_unique_call 1086} i_1 := CyzGetPortInfo_loop_L73(i_1, count, pPartialTrResourceDesc, PConfig_1);
    goto L73_last;

  L73_last:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} count > i_1;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L81;

  L81:
    i_1 := i_1 + 1;
    goto L81_dummy;

  L81_dummy:
    assume false;
    return;

  anon50_Then:
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L81;

  anon51_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L81;

  anon49_Then:
    assume {:partition} i_1 >= count;
    goto L66;

  L66:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} firmwareVersion != 0;
    assume firmwareVersion > 0;
    call {:si_unique_call 1087} status_12 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} status_12 >= 0;
    Tmp_448 := strConst__li2bpl85;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 1088} status_12 := CyzGetRegistryKeyValue(keyHandle, Tmp_448, 20, PortIndex__CONFIG_DATA(PConfig_1), 4);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} status_12 >= 0;
    goto L99;

  L99:
    Tmp_418 := strConst__li2bpl86;
    call {:si_unique_call 1089} status_12 := CyzGetRegistryKeyValue(keyHandle, Tmp_418, 32, firmwareVersion, 4);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} status_12 >= 0;
    goto L105;

  L105:
    Tmp_433 := strConst__li2bpl87;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 1090} status_12 := CyzGetRegistryKeyValue(keyHandle, Tmp_433, 28, WriteComplete__CONFIG_DATA(PConfig_1), 4);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} status_12 >= 0;
    goto L111;

  L111:
    call {:si_unique_call 1091} vslice_dummy_var_229 := ZwClose(0);
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} firmwareVersion != 0;
    assume firmwareVersion > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    call {:si_unique_call 1092} RtlInitUnicodeString(FwVersion, 0);
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    call {:si_unique_call 1093} vslice_dummy_var_234 := RtlIntegerToUnicodeString(803, 16, 0);
    Tmp_435 := strConst__li2bpl88;
    call {:si_unique_call 1094} vslice_dummy_var_235 := CyzDbgPrintEx(14, Tmp_435);
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    havoc Tmp_434;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} Tmp_439 != 0;
    assume Tmp_439 > 0;
    assume {:nonnull} FwVersion != 0;
    assume FwVersion > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_121;
    havoc vslice_dummy_var_122;
    havoc vslice_dummy_var_123;
    call {:si_unique_call 1095} CyzLogError(vslice_dummy_var_121, 0, vslice_dummy_var_122, Tmp_439, 0, 0, 0, 0, status_12, -1073475530, Tmp_434, vslice_dummy_var_123, 0, 0);
    status_12 := -1073741488;
    goto L140;

  L140:
    Tmp_416 := status_12;
    goto L1;

  L1:
    return;

  anon58_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_445;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} Tmp_442 != 0;
    assume Tmp_442 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_124;
    havoc vslice_dummy_var_125;
    havoc vslice_dummy_var_126;
    havoc vslice_dummy_var_127;
    call {:si_unique_call 1096} CyzLogError(vslice_dummy_var_124, 0, vslice_dummy_var_125, Tmp_442, 0, 0, 0, vslice_dummy_var_126, 0, -1073475563, Tmp_445, vslice_dummy_var_127, 0, 0);
    Tmp_447 := strConst__li2bpl89;
    call {:si_unique_call 1097} vslice_dummy_var_236 := CyzDbgPrintEx(14, Tmp_447);
    status_12 := -1073741670;
    goto L140;

  anon59_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_454;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc Tmp_420;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} Tmp_437 != 0;
    assume Tmp_437 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_128;
    havoc vslice_dummy_var_129;
    havoc vslice_dummy_var_130;
    call {:si_unique_call 1098} CyzLogError(vslice_dummy_var_128, 0, vslice_dummy_var_129, Tmp_437, 0, 0, 0, Tmp_420, 0, -1073475562, Tmp_454, vslice_dummy_var_130, 0, 0);
    Tmp_446 := strConst__li2bpl90;
    call {:si_unique_call 1099} vslice_dummy_var_237 := CyzDbgPrintEx(14, Tmp_446);
    status_12 := -1073741670;
    goto L140;

  anon61_Then:
    call {:si_unique_call 1100} vslice_dummy_var_230 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant232, 0);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} foundIt == 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_455;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc Tmp_429;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_131;
    havoc vslice_dummy_var_132;
    havoc vslice_dummy_var_133;
    call {:si_unique_call 1101} CyzLogError(vslice_dummy_var_131, 0, vslice_dummy_var_132, Tmp_444, 0, 0, 0, Tmp_429, 0, -1073475561, Tmp_455, vslice_dummy_var_133, 0, 0);
    Tmp_431 := strConst__li2bpl91;
    call {:si_unique_call 1102} vslice_dummy_var_245 := CyzDbgPrintEx(14, Tmp_431);
    status_12 := -1073741670;
    goto L140;

  anon62_Then:
    assume {:partition} foundIt != 0;
    goto L152;

  L152:
    status_12 := 0;
    Tmp_438 := strConst__li2bpl100;
    call {:si_unique_call 1103} vslice_dummy_var_238 := CyzDbgPrintEx(4, Tmp_438);
    Tmp_424 := strConst__li2bpl92;
    call {:si_unique_call 1104} vslice_dummy_var_239 := CyzDbgPrintEx(4, Tmp_424);
    Tmp_449 := strConst__li2bpl93;
    call {:si_unique_call 1105} vslice_dummy_var_240 := CyzDbgPrintEx(4, Tmp_449);
    Tmp_426 := strConst__li2bpl94;
    call {:si_unique_call 1106} vslice_dummy_var_241 := CyzDbgPrintEx(4, Tmp_426);
    Tmp_450 := strConst__li2bpl95;
    call {:si_unique_call 1107} vslice_dummy_var_242 := CyzDbgPrintEx(4, Tmp_450);
    Tmp_436 := strConst__li2bpl96;
    call {:si_unique_call 1108} vslice_dummy_var_243 := CyzDbgPrintEx(4, Tmp_436);
    Tmp_417 := strConst__li2bpl97;
    call {:si_unique_call 1109} vslice_dummy_var_244 := CyzDbgPrintEx(4, Tmp_417);
    goto L140;

  anon60_Then:
    goto L152;

  anon57_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_423;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc Tmp_440;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} Tmp_422 != 0;
    assume Tmp_422 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_134;
    havoc vslice_dummy_var_135;
    havoc vslice_dummy_var_136;
    call {:si_unique_call 1110} CyzLogError(vslice_dummy_var_134, 0, vslice_dummy_var_135, Tmp_422, 0, 0, 0, Tmp_440, 0, -1073475567, Tmp_423, vslice_dummy_var_136, 0, 0);
    Tmp_443 := strConst__li2bpl98;
    call {:si_unique_call 1111} vslice_dummy_var_246 := CyzDbgPrintEx(14, Tmp_443);
    status_12 := -1073741670;
    goto L140;

  anon56_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_425;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc Tmp_427;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    assume {:nonnull} Tmp_453 != 0;
    assume Tmp_453 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc vslice_dummy_var_137;
    havoc vslice_dummy_var_138;
    havoc vslice_dummy_var_139;
    call {:si_unique_call 1112} CyzLogError(vslice_dummy_var_137, 0, vslice_dummy_var_138, Tmp_453, 0, 0, 0, Tmp_427, 0, -1073475568, Tmp_425, vslice_dummy_var_139, 0, 0);
    Tmp_419 := strConst__li2bpl99;
    call {:si_unique_call 1113} vslice_dummy_var_247 := CyzDbgPrintEx(14, Tmp_419);
    status_12 := -1073741670;
    goto L140;

  anon55_Then:
    assume {:partition} 0 > status_12;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto L111;

  anon54_Then:
    assume {:partition} 0 > status_12;
    assume {:nonnull} firmwareVersion != 0;
    assume firmwareVersion > 0;
    Tmp_428 := strConst__li2bpl101;
    call {:si_unique_call 1114} vslice_dummy_var_248 := CyzDbgPrintEx(14, Tmp_428);
    goto L105;

  anon53_Then:
    assume {:partition} 0 > status_12;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto L99;

  anon52_Then:
    assume {:partition} 0 > status_12;
    Tmp_452 := strConst__li2bpl84;
    call {:si_unique_call 1115} vslice_dummy_var_249 := CyzDbgPrintEx(14, Tmp_452);
    goto L140;

  anon45_Then:
    assume {:partition} pFullTrResourceDesc == 0;
    goto L66;

  anon63_Then:
    assume {:partition} pFullResourceDesc == 0;
    goto L46;

  anon44_Then:
    assume {:partition} PTrResList == 0;
    goto L41;

  L41:
    Tmp_416 := -1073741670;
    goto L1;

  anon43_Then:
    assume {:partition} PResList == 0;
    goto L41;
}



procedure {:origName "CyzAddDevice"} CyzAddDevice(actual_DriverObject_2: int, actual_PPdo: int) returns (Tmp_457: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_457 == -1073741823 || Tmp_457 == -1073741584 || Tmp_457 == -1073741808 || Tmp_457 == 0 || Tmp_457 == -1073741789 || Tmp_457 == -1073741670 || Tmp_457 == -1073741824 || Tmp_457 == -1073741771 || Tmp_457 == 26;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzAddDevice"} CyzAddDevice(actual_DriverObject_2: int, actual_PPdo: int) returns (Tmp_457: int)
{
  var {:pointer} pDevExt_11: int;
  var {:pointer} Tmp_459: int;
  var {:scalar} Tmp_460: int;
  var {:scalar} Tmp_461: int;
  var {:pointer} Tmp_462: int;
  var {:pointer} pNewDevObj: int;
  var {:pointer} pLowerDevObj_2: int;
  var {:pointer} Tmp_463: int;
  var {:pointer} Tmp_464: int;
  var {:scalar} status_13: int;
  var {:pointer} DriverObject_2: int;
  var {:pointer} PPdo: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;

  anon0:
    call {:si_unique_call 1116} Tmp_460 := __HAVOC_malloc(20);
    call {:si_unique_call 1117} Tmp_461 := __HAVOC_malloc(20);
    call {:si_unique_call 1118} pNewDevObj := __HAVOC_malloc(4);
    DriverObject_2 := actual_DriverObject_2;
    PPdo := actual_PPdo;
    call {:si_unique_call 1119} Tmp_459 := __HAVOC_malloc(140);
    call {:si_unique_call 1120} Tmp_462 := __HAVOC_malloc(204);
    call {:si_unique_call 1121} Tmp_463 := __HAVOC_malloc(248);
    call {:si_unique_call 1122} Tmp_464 := __HAVOC_malloc(80);
    assume {:nonnull} pNewDevObj != 0;
    assume pNewDevObj > 0;
    pLowerDevObj_2 := 0;
    call {:si_unique_call 1123} sdv_do_paged_code_check();
    Tmp_459 := strConst__li2bpl102;
    call {:si_unique_call 1124} vslice_dummy_var_250 := CyzDbgPrintEx(11, Tmp_459);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} PPdo != 0;
    call {:si_unique_call 1125} status_13 := CyzCreateDevObj(DriverObject_2, PPdo, pNewDevObj);
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} status_13 >= 0;
    call {:si_unique_call 1126} pLowerDevObj_2 := IoAttachDeviceToDeviceStack(0, PPdo);
    assume {:nonnull} pNewDevObj != 0;
    assume pNewDevObj > 0;
    havoc pDevExt_11;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    assume {:nonnull} pNewDevObj != 0;
    assume pNewDevObj > 0;
    Tmp_464 := strConst__li2bpl105;
    call {:si_unique_call 1127} vslice_dummy_var_251 := CyzDbgPrintEx(11, Tmp_464);
    Tmp_457 := status_13;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} 0 > status_13;
    Tmp_462 := strConst__li2bpl103;
    call {:si_unique_call 1128} vslice_dummy_var_252 := CyzDbgPrintEx(14, Tmp_462);
    Tmp_457 := status_13;
    goto L1;

  anon5_Then:
    assume {:partition} PPdo == 0;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    assume {:nonnull} Tmp_461 != 0;
    assume Tmp_461 > 0;
    assume {:nonnull} Tmp_460 != 0;
    assume Tmp_460 > 0;
    assume {:nonnull} Tmp_460 != 0;
    assume Tmp_460 > 0;
    assume {:nonnull} Tmp_460 != 0;
    assume Tmp_460 > 0;
    assume {:nonnull} Tmp_460 != 0;
    assume Tmp_460 > 0;
    assume {:nonnull} Tmp_460 != 0;
    assume Tmp_460 > 0;
    call {:si_unique_call 1129} CyzLogError(DriverObject_2, 0, Tmp_460, Tmp_461, 0, 0, 0, 0, 0, -1073475532, 0, 0, 0, 0);
    Tmp_463 := strConst__li2bpl104;
    call {:si_unique_call 1130} vslice_dummy_var_253 := CyzDbgPrintEx(14, Tmp_463);
    Tmp_457 := 26;
    goto L1;
}



procedure {:origName "CyzCreateDevObj"} CyzCreateDevObj(actual_DriverObject_3: int, actual_PPdo_1: int, actual_NewDeviceObject: int) returns (Tmp_465: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_465 == -1073741823 || Tmp_465 == -1073741584 || Tmp_465 == -1073741808 || Tmp_465 == 0 || Tmp_465 == -1073741789 || Tmp_465 == -1073741670 || Tmp_465 == -1073741824 || Tmp_465 == -1073741771;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCreateDevObj"} CyzCreateDevObj(actual_DriverObject_3: int, actual_PPdo_1: int, actual_NewDeviceObject: int) returns (Tmp_465: int)
{
  var {:scalar} instanceStr: int;
  var {:pointer} Tmp_466: int;
  var {:scalar} Tmp_467: int;
  var {:scalar} Tmp_468: int;
  var {:pointer} Tmp_469: int;
  var {:pointer} Tmp_470: int;
  var {:pointer} deviceObject: int;
  var {:pointer} sdv_386: int;
  var {:pointer} Tmp_472: int;
  var {:pointer} Tmp_474: int;
  var {:pointer} hwID: int;
  var {:scalar} Tmp_475: int;
  var {:pointer} instanceNumberBuffer: int;
  var {:pointer} pDevExt_12: int;
  var {:scalar} Tmp_477: int;
  var {:pointer} Tmp_478: int;
  var {:scalar} deviceObjName: int;
  var {:scalar} Tmp_479: int;
  var {:pointer} Tmp_480: int;
  var {:scalar} Tmp_481: int;
  var {:pointer} sdv_391: int;
  var {:scalar} Tmp_482: int;
  var {:scalar} Tmp_483: int;
  var {:scalar} Tmp_484: int;
  var {:pointer} Tmp_485: int;
  var {:scalar} Tmp_486: int;
  var {:pointer} Tmp_487: int;
  var {:scalar} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} Tmp_490: int;
  var {:scalar} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:scalar} sdv_400: int;
  var {:pointer} Tmp_494: int;
  var {:scalar} numberToAppend: int;
  var {:scalar} Tmp_495: int;
  var {:pointer} sdv_403: int;
  var {:scalar} Tmp_496: int;
  var {:scalar} Tmp_497: int;
  var {:scalar} status_14: int;
  var {:pointer} Tmp_498: int;
  var {:scalar} resultLength: int;
  var {:scalar} Tmp_500: int;
  var {:scalar} busNumber: int;
  var {:scalar} Tmp_502: int;
  var {:scalar} Tmp_503: int;
  var {:pointer} DriverObject_3: int;
  var {:pointer} NewDeviceObject: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;

  anon0:
    call {:si_unique_call 1131} instanceStr := __HAVOC_malloc(12);
    call {:si_unique_call 1132} Tmp_467 := __HAVOC_malloc(20);
    call {:si_unique_call 1133} Tmp_468 := __HAVOC_malloc(20);
    call {:si_unique_call 1134} deviceObject := __HAVOC_malloc(4);
    call {:si_unique_call 1135} Tmp_475 := __HAVOC_malloc(20);
    call {:si_unique_call 1136} deviceObjName := __HAVOC_malloc(12);
    call {:si_unique_call 1137} Tmp_479 := __HAVOC_malloc(20);
    call {:si_unique_call 1138} Tmp_481 := __HAVOC_malloc(20);
    call {:si_unique_call 1139} Tmp_483 := __HAVOC_malloc(20);
    call {:si_unique_call 1140} Tmp_488 := __HAVOC_malloc(20);
    call {:si_unique_call 1141} Tmp_492 := __HAVOC_malloc(20);
    call {:si_unique_call 1142} Tmp_496 := __HAVOC_malloc(20);
    call {:si_unique_call 1143} Tmp_497 := __HAVOC_malloc(20);
    call {:si_unique_call 1144} Tmp_500 := __HAVOC_malloc(20);
    call {:si_unique_call 1145} Tmp_502 := __HAVOC_malloc(20);
    DriverObject_3 := actual_DriverObject_3;
    NewDeviceObject := actual_NewDeviceObject;
    call {:si_unique_call 1146} Tmp_466 := __HAVOC_malloc(64);
    call {:si_unique_call 1147} Tmp_469 := __HAVOC_malloc(168);
    call {:si_unique_call 1148} Tmp_470 := __HAVOC_malloc(92);
    call {:si_unique_call 1149} Tmp_472 := __HAVOC_malloc(92);
    call {:si_unique_call 1150} vslice_dummy_var_258 := __HAVOC_malloc(32);
    call {:si_unique_call 1151} Tmp_474 := __HAVOC_malloc(244);
    call {:si_unique_call 1152} hwID := __HAVOC_malloc(400);
    call {:si_unique_call 1153} instanceNumberBuffer := __HAVOC_malloc(80);
    call {:si_unique_call 1154} Tmp_478 := __HAVOC_malloc(164);
    call {:si_unique_call 1155} Tmp_480 := __HAVOC_malloc(168);
    call {:si_unique_call 1156} Tmp_485 := __HAVOC_malloc(92);
    call {:si_unique_call 1157} Tmp_487 := __HAVOC_malloc(240);
    call {:si_unique_call 1158} Tmp_489 := __HAVOC_malloc(152);
    call {:si_unique_call 1159} Tmp_490 := __HAVOC_malloc(196);
    call {:si_unique_call 1160} vslice_dummy_var_259 := __HAVOC_malloc(32);
    call {:si_unique_call 1161} Tmp_493 := __HAVOC_malloc(144);
    call {:si_unique_call 1162} Tmp_494 := __HAVOC_malloc(400);
    call {:si_unique_call 1163} vslice_dummy_var_260 := __HAVOC_malloc(16);
    call {:si_unique_call 1164} vslice_dummy_var_261 := __HAVOC_malloc(36);
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    status_14 := 0;
    busNumber := -1;
    call {:si_unique_call 1165} sdv_do_paged_code_check();
    Tmp_470 := strConst__li2bpl106;
    call {:si_unique_call 1166} vslice_dummy_var_262 := CyzDbgPrintEx(11, Tmp_470);
    call {:si_unique_call 1167} Tmp_498 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    call {:si_unique_call 1168} status_14 := IoGetDeviceProperty(0, 14, 4, 0, Tmp_498);
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    havoc resultLength;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_14 >= 0;
    call {:si_unique_call 1169} Tmp_498 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    call {:si_unique_call 1170} status_14 := IoGetDeviceProperty(0, 16385, 200, 0, Tmp_498);
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    havoc resultLength;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} status_14 >= 0;
    Tmp_466 := strConst__li2bpl107;
    call {:si_unique_call 1171} sdv_400 := CyzCompareString(hwID, Tmp_466, 15);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} sdv_400 != 0;
    assume {:nonnull} Tmp_502 != 0;
    assume Tmp_502 > 0;
    assume {:nonnull} Tmp_502 != 0;
    assume Tmp_502 > 0;
    assume {:nonnull} Tmp_502 != 0;
    assume Tmp_502 > 0;
    assume {:nonnull} Tmp_502 != 0;
    assume Tmp_502 > 0;
    assume {:nonnull} Tmp_502 != 0;
    assume Tmp_502 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    call {:si_unique_call 1172} CyzLogError(DriverObject_3, 0, Tmp_467, Tmp_502, 0, 0, 0, 0, status_14, -1073475523, 0, 0, 0, 0);
    Tmp_494 := hwID;
    Tmp_489 := strConst__li2bpl118;
    call {:si_unique_call 1173} vslice_dummy_var_263 := CyzDbgPrintEx(14, Tmp_489);
    Tmp_465 := -1073741823;
    goto L1;

  L1:
    return;

  anon29_Then:
    assume {:partition} sdv_400 == 0;
    goto L54;

  L54:
    call {:si_unique_call 1174} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_495;
    call {:si_unique_call 1175} sdv_391 := ExAllocatePoolWithTag(1, Tmp_495, -797279933);
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_486;
    call {:si_unique_call 1176} sdv_RtlZeroMemory(0, Tmp_486);
    call {:si_unique_call 1177} vslice_dummy_var_264 := corral_nondet();
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} busNumber == -1;
    havoc Tmp_503;
    numberToAppend := Tmp_503;
    goto L75;

  L75:
    call {:si_unique_call 1178} RtlInitUnicodeString(instanceStr, 0);
    assume {:nonnull} instanceStr != 0;
    assume instanceStr > 0;
    assume {:nonnull} instanceStr != 0;
    assume instanceStr > 0;
    call {:si_unique_call 1179} vslice_dummy_var_265 := RtlIntegerToUnicodeString(numberToAppend, 10, 0);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} busNumber == -1;
    call {:si_unique_call 1180} vslice_dummy_var_266 := corral_nondet();
    call {:si_unique_call 1181} vslice_dummy_var_254 := corral_nondet();
    goto L93;

  L93:
    call {:si_unique_call 1182} status_14 := IoCreateDevice(0, 1632, 0, 27, 256, 1, deviceObject);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    havoc pDevExt_12;
    call {:si_unique_call 1183} sdv_RtlZeroMemory(0, 1632);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_482;
    call {:si_unique_call 1184} sdv_386 := ExAllocatePoolWithTag(1, Tmp_482, -797279933);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    havoc Tmp_484;
    call {:si_unique_call 1185} sdv_RtlZeroMemory(0, Tmp_484);
    call {:si_unique_call 1186} vslice_dummy_var_255 := corral_nondet();
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    havoc Tmp_477;
    call {:si_unique_call 1187} sdv_403 := ExAllocatePoolWithTag(1, Tmp_477, -797279933);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1188} vslice_dummy_var_267 := corral_nondet();
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1189} InitializeListHead(AllDevObjs__CYZ_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1190} InitializeListHead(ReadQueue__CYZ_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1191} InitializeListHead(WriteQueue__CYZ_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1192} InitializeListHead(MaskQueue__CYZ_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1193} InitializeListHead(PurgeQueue__CYZ_DEVICE_EXTENSION(pDevExt_12));
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1194} InitializeListHead(StalledIrpQueue__CYZ_DEVICE_EXTENSION(pDevExt_12));
    call {:si_unique_call 1195} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 1196} sdv_ExInitializeFastMutex(0);
    call {:si_unique_call 1197} Tmp_498 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1198} sdv_KeInitializeSpinLock(Tmp_498);
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1199} Tmp_498 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1200} sdv_KeInitializeSpinLock(Tmp_498);
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1201} Tmp_498 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1202} sdv_KeInitializeSpinLock(Tmp_498);
    assume {:nonnull} Tmp_498 != 0;
    assume Tmp_498 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1203} KeInitializeEvent(PendingIRPEvent__CYZ_DEVICE_EXTENSION(pDevExt_12), 1, 0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1204} KeInitializeEvent(PendingDpcEvent__CYZ_DEVICE_EXTENSION(pDevExt_12), 1, 0);
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1205} KeInitializeEvent(PowerD0Event__CYZ_DEVICE_EXTENSION(pDevExt_12), 1, 0);
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    assume {:nonnull} NewDeviceObject != 0;
    assume NewDeviceObject > 0;
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    call {:si_unique_call 1206} sdv_ExFreePool(0);
    Tmp_485 := strConst__li2bpl111;
    call {:si_unique_call 1207} vslice_dummy_var_268 := CyzDbgPrintEx(11, Tmp_485);
    Tmp_465 := 0;
    goto L1;

  anon39_Then:
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} Tmp_492 != 0;
    assume Tmp_492 > 0;
    assume {:nonnull} Tmp_475 != 0;
    assume Tmp_475 > 0;
    assume {:nonnull} Tmp_475 != 0;
    assume Tmp_475 > 0;
    assume {:nonnull} Tmp_475 != 0;
    assume Tmp_475 > 0;
    assume {:nonnull} Tmp_475 != 0;
    assume Tmp_475 > 0;
    assume {:nonnull} Tmp_475 != 0;
    assume Tmp_475 > 0;
    call {:si_unique_call 1208} CyzLogError(DriverObject_3, 0, Tmp_475, Tmp_492, 0, 0, 0, 13, 0, -1073475576, 0, 0, 0, 0);
    Tmp_490 := strConst__li2bpl112;
    call {:si_unique_call 1209} vslice_dummy_var_269 := CyzDbgPrintEx(14, Tmp_490);
    status_14 := -1073741670;
    goto L197;

  L197:
    Tmp_493 := strConst__li2bpl113;
    call {:si_unique_call 1210} vslice_dummy_var_270 := CyzDbgPrintEx(14, Tmp_493);
    assume {:nonnull} deviceObjName != 0;
    assume deviceObjName > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 1211} sdv_ExFreePool(0);
    goto L201;

  L201:
    assume {:nonnull} deviceObject != 0;
    assume deviceObject > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1212} sdv_ExFreePool(0);
    goto L207;

  L207:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} pDevExt_12 != 0;
    assume pDevExt_12 > 0;
    call {:si_unique_call 1213} sdv_ExFreePool(0);
    goto L211;

  L211:
    call {:si_unique_call 1214} IoDeleteDevice(0);
    goto L205;

  L205:
    assume {:nonnull} NewDeviceObject != 0;
    assume NewDeviceObject > 0;
    Tmp_472 := strConst__li2bpl111;
    call {:si_unique_call 1215} vslice_dummy_var_271 := CyzDbgPrintEx(11, Tmp_472);
    Tmp_465 := status_14;
    goto L1;

  anon36_Then:
    goto L211;

  anon35_Then:
    goto L207;

  anon34_Then:
    goto L205;

  anon33_Then:
    goto L201;

  anon38_Then:
    assume {:nonnull} Tmp_488 != 0;
    assume Tmp_488 > 0;
    assume {:nonnull} Tmp_488 != 0;
    assume Tmp_488 > 0;
    assume {:nonnull} Tmp_488 != 0;
    assume Tmp_488 > 0;
    assume {:nonnull} Tmp_488 != 0;
    assume Tmp_488 > 0;
    assume {:nonnull} Tmp_488 != 0;
    assume Tmp_488 > 0;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    assume {:nonnull} Tmp_500 != 0;
    assume Tmp_500 > 0;
    call {:si_unique_call 1216} CyzLogError(DriverObject_3, 0, Tmp_500, Tmp_488, 0, 0, 0, 12, 0, -1073475576, 0, 0, 0, 0);
    Tmp_478 := strConst__li2bpl114;
    call {:si_unique_call 1217} vslice_dummy_var_272 := CyzDbgPrintEx(14, Tmp_478);
    status_14 := -1073741670;
    goto L197;

  anon32_Then:
    assume {:partition} 0 > status_14;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_481 != 0;
    assume Tmp_481 > 0;
    assume {:nonnull} Tmp_468 != 0;
    assume Tmp_468 > 0;
    assume {:nonnull} Tmp_468 != 0;
    assume Tmp_468 > 0;
    assume {:nonnull} Tmp_468 != 0;
    assume Tmp_468 > 0;
    assume {:nonnull} Tmp_468 != 0;
    assume Tmp_468 > 0;
    assume {:nonnull} Tmp_468 != 0;
    assume Tmp_468 > 0;
    call {:si_unique_call 1218} CyzLogError(DriverObject_3, 0, Tmp_468, Tmp_481, 0, 0, 0, 0, 0, -1073475533, 0, 0, 0, 0);
    Tmp_469 := strConst__li2bpl115;
    call {:si_unique_call 1219} vslice_dummy_var_273 := CyzDbgPrintEx(14, Tmp_469);
    goto L197;

  anon31_Then:
    assume {:partition} busNumber != -1;
    call {:si_unique_call 1220} vslice_dummy_var_274 := corral_nondet();
    call {:si_unique_call 1221} vslice_dummy_var_256 := corral_nondet();
    call {:si_unique_call 1222} vslice_dummy_var_275 := corral_nondet();
    call {:si_unique_call 1223} vslice_dummy_var_257 := corral_nondet();
    goto L93;

  anon30_Then:
    assume {:partition} busNumber != -1;
    numberToAppend := busNumber;
    goto L75;

  anon37_Then:
    assume {:nonnull} Tmp_479 != 0;
    assume Tmp_479 > 0;
    assume {:nonnull} Tmp_479 != 0;
    assume Tmp_479 > 0;
    assume {:nonnull} Tmp_479 != 0;
    assume Tmp_479 > 0;
    assume {:nonnull} Tmp_479 != 0;
    assume Tmp_479 > 0;
    assume {:nonnull} Tmp_479 != 0;
    assume Tmp_479 > 0;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    assume {:nonnull} Tmp_483 != 0;
    assume Tmp_483 > 0;
    call {:si_unique_call 1224} CyzLogError(DriverObject_3, 0, Tmp_483, Tmp_479, 0, 0, 0, 11, 0, -1073475576, 0, 0, 0, 0);
    Tmp_480 := strConst__li2bpl116;
    call {:si_unique_call 1225} vslice_dummy_var_276 := CyzDbgPrintEx(14, Tmp_480);
    Tmp_465 := -1073741670;
    goto L1;

  anon28_Then:
    assume {:partition} 0 > status_14;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_496 != 0;
    assume Tmp_496 > 0;
    assume {:nonnull} Tmp_497 != 0;
    assume Tmp_497 > 0;
    assume {:nonnull} Tmp_497 != 0;
    assume Tmp_497 > 0;
    assume {:nonnull} Tmp_497 != 0;
    assume Tmp_497 > 0;
    assume {:nonnull} Tmp_497 != 0;
    assume Tmp_497 > 0;
    assume {:nonnull} Tmp_497 != 0;
    assume Tmp_497 > 0;
    call {:si_unique_call 1226} CyzLogError(DriverObject_3, 0, Tmp_497, Tmp_496, 0, 0, 0, 0, status_14, -1073475581, 0, 0, 0, 0);
    Tmp_474 := strConst__li2bpl117;
    call {:si_unique_call 1227} vslice_dummy_var_277 := CyzDbgPrintEx(14, Tmp_474);
    Tmp_465 := status_14;
    goto L1;

  anon27_Then:
    assume {:partition} 0 > status_14;
    busNumber := -1;
    Tmp_487 := strConst__li2bpl119;
    call {:si_unique_call 1228} vslice_dummy_var_278 := CyzDbgPrintEx(14, Tmp_487);
    goto L54;
}



procedure {:origName "CyzFinishStartDevice"} CyzFinishStartDevice(actual_PDevObj_11: int, actual_PResList_1: int, actual_PTrResList_1: int) returns (Tmp_504: int);
  modifies alloc, locked, queuedWithoutMarking, stack_location, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_504 == -1073741488 || Tmp_504 == -1073741670 || Tmp_504 == 0 || Tmp_504 == -1073741811 || Tmp_504 == -1073741808 || Tmp_504 == -1073741823 || Tmp_504 == -1073741584 || Tmp_504 == 259 || Tmp_504 == -1073741810 || Tmp_504 == -1073741709 || Tmp_504 == 5 || Tmp_504 == -1073741789 || Tmp_504 == -1073741772 || Tmp_504 == -1073741824;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzFinishStartDevice"} CyzFinishStartDevice(actual_PDevObj_11: int, actual_PResList_1: int, actual_PTrResList_1: int) returns (Tmp_504: int)
{
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:dopa} {:scalar} powerPolicy: int;
  var {:pointer} pDevExt_13: int;
  var {:pointer} pnpKey: int;
  var {:pointer} pConfig: int;
  var {:pointer} sdv_417: int;
  var {:pointer} sdv_419: int;
  var {:pointer} Tmp_508: int;
  var {:pointer} Tmp_509: int;
  var {:pointer} Tmp_510: int;
  var {:pointer} Tmp_511: int;
  var {:scalar} Tmp_512: int;
  var {:scalar} Tmp_513: int;
  var {:scalar} status_15: int;
  var {:scalar} Tmp_514: int;
  var {:pointer} Tmp_515: int;
  var {:pointer} countSoFar: int;
  var {:scalar} pollIrql_7: int;
  var {:scalar} Tmp_516: int;
  var {:pointer} PDevObj_11: int;
  var {:pointer} PResList_1: int;
  var {:pointer} PTrResList_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;

  anon0:
    call {:si_unique_call 1229} powerPolicy := __HAVOC_malloc(4);
    call {:si_unique_call 1230} Tmp_512 := __HAVOC_malloc(20);
    call {:si_unique_call 1231} Tmp_514 := __HAVOC_malloc(20);
    PDevObj_11 := actual_PDevObj_11;
    PResList_1 := actual_PResList_1;
    PTrResList_1 := actual_PTrResList_1;
    call {:si_unique_call 1232} Tmp_505 := __HAVOC_malloc(168);
    call {:si_unique_call 1233} Tmp_506 := __HAVOC_malloc(272);
    call {:si_unique_call 1234} Tmp_507 := __HAVOC_malloc(120);
    call {:si_unique_call 1235} Tmp_508 := __HAVOC_malloc(144);
    call {:si_unique_call 1236} Tmp_509 := __HAVOC_malloc(100);
    call {:si_unique_call 1237} Tmp_515 := __HAVOC_malloc(104);
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    havoc pDevExt_13;
    call {:si_unique_call 1238} sdv_do_paged_code_check();
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1239} CyzSetDeviceFlags(pDevExt_13, Flags__CYZ_DEVICE_EXTENSION(pDevExt_13), 2, 0);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L28;

  L28:
    call {:si_unique_call 1240} sdv_419 := ExAllocatePoolWithTag(1, 80, -797279933);
    pConfig := sdv_419;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 1241} sdv_RtlZeroMemory(0, 80);
    call {:si_unique_call 1242} status_15 := CyzGetPortInfo(PDevObj_11, PResList_1, PTrResList_1, pConfig);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_15 < 0;
    goto L53;

  L53:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} status_15 >= 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L59;

  L59:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    Tmp_513 := 1;
    goto L70;

  L70:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L79;

  L79:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L85;

  L85:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc vslice_dummy_var_140;
    call {:si_unique_call 1243} boogieTmp := CyzReportMaxBaudRate(vslice_dummy_var_140);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1244} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    call {:si_unique_call 1245} sdv_417 := IoGetConfigurationInformation();
    assume {:nonnull} sdv_417 != 0;
    assume sdv_417 > 0;
    countSoFar := SerialCount__CONFIGURATION_INFORMATION(sdv_417);
    assume {:nonnull} countSoFar != 0;
    assume countSoFar > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1246} vslice_dummy_var_285 := IoWMIRegistrationControl(0, 1);
    goto L113;

  L113:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 1247} CyzUnstallIrps(pDevExt_13);
    goto L114;

  L114:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1248} CyzSetDeviceFlags(pDevExt_13, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_13), -1, 0);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1249} CyzSetDeviceFlags(pDevExt_13, Flags__CYZ_DEVICE_EXTENSION(pDevExt_13), 1, 1);
    goto L124;

  L124:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 1250} sdv_ExFreePool(0);
    goto L125;

  L125:
    Tmp_507 := strConst__li2bpl121;
    call {:si_unique_call 1251} vslice_dummy_var_284 := CyzDbgPrintEx(11, Tmp_507);
    Tmp_504 := status_15;
    return;

  anon69_Then:
    assume {:partition} pConfig == 0;
    goto L125;

  anon68_Then:
    goto L114;

  anon67_Then:
    goto L113;

  anon83_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L85;

  anon84_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L85;

  anon66_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L85;

  anon79_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L79;

  anon80_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L79;

  anon81_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L79;

  anon82_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L79;

  anon87_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L79;

  anon65_Then:
    Tmp_513 := 0;
    goto L70;

  anon76_Then:
    goto L59;

  anon77_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L59;

  anon78_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L59;

  anon86_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto L59;

  anon64_Then:
    assume {:partition} 0 > status_15;
    Tmp_515 := strConst__li2bpl120;
    call {:si_unique_call 1252} vslice_dummy_var_286 := CyzDbgPrintEx(4, Tmp_515);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    call {:si_unique_call 1253} CyzKillPendingIrps(PDevObj_11);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1254} CyzSetDeviceFlags(pDevExt_13, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_13), 1, 1);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1255} CyzSetDeviceFlags(pDevExt_13, Flags__CYZ_DEVICE_EXTENSION(pDevExt_13), 1, 0);
    goto L124;

  anon70_Then:
    goto L124;

  anon61_Then:
    assume {:partition} 0 <= status_15;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc vslice_dummy_var_141;
    call {:si_unique_call 1256} status_15 := CyzGotoPowerState(vslice_dummy_var_141, pDevExt_13, 1);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_15 < 0;
    goto L53;

  anon63_Then:
    assume {:partition} 0 <= status_15;
    goto L44;

  L44:
    call {:si_unique_call 1257} status_15 := CyzFindInitController(PDevObj_11, pConfig);
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} status_15 >= 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1258} CyzAddToAllDevs(AllDevObjs__CYZ_DEVICE_EXTENSION(pDevExt_13));
    call {:si_unique_call 1259} Tmp_511 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_511 != 0;
    assume Tmp_511 > 0;
    call {:si_unique_call 1260} sdv_KeAcquireSpinLock(0, Tmp_511);
    assume {:nonnull} Tmp_511 != 0;
    assume Tmp_511 > 0;
    havoc pollIrql_7;
    call {:si_unique_call 1261} vslice_dummy_var_279 := CyzReset(pDevExt_13);
    call {:si_unique_call 1262} vslice_dummy_var_280 := CyzMarkClose(pDevExt_13);
    call {:si_unique_call 1263} vslice_dummy_var_281 := CyzClrRTS(pDevExt_13);
    call {:si_unique_call 1264} vslice_dummy_var_282 := CyzClrDTR(pDevExt_13);
    call {:si_unique_call 1265} sdv_KeReleaseSpinLock(0, pollIrql_7);
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    Tmp_505 := strConst__li2bpl122;
    call {:si_unique_call 1266} vslice_dummy_var_283 := CyzDbgPrintEx(12, Tmp_505);
    goto L53;

  anon72_Then:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc Tmp_510;
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    havoc vslice_dummy_var_142;
    call {:si_unique_call 1267} status_15 := CyzDoExternalNaming(pDevExt_13, vslice_dummy_var_142);
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} status_15 < 0;
    Tmp_508 := strConst__li2bpl123;
    call {:si_unique_call 1268} vslice_dummy_var_287 := CyzDbgPrintEx(14, Tmp_508);
    status_15 := 0;
    goto L53;

  anon73_Then:
    assume {:partition} 0 <= status_15;
    goto L53;

  anon71_Then:
    assume {:partition} 0 > status_15;
    goto L53;

  anon62_Then:
    goto L44;

  anon85_Then:
    assume {:partition} pConfig == 0;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} Tmp_514 != 0;
    assume Tmp_514 > 0;
    assume {:nonnull} Tmp_512 != 0;
    assume Tmp_512 > 0;
    assume {:nonnull} Tmp_512 != 0;
    assume Tmp_512 > 0;
    assume {:nonnull} Tmp_512 != 0;
    assume Tmp_512 > 0;
    assume {:nonnull} Tmp_512 != 0;
    assume Tmp_512 > 0;
    assume {:nonnull} Tmp_512 != 0;
    assume Tmp_512 > 0;
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    havoc vslice_dummy_var_143;
    call {:si_unique_call 1269} CyzLogError(vslice_dummy_var_143, 0, Tmp_512, Tmp_514, 0, 0, 0, 31, 0, -1073475576, 0, 0, 0, 0);
    Tmp_506 := strConst__li2bpl124;
    call {:si_unique_call 1270} vslice_dummy_var_288 := CyzDbgPrintEx(14, Tmp_506);
    status_15 := -1073741670;
    goto L53;

  anon60_Then:
    goto L18;

  L18:
    call {:si_unique_call 1271} status_15 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} status_15 >= 0;
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    Tmp_509 := strConst__li2bpl125;
    call {:si_unique_call 1272} vslice_dummy_var_289 := CyzGetRegistryKeyValue(pnpKey, Tmp_509, 50, powerPolicy, 4);
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    Tmp_516 := 0;
    goto L222;

  L222:
    assume {:nonnull} pDevExt_13 != 0;
    assume pDevExt_13 > 0;
    call {:si_unique_call 1273} vslice_dummy_var_290 := ZwClose(0);
    goto L28;

  anon75_Then:
    Tmp_516 := 1;
    goto L222;

  anon74_Then:
    assume {:partition} 0 > status_15;
    goto L28;

  anon59_Then:
    goto L18;
}



procedure {:origName "CyzUndoExternalNaming"} CyzUndoExternalNaming(actual_Extension_21: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzUndoExternalNaming"} CyzUndoExternalNaming(actual_Extension_21: int)
{
  var {:pointer} Tmp_517: int;
  var {:pointer} keyHandle_1: int;
  var {:pointer} pRegName: int;
  var {:scalar} Tmp_519: int;
  var {:scalar} symLinkName: int;
  var {:pointer} Tmp_523: int;
  var {:pointer} Tmp_524: int;
  var {:scalar} status_16: int;
  var {:scalar} Tmp_526: int;
  var {:scalar} Tmp_527: int;
  var {:pointer} Tmp_528: int;
  var {:pointer} Extension_21: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_144: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;

  anon0:
    call {:si_unique_call 1274} vslice_dummy_var_291 := __HAVOC_malloc(4);
    call {:si_unique_call 1275} pRegName := __HAVOC_malloc(4);
    call {:si_unique_call 1276} symLinkName := __HAVOC_malloc(12);
    call {:si_unique_call 1277} Tmp_526 := __HAVOC_malloc(20);
    Extension_21 := actual_Extension_21;
    call {:si_unique_call 1278} Tmp_517 := __HAVOC_malloc(76);
    call {:si_unique_call 1279} Tmp_523 := __HAVOC_malloc(132);
    call {:si_unique_call 1280} vslice_dummy_var_294 := __HAVOC_malloc(44);
    call {:si_unique_call 1281} Tmp_528 := __HAVOC_malloc(224);
    call {:si_unique_call 1282} sdv_do_paged_code_check();
    Tmp_528 := strConst__li2bpl126;
    call {:si_unique_call 1283} vslice_dummy_var_295 := CyzDbgPrintEx(6, Tmp_528);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 1284} status_16 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1285} sdv_ExFreePool(0);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto L17;

  L17:
    call {:si_unique_call 1286} status_16 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_16 == 0;
    call {:si_unique_call 1287} RtlInitUnicodeString(symLinkName, 0);
    call {:si_unique_call 1288} status_16 := CyzReadSymName(Extension_21, keyHandle_1, symLinkName, pRegName);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_16 != 0;
    goto L43;

  L43:
    call {:si_unique_call 1289} vslice_dummy_var_292 := ZwClose(0);
    goto L14;

  L14:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1290} sdv_ExFreePool(0);
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1291} status_16 := RtlDeleteRegistryValue(4, 0, 0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_16 < 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    havoc Tmp_519;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    havoc Tmp_527;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Tmp_526 != 0;
    assume Tmp_526 > 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    havoc Tmp_524;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    assume {:nonnull} Tmp_524 != 0;
    assume Tmp_524 > 0;
    havoc vslice_dummy_var_144;
    havoc vslice_dummy_var_145;
    havoc vslice_dummy_var_146;
    havoc vslice_dummy_var_147;
    call {:si_unique_call 1292} CyzLogError(vslice_dummy_var_144, vslice_dummy_var_145, vslice_dummy_var_146, Tmp_526, 0, 0, 0, Tmp_527, status_16, 266246, Tmp_519, vslice_dummy_var_147, 0, 0);
    Tmp_523 := strConst__li2bpl129;
    call {:si_unique_call 1293} vslice_dummy_var_296 := CyzDbgPrintEx(14, Tmp_523);
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:partition} 0 <= status_16;
    goto L1;

  anon29_Then:
    goto L1;

  anon28_Then:
    goto L1;

  anon23_Then:
    goto L55;

  anon27_Then:
    assume {:partition} status_16 == 0;
    Tmp_517 := strConst__li2bpl127;
    call {:si_unique_call 1294} vslice_dummy_var_297 := CyzDbgPrintEx(4, Tmp_517);
    call {:si_unique_call 1295} vslice_dummy_var_293 := IoDeleteSymbolicLink(0);
    call {:si_unique_call 1296} sdv_ExFreePool(0);
    call {:si_unique_call 1297} sdv_ExFreePool(0);
    goto L43;

  anon26_Then:
    assume {:partition} status_16 != 0;
    goto L14;

  anon25_Then:
    goto L17;

  anon24_Then:
    goto L14;

  anon22_Then:
    goto L14;

  anon21_Then:
    goto L1;
}



procedure {:origName "CyzReportMaxBaudRate"} CyzReportMaxBaudRate(actual_Bauds: int) returns (Tmp_530: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_530 == 131072 || Tmp_530 == 115200 || Tmp_530 == 57344 || Tmp_530 == 57600 || Tmp_530 == 38400 || Tmp_530 == 19200 || Tmp_530 == 14400 || Tmp_530 == 9600 || Tmp_530 == 7200 || Tmp_530 == 4800 || Tmp_530 == 2400 || Tmp_530 == 1800 || Tmp_530 == 1200 || Tmp_530 == 600 || Tmp_530 == 300 || Tmp_530 == 150 || Tmp_530 == 135 || Tmp_530 == 110 || Tmp_530 == 75 || Tmp_530 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzReportMaxBaudRate"} CyzReportMaxBaudRate(actual_Bauds: int) returns (Tmp_530: int)
{
  var {:scalar} Bauds: int;

  anon0:
    Bauds := actual_Bauds;
    call {:si_unique_call 1298} sdv_do_paged_code_check();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Bauds, 65536) != 0;
    Tmp_530 := 131072;
    goto L1;

  L1:
    return;

  anon39_Then:
    assume {:partition} BAND(Bauds, 65536) == 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} BAND(Bauds, 131072) != 0;
    Tmp_530 := 115200;
    goto L1;

  anon40_Then:
    assume {:partition} BAND(Bauds, 131072) == 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} BAND(Bauds, 32768) != 0;
    Tmp_530 := 57344;
    goto L1;

  anon41_Then:
    assume {:partition} BAND(Bauds, 32768) == 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(Bauds, 262144) != 0;
    Tmp_530 := 57600;
    goto L1;

  anon42_Then:
    assume {:partition} BAND(Bauds, 262144) == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(Bauds, 16384) != 0;
    Tmp_530 := 38400;
    goto L1;

  anon43_Then:
    assume {:partition} BAND(Bauds, 16384) == 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(Bauds, 8192) != 0;
    Tmp_530 := 19200;
    goto L1;

  anon44_Then:
    assume {:partition} BAND(Bauds, 8192) == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} BAND(Bauds, 4096) != 0;
    Tmp_530 := 14400;
    goto L1;

  anon45_Then:
    assume {:partition} BAND(Bauds, 4096) == 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(Bauds, 2048) != 0;
    Tmp_530 := 9600;
    goto L1;

  anon46_Then:
    assume {:partition} BAND(Bauds, 2048) == 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Bauds, 1024) != 0;
    Tmp_530 := 7200;
    goto L1;

  anon47_Then:
    assume {:partition} BAND(Bauds, 1024) == 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Bauds, 512) != 0;
    Tmp_530 := 4800;
    goto L1;

  anon48_Then:
    assume {:partition} BAND(Bauds, 512) == 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BAND(Bauds, 256) != 0;
    Tmp_530 := 2400;
    goto L1;

  anon49_Then:
    assume {:partition} BAND(Bauds, 256) == 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(Bauds, 128) != 0;
    Tmp_530 := 1800;
    goto L1;

  anon50_Then:
    assume {:partition} BAND(Bauds, 128) == 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(Bauds, 64) != 0;
    Tmp_530 := 1200;
    goto L1;

  anon51_Then:
    assume {:partition} BAND(Bauds, 64) == 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} BAND(Bauds, 32) != 0;
    Tmp_530 := 600;
    goto L1;

  anon52_Then:
    assume {:partition} BAND(Bauds, 32) == 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(Bauds, 16) != 0;
    Tmp_530 := 300;
    goto L1;

  anon53_Then:
    assume {:partition} BAND(Bauds, 16) == 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} BAND(Bauds, 8) != 0;
    Tmp_530 := 150;
    goto L1;

  anon54_Then:
    assume {:partition} BAND(Bauds, 8) == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(Bauds, 4) != 0;
    Tmp_530 := 135;
    goto L1;

  anon55_Then:
    assume {:partition} BAND(Bauds, 4) == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} BAND(Bauds, 2) != 0;
    Tmp_530 := 110;
    goto L1;

  anon56_Then:
    assume {:partition} BAND(Bauds, 2) == 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(Bauds, 1) != 0;
    Tmp_530 := 75;
    goto L1;

  anon57_Then:
    assume {:partition} BAND(Bauds, 1) == 0;
    Tmp_530 := 0;
    goto L1;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_298: int;

  anon0:
    call {:si_unique_call 1299} vslice_dummy_var_298 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzPnpDispatch"} CyzPnpDispatch(actual_PDevObj_12: int, actual_PIrp_3: int) returns (Tmp_534: int);
  modifies alloc, stack_location, locked, queuedWithoutMarking, markedPending, queued, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzPnpDispatch"} CyzPnpDispatch(actual_PDevObj_12: int, actual_PIrp_3: int) returns (Tmp_534: int)
{
  var {:pointer} sdv_439: int;
  var {:scalar} pIdBuf: int;
  var {:pointer} Tmp_535: int;
  var {:scalar} Tmp_536: int;
  var {:scalar} sdv_444: int;
  var {:scalar} gotMemory: int;
  var {:pointer} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Tmp_539: int;
  var {:pointer} pResList: int;
  var {:dopa} {:scalar} portIndex: int;
  var {:pointer} Tmp_540: int;
  var {:pointer} Tmp_541: int;
  var {:pointer} Tmp_542: int;
  var {:pointer} Tmp_543: int;
  var {:pointer} Tmp_544: int;
  var {:pointer} Tmp_545: int;
  var {:pointer} pDevExt_14: int;
  var {:scalar} Tmp_546: int;
  var {:pointer} Tmp_547: int;
  var {:scalar} Tmp_548: int;
  var {:pointer} WideString: int;
  var {:pointer} Tmp_549: int;
  var {:pointer} Tmp_550: int;
  var {:pointer} Tmp_551: int;
  var {:pointer} Tmp_552: int;
  var {:scalar} cap_1: int;
  var {:pointer} Tmp_553: int;
  var {:scalar} Tmp_554: int;
  var {:scalar} pnpIdStrLen: int;
  var {:pointer} Tmp_555: int;
  var {:scalar} pendingIRPs: int;
  var {:pointer} pQueryCapsEvent: int;
  var {:pointer} Tmp_556: int;
  var {:pointer} Tmp_557: int;
  var {:pointer} pIrpStack_3: int;
  var {:pointer} Tmp_559: int;
  var {:pointer} Tmp_560: int;
  var {:pointer} Tmp_561: int;
  var {:pointer} pLowerDevObj_3: int;
  var {:pointer} Tmp_562: int;
  var {:pointer} sdv_477: int;
  var {:pointer} sdv_480: int;
  var {:pointer} pResDesc: int;
  var {:scalar} allocLen: int;
  var {:pointer} Tmp_563: int;
  var {:pointer} sdv_484: int;
  var {:pointer} Tmp_565: int;
  var {:scalar} listNum: int;
  var {:pointer} Tmp_567: int;
  var {:scalar} Tmp_568: int;
  var {:pointer} Tmp_569: int;
  var {:scalar} pendingIRPs_1: int;
  var {:pointer} Tmp_571: int;
  var {:pointer} Tmp_572: int;
  var {:pointer} Tmp_573: int;
  var {:pointer} pReqList: int;
  var {:pointer} Tmp_574: int;
  var {:pointer} Tmp_575: int;
  var {:pointer} Tmp_576: int;
  var {:pointer} Tmp_578: int;
  var {:pointer} Tmp_579: int;
  var {:scalar} pendingIRPs_2: int;
  var {:pointer} Tmp_580: int;
  var {:pointer} Tmp_581: int;
  var {:pointer} Tmp_582: int;
  var {:pointer} Tmp_583: int;
  var {:pointer} Tmp_584: int;
  var {:pointer} Tmp_585: int;
  var {:pointer} Tmp_586: int;
  var {:scalar} j: int;
  var {:pointer} Tmp_587: int;
  var {:pointer} Tmp_588: int;
  var {:pointer} Tmp_589: int;
  var {:pointer} Tmp_590: int;
  var {:scalar} Tmp_591: int;
  var {:pointer} Tmp_593: int;
  var {:scalar} sdv_505: int;
  var {:pointer} pnpKey_1: int;
  var {:pointer} Tmp_594: int;
  var {:pointer} Tmp_595: int;
  var {:pointer} Tmp_596: int;
  var {:pointer} pResFiltEvent: int;
  var {:pointer} Tmp_597: int;
  var {:pointer} Tmp_598: int;
  var {:pointer} Tmp_599: int;
  var {:pointer} Tmp_600: int;
  var {:pointer} Tmp_601: int;
  var {:pointer} Tmp_602: int;
  var {:pointer} Tmp_603: int;
  var {:scalar} curStrLen: int;
  var {:pointer} curStr: int;
  var {:scalar} gotRuntime: int;
  var {:scalar} sdv_524: int;
  var {:pointer} Tmp_604: int;
  var {:pointer} pDevCaps: int;
  var {:pointer} Tmp_605: int;
  var {:pointer} Tmp_606: int;
  var {:pointer} Tmp_607: int;
  var {:pointer} Tmp_608: int;
  var {:scalar} status_17: int;
  var {:scalar} sdv_530: int;
  var {:scalar} sdv_531: int;
  var {:pointer} Tmp_609: int;
  var {:pointer} Tmp_610: int;
  var {:scalar} Tmp_611: int;
  var {:pointer} PDevObj_12: int;
  var {:pointer} PIrp_3: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;
  var vslice_dummy_var_344: int;
  var vslice_dummy_var_345: int;
  var vslice_dummy_var_346: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_348: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;

  anon0:
    call {:si_unique_call 1300} pIdBuf := __HAVOC_malloc(12);
    call {:si_unique_call 1301} portIndex := __HAVOC_malloc(4);
    PDevObj_12 := actual_PDevObj_12;
    PIrp_3 := actual_PIrp_3;
    call {:si_unique_call 1302} Tmp_535 := __HAVOC_malloc(60);
    call {:si_unique_call 1303} Tmp_537 := __HAVOC_malloc(176);
    call {:si_unique_call 1304} Tmp_538 := __HAVOC_malloc(72);
    call {:si_unique_call 1305} Tmp_539 := __HAVOC_malloc(28);
    call {:si_unique_call 1306} Tmp_540 := __HAVOC_malloc(72);
    call {:si_unique_call 1307} Tmp_541 := __HAVOC_malloc(60);
    call {:si_unique_call 1308} Tmp_542 := __HAVOC_malloc(72);
    call {:si_unique_call 1309} Tmp_543 := __HAVOC_malloc(72);
    call {:si_unique_call 1310} Tmp_544 := __HAVOC_malloc(144);
    call {:si_unique_call 1311} Tmp_545 := __HAVOC_malloc(72);
    call {:si_unique_call 1312} Tmp_547 := __HAVOC_malloc(116);
    call {:si_unique_call 1313} WideString := __HAVOC_malloc(800);
    call {:si_unique_call 1314} Tmp_549 := __HAVOC_malloc(132);
    call {:si_unique_call 1315} Tmp_550 := __HAVOC_malloc(100);
    call {:si_unique_call 1316} Tmp_551 := __HAVOC_malloc(112);
    call {:si_unique_call 1317} Tmp_552 := __HAVOC_malloc(40);
    call {:si_unique_call 1318} Tmp_553 := __HAVOC_malloc(92);
    call {:si_unique_call 1319} Tmp_555 := __HAVOC_malloc(116);
    call {:si_unique_call 1320} Tmp_556 := __HAVOC_malloc(136);
    call {:si_unique_call 1321} Tmp_557 := __HAVOC_malloc(120);
    call {:si_unique_call 1322} Tmp_559 := __HAVOC_malloc(128);
    call {:si_unique_call 1323} Tmp_560 := __HAVOC_malloc(72);
    call {:si_unique_call 1324} Tmp_561 := __HAVOC_malloc(176);
    call {:si_unique_call 1325} Tmp_563 := __HAVOC_malloc(72);
    call {:si_unique_call 1326} vslice_dummy_var_309 := __HAVOC_malloc(20);
    call {:si_unique_call 1327} Tmp_565 := __HAVOC_malloc(60);
    call {:si_unique_call 1328} Tmp_567 := __HAVOC_malloc(60);
    call {:si_unique_call 1329} Tmp_569 := __HAVOC_malloc(120);
    call {:si_unique_call 1330} vslice_dummy_var_310 := __HAVOC_malloc(64);
    call {:si_unique_call 1331} Tmp_571 := __HAVOC_malloc(128);
    call {:si_unique_call 1332} Tmp_572 := __HAVOC_malloc(28);
    call {:si_unique_call 1333} Tmp_573 := __HAVOC_malloc(28);
    call {:si_unique_call 1334} Tmp_574 := __HAVOC_malloc(112);
    call {:si_unique_call 1335} Tmp_575 := __HAVOC_malloc(88);
    call {:si_unique_call 1336} Tmp_576 := __HAVOC_malloc(120);
    call {:si_unique_call 1337} Tmp_578 := __HAVOC_malloc(132);
    call {:si_unique_call 1338} Tmp_579 := __HAVOC_malloc(392);
    call {:si_unique_call 1339} Tmp_580 := __HAVOC_malloc(152);
    call {:si_unique_call 1340} Tmp_581 := __HAVOC_malloc(72);
    call {:si_unique_call 1341} Tmp_582 := __HAVOC_malloc(112);
    call {:si_unique_call 1342} Tmp_583 := __HAVOC_malloc(144);
    call {:si_unique_call 1343} Tmp_584 := __HAVOC_malloc(136);
    call {:si_unique_call 1344} Tmp_585 := __HAVOC_malloc(72);
    call {:si_unique_call 1345} Tmp_586 := __HAVOC_malloc(140);
    call {:si_unique_call 1346} Tmp_587 := __HAVOC_malloc(60);
    call {:si_unique_call 1347} Tmp_588 := __HAVOC_malloc(168);
    call {:si_unique_call 1348} Tmp_589 := __HAVOC_malloc(132);
    call {:si_unique_call 1349} Tmp_590 := __HAVOC_malloc(60);
    call {:si_unique_call 1350} Tmp_593 := __HAVOC_malloc(144);
    call {:si_unique_call 1351} Tmp_594 := __HAVOC_malloc(60);
    call {:si_unique_call 1352} Tmp_595 := __HAVOC_malloc(380);
    call {:si_unique_call 1353} Tmp_596 := __HAVOC_malloc(180);
    call {:si_unique_call 1354} Tmp_597 := __HAVOC_malloc(72);
    call {:si_unique_call 1355} Tmp_598 := __HAVOC_malloc(88);
    call {:si_unique_call 1356} Tmp_599 := __HAVOC_malloc(60);
    call {:si_unique_call 1357} Tmp_600 := __HAVOC_malloc(72);
    call {:si_unique_call 1358} Tmp_601 := __HAVOC_malloc(100);
    call {:si_unique_call 1359} Tmp_602 := __HAVOC_malloc(116);
    call {:si_unique_call 1360} Tmp_603 := __HAVOC_malloc(148);
    call {:si_unique_call 1361} Tmp_604 := __HAVOC_malloc(112);
    call {:si_unique_call 1362} Tmp_605 := __HAVOC_malloc(28);
    call {:si_unique_call 1363} Tmp_606 := __HAVOC_malloc(60);
    call {:si_unique_call 1364} Tmp_607 := __HAVOC_malloc(88);
    call {:si_unique_call 1365} Tmp_608 := __HAVOC_malloc(156);
    call {:si_unique_call 1366} Tmp_609 := __HAVOC_malloc(72);
    call {:si_unique_call 1367} Tmp_610 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    havoc pDevExt_14;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    havoc pLowerDevObj_3;
    call {:si_unique_call 1368} pIrpStack_3 := sdv_IoGetCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1369} sdv_do_paged_code_check();
    call {:si_unique_call 1370} status_17 := CyzIRPPrologue(PIrp_3, pDevExt_14);
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} status_17 != 0;
    Tmp_581 := strConst__li2bpl3;
    call {:si_unique_call 1371} vslice_dummy_var_311 := CyzDbgPrintEx(9, Tmp_581);
    call {:si_unique_call 1372} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1373} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := status_17;
    goto L1;

  L1:
    call {:si_unique_call 1374} SLIC_CyzPnpDispatch_exit(strConst__li2bpl0, Tmp_534);
    goto anon204_Then, anon204_Else;

  anon204_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon204_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon147_Then:
    assume {:partition} status_17 == 0;
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon197_Then, anon197_Else;

  anon197_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon196_Then, anon196_Else;

  anon196_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon195_Then, anon195_Else;

  anon195_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon194_Then, anon194_Else;

  anon194_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon193_Then, anon193_Else;

  anon193_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon192_Then, anon192_Else;

  anon192_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon191_Then, anon191_Else;

  anon191_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon190_Then, anon190_Else;

  anon190_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon189_Then, anon189_Else;

  anon189_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon188_Then, anon188_Else;

  anon188_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon187_Then, anon187_Else;

  anon187_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    goto L280;

  L280:
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1375} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L839;

  L839:
    call {:si_unique_call 1376} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1377} status_17 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    Tmp_534 := status_17;
    goto L1;

  anon156_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L839;

  anon180_Then:
    Tmp_589 := strConst__li2bpl139;
    call {:si_unique_call 1378} vslice_dummy_var_368 := CyzDbgPrintEx(12, Tmp_589);
    Tmp_535 := strConst__li2bpl140;
    call {:si_unique_call 1379} vslice_dummy_var_369 := CyzDbgPrintEx(12, Tmp_535);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1380} CyzSetDeviceFlags(pDevExt_14, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_14), 8, 1);
    call {:si_unique_call 1381} CyzKillPendingIrps(PDevObj_12);
    call {:si_unique_call 1382} Tmp_562 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1383} vslice_dummy_var_370 := sdv_InterlockedDecrement(Tmp_562);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1384} Tmp_562 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1385} sdv_530 := sdv_InterlockedDecrement(Tmp_562);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    pendingIRPs_1 := sdv_530;
    goto anon218_Then, anon218_Else;

  anon218_Else:
    assume {:partition} pendingIRPs_1 != 0;
    call {:si_unique_call 1386} vslice_dummy_var_299 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L92;

  L92:
    call {:si_unique_call 1387} Tmp_562 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1388} vslice_dummy_var_371 := sdv_InterlockedIncrement(Tmp_562);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1389} CyzDisableInterfacesResources(PDevObj_12, 0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    goto anon219_Then, anon219_Else;

  anon219_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1390} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L854;

  L854:
    call {:si_unique_call 1391} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1392} Tmp_534 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    goto L1;

  anon219_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L854;

  anon218_Then:
    assume {:partition} pendingIRPs_1 == 0;
    goto L92;

  anon181_Then:
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    goto L109;

  L109:
    call {:si_unique_call 1393} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1394} Tmp_534 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    goto L1;

  anon149_Then:
    goto L109;

  anon182_Then:
    assume {:nonnull} portIndex != 0;
    assume portIndex > 0;
    Tmp_550 := strConst__li2bpl164;
    call {:si_unique_call 1395} vslice_dummy_var_362 := CyzDbgPrintEx(12, Tmp_550);
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1396} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L848;

  L848:
    call {:si_unique_call 1397} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1398} Tmp_534 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    goto L1;

  anon153_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L848;

  anon152_Then:
    goto L128;

  L128:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    goto anon213_Then, anon213_Else;

  anon213_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1399} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L851;

  L851:
    call {:si_unique_call 1400} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1401} Tmp_534 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    goto L1;

  anon213_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L851;

  anon151_Then:
    call {:si_unique_call 1402} status_17 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:partition} status_17 >= 0;
    Tmp_552 := strConst__li2bpl85;
    call {:si_unique_call 1403} status_17 := CyzGetRegistryKeyValue(pnpKey_1, Tmp_552, 20, portIndex, 4);
    call {:si_unique_call 1404} vslice_dummy_var_300 := ZwClose(0);
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} status_17 >= 0;
    assume {:nonnull} portIndex != 0;
    assume portIndex > 0;
    call {:si_unique_call 1405} sdv_531 := corral_nondet();
    pnpIdStrLen := sdv_531;
    pnpIdStrLen := pnpIdStrLen * 2 + 2;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    goto anon214_Then, anon214_Else;

  anon214_Else:
    allocLen := 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc curStr;
    goto L179;

  L179:
    call {:si_unique_call 1406} allocLen, curStrLen := CyzPnpDispatch_loop_L179(allocLen, sdv_505, curStrLen, curStr);
    goto L179_last;

  L179_last:
    curStrLen := sdv_505;
    goto anon215_Then, anon215_Else;

  anon215_Else:
    assume {:partition} curStrLen != 0;
    allocLen := allocLen + curStrLen * 2 + 2;
    goto anon215_Else_dummy;

  anon215_Else_dummy:
    assume false;
    return;

  anon215_Then:
    assume {:partition} curStrLen == 0;
    allocLen := allocLen + 2;
    Tmp_568 := allocLen + pnpIdStrLen + 2;
    call {:si_unique_call 1407} sdv_477 := ExAllocatePoolWithTag(1, Tmp_568, -797279933);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon216_Then, anon216_Else;

  anon216_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_548;
    call {:si_unique_call 1408} sdv_RtlZeroMemory(0, Tmp_548);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1409} sdv_RtlCopyMemory(0, 0, allocLen);
    call {:si_unique_call 1410} vslice_dummy_var_301 := corral_nondet();
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1411} sdv_ExFreePool(0);
    goto L208;

  L208:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1412} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1413} Tmp_534 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    goto L1;

  anon216_Then:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1414} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_609 := strConst__li2bpl3;
    call {:si_unique_call 1415} vslice_dummy_var_363 := CyzDbgPrintEx(9, Tmp_609);
    call {:si_unique_call 1416} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1417} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := -1073741670;
    goto L1;

  anon214_Then:
    Tmp_587 := strConst__li2bpl141;
    call {:si_unique_call 1418} vslice_dummy_var_364 := CyzDbgPrintEx(12, Tmp_587);
    Tmp_546 := pnpIdStrLen + 4;
    call {:si_unique_call 1419} sdv_439 := ExAllocatePoolWithTag(1, Tmp_546, -797279933);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon217_Then, anon217_Else;

  anon217_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_591;
    call {:si_unique_call 1420} sdv_RtlZeroMemory(0, Tmp_591);
    call {:si_unique_call 1421} vslice_dummy_var_302 := corral_nondet();
    goto L208;

  anon217_Then:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_540 := strConst__li2bpl3;
    call {:si_unique_call 1422} vslice_dummy_var_365 := CyzDbgPrintEx(9, Tmp_540);
    call {:si_unique_call 1423} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1424} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := -1073741670;
    goto L1;

  anon155_Then:
    assume {:partition} 0 > status_17;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_563 := strConst__li2bpl3;
    call {:si_unique_call 1425} vslice_dummy_var_366 := CyzDbgPrintEx(9, Tmp_563);
    call {:si_unique_call 1426} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1427} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := status_17;
    goto L1;

  anon154_Then:
    assume {:partition} 0 > status_17;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_610 := strConst__li2bpl3;
    call {:si_unique_call 1428} vslice_dummy_var_367 := CyzDbgPrintEx(9, Tmp_610);
    call {:si_unique_call 1429} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1430} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := status_17;
    goto L1;

  anon150_Then:
    goto L128;

  anon183_Then:
    Tmp_601 := strConst__li2bpl138;
    call {:si_unique_call 1431} vslice_dummy_var_361 := CyzDbgPrintEx(12, Tmp_601);
    goto L280;

  anon184_Then:
    Tmp_598 := strConst__li2bpl137;
    call {:si_unique_call 1432} vslice_dummy_var_360 := CyzDbgPrintEx(12, Tmp_598);
    goto L280;

  anon185_Then:
    Tmp_555 := strConst__li2bpl136;
    call {:si_unique_call 1433} vslice_dummy_var_359 := CyzDbgPrintEx(12, Tmp_555);
    goto L280;

  anon186_Then:
    Tmp_604 := strConst__li2bpl135;
    call {:si_unique_call 1434} vslice_dummy_var_358 := CyzDbgPrintEx(12, Tmp_604);
    goto L280;

  anon187_Then:
    Tmp_596 := strConst__li2bpl158;
    call {:si_unique_call 1435} vslice_dummy_var_346 := CyzDbgPrintEx(12, Tmp_596);
    Tmp_565 := strConst__li2bpl140;
    call {:si_unique_call 1436} vslice_dummy_var_347 := CyzDbgPrintEx(12, Tmp_565);
    call {:si_unique_call 1437} sdv_484 := ExAllocatePoolWithTag(0, 16, -797279933);
    pResFiltEvent := sdv_484;
    goto anon211_Then, anon211_Else;

  anon211_Else:
    assume {:partition} pResFiltEvent != 0;
    call {:si_unique_call 1438} KeInitializeEvent(pResFiltEvent, 1, 0);
    call {:si_unique_call 1439} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1440} sdv_IoSetCompletionRoutine(PIrp_3, li2bplFunctionConstant219, pResFiltEvent, 1, 1, 1);
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1441} SLIC_sdv_IoCallDriver_entry(0);
    goto L845;

  L845:
    call {:si_unique_call 1442} status_17 := sdv_IoCallDriver(pLowerDevObj_3, PIrp_3);
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} status_17 == 259;
    call {:si_unique_call 1443} vslice_dummy_var_303 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L330;

  L330:
    call {:si_unique_call 1444} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    goto L338;

  L338:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc pReqList;
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    havoc Tmp_579;
    pResList := Tmp_579;
    Tmp_537 := strConst__li2bpl159;
    call {:si_unique_call 1445} vslice_dummy_var_348 := CyzDbgPrintEx(12, Tmp_537);
    listNum := 0;
    goto L344;

  L344:
    call {:si_unique_call 1446} gotMemory, Tmp_547, Tmp_549, Tmp_554, Tmp_556, pResDesc, listNum, Tmp_580, Tmp_583, j, Tmp_595, gotRuntime, vslice_dummy_var_349, vslice_dummy_var_350, vslice_dummy_var_351, vslice_dummy_var_352, vslice_dummy_var_353 := CyzPnpDispatch_loop_L344(gotMemory, pResList, Tmp_547, Tmp_549, Tmp_554, Tmp_556, pLowerDevObj_3, pResDesc, listNum, pReqList, Tmp_580, Tmp_583, j, Tmp_595, gotRuntime, vslice_dummy_var_349, vslice_dummy_var_350, vslice_dummy_var_351, vslice_dummy_var_352, vslice_dummy_var_353);
    goto L344_last;

  L344_last:
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    gotRuntime := 0;
    gotMemory := 0;
    Tmp_547 := strConst__li2bpl160;
    call {:si_unique_call 1447} vslice_dummy_var_349 := CyzDbgPrintEx(12, Tmp_547);
    j := 0;
    goto L353;

  L353:
    call {:si_unique_call 1448} gotMemory, Tmp_549, Tmp_554, Tmp_556, pResDesc, Tmp_580, Tmp_583, j, Tmp_595, gotRuntime, vslice_dummy_var_350, vslice_dummy_var_351, vslice_dummy_var_352, vslice_dummy_var_353 := CyzPnpDispatch_loop_L353(gotMemory, pResList, Tmp_549, Tmp_554, Tmp_556, pLowerDevObj_3, pResDesc, Tmp_580, Tmp_583, j, Tmp_595, gotRuntime, vslice_dummy_var_350, vslice_dummy_var_351, vslice_dummy_var_352, vslice_dummy_var_353);
    goto L353_last;

  L353_last:
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    Tmp_554 := j;
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    havoc Tmp_595;
    pResDesc := Tmp_595 + Tmp_554 * 380;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto L370;

  L370:
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} gotRuntime != 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} gotMemory == 0;
    goto L371;

  L371:
    j := j + 1;
    goto L371_dummy;

  L371_dummy:
    assume false;
    return;

  anon165_Then:
    assume {:partition} gotMemory != 0;
    goto L354;

  L354:
    listNum := listNum + 1;
    goto L354_dummy;

  L354_dummy:
    assume false;
    return;

  anon164_Then:
    assume {:partition} gotRuntime == 0;
    goto L371;

  anon202_Then:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    gotRuntime := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_580 := strConst__li2bpl162;
    call {:si_unique_call 1449} vslice_dummy_var_352 := CyzDbgPrintEx(12, Tmp_580);
    goto L370;

  anon163_Then:
    gotMemory := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_583 := strConst__li2bpl163;
    call {:si_unique_call 1450} vslice_dummy_var_353 := CyzDbgPrintEx(12, Tmp_583);
    goto L370;

  anon203_Then:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_549 := strConst__li2bpl161;
    call {:si_unique_call 1451} vslice_dummy_var_351 := CyzDbgPrintEx(12, Tmp_549);
    goto L370;

  anon212_Then:
    Tmp_556 := strConst__li2bpl142;
    call {:si_unique_call 1452} vslice_dummy_var_350 := CyzDbgPrintEx(12, Tmp_556);
    goto L370;

  anon162_Then:
    goto L354;

  anon161_Then:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_545 := strConst__li2bpl3;
    call {:si_unique_call 1453} vslice_dummy_var_354 := CyzDbgPrintEx(9, Tmp_545);
    call {:si_unique_call 1454} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1455} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := 0;
    goto L1;

  anon159_Then:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto L338;

  anon160_Then:
    Tmp_569 := strConst__li2bpl143;
    call {:si_unique_call 1456} vslice_dummy_var_355 := CyzDbgPrintEx(12, Tmp_569);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc status_17;
    Tmp_542 := strConst__li2bpl3;
    call {:si_unique_call 1457} vslice_dummy_var_356 := CyzDbgPrintEx(9, Tmp_542);
    call {:si_unique_call 1458} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1459} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := status_17;
    goto L1;

  anon158_Then:
    assume {:partition} status_17 != 259;
    goto L330;

  anon157_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L845;

  anon211_Then:
    assume {:partition} pResFiltEvent == 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_585 := strConst__li2bpl3;
    call {:si_unique_call 1460} vslice_dummy_var_357 := CyzDbgPrintEx(9, Tmp_585);
    call {:si_unique_call 1461} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1462} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := -1073741670;
    goto L1;

  anon188_Then:
    Tmp_561 := strConst__li2bpl134;
    call {:si_unique_call 1463} vslice_dummy_var_345 := CyzDbgPrintEx(12, Tmp_561);
    goto L280;

  anon189_Then:
    Tmp_588 := strConst__li2bpl144;
    call {:si_unique_call 1464} vslice_dummy_var_341 := CyzDbgPrintEx(12, Tmp_588);
    call {:si_unique_call 1465} sdv_480 := ExAllocatePoolWithTag(0, 16, -797279933);
    pQueryCapsEvent := sdv_480;
    goto anon209_Then, anon209_Else;

  anon209_Else:
    assume {:partition} pQueryCapsEvent != 0;
    call {:si_unique_call 1466} KeInitializeEvent(pQueryCapsEvent, 1, 0);
    call {:si_unique_call 1467} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1468} sdv_IoSetCompletionRoutine(PIrp_3, li2bplFunctionConstant219, pQueryCapsEvent, 1, 1, 1);
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1469} SLIC_sdv_IoCallDriver_entry(0);
    goto L842;

  L842:
    call {:si_unique_call 1470} status_17 := sdv_IoCallDriver(pLowerDevObj_3, PIrp_3);
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:partition} status_17 == 259;
    call {:si_unique_call 1471} vslice_dummy_var_304 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L444;

  L444:
    call {:si_unique_call 1472} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc status_17;
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon210_Then, anon210_Else;

  anon210_Else:
    goto L469;

  L469:
    Tmp_543 := strConst__li2bpl3;
    call {:si_unique_call 1473} vslice_dummy_var_343 := CyzDbgPrintEx(9, Tmp_543);
    call {:si_unique_call 1474} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1475} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := status_17;
    goto L1;

  anon210_Then:
    Tmp_582 := strConst__li2bpl145;
    call {:si_unique_call 1476} vslice_dummy_var_342 := CyzDbgPrintEx(12, Tmp_582);
    call {:si_unique_call 1477} pIrpStack_3 := sdv_IoGetCurrentIrpStackLocation(PIrp_3);
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    havoc pDevCaps;
    cap_1 := 2;
    goto L462;

  L462:
    call {:si_unique_call 1478} Tmp_536, cap_1, Tmp_572, Tmp_573, Tmp_611 := CyzPnpDispatch_loop_L462(Tmp_536, pDevExt_14, cap_1, Tmp_572, Tmp_573, pDevCaps, Tmp_611);
    goto L462_last;

  L462_last:
    assume {:CounterLoop 5} {:Counter "cap_1"} true;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} 7 > cap_1;
    Tmp_611 := cap_1;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    havoc Tmp_573;
    Tmp_536 := cap_1;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    havoc Tmp_572;
    assume {:nonnull} Tmp_572 != 0;
    assume Tmp_572 > 0;
    assume {:nonnull} Tmp_573 != 0;
    assume Tmp_573 > 0;
    cap_1 := cap_1 + 1;
    goto anon168_Else_dummy;

  anon168_Else_dummy:
    assume false;
    return;

  anon168_Then:
    assume {:partition} cap_1 >= 7;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    havoc Tmp_605;
    assume {:nonnull} Tmp_605 != 0;
    assume Tmp_605 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    havoc Tmp_539;
    assume {:nonnull} Tmp_539 != 0;
    assume Tmp_539 > 0;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto L469;

  anon167_Then:
    assume {:partition} status_17 != 259;
    goto L444;

  anon166_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L842;

  anon209_Then:
    assume {:partition} pQueryCapsEvent == 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_597 := strConst__li2bpl3;
    call {:si_unique_call 1479} vslice_dummy_var_344 := CyzDbgPrintEx(9, Tmp_597);
    call {:si_unique_call 1480} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1481} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := -1073741670;
    goto L1;

  anon190_Then:
    Tmp_559 := strConst__li2bpl133;
    call {:si_unique_call 1482} vslice_dummy_var_340 := CyzDbgPrintEx(12, Tmp_559);
    goto L280;

  anon191_Then:
    Tmp_608 := strConst__li2bpl132;
    call {:si_unique_call 1483} vslice_dummy_var_333 := CyzDbgPrintEx(12, Tmp_608);
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon201_Then, anon201_Else;

  anon201_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon200_Then, anon200_Else;

  anon200_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon199_Then, anon199_Else;

  anon199_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon198_Then, anon198_Else;

  anon198_Else:
    Tmp_544 := strConst__li2bpl151;
    call {:si_unique_call 1484} vslice_dummy_var_338 := CyzDbgPrintEx(12, Tmp_544);
    goto L510;

  L510:
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1485} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L836;

  L836:
    call {:si_unique_call 1486} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1487} status_17 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    Tmp_534 := status_17;
    goto L1;

  anon170_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L836;

  anon198_Then:
    Tmp_553 := strConst__li2bpl146;
    call {:si_unique_call 1488} vslice_dummy_var_339 := CyzDbgPrintEx(12, Tmp_553);
    goto L510;

  anon199_Then:
    Tmp_571 := strConst__li2bpl150;
    call {:si_unique_call 1489} vslice_dummy_var_337 := CyzDbgPrintEx(12, Tmp_571);
    goto L510;

  anon200_Then:
    Tmp_557 := strConst__li2bpl149;
    call {:si_unique_call 1490} vslice_dummy_var_336 := CyzDbgPrintEx(12, Tmp_557);
    goto L510;

  anon201_Then:
    Tmp_578 := strConst__li2bpl148;
    call {:si_unique_call 1491} vslice_dummy_var_335 := CyzDbgPrintEx(12, Tmp_578);
    goto L510;

  anon169_Then:
    Tmp_574 := strConst__li2bpl147;
    call {:si_unique_call 1492} vslice_dummy_var_334 := CyzDbgPrintEx(12, Tmp_574);
    goto L510;

  anon192_Then:
    Tmp_586 := strConst__li2bpl131;
    call {:si_unique_call 1493} vslice_dummy_var_331 := CyzDbgPrintEx(12, Tmp_586);
    Tmp_606 := strConst__li2bpl140;
    call {:si_unique_call 1494} vslice_dummy_var_332 := CyzDbgPrintEx(12, Tmp_606);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1495} CyzSetDeviceFlags(pDevExt_14, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_14), 2, 0);
    goto L527;

  L527:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1496} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1497} Tmp_534 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    goto L1;

  anon171_Then:
    goto L527;

  anon193_Then:
    Tmp_584 := strConst__li2bpl152;
    call {:si_unique_call 1498} vslice_dummy_var_327 := CyzDbgPrintEx(12, Tmp_584);
    Tmp_590 := strConst__li2bpl140;
    call {:si_unique_call 1499} vslice_dummy_var_328 := CyzDbgPrintEx(12, Tmp_590);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1500} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L833;

  L833:
    call {:si_unique_call 1501} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1502} Tmp_534 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    goto L1;

  anon173_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L833;

  anon172_Then:
    call {:si_unique_call 1503} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    call {:si_unique_call 1504} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_607 := strConst__li2bpl157;
    call {:si_unique_call 1505} vslice_dummy_var_329 := CyzDbgPrintEx(12, Tmp_607);
    Tmp_560 := strConst__li2bpl3;
    call {:si_unique_call 1506} vslice_dummy_var_330 := CyzDbgPrintEx(9, Tmp_560);
    call {:si_unique_call 1507} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1508} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := 17;
    goto L1;

  anon174_Then:
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1509} CyzSetDeviceFlags(pDevExt_14, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_14), 2, 1);
    call {:si_unique_call 1510} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1511} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1512} Tmp_534 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    goto L1;

  anon194_Then:
    Tmp_551 := strConst__li2bpl153;
    call {:si_unique_call 1513} vslice_dummy_var_323 := CyzDbgPrintEx(12, Tmp_551);
    Tmp_594 := strConst__li2bpl140;
    call {:si_unique_call 1514} vslice_dummy_var_324 := CyzDbgPrintEx(12, Tmp_594);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1515} CyzSetDeviceFlags(pDevExt_14, Flags__CYZ_DEVICE_EXTENSION(pDevExt_14), 2, 1);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1516} CyzSetDeviceFlags(pDevExt_14, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_14), 4, 1);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1517} CyzSetDeviceFlags(pDevExt_14, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_14), 2, 0);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1518} Tmp_562 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1519} vslice_dummy_var_325 := sdv_InterlockedDecrement(Tmp_562);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1520} Tmp_562 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1521} sdv_444 := sdv_InterlockedDecrement(Tmp_562);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    pendingIRPs := sdv_444;
    goto anon207_Then, anon207_Else;

  anon207_Else:
    assume {:partition} pendingIRPs != 0;
    call {:si_unique_call 1522} vslice_dummy_var_305 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L614;

  L614:
    call {:si_unique_call 1523} Tmp_562 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1524} vslice_dummy_var_326 := sdv_InterlockedIncrement(Tmp_562);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    call {:si_unique_call 1525} CyzReleaseResources(pDevExt_14);
    goto L621;

  L621:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    goto anon208_Then, anon208_Else;

  anon208_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1526} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L827;

  L827:
    call {:si_unique_call 1527} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1528} SLIC_sdv_IoCallDriver_entry(0);
    goto L830;

  L830:
    call {:si_unique_call 1529} Tmp_534 := sdv_IoCallDriver(pLowerDevObj_3, PIrp_3);
    goto L1;

  anon176_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L830;

  anon208_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L827;

  anon175_Then:
    goto L621;

  anon207_Then:
    assume {:partition} pendingIRPs == 0;
    goto L614;

  anon195_Then:
    Tmp_603 := strConst__li2bpl130;
    call {:si_unique_call 1530} vslice_dummy_var_321 := CyzDbgPrintEx(12, Tmp_603);
    Tmp_599 := strConst__li2bpl140;
    call {:si_unique_call 1531} vslice_dummy_var_322 := CyzDbgPrintEx(12, Tmp_599);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1532} CyzSetDeviceFlags(pDevExt_14, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_14), 1, 0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1533} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1534} Tmp_534 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    goto L1;

  anon196_Then:
    Tmp_576 := strConst__li2bpl154;
    call {:si_unique_call 1535} vslice_dummy_var_318 := CyzDbgPrintEx(12, Tmp_576);
    Tmp_567 := strConst__li2bpl140;
    call {:si_unique_call 1536} vslice_dummy_var_319 := CyzDbgPrintEx(12, Tmp_567);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1537} CyzSetDeviceFlags(pDevExt_14, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_14), 1, 1);
    call {:si_unique_call 1538} CyzKillPendingIrps(PDevObj_12);
    call {:si_unique_call 1539} Tmp_562 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1540} vslice_dummy_var_320 := sdv_InterlockedDecrement(Tmp_562);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1541} Tmp_562 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1542} sdv_524 := sdv_InterlockedDecrement(Tmp_562);
    assume {:nonnull} Tmp_562 != 0;
    assume Tmp_562 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    pendingIRPs_2 := sdv_524;
    goto anon205_Then, anon205_Else;

  anon205_Else:
    assume {:partition} pendingIRPs_2 != 0;
    call {:si_unique_call 1543} vslice_dummy_var_306 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L668;

  L668:
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    goto L675;

  L675:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    goto anon206_Then, anon206_Else;

  anon206_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1544} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(0);
    goto L821;

  L821:
    call {:si_unique_call 1545} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume PIrp_3 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1546} SLIC_sdv_IoCallDriver_entry(0);
    goto L824;

  L824:
    call {:si_unique_call 1547} status_17 := sdv_IoCallDriver(pLowerDevObj_3, PIrp_3);
    call {:si_unique_call 1548} vslice_dummy_var_307 := CyzRemoveDevObj(PDevObj_12);
    Tmp_534 := status_17;
    goto L1;

  anon178_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L824;

  anon206_Then:
    assume !(PIrp_3 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L821;

  anon177_Then:
    call {:si_unique_call 1549} CyzDisableInterfacesResources(PDevObj_12, 1);
    goto L675;

  anon205_Then:
    assume {:partition} pendingIRPs_2 == 0;
    goto L668;

  anon197_Then:
    Tmp_593 := strConst__li2bpl155;
    call {:si_unique_call 1550} vslice_dummy_var_314 := CyzDbgPrintEx(12, Tmp_593);
    Tmp_541 := strConst__li2bpl140;
    call {:si_unique_call 1551} vslice_dummy_var_315 := CyzDbgPrintEx(12, Tmp_541);
    call {:si_unique_call 1552} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    call {:si_unique_call 1553} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_575 := strConst__li2bpl157;
    call {:si_unique_call 1554} vslice_dummy_var_316 := CyzDbgPrintEx(12, Tmp_575);
    Tmp_538 := strConst__li2bpl3;
    call {:si_unique_call 1555} vslice_dummy_var_317 := CyzDbgPrintEx(9, Tmp_538);
    call {:si_unique_call 1556} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1557} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := 17;
    goto L1;

  anon179_Then:
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1558} CyzSetDeviceFlags(pDevExt_14, DevicePNPAccept__CYZ_DEVICE_EXTENSION(pDevExt_14), 1, 1);
    call {:si_unique_call 1559} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1560} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1561} Tmp_534 := CyzIoCallDriver(pDevExt_14, pLowerDevObj_3, PIrp_3);
    goto L1;

  anon148_Then:
    Tmp_602 := strConst__li2bpl156;
    call {:si_unique_call 1562} vslice_dummy_var_312 := CyzDbgPrintEx(12, Tmp_602);
    call {:si_unique_call 1563} MmLockPagableSectionByHandle(0);
    assume {:nonnull} pDevExt_14 != 0;
    assume pDevExt_14 > 0;
    call {:si_unique_call 1564} status_17 := CyzStartDevice(PDevObj_12, PIrp_3);
    call {:si_unique_call 1565} vslice_dummy_var_308 := CyzGotoPowerState(PDevObj_12, pDevExt_14, 4);
    call {:si_unique_call 1566} MmUnlockPagableImageSection(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_600 := strConst__li2bpl3;
    call {:si_unique_call 1567} vslice_dummy_var_313 := CyzDbgPrintEx(9, Tmp_600);
    call {:si_unique_call 1568} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1569} CyzIRPEpilogue(pDevExt_14);
    Tmp_534 := status_17;
    goto L1;
}



procedure {:origName "CyzStartDevice"} CyzStartDevice(actual_PDevObj_13: int, actual_PIrp_4: int) returns (Tmp_612: int);
  modifies alloc, locked, queuedWithoutMarking, stack_location, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzStartDevice"} CyzStartDevice(actual_PDevObj_13: int, actual_PIrp_4: int) returns (Tmp_612: int)
{
  var {:pointer} Tmp_613: int;
  var {:pointer} Tmp_614: int;
  var {:pointer} keyHandle_2: int;
  var {:pointer} portResourcesTr: int;
  var {:pointer} Tmp_615: int;
  var {:pointer} pDevExt_15: int;
  var {:pointer} Tmp_617: int;
  var {:pointer} portResources: int;
  var {:pointer} Tmp_618: int;
  var {:pointer} Tmp_619: int;
  var {:pointer} sdv_546: int;
  var {:scalar} dataLength: int;
  var {:pointer} sdv_553: int;
  var {:pointer} pLowerDevObj_4: int;
  var {:pointer} Tmp_620: int;
  var {:pointer} Tmp_621: int;
  var {:scalar} status_18: int;
  var {:pointer} Tmp_622: int;
  var {:scalar} Tmp_623: int;
  var {:scalar} Tmp_624: int;
  var {:pointer} PDevObj_13: int;
  var {:pointer} PIrp_4: int;
  var vslice_dummy_var_372: int;
  var vslice_dummy_var_373: int;
  var vslice_dummy_var_374: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_148: int;

  anon0:
    call {:si_unique_call 1570} Tmp_623 := __HAVOC_malloc(20);
    call {:si_unique_call 1571} Tmp_624 := __HAVOC_malloc(20);
    PDevObj_13 := actual_PDevObj_13;
    PIrp_4 := actual_PIrp_4;
    call {:si_unique_call 1572} Tmp_613 := __HAVOC_malloc(64);
    call {:si_unique_call 1573} Tmp_614 := __HAVOC_malloc(112);
    call {:si_unique_call 1574} Tmp_615 := __HAVOC_malloc(56);
    call {:si_unique_call 1575} Tmp_617 := __HAVOC_malloc(152);
    call {:si_unique_call 1576} Tmp_618 := __HAVOC_malloc(208);
    call {:si_unique_call 1577} Tmp_619 := __HAVOC_malloc(200);
    call {:si_unique_call 1578} Tmp_620 := __HAVOC_malloc(56);
    call {:si_unique_call 1579} Tmp_621 := __HAVOC_malloc(100);
    call {:si_unique_call 1580} Tmp_622 := __HAVOC_malloc(64);
    call {:si_unique_call 1581} vslice_dummy_var_372 := sdv_IoGetCurrentIrpStackLocation(PIrp_4);
    status_18 := -1073741822;
    assume {:nonnull} PDevObj_13 != 0;
    assume PDevObj_13 > 0;
    havoc pDevExt_15;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc pLowerDevObj_4;
    portResources := 0;
    portResourcesTr := 0;
    call {:si_unique_call 1582} sdv_do_paged_code_check();
    Tmp_621 := strConst__li2bpl166;
    call {:si_unique_call 1583} vslice_dummy_var_375 := CyzDbgPrintEx(11, Tmp_621);
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1584} KeInitializeEvent(CyzStartEvent__CYZ_DEVICE_EXTENSION(pDevExt_15), 1, 0);
    call {:si_unique_call 1585} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_4);
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    call {:si_unique_call 1586} sdv_IoSetCompletionRoutine(PIrp_4, li2bplFunctionConstant219, CyzStartEvent__CYZ_DEVICE_EXTENSION(pDevExt_15), 1, 1, 1);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume PIrp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1587} SLIC_sdv_IoCallDriver_entry(0);
    goto L122;

  L122:
    call {:si_unique_call 1588} status_18 := sdv_IoCallDriver(pLowerDevObj_4, PIrp_4);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} status_18 == 259;
    call {:si_unique_call 1589} vslice_dummy_var_373 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    havoc status_18;
    goto L40;

  L40:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_18 >= 0;
    call {:si_unique_call 1590} status_18 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} status_18 >= 0;
    Tmp_615 := strConst__li2bpl168;
    call {:si_unique_call 1591} dataLength := CyzGetRegistryKeyValueLength(keyHandle_2, Tmp_615, 28);
    call {:si_unique_call 1592} sdv_546 := ExAllocatePoolWithTag(1, dataLength, -797279933);
    portResources := sdv_546;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} portResources != 0;
    Tmp_620 := strConst__li2bpl168;
    call {:si_unique_call 1593} status_18 := CyzGetRegistryKeyValue(keyHandle_2, Tmp_620, 28, portResources, dataLength);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_18 < 0;
    Tmp_619 := strConst__li2bpl170;
    call {:si_unique_call 1594} vslice_dummy_var_377 := CyzDbgPrintEx(14, Tmp_619);
    goto L77;

  L77:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} portResources != 0;
    call {:si_unique_call 1595} sdv_ExFreePool(0);
    goto L78;

  L78:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} portResourcesTr != 0;
    call {:si_unique_call 1596} sdv_ExFreePool(0);
    goto L82;

  L82:
    call {:si_unique_call 1597} vslice_dummy_var_374 := ZwClose(0);
    goto L88;

  L88:
    Tmp_612 := status_18;
    goto L1;

  L1:
    return;

  anon27_Then:
    assume {:partition} portResourcesTr == 0;
    goto L82;

  anon26_Then:
    assume {:partition} portResources == 0;
    goto L78;

  anon25_Then:
    assume {:partition} 0 <= status_18;
    goto L65;

  L65:
    Tmp_613 := strConst__li2bpl169;
    call {:si_unique_call 1598} dataLength := CyzGetRegistryKeyValueLength(keyHandle_2, Tmp_613, 32);
    call {:si_unique_call 1599} sdv_553 := ExAllocatePoolWithTag(1, dataLength, -797279933);
    portResourcesTr := sdv_553;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} portResourcesTr != 0;
    Tmp_622 := strConst__li2bpl169;
    call {:si_unique_call 1600} status_18 := CyzGetRegistryKeyValue(keyHandle_2, Tmp_622, 32, portResourcesTr, dataLength);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} status_18 < 0;
    Tmp_618 := strConst__li2bpl171;
    call {:si_unique_call 1601} vslice_dummy_var_376 := CyzDbgPrintEx(14, Tmp_618);
    goto L77;

  anon28_Then:
    assume {:partition} 0 <= status_18;
    goto L95;

  L95:
    call {:si_unique_call 1602} status_18 := CyzFinishStartDevice(PDevObj_13, portResources, portResourcesTr);
    goto L77;

  anon30_Then:
    assume {:partition} portResourcesTr == 0;
    goto L95;

  anon29_Then:
    assume {:partition} portResources == 0;
    goto L65;

  anon24_Then:
    assume {:partition} 0 > status_18;
    Tmp_617 := strConst__li2bpl84;
    call {:si_unique_call 1603} vslice_dummy_var_378 := CyzDbgPrintEx(14, Tmp_617);
    goto L88;

  anon23_Then:
    assume {:partition} 0 > status_18;
    Tmp_614 := strConst__li2bpl167;
    call {:si_unique_call 1604} vslice_dummy_var_379 := CyzDbgPrintEx(14, Tmp_614);
    assume {:nonnull} Tmp_624 != 0;
    assume Tmp_624 > 0;
    assume {:nonnull} Tmp_624 != 0;
    assume Tmp_624 > 0;
    assume {:nonnull} Tmp_624 != 0;
    assume Tmp_624 > 0;
    assume {:nonnull} Tmp_624 != 0;
    assume Tmp_624 > 0;
    assume {:nonnull} Tmp_624 != 0;
    assume Tmp_624 > 0;
    assume {:nonnull} Tmp_623 != 0;
    assume Tmp_623 > 0;
    assume {:nonnull} Tmp_623 != 0;
    assume Tmp_623 > 0;
    assume {:nonnull} Tmp_623 != 0;
    assume Tmp_623 > 0;
    assume {:nonnull} Tmp_623 != 0;
    assume Tmp_623 > 0;
    assume {:nonnull} Tmp_623 != 0;
    assume Tmp_623 > 0;
    assume {:nonnull} pDevExt_15 != 0;
    assume pDevExt_15 > 0;
    havoc vslice_dummy_var_148;
    call {:si_unique_call 1605} CyzLogError(vslice_dummy_var_148, 0, Tmp_623, Tmp_624, 0, 0, 0, 0, status_18, -1073475531, 0, 0, 0, 0);
    Tmp_612 := status_18;
    goto L1;

  anon22_Then:
    assume {:partition} status_18 != 259;
    goto L40;

  anon21_Then:
    assume !(PIrp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L122;
}



procedure {:origName "CyzCompareString"} CyzCompareString(actual_PString1: int, actual_PString2: int, actual_Count: int) returns (Tmp_625: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCompareString"} CyzCompareString(actual_PString1: int, actual_PString2: int, actual_Count: int) returns (Tmp_625: int)
{
  var {:pointer} PString1: int;
  var {:pointer} PString2: int;
  var {:scalar} Count: int;

  anon0:
    PString1 := actual_PString1;
    PString2 := actual_PString2;
    Count := actual_Count;
    goto L3;

  L3:
    call {:si_unique_call 1606} Count := CyzCompareString_loop_L3(PString1, PString2, Count);
    goto L3_last;

  L3_last:
    assume {:nonnull} PString1 != 0;
    assume PString1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L5;

  L5:
    assume {:nonnull} PString1 != 0;
    assume PString1 > 0;
    assume {:nonnull} PString2 != 0;
    assume PString2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L8;

  L8:
    Tmp_625 := Count;
    return;

  anon11_Then:
    Count := Count - 1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Count == 0;
    goto L8;

  anon12_Then:
    assume {:partition} Count != 0;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    assume false;
    return;

  anon9_Then:
    assume {:nonnull} PString2 != 0;
    assume PString2 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L8;

  anon10_Then:
    goto L5;
}



procedure {:origName "CyzDoExternalNaming"} CyzDoExternalNaming(actual_PDevExt_5: int, actual_PDrvObj: int) returns (Tmp_627: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_627 == -1073741811 || Tmp_627 == -1073741808 || Tmp_627 == -1073741823 || Tmp_627 == 0 || Tmp_627 == 5 || Tmp_627 == -1073741789 || Tmp_627 == -1073741670 || Tmp_627 == -1073741772 || Tmp_627 == -1073741824;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzDoExternalNaming"} CyzDoExternalNaming(actual_PDevExt_5: int, actual_PDrvObj: int) returns (Tmp_627: int)
{
  var {:pointer} Tmp_628: int;
  var {:scalar} Tmp_629: int;
  var {:pointer} Tmp_630: int;
  var {:scalar} Tmp_631: int;
  var {:scalar} Tmp_632: int;
  var {:scalar} bufLen: int;
  var {:scalar} Tmp_634: int;
  var {:pointer} Tmp_636: int;
  var {:scalar} Tmp_638: int;
  var {:scalar} linkName: int;
  var {:scalar} Tmp_640: int;
  var {:pointer} keyHandle_3: int;
  var {:pointer} Tmp_642: int;
  var {:scalar} Tmp_644: int;
  var {:scalar} Tmp_645: int;
  var {:pointer} Tmp_646: int;
  var {:pointer} Tmp_648: int;
  var {:scalar} Tmp_649: int;
  var {:pointer} sdv_573: int;
  var {:pointer} pRegName_1: int;
  var {:pointer} Tmp_651: int;
  var {:pointer} Tmp_652: int;
  var {:scalar} Tmp_655: int;
  var {:pointer} Tmp_656: int;
  var {:scalar} Tmp_657: int;
  var {:scalar} Tmp_658: int;
  var {:scalar} sdv_577: int;
  var {:scalar} Tmp_659: int;
  var {:scalar} Tmp_660: int;
  var {:pointer} Tmp_661: int;
  var {:scalar} Tmp_662: int;
  var {:scalar} Tmp_663: int;
  var {:scalar} Tmp_664: int;
  var {:scalar} Tmp_665: int;
  var {:pointer} sdv_584: int;
  var {:pointer} sdv_585: int;
  var {:scalar} Tmp_667: int;
  var {:pointer} Tmp_669: int;
  var {:scalar} Tmp_670: int;
  var {:pointer} Tmp_671: int;
  var {:pointer} Tmp_672: int;
  var {:scalar} Tmp_673: int;
  var {:scalar} Tmp_674: int;
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_676: int;
  var {:pointer} sdv_593: int;
  var {:scalar} status_19: int;
  var {:pointer} pDevObj: int;
  var {:scalar} Tmp_678: int;
  var {:scalar} Tmp_679: int;
  var {:pointer} sdv_596: int;
  var {:pointer} PDevExt_5: int;
  var {:pointer} PDrvObj: int;
  var vslice_dummy_var_380: int;
  var vslice_dummy_var_381: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;
  var vslice_dummy_var_386: int;
  var vslice_dummy_var_387: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_408: int;
  var vslice_dummy_var_409: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;

  anon0:
    call {:si_unique_call 1607} linkName := __HAVOC_malloc(12);
    call {:si_unique_call 1608} Tmp_640 := __HAVOC_malloc(20);
    call {:si_unique_call 1609} Tmp_644 := __HAVOC_malloc(20);
    call {:si_unique_call 1610} Tmp_645 := __HAVOC_malloc(20);
    call {:si_unique_call 1611} Tmp_649 := __HAVOC_malloc(20);
    call {:si_unique_call 1612} Tmp_655 := __HAVOC_malloc(20);
    call {:si_unique_call 1613} Tmp_657 := __HAVOC_malloc(20);
    call {:si_unique_call 1614} Tmp_658 := __HAVOC_malloc(20);
    call {:si_unique_call 1615} Tmp_660 := __HAVOC_malloc(20);
    call {:si_unique_call 1616} Tmp_662 := __HAVOC_malloc(20);
    call {:si_unique_call 1617} Tmp_663 := __HAVOC_malloc(20);
    call {:si_unique_call 1618} Tmp_664 := __HAVOC_malloc(20);
    call {:si_unique_call 1619} Tmp_665 := __HAVOC_malloc(20);
    call {:si_unique_call 1620} Tmp_674 := __HAVOC_malloc(20);
    call {:si_unique_call 1621} Tmp_679 := __HAVOC_malloc(20);
    PDevExt_5 := actual_PDevExt_5;
    PDrvObj := actual_PDrvObj;
    call {:si_unique_call 1622} Tmp_628 := __HAVOC_malloc(148);
    call {:si_unique_call 1623} vslice_dummy_var_388 := __HAVOC_malloc(44);
    call {:si_unique_call 1624} Tmp_636 := __HAVOC_malloc(156);
    call {:si_unique_call 1625} vslice_dummy_var_389 := __HAVOC_malloc(44);
    call {:si_unique_call 1626} vslice_dummy_var_390 := __HAVOC_malloc(8);
    call {:si_unique_call 1627} Tmp_642 := __HAVOC_malloc(196);
    call {:si_unique_call 1628} Tmp_646 := __HAVOC_malloc(164);
    call {:si_unique_call 1629} Tmp_648 := __HAVOC_malloc(168);
    call {:si_unique_call 1630} Tmp_651 := __HAVOC_malloc(192);
    call {:si_unique_call 1631} Tmp_652 := __HAVOC_malloc(36);
    call {:si_unique_call 1632} vslice_dummy_var_391 := __HAVOC_malloc(44);
    call {:si_unique_call 1633} Tmp_656 := __HAVOC_malloc(200);
    call {:si_unique_call 1634} Tmp_661 := __HAVOC_malloc(44);
    call {:si_unique_call 1635} vslice_dummy_var_392 := __HAVOC_malloc(8);
    call {:si_unique_call 1636} Tmp_669 := __HAVOC_malloc(88);
    call {:si_unique_call 1637} Tmp_671 := __HAVOC_malloc(156);
    call {:si_unique_call 1638} Tmp_672 := __HAVOC_malloc(64);
    call {:si_unique_call 1639} Tmp_675 := __HAVOC_malloc(180);
    call {:si_unique_call 1640} Tmp_676 := __HAVOC_malloc(236);
    status_19 := 0;
    pRegName_1 := 0;
    call {:si_unique_call 1641} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc pDevObj;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    call {:si_unique_call 1642} status_19 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} status_19 != 0;
    Tmp_627 := status_19;
    goto L1;

  L1:
    return;

  anon45_Then:
    assume {:partition} status_19 == 0;
    Tmp_669 := strConst__li2bpl172;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    call {:si_unique_call 1643} vslice_dummy_var_393 := CyzGetRegistryKeyValue(keyHandle_3, Tmp_669, 44, SkipNaming__CYZ_DEVICE_EXTENSION(PDevExt_5), 4);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 1644} vslice_dummy_var_380 := ZwClose(0);
    Tmp_627 := 0;
    goto L1;

  anon46_Then:
    call {:si_unique_call 1645} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_659;
    call {:si_unique_call 1646} sdv_584 := ExAllocatePoolWithTag(1, Tmp_659, -797279933);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_632;
    call {:si_unique_call 1647} sdv_RtlZeroMemory(0, Tmp_632);
    call {:si_unique_call 1648} sdv_585 := ExAllocatePoolWithTag(1, 258, -797279933);
    pRegName_1 := sdv_585;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} pRegName_1 != 0;
    Tmp_652 := strConst__li2bpl173;
    call {:si_unique_call 1649} status_19 := CyzGetRegistryKeyValue(keyHandle_3, Tmp_652, 18, pRegName_1, 256);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} status_19 >= 0;
    goto L60;

  L60:
    call {:si_unique_call 1650} vslice_dummy_var_381 := ZwClose(0);
    bufLen := sdv_577 * 2 + 2;
    call {:si_unique_call 1651} sdv_596 := ExAllocatePoolWithTag(1, bufLen, -797279933);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 1652} sdv_RtlZeroMemory(0, bufLen);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    call {:si_unique_call 1653} vslice_dummy_var_394 := corral_nondet();
    call {:si_unique_call 1654} vslice_dummy_var_395 := corral_nondet();
    call {:si_unique_call 1655} vslice_dummy_var_396 := corral_nondet();
    call {:si_unique_call 1656} vslice_dummy_var_397 := corral_nondet();
    call {:si_unique_call 1657} vslice_dummy_var_382 := corral_nondet();
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc Tmp_673;
    call {:si_unique_call 1658} sdv_593 := ExAllocatePoolWithTag(1, Tmp_673, -797279933);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc Tmp_638;
    call {:si_unique_call 1659} sdv_RtlZeroMemory(0, Tmp_638);
    call {:si_unique_call 1660} vslice_dummy_var_383 := corral_nondet();
    call {:si_unique_call 1661} sdv_573 := ExAllocatePoolWithTag(1, 66, -797279933);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc Tmp_678;
    call {:si_unique_call 1662} sdv_RtlZeroMemory(0, Tmp_678);
    call {:si_unique_call 1663} vslice_dummy_var_384 := corral_nondet();
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc Tmp_630;
    call {:si_unique_call 1664} sdv_RtlZeroMemory(0, 2);
    Tmp_672 := strConst__li2bpl177;
    call {:si_unique_call 1665} vslice_dummy_var_398 := CyzDbgPrintEx(4, Tmp_672);
    call {:si_unique_call 1666} status_19 := IoCreateSymbolicLink(0, 0);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_19 >= 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc Tmp_667;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    call {:si_unique_call 1667} status_19 := RtlWriteRegistryValue(4, 0, 0, 1, 0, Tmp_667);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_19 >= 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    call {:si_unique_call 1668} status_19 := IoRegisterDeviceInterface(0, 0, 0, DeviceClassSymbolicName__CYZ_DEVICE_EXTENSION(PDevExt_5));
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_19 >= 0;
    call {:si_unique_call 1669} status_19 := IoSetDeviceInterfaceState(0, 1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} status_19 >= 0;
    goto L162;

  L162:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} status_19 >= 0;
    goto L164;

  L164:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 1670} sdv_ExFreePool(0);
    goto L165;

  L165:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} pRegName_1 != 0;
    call {:si_unique_call 1671} sdv_ExFreePool(0);
    goto L169;

  L169:
    Tmp_627 := status_19;
    goto L1;

  anon55_Then:
    assume {:partition} pRegName_1 == 0;
    goto L169;

  anon54_Then:
    goto L165;

  anon52_Then:
    assume {:partition} 0 > status_19;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    call {:si_unique_call 1672} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto L173;

  L173:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 1673} vslice_dummy_var_385 := IoDeleteSymbolicLink(0);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto L178;

  L178:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    call {:si_unique_call 1674} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto L183;

  L183:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    call {:si_unique_call 1675} vslice_dummy_var_399 := RtlDeleteRegistryValue(4, 0, 0);
    goto L188;

  L188:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 1676} vslice_dummy_var_386 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    call {:si_unique_call 1677} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto L192;

  L192:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    call {:si_unique_call 1678} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto L164;

  anon60_Then:
    goto L164;

  anon59_Then:
    goto L192;

  anon58_Then:
    goto L188;

  anon57_Then:
    goto L183;

  anon56_Then:
    goto L178;

  anon53_Then:
    goto L173;

  anon51_Then:
    assume {:partition} 0 > status_19;
    Tmp_675 := strConst__li2bpl179;
    call {:si_unique_call 1679} vslice_dummy_var_400 := CyzDbgPrintEx(14, Tmp_675);
    goto L162;

  anon50_Then:
    assume {:partition} 0 > status_19;
    Tmp_656 := strConst__li2bpl178;
    call {:si_unique_call 1680} vslice_dummy_var_401 := CyzDbgPrintEx(14, Tmp_656);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    goto L162;

  anon49_Then:
    assume {:partition} 0 > status_19;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc Tmp_670;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc Tmp_631;
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    assume {:nonnull} Tmp_645 != 0;
    assume Tmp_645 > 0;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    assume {:nonnull} Tmp_662 != 0;
    assume Tmp_662 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc vslice_dummy_var_149;
    call {:si_unique_call 1681} CyzLogError(PDrvObj, pDevObj, Tmp_662, Tmp_645, 0, 0, 0, Tmp_631, status_19, 266245, Tmp_670, vslice_dummy_var_149, 0, 0);
    Tmp_676 := strConst__li2bpl180;
    call {:si_unique_call 1682} vslice_dummy_var_402 := CyzDbgPrintEx(14, Tmp_676);
    goto L162;

  anon48_Then:
    assume {:partition} 0 > status_19;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc Tmp_629;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc Tmp_634;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} Tmp_655 != 0;
    assume Tmp_655 > 0;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} Tmp_664 != 0;
    assume Tmp_664 > 0;
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc vslice_dummy_var_150;
    call {:si_unique_call 1683} CyzLogError(PDrvObj, pDevObj, Tmp_664, Tmp_655, 0, 0, 0, Tmp_634, status_19, 266244, Tmp_629, vslice_dummy_var_150, 0, 0);
    Tmp_651 := strConst__li2bpl181;
    call {:si_unique_call 1684} vslice_dummy_var_403 := CyzDbgPrintEx(14, Tmp_651);
    goto L162;

  anon66_Then:
    assume {:nonnull} Tmp_640 != 0;
    assume Tmp_640 > 0;
    assume {:nonnull} Tmp_640 != 0;
    assume Tmp_640 > 0;
    assume {:nonnull} Tmp_640 != 0;
    assume Tmp_640 > 0;
    assume {:nonnull} Tmp_640 != 0;
    assume Tmp_640 > 0;
    assume {:nonnull} Tmp_640 != 0;
    assume Tmp_640 > 0;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    assume {:nonnull} Tmp_644 != 0;
    assume Tmp_644 > 0;
    call {:si_unique_call 1685} CyzLogError(PDrvObj, pDevObj, Tmp_644, Tmp_640, 0, 0, 0, 75, 0, -1073475576, 0, 0, 0, 0);
    Tmp_671 := strConst__li2bpl182;
    call {:si_unique_call 1686} vslice_dummy_var_404 := CyzDbgPrintEx(14, Tmp_671);
    status_19 := -1073741670;
    goto L162;

  anon65_Then:
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    assume {:nonnull} Tmp_663 != 0;
    assume Tmp_663 > 0;
    call {:si_unique_call 1687} CyzLogError(PDrvObj, pDevObj, Tmp_663, Tmp_658, 0, 0, 0, 74, 0, -1073475576, 0, 0, 0, 0);
    Tmp_642 := strConst__li2bpl183;
    call {:si_unique_call 1688} vslice_dummy_var_405 := CyzDbgPrintEx(14, Tmp_642);
    status_19 := -1073741670;
    goto L162;

  anon64_Then:
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    call {:si_unique_call 1689} CyzLogError(PDrvObj, pDevObj, Tmp_665, Tmp_657, 0, 0, 0, 73, 0, -1073475576, 0, 0, 0, 0);
    Tmp_636 := strConst__li2bpl184;
    call {:si_unique_call 1690} vslice_dummy_var_406 := CyzDbgPrintEx(14, Tmp_636);
    status_19 := -1073741670;
    goto L162;

  anon47_Then:
    assume {:partition} 0 > status_19;
    Tmp_661 := strConst__li2bpl174;
    call {:si_unique_call 1691} status_19 := CyzGetRegistryKeyValue(keyHandle_3, Tmp_661, 22, pRegName_1, 256);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_19 < 0;
    Tmp_646 := strConst__li2bpl185;
    call {:si_unique_call 1692} vslice_dummy_var_407 := CyzDbgPrintEx(14, Tmp_646);
    call {:si_unique_call 1693} vslice_dummy_var_387 := ZwClose(0);
    goto L162;

  anon61_Then:
    assume {:partition} 0 <= status_19;
    goto L60;

  anon63_Then:
    assume {:partition} pRegName_1 == 0;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    assume {:nonnull} Tmp_649 != 0;
    assume Tmp_649 > 0;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    assume {:nonnull} Tmp_674 != 0;
    assume Tmp_674 > 0;
    call {:si_unique_call 1694} CyzLogError(PDrvObj, pDevObj, Tmp_674, Tmp_649, 0, 0, 0, 72, 0, -1073475576, 0, 0, 0, 0);
    Tmp_628 := strConst__li2bpl186;
    call {:si_unique_call 1695} vslice_dummy_var_408 := CyzDbgPrintEx(14, Tmp_628);
    status_19 := -1073741670;
    call {:si_unique_call 1696} vslice_dummy_var_409 := ZwClose(0);
    goto L162;

  anon62_Then:
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    assume {:nonnull} Tmp_660 != 0;
    assume Tmp_660 > 0;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    assume {:nonnull} Tmp_679 != 0;
    assume Tmp_679 > 0;
    call {:si_unique_call 1697} CyzLogError(PDrvObj, pDevObj, Tmp_679, Tmp_660, 0, 0, 0, 71, 0, -1073475576, 0, 0, 0, 0);
    Tmp_648 := strConst__li2bpl116;
    call {:si_unique_call 1698} vslice_dummy_var_410 := CyzDbgPrintEx(14, Tmp_648);
    status_19 := -1073741670;
    call {:si_unique_call 1699} vslice_dummy_var_411 := ZwClose(0);
    goto L162;
}



procedure {:origName "CyzReadSymName"} CyzReadSymName(actual_PDevExt_6: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_682: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_682 == -1073741811 || Tmp_682 == -1073741823 || Tmp_682 == 0 || Tmp_682 == 5 || Tmp_682 == -1073741789 || Tmp_682 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzReadSymName"} CyzReadSymName(actual_PDevExt_6: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_682: int)
{
  var {:scalar} Tmp_684: int;
  var {:scalar} Tmp_685: int;
  var {:pointer} Tmp_686: int;
  var {:scalar} linkName_1: int;
  var {:scalar} Tmp_687: int;
  var {:scalar} Tmp_688: int;
  var {:pointer} Tmp_689: int;
  var {:pointer} sdv_600: int;
  var {:pointer} Tmp_691: int;
  var {:pointer} sdv_602: int;
  var {:scalar} Tmp_692: int;
  var {:pointer} sdv_604: int;
  var {:pointer} Tmp_693: int;
  var {:pointer} Tmp_694: int;
  var {:scalar} Tmp_695: int;
  var {:scalar} status_20: int;
  var {:pointer} Tmp_696: int;
  var {:pointer} pDevObj_1: int;
  var {:pointer} pDrvObj: int;
  var {:scalar} Tmp_699: int;
  var {:scalar} Tmp_700: int;
  var {:pointer} PDevExt_6: int;
  var {:pointer} hRegKey: int;
  var {:pointer} PSymName: int;
  var {:pointer} PpRegName: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_422: int;
  var vslice_dummy_var_423: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;

  anon0:
    call {:si_unique_call 1700} Tmp_685 := __HAVOC_malloc(20);
    call {:si_unique_call 1701} linkName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 1702} Tmp_688 := __HAVOC_malloc(20);
    call {:si_unique_call 1703} Tmp_699 := __HAVOC_malloc(20);
    call {:si_unique_call 1704} Tmp_700 := __HAVOC_malloc(20);
    PDevExt_6 := actual_PDevExt_6;
    hRegKey := actual_hRegKey;
    PSymName := actual_PSymName;
    PpRegName := actual_PpRegName;
    call {:si_unique_call 1705} Tmp_686 := __HAVOC_malloc(168);
    call {:si_unique_call 1706} Tmp_689 := __HAVOC_malloc(148);
    call {:si_unique_call 1707} vslice_dummy_var_414 := __HAVOC_malloc(8);
    call {:si_unique_call 1708} Tmp_691 := __HAVOC_malloc(164);
    call {:si_unique_call 1709} Tmp_693 := __HAVOC_malloc(60);
    call {:si_unique_call 1710} Tmp_694 := __HAVOC_malloc(36);
    call {:si_unique_call 1711} Tmp_696 := __HAVOC_malloc(44);
    call {:si_unique_call 1712} vslice_dummy_var_415 := __HAVOC_malloc(8);
    call {:si_unique_call 1713} vslice_dummy_var_416 := __HAVOC_malloc(44);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    havoc pDevObj_1;
    assume {:nonnull} pDevObj_1 != 0;
    assume pDevObj_1 > 0;
    havoc pDrvObj;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    call {:si_unique_call 1714} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    havoc Tmp_692;
    call {:si_unique_call 1715} sdv_600 := ExAllocatePoolWithTag(257, Tmp_692, -797279933);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    havoc Tmp_695;
    call {:si_unique_call 1716} sdv_RtlZeroMemory(0, Tmp_695);
    call {:si_unique_call 1717} sdv_604 := ExAllocatePoolWithTag(257, 258, -797279933);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_694 := strConst__li2bpl173;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_151;
    call {:si_unique_call 1718} status_20 := CyzGetRegistryKeyValue(hRegKey, Tmp_694, 18, vslice_dummy_var_151, 256);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_20 >= 0;
    goto L39;

  L39:
    call {:si_unique_call 1719} vslice_dummy_var_417 := corral_nondet();
    call {:si_unique_call 1720} vslice_dummy_var_418 := corral_nondet();
    call {:si_unique_call 1721} vslice_dummy_var_419 := corral_nondet();
    call {:si_unique_call 1722} vslice_dummy_var_412 := corral_nondet();
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_687;
    call {:si_unique_call 1723} sdv_602 := ExAllocatePoolWithTag(257, Tmp_687, -797279933);
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_684;
    call {:si_unique_call 1724} sdv_RtlZeroMemory(0, Tmp_684);
    call {:si_unique_call 1725} vslice_dummy_var_413 := corral_nondet();
    Tmp_693 := strConst__li2bpl187;
    call {:si_unique_call 1726} vslice_dummy_var_420 := CyzDbgPrintEx(4, Tmp_693);
    goto L69;

  L69:
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1727} sdv_ExFreePool(0);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto L70;

  L70:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_20 >= 0;
    goto L76;

  L76:
    Tmp_682 := status_20;
    return;

  anon19_Then:
    assume {:partition} 0 > status_20;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 1728} sdv_ExFreePool(0);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto L76;

  anon20_Then:
    goto L76;

  anon18_Then:
    goto L70;

  anon24_Then:
    status_20 := -1073741670;
    goto L69;

  anon17_Then:
    assume {:partition} 0 > status_20;
    Tmp_696 := strConst__li2bpl174;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_152;
    call {:si_unique_call 1729} status_20 := CyzGetRegistryKeyValue(hRegKey, Tmp_696, 22, vslice_dummy_var_152, 256);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_20 < 0;
    Tmp_691 := strConst__li2bpl185;
    call {:si_unique_call 1730} vslice_dummy_var_421 := CyzDbgPrintEx(14, Tmp_691);
    goto L69;

  anon21_Then:
    assume {:partition} 0 <= status_20;
    goto L39;

  anon23_Then:
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    assume {:nonnull} Tmp_685 != 0;
    assume Tmp_685 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    assume {:nonnull} Tmp_699 != 0;
    assume Tmp_699 > 0;
    call {:si_unique_call 1731} CyzLogError(pDrvObj, pDevObj_1, Tmp_699, Tmp_685, 0, 0, 0, 19, 0, -1073475576, 0, 0, 0, 0);
    Tmp_689 := strConst__li2bpl186;
    call {:si_unique_call 1732} vslice_dummy_var_422 := CyzDbgPrintEx(14, Tmp_689);
    status_20 := -1073741670;
    goto L69;

  anon22_Then:
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    assume {:nonnull} Tmp_700 != 0;
    assume Tmp_700 > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    assume {:nonnull} Tmp_688 != 0;
    assume Tmp_688 > 0;
    call {:si_unique_call 1733} CyzLogError(pDrvObj, pDevObj_1, Tmp_688, Tmp_700, 0, 0, 0, 19, 0, -1073475576, 0, 0, 0, 0);
    Tmp_686 := strConst__li2bpl116;
    call {:si_unique_call 1734} vslice_dummy_var_423 := CyzDbgPrintEx(14, Tmp_686);
    status_20 := -1073741670;
    goto L69;
}



procedure {:origName "CyzAddToAllDevs"} CyzAddToAllDevs(actual_PListEntry: int);
  modifies alloc, locked, queued, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzAddToAllDevs"} CyzAddToAllDevs(actual_PListEntry: int)
{
  var {:pointer} Tmp_701: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} PListEntry: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;

  anon0:
    call {:si_unique_call 1735} vslice_dummy_var_424 := __HAVOC_malloc(4);
    PListEntry := actual_PListEntry;
    call {:si_unique_call 1736} Tmp_701 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    call {:si_unique_call 1737} sdv_KeAcquireSpinLock(0, Tmp_701);
    assume {:nonnull} Tmp_701 != 0;
    assume Tmp_701 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 1738} vslice_dummy_var_425 := sdv_InsertTailList(AllDevObjs__CYZ_GLOBALS(CyzGlobals), PListEntry);
    call {:si_unique_call 1739} sdv_KeReleaseSpinLock(0, oldIrql_4);
    return;
}



procedure {:origName "SLIC_CyzCreateOpen_exit"} {:osmodel} SLIC_CyzCreateOpen_exit(actual_caller: int, actual_CyzCreateOpen_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_CyzCreateOpen_exit"} {:osmodel} SLIC_CyzCreateOpen_exit(actual_caller: int, actual_CyzCreateOpen_1: int)
{
  var {:pointer} caller: int;
  var {:scalar} CyzCreateOpen_1: int;

  anon0:
    caller := actual_caller;
    CyzCreateOpen_1 := actual_CyzCreateOpen_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} CyzCreateOpen_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 1740} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 1741} SLIC_ABORT_34_0(caller, CyzCreateOpen_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} CyzCreateOpen_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller_2: int);
  modifies queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_KeReleaseSpinLock_entry"} {:osmodel} SLIC_sdv_KeReleaseSpinLock_entry(actual_caller_2: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} locked != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} queued != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} markedPending == 0;
    queuedWithoutMarking := 1;
    goto L2;

  L2:
    locked := 0;
    return;

  anon8_Then:
    assume {:partition} markedPending != 0;
    goto L2;

  anon9_Then:
    assume {:partition} queued == 0;
    goto L2;

  anon7_Then:
    assume {:partition} locked == 0;
    goto L2;
}



procedure {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller_3: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_IoCallDriver_entry"} {:osmodel} SLIC_sdv_IoCallDriver_entry(actual_caller_3: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} stack_location == 1;
    call {:si_unique_call 1742} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} stack_location != 1;
    goto L2;
}



procedure {:origName "SLIC_PoCallDriver_entry"} {:osmodel} SLIC_PoCallDriver_entry(actual_caller_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_PoCallDriver_entry"} {:osmodel} SLIC_PoCallDriver_entry(actual_caller_4: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} stack_location == 1;
    call {:si_unique_call 1743} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} stack_location != 1;
    goto L2;
}



procedure {:origName "SLIC_CyzPnpDispatch_exit"} {:osmodel} SLIC_CyzPnpDispatch_exit(actual_caller_5: int, actual_CyzPnpDispatch_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_CyzPnpDispatch_exit"} {:osmodel} SLIC_CyzPnpDispatch_exit(actual_caller_5: int, actual_CyzPnpDispatch_1: int)
{
  var {:pointer} caller_5: int;
  var {:scalar} CyzPnpDispatch_1: int;

  anon0:
    caller_5 := actual_caller_5;
    CyzPnpDispatch_1 := actual_CyzPnpDispatch_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} CyzPnpDispatch_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 1744} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 1745} SLIC_ABORT_18_0(caller_5, CyzPnpDispatch_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} CyzPnpDispatch_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_7: int, actual_CyzFlush_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_26_0"} SLIC_ABORT_26_0(actual_caller_7: int, actual_CyzFlush_1: int)
{
  var {:pointer} caller_7: int;
  var {:scalar} CyzFlush_1: int;

  anon0:
    caller_7 := actual_caller_7;
    CyzFlush_1 := actual_CyzFlush_1;
    call {:si_unique_call 1746} SLIC_ERROR_ROUTINE(strConst__li2bpl189);
    return;
}



procedure {:origName "SLIC_CyzCleanup_exit"} {:osmodel} SLIC_CyzCleanup_exit(actual_caller_8: int, actual_CyzCleanup_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_CyzCleanup_exit"} {:osmodel} SLIC_CyzCleanup_exit(actual_caller_8: int, actual_CyzCleanup_1: int)
{
  var {:pointer} caller_8: int;
  var {:scalar} CyzCleanup_1: int;

  anon0:
    caller_8 := actual_caller_8;
    CyzCleanup_1 := actual_CyzCleanup_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} CyzCleanup_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 1747} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 1748} SLIC_ABORT_22_0(caller_8, CyzCleanup_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} CyzCleanup_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_9: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_containing_record_entry"} SLIC_sdv_containing_record_entry(actual_caller_9: int)
{

  anon0:
    call {:si_unique_call 1749} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    return;
}



procedure {:origName "SLIC_sdv_InsertTailList_entry"} {:osmodel} SLIC_sdv_InsertTailList_entry(actual_caller_10: int);
  modifies queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} queued == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_InsertTailList_entry"} {:osmodel} SLIC_sdv_InsertTailList_entry(actual_caller_10: int)
{

  anon0:
    queued := 1;
    return;
}



procedure {:origName "_sdv_init21"} {:osmodel} _sdv_init21();
  modifies SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} queued == 0;
  free ensures {:va_keep} yogi_error == 0;
  free ensures {:va_keep} stack_location == 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 0;
  free ensures {:va_keep} queuedWithoutMarking == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init21"} {:osmodel} _sdv_init21()
{

  anon0:
    SLAM_guard_S_0 := SLAM_guard_S_0_init;
    stack_location := 0;
    markedPending := 0;
    queuedWithoutMarking := 0;
    queued := 0;
    locked := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_CyzFlush_exit"} {:osmodel} SLIC_CyzFlush_exit(actual_caller_11: int, actual_CyzFlush_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_CyzFlush_exit"} {:osmodel} SLIC_CyzFlush_exit(actual_caller_11: int, actual_CyzFlush_2: int)
{
  var {:pointer} caller_11: int;
  var {:scalar} CyzFlush_2: int;

  anon0:
    caller_11 := actual_caller_11;
    CyzFlush_2 := actual_CyzFlush_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} CyzFlush_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 1750} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 1751} SLIC_ABORT_26_0(caller_11, CyzFlush_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} CyzFlush_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_34_0"} SLIC_ABORT_34_0(actual_caller_12: int, actual_CyzCreateOpen_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_34_0"} SLIC_ABORT_34_0(actual_caller_12: int, actual_CyzCreateOpen_2: int)
{
  var {:pointer} caller_12: int;
  var {:scalar} CyzCreateOpen_2: int;

  anon0:
    caller_12 := actual_caller_12;
    CyzCreateOpen_2 := actual_CyzCreateOpen_2;
    call {:si_unique_call 1752} SLIC_ERROR_ROUTINE(strConst__li2bpl189);
    return;
}



procedure {:origName "SLIC_ABORT_32_0"} SLIC_ABORT_32_0(actual_caller_13: int, actual_CyzClose_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_32_0"} SLIC_ABORT_32_0(actual_caller_13: int, actual_CyzClose_1: int)
{
  var {:pointer} caller_13: int;
  var {:scalar} CyzClose_1: int;

  anon0:
    caller_13 := actual_caller_13;
    CyzClose_1 := actual_CyzClose_1;
    call {:si_unique_call 1753} SLIC_ERROR_ROUTINE(strConst__li2bpl189);
    return;
}



procedure {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_15: int, actual_CyzPowerDispatch_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_15: int, actual_CyzPowerDispatch_1: int)
{
  var {:pointer} caller_15: int;
  var {:scalar} CyzPowerDispatch_1: int;

  anon0:
    caller_15 := actual_caller_15;
    CyzPowerDispatch_1 := actual_CyzPowerDispatch_1;
    call {:si_unique_call 1754} SLIC_ERROR_ROUTINE(strConst__li2bpl189);
    return;
}



procedure {:origName "SLIC_sdv_IoMarkIrpPending_entry"} {:osmodel} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_16: int);
  modifies markedPending;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_IoMarkIrpPending_entry"} {:osmodel} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_16: int)
{

  anon0:
    markedPending := 1;
    return;
}



procedure {:origName "SLIC_sdv_KeAcquireSpinLock_entry"} {:osmodel} SLIC_sdv_KeAcquireSpinLock_entry(actual_caller_18: int);
  modifies locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} locked == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_KeAcquireSpinLock_entry"} {:osmodel} SLIC_sdv_KeAcquireSpinLock_entry(actual_caller_18: int)
{

  anon0:
    locked := 1;
    return;
}



procedure {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_19: int, actual_CyzIoControl_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_24_0"} SLIC_ABORT_24_0(actual_caller_19: int, actual_CyzIoControl_1: int)
{
  var {:pointer} caller_19: int;
  var {:scalar} CyzIoControl_1: int;

  anon0:
    caller_19 := actual_caller_19;
    CyzIoControl_1 := actual_CyzIoControl_1;
    call {:si_unique_call 1755} SLIC_ERROR_ROUTINE(strConst__li2bpl189);
    return;
}



procedure {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_21: int, actual_CyzPnpDispatch_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_21: int, actual_CyzPnpDispatch_2: int)
{
  var {:pointer} caller_21: int;
  var {:scalar} CyzPnpDispatch_2: int;

  anon0:
    caller_21 := actual_caller_21;
    CyzPnpDispatch_2 := actual_CyzPnpDispatch_2;
    call {:si_unique_call 1756} SLIC_ERROR_ROUTINE(strConst__li2bpl189);
    return;
}



procedure {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} {:osmodel} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_22: int);
  modifies stack_location;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} stack_location == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_sdv_IoSkipCurrentIrpStackLocation_entry"} {:osmodel} SLIC_sdv_IoSkipCurrentIrpStackLocation_entry(actual_caller_22: int)
{

  anon0:
    stack_location := 1;
    return;
}



procedure {:origName "SLIC_CyzWrite_exit"} {:osmodel} SLIC_CyzWrite_exit(actual_caller_23: int, actual_CyzWrite_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_CyzWrite_exit"} {:osmodel} SLIC_CyzWrite_exit(actual_caller_23: int, actual_CyzWrite_1: int)
{
  var {:pointer} caller_23: int;
  var {:scalar} CyzWrite_1: int;

  anon0:
    caller_23 := actual_caller_23;
    CyzWrite_1 := actual_CyzWrite_1;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} CyzWrite_1 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 1757} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 1758} SLIC_ABORT_28_0(caller_23, CyzWrite_1);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} CyzWrite_1 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_24: int, actual_CyzCleanup_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_24: int, actual_CyzCleanup_2: int)
{
  var {:pointer} caller_24: int;
  var {:scalar} CyzCleanup_2: int;

  anon0:
    caller_24 := actual_caller_24;
    CyzCleanup_2 := actual_CyzCleanup_2;
    call {:si_unique_call 1759} SLIC_ERROR_ROUTINE(strConst__li2bpl189);
    return;
}



procedure {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_25: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_RemoveHeadList_entry"} SLIC_RemoveHeadList_entry(actual_caller_25: int)
{

  anon0:
    call {:si_unique_call 1760} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    return;
}



procedure {:origName "SLIC_CyzIoControl_exit"} {:osmodel} SLIC_CyzIoControl_exit(actual_caller_26: int, actual_CyzIoControl_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_CyzIoControl_exit"} {:osmodel} SLIC_CyzIoControl_exit(actual_caller_26: int, actual_CyzIoControl_2: int)
{
  var {:pointer} caller_26: int;
  var {:scalar} CyzIoControl_2: int;

  anon0:
    caller_26 := actual_caller_26;
    CyzIoControl_2 := actual_CyzIoControl_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} CyzIoControl_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 1761} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 1762} SLIC_ABORT_24_0(caller_26, CyzIoControl_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} CyzIoControl_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ABORT_30_0"} SLIC_ABORT_30_0(actual_caller_27: int, actual_CyzRead_1: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_30_0"} SLIC_ABORT_30_0(actual_caller_27: int, actual_CyzRead_1: int)
{
  var {:pointer} caller_27: int;
  var {:scalar} CyzRead_1: int;

  anon0:
    caller_27 := actual_caller_27;
    CyzRead_1 := actual_CyzRead_1;
    call {:si_unique_call 1763} SLIC_ERROR_ROUTINE(strConst__li2bpl189);
    return;
}



procedure {:origName "SLIC_ABORT_28_0"} SLIC_ABORT_28_0(actual_caller_28: int, actual_CyzWrite_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ABORT_28_0"} SLIC_ABORT_28_0(actual_caller_28: int, actual_CyzWrite_2: int)
{
  var {:pointer} caller_28: int;
  var {:scalar} CyzWrite_2: int;

  anon0:
    caller_28 := actual_caller_28;
    CyzWrite_2 := actual_CyzWrite_2;
    call {:si_unique_call 1764} SLIC_ERROR_ROUTINE(strConst__li2bpl189);
    return;
}



procedure {:origName "SLIC_CyzRead_exit"} {:osmodel} SLIC_CyzRead_exit(actual_caller_30: int, actual_CyzRead_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_CyzRead_exit"} {:osmodel} SLIC_CyzRead_exit(actual_caller_30: int, actual_CyzRead_2: int)
{
  var {:pointer} caller_30: int;
  var {:scalar} CyzRead_2: int;

  anon0:
    caller_30 := actual_caller_30;
    CyzRead_2 := actual_CyzRead_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} CyzRead_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 1765} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 1766} SLIC_ABORT_30_0(caller_30, CyzRead_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} CyzRead_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_CyzPowerDispatch_exit"} {:osmodel} SLIC_CyzPowerDispatch_exit(actual_caller_31: int, actual_CyzPowerDispatch_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_CyzPowerDispatch_exit"} {:osmodel} SLIC_CyzPowerDispatch_exit(actual_caller_31: int, actual_CyzPowerDispatch_2: int)
{
  var {:pointer} caller_31: int;
  var {:scalar} CyzPowerDispatch_2: int;

  anon0:
    caller_31 := actual_caller_31;
    CyzPowerDispatch_2 := actual_CyzPowerDispatch_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} CyzPowerDispatch_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 1767} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 1768} SLIC_ABORT_20_0(caller_31, CyzPowerDispatch_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} CyzPowerDispatch_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "SLIC_KeInsertQueueDpc_exit"} {:osmodel} SLIC_KeInsertQueueDpc_exit(actual_caller_32: int, actual_KeInsertQueueDpc_1: int);
  modifies queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_KeInsertQueueDpc_exit"} {:osmodel} SLIC_KeInsertQueueDpc_exit(actual_caller_32: int, actual_KeInsertQueueDpc_1: int)
{
  var {:scalar} KeInsertQueueDpc_1: int;

  anon0:
    KeInsertQueueDpc_1 := actual_KeInsertQueueDpc_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} KeInsertQueueDpc_1 != 0;
    queued := 1;
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} KeInsertQueueDpc_1 == 0;
    goto L2;
}



procedure {:origName "SLIC_CyzClose_exit"} {:osmodel} SLIC_CyzClose_exit(actual_caller_33: int, actual_CyzClose_2: int);
  modifies yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_CyzClose_exit"} {:osmodel} SLIC_CyzClose_exit(actual_caller_33: int, actual_CyzClose_2: int)
{
  var {:pointer} caller_33: int;
  var {:scalar} CyzClose_2: int;

  anon0:
    caller_33 := actual_caller_33;
    CyzClose_2 := actual_CyzClose_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} CyzClose_2 == 259;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} queuedWithoutMarking == 0;
    goto L6;

  L6:
    call {:si_unique_call 1769} SLIC_EXIT_ROUTINE(strConst__li2bpl188);
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon8_Then:
    assume {:partition} queuedWithoutMarking != 0;
    call {:si_unique_call 1770} SLIC_ABORT_32_0(caller_33, CyzClose_2);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  anon9_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon7_Then:
    assume {:partition} CyzClose_2 != 259;
    goto L6;
}



procedure {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "SLIC_EXIT_ROUTINE"} SLIC_EXIT_ROUTINE(actual_msg_1: int)
{

  anon0:
    assume false;
    return;
}



procedure {:origName "CyzClrRTS"} CyzClrRTS(actual_Context_21: int) returns (Tmp_703: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_703 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzClrRTS"} CyzClrRTS(actual_Context_21: int) returns (Tmp_703: int)
{
  var {:pointer} Tmp_704: int;
  var {:scalar} Tmp_705: int;
  var {:pointer} Extension_22: int;
  var {:scalar} Tmp_706: int;
  var {:scalar} rs_3: int;
  var {:pointer} Context_21: int;
  var vslice_dummy_var_426: int;

  anon0:
    Context_21 := actual_Context_21;
    call {:si_unique_call 1771} Tmp_704 := __HAVOC_malloc(124);
    Extension_22 := Context_21;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_705;
    Tmp_704 := strConst__li2bpl190;
    call {:si_unique_call 1772} vslice_dummy_var_426 := CyzDbgPrintEx(13, Tmp_704);
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    call {:si_unique_call 1773} rs_3 := corral_nondet();
    rs_3 := BAND(rs_3, BNOT(1));
    Tmp_706 := BOR(rs_3, 0);
    call {:si_unique_call 1774} CyzIssueCmd(Extension_22, 4, Tmp_706, 0);
    Tmp_703 := 0;
    return;
}



procedure {:origName "CyzClrDTR"} CyzClrDTR(actual_Context_22: int) returns (Tmp_708: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_708 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzClrDTR"} CyzClrDTR(actual_Context_22: int) returns (Tmp_708: int)
{
  var {:pointer} Tmp_709: int;
  var {:scalar} Tmp_711: int;
  var {:pointer} Extension_23: int;
  var {:scalar} Tmp_712: int;
  var {:scalar} rs_4: int;
  var {:pointer} Context_22: int;
  var vslice_dummy_var_427: int;

  anon0:
    Context_22 := actual_Context_22;
    call {:si_unique_call 1775} Tmp_709 := __HAVOC_malloc(124);
    Extension_23 := Context_22;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc Tmp_711;
    Tmp_709 := strConst__li2bpl191;
    call {:si_unique_call 1776} vslice_dummy_var_427 := CyzDbgPrintEx(13, Tmp_709);
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    call {:si_unique_call 1777} rs_4 := corral_nondet();
    rs_4 := BAND(rs_4, BNOT(4));
    Tmp_712 := BOR(rs_4, 0);
    call {:si_unique_call 1778} CyzIssueCmd(Extension_23, 4, Tmp_712, 0);
    Tmp_708 := 0;
    return;
}



procedure {:origName "CyzSetupNewHandFlow"} CyzSetupNewHandFlow(actual_Extension_24: int, actual_NewHandFlow: int) returns (Tmp_713: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_713 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetupNewHandFlow"} CyzSetupNewHandFlow(actual_Extension_24: int, actual_NewHandFlow: int) returns (Tmp_713: int)
{
  var {:scalar} Tmp_714: int;
  var {:scalar} Tmp_715: int;
  var {:scalar} Tmp_716: int;
  var {:pointer} Tmp_717: int;
  var {:pointer} Tmp_718: int;
  var {:scalar} Tmp_719: int;
  var {:scalar} New: int;
  var {:scalar} Tmp_720: int;
  var {:pointer} Tmp_721: int;
  var {:scalar} Tmp_722: int;
  var {:scalar} Tmp_723: int;
  var {:scalar} Tmp_724: int;
  var {:scalar} Tmp_725: int;
  var {:scalar} Tmp_726: int;
  var {:scalar} sdv_625: int;
  var {:scalar} Tmp_727: int;
  var {:scalar} Tmp_728: int;
  var {:pointer} Tmp_729: int;
  var {:scalar} Tmp_730: int;
  var {:scalar} Tmp_731: int;
  var {:pointer} Tmp_732: int;
  var {:scalar} Tmp_733: int;
  var {:pointer} Tmp_734: int;
  var {:scalar} Tmp_735: int;
  var {:scalar} Tmp_736: int;
  var {:scalar} Tmp_738: int;
  var {:scalar} sdv_642: int;
  var {:scalar} hw: int;
  var {:scalar} Tmp_739: int;
  var {:scalar} Tmp_740: int;
  var {:scalar} Tmp_741: int;
  var {:pointer} Tmp_742: int;
  var {:scalar} Tmp_743: int;
  var {:scalar} Tmp_744: int;
  var {:pointer} Tmp_745: int;
  var {:scalar} Tmp_746: int;
  var {:pointer} Tmp_747: int;
  var {:pointer} Tmp_748: int;
  var {:pointer} Tmp_749: int;
  var {:scalar} Tmp_750: int;
  var {:pointer} Extension_24: int;
  var {:pointer} NewHandFlow: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;
  var vslice_dummy_var_434: int;
  var vslice_dummy_var_435: int;
  var vslice_dummy_var_436: int;
  var vslice_dummy_var_437: int;
  var vslice_dummy_var_438: int;
  var vslice_dummy_var_439: int;
  var vslice_dummy_var_440: int;
  var vslice_dummy_var_441: int;
  var vslice_dummy_var_442: int;
  var vslice_dummy_var_443: int;
  var vslice_dummy_var_444: int;
  var vslice_dummy_var_445: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;

  anon0:
    call {:si_unique_call 1779} New := __HAVOC_malloc(16);
    Extension_24 := actual_Extension_24;
    NewHandFlow := actual_NewHandFlow;
    call {:si_unique_call 1780} Tmp_717 := __HAVOC_malloc(152);
    call {:si_unique_call 1781} Tmp_718 := __HAVOC_malloc(200);
    call {:si_unique_call 1782} Tmp_721 := __HAVOC_malloc(200);
    call {:si_unique_call 1783} Tmp_729 := __HAVOC_malloc(228);
    call {:si_unique_call 1784} Tmp_732 := __HAVOC_malloc(200);
    call {:si_unique_call 1785} Tmp_734 := __HAVOC_malloc(196);
    call {:si_unique_call 1786} Tmp_742 := __HAVOC_malloc(84);
    call {:si_unique_call 1787} Tmp_745 := __HAVOC_malloc(200);
    call {:si_unique_call 1788} Tmp_747 := __HAVOC_malloc(196);
    call {:si_unique_call 1789} Tmp_748 := __HAVOC_malloc(200);
    call {:si_unique_call 1790} Tmp_749 := __HAVOC_malloc(200);
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} NewHandFlow != 0;
    assume NewHandFlow > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_725;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_730;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} Tmp_725 == Tmp_730;
    goto L13;

  L13:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_750;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_726;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} Tmp_750 == Tmp_726;
    goto L18;

  L18:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_724;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_741;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} Tmp_724 == Tmp_741;
    goto L23;

  L23:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_727;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_716;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} Tmp_727 == Tmp_716;
    goto L28;

  L28:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_736;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_728;
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} Tmp_736 == Tmp_728;
    goto L33;

  L33:
    call {:si_unique_call 1791} CyzIssueCmd(Extension_24, 3, 0, 0);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    Tmp_713 := 0;
    return;

  anon117_Then:
    assume {:partition} Tmp_736 != Tmp_728;
    goto L29;

  L29:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    call {:si_unique_call 1792} hw := corral_nondet();
    hw := BOR(hw, 2048);
    goto L49;

  L49:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    call {:si_unique_call 1793} hw := corral_nondet();
    hw := BOR(hw, 512);
    goto L61;

  L61:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    call {:si_unique_call 1794} hw := corral_nondet();
    hw := BOR(hw, 256);
    goto L33;

  anon89_Then:
    call {:si_unique_call 1795} hw := corral_nondet();
    hw := BAND(hw, BNOT(256));
    goto L33;

  anon88_Then:
    call {:si_unique_call 1796} hw := corral_nondet();
    hw := BAND(hw, BNOT(512));
    goto L61;

  anon87_Then:
    call {:si_unique_call 1797} hw := corral_nondet();
    hw := BAND(hw, BNOT(2048));
    goto L49;

  anon86_Then:
    goto L29;

  anon116_Then:
    assume {:partition} Tmp_727 != Tmp_716;
    goto L24;

  L24:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1798} CyzProdXonXoff(Extension_24, 1);
    goto L28;

  anon90_Then:
    goto L28;

  anon85_Then:
    goto L28;

  anon84_Then:
    goto L24;

  anon115_Then:
    assume {:partition} Tmp_724 != Tmp_741;
    goto L19;

  L19:
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1799} CyzProdXonXoff(Extension_24, 0);
    goto L23;

  anon92_Then:
    goto L23;

  anon83_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1800} CyzProdXonXoff(Extension_24, 1);
    goto L23;

  anon91_Then:
    goto L23;

  anon82_Then:
    goto L19;

  anon113_Then:
    assume {:partition} Tmp_750 != Tmp_726;
    goto L14;

  L14:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_739;
    Tmp_742 := strConst__li2bpl194;
    call {:si_unique_call 1801} vslice_dummy_var_438 := CyzDbgPrintEx(13, Tmp_742);
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_746;
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} Tmp_746 == 128;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_714;
    Tmp_721 := strConst__li2bpl195;
    call {:si_unique_call 1802} vslice_dummy_var_439 := CyzDbgPrintEx(13, Tmp_721);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1803} vslice_dummy_var_440 := CyzSetRTS(Extension_24);
    goto L18;

  anon95_Then:
    goto L18;

  anon94_Then:
    call {:si_unique_call 1804} vslice_dummy_var_428 := CyzSetRTS(Extension_24);
    goto L18;

  anon93_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_719;
    Tmp_747 := strConst__li2bpl196;
    call {:si_unique_call 1805} vslice_dummy_var_441 := CyzDbgPrintEx(13, Tmp_747);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1806} vslice_dummy_var_442 := CyzClrRTS(Extension_24);
    goto L18;

  anon114_Then:
    assume {:partition} Tmp_746 != 128;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_723;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} Tmp_723 == 64;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_733;
    Tmp_718 := strConst__li2bpl197;
    call {:si_unique_call 1807} vslice_dummy_var_443 := CyzDbgPrintEx(13, Tmp_718);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L134;

  L134:
    call {:si_unique_call 1808} vslice_dummy_var_429 := CyzSetRTS(Extension_24);
    goto L18;

  anon96_Then:
    goto L134;

  anon118_Then:
    assume {:partition} Tmp_723 != 64;
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_715;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} Tmp_715 == 192;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_743;
    Tmp_729 := strConst__li2bpl198;
    call {:si_unique_call 1809} vslice_dummy_var_444 := CyzDbgPrintEx(13, Tmp_729);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L145;

  L145:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    goto L156;

  L156:
    call {:si_unique_call 1810} vslice_dummy_var_430 := CyzSetRTS(Extension_24);
    goto L18;

  anon120_Then:
    call {:si_unique_call 1811} sdv_642 := CyzAmountInTxBuffer(Extension_24);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} sdv_642 == 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    call {:si_unique_call 1812} sdv_625 := sdv_IsListEmpty(0);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} sdv_625 != 0;
    goto L167;

  L167:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1813} vslice_dummy_var_445 := CyzPerhapsLowerRTS(Extension_24);
    goto L18;

  anon102_Then:
    assume {:partition} sdv_625 == 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    goto L167;

  anon103_Then:
    goto L156;

  anon101_Then:
    goto L156;

  anon100_Then:
    goto L156;

  anon99_Then:
    assume {:partition} sdv_642 != 0;
    goto L156;

  anon98_Then:
    goto L145;

  anon119_Then:
    assume {:partition} Tmp_715 != 192;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_735;
    Tmp_732 := strConst__li2bpl197;
    call {:si_unique_call 1814} vslice_dummy_var_446 := CyzDbgPrintEx(13, Tmp_732);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L171;

  L171:
    call {:si_unique_call 1815} vslice_dummy_var_431 := CyzClrRTS(Extension_24);
    goto L18;

  anon97_Then:
    goto L171;

  anon81_Then:
    goto L14;

  anon111_Then:
    assume {:partition} Tmp_725 != Tmp_730;
    goto L9;

  L9:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_722;
    Tmp_717 := strConst__li2bpl192;
    call {:si_unique_call 1816} vslice_dummy_var_435 := CyzDbgPrintEx(13, Tmp_717);
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:nonnull} New != 0;
    assume New > 0;
    havoc Tmp_738;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} Tmp_738 == 2;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    assume {:nonnull} New != 0;
    assume New > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_744;
    Tmp_748 := strConst__li2bpl193;
    call {:si_unique_call 1817} vslice_dummy_var_436 := CyzDbgPrintEx(13, Tmp_748);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1818} vslice_dummy_var_437 := CyzSetDTR(Extension_24);
    goto L13;

  anon109_Then:
    goto L13;

  anon108_Then:
    call {:si_unique_call 1819} vslice_dummy_var_432 := CyzSetDTR(Extension_24);
    goto L13;

  anon107_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_731;
    Tmp_734 := strConst__li2bpl199;
    call {:si_unique_call 1820} vslice_dummy_var_447 := CyzDbgPrintEx(13, Tmp_734);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    call {:si_unique_call 1821} vslice_dummy_var_448 := CyzClrDTR(Extension_24);
    goto L13;

  anon112_Then:
    assume {:partition} Tmp_738 != 2;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_740;
    Tmp_745 := strConst__li2bpl200;
    call {:si_unique_call 1822} vslice_dummy_var_449 := CyzDbgPrintEx(13, Tmp_745);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L209;

  L209:
    call {:si_unique_call 1823} vslice_dummy_var_433 := CyzSetDTR(Extension_24);
    goto L13;

  anon106_Then:
    goto L209;

  anon104_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc Tmp_720;
    Tmp_749 := strConst__li2bpl201;
    call {:si_unique_call 1824} vslice_dummy_var_450 := CyzDbgPrintEx(13, Tmp_749);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L217;

  L217:
    call {:si_unique_call 1825} vslice_dummy_var_434 := CyzClrDTR(Extension_24);
    goto L13;

  anon105_Then:
    goto L217;

  anon110_Then:
    goto L9;
}



procedure {:origName "CyzHandleReducedIntBuffer"} CyzHandleReducedIntBuffer(actual_Extension_25: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzHandleReducedIntBuffer"} CyzHandleReducedIntBuffer(actual_Extension_25: int)
{
  var {:pointer} Extension_25: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;

  anon0:
    call {:si_unique_call 1826} vslice_dummy_var_451 := __HAVOC_malloc(4);
    Extension_25 := actual_Extension_25;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 1827} vslice_dummy_var_452 := CyzSetDTR(Extension_25);
    goto L6;

  L6:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    call {:si_unique_call 1828} vslice_dummy_var_453 := CyzSetRTS(Extension_25);
    goto L11;

  L11:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1829} CyzProdXonXoff(Extension_25, 1);
    goto L1;

  L1:
    return;

  anon15_Then:
    goto L1;

  anon14_Then:
    goto L11;

  anon13_Then:
    goto L6;

  anon12_Then:
    goto L1;

  anon11_Then:
    goto L1;
}



procedure {:origName "CyzSetDTR"} CyzSetDTR(actual_Context_23: int) returns (Tmp_753: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_753 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetDTR"} CyzSetDTR(actual_Context_23: int) returns (Tmp_753: int)
{
  var {:scalar} Tmp_754: int;
  var {:pointer} Tmp_755: int;
  var {:pointer} Extension_26: int;
  var {:scalar} Tmp_757: int;
  var {:scalar} rs_5: int;
  var {:pointer} Context_23: int;
  var vslice_dummy_var_454: int;

  anon0:
    Context_23 := actual_Context_23;
    call {:si_unique_call 1830} Tmp_755 := __HAVOC_malloc(120);
    Extension_26 := Context_23;
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    havoc Tmp_754;
    Tmp_755 := strConst__li2bpl202;
    call {:si_unique_call 1831} vslice_dummy_var_454 := CyzDbgPrintEx(13, Tmp_755);
    assume {:nonnull} Extension_26 != 0;
    assume Extension_26 > 0;
    call {:si_unique_call 1832} rs_5 := corral_nondet();
    rs_5 := BOR(rs_5, 4);
    Tmp_757 := BOR(rs_5, 0);
    call {:si_unique_call 1833} CyzIssueCmd(Extension_26, 4, Tmp_757, 0);
    Tmp_753 := 0;
    return;
}



procedure {:origName "CyzProdXonXoff"} CyzProdXonXoff(actual_Extension_27: int, actual_SendXon: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzProdXonXoff"} CyzProdXonXoff(actual_Extension_27: int, actual_SendXon: int)
{
  var {:pointer} Extension_27: int;
  var {:scalar} SendXon: int;
  var vslice_dummy_var_455: int;

  anon0:
    call {:si_unique_call 1834} vslice_dummy_var_455 := __HAVOC_malloc(4);
    Extension_27 := actual_Extension_27;
    SendXon := actual_SendXon;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} SendXon != 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} SendXon == 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    assume {:nonnull} Extension_27 != 0;
    assume Extension_27 > 0;
    goto L1;
}



procedure {:origName "CyzTurnOffBreak"} CyzTurnOffBreak(actual_Context_24: int) returns (Tmp_760: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_760 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzTurnOffBreak"} CyzTurnOffBreak(actual_Context_24: int) returns (Tmp_760: int)
{
  var {:pointer} Extension_28: int;
  var {:pointer} Context_24: int;
  var vslice_dummy_var_456: int;

  anon0:
    Context_24 := actual_Context_24;
    Extension_28 := Context_24;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    call {:si_unique_call 1835} CyzIssueCmd(Extension_28, 68, 0, 0);
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto L14;

  L14:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    call {:si_unique_call 1836} vslice_dummy_var_456 := CyzPerhapsLowerRTS(Extension_28);
    goto L7;

  L7:
    Tmp_760 := 0;
    return;

  anon15_Then:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L19;

  L19:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L14;

  anon13_Then:
    goto L7;

  anon11_Then:
    assume {:nonnull} Extension_28 != 0;
    assume Extension_28 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto L19;

  anon12_Then:
    goto L14;

  anon14_Then:
    goto L7;
}



procedure {:origName "CyzTurnOnBreak"} CyzTurnOnBreak(actual_Context_25: int) returns (Tmp_762: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_762 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzTurnOnBreak"} CyzTurnOnBreak(actual_Context_25: int) returns (Tmp_762: int)
{
  var {:scalar} Tmp_764: int;
  var {:pointer} Extension_29: int;
  var {:pointer} Context_25: int;
  var vslice_dummy_var_457: int;

  anon0:
    Context_25 := actual_Context_25;
    Extension_29 := Context_25;
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    havoc Tmp_764;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Tmp_764 == 192;
    call {:si_unique_call 1837} vslice_dummy_var_457 := CyzSetRTS(Extension_29);
    goto L8;

  L8:
    call {:si_unique_call 1838} CyzIssueCmd(Extension_29, 67, 0, 0);
    assume {:nonnull} Extension_29 != 0;
    assume Extension_29 > 0;
    Tmp_762 := 0;
    return;

  anon3_Then:
    assume {:partition} Tmp_764 != 192;
    goto L8;
}



procedure {:origName "CyzSetRTS"} CyzSetRTS(actual_Context_26: int) returns (Tmp_765: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_765 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetRTS"} CyzSetRTS(actual_Context_26: int) returns (Tmp_765: int)
{
  var {:scalar} Tmp_767: int;
  var {:pointer} Tmp_768: int;
  var {:pointer} Extension_30: int;
  var {:scalar} Tmp_769: int;
  var {:scalar} rs_6: int;
  var {:pointer} Context_26: int;
  var vslice_dummy_var_458: int;

  anon0:
    Context_26 := actual_Context_26;
    call {:si_unique_call 1839} Tmp_768 := __HAVOC_malloc(120);
    Extension_30 := Context_26;
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    havoc Tmp_769;
    Tmp_768 := strConst__li2bpl203;
    call {:si_unique_call 1840} vslice_dummy_var_458 := CyzDbgPrintEx(13, Tmp_768);
    assume {:nonnull} Extension_30 != 0;
    assume Extension_30 > 0;
    call {:si_unique_call 1841} rs_6 := corral_nondet();
    rs_6 := BOR(rs_6, 1);
    Tmp_767 := BOR(rs_6, 0);
    call {:si_unique_call 1842} CyzIssueCmd(Extension_30, 4, Tmp_767, 0);
    Tmp_765 := 0;
    return;
}



procedure {:origName "CyzPretendXoff"} CyzPretendXoff(actual_Context_27: int) returns (Tmp_770: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} Tmp_770 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzPretendXoff"} CyzPretendXoff(actual_Context_27: int) returns (Tmp_770: int)
{
  var {:scalar} Tmp_771: int;
  var {:scalar} sdv_655: int;
  var {:pointer} Extension_31: int;
  var {:pointer} Context_27: int;

  anon0:
    Context_27 := actual_Context_27;
    Extension_31 := Context_27;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    havoc Tmp_771;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} Tmp_771 == 192;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    call {:si_unique_call 1843} sdv_655 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_31), 0, 0, Extension_31);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} sdv_655 != 0;
    assume {:nonnull} Extension_31 != 0;
    assume Extension_31 > 0;
    goto L8;

  L8:
    Tmp_770 := 0;
    return;

  anon5_Then:
    assume {:partition} sdv_655 == 0;
    goto L8;

  anon6_Then:
    assume {:partition} Tmp_771 != 192;
    goto L8;
}



procedure {:origName "CyzSetHandFlow"} CyzSetHandFlow(actual_Context_28: int) returns (Tmp_778: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_778 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetHandFlow"} CyzSetHandFlow(actual_Context_28: int) returns (Tmp_778: int)
{
  var {:pointer} S_12: int;
  var {:pointer} HandFlow_1: int;
  var {:pointer} Extension_33: int;
  var {:pointer} Context_28: int;
  var vslice_dummy_var_459: int;
  var vslice_dummy_var_460: int;

  anon0:
    Context_28 := actual_Context_28;
    S_12 := Context_28;
    assume {:nonnull} S_12 != 0;
    assume S_12 > 0;
    havoc Extension_33;
    assume {:nonnull} S_12 != 0;
    assume S_12 > 0;
    havoc HandFlow_1;
    call {:si_unique_call 1844} vslice_dummy_var_460 := CyzSetupNewHandFlow(Extension_33, HandFlow_1);
    call {:si_unique_call 1845} vslice_dummy_var_459 := CyzHandleModemUpdate#1(Extension_33, 0, 0);
    Tmp_778 := 0;
    return;
}



procedure {:origName "CyzPretendXon"} CyzPretendXon(actual_Context_29: int) returns (Tmp_780: int);
  free ensures {:va_keep} Tmp_780 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzPretendXon"} CyzPretendXon(actual_Context_29: int) returns (Tmp_780: int)
{
  var {:pointer} Extension_34: int;
  var {:pointer} Context_29: int;

  anon0:
    Context_29 := actual_Context_29;
    Extension_34 := Context_29;
    assume {:nonnull} Extension_34 != 0;
    assume Extension_34 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Extension_34 != 0;
    assume Extension_34 > 0;
    goto L6;

  L6:
    Tmp_780 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "CyzPerhapsLowerRTS"} CyzPerhapsLowerRTS(actual_Context_30: int) returns (Tmp_782: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_782 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzPerhapsLowerRTS"} CyzPerhapsLowerRTS(actual_Context_30: int) returns (Tmp_782: int)
{
  var {:scalar} sdv_662: int;
  var {:scalar} sdv_663: int;
  var {:pointer} Extension_35: int;
  var {:scalar} sdv_665: int;
  var {:scalar} Tmp_783: int;
  var {:pointer} Context_30: int;
  var vslice_dummy_var_461: int;

  anon0:
    Context_30 := actual_Context_30;
    Extension_35 := Context_30;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    havoc Tmp_783;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} Tmp_783 == 192;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    call {:si_unique_call 1846} sdv_662 := sdv_IsListEmpty(0);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} sdv_662 != 0;
    goto L16;

  L16:
    call {:si_unique_call 1847} sdv_663 := CyzAmountInTxBuffer(Extension_35);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} sdv_663 != 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    call {:si_unique_call 1848} sdv_665 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_35), 0, 0, Extension_35);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_665 != 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto L7;

  L7:
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    Tmp_782 := 0;
    return;

  anon23_Then:
    assume {:partition} sdv_665 == 0;
    goto L7;

  anon22_Then:
    assume {:partition} sdv_663 == 0;
    call {:si_unique_call 1849} vslice_dummy_var_461 := CyzClrRTS(Extension_35);
    goto L7;

  anon20_Then:
    assume {:partition} sdv_662 == 0;
    assume {:nonnull} Extension_35 != 0;
    assume Extension_35 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L16;

  anon21_Then:
    goto L7;

  anon19_Then:
    goto L7;

  anon18_Then:
    goto L7;

  anon17_Then:
    goto L7;

  anon24_Then:
    assume {:partition} Tmp_783 != 192;
    goto L7;
}



procedure {:origName "_sdv_init14"} _sdv_init14();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init14"} _sdv_init14()
{
  var vslice_dummy_var_462: int;

  anon0:
    call {:si_unique_call 1850} vslice_dummy_var_462 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzStartPurge"} CyzStartPurge(actual_Extension_36: int) returns (Tmp_787: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, stack_location, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_787 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzStartPurge"} CyzStartPurge(actual_Extension_36: int) returns (Tmp_787: int)
{
  var {:pointer} Tmp_788: int;
  var {:pointer} Tmp_789: int;
  var {:scalar} Mask_2: int;
  var {:pointer} Tmp_790: int;
  var {:scalar} OldIrql_6: int;
  var {:pointer} NewIrp_2: int;
  var {:pointer} Tmp_791: int;
  var {:scalar} pollIrql_8: int;
  var {:pointer} Tmp_792: int;
  var {:pointer} Extension_36: int;
  var vslice_dummy_var_463: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;

  anon0:
    call {:si_unique_call 1851} NewIrp_2 := __HAVOC_malloc(4);
    Extension_36 := actual_Extension_36;
    goto L5;

  L5:
    call {:si_unique_call 1852} Tmp_788, Tmp_789, Mask_2, Tmp_790, OldIrql_6, Tmp_791, pollIrql_8, Tmp_792, vslice_dummy_var_463 := CyzStartPurge_loop_L5(Tmp_788, Tmp_789, Mask_2, Tmp_790, OldIrql_6, NewIrp_2, Tmp_791, pollIrql_8, Tmp_792, Extension_36, vslice_dummy_var_463);
    goto L5_last;

  L5_last:
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc Tmp_792;
    assume {:nonnull} Tmp_792 != 0;
    assume Tmp_792 > 0;
    havoc Tmp_791;
    assume {:nonnull} Tmp_791 != 0;
    assume Tmp_791 > 0;
    havoc Mask_2;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(Mask_2, 1) != 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc vslice_dummy_var_153;
    call {:si_unique_call 1853} CyzKillAllReadsOrWrites(vslice_dummy_var_153, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_36), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_36));
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc vslice_dummy_var_154;
    call {:si_unique_call 1854} CyzKillAllReadsOrWrites(vslice_dummy_var_154, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_36), CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_36));
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(Mask_2, 2) != 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc vslice_dummy_var_155;
    call {:si_unique_call 1855} CyzKillAllReadsOrWrites(vslice_dummy_var_155, ReadQueue__CYZ_DEVICE_EXTENSION(Extension_36), CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_36));
    goto L14;

  L14:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} BAND(Mask_2, 8) != 0;
    call {:si_unique_call 1856} Tmp_790 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_790 != 0;
    assume Tmp_790 > 0;
    call {:si_unique_call 1857} sdv_KeAcquireSpinLock(0, Tmp_790);
    assume {:nonnull} Tmp_790 != 0;
    assume Tmp_790 > 0;
    havoc OldIrql_6;
    call {:si_unique_call 1858} Tmp_790 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_790 != 0;
    assume Tmp_790 > 0;
    call {:si_unique_call 1859} sdv_KeAcquireSpinLock(0, Tmp_790);
    assume {:nonnull} Tmp_790 != 0;
    assume Tmp_790 > 0;
    havoc pollIrql_8;
    call {:si_unique_call 1860} vslice_dummy_var_463 := CyzPurgeInterruptBuff(Extension_36);
    call {:si_unique_call 1861} sdv_KeReleaseSpinLock(0, pollIrql_8);
    call {:si_unique_call 1862} sdv_KeReleaseSpinLock(0, OldIrql_6);
    goto L18;

  L18:
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc Tmp_789;
    assume {:nonnull} Tmp_789 != 0;
    assume Tmp_789 > 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    havoc Tmp_788;
    assume {:nonnull} Tmp_788 != 0;
    assume Tmp_788 > 0;
    assume {:nonnull} Extension_36 != 0;
    assume Extension_36 > 0;
    call {:si_unique_call 1863} CyzGetNextIrp(CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(Extension_36), PurgeQueue__CYZ_DEVICE_EXTENSION(Extension_36), NewIrp_2, 1, Extension_36);
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_787 := 0;
    return;

  anon11_Then:
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    assume false;
    return;

  anon10_Then:
    assume {:partition} BAND(Mask_2, 8) == 0;
    goto L18;

  anon9_Then:
    assume {:partition} BAND(Mask_2, 2) == 0;
    goto L14;

  anon12_Then:
    assume {:partition} BAND(Mask_2, 1) == 0;
    goto L7;
}



procedure {:origName "_sdv_init16"} _sdv_init16();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init16"} _sdv_init16()
{
  var vslice_dummy_var_464: int;

  anon0:
    call {:si_unique_call 1864} vslice_dummy_var_464 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzPurgeInterruptBuff"} CyzPurgeInterruptBuff(actual_Context_31: int) returns (Tmp_795: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_795 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzPurgeInterruptBuff"} CyzPurgeInterruptBuff(actual_Context_31: int) returns (Tmp_795: int)
{
  var {:scalar} rx_2: int;
  var {:pointer} Tmp_796: int;
  var {:scalar} rx_3: int;
  var {:scalar} rxchar: int;
  var {:pointer} Extension_37: int;
  var {:scalar} Tmp_799: int;
  var {:pointer} Context_31: int;

  anon0:
    Context_31 := actual_Context_31;
    Extension_37 := Context_31;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    call {:si_unique_call 1865} rx_3 := corral_nondet();
    call {:si_unique_call 1866} rx_2 := corral_nondet();
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L20;

  L20:
    call {:si_unique_call 1867} rx_2, Tmp_796, rxchar, Tmp_799 := CyzPurgeInterruptBuff_loop_L20(rx_2, Tmp_796, rx_3, rxchar, Extension_37, Tmp_799);
    goto L20_last;

  L20_last:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} rx_2 != rx_3;
    Tmp_799 := rx_2;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    havoc Tmp_796;
    call {:si_unique_call 1868} rxchar := corral_nondet();
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    rx_2 := 0;
    goto L32;

  L32:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon17_Else_dummy;

  anon17_Else_dummy:
    assume false;
    return;

  anon17_Then:
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon16_Then:
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    assume false;
    return;

  anon15_Then:
    rx_2 := rx_2 + 1;
    goto L32;

  anon14_Then:
    assume {:partition} rx_2 == rx_3;
    goto L35;

  L35:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    assume {:nonnull} Extension_37 != 0;
    assume Extension_37 > 0;
    call {:si_unique_call 1869} CyzHandleReducedIntBuffer(Extension_37);
    goto L36;

  L36:
    Tmp_795 := 0;
    return;

  anon18_Then:
    goto L36;

  anon13_Then:
    rx_2 := rx_3;
    goto L35;
}



procedure {:origName "CyzCompleteIfError"} CyzCompleteIfError(actual_DeviceObject_7: int, actual_Irp_7: int) returns (Tmp_800: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_800 == -1073741536 || Tmp_800 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCompleteIfError"} CyzCompleteIfError(actual_DeviceObject_7: int, actual_Irp_7: int) returns (Tmp_800: int)
{
  var {:pointer} irpSp_1: int;
  var {:pointer} Tmp_802: int;
  var {:scalar} status_21: int;
  var {:pointer} extension_10: int;
  var {:pointer} DeviceObject_7: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_465: int;

  anon0:
    DeviceObject_7 := actual_DeviceObject_7;
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 1870} Tmp_802 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_7 != 0;
    assume DeviceObject_7 > 0;
    havoc extension_10;
    status_21 := 0;
    assume {:nonnull} extension_10 != 0;
    assume extension_10 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} extension_10 != 0;
    assume extension_10 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1871} irpSp_1 := sdv_IoGetCurrentIrpStackLocation(Irp_7);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L17;

  L17:
    status_21 := -1073741536;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    Tmp_802 := strConst__li2bpl3;
    call {:si_unique_call 1872} vslice_dummy_var_465 := CyzDbgPrintEx(9, Tmp_802);
    call {:si_unique_call 1873} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1874} CyzIRPEpilogue(extension_10);
    goto L8;

  L8:
    Tmp_800 := status_21;
    return;

  anon10_Then:
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L17;

  anon11_Then:
    goto L8;

  anon9_Then:
    goto L8;

  anon12_Then:
    goto L8;
}



procedure {:origName "CyzLogError"} CyzLogError(actual_DriverObject_4: int, actual_DeviceObject_8: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzLogError"} CyzLogError(actual_DriverObject_4: int, actual_DeviceObject_8: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int)
{
  var {:scalar} P1: int;
  var {:scalar} P2: int;
  var {:scalar} Tmp_803: int;
  var {:pointer} Tmp_804: int;
  var {:scalar} sdv_672: int;
  var {:pointer} errorLogEntry: int;
  var {:pointer} Tmp_805: int;
  var {:scalar} sdv_673: int;
  var {:scalar} dumpToAllocate: int;
  var {:pointer} sdv_674: int;
  var {:pointer} Tmp_808: int;
  var {:pointer} Tmp_810: int;
  var {:scalar} Tmp_811: int;
  var {:pointer} Tmp_812: int;
  var {:pointer} ptrToFirstInsert: int;
  var {:scalar} Tmp_814: int;
  var {:pointer} DriverObject_4: int;
  var {:pointer} DeviceObject_8: int;
  var {:pointer} structPtr888P1: int;
  var {:pointer} structPtr888P2: int;
  var {:scalar} SequenceNumber: int;
  var {:scalar} MajorFunctionCode: int;
  var {:scalar} RetryCount: int;
  var {:scalar} UniqueErrorValue: int;
  var {:scalar} FinalStatus: int;
  var {:scalar} SpecificIOStatus: int;
  var {:scalar} LengthOfInsert1: int;
  var {:pointer} Insert1: int;
  var {:scalar} LengthOfInsert2: int;
  var {:pointer} Insert2: int;
  var vslice_dummy_var_466: int;

  anon0:
    call {:si_unique_call 1875} P1 := __HAVOC_malloc(20);
    call {:si_unique_call 1876} P2 := __HAVOC_malloc(20);
    call {:si_unique_call 1877} Tmp_803 := __HAVOC_malloc(20);
    call {:si_unique_call 1878} vslice_dummy_var_466 := __HAVOC_malloc(4);
    call {:si_unique_call 1879} Tmp_811 := __HAVOC_malloc(20);
    DriverObject_4 := actual_DriverObject_4;
    DeviceObject_8 := actual_DeviceObject_8;
    structPtr888P1 := actual_structPtr888P1;
    structPtr888P2 := actual_structPtr888P2;
    SequenceNumber := actual_SequenceNumber;
    MajorFunctionCode := actual_MajorFunctionCode;
    RetryCount := actual_RetryCount;
    UniqueErrorValue := actual_UniqueErrorValue;
    FinalStatus := actual_FinalStatus;
    SpecificIOStatus := actual_SpecificIOStatus;
    LengthOfInsert1 := actual_LengthOfInsert1;
    Insert1 := actual_Insert1;
    LengthOfInsert2 := actual_LengthOfInsert2;
    Insert2 := actual_Insert2;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    call {:si_unique_call 1880} Tmp_804 := __HAVOC_malloc(4);
    call {:si_unique_call 1881} Tmp_805 := __HAVOC_malloc(4);
    call {:si_unique_call 1882} Tmp_808 := __HAVOC_malloc(4);
    call {:si_unique_call 1883} Tmp_810 := __HAVOC_malloc(4);
    call {:si_unique_call 1884} Tmp_812 := __HAVOC_malloc(4);
    dumpToAllocate := 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Insert1 != 0;
    goto L11;

  L11:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Insert2 != 0;
    goto L13;

  L13:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} DeviceObject_8 != 0;
    goto L16;

  L16:
    assume {:nonnull} Tmp_811 != 0;
    assume Tmp_811 > 0;
    assume {:nonnull} Tmp_811 != 0;
    assume Tmp_811 > 0;
    assume {:nonnull} Tmp_811 != 0;
    assume Tmp_811 > 0;
    assume {:nonnull} Tmp_811 != 0;
    assume Tmp_811 > 0;
    assume {:nonnull} Tmp_811 != 0;
    assume Tmp_811 > 0;
    call {:si_unique_call 1885} sdv_672 := CyzMemCompare(P1, 1, Tmp_811, 1);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_672 != 0;
    dumpToAllocate := 8;
    goto L21;

  L21:
    assume {:nonnull} Tmp_803 != 0;
    assume Tmp_803 > 0;
    assume {:nonnull} Tmp_803 != 0;
    assume Tmp_803 > 0;
    assume {:nonnull} Tmp_803 != 0;
    assume Tmp_803 > 0;
    assume {:nonnull} Tmp_803 != 0;
    assume Tmp_803 > 0;
    assume {:nonnull} Tmp_803 != 0;
    assume Tmp_803 > 0;
    call {:si_unique_call 1886} sdv_673 := CyzMemCompare(P2, 1, Tmp_803, 1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_673 != 0;
    dumpToAllocate := dumpToAllocate + 8;
    goto L27;

  L27:
    Tmp_814 := 48 + dumpToAllocate + LengthOfInsert1 + LengthOfInsert2;
    call {:si_unique_call 1887} sdv_674 := IoAllocateErrorLogEntry(0, Tmp_814);
    errorLogEntry := sdv_674;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} errorLogEntry != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} dumpToAllocate != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_808;
    call {:si_unique_call 1888} sdv_RtlCopyMemory(0, 0, 8);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} dumpToAllocate > 8;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_810;
    call {:si_unique_call 1889} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_804;
    ptrToFirstInsert := Tmp_804;
    goto L54;

  L54:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} LengthOfInsert1 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 1890} sdv_RtlCopyMemory(0, 0, LengthOfInsert1);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} LengthOfInsert2 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 1891} sdv_RtlCopyMemory(0, 0, LengthOfInsert2);
    goto L56;

  L56:
    call {:si_unique_call 1892} IoWriteErrorLogEntry(0);
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} LengthOfInsert2 == 0;
    goto L56;

  anon30_Then:
    assume {:partition} LengthOfInsert1 == 0;
    goto L56;

  anon25_Then:
    assume {:partition} 8 >= dumpToAllocate;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_812;
    ptrToFirstInsert := Tmp_812;
    goto L54;

  anon29_Then:
    assume {:partition} dumpToAllocate == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_805;
    ptrToFirstInsert := Tmp_805;
    goto L54;

  anon28_Then:
    assume {:partition} errorLogEntry == 0;
    goto L1;

  anon24_Then:
    assume {:partition} sdv_673 == 0;
    goto L27;

  anon23_Then:
    assume {:partition} sdv_672 == 0;
    goto L21;

  anon22_Then:
    assume {:partition} DeviceObject_8 == 0;
    goto L16;

  anon21_Then:
    assume {:partition} Insert2 == 0;
    LengthOfInsert2 := 0;
    goto L13;

  anon27_Then:
    assume {:partition} Insert1 == 0;
    LengthOfInsert1 := 0;
    goto L11;
}



procedure {:origName "CyzUnstallIrps"} CyzUnstallIrps(actual_PDevExt_7: int);
  modifies alloc, locked, queuedWithoutMarking, stack_location, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} stack_location == old(stack_location);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzUnstallIrps"} CyzUnstallIrps(actual_PDevExt_7: int)
{
  var {:pointer} Tmp_815: int;
  var {:pointer} Tmp_816: int;
  var {:pointer} sdv_678: int;
  var {:pointer} Tmp_817: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} pIrpStack_5: int;
  var {:scalar} Tmp_819: int;
  var {:pointer} pIrp_1: int;
  var {:pointer} Tmp_820: int;
  var {:pointer} pDevObj_2: int;
  var {:pointer} Tmp_821: int;
  var {:pointer} pDrvObj_1: int;
  var {:pointer} pIrpLink: int;
  var {:pointer} PDevExt_7: int;
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;
  var vslice_dummy_var_469: int;
  var vslice_dummy_var_470: int;
  var vslice_dummy_var_471: int;
  var vslice_dummy_var_472: int;
  var vslice_dummy_var_473: int;
  var vslice_dummy_var_474: int;
  var vslice_dummy_var_475: int;
  var vslice_dummy_var_476: int;
  var vslice_dummy_var_477: int;
  var vslice_dummy_var_478: int;
  var vslice_dummy_var_479: int;
  var vslice_dummy_var_480: int;
  var vslice_dummy_var_481: int;
  var vslice_dummy_var_482: int;
  var vslice_dummy_var_483: int;
  var vslice_dummy_var_484: int;
  var vslice_dummy_var_485: int;
  var vslice_dummy_var_486: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_504: int;
  var vslice_dummy_var_505: int;
  var vslice_dummy_var_506: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_510: int;
  var vslice_dummy_var_511: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_525: int;
  var vslice_dummy_var_526: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_528: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;
  var vslice_dummy_var_532: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_534: int;
  var vslice_dummy_var_535: int;
  var vslice_dummy_var_536: int;
  var vslice_dummy_var_537: int;
  var vslice_dummy_var_538: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_542: int;
  var vslice_dummy_var_543: int;
  var vslice_dummy_var_544: int;
  var vslice_dummy_var_545: int;
  var vslice_dummy_var_546: int;
  var vslice_dummy_var_547: int;
  var vslice_dummy_var_548: int;
  var vslice_dummy_var_549: int;
  var vslice_dummy_var_550: int;
  var vslice_dummy_var_551: int;
  var vslice_dummy_var_552: int;
  var vslice_dummy_var_553: int;
  var vslice_dummy_var_554: int;
  var vslice_dummy_var_555: int;
  var vslice_dummy_var_556: int;
  var vslice_dummy_var_557: int;
  var vslice_dummy_var_558: int;
  var vslice_dummy_var_559: int;
  var vslice_dummy_var_560: int;
  var vslice_dummy_var_561: int;
  var vslice_dummy_var_562: int;
  var vslice_dummy_var_563: int;
  var vslice_dummy_var_564: int;
  var vslice_dummy_var_565: int;
  var vslice_dummy_var_566: int;
  var vslice_dummy_var_567: int;
  var vslice_dummy_var_568: int;
  var vslice_dummy_var_569: int;
  var vslice_dummy_var_570: int;
  var vslice_dummy_var_571: int;
  var vslice_dummy_var_572: int;
  var vslice_dummy_var_573: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_575: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_577: int;
  var vslice_dummy_var_578: int;
  var vslice_dummy_var_579: int;
  var vslice_dummy_var_580: int;
  var vslice_dummy_var_581: int;
  var vslice_dummy_var_582: int;
  var vslice_dummy_var_583: int;
  var vslice_dummy_var_584: int;

  anon0:
    call {:si_unique_call 1893} vslice_dummy_var_467 := __HAVOC_malloc(4);
    PDevExt_7 := actual_PDevExt_7;
    call {:si_unique_call 1894} Tmp_815 := __HAVOC_malloc(124);
    call {:si_unique_call 1895} Tmp_817 := __HAVOC_malloc(112);
    call {:si_unique_call 1896} Tmp_820 := __HAVOC_malloc(84);
    call {:si_unique_call 1897} Tmp_821 := __HAVOC_malloc(68);
    Tmp_820 := strConst__li2bpl204;
    call {:si_unique_call 1898} vslice_dummy_var_468 := CyzDbgPrintEx(2, Tmp_820);
    call {:si_unique_call 1899} Tmp_816 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_816 != 0;
    assume Tmp_816 > 0;
    call {:si_unique_call 1900} IoAcquireCancelSpinLock(Tmp_816);
    assume {:nonnull} Tmp_816 != 0;
    assume Tmp_816 > 0;
    havoc oldIrql_5;
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    havoc pIrpLink;
    goto L16;

  L16:
    call {:si_unique_call 1901} Tmp_815, Tmp_816, sdv_678, Tmp_817, oldIrql_5, pIrpStack_5, Tmp_819, pIrp_1, pDevObj_2, pDrvObj_1, pIrpLink, vslice_dummy_var_469, vslice_dummy_var_470, vslice_dummy_var_471, vslice_dummy_var_472, vslice_dummy_var_473, vslice_dummy_var_474, vslice_dummy_var_475, vslice_dummy_var_476, vslice_dummy_var_477, vslice_dummy_var_478, vslice_dummy_var_479, vslice_dummy_var_480, vslice_dummy_var_481, vslice_dummy_var_482, vslice_dummy_var_483, vslice_dummy_var_484, vslice_dummy_var_485, vslice_dummy_var_486, vslice_dummy_var_487, vslice_dummy_var_488, vslice_dummy_var_489, vslice_dummy_var_490, vslice_dummy_var_491, vslice_dummy_var_492, vslice_dummy_var_493, vslice_dummy_var_494, vslice_dummy_var_495, vslice_dummy_var_496, vslice_dummy_var_497, vslice_dummy_var_498, vslice_dummy_var_499, vslice_dummy_var_500, vslice_dummy_var_501, vslice_dummy_var_502, vslice_dummy_var_503, vslice_dummy_var_504, vslice_dummy_var_505, vslice_dummy_var_506, vslice_dummy_var_507, vslice_dummy_var_508, vslice_dummy_var_509, vslice_dummy_var_510, vslice_dummy_var_511, vslice_dummy_var_512, vslice_dummy_var_513, vslice_dummy_var_514, vslice_dummy_var_515, vslice_dummy_var_516, vslice_dummy_var_517, vslice_dummy_var_518, vslice_dummy_var_519, vslice_dummy_var_520, vslice_dummy_var_521, vslice_dummy_var_522, vslice_dummy_var_523, vslice_dummy_var_524, vslice_dummy_var_525, vslice_dummy_var_526, vslice_dummy_var_527, vslice_dummy_var_528, vslice_dummy_var_529, vslice_dummy_var_530, vslice_dummy_var_531, vslice_dummy_var_532, vslice_dummy_var_533, vslice_dummy_var_534, vslice_dummy_var_535, vslice_dummy_var_536, vslice_dummy_var_537, vslice_dummy_var_538, vslice_dummy_var_539, vslice_dummy_var_540, vslice_dummy_var_541, vslice_dummy_var_542, vslice_dummy_var_543, vslice_dummy_var_544, vslice_dummy_var_545, vslice_dummy_var_546, vslice_dummy_var_547, vslice_dummy_var_548, vslice_dummy_var_549, vslice_dummy_var_550, vslice_dummy_var_551, vslice_dummy_var_552, vslice_dummy_var_553, vslice_dummy_var_554, vslice_dummy_var_555, vslice_dummy_var_556, vslice_dummy_var_557, vslice_dummy_var_558, vslice_dummy_var_559, vslice_dummy_var_560, vslice_dummy_var_561, vslice_dummy_var_562, vslice_dummy_var_563, vslice_dummy_var_564, vslice_dummy_var_565, vslice_dummy_var_566, vslice_dummy_var_567, vslice_dummy_var_568, vslice_dummy_var_569, vslice_dummy_var_570, vslice_dummy_var_571, vslice_dummy_var_572, vslice_dummy_var_573, vslice_dummy_var_574, vslice_dummy_var_575, vslice_dummy_var_576, vslice_dummy_var_577, vslice_dummy_var_578, vslice_dummy_var_579, vslice_dummy_var_580, vslice_dummy_var_581, vslice_dummy_var_582, vslice_dummy_var_583 := CyzUnstallIrps_loop_L16(Tmp_815, Tmp_816, sdv_678, Tmp_817, oldIrql_5, pIrpStack_5, Tmp_819, pIrp_1, pDevObj_2, pDrvObj_1, pIrpLink, PDevExt_7, vslice_dummy_var_469, vslice_dummy_var_470, vslice_dummy_var_471, vslice_dummy_var_472, vslice_dummy_var_473, vslice_dummy_var_474, vslice_dummy_var_475, vslice_dummy_var_476, vslice_dummy_var_477, vslice_dummy_var_478, vslice_dummy_var_479, vslice_dummy_var_480, vslice_dummy_var_481, vslice_dummy_var_482, vslice_dummy_var_483, vslice_dummy_var_484, vslice_dummy_var_485, vslice_dummy_var_486, vslice_dummy_var_487, vslice_dummy_var_488, vslice_dummy_var_489, vslice_dummy_var_490, vslice_dummy_var_491, vslice_dummy_var_492, vslice_dummy_var_493, vslice_dummy_var_494, vslice_dummy_var_495, vslice_dummy_var_496, vslice_dummy_var_497, vslice_dummy_var_498, vslice_dummy_var_499, vslice_dummy_var_500, vslice_dummy_var_501, vslice_dummy_var_502, vslice_dummy_var_503, vslice_dummy_var_504, vslice_dummy_var_505, vslice_dummy_var_506, vslice_dummy_var_507, vslice_dummy_var_508, vslice_dummy_var_509, vslice_dummy_var_510, vslice_dummy_var_511, vslice_dummy_var_512, vslice_dummy_var_513, vslice_dummy_var_514, vslice_dummy_var_515, vslice_dummy_var_516, vslice_dummy_var_517, vslice_dummy_var_518, vslice_dummy_var_519, vslice_dummy_var_520, vslice_dummy_var_521, vslice_dummy_var_522, vslice_dummy_var_523, vslice_dummy_var_524, vslice_dummy_var_525, vslice_dummy_var_526, vslice_dummy_var_527, vslice_dummy_var_528, vslice_dummy_var_529, vslice_dummy_var_530, vslice_dummy_var_531, vslice_dummy_var_532, vslice_dummy_var_533, vslice_dummy_var_534, vslice_dummy_var_535, vslice_dummy_var_536, vslice_dummy_var_537, vslice_dummy_var_538, vslice_dummy_var_539, vslice_dummy_var_540, vslice_dummy_var_541, vslice_dummy_var_542, vslice_dummy_var_543, vslice_dummy_var_544, vslice_dummy_var_545, vslice_dummy_var_546, vslice_dummy_var_547, vslice_dummy_var_548, vslice_dummy_var_549, vslice_dummy_var_550, vslice_dummy_var_551, vslice_dummy_var_552, vslice_dummy_var_553, vslice_dummy_var_554, vslice_dummy_var_555, vslice_dummy_var_556, vslice_dummy_var_557, vslice_dummy_var_558, vslice_dummy_var_559, vslice_dummy_var_560, vslice_dummy_var_561, vslice_dummy_var_562, vslice_dummy_var_563, vslice_dummy_var_564, vslice_dummy_var_565, vslice_dummy_var_566, vslice_dummy_var_567, vslice_dummy_var_568, vslice_dummy_var_569, vslice_dummy_var_570, vslice_dummy_var_571, vslice_dummy_var_572, vslice_dummy_var_573, vslice_dummy_var_574, vslice_dummy_var_575, vslice_dummy_var_576, vslice_dummy_var_577, vslice_dummy_var_578, vslice_dummy_var_579, vslice_dummy_var_580, vslice_dummy_var_581, vslice_dummy_var_582, vslice_dummy_var_583);
    goto L16_last;

  L16_last:
    goto anon227_Then, anon227_Else;

  anon227_Else:
    call {:si_unique_call 1902} sdv_678 := sdv_containing_record(pIrpLink, 88);
    pIrp_1 := sdv_678;
    call {:si_unique_call 1903} vslice_dummy_var_469 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1904} pIrpStack_5 := sdv_IoGetCurrentIrpStackLocation(pIrp_1);
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    havoc pDevObj_2;
    assume {:nonnull} pDevObj_2 != 0;
    assume pDevObj_2 > 0;
    havoc pDrvObj_1;
    call {:si_unique_call 1905} vslice_dummy_var_470 := sdv_IoSetCancelRoutine(pIrp_1, 0);
    call {:si_unique_call 1906} IoReleaseCancelSpinLock(oldIrql_5);
    Tmp_815 := strConst__li2bpl205;
    call {:si_unique_call 1907} vslice_dummy_var_471 := CyzDbgPrintEx(12, Tmp_815);
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    havoc Tmp_819;
    assume {:nonnull} pDrvObj_1 != 0;
    assume pDrvObj_1 > 0;
    havoc Tmp_817;
    goto anon284_Then, anon284_Else;

  anon284_Else:
    assume Tmp_819 != 27;
    goto anon286_Then, anon286_Else;

  anon286_Else:
    assume Tmp_819 != 26;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    assume Tmp_819 != 25;
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume Tmp_819 != 24;
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume Tmp_819 != 23;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume Tmp_819 != 22;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume Tmp_819 != 21;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume Tmp_819 != 20;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume Tmp_819 != 19;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume Tmp_819 != 18;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    assume Tmp_819 != 17;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    assume Tmp_819 != 16;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume Tmp_819 != 15;
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume Tmp_819 != 14;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume Tmp_819 != 13;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume Tmp_819 != 12;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume Tmp_819 != 11;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume Tmp_819 != 10;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    assume Tmp_819 != 9;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume Tmp_819 != 8;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume Tmp_819 != 7;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume Tmp_819 != 6;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume Tmp_819 != 5;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    assume Tmp_819 != 4;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    assume Tmp_819 != 3;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume Tmp_819 != 2;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    assume Tmp_819 != 1;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    assume false;
    return;

  anon338_Then:
    assume Tmp_819 == 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    goto anon282_Then, anon282_Else;

  anon282_Else:
    goto anon283_Then, anon283_Else;

  anon283_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1908} vslice_dummy_var_583 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  L45:
    call {:si_unique_call 1909} Tmp_816 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_816 != 0;
    assume Tmp_816 > 0;
    call {:si_unique_call 1910} IoAcquireCancelSpinLock(Tmp_816);
    assume {:nonnull} Tmp_816 != 0;
    assume Tmp_816 > 0;
    havoc oldIrql_5;
    assume {:nonnull} PDevExt_7 != 0;
    assume PDevExt_7 > 0;
    havoc pIrpLink;
    goto L45_dummy;

  L45_dummy:
    assume false;
    return;

  anon283_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1911} vslice_dummy_var_582 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon282_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1912} vslice_dummy_var_581 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon339_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1913} vslice_dummy_var_580 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon336_Then:
    assume Tmp_819 == 1;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    goto anon280_Then, anon280_Else;

  anon280_Else:
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1914} vslice_dummy_var_579 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon281_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1915} vslice_dummy_var_578 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon280_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1916} vslice_dummy_var_577 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon337_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1917} vslice_dummy_var_576 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon334_Then:
    assume Tmp_819 == 2;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    goto anon278_Then, anon278_Else;

  anon278_Else:
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1918} vslice_dummy_var_575 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon279_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1919} vslice_dummy_var_574 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon278_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1920} vslice_dummy_var_573 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon335_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1921} vslice_dummy_var_572 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon332_Then:
    assume Tmp_819 == 3;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto anon276_Then, anon276_Else;

  anon276_Else:
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1922} vslice_dummy_var_571 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon277_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1923} vslice_dummy_var_570 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon276_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1924} vslice_dummy_var_569 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon333_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1925} vslice_dummy_var_568 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon330_Then:
    assume Tmp_819 == 4;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto anon274_Then, anon274_Else;

  anon274_Else:
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1926} vslice_dummy_var_567 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon275_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1927} vslice_dummy_var_566 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon274_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1928} vslice_dummy_var_565 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon331_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1929} vslice_dummy_var_564 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon328_Then:
    assume Tmp_819 == 5;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    goto anon272_Then, anon272_Else;

  anon272_Else:
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1930} vslice_dummy_var_563 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon273_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1931} vslice_dummy_var_562 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon272_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1932} vslice_dummy_var_561 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon329_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1933} vslice_dummy_var_560 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon326_Then:
    assume Tmp_819 == 6;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    goto anon270_Then, anon270_Else;

  anon270_Else:
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1934} vslice_dummy_var_559 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon271_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1935} vslice_dummy_var_558 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon270_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1936} vslice_dummy_var_557 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon327_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1937} vslice_dummy_var_556 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon324_Then:
    assume Tmp_819 == 7;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    goto anon268_Then, anon268_Else;

  anon268_Else:
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1938} vslice_dummy_var_555 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon269_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1939} vslice_dummy_var_554 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon268_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1940} vslice_dummy_var_553 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon325_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1941} vslice_dummy_var_552 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon322_Then:
    assume Tmp_819 == 8;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    goto anon266_Then, anon266_Else;

  anon266_Else:
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1942} vslice_dummy_var_551 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon267_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1943} vslice_dummy_var_550 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon266_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1944} vslice_dummy_var_549 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon323_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1945} vslice_dummy_var_548 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon320_Then:
    assume Tmp_819 == 9;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    goto anon264_Then, anon264_Else;

  anon264_Else:
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1946} vslice_dummy_var_547 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon265_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1947} vslice_dummy_var_546 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon264_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1948} vslice_dummy_var_545 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon321_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1949} vslice_dummy_var_544 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon318_Then:
    assume Tmp_819 == 10;
    goto anon319_Then, anon319_Else;

  anon319_Else:
    goto anon262_Then, anon262_Else;

  anon262_Else:
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1950} vslice_dummy_var_543 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon263_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1951} vslice_dummy_var_542 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon262_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1952} vslice_dummy_var_541 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon319_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1953} vslice_dummy_var_540 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon316_Then:
    assume Tmp_819 == 11;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    goto anon260_Then, anon260_Else;

  anon260_Else:
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1954} vslice_dummy_var_539 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon261_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1955} vslice_dummy_var_538 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon260_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1956} vslice_dummy_var_537 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon317_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1957} vslice_dummy_var_536 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon314_Then:
    assume Tmp_819 == 12;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    goto anon258_Then, anon258_Else;

  anon258_Else:
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1958} vslice_dummy_var_535 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon259_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1959} vslice_dummy_var_534 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon258_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1960} vslice_dummy_var_533 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon315_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1961} vslice_dummy_var_532 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon312_Then:
    assume Tmp_819 == 13;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    goto anon256_Then, anon256_Else;

  anon256_Else:
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1962} vslice_dummy_var_531 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon257_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1963} vslice_dummy_var_530 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon256_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1964} vslice_dummy_var_529 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon313_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1965} vslice_dummy_var_528 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon310_Then:
    assume Tmp_819 == 14;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    goto anon254_Then, anon254_Else;

  anon254_Else:
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1966} vslice_dummy_var_527 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon255_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1967} vslice_dummy_var_526 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon254_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1968} vslice_dummy_var_525 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon311_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1969} vslice_dummy_var_524 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon308_Then:
    assume Tmp_819 == 15;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1970} vslice_dummy_var_523 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon253_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1971} vslice_dummy_var_522 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon252_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1972} vslice_dummy_var_521 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon309_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1973} vslice_dummy_var_520 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon306_Then:
    assume Tmp_819 == 16;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    goto anon250_Then, anon250_Else;

  anon250_Else:
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1974} vslice_dummy_var_519 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon251_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1975} vslice_dummy_var_518 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon250_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1976} vslice_dummy_var_517 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon307_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1977} vslice_dummy_var_516 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon304_Then:
    assume Tmp_819 == 17;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    goto anon248_Then, anon248_Else;

  anon248_Else:
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1978} vslice_dummy_var_515 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon249_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1979} vslice_dummy_var_514 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon248_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1980} vslice_dummy_var_513 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon305_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1981} vslice_dummy_var_512 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon302_Then:
    assume Tmp_819 == 18;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    goto anon246_Then, anon246_Else;

  anon246_Else:
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1982} vslice_dummy_var_511 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon247_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1983} vslice_dummy_var_510 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon246_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1984} vslice_dummy_var_509 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon303_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1985} vslice_dummy_var_508 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon300_Then:
    assume Tmp_819 == 19;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    goto anon244_Then, anon244_Else;

  anon244_Else:
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1986} vslice_dummy_var_507 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon245_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1987} vslice_dummy_var_506 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon244_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1988} vslice_dummy_var_505 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon301_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1989} vslice_dummy_var_504 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon298_Then:
    assume Tmp_819 == 20;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    goto anon242_Then, anon242_Else;

  anon242_Else:
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1990} vslice_dummy_var_503 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon243_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1991} vslice_dummy_var_502 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon242_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1992} vslice_dummy_var_501 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon299_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1993} vslice_dummy_var_500 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon296_Then:
    assume Tmp_819 == 21;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    goto anon240_Then, anon240_Else;

  anon240_Else:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1994} vslice_dummy_var_499 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon241_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1995} vslice_dummy_var_498 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon240_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1996} vslice_dummy_var_497 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon297_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1997} vslice_dummy_var_496 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon294_Then:
    assume Tmp_819 == 22;
    goto anon295_Then, anon295_Else;

  anon295_Else:
    goto anon238_Then, anon238_Else;

  anon238_Else:
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1998} vslice_dummy_var_495 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon239_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 1999} vslice_dummy_var_494 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon238_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2000} vslice_dummy_var_493 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon295_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2001} vslice_dummy_var_492 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon292_Then:
    assume Tmp_819 == 23;
    goto anon293_Then, anon293_Else;

  anon293_Else:
    goto anon236_Then, anon236_Else;

  anon236_Else:
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2002} vslice_dummy_var_491 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon237_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2003} vslice_dummy_var_490 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon236_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2004} vslice_dummy_var_489 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon293_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2005} vslice_dummy_var_488 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon290_Then:
    assume Tmp_819 == 24;
    goto anon291_Then, anon291_Else;

  anon291_Else:
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2006} vslice_dummy_var_487 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon235_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2007} vslice_dummy_var_486 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon234_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2008} vslice_dummy_var_485 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon291_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2009} vslice_dummy_var_484 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon288_Then:
    assume Tmp_819 == 25;
    goto anon289_Then, anon289_Else;

  anon289_Else:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2010} vslice_dummy_var_483 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon233_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2011} vslice_dummy_var_482 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon232_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2012} vslice_dummy_var_481 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon289_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2013} vslice_dummy_var_480 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon286_Then:
    assume Tmp_819 == 26;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    goto anon230_Then, anon230_Else;

  anon230_Else:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2014} vslice_dummy_var_479 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon231_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2015} vslice_dummy_var_478 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon230_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2016} vslice_dummy_var_477 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon287_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2017} vslice_dummy_var_476 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon284_Then:
    assume Tmp_819 == 27;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2018} vslice_dummy_var_475 := CyzInternalIoControl(pDevObj_2, pIrp_1);
    goto L45;

  anon229_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2019} vslice_dummy_var_474 := CyzQueryInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon228_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2020} vslice_dummy_var_473 := CyzSetInformationFile(pDevObj_2, pIrp_1);
    goto L45;

  anon285_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} Tmp_817 != 0;
    assume Tmp_817 > 0;
    call {:si_unique_call 2021} vslice_dummy_var_472 := CyzSystemControlDispatch(pDevObj_2, pIrp_1);
    goto L45;

  anon227_Then:
    call {:si_unique_call 2022} IoReleaseCancelSpinLock(oldIrql_5);
    Tmp_821 := strConst__li2bpl206;
    call {:si_unique_call 2023} vslice_dummy_var_584 := CyzDbgPrintEx(2, Tmp_821);
    return;
}



procedure {:origName "CyzDpcEpilogue"} CyzDpcEpilogue(actual_PDevExt_8: int, actual_PDpc: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzDpcEpilogue"} CyzDpcEpilogue(actual_PDevExt_8: int, actual_PDpc: int)
{
  var {:scalar} pendingCnt: int;
  var {:pointer} Tmp_823: int;
  var {:pointer} PDevExt_8: int;
  var vslice_dummy_var_585: int;
  var vslice_dummy_var_586: int;

  anon0:
    call {:si_unique_call 2024} vslice_dummy_var_585 := __HAVOC_malloc(4);
    PDevExt_8 := actual_PDevExt_8;
    call {:si_unique_call 2025} Tmp_823 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_823 != 0;
    assume Tmp_823 > 0;
    call {:si_unique_call 2026} pendingCnt := sdv_InterlockedDecrement(Tmp_823);
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    assume {:nonnull} Tmp_823 != 0;
    assume Tmp_823 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt == 0;
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    call {:si_unique_call 2027} vslice_dummy_var_586 := KeSetEvent(PendingDpcEvent__CYZ_DEVICE_EXTENSION(PDevExt_8), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt != 0;
    goto L1;
}



procedure {:origName "CyzSetTimer"} CyzSetTimer(actual_Timer: int, actual_SD2: int, actual_Dpc: int, actual_PDevExt_9: int) returns (Tmp_824: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_824 == 1 || Tmp_824 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetTimer"} CyzSetTimer(actual_Timer: int, actual_SD2: int, actual_Dpc: int, actual_PDevExt_9: int) returns (Tmp_824: int)
{
  var {:scalar} DueTime_2: int;
  var {:pointer} Tmp_825: int;
  var {:scalar} set: int;
  var {:pointer} SD2: int;
  var {:pointer} PDevExt_9: int;
  var vslice_dummy_var_587: int;
  var vslice_dummy_var_588: int;

  anon0:
    call {:si_unique_call 2028} DueTime_2 := __HAVOC_malloc(20);
    SD2 := actual_SD2;
    PDevExt_9 := actual_PDevExt_9;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    assume {:nonnull} DueTime_2 != 0;
    assume DueTime_2 > 0;
    assume {:nonnull} SD2 != 0;
    assume SD2 > 0;
    call {:si_unique_call 2029} Tmp_825 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_825 != 0;
    assume Tmp_825 > 0;
    call {:si_unique_call 2030} vslice_dummy_var_587 := sdv_InterlockedIncrement(Tmp_825);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_825 != 0;
    assume Tmp_825 > 0;
    call {:si_unique_call 2031} set := KeSetTimer(0, DueTime_2, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} set != 0;
    call {:si_unique_call 2032} Tmp_825 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_825 != 0;
    assume Tmp_825 > 0;
    call {:si_unique_call 2033} vslice_dummy_var_588 := sdv_InterlockedDecrement(Tmp_825);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_825 != 0;
    assume Tmp_825 > 0;
    goto L12;

  L12:
    Tmp_824 := set;
    return;

  anon3_Then:
    assume {:partition} set == 0;
    goto L12;
}



procedure {:origName "CyzRundownIrpRefs"} CyzRundownIrpRefs(actual_CurrentOpIrp_2: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_PDevExt_10: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzRundownIrpRefs"} CyzRundownIrpRefs(actual_CurrentOpIrp_2: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_PDevExt_10: int)
{
  var {:pointer} s_p_e_c_i_a_l_15: int;
  var {:pointer} sdv_693: int;
  var {:pointer} sdv_694: int;
  var {:pointer} s_p_e_c_i_a_l_16: int;
  var {:pointer} Tmp_831: int;
  var {:scalar} s_p_e_c_i_a_l_17: int;
  var {:scalar} sdv_696: int;
  var {:pointer} sdv_697: int;
  var {:scalar} sdv_698: int;
  var {:pointer} s_p_e_c_i_a_l_18: int;
  var {:scalar} s_p_e_c_i_a_l_19: int;
  var {:scalar} s_p_e_c_i_a_l_20: int;
  var {:pointer} CurrentOpIrp_2: int;
  var {:pointer} IntervalTimer_1: int;
  var {:pointer} TotalTimer_1: int;
  var {:pointer} PDevExt_10: int;
  var vslice_dummy_var_589: int;
  var vslice_dummy_var_590: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;

  anon0:
    call {:si_unique_call 2034} vslice_dummy_var_589 := __HAVOC_malloc(4);
    CurrentOpIrp_2 := actual_CurrentOpIrp_2;
    IntervalTimer_1 := actual_IntervalTimer_1;
    TotalTimer_1 := actual_TotalTimer_1;
    PDevExt_10 := actual_PDevExt_10;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc Tmp_831;
    assume {:nonnull} Tmp_831 != 0;
    assume Tmp_831 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    s_p_e_c_i_a_l_17 := 2;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_156;
    call {:si_unique_call 2035} sdv_693 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_156);
    assume {:nonnull} sdv_693 != 0;
    assume sdv_693 > 0;
    s_p_e_c_i_a_l_15 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_693)));
    assume {:nonnull} s_p_e_c_i_a_l_15 != 0;
    assume s_p_e_c_i_a_l_15 > 0;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_157;
    call {:si_unique_call 2036} vslice_dummy_var_590 := sdv_IoSetCancelRoutine(vslice_dummy_var_157, 0);
    goto L4;

  L4:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IntervalTimer_1 != 0;
    call {:si_unique_call 2037} sdv_696 := CyzCancelTimer(IntervalTimer_1, PDevExt_10);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_696 != 0;
    s_p_e_c_i_a_l_19 := 8;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_158;
    call {:si_unique_call 2038} sdv_697 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_158);
    assume {:nonnull} sdv_697 != 0;
    assume sdv_697 > 0;
    s_p_e_c_i_a_l_18 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_697)));
    assume {:nonnull} s_p_e_c_i_a_l_18 != 0;
    assume s_p_e_c_i_a_l_18 > 0;
    goto L16;

  L16:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} TotalTimer_1 != 0;
    call {:si_unique_call 2039} sdv_698 := CyzCancelTimer(TotalTimer_1, PDevExt_10);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} sdv_698 != 0;
    s_p_e_c_i_a_l_20 := 4;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    havoc vslice_dummy_var_159;
    call {:si_unique_call 2040} sdv_694 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_159);
    assume {:nonnull} sdv_694 != 0;
    assume sdv_694 > 0;
    s_p_e_c_i_a_l_16 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_694)));
    assume {:nonnull} s_p_e_c_i_a_l_16 != 0;
    assume s_p_e_c_i_a_l_16 > 0;
    goto L1;

  L1:
    return;

  anon14_Then:
    assume {:partition} sdv_698 == 0;
    goto L1;

  anon12_Then:
    assume {:partition} TotalTimer_1 == 0;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_696 == 0;
    goto L16;

  anon11_Then:
    assume {:partition} IntervalTimer_1 == 0;
    goto L16;

  anon15_Then:
    goto L4;
}



procedure {:origName "CyzIRPEpilogue"} CyzIRPEpilogue(actual_PDevExt_11: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzIRPEpilogue"} CyzIRPEpilogue(actual_PDevExt_11: int)
{
  var {:pointer} Tmp_834: int;
  var {:scalar} pendingCnt_1: int;
  var {:pointer} PDevExt_11: int;
  var vslice_dummy_var_591: int;
  var vslice_dummy_var_592: int;

  anon0:
    call {:si_unique_call 2041} vslice_dummy_var_591 := __HAVOC_malloc(4);
    PDevExt_11 := actual_PDevExt_11;
    call {:si_unique_call 2042} Tmp_834 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_11 != 0;
    assume PDevExt_11 > 0;
    assume {:nonnull} Tmp_834 != 0;
    assume Tmp_834 > 0;
    call {:si_unique_call 2043} pendingCnt_1 := sdv_InterlockedDecrement(Tmp_834);
    assume {:nonnull} PDevExt_11 != 0;
    assume PDevExt_11 > 0;
    assume {:nonnull} Tmp_834 != 0;
    assume Tmp_834 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt_1 == 0;
    assume {:nonnull} PDevExt_11 != 0;
    assume PDevExt_11 > 0;
    call {:si_unique_call 2044} vslice_dummy_var_592 := KeSetEvent(PendingIRPEvent__CYZ_DEVICE_EXTENSION(PDevExt_11), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt_1 != 0;
    goto L1;
}



procedure {:origName "CyzCancelQueued"} CyzCancelQueued(actual_DeviceObject_9: int, actual_Irp_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCancelQueued"} CyzCancelQueued(actual_DeviceObject_9: int, actual_Irp_8: int)
{
  var {:pointer} irpSp_2: int;
  var {:pointer} Tmp_836: int;
  var {:pointer} extension_11: int;
  var {:pointer} DeviceObject_9: int;
  var {:pointer} Irp_8: int;
  var vslice_dummy_var_593: int;
  var vslice_dummy_var_594: int;
  var vslice_dummy_var_595: int;
  var vslice_dummy_var_160: int;

  anon0:
    call {:si_unique_call 2045} vslice_dummy_var_593 := __HAVOC_malloc(4);
    DeviceObject_9 := actual_DeviceObject_9;
    Irp_8 := actual_Irp_8;
    call {:si_unique_call 2046} Tmp_836 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    havoc extension_11;
    call {:si_unique_call 2047} irpSp_2 := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    call {:si_unique_call 2048} vslice_dummy_var_594 := sdv_RemoveEntryList(0);
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} extension_11 != 0;
    assume extension_11 > 0;
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto L18;

  L18:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc vslice_dummy_var_160;
    call {:si_unique_call 2049} IoReleaseCancelSpinLock(vslice_dummy_var_160);
    Tmp_836 := strConst__li2bpl3;
    call {:si_unique_call 2050} vslice_dummy_var_595 := CyzDbgPrintEx(9, Tmp_836);
    call {:si_unique_call 2051} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2052} CyzIRPEpilogue(extension_11);
    return;

  anon11_Then:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L32;

  L32:
    assume {:nonnull} extension_11 != 0;
    assume extension_11 > 0;
    goto L18;

  anon13_Then:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 2053} sdv_ExFreePool(0);
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto L18;

  anon15_Then:
    goto L18;

  anon14_Then:
    goto L32;

  anon12_Then:
    goto L18;
}



procedure {:origName "CyzIRPPrologue"} CyzIRPPrologue(actual_PIrp_5: int, actual_PDevExt_12: int) returns (Tmp_839: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_839 == 0 || Tmp_839 == -1073741536 || Tmp_839 == 259 || Tmp_839 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzIRPPrologue"} CyzIRPPrologue(actual_PIrp_5: int, actual_PDevExt_12: int) returns (Tmp_839: int)
{
  var {:pointer} Tmp_840: int;
  var {:pointer} PIrp_5: int;
  var {:pointer} PDevExt_12: int;
  var vslice_dummy_var_596: int;

  anon0:
    PIrp_5 := actual_PIrp_5;
    PDevExt_12 := actual_PDevExt_12;
    call {:si_unique_call 2054} Tmp_840 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    assume {:nonnull} Tmp_840 != 0;
    assume Tmp_840 > 0;
    call {:si_unique_call 2055} vslice_dummy_var_596 := sdv_InterlockedIncrement(Tmp_840);
    assume {:nonnull} PDevExt_12 != 0;
    assume PDevExt_12 > 0;
    assume {:nonnull} Tmp_840 != 0;
    assume Tmp_840 > 0;
    call {:si_unique_call 2056} Tmp_839 := CyzFilterIrps(PIrp_5, PDevExt_12);
    return;
}



procedure {:origName "CyzKillAllReadsOrWrites"} CyzKillAllReadsOrWrites(actual_DeviceObject_10: int, actual_QueueToClean: int, actual_CurrentOpIrp_3: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, stack_location, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzKillAllReadsOrWrites"} CyzKillAllReadsOrWrites(actual_DeviceObject_10: int, actual_QueueToClean: int, actual_CurrentOpIrp_3: int)
{
  var {:pointer} currentLastIrp: int;
  var {:scalar} cancelIrql: int;
  var {:pointer} Tmp_841: int;
  var {:scalar} sdv_706: int;
  var {:pointer} Tmp_842: int;
  var {:pointer} sdv_707: int;
  var {:scalar} cancelRoutine_1: int;
  var {:pointer} Tmp_844: int;
  var {:pointer} Tmp_845: int;
  var {:pointer} Tmp_846: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} QueueToClean: int;
  var {:pointer} CurrentOpIrp_3: int;
  var vslice_dummy_var_597: int;
  var vslice_dummy_var_598: int;
  var vslice_dummy_var_599: int;
  var vslice_dummy_var_600: int;
  var vslice_dummy_var_601: int;
  var vslice_dummy_var_602: int;
  var vslice_dummy_var_603: int;
  var vslice_dummy_var_604: int;
  var vslice_dummy_var_605: int;
  var vslice_dummy_var_606: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;

  anon0:
    call {:si_unique_call 2057} vslice_dummy_var_597 := __HAVOC_malloc(4);
    DeviceObject_10 := actual_DeviceObject_10;
    QueueToClean := actual_QueueToClean;
    CurrentOpIrp_3 := actual_CurrentOpIrp_3;
    call {:si_unique_call 2058} Tmp_844 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_844 != 0;
    assume Tmp_844 > 0;
    call {:si_unique_call 2059} IoAcquireCancelSpinLock(Tmp_844);
    assume {:nonnull} Tmp_844 != 0;
    assume Tmp_844 > 0;
    havoc cancelIrql;
    goto L8;

  L8:
    call {:si_unique_call 2060} currentLastIrp, cancelIrql, sdv_706, sdv_707, cancelRoutine_1, Tmp_844, vslice_dummy_var_602, vslice_dummy_var_603, vslice_dummy_var_604, vslice_dummy_var_605, vslice_dummy_var_606 := CyzKillAllReadsOrWrites_loop_L8(currentLastIrp, cancelIrql, sdv_706, sdv_707, cancelRoutine_1, Tmp_844, DeviceObject_10, QueueToClean, vslice_dummy_var_602, vslice_dummy_var_603, vslice_dummy_var_604, vslice_dummy_var_605, vslice_dummy_var_606);
    goto L8_last;

  L8_last:
    call {:si_unique_call 2089} sdv_706 := sdv_IsListEmpty(0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_706 == 0;
    assume {:nonnull} QueueToClean != 0;
    assume QueueToClean > 0;
    havoc vslice_dummy_var_161;
    call {:si_unique_call 2061} sdv_707 := sdv_containing_record(vslice_dummy_var_161, 88);
    currentLastIrp := sdv_707;
    call {:si_unique_call 2062} vslice_dummy_var_602 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    havoc cancelRoutine_1;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant456;
    call {:si_unique_call 2063} CyzCancelCurrentRead(DeviceObject_10, currentLastIrp);
    goto L42;

  L42:
    call {:si_unique_call 2064} Tmp_844 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_844 != 0;
    assume Tmp_844 > 0;
    call {:si_unique_call 2065} IoAcquireCancelSpinLock(Tmp_844);
    assume {:nonnull} Tmp_844 != 0;
    assume Tmp_844 > 0;
    havoc cancelIrql;
    goto L42_dummy;

  L42_dummy:
    assume false;
    return;

  anon66_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 2066} CyzCancelCurrentWrite(DeviceObject_10, currentLastIrp);
    goto L42;

  anon65_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant198;
    call {:si_unique_call 2067} CyzCancelCurrentXoff(DeviceObject_10, currentLastIrp);
    goto L42;

  anon64_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant312;
    call {:si_unique_call 2068} CyzCancelImmediate(DeviceObject_10, currentLastIrp);
    goto L42;

  anon63_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 2069} CyzCancelQueued(DeviceObject_10, currentLastIrp);
    goto L42;

  anon62_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant178;
    call {:si_unique_call 2070} CyzCancelWait(DeviceObject_10, currentLastIrp);
    goto L42;

  anon61_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 2071} CyzFilterCancelQueued(DeviceObject_10, currentLastIrp);
    goto L42;

  anon60_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant334;
    call {:si_unique_call 2072} vslice_dummy_var_606 := CyzInternalIoControl(DeviceObject_10, currentLastIrp);
    goto L42;

  anon59_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant338;
    call {:si_unique_call 2073} vslice_dummy_var_605 := CyzQueryInformationFile(DeviceObject_10, currentLastIrp);
    goto L42;

  anon58_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant339;
    call {:si_unique_call 2074} vslice_dummy_var_604 := CyzSetInformationFile(DeviceObject_10, currentLastIrp);
    goto L42;

  anon69_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant262;
    call {:si_unique_call 2075} vslice_dummy_var_603 := CyzSystemControlDispatch(DeviceObject_10, currentLastIrp);
    goto L42;

  anon47_Then:
    assume {:partition} sdv_706 != 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_845;
    assume {:nonnull} Tmp_845 != 0;
    assume Tmp_845 > 0;
    havoc cancelRoutine_1;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_841;
    assume {:nonnull} Tmp_841 != 0;
    assume Tmp_841 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} cancelRoutine_1 != 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_842;
    assume {:nonnull} Tmp_842 != 0;
    assume Tmp_842 > 0;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_846;
    assume {:nonnull} Tmp_846 != 0;
    assume Tmp_846 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto anon51_Then, anon51_Else;

  anon51_Else:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto anon54_Then, anon54_Else;

  anon54_Else:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant456;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_162;
    call {:si_unique_call 2076} CyzCancelCurrentRead(DeviceObject_10, vslice_dummy_var_162);
    goto L1;

  L1:
    return;

  anon57_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant196;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_163;
    call {:si_unique_call 2077} CyzCancelCurrentWrite(DeviceObject_10, vslice_dummy_var_163);
    goto L1;

  anon56_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant198;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_164;
    call {:si_unique_call 2078} CyzCancelCurrentXoff(DeviceObject_10, vslice_dummy_var_164);
    goto L1;

  anon55_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant312;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_165;
    call {:si_unique_call 2079} CyzCancelImmediate(DeviceObject_10, vslice_dummy_var_165);
    goto L1;

  anon54_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant149;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_166;
    call {:si_unique_call 2080} CyzCancelQueued(DeviceObject_10, vslice_dummy_var_166);
    goto L1;

  anon53_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant178;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_167;
    call {:si_unique_call 2081} CyzCancelWait(DeviceObject_10, vslice_dummy_var_167);
    goto L1;

  anon52_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant151;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_168;
    call {:si_unique_call 2082} CyzFilterCancelQueued(DeviceObject_10, vslice_dummy_var_168);
    goto L1;

  anon51_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant334;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_169;
    call {:si_unique_call 2083} vslice_dummy_var_601 := CyzInternalIoControl(DeviceObject_10, vslice_dummy_var_169);
    goto L1;

  anon50_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant338;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_170;
    call {:si_unique_call 2084} vslice_dummy_var_600 := CyzQueryInformationFile(DeviceObject_10, vslice_dummy_var_170);
    goto L1;

  anon49_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant339;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_171;
    call {:si_unique_call 2085} vslice_dummy_var_599 := CyzSetInformationFile(DeviceObject_10, vslice_dummy_var_171);
    goto L1;

  anon68_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant262;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_172;
    call {:si_unique_call 2086} vslice_dummy_var_598 := CyzSystemControlDispatch(DeviceObject_10, vslice_dummy_var_172);
    goto L1;

  anon67_Then:
    assume {:partition} cancelRoutine_1 == 0;
    call {:si_unique_call 2087} IoReleaseCancelSpinLock(cancelIrql);
    goto L1;

  anon48_Then:
    call {:si_unique_call 2088} IoReleaseCancelSpinLock(cancelIrql);
    goto L1;
}



procedure {:origName "CyzGetNextIrp"} CyzGetNextIrp(actual_CurrentOpIrp_4: int, actual_QueueToProcess_2: int, actual_NextIrp: int, actual_CompleteCurrent_1: int, actual_extension_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetNextIrp"} CyzGetNextIrp(actual_CurrentOpIrp_4: int, actual_QueueToProcess_2: int, actual_NextIrp: int, actual_CompleteCurrent_1: int, actual_extension_12: int)
{
  var {:pointer} Tmp_848: int;
  var {:scalar} oldIrql_6: int;
  var {:pointer} CurrentOpIrp_4: int;
  var {:pointer} QueueToProcess_2: int;
  var {:pointer} NextIrp: int;
  var {:scalar} CompleteCurrent_1: int;
  var {:pointer} extension_12: int;
  var vslice_dummy_var_607: int;

  anon0:
    call {:si_unique_call 2090} vslice_dummy_var_607 := __HAVOC_malloc(4);
    CurrentOpIrp_4 := actual_CurrentOpIrp_4;
    QueueToProcess_2 := actual_QueueToProcess_2;
    NextIrp := actual_NextIrp;
    CompleteCurrent_1 := actual_CompleteCurrent_1;
    extension_12 := actual_extension_12;
    call {:si_unique_call 2091} Tmp_848 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    call {:si_unique_call 2092} IoAcquireCancelSpinLock(Tmp_848);
    assume {:nonnull} Tmp_848 != 0;
    assume Tmp_848 > 0;
    havoc oldIrql_6;
    call {:si_unique_call 2093} CyzGetNextIrpLocked(CurrentOpIrp_4, QueueToProcess_2, NextIrp, CompleteCurrent_1, extension_12, oldIrql_6);
    return;
}



procedure {:origName "CyzInsertQueueDpc"} CyzInsertQueueDpc(actual_PDpc_1: int, actual_Sarg1: int, actual_Sarg2: int, actual_PDevExt_13: int) returns (Tmp_849: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} Tmp_849 == 0 || Tmp_849 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzInsertQueueDpc"} CyzInsertQueueDpc(actual_PDpc_1: int, actual_Sarg1: int, actual_Sarg2: int, actual_PDevExt_13: int) returns (Tmp_849: int)
{
  var {:scalar} sdv_711: int;
  var {:pointer} Tmp_850: int;
  var {:scalar} pendingCnt_2: int;
  var {:scalar} queued_1: int;
  var {:pointer} PDpc_1: int;
  var {:pointer} PDevExt_13: int;
  var vslice_dummy_var_608: int;
  var vslice_dummy_var_609: int;

  anon0:
    PDpc_1 := actual_PDpc_1;
    PDevExt_13 := actual_PDevExt_13;
    call {:si_unique_call 2094} Tmp_850 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_13 != 0;
    assume PDevExt_13 > 0;
    assume {:nonnull} Tmp_850 != 0;
    assume Tmp_850 > 0;
    call {:si_unique_call 2095} vslice_dummy_var_609 := sdv_InterlockedIncrement(Tmp_850);
    assume {:nonnull} PDevExt_13 != 0;
    assume PDevExt_13 > 0;
    assume {:nonnull} Tmp_850 != 0;
    assume Tmp_850 > 0;
    call {:si_unique_call 2096} queued_1 := KeInsertQueueDpc(PDpc_1, 0, 0);
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} queued_1 == 0;
    call {:si_unique_call 2097} Tmp_850 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_13 != 0;
    assume PDevExt_13 > 0;
    assume {:nonnull} Tmp_850 != 0;
    assume Tmp_850 > 0;
    call {:si_unique_call 2098} sdv_711 := sdv_InterlockedDecrement(Tmp_850);
    assume {:nonnull} PDevExt_13 != 0;
    assume PDevExt_13 > 0;
    assume {:nonnull} Tmp_850 != 0;
    assume Tmp_850 > 0;
    pendingCnt_2 := sdv_711;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pendingCnt_2 == 0;
    assume {:nonnull} PDevExt_13 != 0;
    assume PDevExt_13 > 0;
    call {:si_unique_call 2099} vslice_dummy_var_608 := KeSetEvent(PendingDpcEvent__CYZ_DEVICE_EXTENSION(PDevExt_13), 0, 0);
    goto L13;

  L13:
    Tmp_849 := queued_1;
    return;

  anon6_Then:
    assume {:partition} pendingCnt_2 != 0;
    goto L13;

  anon5_Then:
    assume {:partition} queued_1 != 0;
    goto L13;
}



procedure {:origName "CyzFilterIrps"} CyzFilterIrps(actual_PIrp_6: int, actual_PDevExt_14: int) returns (Tmp_851: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_851 == 0 || Tmp_851 == -1073741536 || Tmp_851 == 259 || Tmp_851 == -1073741738;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzFilterIrps"} CyzFilterIrps(actual_PIrp_6: int, actual_PDevExt_14: int) returns (Tmp_851: int)
{
  var {:scalar} oldIrqlFlags: int;
  var {:scalar} oldIrql_7: int;
  var {:pointer} pIrpStack_6: int;
  var {:pointer} Tmp_852: int;
  var {:pointer} PIrp_6: int;
  var {:pointer} PDevExt_14: int;
  var vslice_dummy_var_610: int;
  var vslice_dummy_var_611: int;

  anon0:
    PIrp_6 := actual_PIrp_6;
    PDevExt_14 := actual_PDevExt_14;
    call {:si_unique_call 2100} pIrpStack_6 := sdv_IoGetCurrentIrpStackLocation(PIrp_6);
    call {:si_unique_call 2101} Tmp_852 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_852 != 0;
    assume Tmp_852 > 0;
    call {:si_unique_call 2102} sdv_KeAcquireSpinLock(0, Tmp_852);
    assume {:nonnull} Tmp_852 != 0;
    assume Tmp_852 > 0;
    havoc oldIrqlFlags;
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L14;

  L14:
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L16;

  L16:
    call {:si_unique_call 2103} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    assume {:nonnull} pIrpStack_6 != 0;
    assume pIrpStack_6 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_851 := 0;
    goto L1;

  L1:
    return;

  anon23_Then:
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    Tmp_851 := -1073741738;
    goto L1;

  anon21_Then:
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 2104} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    assume {:nonnull} pIrpStack_6 != 0;
    assume pIrpStack_6 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_851 := 0;
    goto L1;

  anon26_Then:
    call {:si_unique_call 2105} Tmp_852 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_852 != 0;
    assume Tmp_852 > 0;
    call {:si_unique_call 2106} IoAcquireCancelSpinLock(Tmp_852);
    assume {:nonnull} Tmp_852 != 0;
    assume Tmp_852 > 0;
    havoc oldIrql_7;
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 2107} IoReleaseCancelSpinLock(oldIrql_7);
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    Tmp_851 := -1073741536;
    goto L1;

  anon27_Then:
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    call {:si_unique_call 2108} sdv_IoMarkIrpPending(0);
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    call {:si_unique_call 2109} vslice_dummy_var_610 := sdv_InsertTailList(StalledIrpQueue__CYZ_DEVICE_EXTENSION(PDevExt_14), ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(PIrp_6))));
    call {:si_unique_call 2110} vslice_dummy_var_611 := sdv_IoSetCancelRoutine(PIrp_6, li2bplFunctionConstant151);
    call {:si_unique_call 2111} IoReleaseCancelSpinLock(oldIrql_7);
    Tmp_851 := 259;
    goto L1;

  anon25_Then:
    call {:si_unique_call 2112} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    Tmp_851 := 0;
    goto L1;

  anon24_Then:
    goto L16;

  anon22_Then:
    goto L16;

  anon19_Then:
    assume {:nonnull} PDevExt_14 != 0;
    assume PDevExt_14 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 2113} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    Tmp_851 := 0;
    goto L1;

  anon20_Then:
    goto L14;
}



procedure {:origName "CyzStartOrQueue"} CyzStartOrQueue(actual_Extension_39: int, actual_Irp_9: int, actual_QueueToExamine: int, actual_CurrentOpIrp_5: int, actual_Starter_1: int) returns (Tmp_853: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued, stack_location;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzStartOrQueue"} CyzStartOrQueue(actual_Extension_39: int, actual_Irp_9: int, actual_QueueToExamine: int, actual_CurrentOpIrp_5: int, actual_Starter_1: int) returns (Tmp_853: int)
{
  var {:pointer} Tmp_854: int;
  var {:pointer} irpSp_3: int;
  var {:pointer} sdv_715: int;
  var {:pointer} Tmp_855: int;
  var {:pointer} sdv_717: int;
  var {:pointer} sdv_719: int;
  var {:scalar} oldIrql_8: int;
  var {:pointer} sdv_720: int;
  var {:scalar} sdv_721: int;
  var {:pointer} sdv_724: int;
  var {:pointer} Extension_39: int;
  var {:pointer} Irp_9: int;
  var {:pointer} QueueToExamine: int;
  var {:pointer} CurrentOpIrp_5: int;
  var {:scalar} Starter_1: int;
  var vslice_dummy_var_612: int;
  var vslice_dummy_var_613: int;
  var vslice_dummy_var_614: int;

  anon0:
    Extension_39 := actual_Extension_39;
    Irp_9 := actual_Irp_9;
    QueueToExamine := actual_QueueToExamine;
    CurrentOpIrp_5 := actual_CurrentOpIrp_5;
    Starter_1 := actual_Starter_1;
    call {:si_unique_call 2114} Tmp_855 := __HAVOC_malloc(72);
    call {:si_unique_call 2115} Tmp_854 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_854 != 0;
    assume Tmp_854 > 0;
    call {:si_unique_call 2116} IoAcquireCancelSpinLock(Tmp_854);
    assume {:nonnull} Tmp_854 != 0;
    assume Tmp_854 > 0;
    havoc oldIrql_8;
    call {:si_unique_call 2117} sdv_715 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} sdv_715 != 0;
    assume sdv_715 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 2118} sdv_720 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} Extension_39 != 0;
    assume Extension_39 > 0;
    assume {:nonnull} sdv_720 != 0;
    assume sdv_720 > 0;
    goto L18;

  L18:
    call {:si_unique_call 2119} sdv_721 := sdv_IsListEmpty(0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_721 != 0;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    call {:si_unique_call 2120} IoReleaseCancelSpinLock(oldIrql_8);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant131;
    call {:si_unique_call 2121} Tmp_853 := CyzStartFlush(Extension_39);
    goto L1;

  L1:
    return;

  anon36_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant177;
    call {:si_unique_call 2122} Tmp_853 := CyzStartMask(Extension_39);
    goto L1;

  anon35_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant380;
    call {:si_unique_call 2123} Tmp_853 := CyzStartPurge(Extension_39);
    goto L1;

  anon34_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant381;
    call {:si_unique_call 2124} Tmp_853 := CyzStartRead(Extension_39);
    goto L1;

  anon29_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant194;
    call {:si_unique_call 2125} Tmp_853 := CyzStartWrite#1(Extension_39);
    goto L1;

  anon28_Then:
    goto L22;

  L22:
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 2126} irpSp_3 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    call {:si_unique_call 2127} IoReleaseCancelSpinLock(oldIrql_8);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 2128} sdv_ExFreePool(0);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    goto L42;

  L42:
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    Tmp_855 := strConst__li2bpl3;
    call {:si_unique_call 2129} vslice_dummy_var_614 := CyzDbgPrintEx(9, Tmp_855);
    call {:si_unique_call 2130} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2131} CyzIRPEpilogue(Extension_39);
    Tmp_853 := -1073741536;
    goto L1;

  anon30_Then:
    goto L42;

  anon27_Then:
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 2132} sdv_IoMarkIrpPending(0);
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    call {:si_unique_call 2133} vslice_dummy_var_612 := sdv_InsertTailList(QueueToExamine, ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(Irp_9))));
    call {:si_unique_call 2134} vslice_dummy_var_613 := sdv_IoSetCancelRoutine(Irp_9, li2bplFunctionConstant149);
    call {:si_unique_call 2135} IoReleaseCancelSpinLock(oldIrql_8);
    Tmp_853 := 259;
    goto L1;

  anon26_Then:
    assume {:partition} sdv_721 == 0;
    goto L22;

  anon25_Then:
    call {:si_unique_call 2136} sdv_719 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} sdv_719 != 0;
    assume sdv_719 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 2137} sdv_717 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} sdv_717 != 0;
    assume sdv_717 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto L78;

  L78:
    assume {:nonnull} Extension_39 != 0;
    assume Extension_39 > 0;
    goto L18;

  anon32_Then:
    call {:si_unique_call 2138} sdv_724 := sdv_IoGetCurrentIrpStackLocation(Irp_9);
    assume {:nonnull} sdv_724 != 0;
    assume sdv_724 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto L78;

  anon33_Then:
    goto L18;

  anon31_Then:
    goto L18;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_615: int;

  anon0:
    call {:si_unique_call 2139} vslice_dummy_var_615 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzCancelTimer"} CyzCancelTimer(actual_Timer_1: int, actual_PDevExt_15: int) returns (Tmp_858: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_858 == 1 || Tmp_858 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCancelTimer"} CyzCancelTimer(actual_Timer_1: int, actual_PDevExt_15: int) returns (Tmp_858: int)
{
  var {:scalar} cancelled_2: int;
  var {:pointer} Timer_1: int;
  var {:pointer} PDevExt_15: int;
  var vslice_dummy_var_173: int;

  anon0:
    Timer_1 := actual_Timer_1;
    PDevExt_15 := actual_PDevExt_15;
    call {:si_unique_call 2140} cancelled_2 := KeCancelTimer(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} cancelled_2 != 0;
    assume {:nonnull} Timer_1 != 0;
    assume Timer_1 > 0;
    havoc vslice_dummy_var_173;
    call {:si_unique_call 2141} CyzDpcEpilogue(PDevExt_15, vslice_dummy_var_173);
    goto L9;

  L9:
    Tmp_858 := cancelled_2;
    return;

  anon3_Then:
    assume {:partition} cancelled_2 == 0;
    goto L9;
}



procedure {:origName "CyzIoCallDriver"} CyzIoCallDriver(actual_PDevExt_16: int, actual_PDevObj_14: int, actual_PIrp_7: int) returns (Tmp_860: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_860 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzIoCallDriver"} CyzIoCallDriver(actual_PDevExt_16: int, actual_PDevObj_14: int, actual_PIrp_7: int) returns (Tmp_860: int)
{
  var {:scalar} status_22: int;
  var {:pointer} PDevExt_16: int;
  var {:pointer} PDevObj_14: int;
  var {:pointer} PIrp_7: int;

  anon0:
    PDevExt_16 := actual_PDevExt_16;
    PDevObj_14 := actual_PDevObj_14;
    PIrp_7 := actual_PIrp_7;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume PIrp_7 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2142} SLIC_sdv_IoCallDriver_entry(0);
    goto L13;

  L13:
    call {:si_unique_call 2143} status_22 := sdv_IoCallDriver(PDevObj_14, PIrp_7);
    call {:si_unique_call 2144} CyzIRPEpilogue(PDevExt_16);
    Tmp_860 := status_22;
    return;

  anon3_Then:
    assume !(PIrp_7 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L13;
}



procedure {:origName "CyzSetDeviceFlags"} CyzSetDeviceFlags(actual_PDevExt_17: int, actual_PFlags: int, actual_Value: int, actual_Set: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetDeviceFlags"} CyzSetDeviceFlags(actual_PDevExt_17: int, actual_PFlags: int, actual_Value: int, actual_Set: int)
{
  var {:scalar} oldIrql_9: int;
  var {:pointer} Tmp_862: int;
  var {:pointer} PFlags: int;
  var {:scalar} Value: int;
  var {:scalar} Set: int;
  var vslice_dummy_var_616: int;

  anon0:
    call {:si_unique_call 2145} vslice_dummy_var_616 := __HAVOC_malloc(4);
    PFlags := actual_PFlags;
    Value := actual_Value;
    Set := actual_Set;
    call {:si_unique_call 2146} Tmp_862 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_862 != 0;
    assume Tmp_862 > 0;
    call {:si_unique_call 2147} sdv_KeAcquireSpinLock(0, Tmp_862);
    assume {:nonnull} Tmp_862 != 0;
    assume Tmp_862 > 0;
    havoc oldIrql_9;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Set != 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    goto L10;

  L10:
    call {:si_unique_call 2148} sdv_KeReleaseSpinLock(0, oldIrql_9);
    return;

  anon3_Then:
    assume {:partition} Set == 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    goto L10;
}



procedure {:origName "CyzKillAllStalled"} CyzKillAllStalled(actual_PDevObj_15: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, stack_location, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} stack_location == old(stack_location);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzKillAllStalled"} CyzKillAllStalled(actual_PDevObj_15: int)
{
  var {:pointer} currentLastIrp_1: int;
  var {:pointer} Tmp_864: int;
  var {:scalar} cancelIrql_1: int;
  var {:pointer} pDevExt_16: int;
  var {:scalar} sdv_727: int;
  var {:pointer} sdv_728: int;
  var {:scalar} cancelRoutine_2: int;
  var {:pointer} PDevObj_15: int;
  var vslice_dummy_var_617: int;
  var vslice_dummy_var_618: int;
  var vslice_dummy_var_619: int;
  var vslice_dummy_var_620: int;
  var vslice_dummy_var_621: int;
  var vslice_dummy_var_622: int;
  var vslice_dummy_var_174: int;

  anon0:
    call {:si_unique_call 2149} vslice_dummy_var_617 := __HAVOC_malloc(4);
    PDevObj_15 := actual_PDevObj_15;
    assume {:nonnull} PDevObj_15 != 0;
    assume PDevObj_15 > 0;
    havoc pDevExt_16;
    call {:si_unique_call 2150} Tmp_864 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_864 != 0;
    assume Tmp_864 > 0;
    call {:si_unique_call 2151} IoAcquireCancelSpinLock(Tmp_864);
    assume {:nonnull} Tmp_864 != 0;
    assume Tmp_864 > 0;
    havoc cancelIrql_1;
    goto L10;

  L10:
    call {:si_unique_call 2152} currentLastIrp_1, Tmp_864, cancelIrql_1, sdv_727, sdv_728, cancelRoutine_2, vslice_dummy_var_618, vslice_dummy_var_619, vslice_dummy_var_620, vslice_dummy_var_621, vslice_dummy_var_622 := CyzKillAllStalled_loop_L10(currentLastIrp_1, Tmp_864, cancelIrql_1, pDevExt_16, sdv_727, sdv_728, cancelRoutine_2, PDevObj_15, vslice_dummy_var_618, vslice_dummy_var_619, vslice_dummy_var_620, vslice_dummy_var_621, vslice_dummy_var_622);
    goto L10_last;

  L10_last:
    call {:si_unique_call 2169} sdv_727 := sdv_IsListEmpty(0);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_727 == 0;
    assume {:nonnull} pDevExt_16 != 0;
    assume pDevExt_16 > 0;
    havoc vslice_dummy_var_174;
    call {:si_unique_call 2153} sdv_728 := sdv_containing_record(vslice_dummy_var_174, 88);
    currentLastIrp_1 := sdv_728;
    call {:si_unique_call 2154} vslice_dummy_var_618 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    havoc cancelRoutine_2;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant456;
    call {:si_unique_call 2155} CyzCancelCurrentRead(PDevObj_15, currentLastIrp_1);
    goto L32;

  L32:
    call {:si_unique_call 2156} Tmp_864 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_864 != 0;
    assume Tmp_864 > 0;
    call {:si_unique_call 2157} IoAcquireCancelSpinLock(Tmp_864);
    assume {:nonnull} Tmp_864 != 0;
    assume Tmp_864 > 0;
    havoc cancelIrql_1;
    goto L32_dummy;

  L32_dummy:
    assume false;
    return;

  anon32_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant196;
    call {:si_unique_call 2158} CyzCancelCurrentWrite(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon31_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant198;
    call {:si_unique_call 2159} CyzCancelCurrentXoff(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon30_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant312;
    call {:si_unique_call 2160} CyzCancelImmediate(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon29_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant149;
    call {:si_unique_call 2161} CyzCancelQueued(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon28_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant178;
    call {:si_unique_call 2162} CyzCancelWait(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon27_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant151;
    call {:si_unique_call 2163} CyzFilterCancelQueued(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon26_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant334;
    call {:si_unique_call 2164} vslice_dummy_var_622 := CyzInternalIoControl(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon25_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant338;
    call {:si_unique_call 2165} vslice_dummy_var_621 := CyzQueryInformationFile(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon24_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant339;
    call {:si_unique_call 2166} vslice_dummy_var_620 := CyzSetInformationFile(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon33_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant262;
    call {:si_unique_call 2167} vslice_dummy_var_619 := CyzSystemControlDispatch(PDevObj_15, currentLastIrp_1);
    goto L32;

  anon23_Then:
    assume {:partition} sdv_727 != 0;
    call {:si_unique_call 2168} IoReleaseCancelSpinLock(cancelIrql_1);
    return;
}



procedure {:origName "CyzFilterCancelQueued"} CyzFilterCancelQueued(actual_PDevObj_16: int, actual_PIrp_8: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzFilterCancelQueued"} CyzFilterCancelQueued(actual_PDevObj_16: int, actual_PIrp_8: int)
{
  var {:pointer} PDevObj_16: int;
  var {:pointer} PIrp_8: int;
  var vslice_dummy_var_623: int;
  var vslice_dummy_var_624: int;
  var vslice_dummy_var_625: int;
  var vslice_dummy_var_175: int;

  anon0:
    call {:si_unique_call 2170} vslice_dummy_var_623 := __HAVOC_malloc(4);
    PDevObj_16 := actual_PDevObj_16;
    PIrp_8 := actual_PIrp_8;
    assume {:nonnull} PDevObj_16 != 0;
    assume PDevObj_16 > 0;
    call {:si_unique_call 2171} vslice_dummy_var_624 := sdv_IoGetCurrentIrpStackLocation(PIrp_8);
    assume {:nonnull} PIrp_8 != 0;
    assume PIrp_8 > 0;
    assume {:nonnull} PIrp_8 != 0;
    assume PIrp_8 > 0;
    call {:si_unique_call 2172} vslice_dummy_var_625 := sdv_RemoveEntryList(0);
    assume {:nonnull} PIrp_8 != 0;
    assume PIrp_8 > 0;
    havoc vslice_dummy_var_175;
    call {:si_unique_call 2173} IoReleaseCancelSpinLock(vslice_dummy_var_175);
    return;
}



procedure {:origName "CyzGetNextIrpLocked"} CyzGetNextIrpLocked(actual_CurrentOpIrp_6: int, actual_QueueToProcess_3: int, actual_NextIrp_1: int, actual_CompleteCurrent_2: int, actual_extension_13: int, actual_OldIrql_7: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetNextIrpLocked"} CyzGetNextIrpLocked(actual_CurrentOpIrp_6: int, actual_QueueToProcess_3: int, actual_NextIrp_1: int, actual_CompleteCurrent_2: int, actual_extension_13: int, actual_OldIrql_7: int)
{
  var {:scalar} sdv_732: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} sdv_736: int;
  var {:pointer} Tmp_869: int;
  var {:pointer} headOfList: int;
  var {:pointer} CurrentOpIrp_6: int;
  var {:pointer} QueueToProcess_3: int;
  var {:pointer} NextIrp_1: int;
  var {:scalar} CompleteCurrent_2: int;
  var {:pointer} extension_13: int;
  var {:scalar} OldIrql_7: int;
  var vslice_dummy_var_626: int;
  var vslice_dummy_var_627: int;
  var vslice_dummy_var_628: int;
  var vslice_dummy_var_176: int;

  anon0:
    call {:si_unique_call 2174} vslice_dummy_var_626 := __HAVOC_malloc(4);
    CurrentOpIrp_6 := actual_CurrentOpIrp_6;
    QueueToProcess_3 := actual_QueueToProcess_3;
    NextIrp_1 := actual_NextIrp_1;
    CompleteCurrent_2 := actual_CompleteCurrent_2;
    extension_13 := actual_extension_13;
    OldIrql_7 := actual_OldIrql_7;
    call {:si_unique_call 2175} Tmp_869 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    havoc oldIrp_1;
    call {:si_unique_call 2176} sdv_732 := sdv_IsListEmpty(0);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} sdv_732 == 0;
    call {:si_unique_call 2177} headOfList := RemoveHeadList(QueueToProcess_3);
    call {:si_unique_call 2178} sdv_736 := sdv_containing_record(headOfList, 88);
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    havoc vslice_dummy_var_176;
    call {:si_unique_call 2179} vslice_dummy_var_628 := sdv_IoSetCancelRoutine(vslice_dummy_var_176, 0);
    goto L11;

  L11:
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    assume {:nonnull} NextIrp_1 != 0;
    assume NextIrp_1 > 0;
    call {:si_unique_call 2180} IoReleaseCancelSpinLock(OldIrql_7);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} CompleteCurrent_2 != 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} oldIrp_1 != 0;
    Tmp_869 := strConst__li2bpl3;
    call {:si_unique_call 2181} vslice_dummy_var_627 := CyzDbgPrintEx(9, Tmp_869);
    call {:si_unique_call 2182} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2183} CyzIRPEpilogue(extension_13);
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} oldIrp_1 == 0;
    goto L1;

  anon8_Then:
    assume {:partition} CompleteCurrent_2 == 0;
    goto L1;

  anon7_Then:
    assume {:partition} sdv_732 != 0;
    assume {:nonnull} CurrentOpIrp_6 != 0;
    assume CurrentOpIrp_6 > 0;
    goto L11;
}



procedure {:origName "CyzPoCallDriver"} CyzPoCallDriver(actual_PDevExt_18: int, actual_PDevObj_17: int, actual_PIrp_9: int) returns (Tmp_871: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_871 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzPoCallDriver"} CyzPoCallDriver(actual_PDevExt_18: int, actual_PDevObj_17: int, actual_PIrp_9: int) returns (Tmp_871: int)
{
  var {:scalar} status_23: int;
  var {:pointer} PDevExt_18: int;
  var {:pointer} PIrp_9: int;

  anon0:
    PDevExt_18 := actual_PDevExt_18;
    PIrp_9 := actual_PIrp_9;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume PIrp_9 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2184} SLIC_PoCallDriver_entry(0);
    goto L13;

  L13:
    call {:si_unique_call 2185} status_23 := PoCallDriver(0, PIrp_9);
    call {:si_unique_call 2186} CyzIRPEpilogue(PDevExt_18);
    Tmp_871 := status_23;
    return;

  anon3_Then:
    assume !(PIrp_9 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L13;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_629: int;

  anon0:
    call {:si_unique_call 2187} vslice_dummy_var_629 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzGiveXoffToIsr"} CyzGiveXoffToIsr(actual_Context_32: int) returns (Tmp_883: int);
  free ensures {:va_keep} Tmp_883 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGiveXoffToIsr"} CyzGiveXoffToIsr(actual_Context_32: int) returns (Tmp_883: int)
{
  var {:pointer} s_p_e_c_i_a_l_27: int;
  var {:pointer} sdv_749: int;
  var {:scalar} s_p_e_c_i_a_l_28: int;
  var {:pointer} Extension_41: int;
  var {:pointer} Tmp_885: int;
  var {:pointer} Xc_1: int;
  var {:pointer} Context_32: int;
  var vslice_dummy_var_177: int;

  anon0:
    Context_32 := actual_Context_32;
    Extension_41 := Context_32;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc Tmp_885;
    assume {:nonnull} Tmp_885 != 0;
    assume Tmp_885 > 0;
    havoc Xc_1;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    assume {:nonnull} Xc_1 != 0;
    assume Xc_1 > 0;
    s_p_e_c_i_a_l_28 := 1;
    assume {:nonnull} Extension_41 != 0;
    assume Extension_41 > 0;
    havoc vslice_dummy_var_177;
    call {:si_unique_call 2188} sdv_749 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_177);
    assume {:nonnull} sdv_749 != 0;
    assume sdv_749 > 0;
    s_p_e_c_i_a_l_27 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_749)));
    assume {:nonnull} s_p_e_c_i_a_l_27 != 0;
    assume s_p_e_c_i_a_l_27 > 0;
    Tmp_883 := 0;
    return;
}



procedure {:origName "CyzProcessEmptyTransmit"} CyzProcessEmptyTransmit(actual_Context_33: int) returns (Tmp_886: int);
  modifies alloc, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_886 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzProcessEmptyTransmit"} CyzProcessEmptyTransmit(actual_Context_33: int) returns (Tmp_886: int)
{
  var {:pointer} Tmp_887: int;
  var {:scalar} sdv_750: int;
  var {:pointer} Tmp_889: int;
  var {:pointer} Extension_42: int;
  var {:pointer} Context_33: int;
  var vslice_dummy_var_630: int;
  var vslice_dummy_var_631: int;

  anon0:
    Context_33 := actual_Context_33;
    Extension_42 := Context_33;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 2189} sdv_750 := sdv_IsListEmpty(0);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} sdv_750 != 0;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    havoc Tmp_889;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    assume {:nonnull} Tmp_889 != 0;
    assume Tmp_889 > 0;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    havoc Tmp_887;
    assume {:nonnull} Tmp_887 != 0;
    assume Tmp_887 > 0;
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    call {:si_unique_call 2190} vslice_dummy_var_630 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_42), 0, 0, Extension_42);
    goto L17;

  L17:
    assume {:nonnull} Extension_42 != 0;
    assume Extension_42 > 0;
    call {:si_unique_call 2191} vslice_dummy_var_631 := CyzPerhapsLowerRTS(Extension_42);
    goto L6;

  L6:
    Tmp_886 := 0;
    return;

  anon21_Then:
    goto L17;

  anon19_Then:
    assume {:partition} sdv_750 == 0;
    goto L6;

  anon18_Then:
    goto L6;

  anon17_Then:
    goto L6;

  anon16_Then:
    goto L6;

  anon15_Then:
    goto L6;

  anon20_Then:
    goto L6;
}



procedure {:origName "CyzGiveWriteToIsr"} CyzGiveWriteToIsr(actual_Context_34: int) returns (Tmp_890: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_890 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGiveWriteToIsr"} CyzGiveWriteToIsr(actual_Context_34: int) returns (Tmp_890: int)
{
  var {:scalar} Tmp_891: int;
  var {:pointer} s_p_e_c_i_a_l_29: int;
  var {:pointer} Tmp_892: int;
  var {:pointer} IrpSp_2: int;
  var {:pointer} sdv_754: int;
  var {:scalar} s_p_e_c_i_a_l_30: int;
  var {:pointer} Extension_43: int;
  var {:pointer} Tmp_893: int;
  var {:pointer} Context_34: int;
  var vslice_dummy_var_632: int;
  var vslice_dummy_var_633: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;

  anon0:
    Context_34 := actual_Context_34;
    Extension_43 := Context_34;
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    havoc vslice_dummy_var_178;
    call {:si_unique_call 2192} IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_178);
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    havoc Tmp_893;
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    assume {:nonnull} Tmp_893 != 0;
    assume Tmp_893 > 0;
    goto L15;

  L15:
    s_p_e_c_i_a_l_30 := 1;
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    havoc vslice_dummy_var_179;
    call {:si_unique_call 2193} sdv_754 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_179);
    assume {:nonnull} sdv_754 != 0;
    assume sdv_754 > 0;
    s_p_e_c_i_a_l_29 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_754)));
    assume {:nonnull} s_p_e_c_i_a_l_29 != 0;
    assume s_p_e_c_i_a_l_29 > 0;
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    goto L26;

  L26:
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    havoc Tmp_891;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} Tmp_891 == 192;
    call {:si_unique_call 2194} vslice_dummy_var_633 := CyzSetRTS(Extension_43);
    goto L28;

  L28:
    Tmp_890 := 0;
    return;

  anon9_Then:
    assume {:partition} Tmp_891 != 192;
    goto L28;

  anon8_Then:
    call {:si_unique_call 2195} vslice_dummy_var_632 := CyzTxStart#1(Extension_43);
    goto L26;

  anon7_Then:
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    havoc Tmp_892;
    assume {:nonnull} Extension_43 != 0;
    assume Extension_43 > 0;
    assume {:nonnull} Tmp_892 != 0;
    assume Tmp_892 > 0;
    goto L15;
}



procedure {:origName "CyzGrabXoffFromIsr"} CyzGrabXoffFromIsr(actual_Context_35: int) returns (Tmp_895: int);
  free ensures {:va_keep} Tmp_895 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGrabXoffFromIsr"} CyzGrabXoffFromIsr(actual_Context_35: int) returns (Tmp_895: int)
{
  var {:pointer} s_p_e_c_i_a_l_31: int;
  var {:pointer} sdv_757: int;
  var {:scalar} s_p_e_c_i_a_l_32: int;
  var {:pointer} Extension_44: int;
  var {:pointer} Context_35: int;
  var vslice_dummy_var_180: int;

  anon0:
    Context_35 := actual_Context_35;
    Extension_44 := Context_35;
    assume {:nonnull} Extension_44 != 0;
    assume Extension_44 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} Extension_44 != 0;
    assume Extension_44 > 0;
    s_p_e_c_i_a_l_32 := 1;
    assume {:nonnull} Extension_44 != 0;
    assume Extension_44 > 0;
    havoc vslice_dummy_var_180;
    call {:si_unique_call 2196} sdv_757 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_180);
    assume {:nonnull} sdv_757 != 0;
    assume sdv_757 > 0;
    s_p_e_c_i_a_l_31 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_757)));
    assume {:nonnull} s_p_e_c_i_a_l_31 != 0;
    assume s_p_e_c_i_a_l_31 > 0;
    goto L6;

  L6:
    Tmp_895 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "CyzCancelCurrentXoff"} CyzCancelCurrentXoff(actual_DeviceObject_11: int, actual_Irp_10: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCancelCurrentXoff"} CyzCancelCurrentXoff(actual_DeviceObject_11: int, actual_Irp_10: int)
{
  var {:pointer} Extension_45: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_634: int;
  var vslice_dummy_var_181: int;

  anon0:
    call {:si_unique_call 2197} vslice_dummy_var_634 := __HAVOC_malloc(4);
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_10 := actual_Irp_10;
    assume {:nonnull} DeviceObject_11 != 0;
    assume DeviceObject_11 > 0;
    havoc Extension_45;
    assume {:nonnull} Extension_45 != 0;
    assume Extension_45 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    havoc vslice_dummy_var_181;
    call {:si_unique_call 2198} CyzTryToCompleteCurrent#1(Extension_45, li2bplFunctionConstant195, vslice_dummy_var_181, -1073741536, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_45), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_45), 0, 0, 2);
    return;
}



procedure {:origName "CyzCancelCurrentWrite"} CyzCancelCurrentWrite(actual_DeviceObject_12: int, actual_Irp_11: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCancelCurrentWrite"} CyzCancelCurrentWrite(actual_DeviceObject_12: int, actual_Irp_11: int)
{
  var {:pointer} Extension_46: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} Irp_11: int;
  var vslice_dummy_var_635: int;
  var vslice_dummy_var_182: int;

  anon0:
    call {:si_unique_call 2199} vslice_dummy_var_635 := __HAVOC_malloc(4);
    DeviceObject_12 := actual_DeviceObject_12;
    Irp_11 := actual_Irp_11;
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    havoc Extension_46;
    assume {:nonnull} Extension_46 != 0;
    assume Extension_46 > 0;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    havoc vslice_dummy_var_182;
    call {:si_unique_call 2200} CyzTryToCompleteCurrent#1(Extension_46, li2bplFunctionConstant202, vslice_dummy_var_182, -1073741536, CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_46), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_46), 0, WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_46), li2bplFunctionConstant194, li2bplFunctionConstant197, 2);
    return;
}



procedure {:origName "CyzGrabWriteFromIsr"} CyzGrabWriteFromIsr(actual_Context_36: int) returns (Tmp_901: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_901 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGrabWriteFromIsr"} CyzGrabWriteFromIsr(actual_Context_36: int) returns (Tmp_901: int)
{
  var {:pointer} s_p_e_c_i_a_l_33: int;
  var {:pointer} Tmp_902: int;
  var {:pointer} Tmp_903: int;
  var {:pointer} sdv_758: int;
  var {:pointer} sdv_759: int;
  var {:scalar} s_p_e_c_i_a_l_34: int;
  var {:pointer} Extension_47: int;
  var {:pointer} sdv_760: int;
  var {:pointer} Context_36: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;

  anon0:
    Context_36 := actual_Context_36;
    Extension_47 := Context_36;
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    havoc vslice_dummy_var_183;
    call {:si_unique_call 2201} sdv_758 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_183);
    assume {:nonnull} sdv_758 != 0;
    assume sdv_758 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    havoc vslice_dummy_var_184;
    call {:si_unique_call 2202} sdv_759 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_184);
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    havoc Tmp_902;
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    assume {:nonnull} Tmp_902 != 0;
    assume Tmp_902 > 0;
    assume {:nonnull} sdv_759 != 0;
    assume sdv_759 > 0;
    goto L17;

  L17:
    s_p_e_c_i_a_l_34 := 1;
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    havoc vslice_dummy_var_185;
    call {:si_unique_call 2203} sdv_760 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_185);
    assume {:nonnull} sdv_760 != 0;
    assume sdv_760 > 0;
    s_p_e_c_i_a_l_33 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_760)));
    assume {:nonnull} s_p_e_c_i_a_l_33 != 0;
    assume s_p_e_c_i_a_l_33 > 0;
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    call {:si_unique_call 2204} CyzIssueCmd(Extension_47, 87, 0, 1);
    goto L6;

  L6:
    Tmp_901 := 0;
    return;

  anon9_Then:
    goto L6;

  anon7_Then:
    assume {:nonnull} Extension_47 != 0;
    assume Extension_47 > 0;
    havoc Tmp_903;
    assume {:nonnull} Tmp_903 != 0;
    assume Tmp_903 > 0;
    goto L17;

  anon8_Then:
    goto L6;
}



procedure {:origName "CyzGetNextWrite"} CyzGetNextWrite(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_4: int, actual_CompleteCurrent_3: int, actual_Extension_48: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetNextWrite"} CyzGetNextWrite(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_4: int, actual_CompleteCurrent_3: int, actual_Extension_48: int)
{
  var {:pointer} s_p_e_c_i_a_l_35: int;
  var {:pointer} sdv_761: int;
  var {:scalar} OldIrql_9: int;
  var {:pointer} Irp_12: int;
  var {:pointer} Tmp_905: int;
  var {:scalar} pollIrql_11: int;
  var {:scalar} OldIrql_10: int;
  var {:pointer} sdv_764: int;
  var {:pointer} Tmp_906: int;
  var {:scalar} OldIrql_11: int;
  var {:pointer} sdv_766: int;
  var {:pointer} Tmp_908: int;
  var {:scalar} s_p_e_c_i_a_l_36: int;
  var {:pointer} sdv_768: int;
  var {:pointer} sdv_769: int;
  var {:pointer} sdv_770: int;
  var {:pointer} s_p_e_c_i_a_l_37: int;
  var {:scalar} delta: int;
  var {:pointer} Xc_2: int;
  var {:scalar} s_p_e_c_i_a_l_38: int;
  var {:scalar} pollIrql_12: int;
  var {:pointer} Tmp_909: int;
  var {:pointer} CurrentOpIrp_7: int;
  var {:pointer} QueueToProcess_4: int;
  var {:pointer} NewIrp_4: int;
  var {:scalar} CompleteCurrent_3: int;
  var {:pointer} Extension_48: int;
  var vslice_dummy_var_636: int;
  var vslice_dummy_var_637: int;
  var vslice_dummy_var_638: int;
  var vslice_dummy_var_639: int;
  var vslice_dummy_var_640: int;
  var vslice_dummy_var_641: int;
  var vslice_dummy_var_642: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;

  anon0:
    call {:si_unique_call 2205} vslice_dummy_var_636 := __HAVOC_malloc(4);
    call {:si_unique_call 2206} delta := __HAVOC_malloc(20);
    CurrentOpIrp_7 := actual_CurrentOpIrp_7;
    QueueToProcess_4 := actual_QueueToProcess_4;
    NewIrp_4 := actual_NewIrp_4;
    CompleteCurrent_3 := actual_CompleteCurrent_3;
    Extension_48 := actual_Extension_48;
    call {:si_unique_call 2207} Tmp_905 := __HAVOC_malloc(92);
    call {:si_unique_call 2208} Tmp_906 := __HAVOC_malloc(72);
    Tmp_905 := strConst__li2bpl209;
    call {:si_unique_call 2209} vslice_dummy_var_640 := CyzDbgPrintEx(2, Tmp_905);
    goto L6;

  L6:
    call {:si_unique_call 2210} s_p_e_c_i_a_l_35, sdv_761, Irp_12, pollIrql_11, OldIrql_10, sdv_764, OldIrql_11, sdv_766, Tmp_908, s_p_e_c_i_a_l_36, sdv_768, sdv_769, sdv_770, s_p_e_c_i_a_l_37, Xc_2, s_p_e_c_i_a_l_38, Tmp_909, CompleteCurrent_3, vslice_dummy_var_638, vslice_dummy_var_639, vslice_dummy_var_642 := CyzGetNextWrite_loop_L6(s_p_e_c_i_a_l_35, sdv_761, Irp_12, pollIrql_11, OldIrql_10, sdv_764, OldIrql_11, sdv_766, Tmp_908, s_p_e_c_i_a_l_36, sdv_768, sdv_769, sdv_770, s_p_e_c_i_a_l_37, delta, Xc_2, s_p_e_c_i_a_l_38, Tmp_909, CurrentOpIrp_7, QueueToProcess_4, NewIrp_4, CompleteCurrent_3, Extension_48, vslice_dummy_var_638, vslice_dummy_var_639, vslice_dummy_var_642);
    goto L6_last;

  L6_last:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_189;
    call {:si_unique_call 2237} sdv_766 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_189);
    assume {:nonnull} sdv_766 != 0;
    assume sdv_766 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 2211} Tmp_909 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    call {:si_unique_call 2212} IoAcquireCancelSpinLock(Tmp_909);
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    havoc OldIrql_11;
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_186;
    call {:si_unique_call 2213} sdv_770 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_186);
    assume {:nonnull} Extension_48 != 0;
    assume Extension_48 > 0;
    assume {:nonnull} sdv_770 != 0;
    assume sdv_770 > 0;
    call {:si_unique_call 2214} IoReleaseCancelSpinLock(OldIrql_11);
    goto L24;

  L24:
    call {:si_unique_call 2215} CyzGetNextIrp(CurrentOpIrp_7, QueueToProcess_4, NewIrp_4, CompleteCurrent_3, Extension_48);
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 2216} Tmp_909 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    call {:si_unique_call 2217} IoAcquireCancelSpinLock(Tmp_909);
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    havoc OldIrql_9;
    call {:si_unique_call 2218} Tmp_909 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    call {:si_unique_call 2219} sdv_KeAcquireSpinLock(0, Tmp_909);
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    havoc pollIrql_12;
    call {:si_unique_call 2220} vslice_dummy_var_637 := CyzProcessEmptyTransmit(Extension_48);
    call {:si_unique_call 2221} sdv_KeReleaseSpinLock(0, pollIrql_12);
    call {:si_unique_call 2222} IoReleaseCancelSpinLock(OldIrql_9);
    goto L36;

  L36:
    Tmp_906 := strConst__li2bpl210;
    call {:si_unique_call 2223} vslice_dummy_var_641 := CyzDbgPrintEx(2, Tmp_906);
    return;

  anon16_Then:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    havoc vslice_dummy_var_187;
    call {:si_unique_call 2224} sdv_769 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_187);
    assume {:nonnull} sdv_769 != 0;
    assume sdv_769 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto L36;

  anon17_Then:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    havoc Tmp_908;
    assume {:nonnull} Tmp_908 != 0;
    assume Tmp_908 > 0;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_188;
    call {:si_unique_call 2225} sdv_768 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_188);
    assume {:nonnull} sdv_768 != 0;
    assume sdv_768 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 2226} Tmp_909 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    call {:si_unique_call 2227} IoAcquireCancelSpinLock(Tmp_909);
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    havoc OldIrql_10;
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc Irp_12;
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    havoc Xc_2;
    assume {:nonnull} Extension_48 != 0;
    assume Extension_48 > 0;
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L69;

  L69:
    call {:si_unique_call 2228} IoReleaseCancelSpinLock(OldIrql_10);
    goto L24;

  anon21_Then:
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    goto L69;

  anon19_Then:
    call {:si_unique_call 2229} vslice_dummy_var_638 := sdv_IoSetCancelRoutine(Irp_12, li2bplFunctionConstant198);
    s_p_e_c_i_a_l_36 := 2;
    call {:si_unique_call 2230} sdv_764 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    assume {:nonnull} sdv_764 != 0;
    assume sdv_764 > 0;
    s_p_e_c_i_a_l_35 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_764)));
    assume {:nonnull} s_p_e_c_i_a_l_35 != 0;
    assume s_p_e_c_i_a_l_35 > 0;
    CompleteCurrent_3 := 0;
    assume {:nonnull} Extension_48 != 0;
    assume Extension_48 > 0;
    call {:si_unique_call 2231} Tmp_909 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    call {:si_unique_call 2232} sdv_KeAcquireSpinLock(0, Tmp_909);
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    havoc pollIrql_11;
    call {:si_unique_call 2233} vslice_dummy_var_639 := CyzGiveXoffToIsr(Extension_48);
    call {:si_unique_call 2234} sdv_KeReleaseSpinLock(0, pollIrql_11);
    assume {:nonnull} Xc_2 != 0;
    assume Xc_2 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Xc_2 != 0;
    assume Xc_2 > 0;
    assume {:nonnull} delta != 0;
    assume delta > 0;
    assume {:nonnull} Extension_48 != 0;
    assume Extension_48 > 0;
    call {:si_unique_call 2235} vslice_dummy_var_642 := CyzSetTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_48), delta, XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_48), Extension_48);
    s_p_e_c_i_a_l_38 := 4;
    call {:si_unique_call 2236} sdv_761 := sdv_IoGetCurrentIrpStackLocation(Irp_12);
    assume {:nonnull} sdv_761 != 0;
    assume sdv_761 > 0;
    s_p_e_c_i_a_l_37 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_761)));
    assume {:nonnull} s_p_e_c_i_a_l_37 != 0;
    assume s_p_e_c_i_a_l_37 > 0;
    goto L69;

  anon20_Then:
    goto L69;

  anon18_Then:
    goto L24;
}



procedure {:origName "CyzWrite"} CyzWrite(actual_DeviceObject_13: int, actual_Irp_13: int) returns (Tmp_910: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued, yogi_error, stack_location;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzWrite"} CyzWrite(actual_DeviceObject_13: int, actual_Irp_13: int) returns (Tmp_910: int)
{
  var {:pointer} Tmp_911: int;
  var {:pointer} Tmp_912: int;
  var {:scalar} sdv_775: int;
  var {:pointer} Tmp_913: int;
  var {:pointer} sdv_777: int;
  var {:pointer} Tmp_914: int;
  var {:pointer} Tmp_915: int;
  var {:pointer} Extension_49: int;
  var {:pointer} Tmp_917: int;
  var {:pointer} Tmp_918: int;
  var {:scalar} status_24: int;
  var {:pointer} Tmp_919: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_643: int;
  var vslice_dummy_var_644: int;
  var vslice_dummy_var_645: int;
  var vslice_dummy_var_646: int;
  var vslice_dummy_var_647: int;
  var vslice_dummy_var_648: int;
  var vslice_dummy_var_649: int;
  var vslice_dummy_var_650: int;

  anon0:
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_13 := actual_Irp_13;
    call {:si_unique_call 2238} Tmp_911 := __HAVOC_malloc(96);
    call {:si_unique_call 2239} Tmp_912 := __HAVOC_malloc(72);
    call {:si_unique_call 2240} Tmp_913 := __HAVOC_malloc(72);
    call {:si_unique_call 2241} Tmp_914 := __HAVOC_malloc(72);
    call {:si_unique_call 2242} Tmp_915 := __HAVOC_malloc(76);
    call {:si_unique_call 2243} Tmp_917 := __HAVOC_malloc(72);
    call {:si_unique_call 2244} Tmp_918 := __HAVOC_malloc(72);
    call {:si_unique_call 2245} Tmp_919 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc Extension_49;
    Tmp_915 := strConst__li2bpl215;
    call {:si_unique_call 2246} vslice_dummy_var_643 := CyzDbgPrintEx(2, Tmp_915);
    call {:si_unique_call 2247} status_24 := CyzIRPPrologue(Irp_13, Extension_49);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_24 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_24 != 259;
    Tmp_918 := strConst__li2bpl3;
    call {:si_unique_call 2248} vslice_dummy_var_644 := CyzDbgPrintEx(9, Tmp_918);
    call {:si_unique_call 2249} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2250} CyzIRPEpilogue(Extension_49);
    goto L18;

  L18:
    Tmp_914 := strConst__li2bpl211;
    call {:si_unique_call 2251} vslice_dummy_var_645 := CyzDbgPrintEx(2, Tmp_914);
    Tmp_910 := status_24;
    goto L1;

  L1:
    call {:si_unique_call 2252} SLIC_CyzWrite_exit(strConst__li2bpl0, Tmp_910);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} status_24 == 259;
    goto L18;

  anon11_Then:
    assume {:partition} status_24 == 0;
    Tmp_911 := strConst__li2bpl1;
    call {:si_unique_call 2253} vslice_dummy_var_646 := CyzDbgPrintEx(9, Tmp_911);
    call {:si_unique_call 2254} sdv_775 := CyzCompleteIfError(DeviceObject_13, Irp_13);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_775 != 0;
    Tmp_913 := strConst__li2bpl212;
    call {:si_unique_call 2255} vslice_dummy_var_647 := CyzDbgPrintEx(2, Tmp_913);
    Tmp_910 := -1073741536;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_775 == 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 2256} sdv_777 := sdv_IoGetCurrentIrpStackLocation(Irp_13);
    assume {:nonnull} sdv_777 != 0;
    assume sdv_777 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Extension_49 != 0;
    assume Extension_49 > 0;
    call {:si_unique_call 2257} status_24 := CyzStartOrQueue(Extension_49, Irp_13, WriteQueue__CYZ_DEVICE_EXTENSION(Extension_49), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_49), li2bplFunctionConstant194);
    Tmp_919 := strConst__li2bpl213;
    call {:si_unique_call 2258} vslice_dummy_var_648 := CyzDbgPrintEx(2, Tmp_919);
    Tmp_910 := status_24;
    goto L1;

  anon14_Then:
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    Tmp_917 := strConst__li2bpl3;
    call {:si_unique_call 2259} vslice_dummy_var_649 := CyzDbgPrintEx(9, Tmp_917);
    call {:si_unique_call 2260} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2261} CyzIRPEpilogue(Extension_49);
    Tmp_912 := strConst__li2bpl214;
    call {:si_unique_call 2262} vslice_dummy_var_650 := CyzDbgPrintEx(2, Tmp_912);
    Tmp_910 := 0;
    goto L1;
}



procedure {:origName "CyzFinishOldWait"} CyzFinishOldWait(actual_Context_37: int) returns (Tmp_920: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} Tmp_920 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzFinishOldWait"} CyzFinishOldWait(actual_Context_37: int) returns (Tmp_920: int)
{
  var {:pointer} Tmp_921: int;
  var {:pointer} Tmp_922: int;
  var {:pointer} Tmp_923: int;
  var {:pointer} Tmp_924: int;
  var {:pointer} Tmp_925: int;
  var {:pointer} Tmp_926: int;
  var {:pointer} Tmp_927: int;
  var {:pointer} Tmp_929: int;
  var {:pointer} Extension_50: int;
  var {:pointer} Tmp_930: int;
  var {:pointer} Tmp_931: int;
  var {:pointer} Tmp_932: int;
  var {:pointer} Context_37: int;
  var vslice_dummy_var_651: int;
  var vslice_dummy_var_652: int;
  var vslice_dummy_var_653: int;
  var vslice_dummy_var_654: int;

  anon0:
    Context_37 := actual_Context_37;
    call {:si_unique_call 2263} Tmp_924 := __HAVOC_malloc(336);
    call {:si_unique_call 2264} Tmp_926 := __HAVOC_malloc(248);
    call {:si_unique_call 2265} Tmp_929 := __HAVOC_malloc(84);
    Extension_50 := Context_37;
    Tmp_929 := strConst__li2bpl217;
    call {:si_unique_call 2266} vslice_dummy_var_651 := CyzDbgPrintEx(6, Tmp_929);
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_924 := strConst__li2bpl216;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc Tmp_931;
    call {:si_unique_call 2267} vslice_dummy_var_652 := CyzDbgPrintEx(7, Tmp_924);
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc Tmp_925;
    assume {:nonnull} Tmp_925 != 0;
    assume Tmp_925 > 0;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc Tmp_921;
    assume {:nonnull} Tmp_921 != 0;
    assume Tmp_921 > 0;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    call {:si_unique_call 2268} vslice_dummy_var_653 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_50), 0, 0, Extension_50);
    goto L9;

  L9:
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc Tmp_923;
    assume {:nonnull} Tmp_923 != 0;
    assume Tmp_923 > 0;
    havoc Tmp_927;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    assume {:nonnull} Tmp_927 != 0;
    assume Tmp_927 > 0;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc Tmp_922;
    assume {:nonnull} Tmp_922 != 0;
    assume Tmp_922 > 0;
    havoc Tmp_930;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    assume {:nonnull} Tmp_930 != 0;
    assume Tmp_930 > 0;
    Tmp_926 := strConst__li2bpl218;
    assume {:nonnull} Extension_50 != 0;
    assume Extension_50 > 0;
    havoc Tmp_932;
    call {:si_unique_call 2269} vslice_dummy_var_654 := CyzDbgPrintEx(7, Tmp_926);
    Tmp_920 := 0;
    return;

  anon3_Then:
    goto L9;
}



procedure {:origName "CyzGiveWaitToIsr"} CyzGiveWaitToIsr(actual_Context_38: int) returns (Tmp_933: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} Tmp_933 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGiveWaitToIsr"} CyzGiveWaitToIsr(actual_Context_38: int) returns (Tmp_933: int)
{
  var {:pointer} s_p_e_c_i_a_l_39: int;
  var {:pointer} Tmp_935: int;
  var {:pointer} Tmp_936: int;
  var {:pointer} Tmp_937: int;
  var {:pointer} sdv_791: int;
  var {:scalar} s_p_e_c_i_a_l_40: int;
  var {:pointer} Tmp_938: int;
  var {:pointer} Extension_51: int;
  var {:pointer} Tmp_939: int;
  var {:pointer} Tmp_940: int;
  var {:pointer} Tmp_941: int;
  var {:pointer} Tmp_942: int;
  var {:pointer} Tmp_943: int;
  var {:pointer} Tmp_944: int;
  var {:pointer} Context_38: int;
  var vslice_dummy_var_655: int;
  var vslice_dummy_var_656: int;
  var vslice_dummy_var_657: int;
  var vslice_dummy_var_658: int;
  var vslice_dummy_var_659: int;
  var vslice_dummy_var_190: int;

  anon0:
    Context_38 := actual_Context_38;
    call {:si_unique_call 2270} Tmp_935 := __HAVOC_malloc(312);
    call {:si_unique_call 2271} Tmp_936 := __HAVOC_malloc(168);
    call {:si_unique_call 2272} Tmp_938 := __HAVOC_malloc(84);
    call {:si_unique_call 2273} Tmp_943 := __HAVOC_malloc(308);
    Extension_51 := Context_38;
    Tmp_938 := strConst__li2bpl221;
    call {:si_unique_call 2274} vslice_dummy_var_655 := CyzDbgPrintEx(6, Tmp_938);
    s_p_e_c_i_a_l_40 := 1;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    havoc vslice_dummy_var_190;
    call {:si_unique_call 2275} sdv_791 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_190);
    assume {:nonnull} sdv_791 != 0;
    assume sdv_791 > 0;
    s_p_e_c_i_a_l_39 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_791)));
    assume {:nonnull} s_p_e_c_i_a_l_39 != 0;
    assume s_p_e_c_i_a_l_39 > 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_943 := strConst__li2bpl220;
    call {:si_unique_call 2276} vslice_dummy_var_656 := CyzDbgPrintEx(7, Tmp_943);
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    havoc Tmp_941;
    assume {:nonnull} Tmp_941 != 0;
    assume Tmp_941 > 0;
    havoc Tmp_940;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    assume {:nonnull} Tmp_940 != 0;
    assume Tmp_940 > 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    havoc Tmp_944;
    assume {:nonnull} Tmp_944 != 0;
    assume Tmp_944 > 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    havoc Tmp_939;
    assume {:nonnull} Tmp_939 != 0;
    assume Tmp_939 > 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    call {:si_unique_call 2277} vslice_dummy_var_657 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_51), 0, 0, Extension_51);
    goto L30;

  L30:
    Tmp_933 := 0;
    return;

  anon3_Then:
    Tmp_936 := strConst__li2bpl219;
    call {:si_unique_call 2278} vslice_dummy_var_658 := CyzDbgPrintEx(7, Tmp_936);
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    havoc Tmp_937;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    assume {:nonnull} Tmp_937 != 0;
    assume Tmp_937 > 0;
    Tmp_935 := strConst__li2bpl222;
    assume {:nonnull} Extension_51 != 0;
    assume Extension_51 > 0;
    havoc Tmp_942;
    call {:si_unique_call 2279} vslice_dummy_var_659 := CyzDbgPrintEx(7, Tmp_935);
    goto L30;
}



procedure {:origName "CyzStartMask"} CyzStartMask(actual_Extension_52: int) returns (Tmp_945: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzStartMask"} CyzStartMask(actual_Extension_52: int) returns (Tmp_945: int)
{
  var {:pointer} Tmp_946: int;
  var {:pointer} s_p_e_c_i_a_l_41: int;
  var {:scalar} FirstStatus_1: int;
  var {:pointer} Tmp_947: int;
  var {:scalar} SetFirstStatus_1: int;
  var {:pointer} Tmp_948: int;
  var {:pointer} Tmp_949: int;
  var {:pointer} Tmp_950: int;
  var {:pointer} Tmp_951: int;
  var {:pointer} Tmp_952: int;
  var {:pointer} Tmp_953: int;
  var {:pointer} Tmp_954: int;
  var {:pointer} IrpSp_3: int;
  var {:scalar} OldIrql_12: int;
  var {:pointer} Tmp_955: int;
  var {:pointer} NewIrp_5: int;
  var {:scalar} s_p_e_c_i_a_l_42: int;
  var {:pointer} Tmp_956: int;
  var {:pointer} sdv_810: int;
  var {:pointer} Tmp_957: int;
  var {:pointer} Tmp_958: int;
  var {:pointer} Tmp_959: int;
  var {:pointer} Tmp_960: int;
  var {:pointer} Tmp_961: int;
  var {:pointer} Tmp_962: int;
  var {:pointer} sdv_813: int;
  var {:pointer} Tmp_963: int;
  var {:scalar} pollIrql_13: int;
  var {:pointer} Tmp_964: int;
  var {:pointer} Extension_52: int;
  var vslice_dummy_var_660: int;
  var vslice_dummy_var_661: int;
  var vslice_dummy_var_662: int;
  var vslice_dummy_var_663: int;
  var vslice_dummy_var_664: int;
  var vslice_dummy_var_665: int;
  var vslice_dummy_var_666: int;
  var vslice_dummy_var_667: int;
  var vslice_dummy_var_668: int;
  var vslice_dummy_var_669: int;
  var vslice_dummy_var_670: int;
  var vslice_dummy_var_671: int;
  var vslice_dummy_var_672: int;
  var vslice_dummy_var_673: int;
  var vslice_dummy_var_674: int;
  var vslice_dummy_var_675: int;
  var vslice_dummy_var_676: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;

  anon0:
    call {:si_unique_call 2280} NewIrp_5 := __HAVOC_malloc(4);
    Extension_52 := actual_Extension_52;
    call {:si_unique_call 2281} Tmp_946 := __HAVOC_malloc(68);
    call {:si_unique_call 2282} Tmp_947 := __HAVOC_malloc(288);
    call {:si_unique_call 2283} Tmp_949 := __HAVOC_malloc(84);
    call {:si_unique_call 2284} Tmp_950 := __HAVOC_malloc(288);
    call {:si_unique_call 2285} Tmp_951 := __HAVOC_malloc(288);
    call {:si_unique_call 2286} Tmp_952 := __HAVOC_malloc(368);
    call {:si_unique_call 2287} Tmp_953 := __HAVOC_malloc(160);
    call {:si_unique_call 2288} Tmp_957 := __HAVOC_malloc(288);
    call {:si_unique_call 2289} Tmp_958 := __HAVOC_malloc(284);
    call {:si_unique_call 2290} Tmp_959 := __HAVOC_malloc(148);
    call {:si_unique_call 2291} Tmp_960 := __HAVOC_malloc(128);
    call {:si_unique_call 2292} Tmp_961 := __HAVOC_malloc(368);
    call {:si_unique_call 2293} Tmp_962 := __HAVOC_malloc(368);
    call {:si_unique_call 2294} Tmp_964 := __HAVOC_malloc(368);
    SetFirstStatus_1 := 0;
    Tmp_946 := strConst__li2bpl230;
    call {:si_unique_call 2295} vslice_dummy_var_662 := CyzDbgPrintEx(6, Tmp_946);
    goto L12;

  L12:
    call {:si_unique_call 2296} s_p_e_c_i_a_l_41, FirstStatus_1, Tmp_947, SetFirstStatus_1, Tmp_948, Tmp_949, Tmp_950, Tmp_951, Tmp_952, Tmp_953, Tmp_954, IrpSp_3, OldIrql_12, Tmp_955, s_p_e_c_i_a_l_42, Tmp_956, sdv_810, Tmp_957, Tmp_958, Tmp_959, Tmp_960, Tmp_961, Tmp_962, sdv_813, Tmp_963, pollIrql_13, Tmp_964, vslice_dummy_var_660, vslice_dummy_var_661, vslice_dummy_var_663, vslice_dummy_var_664, vslice_dummy_var_665, vslice_dummy_var_666, vslice_dummy_var_667, vslice_dummy_var_668, vslice_dummy_var_669, vslice_dummy_var_670, vslice_dummy_var_671, vslice_dummy_var_672, vslice_dummy_var_673, vslice_dummy_var_674, vslice_dummy_var_675, vslice_dummy_var_676 := CyzStartMask_loop_L12(s_p_e_c_i_a_l_41, FirstStatus_1, Tmp_947, SetFirstStatus_1, Tmp_948, Tmp_949, Tmp_950, Tmp_951, Tmp_952, Tmp_953, Tmp_954, IrpSp_3, OldIrql_12, Tmp_955, NewIrp_5, s_p_e_c_i_a_l_42, Tmp_956, sdv_810, Tmp_957, Tmp_958, Tmp_959, Tmp_960, Tmp_961, Tmp_962, sdv_813, Tmp_963, pollIrql_13, Tmp_964, Extension_52, vslice_dummy_var_660, vslice_dummy_var_661, vslice_dummy_var_663, vslice_dummy_var_664, vslice_dummy_var_665, vslice_dummy_var_666, vslice_dummy_var_667, vslice_dummy_var_668, vslice_dummy_var_669, vslice_dummy_var_670, vslice_dummy_var_671, vslice_dummy_var_672, vslice_dummy_var_673, vslice_dummy_var_674, vslice_dummy_var_675, vslice_dummy_var_676);
    goto L12_last;

  L12_last:
    Tmp_960 := strConst__li2bpl223;
    call {:si_unique_call 2328} vslice_dummy_var_663 := CyzDbgPrintEx(7, Tmp_960);
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    havoc vslice_dummy_var_194;
    call {:si_unique_call 2329} IrpSp_3 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_194);
    assume {:nonnull} IrpSp_3 != 0;
    assume IrpSp_3 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    Tmp_949 := strConst__li2bpl224;
    call {:si_unique_call 2297} vslice_dummy_var_664 := CyzDbgPrintEx(7, Tmp_949);
    call {:si_unique_call 2298} Tmp_955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_955 != 0;
    assume Tmp_955 > 0;
    call {:si_unique_call 2299} sdv_KeAcquireSpinLock(0, Tmp_955);
    assume {:nonnull} Tmp_955 != 0;
    assume Tmp_955 > 0;
    havoc pollIrql_13;
    call {:si_unique_call 2300} vslice_dummy_var_660 := CyzFinishOldWait(Extension_52);
    call {:si_unique_call 2301} sdv_KeReleaseSpinLock(0, pollIrql_13);
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    havoc Tmp_956;
    assume {:nonnull} Tmp_956 != 0;
    assume Tmp_956 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L38;

  L38:
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    call {:si_unique_call 2302} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_52), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_52), NewIrp_5, 1, Extension_52);
    Tmp_961 := strConst__li2bpl226;
    call {:si_unique_call 2303} vslice_dummy_var_665 := CyzDbgPrintEx(7, Tmp_961);
    goto L44;

  L44:
    assume {:nonnull} NewIrp_5 != 0;
    assume NewIrp_5 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    Tmp_945 := FirstStatus_1;
    return;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    assume false;
    return;

  anon24_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_947 := strConst__li2bpl225;
    call {:si_unique_call 2304} vslice_dummy_var_666 := CyzDbgPrintEx(7, Tmp_947);
    FirstStatus_1 := 0;
    SetFirstStatus_1 := 1;
    goto L38;

  anon19_Then:
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 2305} Tmp_955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_955 != 0;
    assume Tmp_955 > 0;
    call {:si_unique_call 2306} IoAcquireCancelSpinLock(Tmp_955);
    assume {:nonnull} Tmp_955 != 0;
    assume Tmp_955 > 0;
    havoc OldIrql_12;
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    havoc Tmp_954;
    assume {:nonnull} Tmp_954 != 0;
    assume Tmp_954 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    Tmp_953 := strConst__li2bpl229;
    call {:si_unique_call 2307} vslice_dummy_var_670 := CyzDbgPrintEx(7, Tmp_953);
    call {:si_unique_call 2308} IoReleaseCancelSpinLock(OldIrql_12);
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    havoc Tmp_963;
    assume {:nonnull} Tmp_963 != 0;
    assume Tmp_963 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L71;

  L71:
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    call {:si_unique_call 2309} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_52), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_52), NewIrp_5, 1, Extension_52);
    Tmp_962 := strConst__li2bpl226;
    call {:si_unique_call 2310} vslice_dummy_var_671 := CyzDbgPrintEx(7, Tmp_962);
    goto L44;

  anon27_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_951 := strConst__li2bpl225;
    call {:si_unique_call 2311} vslice_dummy_var_672 := CyzDbgPrintEx(7, Tmp_951);
    FirstStatus_1 := -1073741536;
    SetFirstStatus_1 := 1;
    goto L71;

  anon26_Then:
    Tmp_959 := strConst__li2bpl228;
    call {:si_unique_call 2312} vslice_dummy_var_673 := CyzDbgPrintEx(7, Tmp_959);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L83;

  L83:
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    havoc vslice_dummy_var_191;
    call {:si_unique_call 2313} sdv_810 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_191);
    assume {:nonnull} sdv_810 != 0;
    assume sdv_810 > 0;
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    havoc vslice_dummy_var_192;
    call {:si_unique_call 2314} vslice_dummy_var_674 := sdv_IoSetCancelRoutine(vslice_dummy_var_192, li2bplFunctionConstant178);
    s_p_e_c_i_a_l_42 := 2;
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    havoc vslice_dummy_var_193;
    call {:si_unique_call 2315} sdv_813 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_193);
    assume {:nonnull} sdv_813 != 0;
    assume sdv_813 > 0;
    s_p_e_c_i_a_l_41 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_813)));
    assume {:nonnull} s_p_e_c_i_a_l_41 != 0;
    assume s_p_e_c_i_a_l_41 > 0;
    call {:si_unique_call 2316} Tmp_955 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_955 != 0;
    assume Tmp_955 > 0;
    call {:si_unique_call 2317} sdv_KeAcquireSpinLock(0, Tmp_955);
    assume {:nonnull} Tmp_955 != 0;
    assume Tmp_955 > 0;
    havoc pollIrql_13;
    call {:si_unique_call 2318} vslice_dummy_var_661 := CyzGiveWaitToIsr(Extension_52);
    call {:si_unique_call 2319} sdv_KeReleaseSpinLock(0, pollIrql_13);
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    call {:si_unique_call 2320} CyzGetNextIrpLocked(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_52), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_52), NewIrp_5, 0, Extension_52, OldIrql_12);
    Tmp_952 := strConst__li2bpl226;
    call {:si_unique_call 2321} vslice_dummy_var_675 := CyzDbgPrintEx(7, Tmp_952);
    goto L44;

  anon23_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_957 := strConst__li2bpl225;
    call {:si_unique_call 2322} vslice_dummy_var_676 := CyzDbgPrintEx(7, Tmp_957);
    FirstStatus_1 := 259;
    SetFirstStatus_1 := 1;
    call {:si_unique_call 2323} sdv_IoMarkIrpPending(0);
    goto L83;

  anon22_Then:
    goto L48;

  L48:
    Tmp_958 := strConst__li2bpl227;
    call {:si_unique_call 2324} vslice_dummy_var_667 := CyzDbgPrintEx(7, Tmp_958);
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    havoc Tmp_948;
    assume {:nonnull} Tmp_948 != 0;
    assume Tmp_948 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L125;

  L125:
    assume {:nonnull} Extension_52 != 0;
    assume Extension_52 > 0;
    call {:si_unique_call 2325} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(Extension_52), MaskQueue__CYZ_DEVICE_EXTENSION(Extension_52), NewIrp_5, 1, Extension_52);
    Tmp_964 := strConst__li2bpl226;
    call {:si_unique_call 2326} vslice_dummy_var_668 := CyzDbgPrintEx(7, Tmp_964);
    goto L44;

  anon25_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_950 := strConst__li2bpl225;
    call {:si_unique_call 2327} vslice_dummy_var_669 := CyzDbgPrintEx(7, Tmp_950);
    FirstStatus_1 := -1073741811;
    SetFirstStatus_1 := 1;
    goto L125;

  anon20_Then:
    goto L48;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_677: int;

  anon0:
    call {:si_unique_call 2330} vslice_dummy_var_677 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzCancelWait"} CyzCancelWait(actual_DeviceObject_14: int, actual_Irp_14: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCancelWait"} CyzCancelWait(actual_DeviceObject_14: int, actual_Irp_14: int)
{
  var {:pointer} Tmp_967: int;
  var {:pointer} Tmp_968: int;
  var {:pointer} Extension_53: int;
  var {:pointer} DeviceObject_14: int;
  var {:pointer} Irp_14: int;
  var vslice_dummy_var_678: int;
  var vslice_dummy_var_679: int;
  var vslice_dummy_var_680: int;
  var vslice_dummy_var_195: int;

  anon0:
    call {:si_unique_call 2331} vslice_dummy_var_678 := __HAVOC_malloc(4);
    DeviceObject_14 := actual_DeviceObject_14;
    Irp_14 := actual_Irp_14;
    call {:si_unique_call 2332} Tmp_967 := __HAVOC_malloc(108);
    call {:si_unique_call 2333} Tmp_968 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_14 != 0;
    assume DeviceObject_14 > 0;
    havoc Extension_53;
    Tmp_968 := strConst__li2bpl232;
    call {:si_unique_call 2334} vslice_dummy_var_679 := CyzDbgPrintEx(6, Tmp_968);
    Tmp_967 := strConst__li2bpl231;
    call {:si_unique_call 2335} vslice_dummy_var_680 := CyzDbgPrintEx(7, Tmp_967);
    assume {:nonnull} Extension_53 != 0;
    assume Extension_53 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    havoc vslice_dummy_var_195;
    call {:si_unique_call 2336} CyzTryToCompleteCurrent#1(Extension_53, li2bplFunctionConstant179, vslice_dummy_var_195, -1073741536, CurrentWaitIrp__CYZ_DEVICE_EXTENSION(Extension_53), 0, 0, 0, 0, 0, 2);
    return;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead: int)
{
  var {:pointer} ListHead: int;
  var vslice_dummy_var_681: int;

  anon0:
    call {:si_unique_call 2337} vslice_dummy_var_681 := __HAVOC_malloc(4);
    ListHead := actual_ListHead;
    assume {:nonnull} ListHead != 0;
    assume ListHead > 0;
    assume {:nonnull} ListHead != 0;
    assume ListHead > 0;
    return;
}



procedure {:origName "CyzQueueCompleteWrite"} CyzQueueCompleteWrite(actual_Extension_55: int);
  modifies alloc, queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzQueueCompleteWrite"} CyzQueueCompleteWrite(actual_Extension_55: int)
{
  var {:pointer} IrpSp_4: int;
  var {:pointer} Tmp_1042: int;
  var {:scalar} Tmp_1043: int;
  var {:pointer} Extension_55: int;
  var vslice_dummy_var_682: int;
  var vslice_dummy_var_683: int;
  var vslice_dummy_var_196: int;

  anon0:
    call {:si_unique_call 2338} vslice_dummy_var_682 := __HAVOC_malloc(4);
    Extension_55 := actual_Extension_55;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc vslice_dummy_var_196;
    call {:si_unique_call 2339} IrpSp_4 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_196);
    assume {:nonnull} IrpSp_4 != 0;
    assume IrpSp_4 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} IrpSp_4 != 0;
    assume IrpSp_4 > 0;
    havoc Tmp_1043;
    goto L11;

  L11:
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    havoc Tmp_1042;
    assume {:nonnull} Tmp_1042 != 0;
    assume Tmp_1042 > 0;
    assume {:nonnull} Extension_55 != 0;
    assume Extension_55 > 0;
    call {:si_unique_call 2340} vslice_dummy_var_683 := CyzInsertQueueDpc(CompleteWriteDpc__CYZ_DEVICE_EXTENSION(Extension_55), 0, 0, Extension_55);
    return;

  anon3_Then:
    Tmp_1043 := 1;
    goto L11;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_1: int) returns (Tmp_1044: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_1: int) returns (Tmp_1044: int)
{
  var {:pointer} Entry: int;
  var {:pointer} Flink: int;
  var {:pointer} ListHead_1: int;

  anon0:
    ListHead_1 := actual_ListHead_1;
    call {:si_unique_call 2341} SLIC_RemoveHeadList_entry(strConst__li2bpl0);
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    havoc Entry;
    assume {:nonnull} Entry != 0;
    assume Entry > 0;
    havoc Flink;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    Tmp_1044 := Entry;
    return;
}



procedure {:origName "CyzDbgPrintEx"} CyzDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_1046: int);
  free ensures {:va_keep} Tmp_1046 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzDbgPrintEx"} CyzDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_1046: int)
{

  anon0:
    Tmp_1046 := 0;
    return;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_684: int;

  anon0:
    call {:si_unique_call 2342} vslice_dummy_var_684 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlConvertLongToLargeInteger"} RtlConvertLongToLargeInteger(actual_SignedInteger: int) returns (SD2_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlConvertLongToLargeInteger"} RtlConvertLongToLargeInteger(actual_SignedInteger: int) returns (SD2_1: int)
{
  var {:scalar} Result_4: int;
  var {:scalar} Tmp_2: int;
  var {:scalar} SignedInteger: int;

  anon0:
    call {:si_unique_call 2343} Result_4 := __HAVOC_malloc(20);
    call {:si_unique_call 2344} Tmp_2 := __HAVOC_malloc(20);
    SignedInteger := actual_SignedInteger;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} Result_4 != 0;
    assume Result_4 > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    SD2_1 := Tmp_2;
    return;
}



procedure {:origName "CyzAmountInTxBuffer"} CyzAmountInTxBuffer(actual_extension_14: int) returns (Tmp_1051: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzAmountInTxBuffer"} CyzAmountInTxBuffer(actual_extension_14: int) returns (Tmp_1051: int)
{
  var {:scalar} txAmount1: int;
  var {:scalar} tx_8: int;
  var {:scalar} tx_9: int;
  var {:scalar} txAmount2: int;
  var {:scalar} tx_10: int;
  var {:pointer} extension_14: int;

  anon0:
    extension_14 := actual_extension_14;
    assume {:nonnull} extension_14 != 0;
    assume extension_14 > 0;
    call {:si_unique_call 2345} tx_9 := corral_nondet();
    call {:si_unique_call 2346} tx_10 := corral_nondet();
    assume {:nonnull} extension_14 != 0;
    assume extension_14 > 0;
    havoc tx_8;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} tx_9 >= tx_10;
    txAmount1 := tx_9 - tx_10;
    txAmount2 := 0;
    goto L23;

  L23:
    Tmp_1051 := txAmount1 + txAmount2;
    return;

  anon3_Then:
    assume {:partition} tx_10 > tx_9;
    txAmount1 := tx_8 - tx_10;
    txAmount2 := tx_9;
    goto L23;
}



procedure {:origName "CyzCheckIfTxEmpty"} CyzCheckIfTxEmpty(actual_Context_40: int) returns (Tmp_1053: int);
  free ensures {:va_keep} Tmp_1053 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCheckIfTxEmpty"} CyzCheckIfTxEmpty(actual_Context_40: int) returns (Tmp_1053: int)
{
  var {:pointer} pHoldingEmpty: int;
  var {:pointer} S_13: int;
  var {:pointer} Extension_56: int;
  var {:pointer} Context_40: int;

  anon0:
    Context_40 := actual_Context_40;
    S_13 := Context_40;
    assume {:nonnull} S_13 != 0;
    assume S_13 > 0;
    havoc Extension_56;
    assume {:nonnull} S_13 != 0;
    assume S_13 > 0;
    havoc pHoldingEmpty;
    assume {:nonnull} Extension_56 != 0;
    assume Extension_56 > 0;
    assume {:nonnull} pHoldingEmpty != 0;
    assume pHoldingEmpty > 0;
    Tmp_1053 := 0;
    return;
}



procedure {:origName "RtlLargeIntegerNegate"} RtlLargeIntegerNegate(actual_structPtr888Subtrahend: int) returns (SD1_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlLargeIntegerNegate"} RtlLargeIntegerNegate(actual_structPtr888Subtrahend: int) returns (SD1_1: int)
{
  var {:scalar} Subtrahend: int;
  var {:scalar} Difference: int;
  var {:scalar} Tmp_1: int;
  var {:pointer} structPtr888Subtrahend: int;

  anon0:
    call {:si_unique_call 2347} Subtrahend := __HAVOC_malloc(20);
    call {:si_unique_call 2348} Difference := __HAVOC_malloc(20);
    call {:si_unique_call 2349} Tmp_1 := __HAVOC_malloc(20);
    structPtr888Subtrahend := actual_structPtr888Subtrahend;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} structPtr888Subtrahend != 0;
    assume structPtr888Subtrahend > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Subtrahend != 0;
    assume Subtrahend > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} Difference != 0;
    assume Difference > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    SD1_1 := Tmp_1;
    return;
}



procedure {:origName "CyzQueryInformationFile"} CyzQueryInformationFile(actual_DeviceObject_15: int, actual_Irp_15: int) returns (Tmp_1069: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1069 == 0 || Tmp_1069 == -1073741536 || Tmp_1069 == 259 || Tmp_1069 == -1073741738 || Tmp_1069 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzQueryInformationFile"} CyzQueryInformationFile(actual_DeviceObject_15: int, actual_Irp_15: int) returns (Tmp_1069: int)
{
  var {:scalar} Status_2: int;
  var {:pointer} Tmp_1070: int;
  var {:pointer} IrpSp_5: int;
  var {:pointer} Tmp_1071: int;
  var {:scalar} sdv_846: int;
  var {:pointer} Tmp_1072: int;
  var {:scalar} status_25: int;
  var {:pointer} Buf: int;
  var {:pointer} Tmp_1074: int;
  var {:pointer} DeviceObject_15: int;
  var {:pointer} Irp_15: int;
  var vslice_dummy_var_685: int;
  var vslice_dummy_var_686: int;
  var vslice_dummy_var_687: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;

  anon0:
    DeviceObject_15 := actual_DeviceObject_15;
    Irp_15 := actual_Irp_15;
    call {:si_unique_call 2350} Tmp_1070 := __HAVOC_malloc(72);
    call {:si_unique_call 2351} Tmp_1072 := __HAVOC_malloc(96);
    call {:si_unique_call 2352} Tmp_1074 := __HAVOC_malloc(72);
    call {:si_unique_call 2353} sdv_do_paged_code_check();
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc vslice_dummy_var_197;
    call {:si_unique_call 2354} status_25 := CyzIRPPrologue(Irp_15, vslice_dummy_var_197);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_25 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_25 != 259;
    Tmp_1074 := strConst__li2bpl3;
    call {:si_unique_call 2355} vslice_dummy_var_685 := CyzDbgPrintEx(9, Tmp_1074);
    call {:si_unique_call 2356} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc vslice_dummy_var_198;
    call {:si_unique_call 2357} CyzIRPEpilogue(vslice_dummy_var_198);
    goto L18;

  L18:
    Tmp_1069 := status_25;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} status_25 == 259;
    goto L18;

  anon11_Then:
    assume {:partition} status_25 == 0;
    Tmp_1072 := strConst__li2bpl1;
    call {:si_unique_call 2358} vslice_dummy_var_686 := CyzDbgPrintEx(9, Tmp_1072);
    call {:si_unique_call 2359} sdv_846 := CyzCompleteIfError(DeviceObject_15, Irp_15);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_846 != 0;
    Tmp_1069 := -1073741536;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_846 == 0;
    call {:si_unique_call 2360} IrpSp_5 := sdv_IoGetCurrentIrpStackLocation(Irp_15);
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    Status_2 := 0;
    assume {:nonnull} IrpSp_5 != 0;
    assume IrpSp_5 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    havoc Buf;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Buf != 0;
    assume Buf > 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    goto L49;

  L49:
    Tmp_1070 := strConst__li2bpl3;
    call {:si_unique_call 2361} vslice_dummy_var_687 := CyzDbgPrintEx(9, Tmp_1070);
    call {:si_unique_call 2362} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject_15 != 0;
    assume DeviceObject_15 > 0;
    havoc vslice_dummy_var_199;
    call {:si_unique_call 2363} CyzIRPEpilogue(vslice_dummy_var_199);
    Tmp_1069 := Status_2;
    goto L1;

  anon15_Then:
    assume {:nonnull} IrpSp_5 != 0;
    assume IrpSp_5 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    havoc Tmp_1071;
    assume {:nonnull} Tmp_1071 != 0;
    assume Tmp_1071 > 0;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    goto L49;

  anon14_Then:
    Status_2 := -1073741811;
    assume {:nonnull} Irp_15 != 0;
    assume Irp_15 > 0;
    goto L49;
}



procedure {:origName "CyzSetInformationFile"} CyzSetInformationFile(actual_DeviceObject_16: int, actual_Irp_16: int) returns (Tmp_1075: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1075 == 0 || Tmp_1075 == -1073741536 || Tmp_1075 == 259 || Tmp_1075 == -1073741738 || Tmp_1075 == -1073741811;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzSetInformationFile"} CyzSetInformationFile(actual_DeviceObject_16: int, actual_Irp_16: int) returns (Tmp_1075: int)
{
  var {:pointer} Tmp_1076: int;
  var {:scalar} Status_3: int;
  var {:pointer} Tmp_1077: int;
  var {:pointer} sdv_849: int;
  var {:scalar} sdv_852: int;
  var {:pointer} sdv_853: int;
  var {:pointer} Tmp_1079: int;
  var {:pointer} DeviceObject_16: int;
  var {:pointer} Irp_16: int;
  var vslice_dummy_var_688: int;
  var vslice_dummy_var_689: int;
  var vslice_dummy_var_690: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;

  anon0:
    DeviceObject_16 := actual_DeviceObject_16;
    Irp_16 := actual_Irp_16;
    call {:si_unique_call 2364} Tmp_1076 := __HAVOC_malloc(96);
    call {:si_unique_call 2365} Tmp_1077 := __HAVOC_malloc(72);
    call {:si_unique_call 2366} Tmp_1079 := __HAVOC_malloc(72);
    call {:si_unique_call 2367} sdv_do_paged_code_check();
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc vslice_dummy_var_200;
    call {:si_unique_call 2368} Status_3 := CyzIRPPrologue(Irp_16, vslice_dummy_var_200);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} Status_3 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} Status_3 != 259;
    Tmp_1077 := strConst__li2bpl3;
    call {:si_unique_call 2369} vslice_dummy_var_688 := CyzDbgPrintEx(9, Tmp_1077);
    call {:si_unique_call 2370} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc vslice_dummy_var_201;
    call {:si_unique_call 2371} CyzIRPEpilogue(vslice_dummy_var_201);
    goto L16;

  L16:
    Tmp_1075 := Status_3;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} Status_3 == 259;
    goto L16;

  anon11_Then:
    assume {:partition} Status_3 == 0;
    Tmp_1076 := strConst__li2bpl1;
    call {:si_unique_call 2372} vslice_dummy_var_689 := CyzDbgPrintEx(9, Tmp_1076);
    call {:si_unique_call 2373} sdv_852 := CyzCompleteIfError(DeviceObject_16, Irp_16);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_852 != 0;
    Tmp_1075 := -1073741536;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_852 == 0;
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    call {:si_unique_call 2374} sdv_853 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} sdv_853 != 0;
    assume sdv_853 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L39;

  L39:
    Status_3 := 0;
    goto L40;

  L40:
    assume {:nonnull} Irp_16 != 0;
    assume Irp_16 > 0;
    Tmp_1079 := strConst__li2bpl3;
    call {:si_unique_call 2375} vslice_dummy_var_690 := CyzDbgPrintEx(9, Tmp_1079);
    call {:si_unique_call 2376} sdv_IoCompleteRequest(0, 0);
    assume {:nonnull} DeviceObject_16 != 0;
    assume DeviceObject_16 > 0;
    havoc vslice_dummy_var_202;
    call {:si_unique_call 2377} CyzIRPEpilogue(vslice_dummy_var_202);
    Tmp_1075 := Status_3;
    goto L1;

  anon14_Then:
    call {:si_unique_call 2378} sdv_849 := sdv_IoGetCurrentIrpStackLocation(Irp_16);
    assume {:nonnull} sdv_849 != 0;
    assume sdv_849 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    Status_3 := -1073741811;
    goto L40;

  anon15_Then:
    goto L39;
}



procedure {:origName "_sdv_init17"} _sdv_init17();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init17"} _sdv_init17()
{
  var vslice_dummy_var_691: int;

  anon0:
    call {:si_unique_call 2379} vslice_dummy_var_691 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_ExInitializeFastMutex"} {:osmodel} sdv_ExInitializeFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_692: int;

  anon0:
    call {:si_unique_call 2380} vslice_dummy_var_692 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_DbgBreakPoint"} {:osmodel} sdv_DbgBreakPoint();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_DbgBreakPoint"} {:osmodel} sdv_DbgBreakPoint()
{
  var vslice_dummy_var_693: int;

  anon0:
    call {:si_unique_call 2381} vslice_dummy_var_693 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_694: int;

  anon0:
    call {:si_unique_call 2382} vslice_dummy_var_694 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_1088: int);
  free ensures {:va_keep} false;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_1088: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    call {:si_unique_call 2383} SLIC_sdv_containing_record_entry(strConst__li2bpl0);
    record := Address;
    Tmp_1088 := record;
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int);
  modifies alloc, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 0;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} locked == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_695: int;

  anon0:
    call {:si_unique_call 2384} vslice_dummy_var_695 := __HAVOC_malloc(4);
    p := actual_p;
    call {:si_unique_call 2385} SLIC_sdv_KeAcquireSpinLock_entry(0);
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_1092: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1092 == -1073741823 || Tmp_1092 == -1073741584 || Tmp_1092 == -1073741808 || Tmp_1092 == 0 || Tmp_1092 == -1073741789 || Tmp_1092 == -1073741670 || Tmp_1092 == -1073741824 || Tmp_1092 == -1073741771 || Tmp_1092 == 26;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RunAddDevice"} {:osmodel} sdv_RunAddDevice(actual_p1: int, actual_p2: int) returns (Tmp_1092: int)
{
  var {:scalar} status_26: int;
  var {:pointer} p1: int;
  var {:pointer} p2: int;

  anon0:
    p1 := actual_p1;
    p2 := actual_p2;
    status_26 := 0;
    call {:si_unique_call 2386} sdv_stub_add_begin();
    call {:si_unique_call 2387} status_26 := CyzAddDevice(p1, p2);
    call {:si_unique_call 2388} sdv_stub_add_end();
    Tmp_1092 := status_26;
    return;
}



procedure {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int)
{
  var vslice_dummy_var_696: int;

  anon0:
    call {:si_unique_call 2389} vslice_dummy_var_696 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer_2: int, actual_SD1_2: int, actual_Dpc_1: int) returns (Tmp_1096: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1096 == 1 || Tmp_1096 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer_2: int, actual_SD1_2: int, actual_Dpc_1: int) returns (Tmp_1096: int)
{
  var {:scalar} DueTime_1: int;
  var {:pointer} SD1_2: int;

  anon0:
    call {:si_unique_call 2390} DueTime_1 := __HAVOC_malloc(20);
    SD1_2 := actual_SD1_2;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1096 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1096 := 0;
    goto L1;
}



procedure {:origName "IoGetDeviceProperty"} {:osmodel} IoGetDeviceProperty(actual_DeviceObject_17: int, actual_DeviceProperty: int, actual_BufferLength: int, actual_PropertyBuffer: int, actual_ResultLength: int) returns (Tmp_1098: int);
  free ensures {:va_keep} Tmp_1098 == -1073741584 || Tmp_1098 == -1073741808 || Tmp_1098 == -1073741823 || Tmp_1098 == 0 || Tmp_1098 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoGetDeviceProperty"} {:osmodel} IoGetDeviceProperty(actual_DeviceObject_17: int, actual_DeviceProperty: int, actual_BufferLength: int, actual_PropertyBuffer: int, actual_ResultLength: int) returns (Tmp_1098: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_857: int;
  var {:scalar} BufferLength: int;
  var {:pointer} ResultLength: int;

  anon0:
    BufferLength := actual_BufferLength;
    ResultLength := actual_ResultLength;
    L := sdv_857;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} 0 >= L;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} L != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == -1;
    Tmp_1098 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} L != -1;
    Tmp_1098 := -1073741808;
    goto L1;

  anon10_Then:
    assume {:partition} L == 0;
    Tmp_1098 := -1073741823;
    goto L1;

  anon12_Then:
    assume {:partition} L > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BufferLength >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_1098 := 0;
    goto L1;

  anon9_Then:
    assume {:partition} L > BufferLength;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_1098 := -1073741789;
    goto L1;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_1100: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_1100: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_1100 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_1100 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_1100 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_2: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_2: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_2: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_697: int;

  anon0:
    call {:si_unique_call 2391} vslice_dummy_var_697 := __HAVOC_malloc(4);
    Dpc_2 := actual_Dpc_2;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_2 != 0;
    assume Dpc_2 > 0;
    return;
}



procedure {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject_5: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_18: int) returns (Tmp_1104: int);
  free ensures {:va_keep} Tmp_1104 == -1073741824 || Tmp_1104 == -1073741771 || Tmp_1104 == -1073741670 || Tmp_1104 == -1073741823 || Tmp_1104 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoCreateDevice"} {:osmodel} IoCreateDevice(actual_DriverObject_5: int, actual_DeviceExtensionSize: int, actual_DeviceName: int, actual_DeviceType: int, actual_DeviceCharacteristics: int, actual_Exclusive: int, actual_DeviceObject_18: int) returns (Tmp_1104: int)
{
  var {:pointer} DeviceObject_18: int;

  anon0:
    DeviceObject_18 := actual_DeviceObject_18;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    Tmp_1104 := -1073741824;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    Tmp_1104 := -1073741771;
    goto L1;

  anon13_Then:
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    Tmp_1104 := -1073741670;
    goto L1;

  anon14_Then:
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    Tmp_1104 := -1073741823;
    goto L1;

  anon15_Then:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} sdv_p_devobj_fdo != 0;
    assume sdv_p_devobj_fdo > 0;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    goto L21;

  L21:
    Tmp_1104 := 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} sdv_p_devobj_child_pdo != 0;
    assume sdv_p_devobj_child_pdo > 0;
    assume {:nonnull} DeviceObject_18 != 0;
    assume DeviceObject_18 > 0;
    goto L21;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_698: int;

  anon0:
    call {:si_unique_call 2392} vslice_dummy_var_698 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_1108: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_1108: int)
{
  var {:scalar} r: int;
  var {:pointer} pirp_2: int;
  var {:scalar} CancelRoutine: int;

  anon0:
    pirp_2 := actual_pirp_2;
    CancelRoutine := actual_CancelRoutine;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    Tmp_1108 := r;
    return;
}



procedure {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int)
{
  var vslice_dummy_var_699: int;

  anon0:
    call {:si_unique_call 2393} vslice_dummy_var_699 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int)
{
  var {:pointer} r_1: int;
  var {:pointer} pirp_3: int;
  var vslice_dummy_var_700: int;

  anon0:
    call {:si_unique_call 2394} vslice_dummy_var_700 := __HAVOC_malloc(4);
    pirp_3 := actual_pirp_3;
    assume {:nonnull} pirp_3 != 0;
    assume pirp_3 > 0;
    havoc r_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s_1: int, actual_pirp_4: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s_1: int, actual_pirp_4: int)
{
  var vslice_dummy_var_701: int;

  anon0:
    call {:si_unique_call 2395} vslice_dummy_var_701 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_41: int, actual_Environment: int) returns (Tmp_1116: int);
  free ensures {:va_keep} Tmp_1116 == 0 || Tmp_1116 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RtlQueryRegistryValues"} {:osmodel} sdv_RtlQueryRegistryValues(actual_RelativeTo: int, actual_Path: int, actual_QueryTable: int, actual_Context_41: int, actual_Environment: int) returns (Tmp_1116: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1116 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1116 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int)
{
  var {:pointer} pirp_5: int;
  var vslice_dummy_var_702: int;

  anon0:
    call {:si_unique_call 2396} vslice_dummy_var_702 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;
}



procedure {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_3: int) returns (Tmp_1120: int);
  free ensures {:va_keep} Tmp_1120 == 1 || Tmp_1120 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_3: int) returns (Tmp_1120: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1120 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1120 := 0;
    goto L1;
}



procedure {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_1122: int);
  free ensures {:va_keep} Tmp_1122 == 0 || Tmp_1122 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_1122: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1122 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1122 := -1073741823;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, SLAM_guard_S_0, stack_location, locked, queuedWithoutMarking, markedPending, queued, yogi_error;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} u: int;
  var vslice_dummy_var_703: int;
  var vslice_dummy_var_704: int;
  var vslice_dummy_var_705: int;
  var vslice_dummy_var_706: int;
  var vslice_dummy_var_707: int;

  anon0:
    call {:si_unique_call 2397} u := __HAVOC_malloc(12);
    call {:si_unique_call 2398} vslice_dummy_var_703 := __HAVOC_malloc(4);
    SLAM_guard_S_0 := sdv_irp;
    assume SLAM_guard_S_0 != 0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    assume {:nonnull} KdDebuggerEnabled != 0;
    assume KdDebuggerEnabled > 0;
    assume {:nonnull} KdDebuggerNotPresent != 0;
    assume KdDebuggerNotPresent > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    call {:si_unique_call 2399} sdv_RunUnload(sdv_driver_object);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon16_Then:
    goto L1;

  anon17_Then:
    call {:si_unique_call 2400} sdv_stub_driver_init();
    call {:si_unique_call 2401} vslice_dummy_var_705 := sdv_RunStartDevice(sdv_p_devobj_fdo, sdv_irp);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon21_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon18_Then:
    call {:si_unique_call 2402} vslice_dummy_var_704 := sdv_RunAddDevice(sdv_driver_object, sdv_p_devobj_pdo);
    goto L1;

  anon19_Then:
    call {:si_unique_call 2403} vslice_dummy_var_707 := DriverEntry(sdv_driver_object, u);
    goto L1;

  anon15_Then:
    call {:si_unique_call 2404} sdv_stub_driver_init();
    call {:si_unique_call 2405} vslice_dummy_var_706 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon20_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_1126: int);
  free ensures {:va_keep} Tmp_1126 == 0 || Tmp_1126 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName_1: int) returns (Tmp_1126: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1126 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1126 := -1073741823;
    goto L1;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_1128: int);
  free ensures {:va_keep} Tmp_1128 == 0 || Tmp_1128 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_1128: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1128 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1128 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_1130: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_1130: int)
{
  var {:pointer} sdv_873: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 2406} sdv_873 := __HAVOC_malloc(1);
    Tmp_1130 := sdv_873;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1130 := 0;
    goto L1;
}



procedure {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_1132: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_1132: int)
{
  var {:pointer} sdv_875: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 2407} sdv_875 := __HAVOC_malloc(NumberOfBytes);
    Tmp_1132 := sdv_875;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1132 := 0;
    goto L1;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_19: int, actual_Irp_17: int) returns (Tmp_1134: int);
  free ensures {:va_keep} Tmp_1134 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_19: int, actual_Irp_17: int) returns (Tmp_1134: int)
{
  var {:scalar} status_28: int;
  var {:pointer} Irp_17: int;

  anon0:
    Irp_17 := actual_Irp_17;
    status_28 := 259;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L25;

  L25:
    Tmp_1134 := status_28;
    return;

  anon33_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon32_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L19;

  anon40_Then:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon39_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L44;

  anon41_Then:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L28;

  anon31_Then:
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    assume {:nonnull} Irp_17 != 0;
    assume Irp_17 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_17;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_17;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_17;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_17;
    goto L36;
}



procedure {:origName "WmiSystemControl"} {:osmodel} WmiSystemControl(actual_WmiLibInfo: int, actual_DeviceObject_20: int, actual_pirp_6: int, actual_IrpDisposition: int) returns (Tmp_1136: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1136 == 0 || Tmp_1136 == -1073741808;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "WmiSystemControl"} {:osmodel} WmiSystemControl(actual_WmiLibInfo: int, actual_DeviceObject_20: int, actual_pirp_6: int, actual_IrpDisposition: int) returns (Tmp_1136: int)
{
  var {:scalar} s_2: int;
  var {:pointer} IrpDisposition: int;

  anon0:
    IrpDisposition := actual_IrpDisposition;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    s_2 := 0;
    call {:si_unique_call 2408} sdv_stub_WmiIrpForward(0);
    goto L24;

  L24:
    Tmp_1136 := s_2;
    return;

  anon11_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    call {:si_unique_call 2409} sdv_stub_WmiIrpForward(0);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    s_2 := 0;
    goto L24;

  anon10_Then:
    s_2 := -1073741808;
    goto L24;

  anon12_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    s_2 := 0;
    call {:si_unique_call 2410} sdv_stub_WmiIrpNotCompleted(0);
    goto L24;

  anon9_Then:
    assume {:nonnull} IrpDisposition != 0;
    assume IrpDisposition > 0;
    s_2 := 0;
    call {:si_unique_call 2411} sdv_stub_WmiIrpProcessed(0);
    goto L24;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_21: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_21: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_2: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 2412} State := __HAVOC_malloc(8);
    call {:si_unique_call 2413} r_2 := __HAVOC_malloc(8);
    call {:si_unique_call 2414} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_3: int) returns (Tmp_1139: int);
  free ensures {:va_keep} Tmp_1139 == 1 || Tmp_1139 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_3: int) returns (Tmp_1139: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1139 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1139 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_708: int;

  anon0:
    call {:si_unique_call 2415} vslice_dummy_var_708 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_7: int, actual_CompletionRoutine: int, actual_Context_42: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_7: int, actual_CompletionRoutine: int, actual_Context_42: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp_4: int;
  var {:pointer} pirp_7: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_42: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_709: int;

  anon0:
    call {:si_unique_call 2416} vslice_dummy_var_709 := __HAVOC_malloc(4);
    pirp_7 := actual_pirp_7;
    CompletionRoutine := actual_CompletionRoutine;
    Context_42 := actual_Context_42;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 2417} irpSp_4 := sdv_IoGetNextIrpStackLocation(pirp_7);
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    return;
}



procedure {:origName "KeSetTimerEx"} {:osmodel} KeSetTimerEx(actual_Timer_4: int, actual_structPtr888DueTime: int, actual_Period: int, actual_Dpc_4: int) returns (Tmp_1145: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1145 == 1 || Tmp_1145 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeSetTimerEx"} {:osmodel} KeSetTimerEx(actual_Timer_4: int, actual_structPtr888DueTime: int, actual_Period: int, actual_Dpc_4: int) returns (Tmp_1145: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 2418} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1145 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1145 := 0;
    goto L1;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_710: int;

  anon0:
    call {:si_unique_call 2419} vslice_dummy_var_710 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_add_begin"} {:osmodel} sdv_stub_add_begin()
{
  var vslice_dummy_var_711: int;

  anon0:
    call {:si_unique_call 2420} vslice_dummy_var_711 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_1151: int);
  free ensures {:va_keep} Tmp_1151 == 1 || Tmp_1151 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_1151: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1151 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1151 := 0;
    goto L1;
}



procedure {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName: int) returns (Tmp_1153: int);
  free ensures {:va_keep} Tmp_1153 == 0 || Tmp_1153 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName: int) returns (Tmp_1153: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1153 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1153 := -1073741823;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_18: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_18: int)
{
  var vslice_dummy_var_712: int;

  anon0:
    call {:si_unique_call 2421} vslice_dummy_var_712 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_1157: int);
  free ensures {:va_keep} Tmp_1157 == 258 || Tmp_1157 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_1157: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1157 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1157 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_1157 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_22: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_22: int)
{
  var vslice_dummy_var_713: int;

  anon0:
    call {:si_unique_call 2422} vslice_dummy_var_713 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_1161: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_1161: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_1161 := OldState;
    return;
}



procedure {:origName "sdv_MmLockPagableCodeSection"} {:osmodel} sdv_MmLockPagableCodeSection(actual_AddressWithinSection: int) returns (Tmp_1165: int);
  free ensures {:va_keep} Tmp_1165 == actual_AddressWithinSection;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_MmLockPagableCodeSection"} {:osmodel} sdv_MmLockPagableCodeSection(actual_AddressWithinSection: int) returns (Tmp_1165: int)
{
  var {:pointer} AddressWithinSection: int;

  anon0:
    AddressWithinSection := actual_AddressWithinSection;
    Tmp_1165 := AddressWithinSection;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_8: int) returns (Tmp_1167: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_8: int) returns (Tmp_1167: int)
{
  var {:pointer} pirp_8: int;

  anon0:
    pirp_8 := actual_pirp_8;
    assume {:nonnull} pirp_8 != 0;
    assume pirp_8 > 0;
    havoc Tmp_1167;
    return;
}



procedure {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_714: int;

  anon0:
    call {:si_unique_call 2423} vslice_dummy_var_714 := __HAVOC_malloc(4);
    new := actual_new;
    return;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_23: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_43: int, actual_Irp_19: int) returns (Tmp_1171: int);
  modifies alloc;
  free ensures {:va_keep} Tmp_1171 == -1073741584 || Tmp_1171 == 259 || Tmp_1171 == -1073741670;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_23: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_43: int, actual_Irp_19: int) returns (Tmp_1171: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} structPtr888PowerState: int;

  anon0:
    call {:si_unique_call 2424} PowerState := __HAVOC_malloc(8);
    MinorFunction := actual_MinorFunction;
    structPtr888PowerState := actual_structPtr888PowerState;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1171 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1171 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_1171 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_1173: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error;
  free ensures {:va_keep} queued == 1 || queued == 0;
  free ensures {:va_keep} yogi_error == 1 || yogi_error == 0;
  free ensures {:va_keep} stack_location == 1 || stack_location == 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_1173: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_1174: int;
  var {:scalar} Tmp_1176: int;
  var boogieTmp: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var SerialPortNameGuid__Loc: int;
  var SerailPortPerfGuid__Loc: int;
  var SerialPortPropertiesGuid__Loc: int;
  var SerialPortHWGuid__Loc: int;
  var CyzGlobals__Loc: int;
  var SerialPortCommGuid__Loc: int;
  var CyzPhysicalZero__Loc: int;
  var KeTickCount__Loc: int;
  var CyzPhysicalZero_1__Loc: int;
  var driverDefaults__Loc: int;
  var CyzPhysicalZero_2__Loc: int;
  var GUID_DEVINTERFACE_COMPORT__Loc: int;
  var SLAM_guard_S_0_init__Loc: int;
  var CyzPhysicalZero_3__Loc: int;
  var CyzPhysicalZero_4__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_driver_object__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var sdv_MmMapIoSpace_int__Loc: int;
  var vslice_dummy_var_822: int;
  var vslice_dummy_var_823: int;
  var vslice_dummy_var_824: int;
  var vslice_dummy_var_825: int;
  var vslice_dummy_var_826: int;
  var vslice_dummy_var_827: int;
  var vslice_dummy_var_828: int;
  var vslice_dummy_var_829: int;
  var vslice_dummy_var_830: int;
  var vslice_dummy_var_831: int;
  var vslice_dummy_var_832: int;
  var vslice_dummy_var_833: int;
  var vslice_dummy_var_834: int;
  var vslice_dummy_var_835: int;
  var vslice_dummy_var_836: int;
  var vslice_dummy_var_837: int;
  var vslice_dummy_var_838: int;
  var vslice_dummy_var_839: int;
  var vslice_dummy_var_840: int;
  var vslice_dummy_var_841: int;
  var vslice_dummy_var_842: int;
  var vslice_dummy_var_843: int;
  var vslice_dummy_var_844: int;
  var vslice_dummy_var_845: int;
  var vslice_dummy_var_846: int;
  var vslice_dummy_var_847: int;
  var vslice_dummy_var_848: int;
  var vslice_dummy_var_849: int;
  var vslice_dummy_var_850: int;
  var vslice_dummy_var_851: int;
  var vslice_dummy_var_852: int;
  var vslice_dummy_var_853: int;
  var vslice_dummy_var_854: int;
  var vslice_dummy_var_855: int;
  var vslice_dummy_var_856: int;
  var vslice_dummy_var_857: int;
  var vslice_dummy_var_858: int;
  var vslice_dummy_var_859: int;
  var vslice_dummy_var_860: int;
  var vslice_dummy_var_861: int;
  var vslice_dummy_var_862: int;
  var vslice_dummy_var_863: int;
  var vslice_dummy_var_864: int;
  var vslice_dummy_var_865: int;
  var vslice_dummy_var_866: int;
  var vslice_dummy_var_867: int;
  var vslice_dummy_var_868: int;
  var vslice_dummy_var_869: int;
  var vslice_dummy_var_870: int;
  var vslice_dummy_var_871: int;
  var vslice_dummy_var_872: int;
  var vslice_dummy_var_873: int;
  var vslice_dummy_var_874: int;
  var vslice_dummy_var_875: int;
  var vslice_dummy_var_876: int;
  var vslice_dummy_var_877: int;
  var vslice_dummy_var_878: int;
  var vslice_dummy_var_879: int;
  var vslice_dummy_var_880: int;
  var vslice_dummy_var_881: int;
  var vslice_dummy_var_882: int;
  var vslice_dummy_var_883: int;
  var vslice_dummy_var_884: int;
  var vslice_dummy_var_885: int;
  var vslice_dummy_var_886: int;
  var vslice_dummy_var_887: int;
  var vslice_dummy_var_888: int;
  var vslice_dummy_var_889: int;
  var vslice_dummy_var_890: int;
  var vslice_dummy_var_891: int;
  var vslice_dummy_var_892: int;
  var vslice_dummy_var_893: int;
  var vslice_dummy_var_894: int;
  var vslice_dummy_var_895: int;
  var vslice_dummy_var_896: int;
  var vslice_dummy_var_897: int;
  var vslice_dummy_var_898: int;
  var vslice_dummy_var_899: int;
  var vslice_dummy_var_900: int;
  var vslice_dummy_var_901: int;
  var vslice_dummy_var_902: int;
  var vslice_dummy_var_903: int;
  var vslice_dummy_var_904: int;
  var vslice_dummy_var_905: int;
  var vslice_dummy_var_906: int;
  var vslice_dummy_var_907: int;
  var vslice_dummy_var_908: int;
  var vslice_dummy_var_909: int;
  var vslice_dummy_var_910: int;
  var vslice_dummy_var_911: int;
  var vslice_dummy_var_912: int;
  var vslice_dummy_var_913: int;
  var vslice_dummy_var_914: int;
  var vslice_dummy_var_915: int;
  var vslice_dummy_var_916: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 2425} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 2426} SerialPortNameGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortNameGuid__Loc == SerialPortNameGuid;
    assume SerialPortNameGuid != 0;
    call {:si_unique_call 2427} SerailPortPerfGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerailPortPerfGuid__Loc == SerailPortPerfGuid;
    assume SerailPortPerfGuid != 0;
    call {:si_unique_call 2428} SerialPortPropertiesGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortPropertiesGuid__Loc == SerialPortPropertiesGuid;
    assume SerialPortPropertiesGuid != 0;
    call {:si_unique_call 2429} SerialPortHWGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortHWGuid__Loc == SerialPortHWGuid;
    assume SerialPortHWGuid != 0;
    call {:si_unique_call 2430} CyzGlobals__Loc := __HAVOC_malloc_or_null(28);
    assume CyzGlobals__Loc == CyzGlobals;
    assume CyzGlobals != 0;
    call {:si_unique_call 2431} SerialPortCommGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortCommGuid__Loc == SerialPortCommGuid;
    assume SerialPortCommGuid != 0;
    call {:si_unique_call 2432} CyzPhysicalZero__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero__Loc == CyzPhysicalZero;
    assume CyzPhysicalZero != 0;
    call {:si_unique_call 2433} KeTickCount__Loc := __HAVOC_malloc_or_null(12);
    assume KeTickCount__Loc == KeTickCount;
    assume KeTickCount != 0;
    call {:si_unique_call 2434} CyzPhysicalZero_1__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_1__Loc == CyzPhysicalZero_1;
    assume CyzPhysicalZero_1 != 0;
    call {:si_unique_call 2435} driverDefaults__Loc := __HAVOC_malloc_or_null(68);
    assume driverDefaults__Loc == driverDefaults;
    assume driverDefaults != 0;
    call {:si_unique_call 2436} CyzPhysicalZero_2__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_2__Loc == CyzPhysicalZero_2;
    assume CyzPhysicalZero_2 != 0;
    call {:si_unique_call 2437} GUID_DEVINTERFACE_COMPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_COMPORT__Loc == GUID_DEVINTERFACE_COMPORT;
    assume GUID_DEVINTERFACE_COMPORT != 0;
    call {:si_unique_call 2438} SLAM_guard_S_0_init__Loc := __HAVOC_malloc_or_null(248);
    assume SLAM_guard_S_0_init__Loc == SLAM_guard_S_0_init;
    assume SLAM_guard_S_0_init != 0;
    call {:si_unique_call 2439} CyzPhysicalZero_3__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_3__Loc == CyzPhysicalZero_3;
    assume CyzPhysicalZero_3 != 0;
    call {:si_unique_call 2440} CyzPhysicalZero_4__Loc := __HAVOC_malloc_or_null(20);
    assume CyzPhysicalZero_4__Loc == CyzPhysicalZero_4;
    assume CyzPhysicalZero_4 != 0;
    call {:si_unique_call 2441} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 2442} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 2443} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 2444} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 2445} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 2446} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 2447} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 2448} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 2449} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 2450} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 2451} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 2452} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 2453} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 2454} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 2455} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 2456} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 2457} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 2458} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 2459} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 2460} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 2461} sdv_driver_object__Loc := __HAVOC_malloc_or_null(68);
    assume sdv_driver_object__Loc == sdv_driver_object;
    assume sdv_driver_object != 0;
    call {:si_unique_call 2462} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 2463} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 2464} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 2465} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 2466} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 2467} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 2468} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 2469} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 2470} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 2471} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 2472} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 2473} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 2474} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 2475} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 2476} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 2477} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 2478} sdv_MmMapIoSpace_int__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MmMapIoSpace_int__Loc == sdv_MmMapIoSpace_int;
    assume sdv_MmMapIoSpace_int != 0;
    call {:si_unique_call 2479} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 2480} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 2481} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 2482} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 2483} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerNotPresent == boogieTmp;
    call {:si_unique_call 2484} boogieTmp := __HAVOC_malloc_or_null(4);
    assume KdDebuggerEnabled == boogieTmp;
    call {:si_unique_call 2485} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 2486} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pDpcContext == boogieTmp;
    call {:si_unique_call 2487} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 2488} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 2489} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 2490} vslice_dummy_var_822 := __HAVOC_malloc(4);
    call {:si_unique_call 2491} vslice_dummy_var_823 := __HAVOC_malloc(4);
    call {:si_unique_call 2492} vslice_dummy_var_824 := __HAVOC_malloc(4);
    call {:si_unique_call 2493} vslice_dummy_var_825 := __HAVOC_malloc(4);
    call {:si_unique_call 2494} vslice_dummy_var_826 := __HAVOC_malloc(4);
    call {:si_unique_call 2495} vslice_dummy_var_827 := __HAVOC_malloc(4);
    call {:si_unique_call 2496} vslice_dummy_var_203 := __HAVOC_malloc(60);
    call {:si_unique_call 2497} vslice_dummy_var_828 := __HAVOC_malloc(4);
    call {:si_unique_call 2498} vslice_dummy_var_829 := __HAVOC_malloc(4);
    call {:si_unique_call 2499} vslice_dummy_var_830 := __HAVOC_malloc(4);
    call {:si_unique_call 2500} vslice_dummy_var_831 := __HAVOC_malloc(4);
    call {:si_unique_call 2501} vslice_dummy_var_832 := __HAVOC_malloc(4);
    call {:si_unique_call 2502} vslice_dummy_var_833 := __HAVOC_malloc(4);
    call {:si_unique_call 2503} vslice_dummy_var_834 := __HAVOC_malloc(4);
    call {:si_unique_call 2504} vslice_dummy_var_835 := __HAVOC_malloc(4);
    call {:si_unique_call 2505} vslice_dummy_var_836 := __HAVOC_malloc(4);
    call {:si_unique_call 2506} vslice_dummy_var_837 := __HAVOC_malloc(4);
    call {:si_unique_call 2507} vslice_dummy_var_838 := __HAVOC_malloc(4);
    call {:si_unique_call 2508} vslice_dummy_var_839 := __HAVOC_malloc(4);
    call {:si_unique_call 2509} vslice_dummy_var_840 := __HAVOC_malloc(4);
    call {:si_unique_call 2510} vslice_dummy_var_841 := __HAVOC_malloc(4);
    call {:si_unique_call 2511} vslice_dummy_var_842 := __HAVOC_malloc(4);
    call {:si_unique_call 2512} vslice_dummy_var_843 := __HAVOC_malloc(4);
    call {:si_unique_call 2513} vslice_dummy_var_844 := __HAVOC_malloc(4);
    call {:si_unique_call 2514} vslice_dummy_var_845 := __HAVOC_malloc(4);
    call {:si_unique_call 2515} vslice_dummy_var_846 := __HAVOC_malloc(4);
    call {:si_unique_call 2516} vslice_dummy_var_847 := __HAVOC_malloc(4);
    call {:si_unique_call 2517} vslice_dummy_var_848 := __HAVOC_malloc(4);
    call {:si_unique_call 2518} vslice_dummy_var_849 := __HAVOC_malloc(4);
    call {:si_unique_call 2519} vslice_dummy_var_850 := __HAVOC_malloc(4);
    call {:si_unique_call 2520} vslice_dummy_var_851 := __HAVOC_malloc(4);
    call {:si_unique_call 2521} vslice_dummy_var_852 := __HAVOC_malloc(4);
    call {:si_unique_call 2522} vslice_dummy_var_853 := __HAVOC_malloc(4);
    call {:si_unique_call 2523} vslice_dummy_var_854 := __HAVOC_malloc(4);
    call {:si_unique_call 2524} vslice_dummy_var_855 := __HAVOC_malloc(4);
    call {:si_unique_call 2525} vslice_dummy_var_856 := __HAVOC_malloc(4);
    call {:si_unique_call 2526} vslice_dummy_var_857 := __HAVOC_malloc(4);
    call {:si_unique_call 2527} vslice_dummy_var_858 := __HAVOC_malloc(4);
    call {:si_unique_call 2528} vslice_dummy_var_859 := __HAVOC_malloc(4);
    call {:si_unique_call 2529} vslice_dummy_var_860 := __HAVOC_malloc(4);
    call {:si_unique_call 2530} vslice_dummy_var_861 := __HAVOC_malloc(4);
    call {:si_unique_call 2531} vslice_dummy_var_862 := __HAVOC_malloc(4);
    call {:si_unique_call 2532} vslice_dummy_var_863 := __HAVOC_malloc(4);
    call {:si_unique_call 2533} vslice_dummy_var_864 := __HAVOC_malloc(4);
    call {:si_unique_call 2534} vslice_dummy_var_865 := __HAVOC_malloc(4);
    call {:si_unique_call 2535} vslice_dummy_var_866 := __HAVOC_malloc(4);
    call {:si_unique_call 2536} vslice_dummy_var_867 := __HAVOC_malloc(4);
    call {:si_unique_call 2537} vslice_dummy_var_204 := __HAVOC_malloc(60);
    call {:si_unique_call 2538} vslice_dummy_var_868 := __HAVOC_malloc(4);
    call {:si_unique_call 2539} vslice_dummy_var_869 := __HAVOC_malloc(4);
    call {:si_unique_call 2540} vslice_dummy_var_870 := __HAVOC_malloc(4);
    call {:si_unique_call 2541} vslice_dummy_var_871 := __HAVOC_malloc(4);
    call {:si_unique_call 2542} vslice_dummy_var_872 := __HAVOC_malloc(4);
    call {:si_unique_call 2543} vslice_dummy_var_873 := __HAVOC_malloc(4);
    call {:si_unique_call 2544} vslice_dummy_var_874 := __HAVOC_malloc(4);
    call {:si_unique_call 2545} vslice_dummy_var_875 := __HAVOC_malloc(4);
    call {:si_unique_call 2546} vslice_dummy_var_876 := __HAVOC_malloc(4);
    call {:si_unique_call 2547} vslice_dummy_var_877 := __HAVOC_malloc(4);
    call {:si_unique_call 2548} vslice_dummy_var_878 := __HAVOC_malloc(4);
    call {:si_unique_call 2549} vslice_dummy_var_879 := __HAVOC_malloc(4);
    call {:si_unique_call 2550} vslice_dummy_var_880 := __HAVOC_malloc(4);
    call {:si_unique_call 2551} vslice_dummy_var_881 := __HAVOC_malloc(4);
    call {:si_unique_call 2552} vslice_dummy_var_882 := __HAVOC_malloc(4);
    call {:si_unique_call 2553} vslice_dummy_var_883 := __HAVOC_malloc(4);
    call {:si_unique_call 2554} vslice_dummy_var_884 := __HAVOC_malloc(4);
    call {:si_unique_call 2555} vslice_dummy_var_885 := __HAVOC_malloc(4);
    call {:si_unique_call 2556} vslice_dummy_var_886 := __HAVOC_malloc(4);
    call {:si_unique_call 2557} vslice_dummy_var_887 := __HAVOC_malloc(4);
    call {:si_unique_call 2558} vslice_dummy_var_888 := __HAVOC_malloc(4);
    call {:si_unique_call 2559} vslice_dummy_var_889 := __HAVOC_malloc(4);
    call {:si_unique_call 2560} vslice_dummy_var_890 := __HAVOC_malloc(4);
    call {:si_unique_call 2561} vslice_dummy_var_891 := __HAVOC_malloc(4);
    call {:si_unique_call 2562} vslice_dummy_var_892 := __HAVOC_malloc(4);
    call {:si_unique_call 2563} vslice_dummy_var_893 := __HAVOC_malloc(4);
    call {:si_unique_call 2564} vslice_dummy_var_894 := __HAVOC_malloc(4);
    call {:si_unique_call 2565} vslice_dummy_var_895 := __HAVOC_malloc(4);
    call {:si_unique_call 2566} vslice_dummy_var_896 := __HAVOC_malloc(4);
    call {:si_unique_call 2567} vslice_dummy_var_897 := __HAVOC_malloc(4);
    call {:si_unique_call 2568} vslice_dummy_var_898 := __HAVOC_malloc(4);
    call {:si_unique_call 2569} vslice_dummy_var_899 := __HAVOC_malloc(4);
    call {:si_unique_call 2570} vslice_dummy_var_900 := __HAVOC_malloc(4);
    call {:si_unique_call 2571} vslice_dummy_var_901 := __HAVOC_malloc(4);
    call {:si_unique_call 2572} vslice_dummy_var_902 := __HAVOC_malloc(4);
    call {:si_unique_call 2573} vslice_dummy_var_903 := __HAVOC_malloc(4);
    call {:si_unique_call 2574} vslice_dummy_var_904 := __HAVOC_malloc(4);
    call {:si_unique_call 2575} vslice_dummy_var_905 := __HAVOC_malloc(4);
    call {:si_unique_call 2576} vslice_dummy_var_906 := __HAVOC_malloc(4);
    call {:si_unique_call 2577} vslice_dummy_var_907 := __HAVOC_malloc(4);
    call {:si_unique_call 2578} vslice_dummy_var_908 := __HAVOC_malloc(4);
    call {:si_unique_call 2579} vslice_dummy_var_909 := __HAVOC_malloc(4);
    call {:si_unique_call 2580} vslice_dummy_var_910 := __HAVOC_malloc(4);
    call {:si_unique_call 2581} vslice_dummy_var_911 := __HAVOC_malloc(4);
    call {:si_unique_call 2582} vslice_dummy_var_912 := __HAVOC_malloc(4);
    call {:si_unique_call 2583} vslice_dummy_var_913 := __HAVOC_malloc(4);
    call {:si_unique_call 2584} vslice_dummy_var_914 := __HAVOC_malloc(4);
    call {:si_unique_call 2585} vslice_dummy_var_915 := __HAVOC_malloc(4);
    call {:si_unique_call 2586} vslice_dummy_var_916 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 2587} corralExtraInit();
    call {:si_unique_call 2588} corralExplainErrorInit();
    call {:si_unique_call 2589} _sdv_init21();
    call {:si_unique_call 2590} _sdv_init18();
    call {:si_unique_call 2591} _sdv_init19();
    call {:si_unique_call 2592} _sdv_init17();
    call {:si_unique_call 2593} _sdv_init1();
    call {:si_unique_call 2594} _sdv_init4();
    call {:si_unique_call 2595} _sdv_init5();
    call {:si_unique_call 2596} _sdv_init3();
    call {:si_unique_call 2597} _sdv_init16();
    call {:si_unique_call 2598} _sdv_init14();
    call {:si_unique_call 2599} _sdv_init6();
    call {:si_unique_call 2600} _sdv_init15();
    call {:si_unique_call 2601} _sdv_init10();
    call {:si_unique_call 2602} _sdv_init11();
    call {:si_unique_call 2603} _sdv_init9();
    call {:si_unique_call 2604} _sdv_init12();
    call {:si_unique_call 2605} _sdv_init13();
    call {:si_unique_call 2606} _sdv_init7();
    call {:si_unique_call 2607} _sdv_init8();
    call {:si_unique_call 2608} _sdv_init2();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_1176 := 0;
    goto L44;

  L44:
    assume Tmp_1176 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_1174 := 0;
    goto L48;

  L48:
    assume Tmp_1174 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 2609} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L42;

  L42:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_1174 := 1;
    goto L48;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_1176 := 1;
    goto L44;
}



procedure {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_1177: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_1177: int)
{
  var {:pointer} sdv_886: int;

  anon0:
    call {:si_unique_call 2610} sdv_886 := __HAVOC_malloc(1);
    Tmp_1177 := sdv_886;
    return;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_9: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_9: int)
{
  var {:pointer} pirp_9: int;
  var vslice_dummy_var_715: int;

  anon0:
    call {:si_unique_call 2611} vslice_dummy_var_715 := __HAVOC_malloc(4);
    pirp_9 := actual_pirp_9;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_9 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_9 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_9 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_9 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_20: int) returns (Tmp_1181: int);
  free ensures {:va_keep} Tmp_1181 == 0 || Tmp_1181 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_20: int) returns (Tmp_1181: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1181 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1181 := 1;
    goto L1;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_1183: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_1183: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_1183;
    return;
}



procedure {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_add_end"} {:osmodel} sdv_stub_add_end()
{
  var vslice_dummy_var_716: int;

  anon0:
    call {:si_unique_call 2612} vslice_dummy_var_716 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int)
{
  var {:pointer} DestinationString: int;
  var {:pointer} SourceString: int;
  var vslice_dummy_var_717: int;

  anon0:
    call {:si_unique_call 2613} vslice_dummy_var_717 := __HAVOC_malloc(4);
    DestinationString := actual_DestinationString;
    SourceString := actual_SourceString;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString != 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString == 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString == 0;
    goto L4;
}



procedure {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int)
{
  var vslice_dummy_var_718: int;

  anon0:
    call {:si_unique_call 2614} vslice_dummy_var_718 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_1191: int);
  free ensures {:va_keep} Tmp_1191 == 0 || Tmp_1191 == actual_TargetDevice_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoAttachDeviceToDeviceStack"} {:osmodel} IoAttachDeviceToDeviceStack(actual_SourceDevice: int, actual_TargetDevice_1: int) returns (Tmp_1191: int)
{
  var {:pointer} TargetDevice_1: int;

  anon0:
    TargetDevice_1 := actual_TargetDevice_1;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} TargetDevice_1 == sdv_p_devobj_pdo;
    Tmp_1191 := TargetDevice_1;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} TargetDevice_1 != sdv_p_devobj_pdo;
    Tmp_1191 := 0;
    goto L1;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int)
{
  var vslice_dummy_var_719: int;

  anon0:
    call {:si_unique_call 2615} vslice_dummy_var_719 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_10: int) returns (Tmp_1195: int);
  modifies alloc, stack_location, locked, queuedWithoutMarking, markedPending, queued, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RunStartDevice"} {:osmodel} sdv_RunStartDevice(actual_po: int, actual_pirp_10: int) returns (Tmp_1195: int)
{
  var {:pointer} ps: int;
  var {:scalar} status_30: int;
  var {:pointer} po: int;
  var {:pointer} pirp_10: int;

  anon0:
    po := actual_po;
    pirp_10 := actual_pirp_10;
    status_30 := 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    havoc ps;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    assume {:nonnull} pirp_10 != 0;
    assume pirp_10 > 0;
    call {:si_unique_call 2616} sdv_SetStatus(pirp_10);
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 2617} sdv_stub_dispatch_begin();
    call {:si_unique_call 2618} status_30 := CyzPnpDispatch(po, pirp_10);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} yogi_error != 1;
    call {:si_unique_call 2619} sdv_stub_dispatch_end(status_30, 0);
    Tmp_1195 := status_30;
    goto LM2;

  LM2:
    return;

  anon3_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value_1: int, actual_Base: int, actual_String: int) returns (Tmp_1197: int);
  free ensures {:va_keep} Tmp_1197 == 0 || Tmp_1197 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlIntegerToUnicodeString"} {:osmodel} RtlIntegerToUnicodeString(actual_Value_1: int, actual_Base: int, actual_String: int) returns (Tmp_1197: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1197 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1197 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_720: int;

  anon0:
    call {:si_unique_call 2620} vslice_dummy_var_720 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_44: int) returns (Tmp_1201: int);
  free ensures {:va_keep} Tmp_1201 == 0 || Tmp_1201 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_44: int) returns (Tmp_1201: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1201 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1201 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_11: int);
  modifies alloc, markedPending;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} markedPending == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_11: int)
{
  var vslice_dummy_var_721: int;

  anon0:
    call {:si_unique_call 2621} vslice_dummy_var_721 := __HAVOC_malloc(4);
    call {:si_unique_call 2622} SLIC_sdv_IoMarkIrpPending_entry(0);
    return;
}



procedure {:origName "sdv_stub_WmiIrpNotCompleted"} {:osmodel} sdv_stub_WmiIrpNotCompleted(actual_pirp_12: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_WmiIrpNotCompleted"} {:osmodel} sdv_stub_WmiIrpNotCompleted(actual_pirp_12: int)
{
  var vslice_dummy_var_722: int;

  anon0:
    call {:si_unique_call 2623} vslice_dummy_var_722 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int)
{
  var vslice_dummy_var_723: int;

  anon0:
    call {:si_unique_call 2624} vslice_dummy_var_723 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_13: int) returns (Tmp_1209: int);
  modifies alloc, stack_location, locked, queuedWithoutMarking, markedPending, queued, yogi_error;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_13: int) returns (Tmp_1209: int)
{
  var {:pointer} ps_1: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_1210: int;
  var {:scalar} sdv_899: int;
  var {:scalar} Tmp_1212: int;
  var {:scalar} status_31: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_13: int;

  anon0:
    po_1 := actual_po_1;
    pirp_13 := actual_pirp_13;
    status_31 := 0;
    minor := sdv_899;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    havoc ps_1;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    call {:si_unique_call 2625} sdv_SetStatus(pirp_13);
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2626} sdv_stub_dispatch_begin();
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon72_Then, anon72_Else;

  anon72_Else:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto L60;

  L60:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    Tmp_1212 := 0;
    goto L216;

  L216:
    assume Tmp_1212 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto L66;

  L66:
    call {:si_unique_call 2627} status_31 := CyzPnpDispatch(po_1, pirp_13);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    call {:si_unique_call 2628} sdv_stub_dispatch_end(status_31, 0);
    assume {:nonnull} pirp_13 != 0;
    assume pirp_13 > 0;
    Tmp_1209 := status_31;
    goto LM2;

  LM2:
    return;

  anon90_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon64_Then:
    goto L66;

  anon65_Then:
    Tmp_1212 := 1;
    goto L216;

  anon63_Then:
    goto L61;

  anon89_Then:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    Tmp_1210 := 0;
    goto L222;

  L222:
    assume Tmp_1210 != 0;
    goto L60;

  anon62_Then:
    Tmp_1210 := 1;
    goto L222;

  anon66_Then:
    call {:si_unique_call 2629} status_31 := sdv_DoNothing();
    goto L72;

  anon67_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2630} status_31 := sdv_DoNothing();
    goto L72;

  anon68_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2631} sdv_SetPowerIrpMinorFunction(pirp_13);
    call {:si_unique_call 2632} status_31 := CyzPowerDispatch(po_1, pirp_13);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon88_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon69_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2633} status_31 := CyzCleanup(po_1, pirp_13);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon87_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon70_Then:
    call {:si_unique_call 2634} status_31 := sdv_DoNothing();
    goto L72;

  anon71_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2635} status_31 := sdv_DoNothing();
    goto L72;

  anon72_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2636} status_31 := sdv_DoNothing();
    goto L72;

  anon73_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2637} status_31 := CyzIoControl(po_1, pirp_13);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon86_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon74_Then:
    call {:si_unique_call 2638} status_31 := sdv_DoNothing();
    goto L72;

  anon75_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2639} status_31 := CyzFlush(po_1, pirp_13);
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon85_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon76_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2640} status_31 := sdv_DoNothing();
    goto L72;

  anon77_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2641} status_31 := sdv_DoNothing();
    goto L72;

  anon78_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2642} status_31 := CyzWrite(po_1, pirp_13);
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon84_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon79_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2643} status_31 := CyzRead(po_1, pirp_13);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon83_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon80_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2644} status_31 := CyzClose(po_1, pirp_13);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon82_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon61_Then:
    assume {:nonnull} ps_1 != 0;
    assume ps_1 > 0;
    call {:si_unique_call 2645} status_31 := CyzCreateOpen(po_1, pirp_13);
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon81_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;
}



procedure {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_1213: int);
  free ensures {:va_keep} Tmp_1213 == -1073741823 || Tmp_1213 == -1073741808 || Tmp_1213 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_1213: int)
{
  var {:scalar} Tmp_1215: int;
  var {:pointer} SymbolicLinkName_2: int;

  anon0:
    SymbolicLinkName_2 := actual_SymbolicLinkName_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_1213 := -1073741823;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_1213 := -1073741808;
    goto L1;

  anon7_Then:
    assume {:nonnull} SymbolicLinkName_2 != 0;
    assume SymbolicLinkName_2 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1215 := 0;
    goto L22;

  L22:
    assume Tmp_1215 != 0;
    Tmp_1213 := 0;
    goto L1;

  anon8_Then:
    Tmp_1215 := 1;
    goto L22;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new_1: int);
  modifies alloc, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_724: int;

  anon0:
    call {:si_unique_call 2646} vslice_dummy_var_724 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    call {:si_unique_call 2647} SLIC_sdv_KeReleaseSpinLock_entry(0);
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_14: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_14: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_725: int;

  anon0:
    call {:si_unique_call 2648} vslice_dummy_var_725 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init19"} {:osmodel} _sdv_init19();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init19"} {:osmodel} _sdv_init19()
{
  var vslice_dummy_var_726: int;

  anon0:
    call {:si_unique_call 2649} vslice_dummy_var_726 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_maskedEflags == 0;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_Io_Removelock_release_wait_returned == 0;
    assume sdv_isr_routine == li2bplFunctionConstant513;
    assume sdv_ke_dpc == li2bplFunctionConstant515;
    assume sdv_io_dpc == li2bplFunctionConstant518;
    assume sdv_p_devobj_top == sdv_devobj_top;
    return;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_727: int;

  anon0:
    call {:si_unique_call 2650} vslice_dummy_var_727 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength_1: int) returns (Tmp_1224: int);
  free ensures {:va_keep} Tmp_1224 == -1073741811 || Tmp_1224 == -1073741823 || Tmp_1224 == 0 || Tmp_1224 == 5 || Tmp_1224 == -1073741789;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength_1: int) returns (Tmp_1224: int)
{
  var {:scalar} L_1: int;
  var {:scalar} sdv_911: int;
  var {:scalar} Length_3: int;
  var {:pointer} ResultLength_1: int;

  anon0:
    Length_3 := actual_Length_3;
    ResultLength_1 := actual_ResultLength_1;
    L_1 := sdv_911;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L_1;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L_1 == 0;
    Tmp_1224 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L_1 != 0;
    Tmp_1224 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L_1 == Length_3;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_3 != 0;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Tmp_1224 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_3 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L_1 > Length_3;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Tmp_1224 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_3 >= L_1;
    assume {:nonnull} ResultLength_1 != 0;
    assume ResultLength_1 > 0;
    Tmp_1224 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L_1 != Length_3;
    goto L13;
}



procedure {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_1226: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_1226: int)
{
  var {:scalar} PhysicalAddress: int;
  var {:pointer} structPtr888PhysicalAddress: int;

  anon0:
    call {:si_unique_call 2651} PhysicalAddress := __HAVOC_malloc(20);
    structPtr888PhysicalAddress := actual_structPtr888PhysicalAddress;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    Tmp_1226 := sdv_MmMapIoSpace_int;
    return;
}



procedure {:origName "sdv_stub_WmiIrpForward"} {:osmodel} sdv_stub_WmiIrpForward(actual_pirp_15: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_WmiIrpForward"} {:osmodel} sdv_stub_WmiIrpForward(actual_pirp_15: int)
{
  var vslice_dummy_var_728: int;

  anon0:
    call {:si_unique_call 2652} vslice_dummy_var_728 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_729: int;

  anon0:
    call {:si_unique_call 2653} vslice_dummy_var_729 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_WmiIrpProcessed"} {:osmodel} sdv_stub_WmiIrpProcessed(actual_pirp_16: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_WmiIrpProcessed"} {:osmodel} sdv_stub_WmiIrpProcessed(actual_pirp_16: int)
{
  var vslice_dummy_var_730: int;

  anon0:
    call {:si_unique_call 2654} vslice_dummy_var_730 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1236: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_1236: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_1236;
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_2: int)
{
  var vslice_dummy_var_731: int;

  anon0:
    call {:si_unique_call 2655} vslice_dummy_var_731 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1240: int);
  free ensures {:va_keep} Tmp_1240 == 1 || Tmp_1240 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_1240: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1240 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1240 := 0;
    goto L1;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_24: int, actual_Irp_21: int) returns (Tmp_1242: int);
  free ensures {:va_keep} Tmp_1242 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_24: int, actual_Irp_21: int) returns (Tmp_1242: int)
{
  var {:scalar} status_32: int;
  var {:pointer} Irp_21: int;

  anon0:
    Irp_21 := actual_Irp_21;
    status_32 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L25;

  L25:
    Tmp_1242 := status_32;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    assume {:nonnull} Irp_21 != 0;
    assume Irp_21 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_21;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_21;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_21;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_21;
    goto L36;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_1: int, actual_State_1: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_1: int, actual_State_1: int)
{
  var {:pointer} Event_1: int;
  var {:scalar} Type_1: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_732: int;

  anon0:
    call {:si_unique_call 2656} vslice_dummy_var_732 := __HAVOC_malloc(4);
    Event_1 := actual_Event_1;
    Type_1 := actual_Type_1;
    State_1 := actual_State_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_5: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_5: int)
{
  var vslice_dummy_var_733: int;

  anon0:
    call {:si_unique_call 2657} vslice_dummy_var_733 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_25: int, actual_Irp_22: int) returns (Tmp_1248: int);
  free ensures {:va_keep} Tmp_1248 == 259;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_25: int, actual_Irp_22: int) returns (Tmp_1248: int)
{
  var {:pointer} Irp_22: int;

  anon0:
    Irp_22 := actual_Irp_22;
    call {:si_unique_call 2658} Tmp_1248 := IofCallDriver(0, Irp_22);
    return;
}



procedure {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_2: int)
{
  var {:pointer} p_2: int;
  var vslice_dummy_var_734: int;

  anon0:
    call {:si_unique_call 2659} vslice_dummy_var_734 := __HAVOC_malloc(4);
    p_2 := actual_p_2;
    assume {:nonnull} p_2 != 0;
    assume p_2 > 0;
    return;
}



procedure {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_KeInitializeSpinLock"} {:osmodel} sdv_KeInitializeSpinLock(actual_SpinLock_2: int)
{
  var {:pointer} SpinLock_2: int;
  var vslice_dummy_var_735: int;

  anon0:
    call {:si_unique_call 2660} vslice_dummy_var_735 := __HAVOC_malloc(4);
    SpinLock_2 := actual_SpinLock_2;
    assume {:nonnull} SpinLock_2 != 0;
    assume SpinLock_2 > 0;
    return;
}



procedure {:origName "KeInsertQueueDpc"} {:osmodel} KeInsertQueueDpc(actual_Dpc_5: int, actual_SystemArgument1: int, actual_SystemArgument2: int) returns (Tmp_1254: int);
  modifies queued;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} Tmp_1254 == 0 || Tmp_1254 == 1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "KeInsertQueueDpc"} {:osmodel} KeInsertQueueDpc(actual_Dpc_5: int, actual_SystemArgument1: int, actual_SystemArgument2: int) returns (Tmp_1254: int)
{
  var {:pointer} Dpc_5: int;

  anon0:
    Dpc_5 := actual_Dpc_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1254 := 0;
    goto L1;

  L1:
    call {:si_unique_call 2661} SLIC_KeInsertQueueDpc_exit(0, Tmp_1254);
    return;

  anon3_Then:
    Tmp_1254 := 1;
    goto L1;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_1256: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_1256: int)
{
  var {:pointer} sdv_917: int;
  var {:scalar} NumberOfBytes_3: int;

  anon0:
    NumberOfBytes_3 := actual_NumberOfBytes_3;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 2662} sdv_917 := __HAVOC_malloc(NumberOfBytes_3);
    Tmp_1256 := sdv_917;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1256 := 0;
    goto L1;
}



procedure {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_2: int, actual_Path_2: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_1258: int);
  free ensures {:va_keep} Tmp_1258 == 0 || Tmp_1258 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_2: int, actual_Path_2: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_1258: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_1258 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_1258 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_RunUnload"} {:osmodel} sdv_RunUnload(actual_pdrivo: int)
{
  var {:pointer} pdrivo: int;
  var vslice_dummy_var_736: int;

  anon0:
    call {:si_unique_call 2663} vslice_dummy_var_736 := __HAVOC_malloc(4);
    pdrivo := actual_pdrivo;
    call {:si_unique_call 2664} CyzUnload(pdrivo);
    return;
}



procedure {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_1262: int);
  free ensures {:va_keep} Tmp_1262 == -1073741772 || Tmp_1262 == -1073741824 || Tmp_1262 == -1073741789 || Tmp_1262 == -1073741670 || Tmp_1262 == -1073741808 || Tmp_1262 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_1262: int)
{

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_1262 := -1073741772;
    goto L1;

  L1:
    return;

  anon12_Then:
    Tmp_1262 := -1073741824;
    goto L1;

  anon13_Then:
    Tmp_1262 := -1073741789;
    goto L1;

  anon14_Then:
    Tmp_1262 := -1073741670;
    goto L1;

  anon15_Then:
    Tmp_1262 := -1073741808;
    goto L1;

  anon11_Then:
    Tmp_1262 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_737: int;

  anon0:
    call {:si_unique_call 2665} vslice_dummy_var_737 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_738: int;

  anon0:
    call {:si_unique_call 2666} vslice_dummy_var_738 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_26: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1268: int);
  free ensures {:va_keep} Tmp_1268 == -1073741811 || Tmp_1268 == -1073741808 || Tmp_1268 == -1073741823 || Tmp_1268 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_26: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_1268: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_1268 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_1268 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_1268 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_1268 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_1270: int);
  free ensures {:va_keep} Tmp_1270 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_1270: int)
{

  anon0:
    Tmp_1270 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1272: int);
  free ensures {:va_keep} Tmp_1272 == -1073741823;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_1272: int)
{

  anon0:
    Tmp_1272 := -1073741823;
    return;
}



procedure {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_27: int, actual_Action: int) returns (Tmp_1274: int);
  free ensures {:va_keep} Tmp_1274 == -1073741823 || Tmp_1274 == -1073741811 || Tmp_1274 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_27: int, actual_Action: int) returns (Tmp_1274: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_1274 := -1073741823;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_1274 := -1073741811;
    goto L1;

  anon5_Then:
    Tmp_1274 := 0;
    goto L1;
}



procedure {:origName "CyzGrabReadFromIsr"} CyzGrabReadFromIsr(actual_Context_45: int) returns (Tmp_1276: int);
  free ensures {:va_keep} Tmp_1276 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGrabReadFromIsr"} CyzGrabReadFromIsr(actual_Context_45: int) returns (Tmp_1276: int)
{
  var {:pointer} s_p_e_c_i_a_l_43: int;
  var {:pointer} Tmp_1277: int;
  var {:pointer} sdv_922: int;
  var {:pointer} sdv_923: int;
  var {:scalar} s_p_e_c_i_a_l_44: int;
  var {:pointer} extension_15: int;
  var {:pointer} Context_45: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;

  anon0:
    Context_45 := actual_Context_45;
    extension_15 := Context_45;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    havoc vslice_dummy_var_205;
    call {:si_unique_call 2667} sdv_922 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_205);
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    havoc Tmp_1277;
    assume {:nonnull} Tmp_1277 != 0;
    assume Tmp_1277 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} sdv_922 != 0;
    assume sdv_922 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    s_p_e_c_i_a_l_44 := 1;
    assume {:nonnull} extension_15 != 0;
    assume extension_15 > 0;
    havoc vslice_dummy_var_206;
    call {:si_unique_call 2668} sdv_923 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_206);
    assume {:nonnull} sdv_923 != 0;
    assume sdv_923 > 0;
    s_p_e_c_i_a_l_43 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_923)));
    assume {:nonnull} s_p_e_c_i_a_l_43 != 0;
    assume s_p_e_c_i_a_l_43 > 0;
    goto L6;

  L6:
    Tmp_1276 := 0;
    return;

  anon3_Then:
    goto L6;
}



procedure {:origName "_sdv_init18"} _sdv_init18();
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "_sdv_init18"} _sdv_init18()
{
  var vslice_dummy_var_739: int;

  anon0:
    call {:si_unique_call 2669} vslice_dummy_var_739 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyzStartRead"} CyzStartRead(actual_Extension_58: int) returns (Tmp_1281: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzStartRead"} CyzStartRead(actual_Extension_58: int) returns (Tmp_1281: int)
{
  var {:pointer} s_p_e_c_i_a_l_45: int;
  var {:scalar} localStatus_1: int;
  var {:pointer} Tmp_1282: int;
  var {:pointer} Tmp_1283: int;
  var {:pointer} sdv_925: int;
  var {:scalar} totalTime: int;
  var {:scalar} os2ssreturn: int;
  var {:scalar} timeoutsForIrp: int;
  var {:scalar} updateChar: int;
  var {:scalar} setFirstStatus: int;
  var {:pointer} Tmp_1284: int;
  var {:scalar} useTotalTimer: int;
  var {:pointer} newIrp_1: int;
  var {:scalar} multiplierVal: int;
  var {:scalar} crunchDownToOne: int;
  var {:pointer} sdv_930: int;
  var {:pointer} sdv_931: int;
  var {:scalar} s_p_e_c_i_a_l_46: int;
  var {:scalar} oldIrql_10: int;
  var {:pointer} Tmp_1285: int;
  var {:pointer} sdv_932: int;
  var {:scalar} constantVal: int;
  var {:pointer} s_p_e_c_i_a_l_47: int;
  var {:pointer} sdv_936: int;
  var {:scalar} controlIrql: int;
  var {:pointer} Tmp_1286: int;
  var {:pointer} Tmp_1287: int;
  var {:pointer} Tmp_1288: int;
  var {:scalar} returnWithWhatsPresent: int;
  var {:scalar} s_p_e_c_i_a_l_48: int;
  var {:pointer} Tmp_1289: int;
  var {:pointer} Tmp_1290: int;
  var {:scalar} pollIrql_14: int;
  var {:scalar} useIntervalTimer: int;
  var {:scalar} firstStatus: int;
  var {:pointer} sdv_939: int;
  var {:pointer} Tmp_1291: int;
  var {:pointer} Extension_58: int;
  var boogieTmp: int;
  var vslice_dummy_var_740: int;
  var vslice_dummy_var_741: int;
  var vslice_dummy_var_742: int;
  var vslice_dummy_var_743: int;
  var vslice_dummy_var_744: int;
  var vslice_dummy_var_745: int;
  var vslice_dummy_var_746: int;
  var vslice_dummy_var_747: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;

  anon0:
    call {:si_unique_call 2670} totalTime := __HAVOC_malloc(20);
    call {:si_unique_call 2671} timeoutsForIrp := __HAVOC_malloc(20);
    call {:si_unique_call 2672} updateChar := __HAVOC_malloc(12);
    call {:si_unique_call 2673} newIrp_1 := __HAVOC_malloc(4);
    Extension_58 := actual_Extension_58;
    call {:si_unique_call 2674} Tmp_1283 := __HAVOC_malloc(72);
    call {:si_unique_call 2675} Tmp_1287 := __HAVOC_malloc(76);
    setFirstStatus := 0;
    Tmp_1287 := strConst__li2bpl234;
    call {:si_unique_call 2676} vslice_dummy_var_743 := CyzDbgPrintEx(2, Tmp_1287);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto L24;

  L24:
    call {:si_unique_call 2677} localStatus_1, Tmp_1282, os2ssreturn, setFirstStatus, Tmp_1284, useTotalTimer, multiplierVal, crunchDownToOne, sdv_930, sdv_931, oldIrql_10, Tmp_1285, sdv_932, constantVal, controlIrql, Tmp_1286, Tmp_1288, returnWithWhatsPresent, Tmp_1289, Tmp_1290, pollIrql_14, useIntervalTimer, firstStatus, sdv_939, boogieTmp, vslice_dummy_var_740, vslice_dummy_var_741, vslice_dummy_var_742, vslice_dummy_var_745 := CyzStartRead_loop_L24(localStatus_1, Tmp_1282, totalTime, os2ssreturn, timeoutsForIrp, updateChar, setFirstStatus, Tmp_1284, useTotalTimer, newIrp_1, multiplierVal, crunchDownToOne, sdv_930, sdv_931, oldIrql_10, Tmp_1285, sdv_932, constantVal, controlIrql, Tmp_1286, Tmp_1288, returnWithWhatsPresent, Tmp_1289, Tmp_1290, pollIrql_14, useIntervalTimer, firstStatus, sdv_939, Extension_58, boogieTmp, vslice_dummy_var_740, vslice_dummy_var_741, vslice_dummy_var_742, vslice_dummy_var_745);
    goto L24_last;

  L24_last:
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc vslice_dummy_var_213;
    call {:si_unique_call 2714} sdv_930 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_213);
    assume {:nonnull} sdv_930 != 0;
    assume sdv_930 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 2678} localStatus_1 := CyzResizeBuffer(Extension_58);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  L38:
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    call {:si_unique_call 2679} CyzGetNextIrp(CurrentReadIrp__CYZ_DEVICE_EXTENSION(Extension_58), ReadQueue__CYZ_DEVICE_EXTENSION(Extension_58), newIrp_1, 1, Extension_58);
    assume {:nonnull} newIrp_1 != 0;
    assume newIrp_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    Tmp_1283 := strConst__li2bpl233;
    call {:si_unique_call 2680} vslice_dummy_var_744 := CyzDbgPrintEx(2, Tmp_1283);
    Tmp_1281 := firstStatus;
    goto L1;

  L1:
    return;

  anon61_Then:
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    assume false;
    return;

  anon60_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := localStatus_1;
    setFirstStatus := 1;
    goto L38;

  anon59_Then:
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc vslice_dummy_var_207;
    call {:si_unique_call 2681} sdv_932 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_207);
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    assume {:nonnull} sdv_932 != 0;
    assume sdv_932 > 0;
    useTotalTimer := 0;
    returnWithWhatsPresent := 0;
    os2ssreturn := 0;
    crunchDownToOne := 0;
    useIntervalTimer := 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    call {:si_unique_call 2682} vslice_dummy_var_745 := CyzCancelTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_58), Extension_58);
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    call {:si_unique_call 2683} vslice_dummy_var_740 := CyzCancelTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(Extension_58), Extension_58);
    call {:si_unique_call 2684} Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    call {:si_unique_call 2685} sdv_KeAcquireSpinLock(0, Tmp_1289);
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    havoc controlIrql;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    call {:si_unique_call 2686} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    useIntervalTimer := 1;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    goto L67;

  L67:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L77;

  L77:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L84;

  L84:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} useTotalTimer != 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    assume {:nonnull} totalTime != 0;
    assume totalTime > 0;
    goto L85;

  L85:
    call {:si_unique_call 2687} Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    call {:si_unique_call 2688} sdv_KeAcquireSpinLock(0, Tmp_1289);
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    havoc controlIrql;
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    call {:si_unique_call 2689} boogieTmp := CyzGetCharsFromIntBuffer(Extension_58);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} returnWithWhatsPresent != 0;
    goto L95;

  L95:
    call {:si_unique_call 2690} Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    call {:si_unique_call 2691} sdv_KeAcquireSpinLock(0, Tmp_1289);
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    havoc pollIrql_14;
    call {:si_unique_call 2692} vslice_dummy_var_741 := CyzUpdateInterruptBuffer(updateChar);
    call {:si_unique_call 2693} sdv_KeReleaseSpinLock(0, pollIrql_14);
    call {:si_unique_call 2694} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc Tmp_1290;
    assume {:nonnull} Tmp_1290 != 0;
    assume Tmp_1290 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L38;

  anon83_Then:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  anon72_Then:
    assume {:partition} returnWithWhatsPresent == 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} os2ssreturn != 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc Tmp_1285;
    assume {:nonnull} Tmp_1285 != 0;
    assume Tmp_1285 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L112;

  L112:
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc vslice_dummy_var_208;
    call {:si_unique_call 2695} sdv_939 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_208);
    assume {:nonnull} sdv_939 != 0;
    assume sdv_939 > 0;
    call {:si_unique_call 2696} Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    call {:si_unique_call 2697} IoAcquireCancelSpinLock(Tmp_1289);
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    havoc oldIrql_10;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc Tmp_1284;
    assume {:nonnull} Tmp_1284 != 0;
    assume Tmp_1284 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 2698} IoReleaseCancelSpinLock(oldIrql_10);
    call {:si_unique_call 2699} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc Tmp_1288;
    assume {:nonnull} Tmp_1288 != 0;
    assume Tmp_1288 > 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc Tmp_1282;
    assume {:nonnull} Tmp_1282 != 0;
    assume Tmp_1282 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := -1073741536;
    setFirstStatus := 1;
    goto L38;

  anon86_Then:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  anon85_Then:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} crunchDownToOne != 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc vslice_dummy_var_209;
    call {:si_unique_call 2700} sdv_931 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_209);
    assume {:nonnull} sdv_931 != 0;
    assume sdv_931 > 0;
    goto L133;

  L133:
    call {:si_unique_call 2701} Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    call {:si_unique_call 2702} sdv_KeAcquireSpinLock(0, Tmp_1289);
    assume {:nonnull} Tmp_1289 != 0;
    assume Tmp_1289 > 0;
    havoc pollIrql_14;
    call {:si_unique_call 2703} vslice_dummy_var_742 := CyzUpdateAndSwitchToUser(updateChar);
    call {:si_unique_call 2704} sdv_KeReleaseSpinLock(0, pollIrql_14);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    call {:si_unique_call 2705} IoReleaseCancelSpinLock(oldIrql_10);
    call {:si_unique_call 2706} sdv_KeReleaseSpinLock(0, controlIrql);
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc Tmp_1286;
    assume {:nonnull} Tmp_1286 != 0;
    assume Tmp_1286 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L38;

  anon87_Then:
    assume {:partition} setFirstStatus != 0;
    goto L38;

  anon76_Then:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} useTotalTimer != 0;
    s_p_e_c_i_a_l_46 := 4;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc vslice_dummy_var_210;
    call {:si_unique_call 2707} sdv_925 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_210);
    assume {:nonnull} sdv_925 != 0;
    assume sdv_925 > 0;
    s_p_e_c_i_a_l_45 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_925)));
    assume {:nonnull} s_p_e_c_i_a_l_45 != 0;
    assume s_p_e_c_i_a_l_45 > 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    call {:si_unique_call 2708} vslice_dummy_var_746 := CyzSetTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_58), totalTime, TotalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_58), Extension_58);
    goto L159;

  L159:
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} useIntervalTimer != 0;
    s_p_e_c_i_a_l_48 := 8;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc vslice_dummy_var_211;
    call {:si_unique_call 2709} sdv_936 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_211);
    assume {:nonnull} sdv_936 != 0;
    assume sdv_936 > 0;
    s_p_e_c_i_a_l_47 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_936)));
    assume {:nonnull} s_p_e_c_i_a_l_47 != 0;
    assume s_p_e_c_i_a_l_47 > 0;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    havoc Tmp_1291;
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    assume {:nonnull} Tmp_1291 != 0;
    assume Tmp_1291 > 0;
    havoc vslice_dummy_var_212;
    call {:si_unique_call 2710} vslice_dummy_var_747 := CyzSetTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(Extension_58), vslice_dummy_var_212, IntervalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_58), Extension_58);
    goto L171;

  L171:
    call {:si_unique_call 2711} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 2712} IoReleaseCancelSpinLock(oldIrql_10);
    call {:si_unique_call 2713} sdv_KeReleaseSpinLock(0, controlIrql);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} setFirstStatus != 0;
    goto L196;

  L196:
    Tmp_1281 := firstStatus;
    goto L1;

  anon79_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 259;
    goto L196;

  anon78_Then:
    assume {:partition} useIntervalTimer == 0;
    goto L171;

  anon77_Then:
    assume {:partition} useTotalTimer == 0;
    goto L159;

  anon75_Then:
    assume {:partition} crunchDownToOne == 0;
    goto L133;

  anon84_Then:
    goto L95;

  anon74_Then:
    assume {:partition} os2ssreturn == 0;
    goto L112;

  anon73_Then:
    goto L95;

  anon71_Then:
    assume {:partition} useTotalTimer == 0;
    goto L85;

  anon70_Then:
    goto L78;

  L78:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    crunchDownToOne := 1;
    multiplierVal := 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L84;

  anon80_Then:
    goto L84;

  anon69_Then:
    goto L84;

  anon68_Then:
    goto L78;

  anon66_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    returnWithWhatsPresent := 1;
    goto L84;

  anon67_Then:
    goto L77;

  anon63_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L205;

  L205:
    useTotalTimer := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L84;

  anon65_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L205;

  anon81_Then:
    goto L84;

  anon82_Then:
    assume {:nonnull} Extension_58 != 0;
    assume Extension_58 > 0;
    goto L67;

  anon64_Then:
    goto L67;

  anon62_Then:
    goto L67;
}



procedure {:origName "CyzMoveToNewIntBuffer"} CyzMoveToNewIntBuffer(actual_Extension_59: int, actual_NewBuffer: int) returns (Tmp_1292: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzMoveToNewIntBuffer"} CyzMoveToNewIntBuffer(actual_Extension_59: int, actual_NewBuffer: int) returns (Tmp_1292: int)
{
  var {:scalar} firstTryNumberToGet: int;
  var {:scalar} Tmp_1295: int;
  var {:scalar} numberOfCharsMoved: int;
  var {:pointer} Extension_59: int;
  var {:pointer} NewBuffer: int;

  anon0:
    Extension_59 := actual_Extension_59;
    NewBuffer := actual_NewBuffer;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc numberOfCharsMoved;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} numberOfCharsMoved != 0;
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    havoc firstTryNumberToGet;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} firstTryNumberToGet >= numberOfCharsMoved;
    call {:si_unique_call 2715} sdv_RtlMoveMemory(0, 0, numberOfCharsMoved);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L6;

  L6:
    Tmp_1292 := numberOfCharsMoved;
    return;

  anon7_Then:
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L6;

  anon9_Then:
    assume {:partition} numberOfCharsMoved > firstTryNumberToGet;
    call {:si_unique_call 2716} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet);
    Tmp_1295 := numberOfCharsMoved - firstTryNumberToGet;
    call {:si_unique_call 2717} sdv_RtlMoveMemory(0, 0, Tmp_1295);
    assume {:nonnull} Extension_59 != 0;
    assume Extension_59 > 0;
    goto L6;

  anon8_Then:
    assume {:partition} numberOfCharsMoved == 0;
    goto L6;
}



procedure {:origName "CyzUpdateAndSwitchToUser"} CyzUpdateAndSwitchToUser(actual_Context_46: int) returns (Tmp_1296: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1296 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzUpdateAndSwitchToUser"} CyzUpdateAndSwitchToUser(actual_Context_46: int) returns (Tmp_1296: int)
{
  var {:pointer} s_p_e_c_i_a_l_49: int;
  var {:pointer} updateChar_1: int;
  var {:pointer} sdv_941: int;
  var {:pointer} Tmp_1297: int;
  var {:scalar} s_p_e_c_i_a_l_50: int;
  var {:pointer} s_p_e_c_i_a_l_51: int;
  var {:pointer} sdv_946: int;
  var {:scalar} s_p_e_c_i_a_l_52: int;
  var {:pointer} Tmp_1299: int;
  var {:pointer} extension_16: int;
  var {:pointer} Context_46: int;
  var boogieTmp: int;
  var vslice_dummy_var_748: int;
  var vslice_dummy_var_749: int;
  var vslice_dummy_var_750: int;
  var vslice_dummy_var_751: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;

  anon0:
    Context_46 := actual_Context_46;
    updateChar_1 := Context_46;
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    havoc extension_16;
    call {:si_unique_call 2718} vslice_dummy_var_749 := CyzUpdateInterruptBuffer(Context_46);
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    call {:si_unique_call 2719} boogieTmp := CyzGetCharsFromIntBuffer(extension_16);
    call {:si_unique_call 2720} vslice_dummy_var_748 := CyzUpdateInterruptBuffer(Context_46);
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc Tmp_1297;
    assume {:nonnull} Tmp_1297 != 0;
    assume Tmp_1297 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc Tmp_1299;
    assume {:nonnull} Tmp_1299 != 0;
    assume Tmp_1299 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_214;
    call {:si_unique_call 2721} vslice_dummy_var_750 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_214);
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_215;
    call {:si_unique_call 2722} vslice_dummy_var_751 := sdv_IoSetCancelRoutine(vslice_dummy_var_215, li2bplFunctionConstant456);
    s_p_e_c_i_a_l_50 := 1;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_216;
    call {:si_unique_call 2723} sdv_941 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_216);
    assume {:nonnull} sdv_941 != 0;
    assume sdv_941 > 0;
    s_p_e_c_i_a_l_49 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_941)));
    assume {:nonnull} s_p_e_c_i_a_l_49 != 0;
    assume s_p_e_c_i_a_l_49 > 0;
    s_p_e_c_i_a_l_52 := 2;
    assume {:nonnull} extension_16 != 0;
    assume extension_16 > 0;
    havoc vslice_dummy_var_217;
    call {:si_unique_call 2724} sdv_946 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_217);
    assume {:nonnull} sdv_946 != 0;
    assume sdv_946 > 0;
    s_p_e_c_i_a_l_51 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_946)));
    assume {:nonnull} s_p_e_c_i_a_l_51 != 0;
    assume s_p_e_c_i_a_l_51 > 0;
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    goto L47;

  L47:
    Tmp_1296 := 0;
    return;

  anon3_Then:
    assume {:nonnull} updateChar_1 != 0;
    assume updateChar_1 > 0;
    goto L47;
}



procedure {:origName "CyzResizeBuffer"} CyzResizeBuffer(actual_Extension_60: int) returns (Tmp_1300: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1300 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzResizeBuffer"} CyzResizeBuffer(actual_Extension_60: int) returns (Tmp_1300: int)
{
  var {:pointer} Tmp_1301: int;
  var {:pointer} Tmp_1302: int;
  var {:pointer} irpSp_5: int;
  var {:pointer} newBuffer: int;
  var {:pointer} Tmp_1303: int;
  var {:pointer} rs_7: int;
  var {:pointer} Tmp_1304: int;
  var {:scalar} controlIrql_1: int;
  var {:scalar} rp: int;
  var {:scalar} pollIrql_15: int;
  var {:pointer} Extension_60: int;
  var boogieTmp: int;
  var vslice_dummy_var_752: int;
  var vslice_dummy_var_218: int;

  anon0:
    call {:si_unique_call 2725} rp := __HAVOC_malloc(20);
    Extension_60 := actual_Extension_60;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc Tmp_1304;
    assume {:nonnull} Tmp_1304 != 0;
    assume Tmp_1304 > 0;
    havoc rs_7;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc vslice_dummy_var_218;
    call {:si_unique_call 2726} irpSp_5 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_218);
    assume {:nonnull} irpSp_5 != 0;
    assume irpSp_5 > 0;
    havoc newBuffer;
    assume {:nonnull} irpSp_5 != 0;
    assume irpSp_5 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc Tmp_1303;
    assume {:nonnull} Tmp_1303 != 0;
    assume Tmp_1303 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    havoc Tmp_1301;
    assume {:nonnull} Tmp_1301 != 0;
    assume Tmp_1301 > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} rs_7 != 0;
    assume rs_7 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} Extension_60 != 0;
    assume Extension_60 > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rs_7 != 0;
    assume rs_7 > 0;
    call {:si_unique_call 2727} Tmp_1302 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1302 != 0;
    assume Tmp_1302 > 0;
    call {:si_unique_call 2728} sdv_KeAcquireSpinLock(0, Tmp_1302);
    assume {:nonnull} Tmp_1302 != 0;
    assume Tmp_1302 > 0;
    havoc controlIrql_1;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    call {:si_unique_call 2729} boogieTmp := CyzMoveToNewIntBuffer(Extension_60, newBuffer);
    call {:si_unique_call 2730} Tmp_1302 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_1302 != 0;
    assume Tmp_1302 > 0;
    call {:si_unique_call 2731} sdv_KeAcquireSpinLock(0, Tmp_1302);
    assume {:nonnull} Tmp_1302 != 0;
    assume Tmp_1302 > 0;
    havoc pollIrql_15;
    call {:si_unique_call 2732} vslice_dummy_var_752 := CyzUpdateAndSwitchToNew(rp);
    call {:si_unique_call 2733} sdv_KeReleaseSpinLock(0, pollIrql_15);
    call {:si_unique_call 2734} sdv_KeReleaseSpinLock(0, controlIrql_1);
    call {:si_unique_call 2735} sdv_ExFreePool(0);
    goto L20;

  L20:
    Tmp_1300 := 0;
    return;

  anon3_Then:
    call {:si_unique_call 2736} sdv_ExFreePool(0);
    goto L20;
}



procedure {:origName "CyzRead"} CyzRead(actual_DeviceObject_28: int, actual_Irp_23: int) returns (Tmp_1305: int);
  modifies alloc, yogi_error, locked, queuedWithoutMarking, markedPending, queued, stack_location;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(locked) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queued) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(stack_location) == 0 ==> yogi_error == 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> yogi_error == 1;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} yogi_error == 1;
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzRead"} CyzRead(actual_DeviceObject_28: int, actual_Irp_23: int) returns (Tmp_1305: int)
{
  var {:pointer} Tmp_1306: int;
  var {:pointer} Tmp_1307: int;
  var {:pointer} Tmp_1308: int;
  var {:scalar} sdv_952: int;
  var {:pointer} Tmp_1309: int;
  var {:pointer} sdv_954: int;
  var {:pointer} Tmp_1310: int;
  var {:pointer} Tmp_1311: int;
  var {:pointer} Tmp_1312: int;
  var {:pointer} Tmp_1314: int;
  var {:scalar} status_33: int;
  var {:pointer} extension_17: int;
  var {:pointer} DeviceObject_28: int;
  var {:pointer} Irp_23: int;
  var vslice_dummy_var_753: int;
  var vslice_dummy_var_754: int;
  var vslice_dummy_var_755: int;
  var vslice_dummy_var_756: int;
  var vslice_dummy_var_757: int;
  var vslice_dummy_var_758: int;
  var vslice_dummy_var_759: int;
  var vslice_dummy_var_760: int;

  anon0:
    DeviceObject_28 := actual_DeviceObject_28;
    Irp_23 := actual_Irp_23;
    call {:si_unique_call 2737} Tmp_1306 := __HAVOC_malloc(68);
    call {:si_unique_call 2738} Tmp_1307 := __HAVOC_malloc(72);
    call {:si_unique_call 2739} Tmp_1308 := __HAVOC_malloc(96);
    call {:si_unique_call 2740} Tmp_1309 := __HAVOC_malloc(72);
    call {:si_unique_call 2741} Tmp_1310 := __HAVOC_malloc(68);
    call {:si_unique_call 2742} Tmp_1311 := __HAVOC_malloc(72);
    call {:si_unique_call 2743} Tmp_1312 := __HAVOC_malloc(68);
    call {:si_unique_call 2744} Tmp_1314 := __HAVOC_malloc(68);
    assume {:nonnull} DeviceObject_28 != 0;
    assume DeviceObject_28 > 0;
    havoc extension_17;
    Tmp_1307 := strConst__li2bpl239;
    call {:si_unique_call 2745} vslice_dummy_var_753 := CyzDbgPrintEx(2, Tmp_1307);
    call {:si_unique_call 2746} status_33 := CyzIRPPrologue(Irp_23, extension_17);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} status_33 != 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} status_33 != 259;
    Tmp_1309 := strConst__li2bpl3;
    call {:si_unique_call 2747} vslice_dummy_var_754 := CyzDbgPrintEx(9, Tmp_1309);
    call {:si_unique_call 2748} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2749} CyzIRPEpilogue(extension_17);
    goto L19;

  L19:
    Tmp_1314 := strConst__li2bpl235;
    call {:si_unique_call 2750} vslice_dummy_var_755 := CyzDbgPrintEx(2, Tmp_1314);
    Tmp_1305 := status_33;
    goto L1;

  L1:
    call {:si_unique_call 2751} SLIC_CyzRead_exit(strConst__li2bpl0, Tmp_1305);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto LM2;

  LM2:
    return;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} status_33 == 259;
    goto L19;

  anon11_Then:
    assume {:partition} status_33 == 0;
    Tmp_1308 := strConst__li2bpl1;
    call {:si_unique_call 2752} vslice_dummy_var_756 := CyzDbgPrintEx(9, Tmp_1308);
    call {:si_unique_call 2753} sdv_952 := CyzCompleteIfError(DeviceObject_28, Irp_23);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_952 != 0;
    Tmp_1312 := strConst__li2bpl236;
    call {:si_unique_call 2754} vslice_dummy_var_757 := CyzDbgPrintEx(2, Tmp_1312);
    Tmp_1305 := -1073741536;
    goto L1;

  anon13_Then:
    assume {:partition} sdv_952 == 0;
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    call {:si_unique_call 2755} sdv_954 := sdv_IoGetCurrentIrpStackLocation(Irp_23);
    assume {:nonnull} sdv_954 != 0;
    assume sdv_954 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} extension_17 != 0;
    assume extension_17 > 0;
    call {:si_unique_call 2756} status_33 := CyzStartOrQueue(extension_17, Irp_23, ReadQueue__CYZ_DEVICE_EXTENSION(extension_17), CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_17), li2bplFunctionConstant381);
    Tmp_1306 := strConst__li2bpl237;
    call {:si_unique_call 2757} vslice_dummy_var_758 := CyzDbgPrintEx(2, Tmp_1306);
    Tmp_1305 := status_33;
    goto L1;

  anon14_Then:
    assume {:nonnull} Irp_23 != 0;
    assume Irp_23 > 0;
    Tmp_1311 := strConst__li2bpl3;
    call {:si_unique_call 2758} vslice_dummy_var_759 := CyzDbgPrintEx(9, Tmp_1311);
    call {:si_unique_call 2759} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 2760} CyzIRPEpilogue(extension_17);
    Tmp_1310 := strConst__li2bpl238;
    call {:si_unique_call 2761} vslice_dummy_var_760 := CyzDbgPrintEx(2, Tmp_1310);
    Tmp_1305 := 0;
    goto L1;
}



procedure {:origName "CyzCancelCurrentRead"} CyzCancelCurrentRead(actual_DeviceObject_29: int, actual_Irp_24: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzCancelCurrentRead"} CyzCancelCurrentRead(actual_DeviceObject_29: int, actual_Irp_24: int)
{
  var {:pointer} extension_18: int;
  var {:pointer} DeviceObject_29: int;
  var {:pointer} Irp_24: int;
  var vslice_dummy_var_761: int;
  var vslice_dummy_var_219: int;

  anon0:
    call {:si_unique_call 2762} vslice_dummy_var_761 := __HAVOC_malloc(4);
    DeviceObject_29 := actual_DeviceObject_29;
    Irp_24 := actual_Irp_24;
    assume {:nonnull} DeviceObject_29 != 0;
    assume DeviceObject_29 > 0;
    havoc extension_18;
    assume {:nonnull} extension_18 != 0;
    assume extension_18 > 0;
    assume {:nonnull} Irp_24 != 0;
    assume Irp_24 > 0;
    assume {:nonnull} extension_18 != 0;
    assume extension_18 > 0;
    havoc vslice_dummy_var_219;
    call {:si_unique_call 2763} CyzTryToCompleteCurrent#1(extension_18, li2bplFunctionConstant457, vslice_dummy_var_219, -1073741536, CurrentReadIrp__CYZ_DEVICE_EXTENSION(extension_18), ReadQueue__CYZ_DEVICE_EXTENSION(extension_18), ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(extension_18), ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(extension_18), li2bplFunctionConstant381, li2bplFunctionConstant144, 2);
    return;
}



procedure {:origName "CyzUpdateInterruptBuffer"} CyzUpdateInterruptBuffer(actual_Context_47: int) returns (Tmp_1317: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1317 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzUpdateInterruptBuffer"} CyzUpdateInterruptBuffer(actual_Context_47: int) returns (Tmp_1317: int)
{
  var {:pointer} update: int;
  var {:pointer} extension_19: int;
  var {:pointer} Context_47: int;

  anon0:
    Context_47 := actual_Context_47;
    update := Context_47;
    assume {:nonnull} update != 0;
    assume update > 0;
    havoc extension_19;
    assume {:nonnull} extension_19 != 0;
    assume extension_19 > 0;
    assume {:nonnull} update != 0;
    assume update > 0;
    call {:si_unique_call 2764} CyzHandleReducedIntBuffer(extension_19);
    Tmp_1317 := 0;
    return;
}



procedure {:origName "CyzUpdateAndSwitchToNew"} CyzUpdateAndSwitchToNew(actual_Context_48: int) returns (Tmp_1319: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_1319 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzUpdateAndSwitchToNew"} CyzUpdateAndSwitchToNew(actual_Context_48: int) returns (Tmp_1319: int)
{
  var {:pointer} params: int;
  var {:pointer} Tmp_1320: int;
  var {:scalar} tempCharsInInterruptBuffer: int;
  var {:pointer} extension_20: int;
  var {:pointer} Context_48: int;
  var boogieTmp: int;
  var vslice_dummy_var_762: int;

  anon0:
    Context_48 := actual_Context_48;
    params := Context_48;
    assume {:nonnull} params != 0;
    assume params > 0;
    havoc extension_20;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    havoc tempCharsInInterruptBuffer;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} params != 0;
    assume params > 0;
    havoc Tmp_1320;
    call {:si_unique_call 2765} vslice_dummy_var_762 := CyzMoveToNewIntBuffer(extension_20, Tmp_1320);
    goto L11;

  L11:
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} params != 0;
    assume params > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    call {:si_unique_call 2766} boogieTmp := corral_nondet();
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    call {:si_unique_call 2767} boogieTmp := corral_nondet();
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    assume {:nonnull} extension_20 != 0;
    assume extension_20 > 0;
    call {:si_unique_call 2768} boogieTmp := corral_nondet();
    call {:si_unique_call 2769} CyzHandleReducedIntBuffer(extension_20);
    Tmp_1319 := 0;
    return;

  anon3_Then:
    goto L11;
}



procedure {:origName "CyzGetCharsFromIntBuffer"} CyzGetCharsFromIntBuffer(actual_Extension_61: int) returns (Tmp_1322: int);
  modifies alloc;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzGetCharsFromIntBuffer"} CyzGetCharsFromIntBuffer(actual_Extension_61: int) returns (Tmp_1322: int)
{
  var {:scalar} numberOfCharsToGet: int;
  var {:scalar} firstTryNumberToGet_1: int;
  var {:scalar} Tmp_1325: int;
  var {:pointer} Tmp_1326: int;
  var {:pointer} Tmp_1327: int;
  var {:pointer} Tmp_1328: int;
  var {:pointer} Tmp_1329: int;
  var {:pointer} Tmp_1331: int;
  var {:pointer} Extension_61: int;
  var vslice_dummy_var_763: int;
  var vslice_dummy_var_764: int;
  var vslice_dummy_var_765: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;

  anon0:
    Extension_61 := actual_Extension_61;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc numberOfCharsToGet;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc numberOfCharsToGet;
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} numberOfCharsToGet != 0;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc firstTryNumberToGet_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} firstTryNumberToGet_1 > numberOfCharsToGet;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc vslice_dummy_var_220;
    call {:si_unique_call 2770} vslice_dummy_var_764 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_220);
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc Tmp_1331;
    assume {:nonnull} Tmp_1331 != 0;
    assume Tmp_1331 > 0;
    call {:si_unique_call 2771} sdv_RtlMoveMemory(0, 0, numberOfCharsToGet);
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    goto L9;

  L9:
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc Tmp_1327;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc Tmp_1328;
    assume {:nonnull} Tmp_1327 != 0;
    assume Tmp_1327 > 0;
    assume {:nonnull} Tmp_1328 != 0;
    assume Tmp_1328 > 0;
    Tmp_1322 := numberOfCharsToGet;
    return;

  anon12_Then:
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    goto L9;

  anon11_Then:
    assume {:partition} numberOfCharsToGet >= firstTryNumberToGet_1;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc vslice_dummy_var_221;
    call {:si_unique_call 2772} vslice_dummy_var_763 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_221);
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc Tmp_1329;
    assume {:nonnull} Tmp_1329 != 0;
    assume Tmp_1329 > 0;
    call {:si_unique_call 2773} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet_1);
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    Tmp_1325 := numberOfCharsToGet - firstTryNumberToGet_1;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc vslice_dummy_var_222;
    call {:si_unique_call 2774} vslice_dummy_var_765 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_222);
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    havoc Tmp_1326;
    assume {:nonnull} Tmp_1326 != 0;
    assume Tmp_1326 > 0;
    call {:si_unique_call 2775} sdv_RtlMoveMemory(0, 0, Tmp_1325);
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    assume {:nonnull} Extension_61 != 0;
    assume Extension_61 > 0;
    goto L9;

  anon9_Then:
    assume {:partition} numberOfCharsToGet == 0;
    goto L9;

  anon10_Then:
    goto L7;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.AddDevice__DRIVER_EXTENSION"} {:fieldname "AddDevice"} AddDevice__DRIVER_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__CYZ_GLOBALS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AllocationSize__FILE_STANDARD_INFORMATION"} {:fieldname "AllocationSize"} AllocationSize__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "AlternativeLists"} AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.AmountInInQueue__SERIAL_STATUS"} {:fieldname "AmountInInQueue"} AmountInInQueue__SERIAL_STATUS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.AmountInOutQueue__SERIAL_STATUS"} {:fieldname "AmountInOutQueue"} AmountInOutQueue__SERIAL_STATUS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Argument4"} Argument4_unnamed_tag_40(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_3"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BaudRate__SERIAL_BAUD_RATE"} {:fieldname "BaudRate"} BaudRate__SERIAL_BAUD_RATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Baud__CYZ_IOCTL_BAUD"} {:fieldname "Baud"} Baud__CYZ_IOCTL_BAUD(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BitsPerByte__SERIAL_WMI_COMM_DATA"} {:fieldname "BitsPerByte"} BitsPerByte__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BoardCtrl__CYZ_DEVICE_EXTENSION"} {:fieldname "BoardCtrl"} BoardCtrl__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryAddressSpace__CONFIG_DATA"} {:fieldname "BoardMemoryAddressSpace"} BoardMemoryAddressSpace__CONFIG_DATA(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryAddressSpace__CYZ_DEVICE_EXTENSION"} {:fieldname "BoardMemoryAddressSpace"} BoardMemoryAddressSpace__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 552
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryLength__CONFIG_DATA"} {:fieldname "BoardMemoryLength"} BoardMemoryLength__CONFIG_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryLength__CYZ_DEVICE_EXTENSION"} {:fieldname "BoardMemoryLength"} BoardMemoryLength__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T.BreakChar__SERIAL_CHARS"} {:fieldname "BreakChar"} BreakChar__SERIAL_CHARS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BufCtrl__CYZ_DEVICE_EXTENSION"} {:fieldname "BufCtrl"} BufCtrl__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.BufferOverrunErrorCount__SERIALPERF_STATS"} {:fieldname "BufferOverrunErrorCount"} BufferOverrunErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BufferSizePt8__CYZ_DEVICE_EXTENSION"} {:fieldname "BufferSizePt8"} BufferSizePt8__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 364
}

function {:inline true} {:fieldmap "Mem_T.BufferSize__CYZ_DEVICE_EXTENSION"} {:fieldname "BufferSize"} BufferSize__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 360
}

function {:inline true} {:fieldmap "Mem_T.Buffer__UNICODE_STRING"} {:fieldname "Buffer"} Buffer__UNICODE_STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "BusNumber"} BusNumber__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CONFIG_DATA"} {:fieldname "BusNumber"} BusNumber__CONFIG_DATA(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CYZ_DEVICE_EXTENSION"} {:fieldname "BusNumber"} BusNumber__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 556
}

function {:inline true} {:fieldmap "Mem_T.CancelIrql__IRP"} {:fieldname "CancelIrql"} CancelIrql__IRP(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ChCtrl__CYZ_DEVICE_EXTENSION"} {:fieldname "ChCtrl"} ChCtrl__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T.CharsCopied__SERIAL_UPDATE_CHAR"} {:fieldname "CharsCopied"} CharsCopied__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CharsInInterruptBuffer__CYZ_DEVICE_EXTENSION"} {:fieldname "CharsInInterruptBuffer"} CharsInInterruptBuffer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.CmdFailureLog__CYZ_DEVICE_EXTENSION"} {:fieldname "CmdFailureLog"} CmdFailureLog__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3364
}

function {:inline true} {:fieldmap "Mem_T.CommDataLen__CYZ_DEVICE_EXTENSION"} {:fieldname "CommDataLen"} CommDataLen__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 528
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommErrorDpc"} CommErrorDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 804
}

function {:inline true} {:fieldmap "Mem_T.CommParity__CYZ_DEVICE_EXTENSION"} {:fieldname "CommParity"} CommParity__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 524
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommWaitDpc"} CommWaitDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 844
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteImmediateDpc"} CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 884
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteReadDpc"} CompleteReadDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 644
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteWriteDpc"} CompleteWriteDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 604
}

function {:inline true} {:fieldmap "Mem_T.Completed__SERIAL_UPDATE_CHAR"} {:fieldname "Completed"} Completed__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.ControlHandShake__SERIAL_HANDFLOW"} {:fieldname "ControlHandShake"} ControlHandShake__SERIAL_HANDFLOW(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ControlLock__CYZ_DEVICE_EXTENSION"} {:fieldname "ControlLock"} ControlLock__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 592
}

function {:inline true} {:fieldmap "Mem_T.CountOfTryingToLowerRTS__CYZ_DEVICE_EXTENSION"} {:fieldname "CountOfTryingToLowerRTS"} CountOfTryingToLowerRTS__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.CountOnLastRead__CYZ_DEVICE_EXTENSION"} {:fieldname "CountOnLastRead"} CountOnLastRead__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.CountSinceXoff__CYZ_DEVICE_EXTENSION"} {:fieldname "CountSinceXoff"} CountSinceXoff__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 412
}

function {:inline true} {:fieldmap "Mem_T.Count__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "Count"} Count__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Count__IO_RESOURCE_LIST"} {:fieldname "Count"} Count__IO_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Counter__SERIAL_XOFF_COUNTER"} {:fieldname "Counter"} Counter__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Create_unnamed_tag_8"} {:fieldname "Create"} Create_unnamed_tag_8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CreatedSerialCommEntry__CYZ_DEVICE_EXTENSION"} {:fieldname "CreatedSerialCommEntry"} CreatedSerialCommEntry__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 588
}

function {:inline true} {:fieldmap "Mem_T.CreatedSymbolicLink__CYZ_DEVICE_EXTENSION"} {:fieldname "CreatedSymbolicLink"} CreatedSymbolicLink__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 584
}

function {:inline true} {:fieldmap "Mem_T.CurrentBaud__CYZ_DEVICE_EXTENSION"} {:fieldname "CurrentBaud"} CurrentBaud__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 408
}

function {:inline true} {:fieldmap "Mem_T.CurrentByteOffset__FILE_POSITION_INFORMATION"} {:fieldname "CurrentByteOffset"} CurrentByteOffset__FILE_POSITION_INFORMATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CurrentCharSlot__CYZ_DEVICE_EXTENSION"} {:fieldname "CurrentCharSlot"} CurrentCharSlot__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentImmediateIrp"} CurrentImmediateIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentMaskIrp"} CurrentMaskIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentPurgeIrp"} CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentReadIrp"} CurrentReadIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 292
}

function {:inline true} {:fieldmap "Mem_T.CurrentRxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentRxQueue"} CurrentRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_7"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_7(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CurrentTxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentTxQueue"} CurrentTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWaitIrp"} CurrentWaitIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 308
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWriteIrp"} CurrentWriteIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 296
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentXoffIrp"} CurrentXoffIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.CutOverAmount__CYZ_DEVICE_EXTENSION"} {:fieldname "CutOverAmount"} CutOverAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "CyzStartEvent"} CyzStartEvent__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2416
}

function {:inline true} {:fieldmap "Mem_T.DCDstatus__CYZ_DEVICE_EXTENSION"} {:fieldname "DCDstatus"} DCDstatus__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3368
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataLength__KEY_VALUE_FULL_INFORMATION"} {:fieldname "DataLength"} DataLength__KEY_VALUE_FULL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Data__CYZ_CLOSE_SYNC"} {:fieldname "Data"} Data__CYZ_CLOSE_SYNC(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DebugLevel"} DebugLevel__CYZ_REGISTRY_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DefaultData__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultData"} DefaultData__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DefaultLength__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultLength"} DefaultLength__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.DefaultType__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "DefaultType"} DefaultType__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.DeletePending__FILE_STANDARD_INFORMATION"} {:fieldname "DeletePending"} DeletePending__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.Descriptors__IO_RESOURCE_LIST"} {:fieldname "Descriptors"} Descriptors__IO_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceClassSymbolicName"} DeviceClassSymbolicName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2260
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceIsOpened__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceIsOpened"} DeviceIsOpened__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 532
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceName"} DeviceName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__IO_STACK_LOCATION"} {:fieldname "DeviceObject"} DeviceObject__IO_STACK_LOCATION(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DevicePNPAccept"} DevicePNPAccept__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2276
}

function {:inline true} {:fieldmap "Mem_T.DeviceStateMap__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceStateMap"} DeviceStateMap__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2576
}

function {:inline true} {:fieldmap "Mem_T._CYZ_DEVICE_STATE"} {:fieldname "DeviceState"} DeviceState__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2540
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__CYZ_DEVICE_EXTENSION"} {:fieldname "DeviceWake"} DeviceWake__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3024
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Directory__FILE_STANDARD_INFORMATION"} {:fieldname "Directory"} Directory__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DosName"} DosName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.DpcCount__CYZ_DEVICE_EXTENSION"} {:fieldname "DpcCount"} DpcCount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3232
}

function {:inline true} {:fieldmap "Mem_T.Dpc__KTIMER"} {:fieldname "Dpc"} Dpc__KTIMER(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DriverExtension__DRIVER_OBJECT"} {:fieldname "DriverExtension"} DriverExtension__DRIVER_OBJECT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__CYZ_DEVICE_EXTENSION"} {:fieldname "DriverObject"} DriverObject__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2132
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__DEVICE_OBJECT"} {:fieldname "DriverObject"} DriverObject__DEVICE_OBJECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DriverUnload__DRIVER_OBJECT"} {:fieldname "DriverUnload"} DriverUnload__DRIVER_OBJECT(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.EmptiedTransmit__CYZ_DEVICE_EXTENSION"} {:fieldname "EmptiedTransmit"} EmptiedTransmit__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 544
}

function {:inline true} {:fieldmap "Mem_T.EndOfFile__FILE_STANDARD_INFORMATION"} {:fieldname "EndOfFile"} EndOfFile__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.EntryContext__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "EntryContext"} EntryContext__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.EofChar__SERIAL_CHARS"} {:fieldname "EofChar"} EofChar__SERIAL_CHARS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.EofReceived__SERIAL_STATUS"} {:fieldname "EofReceived"} EofReceived__SERIAL_STATUS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ErrorChar__SERIAL_CHARS"} {:fieldname "ErrorChar"} ErrorChar__SERIAL_CHARS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ErrorWord__CYZ_DEVICE_EXTENSION"} {:fieldname "ErrorWord"} ErrorWord__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.Errors__SERIAL_STATUS"} {:fieldname "Errors"} Errors__SERIAL_STATUS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.EscapeChar__CYZ_DEVICE_EXTENSION"} {:fieldname "EscapeChar"} EscapeChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 576
}

function {:inline true} {:fieldmap "Mem_T.EventChar__SERIAL_CHARS"} {:fieldname "EventChar"} EventChar__SERIAL_CHARS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ExecuteWmiMethod__WMILIB_CONTEXT"} {:fieldname "ExecuteWmiMethod"} ExecuteWmiMethod__WMILIB_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Extension__CYZ_CLOSE_SYNC"} {:fieldname "Extension"} Extension__CYZ_CLOSE_SYNC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__CYZ_IOCTL_BAUD"} {:fieldname "Extension"} Extension__CYZ_IOCTL_BAUD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_RESIZE_PARAMS"} {:fieldname "Extension"} Extension__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_UPDATE_CHAR"} {:fieldname "Extension"} Extension__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extensions__CYZ_DISPATCH"} {:fieldname "Extensions"} Extensions__CYZ_DISPATCH(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FileInformationClass_unnamed_tag_13"} {:fieldname "FileInformationClass"} FileInformationClass_unnamed_tag_13(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FilterResourceRequirements_unnamed_tag_8"} {:fieldname "FilterResourceRequirements"} FilterResourceRequirements_unnamed_tag_8(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirstReadableChar__CYZ_DEVICE_EXTENSION"} {:fieldname "FirstReadableChar"} FirstReadableChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 348
}

function {:inline true} {:fieldmap "Mem_T.FlagsLock__CYZ_DEVICE_EXTENSION"} {:fieldname "FlagsLock"} FlagsLock__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T.Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "Flags"} Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Flags"} Flags__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2408
}

function {:inline true} {:fieldmap "Mem_T.Flags__DEVICE_OBJECT"} {:fieldname "Flags"} Flags__DEVICE_OBJECT(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.Flags__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Flags"} Flags__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FlowReplace__SERIAL_HANDFLOW"} {:fieldname "FlowReplace"} FlowReplace__SERIAL_HANDFLOW(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.FrameErrorCount__SERIALPERF_STATS"} {:fieldname "FrameErrorCount"} FrameErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.GlobalsSpinLock__CYZ_GLOBALS"} {:fieldname "GlobalsSpinLock"} GlobalsSpinLock__CYZ_GLOBALS(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.GuidCount__WMILIB_CONTEXT"} {:fieldname "GuidCount"} GuidCount__WMILIB_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.GuidList__WMILIB_CONTEXT"} {:fieldname "GuidList"} GuidList__WMILIB_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._SERIAL_HANDFLOW"} {:fieldname "HandFlow"} HandFlow__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 484
}

function {:inline true} {:fieldmap "Mem_T._SERIAL_HANDFLOW"} {:fieldname "HandFlow"} HandFlow__SERIAL_BASIC_SETTINGS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.High1Time__KSYSTEM_TIME"} {:fieldname "High1Time"} High1Time__KSYSTEM_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.High2Time__KSYSTEM_TIME"} {:fieldname "High2Time"} High2Time__KSYSTEM_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HistoryMask__CYZ_DEVICE_EXTENSION"} {:fieldname "HistoryMask"} HistoryMask__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.HoldReasons__SERIAL_STATUS"} {:fieldname "HoldReasons"} HoldReasons__SERIAL_STATUS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HoldingEmpty__CYZ_DEVICE_EXTENSION"} {:fieldname "HoldingEmpty"} HoldingEmpty__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ImmediateChar__CYZ_DEVICE_EXTENSION"} {:fieldname "ImmediateChar"} ImmediateChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 568
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ImmediateTotalTimer"} ImmediateTotalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1644
}

function {:inline true} {:fieldmap "Mem_T.InSize__SERIAL_QUEUE_SIZE"} {:fieldname "InSize"} InSize__SERIAL_QUEUE_SIZE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_20"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "InterfaceType"} InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CONFIG_DATA"} {:fieldname "InterfaceType"} InterfaceType__CONFIG_DATA(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CYZ_DEVICE_EXTENSION"} {:fieldname "InterfaceType"} InterfaceType__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.InterruptReadBuffer__CYZ_DEVICE_EXTENSION"} {:fieldname "InterruptReadBuffer"} InterruptReadBuffer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 328
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IntervalReadTimeoutDpc"} IntervalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 724
}

function {:inline true} {:fieldmap "Mem_T.IntervalTimeToUse__CYZ_DEVICE_EXTENSION"} {:fieldname "IntervalTimeToUse"} IntervalTimeToUse__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.IntervalTime__CYZ_DEVICE_EXTENSION"} {:fieldname "IntervalTime"} IntervalTime__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoResourceRequirementList_unnamed_tag_29"} {:fieldname "IoResourceRequirementList"} IoResourceRequirementList_unnamed_tag_29(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IrpMaskLocation__CYZ_DEVICE_EXTENSION"} {:fieldname "IrpMaskLocation"} IrpMaskLocation__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.IsBusy__SERIAL_WMI_COMM_DATA"} {:fieldname "IsBusy"} IsBusy__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IsrUnlockPagesDpc"} IsrUnlockPagesDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1124
}

function {:inline true} {:fieldmap "Mem_T.IsrWaitMask__CYZ_DEVICE_EXTENSION"} {:fieldname "IsrWaitMask"} IsrWaitMask__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T.LastCharSlot__CYZ_DEVICE_EXTENSION"} {:fieldname "LastCharSlot"} LastCharSlot__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_16"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_42"} {:fieldname "Length"} Length_unnamed_tag_42(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry_unnamed_tag_7(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.List__CM_RESOURCE_LIST"} {:fieldname "List"} List__CM_RESOURCE_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.List__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "List"} List__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "LongIntervalAmount"} LongIntervalAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.LowPart__KSYSTEM_TIME"} {:fieldname "LowPart"} LowPart__KSYSTEM_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__CYZ_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2124
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "LowerRTSTimer"} LowerRTSTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1964
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "MaskQueue"} MaskQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 276
}

function {:inline true} {:fieldmap "Mem_T.MaxBaud__SERIAL_COMMPROP"} {:fieldname "MaxBaud"} MaxBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MaxRxQueue__SERIAL_COMMPROP"} {:fieldname "MaxRxQueue"} MaxRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.MaxTxQueue__SERIAL_COMMPROP"} {:fieldname "MaxTxQueue"} MaxTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.MaximumBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumBaudRate"} MaximumBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.MaximumInputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumInputBufferSize"} MaximumInputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__UNICODE_STRING"} {:fieldname "MaximumLength"} MaximumLength__UNICODE_STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumOutputBufferSize"} MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_41"} {:fieldname "Memory"} Memory_unnamed_tag_41(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_53"} {:fieldname "Memory"} Memory_unnamed_tag_53(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NChannels__CYZ_DISPATCH"} {:fieldname "NChannels"} NChannels__CYZ_DISPATCH(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Name__RTL_QUERY_REGISTRY_TABLE"} {:fieldname "Name"} Name__RTL_QUERY_REGISTRY_TABLE(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.NewBufferSize__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBufferSize"} NewBufferSize__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.NewBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBuffer"} NewBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "NtNameForPort"} NtNameForPort__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.NumberMoved__SERIAL_RESIZE_PARAMS"} {:fieldname "NumberMoved"} NumberMoved__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.NumberNeededForRead__CYZ_DEVICE_EXTENSION"} {:fieldname "NumberNeededForRead"} NumberNeededForRead__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 368
}

function {:inline true} {:fieldmap "Mem_T.NumberOfLinks__FILE_STANDARD_INFORMATION"} {:fieldname "NumberOfLinks"} NumberOfLinks__FILE_STANDARD_INFORMATION(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.NumberOfStrings__IO_ERROR_LOG_PACKET"} {:fieldname "NumberOfStrings"} NumberOfStrings__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "ObjectDirectory"} ObjectDirectory__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.OldBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "OldBuffer"} OldBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "OpenCount"} OpenCount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2412
}

function {:inline true} {:fieldmap "Mem_T.Options_unnamed_tag_9"} {:fieldname "Options"} Options_unnamed_tag_9(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalBoardMemory__CYZ_DEVICE_EXTENSION"} {:fieldname "OriginalBoardMemory"} OriginalBoardMemory__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.OriginalRuntimeMemory__CYZ_DEVICE_EXTENSION"} {:fieldname "OriginalRuntimeMemory"} OriginalRuntimeMemory__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.OurIsrContext__CYZ_DEVICE_EXTENSION"} {:fieldname "OurIsrContext"} OurIsrContext__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_20"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_6"} {:fieldname "Overlay"} Overlay_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OwnsPowerPolicy__CYZ_DEVICE_EXTENSION"} {:fieldname "OwnsPowerPolicy"} OwnsPowerPolicy__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3016
}

function {:inline true} {:fieldmap "Mem_T.PAGESER_Handle__CYZ_GLOBALS"} {:fieldname "PAGESER_Handle"} PAGESER_Handle__CYZ_GLOBALS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PNPState__CYZ_DEVICE_EXTENSION"} {:fieldname "PNPState"} PNPState__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2404
}

function {:inline true} {:fieldmap "Mem_T.PPPaware__CONFIG_DATA"} {:fieldname "PPPaware"} PPPaware__CONFIG_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.PPPaware__CYZ_DEVICE_EXTENSION"} {:fieldname "PPPaware"} PPPaware__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3380
}

function {:inline true} {:fieldmap "Mem_T.PacketLength__SERIAL_COMMPROP"} {:fieldname "PacketLength"} PacketLength__SERIAL_COMMPROP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PacketVersion__SERIAL_COMMPROP"} {:fieldname "PacketVersion"} PacketVersion__SERIAL_COMMPROP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParityCheckEnable__SERIAL_WMI_COMM_DATA"} {:fieldname "ParityCheckEnable"} ParityCheckEnable__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ParityErrorCount__SERIALPERF_STATS"} {:fieldname "ParityErrorCount"} ParityErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_LINE_CONTROL"} {:fieldname "Parity"} Parity__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_WMI_COMM_DATA"} {:fieldname "Parity"} Parity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PartialDescriptors__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialDescriptors"} PartialDescriptors__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialResourceList"} PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PciSlot__CYZ_DEVICE_EXTENSION"} {:fieldname "PciSlot"} PciSlot__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3396
}

function {:inline true} {:fieldmap "Mem_T.Pdo__CYZ_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3028
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingDpcEvent"} PendingDpcEvent__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3236
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingDpcEvent"} PendingDpcEvent__CYZ_DISPATCH(x: int) : int
{
  x + 504
}

function {:inline true} {:fieldmap "Mem_T.PendingIRPCnt__CYZ_DEVICE_EXTENSION"} {:fieldname "PendingIRPCnt"} PendingIRPCnt__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2272
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingIRPEvent"} PendingIRPEvent__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2280
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PendingWakeIrp__CYZ_DEVICE_EXTENSION"} {:fieldname "PendingWakeIrp"} PendingWakeIrp__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3036
}

function {:inline true} {:fieldmap "Mem_T._SERIALPERF_STATS"} {:fieldname "PerfStats"} PerfStats__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 500
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "PerhapsLowerRTSDpc"} PerhapsLowerRTSDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1084
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PermitShareDefault"} PermitShareDefault__CYZ_REGISTRY_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.PermitSystemWideShare__CYZ_REGISTRY_DATA"} {:fieldname "PermitSystemWideShare"} PermitSystemWideShare__CYZ_REGISTRY_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.PhysicalBoardMemory__CONFIG_DATA"} {:fieldname "PhysicalBoardMemory"} PhysicalBoardMemory__CONFIG_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.PhysicalRuntime__CONFIG_DATA"} {:fieldname "PhysicalRuntime"} PhysicalRuntime__CONFIG_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PollLock__CYZ_DEVICE_EXTENSION"} {:fieldname "PollLock"} PollLock__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 600
}

function {:inline true} {:fieldmap "Mem_T.PollingCount__CYZ_DISPATCH"} {:fieldname "PollingCount"} PollingCount__CYZ_DISPATCH(x: int) : int
{
  x + 492
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "PollingDpc"} PollingDpc__CYZ_DISPATCH(x: int) : int
{
  x + 444
}

function {:inline true} {:fieldmap "Mem_T.PollingDrained__CYZ_DISPATCH"} {:fieldname "PollingDrained"} PollingDrained__CYZ_DISPATCH(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.PollingLock__CYZ_DISPATCH"} {:fieldname "PollingLock"} PollingLock__CYZ_DISPATCH(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.PollingPeriod__CYZ_DISPATCH"} {:fieldname "PollingPeriod"} PollingPeriod__CYZ_DISPATCH(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.PollingStarted__CYZ_DISPATCH"} {:fieldname "PollingStarted"} PollingStarted__CYZ_DISPATCH(x: int) : int
{
  x + 484
}

function {:inline true} {:fieldmap "Mem_T.PollingTime__CYZ_DISPATCH"} {:fieldname "PollingTime"} PollingTime__CYZ_DISPATCH(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PortIndex"} PortIndex__CONFIG_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.PortIndex__CYZ_DEVICE_EXTENSION"} {:fieldname "PortIndex"} PortIndex__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 564
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PowerD0Event"} PowerD0Event__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2604
}

function {:inline true} {:fieldmap "Mem_T.PowerState__CYZ_DEVICE_EXTENSION"} {:fieldname "PowerState"} PowerState__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2128
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.ProvCapabilities__SERIAL_COMMPROP"} {:fieldname "ProvCapabilities"} ProvCapabilities__SERIAL_COMMPROP(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ProvSubType__SERIAL_COMMPROP"} {:fieldname "ProvSubType"} ProvSubType__SERIAL_COMMPROP(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PtZfIntQueue__CYZ_DEVICE_EXTENSION"} {:fieldname "PtZfIntQueue"} PtZfIntQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 240
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PurgeQueue"} PurgeQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 284
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryFile_unnamed_tag_8"} {:fieldname "QueryFile"} QueryFile_unnamed_tag_8(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "QueryWmiDataBlock"} QueryWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiRegInfo__WMILIB_CONTEXT"} {:fieldname "QueryWmiRegInfo"} QueryWmiRegInfo__WMILIB_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.RXHolding__CYZ_DEVICE_EXTENSION"} {:fieldname "RXHolding"} RXHolding__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T.ReadBufferBase__CYZ_DEVICE_EXTENSION"} {:fieldname "ReadBufferBase"} ReadBufferBase__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 332
}

function {:inline true} {:fieldmap "Mem_T.ReadByIsr__CYZ_DEVICE_EXTENSION"} {:fieldname "ReadByIsr"} ReadByIsr__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T.ReadIntervalTimeout__SERIAL_TIMEOUTS"} {:fieldname "ReadIntervalTimeout"} ReadIntervalTimeout__SERIAL_TIMEOUTS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ReadQueue"} ReadQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestIntervalTimer"} ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1324
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestTotalTimer"} ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1164
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutConstant"} ReadTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutMultiplier"} ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Read_unnamed_tag_8"} {:fieldname "Read"} Read_unnamed_tag_8(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.ReceivedCount__SERIALPERF_STATS"} {:fieldname "ReceivedCount"} ReceivedCount__SERIALPERF_STATS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RegistryPath__CYZ_GLOBALS"} {:fieldname "RegistryPath"} RegistryPath__CYZ_GLOBALS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Reopen__CYZ_DEVICE_STATE"} {:fieldname "Reopen"} Reopen__CYZ_DEVICE_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ReturnStatusAfterFwEmpty__CYZ_DEVICE_EXTENSION"} {:fieldname "ReturnStatusAfterFwEmpty"} ReturnStatusAfterFwEmpty__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3376
}

function {:inline true} {:fieldmap "Mem_T.ReturnWriteStatus__CYZ_DEVICE_EXTENSION"} {:fieldname "ReturnWriteStatus"} ReturnWriteStatus__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3384
}

function {:inline true} {:fieldmap "Mem_T.RuntimeAddressSpace__CONFIG_DATA"} {:fieldname "RuntimeAddressSpace"} RuntimeAddressSpace__CONFIG_DATA(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.RuntimeAddressSpace__CYZ_DEVICE_EXTENSION"} {:fieldname "RuntimeAddressSpace"} RuntimeAddressSpace__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 548
}

function {:inline true} {:fieldmap "Mem_T.RuntimeLength__CONFIG_DATA"} {:fieldname "RuntimeLength"} RuntimeLength__CONFIG_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RuntimeLength__CYZ_DEVICE_EXTENSION"} {:fieldname "RuntimeLength"} RuntimeLength__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.Runtime__CYZ_DEVICE_EXTENSION"} {:fieldname "Runtime"} Runtime__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T.RxBufaddr__CYZ_DEVICE_EXTENSION"} {:fieldname "RxBufaddr"} RxBufaddr__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 248
}

function {:inline true} {:fieldmap "Mem_T.RxBufsize__CYZ_DEVICE_EXTENSION"} {:fieldname "RxBufsize"} RxBufsize__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T.RxFIFO__CONFIG_DATA"} {:fieldname "RxFIFO"} RxFIFO__CONFIG_DATA(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.RxFifoTrigger__CYZ_DEVICE_EXTENSION"} {:fieldname "RxFifoTrigger"} RxFifoTrigger__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 580
}

function {:inline true} {:fieldmap "Mem_T.RxFifo__SERIAL_BASIC_SETTINGS"} {:fieldname "RxFifo"} RxFifo__SERIAL_BASIC_SETTINGS(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SendWaitWake__CYZ_DEVICE_EXTENSION"} {:fieldname "SendWaitWake"} SendWaitWake__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3032
}

function {:inline true} {:fieldmap "Mem_T.SendXoffChar__CYZ_DEVICE_EXTENSION"} {:fieldname "SendXoffChar"} SendXoffChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3392
}

function {:inline true} {:fieldmap "Mem_T.SendXonChar__CYZ_DEVICE_EXTENSION"} {:fieldname "SendXonChar"} SendXonChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3388
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SerialCount"} SerialCount__CONFIGURATION_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SerialOverrunErrorCount__SERIALPERF_STATS"} {:fieldname "SerialOverrunErrorCount"} SerialOverrunErrorCount__SERIALPERF_STATS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ServiceMask__SERIAL_COMMPROP"} {:fieldname "ServiceMask"} ServiceMask__SERIAL_COMMPROP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SetFile_unnamed_tag_8"} {:fieldname "SetFile"} SetFile_unnamed_tag_8(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "SetWmiDataBlock"} SetWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataItem__WMILIB_CONTEXT"} {:fieldname "SetWmiDataItem"} SetWmiDataItem__WMILIB_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SettableBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableBaudRate"} SettableBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.SettableBaud__SERIAL_COMMPROP"} {:fieldname "SettableBaud"} SettableBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SettableDataBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableDataBits"} SettableDataBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.SettableData__SERIAL_COMMPROP"} {:fieldname "SettableData"} SettableData__SERIAL_COMMPROP(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SettableFlowControl__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableFlowControl"} SettableFlowControl__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.SettableParams__SERIAL_COMMPROP"} {:fieldname "SettableParams"} SettableParams__SERIAL_COMMPROP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SettableParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParityCheck"} SettableParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.SettableParity__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParity"} SettableParity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.SettableStopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableStopBits"} SettableStopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.SettableStopParity__SERIAL_COMMPROP"} {:fieldname "SettableStopParity"} SettableStopParity__SERIAL_COMMPROP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ShareDisposition__IO_RESOURCE_DESCRIPTOR"} {:fieldname "ShareDisposition"} ShareDisposition__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "ShortIntervalAmount"} ShortIntervalAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "ShouldBreakOnEntry"} ShouldBreakOnEntry__CYZ_REGISTRY_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SkipNaming"} SkipNaming__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3360
}

function {:inline true} {:fieldmap "Mem_T.SpecialChars__CYZ_DEVICE_EXTENSION"} {:fieldname "SpecialChars"} SpecialChars__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 460
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "StalledIrpQueue"} StalledIrpQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 2728
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "StartTimerLowerRTSDpc"} StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1044
}

function {:inline true} {:fieldmap "Mem_T.Start_unnamed_tag_42"} {:fieldname "Start"} Start_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_37"} {:fieldname "State"} State_unnamed_tag_37(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_LINE_CONTROL"} {:fieldname "StopBits"} StopBits__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "StopBits"} StopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.StringOffset__IO_ERROR_LOG_PACKET"} {:fieldname "StringOffset"} StringOffset__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Support16BitMode__SERIAL_WMI_COMM_DATA"} {:fieldname "Support16BitMode"} Support16BitMode__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.SupportDTRDSR__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportDTRDSR"} SupportDTRDSR__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportIntervalTimeouts"} SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.SupportParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportParityCheck"} SupportParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SupportRTSCTS__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportRTSCTS"} SupportRTSCTS__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.SupportXonXoff__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportXonXoff"} SupportXonXoff__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.SupportedBauds__CYZ_DEVICE_EXTENSION"} {:fieldname "SupportedBauds"} SupportedBauds__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 420
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "SymbolicLinkName"} SymbolicLinkName__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_3"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__CYZ_DEVICE_EXTENSION"} {:fieldname "SystemWake"} SystemWake__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3020
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.TXHolding__CYZ_DEVICE_EXTENSION"} {:fieldname "TXHolding"} TXHolding__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Timeout__SERIAL_XOFF_COUNTER"} {:fieldname "Timeout"} Timeout__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Timeouts__CYZ_DEVICE_EXTENSION"} {:fieldname "Timeouts"} Timeouts__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.TotalCharsQueued__CYZ_DEVICE_EXTENSION"} {:fieldname "TotalCharsQueued"} TotalCharsQueued__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalImmediateTimeoutDpc"} TotalImmediateTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 924
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalReadTimeoutDpc"} TotalReadTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 684
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalWriteTimeoutDpc"} TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 764
}

function {:inline true} {:fieldmap "Mem_T.TranslatedBoardMemory__CONFIG_DATA"} {:fieldname "TranslatedBoardMemory"} TranslatedBoardMemory__CONFIG_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.TranslatedRuntime__CONFIG_DATA"} {:fieldname "TranslatedRuntime"} TranslatedRuntime__CONFIG_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.TransmitImmediate__CYZ_DEVICE_EXTENSION"} {:fieldname "TransmitImmediate"} TransmitImmediate__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 540
}

function {:inline true} {:fieldmap "Mem_T.TransmittedCount__SERIALPERF_STATS"} {:fieldname "TransmittedCount"} TransmittedCount__SERIALPERF_STATS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.TxBufaddr__CYZ_DEVICE_EXTENSION"} {:fieldname "TxBufaddr"} TxBufaddr__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 244
}

function {:inline true} {:fieldmap "Mem_T.TxBufsize__CYZ_DEVICE_EXTENSION"} {:fieldname "TxBufsize"} TxBufsize__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 252
}

function {:inline true} {:fieldmap "Mem_T.TxFIFO__CONFIG_DATA"} {:fieldname "TxFIFO"} TxFIFO__CONFIG_DATA(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.TxFifoAmount__CYZ_DEVICE_EXTENSION"} {:fieldname "TxFifoAmount"} TxFifoAmount__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.TxFifo__SERIAL_BASIC_SETTINGS"} {:fieldname "TxFifo"} TxFifo__SERIAL_BASIC_SETTINGS(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Type3InputBuffer_unnamed_tag_20"} {:fieldname "Type3InputBuffer"} Type3InputBuffer_unnamed_tag_20(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Type__IO_RESOURCE_DESCRIPTOR"} {:fieldname "Type"} Type__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_26"} {:fieldname "Type"} Type_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_37"} {:fieldname "Type"} Type_unnamed_tag_37(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ValidDataMask__CYZ_DEVICE_EXTENSION"} {:fieldname "ValidDataMask"} ValidDataMask__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 572
}

function {:inline true} {:fieldmap "Mem_T.WaitForImmediate__SERIAL_STATUS"} {:fieldname "WaitForImmediate"} WaitForImmediate__SERIAL_STATUS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.WmiCommData__CYZ_DEVICE_EXTENSION"} {:fieldname "WmiCommData"} WmiCommData__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3084
}

function {:inline true} {:fieldmap "Mem_T.WmiFunctionControl__WMILIB_CONTEXT"} {:fieldname "WmiFunctionControl"} WmiFunctionControl__WMILIB_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "WmiIdentifier"} WmiIdentifier__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3072
}

function {:inline true} {:fieldmap "Mem_T.WmiLibInfo__CYZ_DEVICE_EXTENSION"} {:fieldname "WmiLibInfo"} WmiLibInfo__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3040
}

function {:inline true} {:fieldmap "Mem_T._SERIAL_WMI_PERF_DATA"} {:fieldname "WmiPerfData"} WmiPerfData__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 3208
}

function {:inline true} {:fieldmap "Mem_T.WordLength__SERIAL_LINE_CONTROL"} {:fieldname "WordLength"} WordLength__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "WriteComplete"} WriteComplete__CONFIG_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.WriteCurrentChar__CYZ_DEVICE_EXTENSION"} {:fieldname "WriteCurrentChar"} WriteCurrentChar__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.WriteLength__CYZ_DEVICE_EXTENSION"} {:fieldname "WriteLength"} WriteLength__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "WriteQueue"} WriteQueue__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 268
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "WriteRequestTotalTimer"} WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1484
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutConstant"} WriteTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutMultiplier"} WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Write_unnamed_tag_8"} {:fieldname "Write"} Write_unnamed_tag_8(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.XoffChar__SERIAL_CHARS"} {:fieldname "XoffChar"} XoffChar__SERIAL_CHARS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.XoffCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffCharacter"} XoffCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountCompleteDpc"} XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1004
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountTimeoutDpc"} XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 964
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "XoffCountTimer"} XoffCountTimer__CYZ_DEVICE_EXTENSION(x: int) : int
{
  x + 1804
}

function {:inline true} {:fieldmap "Mem_T.XoffLimit__SERIAL_HANDFLOW"} {:fieldname "XoffLimit"} XoffLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.XoffXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffXmitThreshold"} XoffXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.XonChar__SERIAL_CHARS"} {:fieldname "XonChar"} XonChar__SERIAL_CHARS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.XonCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XonCharacter"} XonCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.XonLimit__SERIAL_HANDFLOW"} {:fieldname "XonLimit"} XonLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.XonXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XonXmitThreshold"} XonXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.BOARD_CTRL"} {:fieldname "board_ctrl"} board_ctrl_ZFW_CTRL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.buf_ctrl_ZFW_CTRL"} {:fieldname "buf_ctrl"} buf_ctrl_ZFW_CTRL(x: int) : int
{
  x + 6208
}

function {:inline true} {:fieldmap "Mem_T.ch_ctrl_ZFW_CTRL"} {:fieldname "ch_ctrl"} ch_ctrl_ZFW_CTRL(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "pci_doorbell"} pci_doorbell_RUNTIME_9060(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.u__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.u__IO_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

const {:string ""} unique strConst__li2bpl7: int;

const {:string " The default interrupt read buffer size is: %d\n------  The XoffLimit is                         : %d\n------  The XonLimit is                          : %d\n------  The pt 8 size is                         : %d\n"} unique strConst__li2bpl53: int;

const {:string "%s%u"} unique strConst__li2bpl165: int;

const {:string "%x irp was already marked as cancelled\n"} unique strConst__li2bpl229: int;

const {:string "%x is a SETMASK irp\n"} unique strConst__li2bpl224: int;

const {:string "%x occurred prior to the wait - starting the\n------- completion code for %x\n"} unique strConst__li2bpl220: int;

const {:string "%x was the first irp processed by this\n------- invocation of startmask\n"} unique strConst__li2bpl225: int;

const {:string "%x will become the current wait irp\n"} unique strConst__li2bpl228: int;

const {:string "------- BusRelations Query\n"} unique strConst__li2bpl147: int;

const {:string "------- EjectionRelations Query\n"} unique strConst__li2bpl148: int;

const {:string "------- PowerRelations Query\n"} unique strConst__li2bpl149: int;

const {:string "------- RemovalRelations Query\n"} unique strConst__li2bpl150: int;

const {:string "------- TargetDeviceRelation Query\n"} unique strConst__li2bpl151: int;

const {:string "------- Unknown Query\n"} unique strConst__li2bpl146: int;

const {:string "<CyzDisableInterfaces\n"} unique strConst__li2bpl36: int;

const {:string "<CyzFlush (1) %X\n"} unique strConst__li2bpl5: int;

const {:string "<CyzFlush (2) %X\n"} unique strConst__li2bpl6: int;

const {:string "<CyzFlush (3) %X\n"} unique strConst__li2bpl4: int;

const {:string "<CyzGetNextWrite\n"} unique strConst__li2bpl210: int;

const {:string "<CyzGetRegistryKeyValue %X\n"} unique strConst__li2bpl12: int;

const {:string "<CyzInitMultiPort (1) %X\n"} unique strConst__li2bpl55: int;

const {:string "<CyzInitMultiPort (3) %X\n"} unique strConst__li2bpl56: int;

const {:string "<CyzKillPendingIrps\n"} unique strConst__li2bpl37: int;

const {:string "<CyzRead (1) %X\n"} unique strConst__li2bpl235: int;

const {:string "<CyzRead (2) %X\n"} unique strConst__li2bpl236: int;

const {:string "<CyzRead (3) %X\n"} unique strConst__li2bpl237: int;

const {:string "<CyzRead (4) %X\n"} unique strConst__li2bpl238: int;

const {:string "<CyzReleaseResources\n"} unique strConst__li2bpl39: int;

const {:string "<CyzRemoveDevObj %X\n"} unique strConst__li2bpl23: int;

const {:string "<CyzStartImmediate\n"} unique strConst__li2bpl73: int;

const {:string "<CyzStartRead %X\n"} unique strConst__li2bpl233: int;

const {:string "<CyzStartWrite %X\n"} unique strConst__li2bpl207: int;

const {:string "<CyzUnstallIrps\n"} unique strConst__li2bpl206: int;

const {:string "<CyzWrite (1) %X\n"} unique strConst__li2bpl211: int;

const {:string "<CyzWrite (2) %X\n"} unique strConst__li2bpl212: int;

const {:string "<CyzWrite (3) %X\n"} unique strConst__li2bpl213: int;

const {:string "<CyzWrite (4) %X\n"} unique strConst__li2bpl214: int;

const {:string ">CyzDisableInterfaces(%X, %s)\n"} unique strConst__li2bpl35: int;

const {:string ">CyzFindInitController(%X, %X)\n"} unique strConst__li2bpl31: int;

const {:string ">CyzFlush(%X, %X)\n"} unique strConst__li2bpl2: int;

const {:string ">CyzGetNextWrite(XXX)\n"} unique strConst__li2bpl209: int;

const {:string ">CyzGetRegistryKeyValue(XXX)\n"} unique strConst__li2bpl11: int;

const {:string ">CyzInitMultiPort(%X, %X, %X)\n"} unique strConst__li2bpl54: int;

const {:string ">CyzKillPendingIrps(%X)\n"} unique strConst__li2bpl38: int;

const {:string ">CyzRead(%X, %X)\n"} unique strConst__li2bpl239: int;

const {:string ">CyzReleaseResources(%X)\n"} unique strConst__li2bpl41: int;

const {:string ">CyzRemoveDevObj(%X)\n"} unique strConst__li2bpl22: int;

const {:string ">CyzStartImmediate(%X)\n"} unique strConst__li2bpl72: int;

const {:string ">CyzStartRead(%X)\n"} unique strConst__li2bpl234: int;

const {:string ">CyzStartWrite(%X)\n"} unique strConst__li2bpl208: int;

const {:string ">CyzUnstallIrps(%X)\n"} unique strConst__li2bpl204: int;

const {:string ">CyzWrite(%X, %X)\n"} unique strConst__li2bpl215: int;

const {:string "Aha! It is a first multi\n"} unique strConst__li2bpl27: int;

const {:string "Aha! It is a multiport node\n"} unique strConst__li2bpl28: int;

const {:string "Already in requested power state\n"} unique strConst__li2bpl65: int;

const {:string "Attempting to init %wZ\n------- Runtime Memory is %x\n------- Board Memory is %x\n------- BusNumber is %d\n------- BusType is %d\n------- Runtime AddressSpace is %d\n------- Board AddressSpace is %d\n"} unique strConst__li2bpl32: int;

const {:string "Board Memory address: %x\n"} unique strConst__li2bpl92: int;

const {:string "Bogus Runtime address %x\n"} unique strConst__li2bpl99: int;

const {:string "Bogus board address %x\n"} unique strConst__li2bpl98: int;

const {:string "BreakOnEntry"} unique strConst__li2bpl8: int;

const {:string "CLEAN: removing multiport isr ext\n"} unique strConst__li2bpl21: int;

const {:string "Can't filter NULL resources!\n"} unique strConst__li2bpl143: int;

const {:string "Canceling wait for irp %x\n"} unique strConst__li2bpl231: int;

const {:string "Cleaning up failed start\n"} unique strConst__li2bpl120: int;

const {:string "Clearing DTR for Port%d Pci%d\n"} unique strConst__li2bpl191: int;

const {:string "Clearing RTS for Port%d Pci%d\n"} unique strConst__li2bpl190: int;

const {:string "Clearing rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl197: int;

const {:string "Close open count bad for: 0x%x\n"} unique strConst__li2bpl76: int;

const {:string "Close prologue failed for: %x\n"} unique strConst__li2bpl75: int;

const {:string "Com Board AddressSpace: %x\n"} unique strConst__li2bpl96: int;

const {:string "Com InterfaceType: %x\n"} unique strConst__li2bpl97: int;

const {:string "Com Port BusNumber: %x\n"} unique strConst__li2bpl94: int;

const {:string "Com Port Index: %x\n"} unique strConst__li2bpl93: int;

const {:string "Com Runtime AddressSpace: %x\n"} unique strConst__li2bpl95: int;

const {:string "Complete Irp: %X\n"} unique strConst__li2bpl3: int;

const {:string "Configuration error for %wZ\n------- Same multiport - different Runtime addresses\n"} unique strConst__li2bpl29: int;

const {:string "Could not map Board memory BufCtrl for %wZ\n"} unique strConst__li2bpl48: int;

const {:string "Could not map Board memory ChCtrl for %wZ\n"} unique strConst__li2bpl49: int;

const {:string "Could not map Board memory IntQueue for %wZ\n"} unique strConst__li2bpl45: int;

const {:string "Could not map Board memory RxBuf for %wZ\n"} unique strConst__li2bpl46: int;

const {:string "Could not map Board memory TxBuf for %wZ\n"} unique strConst__li2bpl47: int;

const {:string "Could not map Board memory for device registers for %wZ\n"} unique strConst__li2bpl51: int;

const {:string "Could not map BoardCtrl for %wZ\n"} unique strConst__li2bpl50: int;

const {:string "Could not map Runtime memory for device registers for %wZ\n"} unique strConst__li2bpl52: int;

const {:string "Couldn't allocate memory for DeviceName\n"} unique strConst__li2bpl114: int;

const {:string "Couldn't allocate memory for Dos name\n"} unique strConst__li2bpl182: int;

const {:string "Couldn't allocate memory for WMI name\n"} unique strConst__li2bpl184: int;

const {:string "Couldn't allocate memory for buffer\n"} unique strConst__li2bpl186: int;

const {:string "Couldn't allocate memory for device name\n"} unique strConst__li2bpl116: int;

const {:string "Couldn't allocate memory for symbolic link name\n"} unique strConst__li2bpl183: int;

const {:string "Couldn't allocate memory for the\n------  user configuration record\n"} unique strConst__li2bpl124: int;

const {:string "Couldn't create the device map entry\n------- for port %wZ\n"} unique strConst__li2bpl180: int;

const {:string "Couldn't create the symbolic link\nfor port %wZ\n"} unique strConst__li2bpl181: int;

const {:string "Couldn't delete value entry %wZ\n"} unique strConst__li2bpl129: int;

const {:string "Couldn't register class association\nfor port %wZ\n"} unique strConst__li2bpl178: int;

const {:string "Couldn't set class association for port %wZ\n"} unique strConst__li2bpl179: int;

const {:string "Count: %x  Addr: 0x%x\n"} unique strConst__li2bpl77: int;

const {:string "Cyclades-Z\\Port"} unique strConst__li2bpl107: int;

const {:string "CyzAddDevice - error creating new devobj [%#08lx]\n"} unique strConst__li2bpl103: int;

const {:string "CyzAddDevice: Cannot allocate memory for NtName\n"} unique strConst__li2bpl112: int;

const {:string "CyzAddDevice: Create device failed - %x \n"} unique strConst__li2bpl115: int;

const {:string "CyzAddDevice: Enumeration request, returning NO_MORE_ENTRIES\n"} unique strConst__li2bpl104: int;

const {:string "CyzCreateDevObj Error, Cleaning up\n"} unique strConst__li2bpl113: int;

const {:string "CyzCreateDevObj: Bad HardwareID: %ws\n"} unique strConst__li2bpl118: int;

const {:string "CyzCreateDevObj: IoGetDeviceProperty BusNumber failed (%x)\n"} unique strConst__li2bpl119: int;

const {:string "CyzCreateDevObj: IoGetDeviceProperty HardwareID failed (%x)\n"} unique strConst__li2bpl117: int;

const {:string "CyzGetRegistryKeyValue FirmwareVersion failed - %x\n"} unique strConst__li2bpl101: int;

const {:string "CyzGetRegistryKeyValue PortResources failed - %x\n"} unique strConst__li2bpl170: int;

const {:string "CyzGetRegistryKeyValue PortResourcesTr failed - %xn"} unique strConst__li2bpl171: int;

const {:string "CyzPort"} unique strConst__li2bpl110: int;

const {:string "CyzRelinquishPowerPolicy"} unique strConst__li2bpl125: int;

const {:string "CyzSkipExternalNaming"} unique strConst__li2bpl172: int;

const {:string "DPC's drained: %x\n"} unique strConst__li2bpl79: int;

const {:string "DebugLevel"} unique strConst__li2bpl9: int;

const {:string "Deleting Link %wZ\n"} unique strConst__li2bpl127: int;

const {:string "DevicePowerState\n"} unique strConst__li2bpl64: int;

const {:string "Dispatch entry for: %x\n"} unique strConst__li2bpl1: int;

const {:string "DoesPortExist test failed for %wZ\n"} unique strConst__li2bpl44: int;

const {:string "DosDevices"} unique strConst__li2bpl176: int;

const {:string "DosName is %wZ\n"} unique strConst__li2bpl177: int;

const {:string "Draining DPC's: %x\n"} unique strConst__li2bpl80: int;

const {:string "Enter CyzAddDevice with PPdo 0x%x\n"} unique strConst__li2bpl102: int;

const {:string "Enter CyzCreateDevObj\n"} unique strConst__li2bpl106: int;

const {:string "Entering CyzSaveDeviceState\n"} unique strConst__li2bpl68: int;

const {:string "Error in config record for %wZ\n------  Runtime memory wraps around Board memory\n"} unique strConst__li2bpl26: int;

const {:string "Error in config record for %wZ\n------  Runtime memory wraps around physical memory\n"} unique strConst__li2bpl24: int;

const {:string "Error in config record for %wZ\n------  board memory wraps around physical memory\n"} unique strConst__li2bpl25: int;

const {:string "External Naming Failed - Status %x\n"} unique strConst__li2bpl123: int;

const {:string "FALSE"} unique strConst__li2bpl33: int;

const {:string "FirmwareVersion"} unique strConst__li2bpl86: int;

const {:string "Getting PortName/Identifier failed - %x\n"} unique strConst__li2bpl185: int;

const {:string "Going to power state D0\n"} unique strConst__li2bpl67: int;

const {:string "Going to power state D3\n"} unique strConst__li2bpl66: int;

const {:string "Got IRP_MN_CANCEL_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl130: int;

const {:string "Got IRP_MN_CANCEL_STOP_DEVICE Irp\n"} unique strConst__li2bpl131: int;

const {:string "Got IRP_MN_EJECT Irp\n"} unique strConst__li2bpl137: int;

const {:string "Got IRP_MN_FILTER_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl158: int;

const {:string "Got IRP_MN_POWER_SEQUENCE Irp\n"} unique strConst__li2bpl59: int;

const {:string "Got IRP_MN_QUERY_DEVICE_CAPABILITIES IRP\n"} unique strConst__li2bpl144: int;

const {:string "Got IRP_MN_QUERY_DEVICE_RELATIONS Irp\n"} unique strConst__li2bpl132: int;

const {:string "Got IRP_MN_QUERY_ID Irp\n"} unique strConst__li2bpl164: int;

const {:string "Got IRP_MN_QUERY_INTERFACE Irp\n"} unique strConst__li2bpl133: int;

const {:string "Got IRP_MN_QUERY_POWER Irp\n"} unique strConst__li2bpl61: int;

const {:string "Got IRP_MN_QUERY_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl155: int;

const {:string "Got IRP_MN_QUERY_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl134: int;

const {:string "Got IRP_MN_QUERY_STOP_DEVICE Irp\n"} unique strConst__li2bpl152: int;

const {:string "Got IRP_MN_READ_CONFIG Irp\n"} unique strConst__li2bpl135: int;

const {:string "Got IRP_MN_REMOVE_DEVICE Irp\n"} unique strConst__li2bpl154: int;

const {:string "Got IRP_MN_SET_LOCK Irp\n"} unique strConst__li2bpl138: int;

const {:string "Got IRP_MN_SET_POWER Irp\n"} unique strConst__li2bpl60: int;

const {:string "Got IRP_MN_START_DEVICE Irp\n"} unique strConst__li2bpl156: int;

const {:string "Got IRP_MN_STOP_DEVICE Irp\n"} unique strConst__li2bpl153: int;

const {:string "Got IRP_MN_SURPRISE_REMOVAL Irp\n"} unique strConst__li2bpl139: int;

const {:string "Got IRP_MN_WAIT_WAKE Irp\n"} unique strConst__li2bpl58: int;

const {:string "Got IRP_MN_WRITE_CONFIG Irp\n"} unique strConst__li2bpl136: int;

const {:string "ID is sole ID\n"} unique strConst__li2bpl141: int;

const {:string "Identifier"} unique strConst__li2bpl174: int;

const {:string "In CyzCancelWait\n"} unique strConst__li2bpl232: int;

const {:string "In CyzClose\n"} unique strConst__li2bpl78: int;

const {:string "In CyzCreateOpen\n"} unique strConst__li2bpl74: int;

const {:string "In CyzFinishOldWait\n"} unique strConst__li2bpl217: int;

const {:string "In CyzGiveWaitToIsr\n"} unique strConst__li2bpl221: int;

const {:string "In CyzGotoPowerState\n"} unique strConst__li2bpl70: int;

const {:string "In CyzSetPowerD3\n"} unique strConst__li2bpl57: int;

const {:string "In CyzStartMask\n"} unique strConst__li2bpl230: int;

const {:string "In CyzUndoExternalNaming for extension: %x of port %wZ\n"} unique strConst__li2bpl126: int;

const {:string "In CyzUnload\n"} unique strConst__li2bpl20: int;

const {:string "In Ioctl processing for set mask\n"} unique strConst__li2bpl16: int;

const {:string "In Ioctl processing for wait mask\n"} unique strConst__li2bpl13: int;

const {:string "Incompatible firmware\n"} unique strConst__li2bpl88: int;

const {:string "Initializing for configuration record of %wZ\n"} unique strConst__li2bpl43: int;

const {:string "Invalid Bus type %x\n"} unique strConst__li2bpl90: int;

const {:string "Invalid size fo the buffer %d\n"} unique strConst__li2bpl17: int;

const {:string "Invalid size for the buffer %d\n"} unique strConst__li2bpl15: int;

const {:string "IoOpenDeviceRegistryKey failed - %x \n"} unique strConst__li2bpl84: int;

const {:string "Leave CyzAddDevice\n"} unique strConst__li2bpl105: int;

const {:string "Leave CyzCreateDevObj\n"} unique strConst__li2bpl111: int;

const {:string "Leaving CyzGotoPowerState\n"} unique strConst__li2bpl71: int;

const {:string "Leaving CyzSaveDeviceState\n"} unique strConst__li2bpl69: int;

const {:string "List has %x lists (including alternatives)\n"} unique strConst__li2bpl159: int;

const {:string "List has %x resources in it\n"} unique strConst__li2bpl160: int;

const {:string "Mapping power capabilities\n"} unique strConst__li2bpl145: int;

const {:string "Matched to %x\n"} unique strConst__li2bpl30: int;

const {:string "No events occured prior to the wait call\n"} unique strConst__li2bpl219: int;

const {:string "Not doing external naming -- state is %x\n"} unique strConst__li2bpl122: int;

const {:string "Pci"} unique strConst__li2bpl109: int;

const {:string "Perhaps another mask irp was found in the queue\n------- %x/%x <- values should be the same\n"} unique strConst__li2bpl226: int;

const {:string "PermitShare"} unique strConst__li2bpl10: int;

const {:string "Port index too large %x\n"} unique strConst__li2bpl89: int;

const {:string "PortIndex"} unique strConst__li2bpl85: int;

const {:string "PortName"} unique strConst__li2bpl173: int;

const {:string "PortResources"} unique strConst__li2bpl168: int;

const {:string "PortResourcesTr"} unique strConst__li2bpl169: int;

const {:string "Processing DTR flow for Port%d Pci%d\n"} unique strConst__li2bpl192: int;

const {:string "Processing RTS flow\n"} unique strConst__li2bpl194: int;

const {:string "Read name %wZ\n"} unique strConst__li2bpl187: int;

const {:string "Release - freeing multi context\n"} unique strConst__li2bpl40: int;

const {:string "Removing DTR block on reception for Port%d Pci%d\n"} unique strConst__li2bpl193: int;

const {:string "Removing dtr block of reception for Port%d Pci%d\n"} unique strConst__li2bpl200: int;

const {:string "Removing rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl195: int;

const {:string "Runtime Memory address: %x\n"} unique strConst__li2bpl100: int;

const {:string "SERIALCOMM"} unique strConst__li2bpl128: int;

const {:string "STARTMASK - CurrentMaskIrp: %x\n"} unique strConst__li2bpl223: int;

const {:string "Set mask location of %x, in irp %x, with system buffer of %x\n"} unique strConst__li2bpl218: int;

const {:string "Setting DTR block on reception for Port%d Pci%d\n"} unique strConst__li2bpl199: int;

const {:string "Setting DTR for Port%d Pci%d\n"} unique strConst__li2bpl202: int;

const {:string "Setting RTS for Port%d Pci%d\n"} unique strConst__li2bpl203: int;

const {:string "Setting rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl196: int;

const {:string "Sharing Board Memory for device %x\n"} unique strConst__li2bpl163: int;

const {:string "Sharing Runtime Memory for device %x\n"} unique strConst__li2bpl162: int;

const {:string "Sharing interrupt for device %x\n"} unique strConst__li2bpl161: int;

const {:string "Starting or queuing set mask irp %x\n"} unique strConst__li2bpl18: int;

const {:string "Starting or queuing wait mask irp%x\n"} unique strConst__li2bpl14: int;

const {:string "SystemPowerState\n"} unique strConst__li2bpl63: int;

const {:string "TOGGLE Clearing rts block of reception for Port%d Pci%d\n"} unique strConst__li2bpl198: int;

const {:string "TR resource pointer is %x\n"} unique strConst__li2bpl83: int;

const {:string "TRUE"} unique strConst__li2bpl34: int;

const {:string "The isr owns the irp %x, mask location is %x\n------- and system buffer is %x\n"} unique strConst__li2bpl222: int;

const {:string "The isr still owns the irp %x, mask location is %x\n------- and system buffer is %x\n"} unique strConst__li2bpl216: int;

const {:string "The number of bytes in the extension is: %d\n"} unique strConst__li2bpl42: int;

const {:string "There aren't that many of those\nbusses on this system,%x\n"} unique strConst__li2bpl91: int;

const {:string "UNKNOWN PowerState\n"} unique strConst__li2bpl62: int;

const {:string "Unknown mask %x\n"} unique strConst__li2bpl19: int;

const {:string "Unstalling Irp 0x%x with 0x%x\n"} unique strConst__li2bpl205: int;

const {:string "WaitIrp is invalid\n------- IsrWaitMask: %x\n------- CurrentWaitIrp: %x\n"} unique strConst__li2bpl227: int;

const {:string "Warning: Driver may have queued the IRP without marking it as pending inside the locked state."} unique strConst__li2bpl189: int;

const {:string "We should not have Port resource\n"} unique strConst__li2bpl142: int;

const {:string "WriteComplete"} unique strConst__li2bpl87: int;

const {:string "\\"} unique strConst__li2bpl175: int;

const {:string "\\Device\\"} unique strConst__li2bpl108: int;

const {:string "callee"} unique strConst__li2bpl0: int;

const {:string "entering CyzGetPortInfo\n"} unique strConst__li2bpl81: int;

const {:string "entering CyzStartDevice\n"} unique strConst__li2bpl166: int;

const {:string "error with IoCallDriver %x\n"} unique strConst__li2bpl167: int;

const {:string "failing; device open\n"} unique strConst__li2bpl157: int;

const {:string "for device %x\n"} unique strConst__li2bpl140: int;

const {:string "halt"} unique strConst__li2bpl188: int;

const {:string "leaving CyzFinishStartDevice\n"} unique strConst__li2bpl121: int;

const {:string "removing dtr block of reception for Port%d Pci%d\n"} unique strConst__li2bpl201: int;

const {:string "resource pointer is %x\n"} unique strConst__li2bpl82: int;

const {:allocated} li2bplFunctionConstant113: int;

axiom li2bplFunctionConstant113 == 113;

const {:allocated} li2bplFunctionConstant130: int;

axiom li2bplFunctionConstant130 == 130;

const {:allocated} li2bplFunctionConstant131: int;

axiom li2bplFunctionConstant131 == 131;

const {:allocated} li2bplFunctionConstant144: int;

axiom li2bplFunctionConstant144 == 144;

const {:allocated} li2bplFunctionConstant149: int;

axiom li2bplFunctionConstant149 == 149;

const {:allocated} li2bplFunctionConstant151: int;

axiom li2bplFunctionConstant151 == 151;

const {:allocated} li2bplFunctionConstant161: int;

axiom li2bplFunctionConstant161 == 161;

const {:allocated} li2bplFunctionConstant177: int;

axiom li2bplFunctionConstant177 == 177;

const {:allocated} li2bplFunctionConstant178: int;

axiom li2bplFunctionConstant178 == 178;

const {:allocated} li2bplFunctionConstant179: int;

axiom li2bplFunctionConstant179 == 179;

const {:allocated} li2bplFunctionConstant182: int;

axiom li2bplFunctionConstant182 == 182;

const {:allocated} li2bplFunctionConstant193: int;

axiom li2bplFunctionConstant193 == 193;

const {:allocated} li2bplFunctionConstant194: int;

axiom li2bplFunctionConstant194 == 194;

const {:allocated} li2bplFunctionConstant195: int;

axiom li2bplFunctionConstant195 == 195;

const {:allocated} li2bplFunctionConstant196: int;

axiom li2bplFunctionConstant196 == 196;

const {:allocated} li2bplFunctionConstant197: int;

axiom li2bplFunctionConstant197 == 197;

const {:allocated} li2bplFunctionConstant198: int;

axiom li2bplFunctionConstant198 == 198;

const {:allocated} li2bplFunctionConstant199: int;

axiom li2bplFunctionConstant199 == 199;

const {:allocated} li2bplFunctionConstant202: int;

axiom li2bplFunctionConstant202 == 202;

const {:allocated} li2bplFunctionConstant203: int;

axiom li2bplFunctionConstant203 == 203;

const {:allocated} li2bplFunctionConstant204: int;

axiom li2bplFunctionConstant204 == 204;

const {:allocated} li2bplFunctionConstant205: int;

axiom li2bplFunctionConstant205 == 205;

const {:allocated} li2bplFunctionConstant219: int;

axiom li2bplFunctionConstant219 == 219;

const {:allocated} li2bplFunctionConstant222: int;

axiom li2bplFunctionConstant222 == 222;

const {:allocated} li2bplFunctionConstant223: int;

axiom li2bplFunctionConstant223 == 223;

const {:allocated} li2bplFunctionConstant227: int;

axiom li2bplFunctionConstant227 == 227;

const {:allocated} li2bplFunctionConstant228: int;

axiom li2bplFunctionConstant228 == 228;

const {:allocated} li2bplFunctionConstant229: int;

axiom li2bplFunctionConstant229 == 229;

const {:allocated} li2bplFunctionConstant230: int;

axiom li2bplFunctionConstant230 == 230;

const {:allocated} li2bplFunctionConstant232: int;

axiom li2bplFunctionConstant232 == 232;

const {:allocated} li2bplFunctionConstant262: int;

axiom li2bplFunctionConstant262 == 262;

const {:allocated} li2bplFunctionConstant280: int;

axiom li2bplFunctionConstant280 == 280;

const {:allocated} li2bplFunctionConstant284: int;

axiom li2bplFunctionConstant284 == 284;

const {:allocated} li2bplFunctionConstant285: int;

axiom li2bplFunctionConstant285 == 285;

const {:allocated} li2bplFunctionConstant286: int;

axiom li2bplFunctionConstant286 == 286;

const {:allocated} li2bplFunctionConstant290: int;

axiom li2bplFunctionConstant290 == 290;

const {:allocated} li2bplFunctionConstant312: int;

axiom li2bplFunctionConstant312 == 312;

const {:allocated} li2bplFunctionConstant313: int;

axiom li2bplFunctionConstant313 == 313;

const {:allocated} li2bplFunctionConstant314: int;

axiom li2bplFunctionConstant314 == 314;

const {:allocated} li2bplFunctionConstant315: int;

axiom li2bplFunctionConstant315 == 315;

const {:allocated} li2bplFunctionConstant316: int;

axiom li2bplFunctionConstant316 == 316;

const {:allocated} li2bplFunctionConstant330: int;

axiom li2bplFunctionConstant330 == 330;

const {:allocated} li2bplFunctionConstant331: int;

axiom li2bplFunctionConstant331 == 331;

const {:allocated} li2bplFunctionConstant332: int;

axiom li2bplFunctionConstant332 == 332;

const {:allocated} li2bplFunctionConstant333: int;

axiom li2bplFunctionConstant333 == 333;

const {:allocated} li2bplFunctionConstant334: int;

axiom li2bplFunctionConstant334 == 334;

const {:allocated} li2bplFunctionConstant335: int;

axiom li2bplFunctionConstant335 == 335;

const {:allocated} li2bplFunctionConstant336: int;

axiom li2bplFunctionConstant336 == 336;

const {:allocated} li2bplFunctionConstant337: int;

axiom li2bplFunctionConstant337 == 337;

const {:allocated} li2bplFunctionConstant338: int;

axiom li2bplFunctionConstant338 == 338;

const {:allocated} li2bplFunctionConstant339: int;

axiom li2bplFunctionConstant339 == 339;

const {:allocated} li2bplFunctionConstant347: int;

axiom li2bplFunctionConstant347 == 347;

const {:allocated} li2bplFunctionConstant348: int;

axiom li2bplFunctionConstant348 == 348;

const {:allocated} li2bplFunctionConstant349: int;

axiom li2bplFunctionConstant349 == 349;

const {:allocated} li2bplFunctionConstant350: int;

axiom li2bplFunctionConstant350 == 350;

const {:allocated} li2bplFunctionConstant351: int;

axiom li2bplFunctionConstant351 == 351;

const {:allocated} li2bplFunctionConstant352: int;

axiom li2bplFunctionConstant352 == 352;

const {:allocated} li2bplFunctionConstant380: int;

axiom li2bplFunctionConstant380 == 380;

const {:allocated} li2bplFunctionConstant381: int;

axiom li2bplFunctionConstant381 == 381;

const {:allocated} li2bplFunctionConstant456: int;

axiom li2bplFunctionConstant456 == 456;

const {:allocated} li2bplFunctionConstant457: int;

axiom li2bplFunctionConstant457 == 457;

const {:allocated} li2bplFunctionConstant513: int;

axiom li2bplFunctionConstant513 == 513;

const {:allocated} li2bplFunctionConstant515: int;

axiom li2bplFunctionConstant515 == 515;

const {:allocated} li2bplFunctionConstant518: int;

axiom li2bplFunctionConstant518 == 518;

implementation {:origName "CyzPutChar"} CyzPutChar#0(actual_Extension_57: int, actual_CharToPut: int)
{
  var {:pointer} Tmp_1055: int;
  var {:pointer} sdv_838: int;
  var {:pointer} Tmp_1057: int;
  var {:pointer} Tmp_1059: int;
  var {:scalar} Tmp_1060: int;
  var {:pointer} Tmp_1061: int;
  var {:pointer} Tmp_1062: int;
  var {:pointer} Tmp_1063: int;
  var {:pointer} Tmp_1064: int;
  var {:pointer} Tmp_1065: int;
  var {:scalar} Tmp_1066: int;
  var {:pointer} Tmp_1067: int;
  var {:pointer} Extension_57: int;
  var {:scalar} CharToPut: int;
  var vslice_dummy_var_766: int;
  var vslice_dummy_var_767: int;
  var vslice_dummy_var_768: int;
  var vslice_dummy_var_769: int;
  var vslice_dummy_var_770: int;
  var vslice_dummy_var_771: int;
  var vslice_dummy_var_772: int;
  var vslice_dummy_var_223: int;

  anon0:
    call {:si_unique_call 2776} vslice_dummy_var_766 := __HAVOC_malloc(4);
    Extension_57 := actual_Extension_57;
    CharToPut := actual_CharToPut;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume false;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    return;

  anon47_Then:
    goto L4;

  L4:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1061;
    assume {:nonnull} Tmp_1061 != 0;
    assume Tmp_1061 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1065;
    assume {:nonnull} Tmp_1065 != 0;
    assume Tmp_1065 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2777} vslice_dummy_var_772 := CyzInsertQueueDpc(XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, Extension_57);
    goto L10;

  L10:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1067;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc vslice_dummy_var_223;
    call {:si_unique_call 2778} sdv_838 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_223);
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1063;
    assume {:nonnull} Tmp_1063 != 0;
    assume Tmp_1063 > 0;
    assume {:nonnull} sdv_838 != 0;
    assume sdv_838 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2779} vslice_dummy_var_768 := CyzInsertQueueDpc(CompleteReadDpc__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, Extension_57);
    goto L1;

  L1:
    return;

  anon64_Then:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto L1;

  anon50_Then:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1060;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} Tmp_1060 == 2;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2780} vslice_dummy_var_771 := CyzClrDTR(Extension_57);
    goto L36;

  L36:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1066;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Tmp_1066 == 128;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2781} vslice_dummy_var_770 := CyzClrRTS(Extension_57);
    goto L44;

  L44:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2782} CyzProdXonXoff(Extension_57, 0);
    goto L51;

  L51:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1055;
    assume {:nonnull} Tmp_1055 != 0;
    assume Tmp_1055 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1059;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Tmp_1059 != 0;
    assume Tmp_1059 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1057;
    assume {:nonnull} Tmp_1057 != 0;
    assume Tmp_1057 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2783} vslice_dummy_var_769 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, Extension_57);
    goto L62;

  L62:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto L1;

  anon59_Then:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto L1;

  anon68_Then:
    goto L62;

  anon60_Then:
    goto L62;

  anon67_Then:
    goto L62;

  anon56_Then:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1062;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Tmp_1062 != 0;
    assume Tmp_1062 > 0;
    goto L78;

  L78:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2784} vslice_dummy_var_767 := CyzInsertQueueDpc(CommErrorDpc__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, Extension_57);
    goto L1;

  anon61_Then:
    goto L1;

  anon62_Then:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1064;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Tmp_1064 != 0;
    assume Tmp_1064 > 0;
    goto L78;

  anon69_Then:
    goto L78;

  anon58_Then:
    goto L51;

  anon57_Then:
    goto L51;

  anon53_Then:
    goto L51;

  anon55_Then:
    goto L44;

  anon54_Then:
    goto L44;

  anon66_Then:
    assume {:partition} Tmp_1066 != 128;
    goto L44;

  anon52_Then:
    goto L36;

  anon51_Then:
    goto L36;

  anon65_Then:
    assume {:partition} Tmp_1060 != 2;
    goto L36;

  anon63_Then:
    goto L10;

  anon48_Then:
    goto L10;
}



procedure {:origName "CyzPutChar"} CyzPutChar#0(actual_Extension_57: int, actual_CharToPut: int);
  modifies alloc, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzPutChar"} CyzPutChar#1(actual_Extension_57: int, actual_CharToPut: int)
{
  var {:pointer} Tmp_1055: int;
  var {:pointer} sdv_838: int;
  var {:pointer} Tmp_1057: int;
  var {:pointer} Tmp_1059: int;
  var {:scalar} Tmp_1060: int;
  var {:pointer} Tmp_1061: int;
  var {:pointer} Tmp_1062: int;
  var {:pointer} Tmp_1063: int;
  var {:pointer} Tmp_1064: int;
  var {:pointer} Tmp_1065: int;
  var {:scalar} Tmp_1066: int;
  var {:pointer} Tmp_1067: int;
  var {:pointer} Extension_57: int;
  var {:scalar} CharToPut: int;
  var vslice_dummy_var_773: int;
  var vslice_dummy_var_774: int;
  var vslice_dummy_var_775: int;
  var vslice_dummy_var_776: int;
  var vslice_dummy_var_777: int;
  var vslice_dummy_var_778: int;
  var vslice_dummy_var_779: int;
  var vslice_dummy_var_780: int;
  var vslice_dummy_var_224: int;

  anon0:
    call {:si_unique_call 2785} vslice_dummy_var_773 := __HAVOC_malloc(4);
    Extension_57 := actual_Extension_57;
    CharToPut := actual_CharToPut;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    call {:si_unique_call 2786} vslice_dummy_var_774 := CyzHandleModemUpdate#0(Extension_57, 0, 0);
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    goto L4;

  L4:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1061;
    assume {:nonnull} Tmp_1061 != 0;
    assume Tmp_1061 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1065;
    assume {:nonnull} Tmp_1065 != 0;
    assume Tmp_1065 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2787} vslice_dummy_var_780 := CyzInsertQueueDpc(XoffCountCompleteDpc__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, Extension_57);
    goto L10;

  L10:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1067;
    assume {:nonnull} Tmp_1067 != 0;
    assume Tmp_1067 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc vslice_dummy_var_224;
    call {:si_unique_call 2788} sdv_838 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_224);
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1063;
    assume {:nonnull} Tmp_1063 != 0;
    assume Tmp_1063 > 0;
    assume {:nonnull} sdv_838 != 0;
    assume sdv_838 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2789} vslice_dummy_var_776 := CyzInsertQueueDpc(CompleteReadDpc__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, Extension_57);
    goto L1;

  L1:
    return;

  anon64_Then:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto L1;

  anon50_Then:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1060;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} Tmp_1060 == 2;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2790} vslice_dummy_var_779 := CyzClrDTR(Extension_57);
    goto L36;

  L36:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1066;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} Tmp_1066 == 128;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2791} vslice_dummy_var_778 := CyzClrRTS(Extension_57);
    goto L44;

  L44:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2792} CyzProdXonXoff(Extension_57, 0);
    goto L51;

  L51:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1055;
    assume {:nonnull} Tmp_1055 != 0;
    assume Tmp_1055 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1059;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Tmp_1059 != 0;
    assume Tmp_1059 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1057;
    assume {:nonnull} Tmp_1057 != 0;
    assume Tmp_1057 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2793} vslice_dummy_var_777 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, Extension_57);
    goto L62;

  L62:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto L1;

  anon59_Then:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto L1;

  anon68_Then:
    goto L62;

  anon60_Then:
    goto L62;

  anon67_Then:
    goto L62;

  anon56_Then:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1062;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Tmp_1062 != 0;
    assume Tmp_1062 > 0;
    goto L78;

  L78:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    call {:si_unique_call 2794} vslice_dummy_var_775 := CyzInsertQueueDpc(CommErrorDpc__CYZ_DEVICE_EXTENSION(Extension_57), 0, 0, Extension_57);
    goto L1;

  anon61_Then:
    goto L1;

  anon62_Then:
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    havoc Tmp_1064;
    assume {:nonnull} Extension_57 != 0;
    assume Extension_57 > 0;
    assume {:nonnull} Tmp_1064 != 0;
    assume Tmp_1064 > 0;
    goto L78;

  anon69_Then:
    goto L78;

  anon58_Then:
    goto L51;

  anon57_Then:
    goto L51;

  anon53_Then:
    goto L51;

  anon55_Then:
    goto L44;

  anon54_Then:
    goto L44;

  anon66_Then:
    assume {:partition} Tmp_1066 != 128;
    goto L44;

  anon52_Then:
    goto L36;

  anon51_Then:
    goto L36;

  anon65_Then:
    assume {:partition} Tmp_1060 != 2;
    goto L36;

  anon63_Then:
    goto L10;

  anon48_Then:
    goto L10;

  anon49_Then:
    goto L1;

  anon47_Then:
    goto L4;
}



procedure {:origName "CyzPutChar"} CyzPutChar#1(actual_Extension_57: int, actual_CharToPut: int);
  modifies alloc, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#0(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_773: int)
{
  var {:scalar} ModemStatus: int;
  var {:pointer} Tmp_775: int;
  var {:scalar} Tmp_776: int;
  var {:scalar} OldTXHolding: int;
  var {:scalar} sdv_658: int;
  var {:pointer} Tmp_777: int;
  var {:scalar} msvr: int;
  var {:pointer} Extension_32: int;
  var {:scalar} DoingTX: int;
  var {:scalar} Reason: int;
  var vslice_dummy_var_781: int;
  var vslice_dummy_var_782: int;
  var vslice_dummy_var_225: int;

  anon0:
    Extension_32 := actual_Extension_32;
    DoingTX := actual_DoingTX;
    Reason := actual_Reason;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc OldTXHolding;
    ModemStatus := 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2795} msvr := corral_nondet();
    msvr := BAND(msvr, BNOT(256));
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc msvr;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} BAND(msvr, 2048) != 0;
    ModemStatus := BOR(ModemStatus, 16);
    goto L17;

  L17:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(msvr, 512) != 0;
    ModemStatus := BOR(ModemStatus, 32);
    goto L19;

  L19:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(msvr, 1024) != 0;
    ModemStatus := BOR(ModemStatus, 64);
    goto L21;

  L21:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(msvr, 256) != 0;
    ModemStatus := BOR(ModemStatus, 128);
    goto L23;

  L23:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Reason == 115;
    ModemStatus := BOR(ModemStatus, 1);
    goto L25;

  L25:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} Reason == 113;
    ModemStatus := BOR(ModemStatus, 2);
    goto L27;

  L27:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Reason == 114;
    ModemStatus := BOR(ModemStatus, 4);
    goto L29;

  L29:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Reason == 112;
    ModemStatus := BOR(ModemStatus, 8);
    goto L31;

  L31:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(ModemStatus, 15) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc vslice_dummy_var_225;
    call {:si_unique_call 2796} CyzPutChar#0(Extension_32, vslice_dummy_var_225);
    call {:si_unique_call 2797} CyzPutChar#0(Extension_32, 3);
    call {:si_unique_call 2798} CyzPutChar#0(Extension_32, ModemStatus);
    goto L33;

  L33:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  L48:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} BAND(ModemStatus, 1) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L51;

  L51:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} BAND(ModemStatus, 2) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L54;

  L54:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} BAND(ModemStatus, 4) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L57;

  L57:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} BAND(ModemStatus, 8) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_775;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_777;
    assume {:nonnull} Tmp_777 != 0;
    assume Tmp_777 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2799} vslice_dummy_var_782 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_32), 0, 0, Extension_32);
    goto L49;

  L49:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} BAND(ModemStatus, 16) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  L77:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} BAND(ModemStatus, 128) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  L87:
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} OldTXHolding != 0;
    goto L89;

  L89:
    Tmp_773 := ModemStatus;
    return;

  anon115_Then:
    assume {:partition} OldTXHolding == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_776;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} Tmp_776 == 192;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2800} sdv_658 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_32), 0, 0, Extension_32);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} sdv_658 != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L89;

  anon117_Then:
    assume {:partition} sdv_658 == 0;
    goto L89;

  anon125_Then:
    assume {:partition} Tmp_776 != 192;
    goto L89;

  anon116_Then:
    goto L89;

  anon114_Then:
    assume {:partition} BAND(ModemStatus, 128) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon113_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon112_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon111_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon110_Then:
    assume {:partition} BAND(ModemStatus, 16) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon109_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon97_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} DoingTX == 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} OldTXHolding != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L104;

  L104:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    call {:si_unique_call 2801} vslice_dummy_var_781 := CyzTxStart#0(Extension_32);
    goto L89;

  anon123_Then:
    goto L89;

  anon121_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    goto L104;

  anon122_Then:
    goto L89;

  anon120_Then:
    goto L89;

  anon119_Then:
    goto L89;

  anon118_Then:
    assume {:partition} OldTXHolding == 0;
    goto L89;

  anon126_Then:
    assume {:partition} DoingTX != 0;
    goto L89;

  anon108_Then:
    goto L89;

  anon107_Then:
    goto L49;

  anon105_Then:
    goto L49;

  anon106_Then:
    assume {:partition} BAND(ModemStatus, 8) == 0;
    goto L60;

  anon103_Then:
    goto L60;

  anon104_Then:
    assume {:partition} BAND(ModemStatus, 4) == 0;
    goto L57;

  anon101_Then:
    goto L57;

  anon102_Then:
    assume {:partition} BAND(ModemStatus, 2) == 0;
    goto L54;

  anon99_Then:
    goto L54;

  anon100_Then:
    assume {:partition} BAND(ModemStatus, 1) == 0;
    goto L51;

  anon98_Then:
    goto L51;

  anon96_Then:
    goto L49;

  anon95_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon93_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon94_Then:
    assume {:partition} BAND(ModemStatus, 15) == 0;
    goto L33;

  anon92_Then:
    goto L33;

  anon91_Then:
    assume {:partition} Reason != 112;
    goto L31;

  anon90_Then:
    assume {:partition} Reason != 114;
    goto L29;

  anon89_Then:
    assume {:partition} Reason != 113;
    goto L27;

  anon88_Then:
    assume {:partition} Reason != 115;
    goto L25;

  anon87_Then:
    assume {:partition} BAND(msvr, 256) == 0;
    goto L23;

  anon86_Then:
    assume {:partition} BAND(msvr, 1024) == 0;
    goto L21;

  anon85_Then:
    assume {:partition} BAND(msvr, 512) == 0;
    goto L19;

  anon124_Then:
    assume {:partition} BAND(msvr, 2048) == 0;
    goto L17;
}



procedure {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#0(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_773: int);
  modifies alloc, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#1(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_773: int)
{
  var {:scalar} ModemStatus: int;
  var {:pointer} Tmp_775: int;
  var {:scalar} Tmp_776: int;
  var {:scalar} OldTXHolding: int;
  var {:scalar} sdv_658: int;
  var {:pointer} Tmp_777: int;
  var {:scalar} msvr: int;
  var {:pointer} Extension_32: int;
  var {:scalar} DoingTX: int;
  var {:scalar} Reason: int;
  var vslice_dummy_var_783: int;
  var vslice_dummy_var_784: int;
  var vslice_dummy_var_226: int;

  anon0:
    Extension_32 := actual_Extension_32;
    DoingTX := actual_DoingTX;
    Reason := actual_Reason;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc OldTXHolding;
    ModemStatus := 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2802} msvr := corral_nondet();
    msvr := BAND(msvr, BNOT(256));
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc msvr;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} BAND(msvr, 2048) != 0;
    ModemStatus := BOR(ModemStatus, 16);
    goto L17;

  L17:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} BAND(msvr, 512) != 0;
    ModemStatus := BOR(ModemStatus, 32);
    goto L19;

  L19:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} BAND(msvr, 1024) != 0;
    ModemStatus := BOR(ModemStatus, 64);
    goto L21;

  L21:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} BAND(msvr, 256) != 0;
    ModemStatus := BOR(ModemStatus, 128);
    goto L23;

  L23:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} Reason == 115;
    ModemStatus := BOR(ModemStatus, 1);
    goto L25;

  L25:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} Reason == 113;
    ModemStatus := BOR(ModemStatus, 2);
    goto L27;

  L27:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} Reason == 114;
    ModemStatus := BOR(ModemStatus, 4);
    goto L29;

  L29:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} Reason == 112;
    ModemStatus := BOR(ModemStatus, 8);
    goto L31;

  L31:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} BAND(ModemStatus, 15) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc vslice_dummy_var_226;
    call {:si_unique_call 2803} CyzPutChar#1(Extension_32, vslice_dummy_var_226);
    call {:si_unique_call 2804} CyzPutChar#1(Extension_32, 3);
    call {:si_unique_call 2805} CyzPutChar#1(Extension_32, ModemStatus);
    goto L33;

  L33:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  L48:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} BAND(ModemStatus, 1) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L51;

  L51:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} BAND(ModemStatus, 2) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L54;

  L54:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} BAND(ModemStatus, 4) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L57;

  L57:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} BAND(ModemStatus, 8) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_775;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Tmp_775 != 0;
    assume Tmp_775 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_777;
    assume {:nonnull} Tmp_777 != 0;
    assume Tmp_777 > 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2806} vslice_dummy_var_784 := CyzInsertQueueDpc(CommWaitDpc__CYZ_DEVICE_EXTENSION(Extension_32), 0, 0, Extension_32);
    goto L49;

  L49:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon109_Then, anon109_Else;

  anon109_Else:
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} BAND(ModemStatus, 16) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  L77:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} BAND(ModemStatus, 32) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} BAND(ModemStatus, 128) != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  L87:
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} OldTXHolding != 0;
    goto L89;

  L89:
    Tmp_773 := ModemStatus;
    return;

  anon115_Then:
    assume {:partition} OldTXHolding == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    havoc Tmp_776;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} Tmp_776 == 192;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    call {:si_unique_call 2807} sdv_658 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_32), 0, 0, Extension_32);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} sdv_658 != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L89;

  anon117_Then:
    assume {:partition} sdv_658 == 0;
    goto L89;

  anon125_Then:
    assume {:partition} Tmp_776 != 192;
    goto L89;

  anon116_Then:
    goto L89;

  anon114_Then:
    assume {:partition} BAND(ModemStatus, 128) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon113_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L87;

  anon112_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon111_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L82;

  anon110_Then:
    assume {:partition} BAND(ModemStatus, 16) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon109_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L77;

  anon97_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} DoingTX == 0;
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} OldTXHolding != 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    goto L104;

  L104:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    call {:si_unique_call 2808} vslice_dummy_var_783 := CyzTxStart#1(Extension_32);
    goto L89;

  anon123_Then:
    goto L89;

  anon121_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto anon122_Then, anon122_Else;

  anon122_Else:
    goto L104;

  anon122_Then:
    goto L89;

  anon120_Then:
    goto L89;

  anon119_Then:
    goto L89;

  anon118_Then:
    assume {:partition} OldTXHolding == 0;
    goto L89;

  anon126_Then:
    assume {:partition} DoingTX != 0;
    goto L89;

  anon108_Then:
    goto L89;

  anon107_Then:
    goto L49;

  anon105_Then:
    goto L49;

  anon106_Then:
    assume {:partition} BAND(ModemStatus, 8) == 0;
    goto L60;

  anon103_Then:
    goto L60;

  anon104_Then:
    assume {:partition} BAND(ModemStatus, 4) == 0;
    goto L57;

  anon101_Then:
    goto L57;

  anon102_Then:
    assume {:partition} BAND(ModemStatus, 2) == 0;
    goto L54;

  anon99_Then:
    goto L54;

  anon100_Then:
    assume {:partition} BAND(ModemStatus, 1) == 0;
    goto L51;

  anon98_Then:
    goto L51;

  anon96_Then:
    goto L49;

  anon95_Then:
    assume {:partition} BAND(ModemStatus, 32) == 0;
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon93_Then:
    assume {:nonnull} Extension_32 != 0;
    assume Extension_32 > 0;
    goto L48;

  anon94_Then:
    assume {:partition} BAND(ModemStatus, 15) == 0;
    goto L33;

  anon92_Then:
    goto L33;

  anon91_Then:
    assume {:partition} Reason != 112;
    goto L31;

  anon90_Then:
    assume {:partition} Reason != 114;
    goto L29;

  anon89_Then:
    assume {:partition} Reason != 113;
    goto L27;

  anon88_Then:
    assume {:partition} Reason != 115;
    goto L25;

  anon87_Then:
    assume {:partition} BAND(msvr, 256) == 0;
    goto L23;

  anon86_Then:
    assume {:partition} BAND(msvr, 1024) == 0;
    goto L21;

  anon85_Then:
    assume {:partition} BAND(msvr, 512) == 0;
    goto L19;

  anon124_Then:
    assume {:partition} BAND(msvr, 2048) == 0;
    goto L17;
}



procedure {:origName "CyzHandleModemUpdate"} CyzHandleModemUpdate#1(actual_Extension_32: int, actual_DoingTX: int, actual_Reason: int) returns (Tmp_773: int);
  modifies alloc, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzTxStart"} CyzTxStart#0(actual_Context_39: int) returns (Tmp_973: int)
{
  var {:scalar} Tmp_974: int;
  var {:scalar} Tmp_975: int;
  var {:scalar} Tmp_976: int;
  var {:scalar} Tmp_977: int;
  var {:pointer} Tmp_978: int;
  var {:scalar} amountToWrite1: int;
  var {:scalar} numOfLongs: int;
  var {:scalar} Tmp_980: int;
  var {:pointer} Tmp_982: int;
  var {:scalar} sdv_818: int;
  var {:pointer} Tmp_986: int;
  var {:scalar} Tmp_987: int;
  var {:pointer} Tmp_988: int;
  var {:scalar} Tmp_990: int;
  var {:pointer} Tmp_991: int;
  var {:scalar} Tmp_992: int;
  var {:scalar} Tmp_993: int;
  var {:pointer} Tmp_994: int;
  var {:scalar} Tmp_995: int;
  var {:scalar} Tmp_996: int;
  var {:scalar} Tmp_997: int;
  var {:scalar} Tmp_998: int;
  var {:scalar} Tmp_1001: int;
  var {:scalar} Tmp_1004: int;
  var {:scalar} Tmp_1006: int;
  var {:pointer} Tmp_1007: int;
  var {:scalar} Tmp_1008: int;
  var {:pointer} Tmp_1009: int;
  var {:scalar} tx_5: int;
  var {:scalar} sdv_822: int;
  var {:pointer} Tmp_1010: int;
  var {:scalar} Tmp_1012: int;
  var {:scalar} Tmp_1013: int;
  var {:pointer} Tmp_1015: int;
  var {:pointer} Tmp_1016: int;
  var {:scalar} numOfBytes: int;
  var {:scalar} Tmp_1017: int;
  var {:pointer} Extension_54: int;
  var {:scalar} Tmp_1021: int;
  var {:scalar} amountToWrite2: int;
  var {:scalar} sdv_826: int;
  var {:scalar} Tmp_1023: int;
  var {:scalar} tx_6: int;
  var {:scalar} Tmp_1024: int;
  var {:pointer} Tmp_1026: int;
  var {:pointer} Tmp_1027: int;
  var {:scalar} sdv_828: int;
  var {:scalar} tx_7: int;
  var {:scalar} Tmp_1029: int;
  var {:pointer} Tmp_1032: int;
  var {:pointer} Tmp_1034: int;
  var {:scalar} sdv_829: int;
  var {:scalar} amount1: int;
  var {:pointer} Tmp_1038: int;
  var {:scalar} Tmp_1039: int;
  var {:pointer} Context_39: int;
  var vslice_dummy_var_785: int;
  var vslice_dummy_var_786: int;
  var vslice_dummy_var_787: int;
  var vslice_dummy_var_788: int;
  var vslice_dummy_var_789: int;

  anon0:
    Context_39 := actual_Context_39;
    Extension_54 := Context_39;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    Tmp_973 := 0;
    goto L1;

  L1:
    return;

  anon163_Then:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    goto L15;

  L15:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2809} tx_6 := corral_nondet();
    call {:si_unique_call 2810} tx_7 := corral_nondet();
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc tx_5;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} tx_6 >= tx_5;
    goto L27;

  L27:
    Tmp_973 := 0;
    goto L1;

  anon164_Then:
    assume {:partition} tx_5 > tx_6;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} tx_7 < tx_5;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} tx_6 + 1 == tx_7;
    goto L30;

  L30:
    Tmp_973 := 0;
    goto L1;

  anon126_Then:
    assume {:partition} tx_6 + 1 != tx_7;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} tx_6 == tx_5 - 1;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} tx_7 != 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume false;
    return;

  anon165_Then:
    goto L34;

  L34:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1008;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Tmp_1008 == 192;
    call {:si_unique_call 2811} vslice_dummy_var_785 := CyzSetRTS(Extension_54);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2812} CyzIssueCmd(Extension_54, 17, 0, 0);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2813} sdv_826 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} sdv_826 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L60;

  L60:
    Tmp_973 := 0;
    goto L1;

  anon132_Then:
    assume {:partition} sdv_826 == 0;
    goto L55;

  anon183_Then:
    assume {:partition} Tmp_1008 != 192;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2814} CyzIssueCmd(Extension_54, 17, 0, 0);
    goto L55;

  anon131_Then:
    goto L38;

  L38:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1039;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} Tmp_1039 == 192;
    call {:si_unique_call 2815} vslice_dummy_var_786 := CyzSetRTS(Extension_54);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2816} CyzIssueCmd(Extension_54, 16, 0, 0);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2817} sdv_828 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_828 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    goto L85;

  L85:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L60;

  anon136_Then:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_990;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} Tmp_990 == 192;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2818} sdv_822 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} sdv_822 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L85;

  anon137_Then:
    assume {:partition} sdv_822 == 0;
    goto L85;

  anon182_Then:
    assume {:partition} Tmp_990 != 192;
    goto L85;

  anon135_Then:
    assume {:partition} sdv_828 == 0;
    goto L82;

  anon181_Then:
    assume {:partition} Tmp_1039 != 192;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2819} CyzIssueCmd(Extension_54, 16, 0, 0);
    goto L82;

  anon134_Then:
    goto L65;

  L65:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L100;

  L100:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_992;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} Tmp_992 == 192;
    call {:si_unique_call 2820} vslice_dummy_var_787 := CyzSetRTS(Extension_54);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    Tmp_998 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1032;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L119;

  L119:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2821} sdv_829 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} sdv_829 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L123;

  L123:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2822} vslice_dummy_var_789 := CyzInsertQueueDpc(CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto L60;

  anon142_Then:
    assume {:partition} sdv_829 == 0;
    goto L123;

  anon141_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L119;

  anon166_Then:
    assume {:partition} Tmp_992 != 192;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    Tmp_995 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_978;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L123;

  anon143_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L123;

  anon140_Then:
    goto L98;

  L98:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} tx_6 >= tx_7;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} tx_7 != 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} tx_7 == 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc amountToWrite1;
    goto L160;

  L160:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_975;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} Tmp_975 == 192;
    call {:si_unique_call 2823} vslice_dummy_var_788 := CyzSetRTS(Extension_54);
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    amount1 := amountToWrite1;
    goto L171;

  L171:
    call {:si_unique_call 2824} Tmp_1001, Tmp_1009, tx_6, amount1 := CyzTxStart#0_loop_L171(Tmp_1001, Tmp_1009, Extension_54, tx_6, amount1);
    goto L171_last;

  L171_last:
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} amount1 != 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_1001 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1009;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    amount1 := amount1 - 1;
    goto anon151_Else_dummy;

  anon151_Else_dummy:
    assume false;
    return;

  anon151_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L172;

  L172:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L182;

  L182:
    call {:si_unique_call 2825} numOfLongs, Tmp_982, Tmp_993, Tmp_1004, tx_6, Tmp_1026 := CyzTxStart#0_loop_L182(numOfLongs, Tmp_982, Tmp_993, Tmp_1004, Extension_54, tx_6, Tmp_1026);
    goto L182_last;

  L182_last:
    Tmp_993 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} Tmp_993 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1026;
    assume {:nonnull} Tmp_1026 != 0;
    assume Tmp_1026 > 0;
    Tmp_1004 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_982;
    tx_6 := tx_6 + 4;
    goto anon169_Else_dummy;

  anon169_Else_dummy:
    assume false;
    return;

  anon169_Then:
    assume {:partition} Tmp_993 == 0;
    goto L183;

  L183:
    call {:si_unique_call 2826} Tmp_977, Tmp_997, numOfBytes, tx_6, Tmp_1027 := CyzTxStart#0_loop_L183(Tmp_977, Tmp_997, numOfBytes, Extension_54, tx_6, Tmp_1027);
    goto L183_last;

  L183_last:
    Tmp_997 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} Tmp_997 != 0;
    Tmp_977 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1027;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon170_Else_dummy;

  anon170_Else_dummy:
    assume false;
    return;

  anon170_Then:
    assume {:partition} Tmp_997 == 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L198;

  L198:
    goto L167;

  L167:
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L209;

  L209:
    call {:si_unique_call 2827} numOfLongs, Tmp_988, Tmp_1012, Tmp_1023, tx_6, Tmp_1034 := CyzTxStart#0_loop_L209(numOfLongs, Tmp_988, Tmp_1012, Extension_54, Tmp_1023, tx_6, Tmp_1034);
    goto L209_last;

  L209_last:
    Tmp_1012 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} Tmp_1012 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_988;
    assume {:nonnull} Tmp_988 != 0;
    assume Tmp_988 > 0;
    Tmp_1023 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1034;
    tx_6 := tx_6 + 4;
    goto anon171_Else_dummy;

  anon171_Else_dummy:
    assume false;
    return;

  anon171_Then:
    assume {:partition} Tmp_1012 == 0;
    goto L210;

  L210:
    call {:si_unique_call 2828} Tmp_974, Tmp_994, Tmp_1013, numOfBytes, tx_6 := CyzTxStart#0_loop_L210(Tmp_974, Tmp_994, Tmp_1013, numOfBytes, Extension_54, tx_6);
    goto L210_last;

  L210_last:
    Tmp_974 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} Tmp_974 != 0;
    Tmp_1013 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_994;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon172_Else_dummy;

  anon172_Else_dummy:
    assume false;
    return;

  anon172_Then:
    assume {:partition} Tmp_974 == 0;
    goto L202;

  L202:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2829} sdv_818 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} sdv_818 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L228;

  L228:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L60;

  anon154_Then:
    call {:si_unique_call 2830} CyzQueueCompleteWrite(Extension_54);
    goto L60;

  anon173_Then:
    goto L60;

  anon153_Then:
    assume {:partition} sdv_818 == 0;
    goto L228;

  anon149_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L202;

  anon152_Then:
    assume {:partition} tx_6 != tx_5;
    goto L198;

  anon150_Then:
    assume {:partition} amount1 == 0;
    goto L172;

  anon148_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L167;

  anon168_Then:
    assume {:partition} Tmp_975 != 192;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    amount1 := amountToWrite1;
    goto L242;

  L242:
    call {:si_unique_call 2831} Tmp_986, Tmp_1021, tx_6, amount1 := CyzTxStart#0_loop_L242(Tmp_986, Extension_54, Tmp_1021, tx_6, amount1);
    goto L242_last;

  L242_last:
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} amount1 != 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_1021 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_986;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    amount1 := amount1 - 1;
    goto anon157_Else_dummy;

  anon157_Else_dummy:
    assume false;
    return;

  anon157_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L243;

  L243:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L253;

  L253:
    call {:si_unique_call 2832} Tmp_976, numOfLongs, Tmp_980, Tmp_991, tx_6, Tmp_1038 := CyzTxStart#0_loop_L253(Tmp_976, numOfLongs, Tmp_980, Tmp_991, Extension_54, tx_6, Tmp_1038);
    goto L253_last;

  L253_last:
    Tmp_980 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Tmp_980 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_991;
    assume {:nonnull} Tmp_991 != 0;
    assume Tmp_991 > 0;
    Tmp_976 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1038;
    tx_6 := tx_6 + 4;
    goto anon174_Else_dummy;

  anon174_Else_dummy:
    assume false;
    return;

  anon174_Then:
    assume {:partition} Tmp_980 == 0;
    goto L254;

  L254:
    call {:si_unique_call 2833} Tmp_996, Tmp_1016, numOfBytes, Tmp_1017, tx_6 := CyzTxStart#0_loop_L254(Tmp_996, Tmp_1016, numOfBytes, Tmp_1017, Extension_54, tx_6);
    goto L254_last;

  L254_last:
    Tmp_1017 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Tmp_1017 != 0;
    Tmp_996 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1016;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon175_Else_dummy;

  anon175_Else_dummy:
    assume false;
    return;

  anon175_Then:
    assume {:partition} Tmp_1017 == 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L269;

  L269:
    goto L238;

  L238:
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L277;

  L277:
    call {:si_unique_call 2834} numOfLongs, Tmp_987, Tmp_1010, Tmp_1015, tx_6, Tmp_1024 := CyzTxStart#0_loop_L277(numOfLongs, Tmp_987, Tmp_1010, Tmp_1015, Extension_54, tx_6, Tmp_1024);
    goto L277_last;

  L277_last:
    Tmp_1024 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} Tmp_1024 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1010;
    assume {:nonnull} Tmp_1010 != 0;
    assume Tmp_1010 > 0;
    Tmp_987 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1015;
    tx_6 := tx_6 + 4;
    goto anon176_Else_dummy;

  anon176_Else_dummy:
    assume false;
    return;

  anon176_Then:
    assume {:partition} Tmp_1024 == 0;
    goto L278;

  L278:
    call {:si_unique_call 2835} Tmp_1006, Tmp_1007, numOfBytes, tx_6, Tmp_1029 := CyzTxStart#0_loop_L278(Tmp_1006, Tmp_1007, numOfBytes, Extension_54, tx_6, Tmp_1029);
    goto L278_last;

  L278_last:
    Tmp_1006 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Tmp_1006 != 0;
    Tmp_1029 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1007;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon177_Else_dummy;

  anon177_Else_dummy:
    assume false;
    return;

  anon177_Then:
    assume {:partition} Tmp_1006 == 0;
    goto L228;

  anon155_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L228;

  anon158_Then:
    assume {:partition} tx_6 != tx_5;
    goto L269;

  anon156_Then:
    assume {:partition} amount1 == 0;
    goto L243;

  anon147_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L238;

  anon167_Then:
    goto L160;

  anon146_Then:
    assume {:partition} tx_7 != 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := tx_7 - 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc amountToWrite1;
    amountToWrite2 := 0;
    goto L160;

  anon178_Then:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    amountToWrite2 := 0;
    goto L160;

  anon159_Then:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc amountToWrite2;
    goto L160;

  anon160_Then:
    goto L160;

  anon145_Then:
    assume {:partition} tx_7 == 0;
    amountToWrite1 := tx_5 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc amountToWrite1;
    goto L308;

  L308:
    goto L160;

  anon179_Then:
    goto L308;

  anon144_Then:
    assume {:partition} tx_7 > tx_6;
    amountToWrite1 := tx_7 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc amountToWrite1;
    goto L160;

  anon180_Then:
    goto L160;

  anon138_Then:
    goto L60;

  anon139_Then:
    goto L100;

  anon133_Then:
    goto L98;

  anon130_Then:
    goto L65;

  anon129_Then:
    goto L38;

  anon128_Then:
    assume {:partition} tx_7 == 0;
    goto L30;

  anon127_Then:
    assume {:partition} tx_6 != tx_5 - 1;
    goto L31;

  anon125_Then:
    assume {:partition} tx_5 <= tx_7;
    goto L27;

  anon123_Then:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    goto L60;

  anon162_Then:
    goto L15;

  anon161_Then:
    goto L15;

  anon124_Then:
    goto L15;
}



procedure {:origName "CyzTxStart"} CyzTxStart#0(actual_Context_39: int) returns (Tmp_973: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_973 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzTxStart"} CyzTxStart#1(actual_Context_39: int) returns (Tmp_973: int)
{
  var {:scalar} Tmp_974: int;
  var {:scalar} Tmp_975: int;
  var {:scalar} Tmp_976: int;
  var {:scalar} Tmp_977: int;
  var {:pointer} Tmp_978: int;
  var {:scalar} amountToWrite1: int;
  var {:scalar} numOfLongs: int;
  var {:scalar} Tmp_980: int;
  var {:pointer} Tmp_982: int;
  var {:scalar} sdv_818: int;
  var {:pointer} Tmp_986: int;
  var {:scalar} Tmp_987: int;
  var {:pointer} Tmp_988: int;
  var {:scalar} Tmp_990: int;
  var {:pointer} Tmp_991: int;
  var {:scalar} Tmp_992: int;
  var {:scalar} Tmp_993: int;
  var {:pointer} Tmp_994: int;
  var {:scalar} Tmp_995: int;
  var {:scalar} Tmp_996: int;
  var {:scalar} Tmp_997: int;
  var {:scalar} Tmp_998: int;
  var {:scalar} Tmp_1001: int;
  var {:scalar} Tmp_1004: int;
  var {:scalar} Tmp_1006: int;
  var {:pointer} Tmp_1007: int;
  var {:scalar} Tmp_1008: int;
  var {:pointer} Tmp_1009: int;
  var {:scalar} tx_5: int;
  var {:scalar} sdv_822: int;
  var {:pointer} Tmp_1010: int;
  var {:scalar} Tmp_1012: int;
  var {:scalar} Tmp_1013: int;
  var {:pointer} Tmp_1015: int;
  var {:pointer} Tmp_1016: int;
  var {:scalar} numOfBytes: int;
  var {:scalar} Tmp_1017: int;
  var {:pointer} Extension_54: int;
  var {:scalar} Tmp_1021: int;
  var {:scalar} amountToWrite2: int;
  var {:scalar} sdv_826: int;
  var {:scalar} Tmp_1023: int;
  var {:scalar} tx_6: int;
  var {:scalar} Tmp_1024: int;
  var {:pointer} Tmp_1026: int;
  var {:pointer} Tmp_1027: int;
  var {:scalar} sdv_828: int;
  var {:scalar} tx_7: int;
  var {:scalar} Tmp_1029: int;
  var {:pointer} Tmp_1032: int;
  var {:pointer} Tmp_1034: int;
  var {:scalar} sdv_829: int;
  var {:scalar} amount1: int;
  var {:pointer} Tmp_1038: int;
  var {:scalar} Tmp_1039: int;
  var {:pointer} Context_39: int;
  var vslice_dummy_var_790: int;
  var vslice_dummy_var_791: int;
  var vslice_dummy_var_792: int;
  var vslice_dummy_var_793: int;
  var vslice_dummy_var_794: int;
  var vslice_dummy_var_795: int;

  anon0:
    Context_39 := actual_Context_39;
    Extension_54 := Context_39;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    Tmp_973 := 0;
    goto L1;

  L1:
    return;

  anon163_Then:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    goto L15;

  L15:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2836} tx_6 := corral_nondet();
    call {:si_unique_call 2837} tx_7 := corral_nondet();
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc tx_5;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} tx_6 >= tx_5;
    goto L27;

  L27:
    Tmp_973 := 0;
    goto L1;

  anon164_Then:
    assume {:partition} tx_5 > tx_6;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} tx_7 < tx_5;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} tx_6 + 1 == tx_7;
    goto L30;

  L30:
    Tmp_973 := 0;
    goto L1;

  anon126_Then:
    assume {:partition} tx_6 + 1 != tx_7;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} tx_6 == tx_5 - 1;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} tx_7 != 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    call {:si_unique_call 2838} vslice_dummy_var_790 := CyzHandleModemUpdate#0(Extension_54, 1, 0);
    goto L34;

  L34:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1008;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} Tmp_1008 == 192;
    call {:si_unique_call 2839} vslice_dummy_var_791 := CyzSetRTS(Extension_54);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2840} CyzIssueCmd(Extension_54, 17, 0, 0);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2841} sdv_826 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} sdv_826 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L60;

  L60:
    Tmp_973 := 0;
    goto L1;

  anon132_Then:
    assume {:partition} sdv_826 == 0;
    goto L55;

  anon183_Then:
    assume {:partition} Tmp_1008 != 192;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2842} CyzIssueCmd(Extension_54, 17, 0, 0);
    goto L55;

  anon131_Then:
    goto L38;

  L38:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1039;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:partition} Tmp_1039 == 192;
    call {:si_unique_call 2843} vslice_dummy_var_792 := CyzSetRTS(Extension_54);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2844} CyzIssueCmd(Extension_54, 16, 0, 0);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2845} sdv_828 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} sdv_828 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L82;

  L82:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    goto L85;

  L85:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L60;

  anon136_Then:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_990;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    assume {:partition} Tmp_990 == 192;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2846} sdv_822 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} sdv_822 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L85;

  anon137_Then:
    assume {:partition} sdv_822 == 0;
    goto L85;

  anon182_Then:
    assume {:partition} Tmp_990 != 192;
    goto L85;

  anon135_Then:
    assume {:partition} sdv_828 == 0;
    goto L82;

  anon181_Then:
    assume {:partition} Tmp_1039 != 192;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2847} CyzIssueCmd(Extension_54, 16, 0, 0);
    goto L82;

  anon134_Then:
    goto L65;

  L65:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    goto L100;

  L100:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_992;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:partition} Tmp_992 == 192;
    call {:si_unique_call 2848} vslice_dummy_var_793 := CyzSetRTS(Extension_54);
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    Tmp_998 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1032;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L119;

  L119:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2849} sdv_829 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} sdv_829 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L123;

  L123:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2850} vslice_dummy_var_795 := CyzInsertQueueDpc(CompleteImmediateDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto L60;

  anon142_Then:
    assume {:partition} sdv_829 == 0;
    goto L123;

  anon141_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L119;

  anon166_Then:
    assume {:partition} Tmp_992 != 192;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    Tmp_995 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_978;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} tx_6 + 1 == tx_5;
    goto L123;

  anon143_Then:
    assume {:partition} tx_6 + 1 != tx_5;
    goto L123;

  anon140_Then:
    goto L98;

  L98:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} tx_6 >= tx_7;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:partition} tx_7 != 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    assume {:partition} tx_7 == 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc amountToWrite1;
    goto L160;

  L160:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_975;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:partition} Tmp_975 == 192;
    call {:si_unique_call 2851} vslice_dummy_var_794 := CyzSetRTS(Extension_54);
    goto anon148_Then, anon148_Else;

  anon148_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    amount1 := amountToWrite1;
    goto L171;

  L171:
    call {:si_unique_call 2852} Tmp_1001, Tmp_1009, tx_6, amount1 := CyzTxStart#1_loop_L171(Tmp_1001, Tmp_1009, Extension_54, tx_6, amount1);
    goto L171_last;

  L171_last:
    goto anon150_Then, anon150_Else;

  anon150_Else:
    assume {:partition} amount1 != 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_1001 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1009;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    amount1 := amount1 - 1;
    goto anon151_Else_dummy;

  anon151_Else_dummy:
    assume false;
    return;

  anon151_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L172;

  L172:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L182;

  L182:
    call {:si_unique_call 2853} numOfLongs, Tmp_982, Tmp_993, Tmp_1004, tx_6, Tmp_1026 := CyzTxStart#1_loop_L182(numOfLongs, Tmp_982, Tmp_993, Tmp_1004, Extension_54, tx_6, Tmp_1026);
    goto L182_last;

  L182_last:
    Tmp_993 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    assume {:partition} Tmp_993 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1026;
    assume {:nonnull} Tmp_1026 != 0;
    assume Tmp_1026 > 0;
    Tmp_1004 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_982;
    tx_6 := tx_6 + 4;
    goto anon169_Else_dummy;

  anon169_Else_dummy:
    assume false;
    return;

  anon169_Then:
    assume {:partition} Tmp_993 == 0;
    goto L183;

  L183:
    call {:si_unique_call 2854} Tmp_977, Tmp_997, numOfBytes, tx_6, Tmp_1027 := CyzTxStart#1_loop_L183(Tmp_977, Tmp_997, numOfBytes, Extension_54, tx_6, Tmp_1027);
    goto L183_last;

  L183_last:
    Tmp_997 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:partition} Tmp_997 != 0;
    Tmp_977 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1027;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon170_Else_dummy;

  anon170_Else_dummy:
    assume false;
    return;

  anon170_Then:
    assume {:partition} Tmp_997 == 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L198;

  L198:
    goto L167;

  L167:
    goto anon149_Then, anon149_Else;

  anon149_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L209;

  L209:
    call {:si_unique_call 2855} numOfLongs, Tmp_988, Tmp_1012, Tmp_1023, tx_6, Tmp_1034 := CyzTxStart#1_loop_L209(numOfLongs, Tmp_988, Tmp_1012, Extension_54, Tmp_1023, tx_6, Tmp_1034);
    goto L209_last;

  L209_last:
    Tmp_1012 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:partition} Tmp_1012 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_988;
    assume {:nonnull} Tmp_988 != 0;
    assume Tmp_988 > 0;
    Tmp_1023 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1034;
    tx_6 := tx_6 + 4;
    goto anon171_Else_dummy;

  anon171_Else_dummy:
    assume false;
    return;

  anon171_Then:
    assume {:partition} Tmp_1012 == 0;
    goto L210;

  L210:
    call {:si_unique_call 2856} Tmp_974, Tmp_994, Tmp_1013, numOfBytes, tx_6 := CyzTxStart#1_loop_L210(Tmp_974, Tmp_994, Tmp_1013, numOfBytes, Extension_54, tx_6);
    goto L210_last;

  L210_last:
    Tmp_974 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:partition} Tmp_974 != 0;
    Tmp_1013 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_994;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon172_Else_dummy;

  anon172_Else_dummy:
    assume false;
    return;

  anon172_Then:
    assume {:partition} Tmp_974 == 0;
    goto L202;

  L202:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    call {:si_unique_call 2857} sdv_818 := CyzInsertQueueDpc(StartTimerLowerRTSDpc__CYZ_DEVICE_EXTENSION(Extension_54), 0, 0, Extension_54);
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:partition} sdv_818 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L228;

  L228:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto L60;

  anon154_Then:
    call {:si_unique_call 2858} CyzQueueCompleteWrite(Extension_54);
    goto L60;

  anon173_Then:
    goto L60;

  anon153_Then:
    assume {:partition} sdv_818 == 0;
    goto L228;

  anon149_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L202;

  anon152_Then:
    assume {:partition} tx_6 != tx_5;
    goto L198;

  anon150_Then:
    assume {:partition} amount1 == 0;
    goto L172;

  anon148_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L167;

  anon168_Then:
    assume {:partition} Tmp_975 != 192;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    assume {:partition} amountToWrite1 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    amount1 := amountToWrite1;
    goto L242;

  L242:
    call {:si_unique_call 2859} Tmp_986, Tmp_1021, tx_6, amount1 := CyzTxStart#1_loop_L242(Tmp_986, Extension_54, Tmp_1021, tx_6, amount1);
    goto L242_last;

  L242_last:
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:partition} amount1 != 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:partition} BAND(tx_6, 7) != 0;
    Tmp_1021 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_986;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    amount1 := amount1 - 1;
    goto anon157_Else_dummy;

  anon157_Else_dummy:
    assume false;
    return;

  anon157_Then:
    assume {:partition} BAND(tx_6, 7) == 0;
    goto L243;

  L243:
    numOfLongs := INTDIV(amount1, 4);
    numOfBytes := INTMOD(amount1, 4);
    goto L253;

  L253:
    call {:si_unique_call 2860} Tmp_976, numOfLongs, Tmp_980, Tmp_991, tx_6, Tmp_1038 := CyzTxStart#1_loop_L253(Tmp_976, numOfLongs, Tmp_980, Tmp_991, Extension_54, tx_6, Tmp_1038);
    goto L253_last;

  L253_last:
    Tmp_980 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:partition} Tmp_980 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_991;
    assume {:nonnull} Tmp_991 != 0;
    assume Tmp_991 > 0;
    Tmp_976 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1038;
    tx_6 := tx_6 + 4;
    goto anon174_Else_dummy;

  anon174_Else_dummy:
    assume false;
    return;

  anon174_Then:
    assume {:partition} Tmp_980 == 0;
    goto L254;

  L254:
    call {:si_unique_call 2861} Tmp_996, Tmp_1016, numOfBytes, Tmp_1017, tx_6 := CyzTxStart#1_loop_L254(Tmp_996, Tmp_1016, numOfBytes, Tmp_1017, Extension_54, tx_6);
    goto L254_last;

  L254_last:
    Tmp_1017 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} Tmp_1017 != 0;
    Tmp_996 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1016;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon175_Else_dummy;

  anon175_Else_dummy:
    assume false;
    return;

  anon175_Then:
    assume {:partition} Tmp_1017 == 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:partition} tx_6 == tx_5;
    tx_6 := 0;
    goto L269;

  L269:
    goto L238;

  L238:
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:partition} amountToWrite2 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    numOfLongs := INTDIV(amountToWrite2, 4);
    numOfBytes := INTMOD(amountToWrite2, 4);
    goto L277;

  L277:
    call {:si_unique_call 2862} numOfLongs, Tmp_987, Tmp_1010, Tmp_1015, tx_6, Tmp_1024 := CyzTxStart#1_loop_L277(numOfLongs, Tmp_987, Tmp_1010, Tmp_1015, Extension_54, tx_6, Tmp_1024);
    goto L277_last;

  L277_last:
    Tmp_1024 := numOfLongs;
    numOfLongs := numOfLongs - 1;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} Tmp_1024 != 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1010;
    assume {:nonnull} Tmp_1010 != 0;
    assume Tmp_1010 > 0;
    Tmp_987 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1015;
    tx_6 := tx_6 + 4;
    goto anon176_Else_dummy;

  anon176_Else_dummy:
    assume false;
    return;

  anon176_Then:
    assume {:partition} Tmp_1024 == 0;
    goto L278;

  L278:
    call {:si_unique_call 2863} Tmp_1006, Tmp_1007, numOfBytes, tx_6, Tmp_1029 := CyzTxStart#1_loop_L278(Tmp_1006, Tmp_1007, numOfBytes, Extension_54, tx_6, Tmp_1029);
    goto L278_last;

  L278_last:
    Tmp_1006 := numOfBytes;
    numOfBytes := numOfBytes - 1;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} Tmp_1006 != 0;
    Tmp_1029 := tx_6;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc Tmp_1007;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    tx_6 := tx_6 + 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon177_Else_dummy;

  anon177_Else_dummy:
    assume false;
    return;

  anon177_Then:
    assume {:partition} Tmp_1006 == 0;
    goto L228;

  anon155_Then:
    assume {:partition} amountToWrite2 == 0;
    goto L228;

  anon158_Then:
    assume {:partition} tx_6 != tx_5;
    goto L269;

  anon156_Then:
    assume {:partition} amount1 == 0;
    goto L243;

  anon147_Then:
    assume {:partition} amountToWrite1 == 0;
    goto L238;

  anon167_Then:
    goto L160;

  anon146_Then:
    assume {:partition} tx_7 != 1;
    amountToWrite1 := tx_5 - tx_6;
    amountToWrite2 := tx_7 - 1;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc amountToWrite1;
    amountToWrite2 := 0;
    goto L160;

  anon178_Then:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    amountToWrite2 := 0;
    goto L160;

  anon159_Then:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc amountToWrite2;
    goto L160;

  anon160_Then:
    goto L160;

  anon145_Then:
    assume {:partition} tx_7 == 0;
    amountToWrite1 := tx_5 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc amountToWrite1;
    goto L308;

  L308:
    goto L160;

  anon179_Then:
    goto L308;

  anon144_Then:
    assume {:partition} tx_7 > tx_6;
    amountToWrite1 := tx_7 - tx_6 - 1;
    amountToWrite2 := 0;
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    havoc amountToWrite1;
    goto L160;

  anon180_Then:
    goto L160;

  anon138_Then:
    goto L60;

  anon139_Then:
    goto L100;

  anon133_Then:
    goto L98;

  anon130_Then:
    goto L65;

  anon129_Then:
    goto L38;

  anon165_Then:
    goto L34;

  anon128_Then:
    assume {:partition} tx_7 == 0;
    goto L30;

  anon127_Then:
    assume {:partition} tx_6 != tx_5 - 1;
    goto L31;

  anon125_Then:
    assume {:partition} tx_5 <= tx_7;
    goto L27;

  anon123_Then:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} Extension_54 != 0;
    assume Extension_54 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    goto L60;

  anon162_Then:
    goto L15;

  anon161_Then:
    goto L15;

  anon124_Then:
    goto L15;
}



procedure {:origName "CyzTxStart"} CyzTxStart#1(actual_Context_39: int) returns (Tmp_973: int);
  modifies alloc, queued, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} Tmp_973 == 0;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#0(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} s_p_e_c_i_a_l_13: int;
  var {:pointer} sdv_688: int;
  var {:pointer} Tmp_826: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_827: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} Tmp_829: int;
  var {:pointer} sdv_690: int;
  var {:pointer} oldIrp: int;
  var {:scalar} pollIrql_9: int;
  var {:pointer} Tmp_830: int;
  var {:pointer} Extension_38: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_1: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} IntervalTimer: int;
  var {:pointer} TotalTimer: int;
  var {:scalar} Starter: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_796: int;
  var vslice_dummy_var_797: int;
  var vslice_dummy_var_798: int;
  var vslice_dummy_var_799: int;
  var vslice_dummy_var_800: int;
  var vslice_dummy_var_801: int;
  var vslice_dummy_var_802: int;
  var vslice_dummy_var_803: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;

  anon0:
    call {:si_unique_call 2864} newIrp := __HAVOC_malloc(4);
    call {:si_unique_call 2865} vslice_dummy_var_796 := __HAVOC_malloc(4);
    Extension_38 := actual_Extension_38;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_1 := actual_CurrentOpIrp_1;
    QueueToProcess_1 := actual_QueueToProcess_1;
    IntervalTimer := actual_IntervalTimer;
    TotalTimer := actual_TotalTimer;
    Starter := actual_Starter;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 2866} Tmp_826 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_14 := RefType;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_227;
    call {:si_unique_call 2867} sdv_688 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_227);
    assume {:nonnull} sdv_688 != 0;
    assume sdv_688 > 0;
    s_p_e_c_i_a_l_13 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_688)));
    assume {:nonnull} s_p_e_c_i_a_l_13 != 0;
    assume s_p_e_c_i_a_l_13 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 2868} Tmp_829 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    call {:si_unique_call 2869} sdv_KeAcquireSpinLock(0, Tmp_829);
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    havoc pollIrql_9;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant316;
    call {:si_unique_call 2870} vslice_dummy_var_803 := CyzGrabImmediateFromIsr(Extension_38);
    goto L22;

  L22:
    call {:si_unique_call 2871} sdv_KeReleaseSpinLock(0, pollIrql_9);
    goto L12;

  L12:
    call {:si_unique_call 2872} CyzRundownIrpRefs(CurrentOpIrp_1, IntervalTimer, TotalTimer, Extension_38);
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_228;
    call {:si_unique_call 2873} sdv_690 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_228);
    assume {:nonnull} sdv_690 != 0;
    assume sdv_690 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_830;
    assume {:nonnull} Tmp_830 != 0;
    assume Tmp_830 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_827;
    assume {:nonnull} Tmp_827 != 0;
    assume Tmp_827 > 0;
    goto L35;

  L35:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    call {:si_unique_call 2874} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_826 := strConst__li2bpl3;
    call {:si_unique_call 2875} vslice_dummy_var_800 := CyzDbgPrintEx(9, Tmp_826);
    call {:si_unique_call 2876} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2877} CyzIRPEpilogue(Extension_38);
    goto L1;

  L1:
    return;

  anon25_Then:
    call {:si_unique_call 2878} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant314;
    call {:si_unique_call 2879} CyzGetNextImmediate(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  L44:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant381;
    call {:si_unique_call 2880} vslice_dummy_var_799 := CyzStartRead(Extension_38);
    goto L1;

  anon28_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant194;
    call {:si_unique_call 2881} vslice_dummy_var_798 := CyzStartWrite#0(Extension_38);
    goto L1;

  anon27_Then:
    goto L1;

  anon31_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant144;
    call {:si_unique_call 2882} CyzGetNextIrp(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  anon26_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant197;
    call {:si_unique_call 2883} CyzGetNextWrite(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  anon33_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L35;

  anon24_Then:
    call {:si_unique_call 2884} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon30_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant457;
    call {:si_unique_call 2885} vslice_dummy_var_802 := CyzGrabReadFromIsr(Extension_38);
    goto L22;

  anon29_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant202;
    call {:si_unique_call 2886} vslice_dummy_var_801 := CyzGrabWriteFromIsr(Extension_38);
    goto L22;

  anon23_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant195;
    call {:si_unique_call 2887} vslice_dummy_var_797 := CyzGrabXoffFromIsr(Extension_38);
    goto L22;

  anon32_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#0(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#1(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} s_p_e_c_i_a_l_13: int;
  var {:pointer} sdv_688: int;
  var {:pointer} Tmp_826: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_827: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} Tmp_829: int;
  var {:pointer} sdv_690: int;
  var {:pointer} oldIrp: int;
  var {:scalar} pollIrql_9: int;
  var {:pointer} Tmp_830: int;
  var {:pointer} Extension_38: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_1: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} IntervalTimer: int;
  var {:pointer} TotalTimer: int;
  var {:scalar} Starter: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_804: int;
  var vslice_dummy_var_805: int;
  var vslice_dummy_var_806: int;
  var vslice_dummy_var_807: int;
  var vslice_dummy_var_808: int;
  var vslice_dummy_var_809: int;
  var vslice_dummy_var_810: int;
  var vslice_dummy_var_811: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;

  anon0:
    call {:si_unique_call 2888} newIrp := __HAVOC_malloc(4);
    call {:si_unique_call 2889} vslice_dummy_var_804 := __HAVOC_malloc(4);
    Extension_38 := actual_Extension_38;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_1 := actual_CurrentOpIrp_1;
    QueueToProcess_1 := actual_QueueToProcess_1;
    IntervalTimer := actual_IntervalTimer;
    TotalTimer := actual_TotalTimer;
    Starter := actual_Starter;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 2890} Tmp_826 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_14 := RefType;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_229;
    call {:si_unique_call 2891} sdv_688 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_229);
    assume {:nonnull} sdv_688 != 0;
    assume sdv_688 > 0;
    s_p_e_c_i_a_l_13 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_688)));
    assume {:nonnull} s_p_e_c_i_a_l_13 != 0;
    assume s_p_e_c_i_a_l_13 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 2892} Tmp_829 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    call {:si_unique_call 2893} sdv_KeAcquireSpinLock(0, Tmp_829);
    assume {:nonnull} Tmp_829 != 0;
    assume Tmp_829 > 0;
    havoc pollIrql_9;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant316;
    call {:si_unique_call 2894} vslice_dummy_var_811 := CyzGrabImmediateFromIsr(Extension_38);
    goto L22;

  L22:
    call {:si_unique_call 2895} sdv_KeReleaseSpinLock(0, pollIrql_9);
    goto L12;

  L12:
    call {:si_unique_call 2896} CyzRundownIrpRefs(CurrentOpIrp_1, IntervalTimer, TotalTimer, Extension_38);
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_230;
    call {:si_unique_call 2897} sdv_690 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_230);
    assume {:nonnull} sdv_690 != 0;
    assume sdv_690 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_830;
    assume {:nonnull} Tmp_830 != 0;
    assume Tmp_830 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_827;
    assume {:nonnull} Tmp_827 != 0;
    assume Tmp_827 > 0;
    goto L35;

  L35:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    call {:si_unique_call 2898} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_826 := strConst__li2bpl3;
    call {:si_unique_call 2899} vslice_dummy_var_808 := CyzDbgPrintEx(9, Tmp_826);
    call {:si_unique_call 2900} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 2901} CyzIRPEpilogue(Extension_38);
    goto L1;

  L1:
    return;

  anon25_Then:
    call {:si_unique_call 2902} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant314;
    call {:si_unique_call 2903} CyzGetNextImmediate(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  L44:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant381;
    call {:si_unique_call 2904} vslice_dummy_var_807 := CyzStartRead(Extension_38);
    goto L1;

  anon28_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant194;
    call {:si_unique_call 2905} vslice_dummy_var_806 := CyzStartWrite#1(Extension_38);
    goto L1;

  anon27_Then:
    goto L1;

  anon31_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant144;
    call {:si_unique_call 2906} CyzGetNextIrp(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  anon26_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant197;
    call {:si_unique_call 2907} CyzGetNextWrite(CurrentOpIrp_1, QueueToProcess_1, newIrp, 1, Extension_38);
    goto L44;

  anon33_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L35;

  anon24_Then:
    call {:si_unique_call 2908} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon30_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant457;
    call {:si_unique_call 2909} vslice_dummy_var_810 := CyzGrabReadFromIsr(Extension_38);
    goto L22;

  anon29_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant202;
    call {:si_unique_call 2910} vslice_dummy_var_809 := CyzGrabWriteFromIsr(Extension_38);
    goto L22;

  anon23_Then:
    assume {:IndirectCall} true;
    assume SynchRoutine == li2bplFunctionConstant195;
    call {:si_unique_call 2911} vslice_dummy_var_805 := CyzGrabXoffFromIsr(Extension_38);
    goto L22;

  anon32_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "CyzTryToCompleteCurrent"} CyzTryToCompleteCurrent#1(actual_Extension_38: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_1: int, actual_QueueToProcess_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_Starter: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzStartWrite"} CyzStartWrite#0(actual_Extension_40: int) returns (Tmp_873: int)
{
  var {:pointer} Tmp_874: int;
  var {:pointer} s_p_e_c_i_a_l_21: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} s_p_e_c_i_a_l_22: int;
  var {:pointer} Tmp_875: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_876: int;
  var {:pointer} sdv_741: int;
  var {:pointer} sdv_742: int;
  var {:scalar} OldIrql_8: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_23: int;
  var {:pointer} sdv_744: int;
  var {:pointer} Tmp_877: int;
  var {:pointer} sdv_745: int;
  var {:pointer} s_p_e_c_i_a_l_24: int;
  var {:pointer} Tmp_878: int;
  var {:scalar} s_p_e_c_i_a_l_25: int;
  var {:pointer} Tmp_879: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} pollIrql_10: int;
  var {:scalar} Tmp_880: int;
  var {:scalar} s_p_e_c_i_a_l_26: int;
  var {:pointer} sdv_748: int;
  var {:pointer} Extension_40: int;
  var vslice_dummy_var_812: int;
  var vslice_dummy_var_813: int;
  var vslice_dummy_var_814: int;
  var vslice_dummy_var_815: int;
  var vslice_dummy_var_816: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;

  anon0:
    call {:si_unique_call 2912} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2913} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2914} Timeouts_1 := __HAVOC_malloc(20);
    Extension_40 := actual_Extension_40;
    call {:si_unique_call 2915} Tmp_875 := __HAVOC_malloc(76);
    call {:si_unique_call 2916} Tmp_877 := __HAVOC_malloc(80);
    SetFirstStatus := 0;
    Tmp_877 := strConst__li2bpl208;
    call {:si_unique_call 2917} vslice_dummy_var_815 := CyzDbgPrintEx(2, Tmp_877);
    goto L15;

  L15:
    call {:si_unique_call 2918} Tmp_874, FirstStatus, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_876, sdv_742, OldIrql_8, sdv_745, Tmp_878, Tmp_880 := CyzStartWrite#0_loop_L15(Tmp_874, FirstStatus, TotalTime_1, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_876, sdv_742, OldIrql_8, NewIrp_3, sdv_745, Tmp_878, Timeouts_1, Tmp_880, Extension_40);
    goto L15_last;

  L15_last:
    call {:si_unique_call 2943} Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    call {:si_unique_call 2944} IoAcquireCancelSpinLock(Tmp_874);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc OldIrql_8;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_231;
    call {:si_unique_call 2919} sdv_742 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_231);
    assume {:nonnull} sdv_742 != 0;
    assume sdv_742 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    s_p_e_c_i_a_l_23 := 16;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_232;
    call {:si_unique_call 2920} sdv_744 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_232);
    assume {:nonnull} sdv_744 != 0;
    assume sdv_744 > 0;
    s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_744)));
    assume {:nonnull} s_p_e_c_i_a_l_21 != 0;
    assume s_p_e_c_i_a_l_21 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc Tmp_879;
    assume {:nonnull} Tmp_879 != 0;
    assume Tmp_879 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume false;
    return;

  anon22_Then:
    call {:si_unique_call 2921} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;

  L41:
    UseATimer_1 := 0;
    call {:si_unique_call 2922} Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    call {:si_unique_call 2923} sdv_KeAcquireSpinLock(0, Tmp_874);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc OldIrql_8;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2924} sdv_KeReleaseSpinLock(0, OldIrql_8);
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L52;

  L52:
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_233;
    call {:si_unique_call 2925} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_233);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_880;
    goto L60;

  L60:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_234;
    call {:si_unique_call 2926} sdv_745 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_234);
    assume {:nonnull} sdv_745 != 0;
    assume sdv_745 > 0;
    call {:si_unique_call 2927} Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    call {:si_unique_call 2928} IoAcquireCancelSpinLock(Tmp_874);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc OldIrql_8;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc Tmp_876;
    assume {:nonnull} Tmp_876 != 0;
    assume Tmp_876 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2929} IoReleaseCancelSpinLock(OldIrql_8);
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc Tmp_878;
    assume {:nonnull} Tmp_878 != 0;
    assume Tmp_878 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    call {:si_unique_call 2930} CyzGetNextWrite(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_40), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_40), NewIrp_3, 1, Extension_40);
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L80;

  L80:
    Tmp_875 := strConst__li2bpl207;
    call {:si_unique_call 2931} vslice_dummy_var_816 := CyzDbgPrintEx(2, Tmp_875);
    Tmp_873 := FirstStatus;
    return;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L76;

  anon28_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L88;

  L88:
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_235;
    call {:si_unique_call 2932} vslice_dummy_var_812 := sdv_IoSetCancelRoutine(vslice_dummy_var_235, li2bplFunctionConstant196);
    s_p_e_c_i_a_l_25 := 2;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_236;
    call {:si_unique_call 2933} sdv_741 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_236);
    assume {:nonnull} sdv_741 != 0;
    assume sdv_741 > 0;
    s_p_e_c_i_a_l_24 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_741)));
    assume {:nonnull} s_p_e_c_i_a_l_24 != 0;
    assume s_p_e_c_i_a_l_24 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    call {:si_unique_call 2934} vslice_dummy_var_813 := CyzSetTimer(WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_40), TotalTime_1, TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_40), Extension_40);
    s_p_e_c_i_a_l_26 := 4;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_237;
    call {:si_unique_call 2935} sdv_748 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_237);
    assume {:nonnull} sdv_748 != 0;
    assume sdv_748 > 0;
    s_p_e_c_i_a_l_22 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_748)));
    assume {:nonnull} s_p_e_c_i_a_l_22 != 0;
    assume s_p_e_c_i_a_l_22 > 0;
    goto L100;

  L100:
    call {:si_unique_call 2936} Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    call {:si_unique_call 2937} sdv_KeAcquireSpinLock(0, Tmp_874);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc pollIrql_10;
    call {:si_unique_call 2938} vslice_dummy_var_814 := CyzGiveWriteToIsr(Extension_40);
    call {:si_unique_call 2939} sdv_KeReleaseSpinLock(0, pollIrql_10);
    call {:si_unique_call 2940} IoReleaseCancelSpinLock(OldIrql_8);
    goto L80;

  anon30_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L100;

  anon25_Then:
    assume {:partition} SetFirstStatus == 0;
    call {:si_unique_call 2941} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L88;

  anon27_Then:
    Tmp_880 := 1;
    goto L60;

  anon23_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L61;

  anon24_Then:
    goto L52;

  anon21_Then:
    call {:si_unique_call 2942} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;
}



procedure {:origName "CyzStartWrite"} CyzStartWrite#0(actual_Extension_40: int) returns (Tmp_873: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:origName "CyzStartWrite"} CyzStartWrite#1(actual_Extension_40: int) returns (Tmp_873: int)
{
  var {:pointer} Tmp_874: int;
  var {:pointer} s_p_e_c_i_a_l_21: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} s_p_e_c_i_a_l_22: int;
  var {:pointer} Tmp_875: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_876: int;
  var {:pointer} sdv_741: int;
  var {:pointer} sdv_742: int;
  var {:scalar} OldIrql_8: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_23: int;
  var {:pointer} sdv_744: int;
  var {:pointer} Tmp_877: int;
  var {:pointer} sdv_745: int;
  var {:pointer} s_p_e_c_i_a_l_24: int;
  var {:pointer} Tmp_878: int;
  var {:scalar} s_p_e_c_i_a_l_25: int;
  var {:pointer} Tmp_879: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} pollIrql_10: int;
  var {:scalar} Tmp_880: int;
  var {:scalar} s_p_e_c_i_a_l_26: int;
  var {:pointer} sdv_748: int;
  var {:pointer} Extension_40: int;
  var vslice_dummy_var_817: int;
  var vslice_dummy_var_818: int;
  var vslice_dummy_var_819: int;
  var vslice_dummy_var_820: int;
  var vslice_dummy_var_821: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;

  anon0:
    call {:si_unique_call 2945} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2946} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2947} Timeouts_1 := __HAVOC_malloc(20);
    Extension_40 := actual_Extension_40;
    call {:si_unique_call 2948} Tmp_875 := __HAVOC_malloc(76);
    call {:si_unique_call 2949} Tmp_877 := __HAVOC_malloc(80);
    SetFirstStatus := 0;
    Tmp_877 := strConst__li2bpl208;
    call {:si_unique_call 2950} vslice_dummy_var_820 := CyzDbgPrintEx(2, Tmp_877);
    goto L15;

  L15:
    call {:si_unique_call 2951} Tmp_874, s_p_e_c_i_a_l_21, FirstStatus, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_876, sdv_742, OldIrql_8, s_p_e_c_i_a_l_23, sdv_744, sdv_745, Tmp_878, Tmp_879, Tmp_880 := CyzStartWrite#1_loop_L15(Tmp_874, s_p_e_c_i_a_l_21, FirstStatus, TotalTime_1, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_876, sdv_742, OldIrql_8, NewIrp_3, s_p_e_c_i_a_l_23, sdv_744, sdv_745, Tmp_878, Tmp_879, Timeouts_1, Tmp_880, Extension_40);
    goto L15_last;

  L15_last:
    call {:si_unique_call 2977} Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    call {:si_unique_call 2978} IoAcquireCancelSpinLock(Tmp_874);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc OldIrql_8;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_238;
    call {:si_unique_call 2952} sdv_742 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_238);
    assume {:nonnull} sdv_742 != 0;
    assume sdv_742 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    s_p_e_c_i_a_l_23 := 16;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_239;
    call {:si_unique_call 2953} sdv_744 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_239);
    assume {:nonnull} sdv_744 != 0;
    assume sdv_744 > 0;
    s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_744)));
    assume {:nonnull} s_p_e_c_i_a_l_21 != 0;
    assume s_p_e_c_i_a_l_21 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc Tmp_879;
    assume {:nonnull} Tmp_879 != 0;
    assume Tmp_879 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    call {:si_unique_call 2954} CyzTryToCompleteCurrent#0(Extension_40, li2bplFunctionConstant195, OldIrql_8, -1073741816, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(Extension_40), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(Extension_40), 0, 0, 16);
    goto L41;

  L41:
    UseATimer_1 := 0;
    call {:si_unique_call 2955} Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    call {:si_unique_call 2956} sdv_KeAcquireSpinLock(0, Tmp_874);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc OldIrql_8;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2957} sdv_KeReleaseSpinLock(0, OldIrql_8);
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L52;

  L52:
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_240;
    call {:si_unique_call 2958} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_240);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_880;
    goto L60;

  L60:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_241;
    call {:si_unique_call 2959} sdv_745 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_241);
    assume {:nonnull} sdv_745 != 0;
    assume sdv_745 > 0;
    call {:si_unique_call 2960} Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    call {:si_unique_call 2961} IoAcquireCancelSpinLock(Tmp_874);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc OldIrql_8;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc Tmp_876;
    assume {:nonnull} Tmp_876 != 0;
    assume Tmp_876 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 2962} IoReleaseCancelSpinLock(OldIrql_8);
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc Tmp_878;
    assume {:nonnull} Tmp_878 != 0;
    assume Tmp_878 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    call {:si_unique_call 2963} CyzGetNextWrite(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(Extension_40), WriteQueue__CYZ_DEVICE_EXTENSION(Extension_40), NewIrp_3, 1, Extension_40);
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto L80;

  L80:
    Tmp_875 := strConst__li2bpl207;
    call {:si_unique_call 2964} vslice_dummy_var_821 := CyzDbgPrintEx(2, Tmp_875);
    Tmp_873 := FirstStatus;
    return;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L76;

  anon28_Then:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L88;

  L88:
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_242;
    call {:si_unique_call 2965} vslice_dummy_var_817 := sdv_IoSetCancelRoutine(vslice_dummy_var_242, li2bplFunctionConstant196);
    s_p_e_c_i_a_l_25 := 2;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_243;
    call {:si_unique_call 2966} sdv_741 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_243);
    assume {:nonnull} sdv_741 != 0;
    assume sdv_741 > 0;
    s_p_e_c_i_a_l_24 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_741)));
    assume {:nonnull} s_p_e_c_i_a_l_24 != 0;
    assume s_p_e_c_i_a_l_24 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    call {:si_unique_call 2967} vslice_dummy_var_818 := CyzSetTimer(WriteRequestTotalTimer__CYZ_DEVICE_EXTENSION(Extension_40), TotalTime_1, TotalWriteTimeoutDpc__CYZ_DEVICE_EXTENSION(Extension_40), Extension_40);
    s_p_e_c_i_a_l_26 := 4;
    assume {:nonnull} Extension_40 != 0;
    assume Extension_40 > 0;
    havoc vslice_dummy_var_244;
    call {:si_unique_call 2968} sdv_748 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_244);
    assume {:nonnull} sdv_748 != 0;
    assume sdv_748 > 0;
    s_p_e_c_i_a_l_22 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_748)));
    assume {:nonnull} s_p_e_c_i_a_l_22 != 0;
    assume s_p_e_c_i_a_l_22 > 0;
    goto L100;

  L100:
    call {:si_unique_call 2969} Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    call {:si_unique_call 2970} sdv_KeAcquireSpinLock(0, Tmp_874);
    assume {:nonnull} Tmp_874 != 0;
    assume Tmp_874 > 0;
    havoc pollIrql_10;
    call {:si_unique_call 2971} vslice_dummy_var_819 := CyzGiveWriteToIsr(Extension_40);
    call {:si_unique_call 2972} sdv_KeReleaseSpinLock(0, pollIrql_10);
    call {:si_unique_call 2973} IoReleaseCancelSpinLock(OldIrql_8);
    goto L80;

  anon30_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L100;

  anon25_Then:
    assume {:partition} SetFirstStatus == 0;
    call {:si_unique_call 2974} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L88;

  anon27_Then:
    Tmp_880 := 1;
    goto L60;

  anon23_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L61;

  anon24_Then:
    goto L52;

  anon22_Then:
    call {:si_unique_call 2975} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;

  anon21_Then:
    call {:si_unique_call 2976} IoReleaseCancelSpinLock(OldIrql_8);
    goto L41;
}



procedure {:origName "CyzStartWrite"} CyzStartWrite#1(actual_Extension_40: int) returns (Tmp_873: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0;
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation CyzIssueCmd_loop_L35(in_s_p_e_c_i_a_l_2: int, in_nextQuery: int)
{

  entry:
    goto L35, exit;

  exit:
    return;

  L35:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_2 != 0;
    assume in_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_2 != 0;
    assume in_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_2 != 0;
    assume in_s_p_e_c_i_a_l_2 > 0;
    goto anon31_Then;

  anon31_Then:
    goto anon31_Then_dummy;

  anon31_Then_dummy:
    call {:si_unique_call 2979} {:si_old_unique_call 1} CyzIssueCmd_loop_L35(in_s_p_e_c_i_a_l_2, in_nextQuery);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L35(in_s_p_e_c_i_a_l_2: int, in_nextQuery: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzIssueCmd_loop_L88(in_s_p_e_c_i_a_l_4: int, in_nextQuery: int)
{

  entry:
    goto L88, exit;

  exit:
    return;

  L88:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_4 != 0;
    assume in_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_4 != 0;
    assume in_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_4 != 0;
    assume in_s_p_e_c_i_a_l_4 > 0;
    goto anon33_Then;

  anon33_Then:
    goto anon33_Then_dummy;

  anon33_Then_dummy:
    call {:si_unique_call 2980} {:si_old_unique_call 1} CyzIssueCmd_loop_L88(in_s_p_e_c_i_a_l_4, in_nextQuery);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L88(in_s_p_e_c_i_a_l_4: int, in_nextQuery: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzIssueCmd_loop_L81(in_interval100ms: int, in_Tmp_125: int, in_sdv_108: int, in_sdv_109: int, in_difference: int, in_s_p_e_c_i_a_l_4: int, in_startOfSpin: int, in_nextQuery: int) returns (out_Tmp_125: int, out_sdv_108: int, out_sdv_109: int, out_s_p_e_c_i_a_l_4: int)
{

  entry:
    out_Tmp_125, out_sdv_108, out_sdv_109, out_s_p_e_c_i_a_l_4 := in_Tmp_125, in_sdv_108, in_sdv_109, in_s_p_e_c_i_a_l_4;
    goto L81, exit;

  exit:
    return;

  L81:
    call {:si_unique_call 2981} out_sdv_108 := corral_nondet();
    goto anon27_Else;

  anon27_Else:
    assume {:partition} BAND(out_sdv_108, 255) != 0;
    out_Tmp_125 := KeTickCount;
    assume {:nonnull} out_Tmp_125 != 0;
    assume out_Tmp_125 > 0;
    havoc out_s_p_e_c_i_a_l_4;
    goto L88;

  L88:
    call {:si_unique_call 2983} CyzIssueCmd_loop_L88(out_s_p_e_c_i_a_l_4, in_nextQuery);
    goto L88_last;

  L88_last:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_4 != 0;
    assume out_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_4 != 0;
    assume out_s_p_e_c_i_a_l_4 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_4 != 0;
    assume out_s_p_e_c_i_a_l_4 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    call {:si_unique_call 2982} out_sdv_109 := corral_nondet();
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_interval100ms != 0;
    assume in_interval100ms > 0;
    goto anon28_Then;

  anon28_Then:
    goto anon28_Then_dummy;

  anon28_Then_dummy:
    call {:si_unique_call 2984} {:si_old_unique_call 1} out_Tmp_125, out_sdv_108, out_sdv_109, out_s_p_e_c_i_a_l_4 := CyzIssueCmd_loop_L81(in_interval100ms, out_Tmp_125, out_sdv_108, out_sdv_109, in_difference, out_s_p_e_c_i_a_l_4, in_startOfSpin, in_nextQuery);
    return;

  anon33_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L81(in_interval100ms: int, in_Tmp_125: int, in_sdv_108: int, in_sdv_109: int, in_difference: int, in_s_p_e_c_i_a_l_4: int, in_startOfSpin: int, in_nextQuery: int) returns (out_Tmp_125: int, out_sdv_108: int, out_sdv_109: int, out_s_p_e_c_i_a_l_4: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzIssueCmd_loop_L74(in_s_p_e_c_i_a_l_3: int, in_startOfSpin: int)
{

  entry:
    goto L74, exit;

  exit:
    return;

  L74:
    assume {:nonnull} in_s_p_e_c_i_a_l_3 != 0;
    assume in_s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_3 != 0;
    assume in_s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_3 != 0;
    assume in_s_p_e_c_i_a_l_3 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    goto anon32_Then;

  anon32_Then:
    goto anon32_Then_dummy;

  anon32_Then_dummy:
    call {:si_unique_call 2985} {:si_old_unique_call 1} CyzIssueCmd_loop_L74(in_s_p_e_c_i_a_l_3, in_startOfSpin);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L74(in_s_p_e_c_i_a_l_3: int, in_startOfSpin: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzIssueCmd_loop_L27(in_interval100ms: int, in_sdv_106: int, in_Tmp_129: int, in_sdv_107: int, in_s_p_e_c_i_a_l_2: int, in_difference: int, in_startOfSpin: int, in_nextQuery: int) returns (out_sdv_106: int, out_Tmp_129: int, out_sdv_107: int, out_s_p_e_c_i_a_l_2: int)
{

  entry:
    out_sdv_106, out_Tmp_129, out_sdv_107, out_s_p_e_c_i_a_l_2 := in_sdv_106, in_Tmp_129, in_sdv_107, in_s_p_e_c_i_a_l_2;
    goto L27, exit;

  exit:
    return;

  L27:
    call {:si_unique_call 2986} out_sdv_106 := corral_nondet();
    goto anon23_Else;

  anon23_Else:
    assume {:partition} BAND(out_sdv_106, 255) != 0;
    out_Tmp_129 := KeTickCount;
    assume {:nonnull} out_Tmp_129 != 0;
    assume out_Tmp_129 > 0;
    havoc out_s_p_e_c_i_a_l_2;
    goto L35;

  L35:
    call {:si_unique_call 2988} CyzIssueCmd_loop_L35(out_s_p_e_c_i_a_l_2, in_nextQuery);
    goto L35_last;

  L35_last:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_2 != 0;
    assume out_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_2 != 0;
    assume out_s_p_e_c_i_a_l_2 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_2 != 0;
    assume out_s_p_e_c_i_a_l_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    call {:si_unique_call 2987} out_sdv_107 := corral_nondet();
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_interval100ms != 0;
    assume in_interval100ms > 0;
    goto anon24_Then;

  anon24_Then:
    goto anon24_Then_dummy;

  anon24_Then_dummy:
    call {:si_unique_call 2989} {:si_old_unique_call 1} out_sdv_106, out_Tmp_129, out_sdv_107, out_s_p_e_c_i_a_l_2 := CyzIssueCmd_loop_L27(in_interval100ms, out_sdv_106, out_Tmp_129, out_sdv_107, out_s_p_e_c_i_a_l_2, in_difference, in_startOfSpin, in_nextQuery);
    return;

  anon31_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L27(in_interval100ms: int, in_sdv_106: int, in_Tmp_129: int, in_sdv_107: int, in_s_p_e_c_i_a_l_2: int, in_difference: int, in_startOfSpin: int, in_nextQuery: int) returns (out_sdv_106: int, out_Tmp_129: int, out_sdv_107: int, out_s_p_e_c_i_a_l_2: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzIssueCmd_loop_L20(in_s_p_e_c_i_a_l_1: int, in_startOfSpin: int)
{

  entry:
    goto L20, exit;

  exit:
    return;

  L20:
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_1 != 0;
    assume in_s_p_e_c_i_a_l_1 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    goto anon30_Then;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    call {:si_unique_call 2990} {:si_old_unique_call 1} CyzIssueCmd_loop_L20(in_s_p_e_c_i_a_l_1, in_startOfSpin);
    return;
}



procedure {:LoopProcedure} CyzIssueCmd_loop_L20(in_s_p_e_c_i_a_l_1: int, in_startOfSpin: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzInternalIoControl_loop_L126(in_pDevExt_1: int, in_Tmp_139: int, in_cap: int, in_Tmp_141: int, in_Tmp_143: int, in_Tmp_144: int) returns (out_Tmp_139: int, out_cap: int, out_Tmp_141: int, out_Tmp_143: int, out_Tmp_144: int)
{

  entry:
    out_Tmp_139, out_cap, out_Tmp_141, out_Tmp_143, out_Tmp_144 := in_Tmp_139, in_cap, in_Tmp_141, in_Tmp_143, in_Tmp_144;
    goto L126, exit;

  exit:
    return;

  L126:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon36_Else;

  anon36_Else:
    assume {:partition} 7 > out_cap;
    out_Tmp_141 := out_cap;
    assume {:nonnull} in_pDevExt_1 != 0;
    assume in_pDevExt_1 > 0;
    havoc out_Tmp_139;
    assume {:nonnull} out_Tmp_139 != 0;
    assume out_Tmp_139 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    out_Tmp_144 := out_cap;
    assume {:nonnull} in_pDevExt_1 != 0;
    assume in_pDevExt_1 > 0;
    havoc out_Tmp_143;
    assume {:nonnull} out_Tmp_143 != 0;
    assume out_Tmp_143 > 0;
    assume {:nonnull} in_pDevExt_1 != 0;
    assume in_pDevExt_1 > 0;
    goto anon43_Else;

  anon43_Else:
    goto L129;

  L129:
    out_cap := out_cap + 1;
    goto L129_dummy;

  L129_dummy:
    havoc out_cap;
    return;

  anon42_Then:
    goto L129;
}



procedure {:LoopProcedure} CyzInternalIoControl_loop_L126(in_pDevExt_1: int, in_Tmp_139: int, in_cap: int, in_Tmp_141: int, in_Tmp_143: int, in_Tmp_144: int) returns (out_Tmp_139: int, out_cap: int, out_Tmp_141: int, out_Tmp_143: int, out_Tmp_144: int);
  free ensures {:va_keep} out_Tmp_141 == in_cap || out_Tmp_141 == in_Tmp_141;
  free ensures {:va_keep} out_Tmp_144 == in_cap || out_Tmp_144 == in_Tmp_144;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzCleanLists_loop_L15(in_i: int, in_Tmp_174: int, in_pDevExt_2: int, in_Tmp_177: int, in_Tmp_178: int, in_pDispatch_1: int) returns (out_i: int, out_Tmp_174: int, out_Tmp_177: int, out_Tmp_178: int)
{

  entry:
    out_i, out_Tmp_174, out_Tmp_177, out_Tmp_178 := in_i, in_Tmp_174, in_Tmp_177, in_Tmp_178;
    goto L15, exit;

  exit:
    return;

  L15:
    assume {:nonnull} in_pDispatch_1 != 0;
    assume in_pDispatch_1 > 0;
    goto anon14_Else;

  anon14_Else:
    assume {:nonnull} in_pDevExt_2 != 0;
    assume in_pDevExt_2 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    out_Tmp_174 := out_i;
    assume {:nonnull} in_pDevExt_2 != 0;
    assume in_pDevExt_2 > 0;
    havoc out_Tmp_177;
    assume {:nonnull} out_Tmp_177 != 0;
    assume out_Tmp_177 > 0;
    havoc out_Tmp_178;
    assume {:nonnull} out_Tmp_178 != 0;
    assume out_Tmp_178 > 0;
    goto anon18_Else;

  anon18_Else:
    goto L18;

  L18:
    out_i := out_i + 1;
    goto L18_dummy;

  L18_dummy:
    havoc out_i;
    return;

  anon16_Then:
    goto L18;
}



procedure {:LoopProcedure} CyzCleanLists_loop_L15(in_i: int, in_Tmp_174: int, in_pDevExt_2: int, in_Tmp_177: int, in_Tmp_178: int, in_pDispatch_1: int) returns (out_i: int, out_Tmp_174: int, out_Tmp_177: int, out_Tmp_178: int);
  free ensures {:va_keep} out_Tmp_174 == in_i || out_Tmp_174 == in_Tmp_174;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzFindInitController_loop_L82(in_sdv_133: int, in_pCurDevObj: int, in_sdv_137: int, in_Tmp_206: int, in_pExtension: int, in_oldIrql: int, in_PConfig: int) returns (out_sdv_133: int, out_pCurDevObj: int, out_sdv_137: int, out_Tmp_206: int, out_pExtension: int, out_oldIrql: int)
{
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;

  entry:
    out_sdv_133, out_pCurDevObj, out_sdv_137, out_Tmp_206, out_pExtension, out_oldIrql := in_sdv_133, in_pCurDevObj, in_sdv_137, in_Tmp_206, in_pExtension, in_oldIrql;
    goto L82, exit;

  exit:
    return;

  L82:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_245;
    havoc vslice_dummy_var_246;
    havoc vslice_dummy_var_247;
    havoc vslice_dummy_var_248;
    call {:si_unique_call 2995} out_sdv_133 := CyzMemCompare(vslice_dummy_var_245, vslice_dummy_var_246, vslice_dummy_var_247, vslice_dummy_var_248);
    goto anon40_Then;

  anon40_Then:
    assume {:partition} out_sdv_133 != 0;
    goto L83;

  L83:
    call {:si_unique_call 2993} out_Tmp_206 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_206 != 0;
    assume out_Tmp_206 > 0;
    call {:si_unique_call 2994} sdv_KeAcquireSpinLock(0, out_Tmp_206);
    assume {:nonnull} out_Tmp_206 != 0;
    assume out_Tmp_206 > 0;
    havoc out_oldIrql;
    assume {:nonnull} out_pCurDevObj != 0;
    assume out_pCurDevObj > 0;
    havoc out_pCurDevObj;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 2992} out_sdv_137 := sdv_containing_record(out_pCurDevObj, 4);
    out_pExtension := out_sdv_137;
    goto L119;

  L119:
    call {:si_unique_call 2991} sdv_KeReleaseSpinLock(0, out_oldIrql);
    goto anon42_Else;

  anon42_Else:
    goto anon43_Else;

  anon43_Else:
    goto anon43_Else_dummy;

  anon43_Else_dummy:
    call {:si_unique_call 2996} {:si_old_unique_call 1} out_sdv_133, out_pCurDevObj, out_sdv_137, out_Tmp_206, out_pExtension, out_oldIrql := CyzFindInitController_loop_L82(out_sdv_133, out_pCurDevObj, out_sdv_137, out_Tmp_206, out_pExtension, out_oldIrql, in_PConfig);
    return;

  anon45_Then:
    goto L119;

  anon39_Then:
    goto L83;

  anon38_Then:
    goto L83;

  anon37_Then:
    goto L83;
}



procedure {:LoopProcedure} CyzFindInitController_loop_L82(in_sdv_133: int, in_pCurDevObj: int, in_sdv_137: int, in_Tmp_206: int, in_pExtension: int, in_oldIrql: int, in_PConfig: int) returns (out_sdv_133: int, out_pCurDevObj: int, out_sdv_137: int, out_Tmp_206: int, out_pExtension: int, out_oldIrql: int);
  modifies alloc, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_sdv_133 == 0 || out_sdv_133 == 2 || out_sdv_133 == 1 || out_sdv_133 == in_sdv_133;
  free ensures {:va_keep} out_sdv_137 == in_sdv_137;
  free ensures {:va_keep} out_pExtension == in_pExtension;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTryToDisableTimer_loop_L14(in_channel: int, in_Tmp_382: int, in_Tmp_383: int, in_pDispatch_5: int) returns (out_channel: int, out_Tmp_382: int, out_Tmp_383: int)
{

  entry:
    out_channel, out_Tmp_382, out_Tmp_383 := in_channel, in_Tmp_382, in_Tmp_383;
    goto L14, exit;

  exit:
    return;

  L14:
    assume {:nonnull} in_pDispatch_5 != 0;
    assume in_pDispatch_5 > 0;
    goto anon9_Else;

  anon9_Else:
    out_Tmp_382 := out_channel;
    assume {:nonnull} in_pDispatch_5 != 0;
    assume in_pDispatch_5 > 0;
    havoc out_Tmp_383;
    assume {:nonnull} out_Tmp_383 != 0;
    assume out_Tmp_383 > 0;
    goto anon12_Else;

  anon12_Else:
    out_channel := out_channel + 1;
    goto anon12_Else_dummy;

  anon12_Else_dummy:
    havoc out_channel;
    return;
}



procedure {:LoopProcedure} CyzTryToDisableTimer_loop_L14(in_channel: int, in_Tmp_382: int, in_Tmp_383: int, in_pDispatch_5: int) returns (out_channel: int, out_Tmp_382: int, out_Tmp_383: int);
  free ensures {:va_keep} out_Tmp_382 == in_channel || out_Tmp_382 == in_Tmp_382;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzClose_loop_L167(in_extension_5: int, in_vslice_dummy_var_202: int) returns (out_vslice_dummy_var_202: int)
{

  entry:
    out_vslice_dummy_var_202 := in_vslice_dummy_var_202;
    goto L167, exit;

  exit:
    return;

  L167:
    call {:si_unique_call 2997} out_vslice_dummy_var_202 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} in_extension_5 != 0;
    assume in_extension_5 > 0;
    goto anon37_Then;

  anon37_Then:
    goto anon37_Then_dummy;

  anon37_Then_dummy:
    call {:si_unique_call 2998} {:si_old_unique_call 1} out_vslice_dummy_var_202 := CyzClose_loop_L167(in_extension_5, out_vslice_dummy_var_202);
    return;
}



procedure {:LoopProcedure} CyzClose_loop_L167(in_extension_5: int, in_vslice_dummy_var_202: int) returns (out_vslice_dummy_var_202: int);
  free ensures {:va_keep} out_vslice_dummy_var_202 == 0 || out_vslice_dummy_var_202 == -1073741823 || out_vslice_dummy_var_202 == in_vslice_dummy_var_202;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzClose_loop_L127(in_flushCount: int, in_S_11: int, in_txempty: int, in_pollIrql_6: int, in_Tmp_394: int, in_vslice_dummy_var_198: int, in_vslice_dummy_var_199: int) returns (out_flushCount: int, out_pollIrql_6: int, out_Tmp_394: int, out_vslice_dummy_var_198: int, out_vslice_dummy_var_199: int)
{

  entry:
    out_flushCount, out_pollIrql_6, out_Tmp_394, out_vslice_dummy_var_198, out_vslice_dummy_var_199 := in_flushCount, in_pollIrql_6, in_Tmp_394, in_vslice_dummy_var_198, in_vslice_dummy_var_199;
    goto L127, exit;

  exit:
    return;

  L127:
    goto anon33_Else;

  anon33_Else:
    assume {:partition} out_flushCount != 0;
    call {:si_unique_call 3000} out_Tmp_394 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_394 != 0;
    assume out_Tmp_394 > 0;
    call {:si_unique_call 3001} sdv_KeAcquireSpinLock(0, out_Tmp_394);
    assume {:nonnull} out_Tmp_394 != 0;
    assume out_Tmp_394 > 0;
    havoc out_pollIrql_6;
    call {:si_unique_call 3002} out_vslice_dummy_var_198 := CyzCheckIfTxEmpty(in_S_11);
    call {:si_unique_call 3003} sdv_KeReleaseSpinLock(0, out_pollIrql_6);
    assume {:nonnull} in_txempty != 0;
    assume in_txempty > 0;
    goto anon34_Else;

  anon34_Else:
    call {:si_unique_call 2999} out_vslice_dummy_var_199 := KeDelayExecutionThread(0, 0, 0);
    out_flushCount := out_flushCount - 1;
    goto anon34_Else_dummy;

  anon34_Else_dummy:
    havoc out_flushCount;
    return;
}



procedure {:LoopProcedure} CyzClose_loop_L127(in_flushCount: int, in_S_11: int, in_txempty: int, in_pollIrql_6: int, in_Tmp_394: int, in_vslice_dummy_var_198: int, in_vslice_dummy_var_199: int) returns (out_flushCount: int, out_pollIrql_6: int, out_Tmp_394: int, out_vslice_dummy_var_198: int, out_vslice_dummy_var_199: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_vslice_dummy_var_198 == 0 || out_vslice_dummy_var_198 == in_vslice_dummy_var_198;
  free ensures {:va_keep} out_vslice_dummy_var_199 == 0 || out_vslice_dummy_var_199 == -1073741823 || out_vslice_dummy_var_199 == in_vslice_dummy_var_199;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzGetPortInfo_loop_L53(in_i_1: int, in_count: int, in_pPartialResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int)
{

  entry:
    out_i_1 := in_i_1;
    goto L53, exit;

  exit:
    return;

  L53:
    goto anon46_Else;

  anon46_Else:
    assume {:partition} in_count > out_i_1;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    goto L62;

  L62:
    out_i_1 := out_i_1 + 1;
    goto L62_dummy;

  L62_dummy:
    call {:si_unique_call 3004} {:si_old_unique_call 1} out_i_1 := CyzGetPortInfo_loop_L53(out_i_1, in_count, in_pPartialResourceDesc, in_PConfig_1);
    return;

  anon47_Then:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L62;

  anon48_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L62;
}



procedure {:LoopProcedure} CyzGetPortInfo_loop_L53(in_i_1: int, in_count: int, in_pPartialResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzGetPortInfo_loop_L73(in_i_1: int, in_count: int, in_pPartialTrResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int)
{

  entry:
    out_i_1 := in_i_1;
    goto L73, exit;

  exit:
    return;

  L73:
    goto anon49_Else;

  anon49_Else:
    assume {:partition} in_count > out_i_1;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    goto L81;

  L81:
    out_i_1 := out_i_1 + 1;
    goto L81_dummy;

  L81_dummy:
    call {:si_unique_call 3005} {:si_old_unique_call 1} out_i_1 := CyzGetPortInfo_loop_L73(out_i_1, in_count, in_pPartialTrResourceDesc, in_PConfig_1);
    return;

  anon50_Then:
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L81;

  anon51_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L81;
}



procedure {:LoopProcedure} CyzGetPortInfo_loop_L73(in_i_1: int, in_count: int, in_pPartialTrResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzPnpDispatch_loop_L179(in_allocLen: int, in_sdv_505: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int)
{

  entry:
    out_allocLen, out_curStrLen := in_allocLen, in_curStrLen;
    goto L179, exit;

  exit:
    return;

  L179:
    out_curStrLen := in_sdv_505;
    goto anon215_Else;

  anon215_Else:
    assume {:partition} out_curStrLen != 0;
    out_allocLen := out_allocLen + out_curStrLen * 2 + 2;
    goto anon215_Else_dummy;

  anon215_Else_dummy:
    havoc out_allocLen;
    return;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L179(in_allocLen: int, in_sdv_505: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int);
  free ensures {:va_keep} out_curStrLen == in_sdv_505 || out_curStrLen == in_curStrLen;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzPnpDispatch_loop_L353(in_gotMemory: int, in_pResList: int, in_Tmp_549: int, in_Tmp_554: int, in_Tmp_556: int, in_pLowerDevObj_3: int, in_pResDesc: int, in_Tmp_580: int, in_Tmp_583: int, in_j: int, in_Tmp_595: int, in_gotRuntime: int, in_vslice_dummy_var_350: int, in_vslice_dummy_var_351: int, in_vslice_dummy_var_352: int, in_vslice_dummy_var_353: int) returns (out_gotMemory: int, out_Tmp_549: int, out_Tmp_554: int, out_Tmp_556: int, out_pResDesc: int, out_Tmp_580: int, out_Tmp_583: int, out_j: int, out_Tmp_595: int, out_gotRuntime: int, out_vslice_dummy_var_350: int, out_vslice_dummy_var_351: int, out_vslice_dummy_var_352: int, out_vslice_dummy_var_353: int)
{

  entry:
    out_gotMemory, out_Tmp_549, out_Tmp_554, out_Tmp_556, out_pResDesc, out_Tmp_580, out_Tmp_583, out_j, out_Tmp_595, out_gotRuntime, out_vslice_dummy_var_350, out_vslice_dummy_var_351, out_vslice_dummy_var_352, out_vslice_dummy_var_353 := in_gotMemory, in_Tmp_549, in_Tmp_554, in_Tmp_556, in_pResDesc, in_Tmp_580, in_Tmp_583, in_j, in_Tmp_595, in_gotRuntime, in_vslice_dummy_var_350, in_vslice_dummy_var_351, in_vslice_dummy_var_352, in_vslice_dummy_var_353;
    goto L353, exit;

  exit:
    return;

  L353:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon162_Else;

  anon162_Else:
    out_Tmp_554 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_595;
    out_pResDesc := out_Tmp_595 + out_Tmp_554 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto L370;

  L370:
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} out_gotRuntime != 0;
    goto anon165_Else;

  anon165_Else:
    assume {:partition} out_gotMemory == 0;
    goto L371;

  L371:
    out_j := out_j + 1;
    goto L371_dummy;

  L371_dummy:
    call {:si_unique_call 3010} {:si_old_unique_call 1} out_gotMemory, out_Tmp_549, out_Tmp_554, out_Tmp_556, out_pResDesc, out_Tmp_580, out_Tmp_583, out_j, out_Tmp_595, out_gotRuntime, out_vslice_dummy_var_350, out_vslice_dummy_var_351, out_vslice_dummy_var_352, out_vslice_dummy_var_353 := CyzPnpDispatch_loop_L353(out_gotMemory, in_pResList, out_Tmp_549, out_Tmp_554, out_Tmp_556, in_pLowerDevObj_3, out_pResDesc, out_Tmp_580, out_Tmp_583, out_j, out_Tmp_595, out_gotRuntime, out_vslice_dummy_var_350, out_vslice_dummy_var_351, out_vslice_dummy_var_352, out_vslice_dummy_var_353);
    return;

  anon164_Then:
    assume {:partition} out_gotRuntime == 0;
    goto L371;

  anon202_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    out_gotRuntime := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_580 := strConst__li2bpl162;
    call {:si_unique_call 3006} out_vslice_dummy_var_352 := CyzDbgPrintEx(12, out_Tmp_580);
    goto L370;

  anon163_Then:
    out_gotMemory := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_583 := strConst__li2bpl163;
    call {:si_unique_call 3007} out_vslice_dummy_var_353 := CyzDbgPrintEx(12, out_Tmp_583);
    goto L370;

  anon203_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_549 := strConst__li2bpl161;
    call {:si_unique_call 3008} out_vslice_dummy_var_351 := CyzDbgPrintEx(12, out_Tmp_549);
    goto L370;

  anon212_Then:
    out_Tmp_556 := strConst__li2bpl142;
    call {:si_unique_call 3009} out_vslice_dummy_var_350 := CyzDbgPrintEx(12, out_Tmp_556);
    goto L370;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L353(in_gotMemory: int, in_pResList: int, in_Tmp_549: int, in_Tmp_554: int, in_Tmp_556: int, in_pLowerDevObj_3: int, in_pResDesc: int, in_Tmp_580: int, in_Tmp_583: int, in_j: int, in_Tmp_595: int, in_gotRuntime: int, in_vslice_dummy_var_350: int, in_vslice_dummy_var_351: int, in_vslice_dummy_var_352: int, in_vslice_dummy_var_353: int) returns (out_gotMemory: int, out_Tmp_549: int, out_Tmp_554: int, out_Tmp_556: int, out_pResDesc: int, out_Tmp_580: int, out_Tmp_583: int, out_j: int, out_Tmp_595: int, out_gotRuntime: int, out_vslice_dummy_var_350: int, out_vslice_dummy_var_351: int, out_vslice_dummy_var_352: int, out_vslice_dummy_var_353: int);
  free ensures {:va_keep} out_gotMemory == 1 || out_gotMemory == in_gotMemory;
  free ensures {:va_keep} out_gotRuntime == 1 || out_gotRuntime == in_gotRuntime;
  free ensures {:va_keep} out_vslice_dummy_var_350 == 0 || out_vslice_dummy_var_350 == in_vslice_dummy_var_350;
  free ensures {:va_keep} out_vslice_dummy_var_351 == 0 || out_vslice_dummy_var_351 == in_vslice_dummy_var_351;
  free ensures {:va_keep} out_vslice_dummy_var_352 == 0 || out_vslice_dummy_var_352 == in_vslice_dummy_var_352;
  free ensures {:va_keep} out_vslice_dummy_var_353 == 0 || out_vslice_dummy_var_353 == in_vslice_dummy_var_353;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzPnpDispatch_loop_L344(in_gotMemory: int, in_pResList: int, in_Tmp_547: int, in_Tmp_549: int, in_Tmp_554: int, in_Tmp_556: int, in_pLowerDevObj_3: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_580: int, in_Tmp_583: int, in_j: int, in_Tmp_595: int, in_gotRuntime: int, in_vslice_dummy_var_349: int, in_vslice_dummy_var_350: int, in_vslice_dummy_var_351: int, in_vslice_dummy_var_352: int, in_vslice_dummy_var_353: int) returns (out_gotMemory: int, out_Tmp_547: int, out_Tmp_549: int, out_Tmp_554: int, out_Tmp_556: int, out_pResDesc: int, out_listNum: int, out_Tmp_580: int, out_Tmp_583: int, out_j: int, out_Tmp_595: int, out_gotRuntime: int, out_vslice_dummy_var_349: int, out_vslice_dummy_var_350: int, out_vslice_dummy_var_351: int, out_vslice_dummy_var_352: int, out_vslice_dummy_var_353: int)
{

  entry:
    out_gotMemory, out_Tmp_547, out_Tmp_549, out_Tmp_554, out_Tmp_556, out_pResDesc, out_listNum, out_Tmp_580, out_Tmp_583, out_j, out_Tmp_595, out_gotRuntime, out_vslice_dummy_var_349, out_vslice_dummy_var_350, out_vslice_dummy_var_351, out_vslice_dummy_var_352, out_vslice_dummy_var_353 := in_gotMemory, in_Tmp_547, in_Tmp_549, in_Tmp_554, in_Tmp_556, in_pResDesc, in_listNum, in_Tmp_580, in_Tmp_583, in_j, in_Tmp_595, in_gotRuntime, in_vslice_dummy_var_349, in_vslice_dummy_var_350, in_vslice_dummy_var_351, in_vslice_dummy_var_352, in_vslice_dummy_var_353;
    goto L344, exit;

  exit:
    return;

  L344:
    assume {:nonnull} in_pReqList != 0;
    assume in_pReqList > 0;
    goto anon161_Else;

  anon161_Else:
    out_gotRuntime := 0;
    out_gotMemory := 0;
    out_Tmp_547 := strConst__li2bpl160;
    call {:si_unique_call 3012} out_vslice_dummy_var_349 := CyzDbgPrintEx(12, out_Tmp_547);
    out_j := 0;
    goto L353;

  L353:
    call {:si_unique_call 3011} out_gotMemory, out_Tmp_549, out_Tmp_554, out_Tmp_556, out_pResDesc, out_Tmp_580, out_Tmp_583, out_j, out_Tmp_595, out_gotRuntime, out_vslice_dummy_var_350, out_vslice_dummy_var_351, out_vslice_dummy_var_352, out_vslice_dummy_var_353 := CyzPnpDispatch_loop_L353(out_gotMemory, in_pResList, out_Tmp_549, out_Tmp_554, out_Tmp_556, in_pLowerDevObj_3, out_pResDesc, out_Tmp_580, out_Tmp_583, out_j, out_Tmp_595, out_gotRuntime, out_vslice_dummy_var_350, out_vslice_dummy_var_351, out_vslice_dummy_var_352, out_vslice_dummy_var_353);
    goto L353_last;

  L353_last:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    out_Tmp_554 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_595;
    out_pResDesc := out_Tmp_595 + out_Tmp_554 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon212_Then, anon212_Else;

  anon212_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon203_Then, anon203_Else;

  anon203_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon202_Then, anon202_Else;

  anon202_Else:
    goto L370;

  L370:
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:partition} out_gotRuntime != 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:partition} out_gotMemory == 0;
    goto L371;

  L371:
    out_j := out_j + 1;
    assume false;
    return;

  anon165_Then:
    assume {:partition} out_gotMemory != 0;
    goto L354;

  L354:
    out_listNum := out_listNum + 1;
    goto L354_dummy;

  L354_dummy:
    call {:si_unique_call 3017} {:si_old_unique_call 1} out_gotMemory, out_Tmp_547, out_Tmp_549, out_Tmp_554, out_Tmp_556, out_pResDesc, out_listNum, out_Tmp_580, out_Tmp_583, out_j, out_Tmp_595, out_gotRuntime, out_vslice_dummy_var_349, out_vslice_dummy_var_350, out_vslice_dummy_var_351, out_vslice_dummy_var_352, out_vslice_dummy_var_353 := CyzPnpDispatch_loop_L344(out_gotMemory, in_pResList, out_Tmp_547, out_Tmp_549, out_Tmp_554, out_Tmp_556, in_pLowerDevObj_3, out_pResDesc, out_listNum, in_pReqList, out_Tmp_580, out_Tmp_583, out_j, out_Tmp_595, out_gotRuntime, out_vslice_dummy_var_349, out_vslice_dummy_var_350, out_vslice_dummy_var_351, out_vslice_dummy_var_352, out_vslice_dummy_var_353);
    return;

  anon164_Then:
    assume {:partition} out_gotRuntime == 0;
    goto L371;

  anon202_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    out_gotRuntime := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_580 := strConst__li2bpl162;
    call {:si_unique_call 3013} out_vslice_dummy_var_352 := CyzDbgPrintEx(12, out_Tmp_580);
    goto L370;

  anon163_Then:
    out_gotMemory := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_583 := strConst__li2bpl163;
    call {:si_unique_call 3014} out_vslice_dummy_var_353 := CyzDbgPrintEx(12, out_Tmp_583);
    goto L370;

  anon203_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_549 := strConst__li2bpl161;
    call {:si_unique_call 3015} out_vslice_dummy_var_351 := CyzDbgPrintEx(12, out_Tmp_549);
    goto L370;

  anon212_Then:
    out_Tmp_556 := strConst__li2bpl142;
    call {:si_unique_call 3016} out_vslice_dummy_var_350 := CyzDbgPrintEx(12, out_Tmp_556);
    goto L370;

  anon162_Then:
    goto L354;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L344(in_gotMemory: int, in_pResList: int, in_Tmp_547: int, in_Tmp_549: int, in_Tmp_554: int, in_Tmp_556: int, in_pLowerDevObj_3: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_580: int, in_Tmp_583: int, in_j: int, in_Tmp_595: int, in_gotRuntime: int, in_vslice_dummy_var_349: int, in_vslice_dummy_var_350: int, in_vslice_dummy_var_351: int, in_vslice_dummy_var_352: int, in_vslice_dummy_var_353: int) returns (out_gotMemory: int, out_Tmp_547: int, out_Tmp_549: int, out_Tmp_554: int, out_Tmp_556: int, out_pResDesc: int, out_listNum: int, out_Tmp_580: int, out_Tmp_583: int, out_j: int, out_Tmp_595: int, out_gotRuntime: int, out_vslice_dummy_var_349: int, out_vslice_dummy_var_350: int, out_vslice_dummy_var_351: int, out_vslice_dummy_var_352: int, out_vslice_dummy_var_353: int);
  free ensures {:va_keep} out_gotMemory == 1 || out_gotMemory == 0 || out_gotMemory == in_gotMemory;
  free ensures {:va_keep} out_gotRuntime == 1 || out_gotRuntime == 0 || out_gotRuntime == in_gotRuntime;
  free ensures {:va_keep} out_vslice_dummy_var_349 == 0 || out_vslice_dummy_var_349 == in_vslice_dummy_var_349;
  free ensures {:va_keep} out_vslice_dummy_var_350 == 0 || out_vslice_dummy_var_350 == in_vslice_dummy_var_350;
  free ensures {:va_keep} out_vslice_dummy_var_351 == 0 || out_vslice_dummy_var_351 == in_vslice_dummy_var_351;
  free ensures {:va_keep} out_vslice_dummy_var_352 == 0 || out_vslice_dummy_var_352 == in_vslice_dummy_var_352;
  free ensures {:va_keep} out_vslice_dummy_var_353 == 0 || out_vslice_dummy_var_353 == in_vslice_dummy_var_353;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:SIextraRecBound 5} CyzPnpDispatch_loop_L462(in_Tmp_536: int, in_pDevExt_14: int, in_cap_1: int, in_Tmp_572: int, in_Tmp_573: int, in_pDevCaps: int, in_Tmp_611: int) returns (out_Tmp_536: int, out_cap_1: int, out_Tmp_572: int, out_Tmp_573: int, out_Tmp_611: int)
{

  entry:
    out_Tmp_536, out_cap_1, out_Tmp_572, out_Tmp_573, out_Tmp_611 := in_Tmp_536, in_cap_1, in_Tmp_572, in_Tmp_573, in_Tmp_611;
    goto L462, exit;

  exit:
    return;

  L462:
    assume {:CounterLoop 5} {:Counter "cap_1"} true;
    goto anon168_Else;

  anon168_Else:
    assume {:partition} 7 > out_cap_1;
    out_Tmp_611 := out_cap_1;
    assume {:nonnull} in_pDevExt_14 != 0;
    assume in_pDevExt_14 > 0;
    havoc out_Tmp_573;
    out_Tmp_536 := out_cap_1;
    assume {:nonnull} in_pDevCaps != 0;
    assume in_pDevCaps > 0;
    havoc out_Tmp_572;
    assume {:nonnull} out_Tmp_572 != 0;
    assume out_Tmp_572 > 0;
    assume {:nonnull} out_Tmp_573 != 0;
    assume out_Tmp_573 > 0;
    out_cap_1 := out_cap_1 + 1;
    goto anon168_Else_dummy;

  anon168_Else_dummy:
    call {:si_unique_call 3018} {:si_old_unique_call 1} out_Tmp_536, out_cap_1, out_Tmp_572, out_Tmp_573, out_Tmp_611 := CyzPnpDispatch_loop_L462(out_Tmp_536, in_pDevExt_14, out_cap_1, out_Tmp_572, out_Tmp_573, in_pDevCaps, out_Tmp_611);
    return;
}



procedure {:LoopProcedure} CyzPnpDispatch_loop_L462(in_Tmp_536: int, in_pDevExt_14: int, in_cap_1: int, in_Tmp_572: int, in_Tmp_573: int, in_pDevCaps: int, in_Tmp_611: int) returns (out_Tmp_536: int, out_cap_1: int, out_Tmp_572: int, out_Tmp_573: int, out_Tmp_611: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzCompareString_loop_L3(in_PString1: int, in_PString2: int, in_Count: int) returns (out_Count: int)
{

  entry:
    out_Count := in_Count;
    goto L3, exit;

  exit:
    return;

  L3:
    assume {:nonnull} in_PString1 != 0;
    assume in_PString1 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto L5;

  L5:
    assume {:nonnull} in_PString1 != 0;
    assume in_PString1 > 0;
    assume {:nonnull} in_PString2 != 0;
    assume in_PString2 > 0;
    goto anon11_Then;

  anon11_Then:
    out_Count := out_Count - 1;
    goto anon12_Then;

  anon12_Then:
    assume {:partition} out_Count != 0;
    goto anon12_Then_dummy;

  anon12_Then_dummy:
    havoc out_Count;
    return;

  anon9_Then:
    assume {:nonnull} in_PString2 != 0;
    assume in_PString2 > 0;
    goto anon10_Then;

  anon10_Then:
    goto L5;
}



procedure {:LoopProcedure} CyzCompareString_loop_L3(in_PString1: int, in_PString2: int, in_Count: int) returns (out_Count: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzStartPurge_loop_L5(in_Tmp_788: int, in_Tmp_789: int, in_Mask_2: int, in_Tmp_790: int, in_OldIrql_6: int, in_NewIrp_2: int, in_Tmp_791: int, in_pollIrql_8: int, in_Tmp_792: int, in_Extension_36: int, in_vslice_dummy_var_463: int) returns (out_Tmp_788: int, out_Tmp_789: int, out_Mask_2: int, out_Tmp_790: int, out_OldIrql_6: int, out_Tmp_791: int, out_pollIrql_8: int, out_Tmp_792: int, out_vslice_dummy_var_463: int)
{
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;

  entry:
    out_Tmp_788, out_Tmp_789, out_Mask_2, out_Tmp_790, out_OldIrql_6, out_Tmp_791, out_pollIrql_8, out_Tmp_792, out_vslice_dummy_var_463 := in_Tmp_788, in_Tmp_789, in_Mask_2, in_Tmp_790, in_OldIrql_6, in_Tmp_791, in_pollIrql_8, in_Tmp_792, in_vslice_dummy_var_463;
    goto L5, exit;

  exit:
    return;

  L5:
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc out_Tmp_792;
    assume {:nonnull} out_Tmp_792 != 0;
    assume out_Tmp_792 > 0;
    havoc out_Tmp_791;
    assume {:nonnull} out_Tmp_791 != 0;
    assume out_Tmp_791 > 0;
    havoc out_Mask_2;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(out_Mask_2, 1) != 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc vslice_dummy_var_250;
    call {:si_unique_call 3028} CyzKillAllReadsOrWrites(vslice_dummy_var_250, WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), CurrentWriteIrp__CYZ_DEVICE_EXTENSION(in_Extension_36));
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc vslice_dummy_var_251;
    call {:si_unique_call 3029} CyzKillAllReadsOrWrites(vslice_dummy_var_251, WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), CurrentXoffIrp__CYZ_DEVICE_EXTENSION(in_Extension_36));
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(out_Mask_2, 2) != 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc vslice_dummy_var_249;
    call {:si_unique_call 3027} CyzKillAllReadsOrWrites(vslice_dummy_var_249, ReadQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), CurrentReadIrp__CYZ_DEVICE_EXTENSION(in_Extension_36));
    goto L14;

  L14:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} BAND(out_Mask_2, 8) != 0;
    call {:si_unique_call 3020} out_Tmp_790 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_790 != 0;
    assume out_Tmp_790 > 0;
    call {:si_unique_call 3021} sdv_KeAcquireSpinLock(0, out_Tmp_790);
    assume {:nonnull} out_Tmp_790 != 0;
    assume out_Tmp_790 > 0;
    havoc out_OldIrql_6;
    call {:si_unique_call 3022} out_Tmp_790 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_790 != 0;
    assume out_Tmp_790 > 0;
    call {:si_unique_call 3023} sdv_KeAcquireSpinLock(0, out_Tmp_790);
    assume {:nonnull} out_Tmp_790 != 0;
    assume out_Tmp_790 > 0;
    havoc out_pollIrql_8;
    call {:si_unique_call 3024} out_vslice_dummy_var_463 := CyzPurgeInterruptBuff(in_Extension_36);
    call {:si_unique_call 3025} sdv_KeReleaseSpinLock(0, out_pollIrql_8);
    call {:si_unique_call 3026} sdv_KeReleaseSpinLock(0, out_OldIrql_6);
    goto L18;

  L18:
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc out_Tmp_789;
    assume {:nonnull} out_Tmp_789 != 0;
    assume out_Tmp_789 > 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    havoc out_Tmp_788;
    assume {:nonnull} out_Tmp_788 != 0;
    assume out_Tmp_788 > 0;
    assume {:nonnull} in_Extension_36 != 0;
    assume in_Extension_36 > 0;
    call {:si_unique_call 3019} CyzGetNextIrp(CurrentPurgeIrp__CYZ_DEVICE_EXTENSION(in_Extension_36), PurgeQueue__CYZ_DEVICE_EXTENSION(in_Extension_36), in_NewIrp_2, 1, in_Extension_36);
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    goto anon11_Then;

  anon11_Then:
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    call {:si_unique_call 3030} {:si_old_unique_call 1} out_Tmp_788, out_Tmp_789, out_Mask_2, out_Tmp_790, out_OldIrql_6, out_Tmp_791, out_pollIrql_8, out_Tmp_792, out_vslice_dummy_var_463 := CyzStartPurge_loop_L5(out_Tmp_788, out_Tmp_789, out_Mask_2, out_Tmp_790, out_OldIrql_6, in_NewIrp_2, out_Tmp_791, out_pollIrql_8, out_Tmp_792, in_Extension_36, out_vslice_dummy_var_463);
    return;

  anon10_Then:
    assume {:partition} BAND(out_Mask_2, 8) == 0;
    goto L18;

  anon9_Then:
    assume {:partition} BAND(out_Mask_2, 2) == 0;
    goto L14;

  anon12_Then:
    assume {:partition} BAND(out_Mask_2, 1) == 0;
    goto L7;
}



procedure {:LoopProcedure} CyzStartPurge_loop_L5(in_Tmp_788: int, in_Tmp_789: int, in_Mask_2: int, in_Tmp_790: int, in_OldIrql_6: int, in_NewIrp_2: int, in_Tmp_791: int, in_pollIrql_8: int, in_Tmp_792: int, in_Extension_36: int, in_vslice_dummy_var_463: int) returns (out_Tmp_788: int, out_Tmp_789: int, out_Mask_2: int, out_Tmp_790: int, out_OldIrql_6: int, out_Tmp_791: int, out_pollIrql_8: int, out_Tmp_792: int, out_vslice_dummy_var_463: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, stack_location, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} stack_location == 1 || stack_location == old(stack_location);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_vslice_dummy_var_463 == 0 || out_vslice_dummy_var_463 == in_vslice_dummy_var_463;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzPurgeInterruptBuff_loop_L20(in_rx_2: int, in_Tmp_796: int, in_rx_3: int, in_rxchar: int, in_Extension_37: int, in_Tmp_799: int) returns (out_rx_2: int, out_Tmp_796: int, out_rxchar: int, out_Tmp_799: int)
{

  entry:
    out_rx_2, out_Tmp_796, out_rxchar, out_Tmp_799 := in_rx_2, in_Tmp_796, in_rxchar, in_Tmp_799;
    goto L20, exit;

  exit:
    return;

  L20:
    goto anon14_Else;

  anon14_Else:
    assume {:partition} out_rx_2 != in_rx_3;
    out_Tmp_799 := out_rx_2;
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    havoc out_Tmp_796;
    call {:si_unique_call 3031} out_rxchar := corral_nondet();
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    out_rx_2 := 0;
    goto L32;

  L32:
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} in_Extension_37 != 0;
    assume in_Extension_37 > 0;
    goto anon17_Else_dummy;

  anon17_Else_dummy:
    goto L_BAF_0;

  L_BAF_0:
    call {:si_unique_call 3032} {:si_old_unique_call 1} out_rx_2, out_Tmp_796, out_rxchar, out_Tmp_799 := CyzPurgeInterruptBuff_loop_L20(out_rx_2, out_Tmp_796, in_rx_3, out_rxchar, in_Extension_37, out_Tmp_799);
    return;

  anon17_Then:
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    goto L_BAF_0;

  anon16_Then:
    goto anon16_Then_dummy;

  anon16_Then_dummy:
    goto L_BAF_0;

  anon15_Then:
    out_rx_2 := out_rx_2 + 1;
    goto L32;
}



procedure {:LoopProcedure} CyzPurgeInterruptBuff_loop_L20(in_rx_2: int, in_Tmp_796: int, in_rx_3: int, in_rxchar: int, in_Extension_37: int, in_Tmp_799: int) returns (out_rx_2: int, out_Tmp_796: int, out_rxchar: int, out_Tmp_799: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzUnstallIrps_loop_L16(in_Tmp_815: int, in_Tmp_816: int, in_sdv_678: int, in_Tmp_817: int, in_oldIrql_5: int, in_pIrpStack_5: int, in_Tmp_819: int, in_pIrp_1: int, in_pDevObj_2: int, in_pDrvObj_1: int, in_pIrpLink: int, in_PDevExt_7: int, in_vslice_dummy_var_469: int, in_vslice_dummy_var_470: int, in_vslice_dummy_var_471: int, in_vslice_dummy_var_472: int, in_vslice_dummy_var_473: int, in_vslice_dummy_var_474: int, in_vslice_dummy_var_475: int, in_vslice_dummy_var_476: int, in_vslice_dummy_var_477: int, in_vslice_dummy_var_478: int, in_vslice_dummy_var_479: int, in_vslice_dummy_var_480: int, in_vslice_dummy_var_481: int, in_vslice_dummy_var_482: int, in_vslice_dummy_var_483: int, in_vslice_dummy_var_484: int, in_vslice_dummy_var_485: int, in_vslice_dummy_var_486: int, in_vslice_dummy_var_487: int, in_vslice_dummy_var_488: int, in_vslice_dummy_var_489: int, in_vslice_dummy_var_490: int, in_vslice_dummy_var_491: int, in_vslice_dummy_var_492: int, in_vslice_dummy_var_493: int, in_vslice_dummy_var_494: int, in_vslice_dummy_var_495: int, in_vslice_dummy_var_496: int, in_vslice_dummy_var_497: int, in_vslice_dummy_var_498: int, in_vslice_dummy_var_499: int, in_vslice_dummy_var_500: int, in_vslice_dummy_var_501: int, in_vslice_dummy_var_502: int, in_vslice_dummy_var_503: int, in_vslice_dummy_var_504: int, in_vslice_dummy_var_505: int, in_vslice_dummy_var_506: int, in_vslice_dummy_var_507: int, in_vslice_dummy_var_508: int, in_vslice_dummy_var_509: int, in_vslice_dummy_var_510: int, in_vslice_dummy_var_511: int, in_vslice_dummy_var_512: int, in_vslice_dummy_var_513: int, in_vslice_dummy_var_514: int, in_vslice_dummy_var_515: int, in_vslice_dummy_var_516: int, in_vslice_dummy_var_517: int, in_vslice_dummy_var_518: int, in_vslice_dummy_var_519: int, in_vslice_dummy_var_520: int, in_vslice_dummy_var_521: int, in_vslice_dummy_var_522: int, in_vslice_dummy_var_523: int, in_vslice_dummy_var_524: int, in_vslice_dummy_var_525: int, in_vslice_dummy_var_526: int, in_vslice_dummy_var_527: int, in_vslice_dummy_var_528: int, in_vslice_dummy_var_529: int, in_vslice_dummy_var_530: int, in_vslice_dummy_var_531: int, in_vslice_dummy_var_532: int, in_vslice_dummy_var_533: int, in_vslice_dummy_var_534: int, in_vslice_dummy_var_535: int, in_vslice_dummy_var_536: int, in_vslice_dummy_var_537: int, in_vslice_dummy_var_538: int, in_vslice_dummy_var_539: int, in_vslice_dummy_var_540: int, in_vslice_dummy_var_541: int, in_vslice_dummy_var_542: int, in_vslice_dummy_var_543: int, in_vslice_dummy_var_544: int, in_vslice_dummy_var_545: int, in_vslice_dummy_var_546: int, in_vslice_dummy_var_547: int, in_vslice_dummy_var_548: int, in_vslice_dummy_var_549: int, in_vslice_dummy_var_550: int, in_vslice_dummy_var_551: int, in_vslice_dummy_var_552: int, in_vslice_dummy_var_553: int, in_vslice_dummy_var_554: int, in_vslice_dummy_var_555: int, in_vslice_dummy_var_556: int, in_vslice_dummy_var_557: int, in_vslice_dummy_var_558: int, in_vslice_dummy_var_559: int, in_vslice_dummy_var_560: int, in_vslice_dummy_var_561: int, in_vslice_dummy_var_562: int, in_vslice_dummy_var_563: int, in_vslice_dummy_var_564: int, in_vslice_dummy_var_565: int, in_vslice_dummy_var_566: int, in_vslice_dummy_var_567: int, in_vslice_dummy_var_568: int, in_vslice_dummy_var_569: int, in_vslice_dummy_var_570: int, in_vslice_dummy_var_571: int, in_vslice_dummy_var_572: int, in_vslice_dummy_var_573: int, in_vslice_dummy_var_574: int, in_vslice_dummy_var_575: int, in_vslice_dummy_var_576: int, in_vslice_dummy_var_577: int, in_vslice_dummy_var_578: int, in_vslice_dummy_var_579: int, in_vslice_dummy_var_580: int, in_vslice_dummy_var_581: int, in_vslice_dummy_var_582: int, in_vslice_dummy_var_583: int) returns (out_Tmp_815: int, out_Tmp_816: int, out_sdv_678: int, out_Tmp_817: int, out_oldIrql_5: int, out_pIrpStack_5: int, out_Tmp_819: int, out_pIrp_1: int, out_pDevObj_2: int, out_pDrvObj_1: int, out_pIrpLink: int, out_vslice_dummy_var_469: int, out_vslice_dummy_var_470: int, out_vslice_dummy_var_471: int, out_vslice_dummy_var_472: int, out_vslice_dummy_var_473: int, out_vslice_dummy_var_474: int, out_vslice_dummy_var_475: int, out_vslice_dummy_var_476: int, out_vslice_dummy_var_477: int, out_vslice_dummy_var_478: int, out_vslice_dummy_var_479: int, out_vslice_dummy_var_480: int, out_vslice_dummy_var_481: int, out_vslice_dummy_var_482: int, out_vslice_dummy_var_483: int, out_vslice_dummy_var_484: int, out_vslice_dummy_var_485: int, out_vslice_dummy_var_486: int, out_vslice_dummy_var_487: int, out_vslice_dummy_var_488: int, out_vslice_dummy_var_489: int, out_vslice_dummy_var_490: int, out_vslice_dummy_var_491: int, out_vslice_dummy_var_492: int, out_vslice_dummy_var_493: int, out_vslice_dummy_var_494: int, out_vslice_dummy_var_495: int, out_vslice_dummy_var_496: int, out_vslice_dummy_var_497: int, out_vslice_dummy_var_498: int, out_vslice_dummy_var_499: int, out_vslice_dummy_var_500: int, out_vslice_dummy_var_501: int, out_vslice_dummy_var_502: int, out_vslice_dummy_var_503: int, out_vslice_dummy_var_504: int, out_vslice_dummy_var_505: int, out_vslice_dummy_var_506: int, out_vslice_dummy_var_507: int, out_vslice_dummy_var_508: int, out_vslice_dummy_var_509: int, out_vslice_dummy_var_510: int, out_vslice_dummy_var_511: int, out_vslice_dummy_var_512: int, out_vslice_dummy_var_513: int, out_vslice_dummy_var_514: int, out_vslice_dummy_var_515: int, out_vslice_dummy_var_516: int, out_vslice_dummy_var_517: int, out_vslice_dummy_var_518: int, out_vslice_dummy_var_519: int, out_vslice_dummy_var_520: int, out_vslice_dummy_var_521: int, out_vslice_dummy_var_522: int, out_vslice_dummy_var_523: int, out_vslice_dummy_var_524: int, out_vslice_dummy_var_525: int, out_vslice_dummy_var_526: int, out_vslice_dummy_var_527: int, out_vslice_dummy_var_528: int, out_vslice_dummy_var_529: int, out_vslice_dummy_var_530: int, out_vslice_dummy_var_531: int, out_vslice_dummy_var_532: int, out_vslice_dummy_var_533: int, out_vslice_dummy_var_534: int, out_vslice_dummy_var_535: int, out_vslice_dummy_var_536: int, out_vslice_dummy_var_537: int, out_vslice_dummy_var_538: int, out_vslice_dummy_var_539: int, out_vslice_dummy_var_540: int, out_vslice_dummy_var_541: int, out_vslice_dummy_var_542: int, out_vslice_dummy_var_543: int, out_vslice_dummy_var_544: int, out_vslice_dummy_var_545: int, out_vslice_dummy_var_546: int, out_vslice_dummy_var_547: int, out_vslice_dummy_var_548: int, out_vslice_dummy_var_549: int, out_vslice_dummy_var_550: int, out_vslice_dummy_var_551: int, out_vslice_dummy_var_552: int, out_vslice_dummy_var_553: int, out_vslice_dummy_var_554: int, out_vslice_dummy_var_555: int, out_vslice_dummy_var_556: int, out_vslice_dummy_var_557: int, out_vslice_dummy_var_558: int, out_vslice_dummy_var_559: int, out_vslice_dummy_var_560: int, out_vslice_dummy_var_561: int, out_vslice_dummy_var_562: int, out_vslice_dummy_var_563: int, out_vslice_dummy_var_564: int, out_vslice_dummy_var_565: int, out_vslice_dummy_var_566: int, out_vslice_dummy_var_567: int, out_vslice_dummy_var_568: int, out_vslice_dummy_var_569: int, out_vslice_dummy_var_570: int, out_vslice_dummy_var_571: int, out_vslice_dummy_var_572: int, out_vslice_dummy_var_573: int, out_vslice_dummy_var_574: int, out_vslice_dummy_var_575: int, out_vslice_dummy_var_576: int, out_vslice_dummy_var_577: int, out_vslice_dummy_var_578: int, out_vslice_dummy_var_579: int, out_vslice_dummy_var_580: int, out_vslice_dummy_var_581: int, out_vslice_dummy_var_582: int, out_vslice_dummy_var_583: int)
{

  entry:
    out_Tmp_815, out_Tmp_816, out_sdv_678, out_Tmp_817, out_oldIrql_5, out_pIrpStack_5, out_Tmp_819, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, out_vslice_dummy_var_469, out_vslice_dummy_var_470, out_vslice_dummy_var_471, out_vslice_dummy_var_472, out_vslice_dummy_var_473, out_vslice_dummy_var_474, out_vslice_dummy_var_475, out_vslice_dummy_var_476, out_vslice_dummy_var_477, out_vslice_dummy_var_478, out_vslice_dummy_var_479, out_vslice_dummy_var_480, out_vslice_dummy_var_481, out_vslice_dummy_var_482, out_vslice_dummy_var_483, out_vslice_dummy_var_484, out_vslice_dummy_var_485, out_vslice_dummy_var_486, out_vslice_dummy_var_487, out_vslice_dummy_var_488, out_vslice_dummy_var_489, out_vslice_dummy_var_490, out_vslice_dummy_var_491, out_vslice_dummy_var_492, out_vslice_dummy_var_493, out_vslice_dummy_var_494, out_vslice_dummy_var_495, out_vslice_dummy_var_496, out_vslice_dummy_var_497, out_vslice_dummy_var_498, out_vslice_dummy_var_499, out_vslice_dummy_var_500, out_vslice_dummy_var_501, out_vslice_dummy_var_502, out_vslice_dummy_var_503, out_vslice_dummy_var_504, out_vslice_dummy_var_505, out_vslice_dummy_var_506, out_vslice_dummy_var_507, out_vslice_dummy_var_508, out_vslice_dummy_var_509, out_vslice_dummy_var_510, out_vslice_dummy_var_511, out_vslice_dummy_var_512, out_vslice_dummy_var_513, out_vslice_dummy_var_514, out_vslice_dummy_var_515, out_vslice_dummy_var_516, out_vslice_dummy_var_517, out_vslice_dummy_var_518, out_vslice_dummy_var_519, out_vslice_dummy_var_520, out_vslice_dummy_var_521, out_vslice_dummy_var_522, out_vslice_dummy_var_523, out_vslice_dummy_var_524, out_vslice_dummy_var_525, out_vslice_dummy_var_526, out_vslice_dummy_var_527, out_vslice_dummy_var_528, out_vslice_dummy_var_529, out_vslice_dummy_var_530, out_vslice_dummy_var_531, out_vslice_dummy_var_532, out_vslice_dummy_var_533, out_vslice_dummy_var_534, out_vslice_dummy_var_535, out_vslice_dummy_var_536, out_vslice_dummy_var_537, out_vslice_dummy_var_538, out_vslice_dummy_var_539, out_vslice_dummy_var_540, out_vslice_dummy_var_541, out_vslice_dummy_var_542, out_vslice_dummy_var_543, out_vslice_dummy_var_544, out_vslice_dummy_var_545, out_vslice_dummy_var_546, out_vslice_dummy_var_547, out_vslice_dummy_var_548, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_554, out_vslice_dummy_var_555, out_vslice_dummy_var_556, out_vslice_dummy_var_557, out_vslice_dummy_var_558, out_vslice_dummy_var_559, out_vslice_dummy_var_560, out_vslice_dummy_var_561, out_vslice_dummy_var_562, out_vslice_dummy_var_563, out_vslice_dummy_var_564, out_vslice_dummy_var_565, out_vslice_dummy_var_566, out_vslice_dummy_var_567, out_vslice_dummy_var_568, out_vslice_dummy_var_569, out_vslice_dummy_var_570, out_vslice_dummy_var_571, out_vslice_dummy_var_572, out_vslice_dummy_var_573, out_vslice_dummy_var_574, out_vslice_dummy_var_575, out_vslice_dummy_var_576, out_vslice_dummy_var_577, out_vslice_dummy_var_578, out_vslice_dummy_var_579, out_vslice_dummy_var_580, out_vslice_dummy_var_581, out_vslice_dummy_var_582, out_vslice_dummy_var_583 := in_Tmp_815, in_Tmp_816, in_sdv_678, in_Tmp_817, in_oldIrql_5, in_pIrpStack_5, in_Tmp_819, in_pIrp_1, in_pDevObj_2, in_pDrvObj_1, in_pIrpLink, in_vslice_dummy_var_469, in_vslice_dummy_var_470, in_vslice_dummy_var_471, in_vslice_dummy_var_472, in_vslice_dummy_var_473, in_vslice_dummy_var_474, in_vslice_dummy_var_475, in_vslice_dummy_var_476, in_vslice_dummy_var_477, in_vslice_dummy_var_478, in_vslice_dummy_var_479, in_vslice_dummy_var_480, in_vslice_dummy_var_481, in_vslice_dummy_var_482, in_vslice_dummy_var_483, in_vslice_dummy_var_484, in_vslice_dummy_var_485, in_vslice_dummy_var_486, in_vslice_dummy_var_487, in_vslice_dummy_var_488, in_vslice_dummy_var_489, in_vslice_dummy_var_490, in_vslice_dummy_var_491, in_vslice_dummy_var_492, in_vslice_dummy_var_493, in_vslice_dummy_var_494, in_vslice_dummy_var_495, in_vslice_dummy_var_496, in_vslice_dummy_var_497, in_vslice_dummy_var_498, in_vslice_dummy_var_499, in_vslice_dummy_var_500, in_vslice_dummy_var_501, in_vslice_dummy_var_502, in_vslice_dummy_var_503, in_vslice_dummy_var_504, in_vslice_dummy_var_505, in_vslice_dummy_var_506, in_vslice_dummy_var_507, in_vslice_dummy_var_508, in_vslice_dummy_var_509, in_vslice_dummy_var_510, in_vslice_dummy_var_511, in_vslice_dummy_var_512, in_vslice_dummy_var_513, in_vslice_dummy_var_514, in_vslice_dummy_var_515, in_vslice_dummy_var_516, in_vslice_dummy_var_517, in_vslice_dummy_var_518, in_vslice_dummy_var_519, in_vslice_dummy_var_520, in_vslice_dummy_var_521, in_vslice_dummy_var_522, in_vslice_dummy_var_523, in_vslice_dummy_var_524, in_vslice_dummy_var_525, in_vslice_dummy_var_526, in_vslice_dummy_var_527, in_vslice_dummy_var_528, in_vslice_dummy_var_529, in_vslice_dummy_var_530, in_vslice_dummy_var_531, in_vslice_dummy_var_532, in_vslice_dummy_var_533, in_vslice_dummy_var_534, in_vslice_dummy_var_535, in_vslice_dummy_var_536, in_vslice_dummy_var_537, in_vslice_dummy_var_538, in_vslice_dummy_var_539, in_vslice_dummy_var_540, in_vslice_dummy_var_541, in_vslice_dummy_var_542, in_vslice_dummy_var_543, in_vslice_dummy_var_544, in_vslice_dummy_var_545, in_vslice_dummy_var_546, in_vslice_dummy_var_547, in_vslice_dummy_var_548, in_vslice_dummy_var_549, in_vslice_dummy_var_550, in_vslice_dummy_var_551, in_vslice_dummy_var_552, in_vslice_dummy_var_553, in_vslice_dummy_var_554, in_vslice_dummy_var_555, in_vslice_dummy_var_556, in_vslice_dummy_var_557, in_vslice_dummy_var_558, in_vslice_dummy_var_559, in_vslice_dummy_var_560, in_vslice_dummy_var_561, in_vslice_dummy_var_562, in_vslice_dummy_var_563, in_vslice_dummy_var_564, in_vslice_dummy_var_565, in_vslice_dummy_var_566, in_vslice_dummy_var_567, in_vslice_dummy_var_568, in_vslice_dummy_var_569, in_vslice_dummy_var_570, in_vslice_dummy_var_571, in_vslice_dummy_var_572, in_vslice_dummy_var_573, in_vslice_dummy_var_574, in_vslice_dummy_var_575, in_vslice_dummy_var_576, in_vslice_dummy_var_577, in_vslice_dummy_var_578, in_vslice_dummy_var_579, in_vslice_dummy_var_580, in_vslice_dummy_var_581, in_vslice_dummy_var_582, in_vslice_dummy_var_583;
    goto L16, exit;

  exit:
    return;

  L16:
    goto anon227_Else;

  anon227_Else:
    call {:si_unique_call 3147} out_sdv_678 := sdv_containing_record(out_pIrpLink, 88);
    out_pIrp_1 := out_sdv_678;
    call {:si_unique_call 3148} out_vslice_dummy_var_469 := sdv_RemoveEntryList(0);
    call {:si_unique_call 3149} out_pIrpStack_5 := sdv_IoGetCurrentIrpStackLocation(out_pIrp_1);
    assume {:nonnull} out_pIrpStack_5 != 0;
    assume out_pIrpStack_5 > 0;
    havoc out_pDevObj_2;
    assume {:nonnull} out_pDevObj_2 != 0;
    assume out_pDevObj_2 > 0;
    havoc out_pDrvObj_1;
    call {:si_unique_call 3150} out_vslice_dummy_var_470 := sdv_IoSetCancelRoutine(out_pIrp_1, 0);
    call {:si_unique_call 3151} IoReleaseCancelSpinLock(out_oldIrql_5);
    out_Tmp_815 := strConst__li2bpl205;
    call {:si_unique_call 3152} out_vslice_dummy_var_471 := CyzDbgPrintEx(12, out_Tmp_815);
    assume {:nonnull} out_pIrpStack_5 != 0;
    assume out_pIrpStack_5 > 0;
    havoc out_Tmp_819;
    assume {:nonnull} out_pDrvObj_1 != 0;
    assume out_pDrvObj_1 > 0;
    havoc out_Tmp_817;
    goto anon284_Then, anon284_Else;

  anon284_Else:
    assume out_Tmp_819 != 27;
    goto anon286_Then, anon286_Else;

  anon286_Else:
    assume out_Tmp_819 != 26;
    goto anon288_Then, anon288_Else;

  anon288_Else:
    assume out_Tmp_819 != 25;
    goto anon290_Then, anon290_Else;

  anon290_Else:
    assume out_Tmp_819 != 24;
    goto anon292_Then, anon292_Else;

  anon292_Else:
    assume out_Tmp_819 != 23;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume out_Tmp_819 != 22;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume out_Tmp_819 != 21;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    assume out_Tmp_819 != 20;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume out_Tmp_819 != 19;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    assume out_Tmp_819 != 18;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    assume out_Tmp_819 != 17;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    assume out_Tmp_819 != 16;
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume out_Tmp_819 != 15;
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume out_Tmp_819 != 14;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume out_Tmp_819 != 13;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume out_Tmp_819 != 12;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    assume out_Tmp_819 != 11;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    assume out_Tmp_819 != 10;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    assume out_Tmp_819 != 9;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    assume out_Tmp_819 != 8;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    assume out_Tmp_819 != 7;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume out_Tmp_819 != 6;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume out_Tmp_819 != 5;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    assume out_Tmp_819 != 4;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    assume out_Tmp_819 != 3;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume out_Tmp_819 != 2;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    assume out_Tmp_819 != 1;
    goto anon338_Then;

  anon338_Then:
    assume out_Tmp_819 == 0;
    goto anon339_Then, anon339_Else;

  anon339_Else:
    goto anon282_Then, anon282_Else;

  anon282_Else:
    goto anon283_Then, anon283_Else;

  anon283_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3035} out_vslice_dummy_var_583 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  L45:
    call {:si_unique_call 3033} out_Tmp_816 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_816 != 0;
    assume out_Tmp_816 > 0;
    call {:si_unique_call 3034} IoAcquireCancelSpinLock(out_Tmp_816);
    assume {:nonnull} out_Tmp_816 != 0;
    assume out_Tmp_816 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_PDevExt_7 != 0;
    assume in_PDevExt_7 > 0;
    havoc out_pIrpLink;
    goto L45_dummy;

  L45_dummy:
    call {:si_unique_call 3153} {:si_old_unique_call 1} out_Tmp_815, out_Tmp_816, out_sdv_678, out_Tmp_817, out_oldIrql_5, out_pIrpStack_5, out_Tmp_819, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, out_vslice_dummy_var_469, out_vslice_dummy_var_470, out_vslice_dummy_var_471, out_vslice_dummy_var_472, out_vslice_dummy_var_473, out_vslice_dummy_var_474, out_vslice_dummy_var_475, out_vslice_dummy_var_476, out_vslice_dummy_var_477, out_vslice_dummy_var_478, out_vslice_dummy_var_479, out_vslice_dummy_var_480, out_vslice_dummy_var_481, out_vslice_dummy_var_482, out_vslice_dummy_var_483, out_vslice_dummy_var_484, out_vslice_dummy_var_485, out_vslice_dummy_var_486, out_vslice_dummy_var_487, out_vslice_dummy_var_488, out_vslice_dummy_var_489, out_vslice_dummy_var_490, out_vslice_dummy_var_491, out_vslice_dummy_var_492, out_vslice_dummy_var_493, out_vslice_dummy_var_494, out_vslice_dummy_var_495, out_vslice_dummy_var_496, out_vslice_dummy_var_497, out_vslice_dummy_var_498, out_vslice_dummy_var_499, out_vslice_dummy_var_500, out_vslice_dummy_var_501, out_vslice_dummy_var_502, out_vslice_dummy_var_503, out_vslice_dummy_var_504, out_vslice_dummy_var_505, out_vslice_dummy_var_506, out_vslice_dummy_var_507, out_vslice_dummy_var_508, out_vslice_dummy_var_509, out_vslice_dummy_var_510, out_vslice_dummy_var_511, out_vslice_dummy_var_512, out_vslice_dummy_var_513, out_vslice_dummy_var_514, out_vslice_dummy_var_515, out_vslice_dummy_var_516, out_vslice_dummy_var_517, out_vslice_dummy_var_518, out_vslice_dummy_var_519, out_vslice_dummy_var_520, out_vslice_dummy_var_521, out_vslice_dummy_var_522, out_vslice_dummy_var_523, out_vslice_dummy_var_524, out_vslice_dummy_var_525, out_vslice_dummy_var_526, out_vslice_dummy_var_527, out_vslice_dummy_var_528, out_vslice_dummy_var_529, out_vslice_dummy_var_530, out_vslice_dummy_var_531, out_vslice_dummy_var_532, out_vslice_dummy_var_533, out_vslice_dummy_var_534, out_vslice_dummy_var_535, out_vslice_dummy_var_536, out_vslice_dummy_var_537, out_vslice_dummy_var_538, out_vslice_dummy_var_539, out_vslice_dummy_var_540, out_vslice_dummy_var_541, out_vslice_dummy_var_542, out_vslice_dummy_var_543, out_vslice_dummy_var_544, out_vslice_dummy_var_545, out_vslice_dummy_var_546, out_vslice_dummy_var_547, out_vslice_dummy_var_548, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_554, out_vslice_dummy_var_555, out_vslice_dummy_var_556, out_vslice_dummy_var_557, out_vslice_dummy_var_558, out_vslice_dummy_var_559, out_vslice_dummy_var_560, out_vslice_dummy_var_561, out_vslice_dummy_var_562, out_vslice_dummy_var_563, out_vslice_dummy_var_564, out_vslice_dummy_var_565, out_vslice_dummy_var_566, out_vslice_dummy_var_567, out_vslice_dummy_var_568, out_vslice_dummy_var_569, out_vslice_dummy_var_570, out_vslice_dummy_var_571, out_vslice_dummy_var_572, out_vslice_dummy_var_573, out_vslice_dummy_var_574, out_vslice_dummy_var_575, out_vslice_dummy_var_576, out_vslice_dummy_var_577, out_vslice_dummy_var_578, out_vslice_dummy_var_579, out_vslice_dummy_var_580, out_vslice_dummy_var_581, out_vslice_dummy_var_582, out_vslice_dummy_var_583 := CyzUnstallIrps_loop_L16(out_Tmp_815, out_Tmp_816, out_sdv_678, out_Tmp_817, out_oldIrql_5, out_pIrpStack_5, out_Tmp_819, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, in_PDevExt_7, out_vslice_dummy_var_469, out_vslice_dummy_var_470, out_vslice_dummy_var_471, out_vslice_dummy_var_472, out_vslice_dummy_var_473, out_vslice_dummy_var_474, out_vslice_dummy_var_475, out_vslice_dummy_var_476, out_vslice_dummy_var_477, out_vslice_dummy_var_478, out_vslice_dummy_var_479, out_vslice_dummy_var_480, out_vslice_dummy_var_481, out_vslice_dummy_var_482, out_vslice_dummy_var_483, out_vslice_dummy_var_484, out_vslice_dummy_var_485, out_vslice_dummy_var_486, out_vslice_dummy_var_487, out_vslice_dummy_var_488, out_vslice_dummy_var_489, out_vslice_dummy_var_490, out_vslice_dummy_var_491, out_vslice_dummy_var_492, out_vslice_dummy_var_493, out_vslice_dummy_var_494, out_vslice_dummy_var_495, out_vslice_dummy_var_496, out_vslice_dummy_var_497, out_vslice_dummy_var_498, out_vslice_dummy_var_499, out_vslice_dummy_var_500, out_vslice_dummy_var_501, out_vslice_dummy_var_502, out_vslice_dummy_var_503, out_vslice_dummy_var_504, out_vslice_dummy_var_505, out_vslice_dummy_var_506, out_vslice_dummy_var_507, out_vslice_dummy_var_508, out_vslice_dummy_var_509, out_vslice_dummy_var_510, out_vslice_dummy_var_511, out_vslice_dummy_var_512, out_vslice_dummy_var_513, out_vslice_dummy_var_514, out_vslice_dummy_var_515, out_vslice_dummy_var_516, out_vslice_dummy_var_517, out_vslice_dummy_var_518, out_vslice_dummy_var_519, out_vslice_dummy_var_520, out_vslice_dummy_var_521, out_vslice_dummy_var_522, out_vslice_dummy_var_523, out_vslice_dummy_var_524, out_vslice_dummy_var_525, out_vslice_dummy_var_526, out_vslice_dummy_var_527, out_vslice_dummy_var_528, out_vslice_dummy_var_529, out_vslice_dummy_var_530, out_vslice_dummy_var_531, out_vslice_dummy_var_532, out_vslice_dummy_var_533, out_vslice_dummy_var_534, out_vslice_dummy_var_535, out_vslice_dummy_var_536, out_vslice_dummy_var_537, out_vslice_dummy_var_538, out_vslice_dummy_var_539, out_vslice_dummy_var_540, out_vslice_dummy_var_541, out_vslice_dummy_var_542, out_vslice_dummy_var_543, out_vslice_dummy_var_544, out_vslice_dummy_var_545, out_vslice_dummy_var_546, out_vslice_dummy_var_547, out_vslice_dummy_var_548, out_vslice_dummy_var_549, out_vslice_dummy_var_550, out_vslice_dummy_var_551, out_vslice_dummy_var_552, out_vslice_dummy_var_553, out_vslice_dummy_var_554, out_vslice_dummy_var_555, out_vslice_dummy_var_556, out_vslice_dummy_var_557, out_vslice_dummy_var_558, out_vslice_dummy_var_559, out_vslice_dummy_var_560, out_vslice_dummy_var_561, out_vslice_dummy_var_562, out_vslice_dummy_var_563, out_vslice_dummy_var_564, out_vslice_dummy_var_565, out_vslice_dummy_var_566, out_vslice_dummy_var_567, out_vslice_dummy_var_568, out_vslice_dummy_var_569, out_vslice_dummy_var_570, out_vslice_dummy_var_571, out_vslice_dummy_var_572, out_vslice_dummy_var_573, out_vslice_dummy_var_574, out_vslice_dummy_var_575, out_vslice_dummy_var_576, out_vslice_dummy_var_577, out_vslice_dummy_var_578, out_vslice_dummy_var_579, out_vslice_dummy_var_580, out_vslice_dummy_var_581, out_vslice_dummy_var_582, out_vslice_dummy_var_583);
    return;

  anon283_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3036} out_vslice_dummy_var_582 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon282_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3037} out_vslice_dummy_var_581 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon339_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3038} out_vslice_dummy_var_580 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon336_Then:
    assume out_Tmp_819 == 1;
    goto anon337_Then, anon337_Else;

  anon337_Else:
    goto anon280_Then, anon280_Else;

  anon280_Else:
    goto anon281_Then, anon281_Else;

  anon281_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3039} out_vslice_dummy_var_579 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon281_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3040} out_vslice_dummy_var_578 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon280_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3041} out_vslice_dummy_var_577 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon337_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3042} out_vslice_dummy_var_576 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon334_Then:
    assume out_Tmp_819 == 2;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    goto anon278_Then, anon278_Else;

  anon278_Else:
    goto anon279_Then, anon279_Else;

  anon279_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3043} out_vslice_dummy_var_575 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon279_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3044} out_vslice_dummy_var_574 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon278_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3045} out_vslice_dummy_var_573 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon335_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3046} out_vslice_dummy_var_572 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon332_Then:
    assume out_Tmp_819 == 3;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    goto anon276_Then, anon276_Else;

  anon276_Else:
    goto anon277_Then, anon277_Else;

  anon277_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3047} out_vslice_dummy_var_571 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon277_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3048} out_vslice_dummy_var_570 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon276_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3049} out_vslice_dummy_var_569 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon333_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3050} out_vslice_dummy_var_568 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon330_Then:
    assume out_Tmp_819 == 4;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    goto anon274_Then, anon274_Else;

  anon274_Else:
    goto anon275_Then, anon275_Else;

  anon275_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3051} out_vslice_dummy_var_567 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon275_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3052} out_vslice_dummy_var_566 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon274_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3053} out_vslice_dummy_var_565 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon331_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3054} out_vslice_dummy_var_564 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon328_Then:
    assume out_Tmp_819 == 5;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    goto anon272_Then, anon272_Else;

  anon272_Else:
    goto anon273_Then, anon273_Else;

  anon273_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3055} out_vslice_dummy_var_563 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon273_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3056} out_vslice_dummy_var_562 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon272_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3057} out_vslice_dummy_var_561 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon329_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3058} out_vslice_dummy_var_560 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon326_Then:
    assume out_Tmp_819 == 6;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    goto anon270_Then, anon270_Else;

  anon270_Else:
    goto anon271_Then, anon271_Else;

  anon271_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3059} out_vslice_dummy_var_559 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon271_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3060} out_vslice_dummy_var_558 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon270_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3061} out_vslice_dummy_var_557 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon327_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3062} out_vslice_dummy_var_556 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon324_Then:
    assume out_Tmp_819 == 7;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    goto anon268_Then, anon268_Else;

  anon268_Else:
    goto anon269_Then, anon269_Else;

  anon269_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3063} out_vslice_dummy_var_555 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon269_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3064} out_vslice_dummy_var_554 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon268_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3065} out_vslice_dummy_var_553 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon325_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3066} out_vslice_dummy_var_552 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon322_Then:
    assume out_Tmp_819 == 8;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    goto anon266_Then, anon266_Else;

  anon266_Else:
    goto anon267_Then, anon267_Else;

  anon267_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3067} out_vslice_dummy_var_551 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon267_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3068} out_vslice_dummy_var_550 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon266_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3069} out_vslice_dummy_var_549 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon323_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3070} out_vslice_dummy_var_548 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon320_Then:
    assume out_Tmp_819 == 9;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    goto anon264_Then, anon264_Else;

  anon264_Else:
    goto anon265_Then, anon265_Else;

  anon265_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3071} out_vslice_dummy_var_547 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon265_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3072} out_vslice_dummy_var_546 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon264_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3073} out_vslice_dummy_var_545 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon321_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3074} out_vslice_dummy_var_544 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon318_Then:
    assume out_Tmp_819 == 10;
    goto anon319_Then, anon319_Else;

  anon319_Else:
    goto anon262_Then, anon262_Else;

  anon262_Else:
    goto anon263_Then, anon263_Else;

  anon263_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3075} out_vslice_dummy_var_543 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon263_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3076} out_vslice_dummy_var_542 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon262_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3077} out_vslice_dummy_var_541 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon319_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3078} out_vslice_dummy_var_540 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon316_Then:
    assume out_Tmp_819 == 11;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    goto anon260_Then, anon260_Else;

  anon260_Else:
    goto anon261_Then, anon261_Else;

  anon261_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3079} out_vslice_dummy_var_539 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon261_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3080} out_vslice_dummy_var_538 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon260_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3081} out_vslice_dummy_var_537 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon317_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3082} out_vslice_dummy_var_536 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon314_Then:
    assume out_Tmp_819 == 12;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    goto anon258_Then, anon258_Else;

  anon258_Else:
    goto anon259_Then, anon259_Else;

  anon259_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3083} out_vslice_dummy_var_535 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon259_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3084} out_vslice_dummy_var_534 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon258_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3085} out_vslice_dummy_var_533 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon315_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3086} out_vslice_dummy_var_532 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon312_Then:
    assume out_Tmp_819 == 13;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    goto anon256_Then, anon256_Else;

  anon256_Else:
    goto anon257_Then, anon257_Else;

  anon257_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3087} out_vslice_dummy_var_531 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon257_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3088} out_vslice_dummy_var_530 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon256_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3089} out_vslice_dummy_var_529 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon313_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3090} out_vslice_dummy_var_528 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon310_Then:
    assume out_Tmp_819 == 14;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    goto anon254_Then, anon254_Else;

  anon254_Else:
    goto anon255_Then, anon255_Else;

  anon255_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3091} out_vslice_dummy_var_527 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon255_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3092} out_vslice_dummy_var_526 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon254_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3093} out_vslice_dummy_var_525 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon311_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3094} out_vslice_dummy_var_524 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon308_Then:
    assume out_Tmp_819 == 15;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    goto anon252_Then, anon252_Else;

  anon252_Else:
    goto anon253_Then, anon253_Else;

  anon253_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3095} out_vslice_dummy_var_523 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon253_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3096} out_vslice_dummy_var_522 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon252_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3097} out_vslice_dummy_var_521 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon309_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3098} out_vslice_dummy_var_520 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon306_Then:
    assume out_Tmp_819 == 16;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    goto anon250_Then, anon250_Else;

  anon250_Else:
    goto anon251_Then, anon251_Else;

  anon251_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3099} out_vslice_dummy_var_519 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon251_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3100} out_vslice_dummy_var_518 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon250_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3101} out_vslice_dummy_var_517 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon307_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3102} out_vslice_dummy_var_516 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon304_Then:
    assume out_Tmp_819 == 17;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    goto anon248_Then, anon248_Else;

  anon248_Else:
    goto anon249_Then, anon249_Else;

  anon249_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3103} out_vslice_dummy_var_515 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon249_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3104} out_vslice_dummy_var_514 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon248_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3105} out_vslice_dummy_var_513 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon305_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3106} out_vslice_dummy_var_512 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon302_Then:
    assume out_Tmp_819 == 18;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    goto anon246_Then, anon246_Else;

  anon246_Else:
    goto anon247_Then, anon247_Else;

  anon247_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3107} out_vslice_dummy_var_511 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon247_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3108} out_vslice_dummy_var_510 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon246_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3109} out_vslice_dummy_var_509 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon303_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3110} out_vslice_dummy_var_508 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon300_Then:
    assume out_Tmp_819 == 19;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    goto anon244_Then, anon244_Else;

  anon244_Else:
    goto anon245_Then, anon245_Else;

  anon245_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3111} out_vslice_dummy_var_507 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon245_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3112} out_vslice_dummy_var_506 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon244_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3113} out_vslice_dummy_var_505 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon301_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3114} out_vslice_dummy_var_504 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon298_Then:
    assume out_Tmp_819 == 20;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    goto anon242_Then, anon242_Else;

  anon242_Else:
    goto anon243_Then, anon243_Else;

  anon243_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3115} out_vslice_dummy_var_503 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon243_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3116} out_vslice_dummy_var_502 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon242_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3117} out_vslice_dummy_var_501 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon299_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3118} out_vslice_dummy_var_500 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon296_Then:
    assume out_Tmp_819 == 21;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    goto anon240_Then, anon240_Else;

  anon240_Else:
    goto anon241_Then, anon241_Else;

  anon241_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3119} out_vslice_dummy_var_499 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon241_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3120} out_vslice_dummy_var_498 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon240_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3121} out_vslice_dummy_var_497 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon297_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3122} out_vslice_dummy_var_496 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon294_Then:
    assume out_Tmp_819 == 22;
    goto anon295_Then, anon295_Else;

  anon295_Else:
    goto anon238_Then, anon238_Else;

  anon238_Else:
    goto anon239_Then, anon239_Else;

  anon239_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3123} out_vslice_dummy_var_495 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon239_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3124} out_vslice_dummy_var_494 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon238_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3125} out_vslice_dummy_var_493 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon295_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3126} out_vslice_dummy_var_492 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon292_Then:
    assume out_Tmp_819 == 23;
    goto anon293_Then, anon293_Else;

  anon293_Else:
    goto anon236_Then, anon236_Else;

  anon236_Else:
    goto anon237_Then, anon237_Else;

  anon237_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3127} out_vslice_dummy_var_491 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon237_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3128} out_vslice_dummy_var_490 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon236_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3129} out_vslice_dummy_var_489 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon293_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3130} out_vslice_dummy_var_488 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon290_Then:
    assume out_Tmp_819 == 24;
    goto anon291_Then, anon291_Else;

  anon291_Else:
    goto anon234_Then, anon234_Else;

  anon234_Else:
    goto anon235_Then, anon235_Else;

  anon235_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3131} out_vslice_dummy_var_487 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon235_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3132} out_vslice_dummy_var_486 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon234_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3133} out_vslice_dummy_var_485 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon291_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3134} out_vslice_dummy_var_484 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon288_Then:
    assume out_Tmp_819 == 25;
    goto anon289_Then, anon289_Else;

  anon289_Else:
    goto anon232_Then, anon232_Else;

  anon232_Else:
    goto anon233_Then, anon233_Else;

  anon233_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3135} out_vslice_dummy_var_483 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon233_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3136} out_vslice_dummy_var_482 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon232_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3137} out_vslice_dummy_var_481 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon289_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3138} out_vslice_dummy_var_480 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon286_Then:
    assume out_Tmp_819 == 26;
    goto anon287_Then, anon287_Else;

  anon287_Else:
    goto anon230_Then, anon230_Else;

  anon230_Else:
    goto anon231_Then, anon231_Else;

  anon231_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3139} out_vslice_dummy_var_479 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon231_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3140} out_vslice_dummy_var_478 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon230_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3141} out_vslice_dummy_var_477 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon287_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3142} out_vslice_dummy_var_476 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon284_Then:
    assume out_Tmp_819 == 27;
    goto anon285_Then, anon285_Else;

  anon285_Else:
    goto anon228_Then, anon228_Else;

  anon228_Else:
    goto anon229_Then, anon229_Else;

  anon229_Else:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3143} out_vslice_dummy_var_475 := CyzInternalIoControl(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon229_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3144} out_vslice_dummy_var_474 := CyzQueryInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon228_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3145} out_vslice_dummy_var_473 := CyzSetInformationFile(out_pDevObj_2, out_pIrp_1);
    goto L45;

  anon285_Then:
    assume {:IndirectCall} true;
    assume {:nonnull} out_Tmp_817 != 0;
    assume out_Tmp_817 > 0;
    call {:si_unique_call 3146} out_vslice_dummy_var_472 := CyzSystemControlDispatch(out_pDevObj_2, out_pIrp_1);
    goto L45;
}



procedure {:LoopProcedure} CyzUnstallIrps_loop_L16(in_Tmp_815: int, in_Tmp_816: int, in_sdv_678: int, in_Tmp_817: int, in_oldIrql_5: int, in_pIrpStack_5: int, in_Tmp_819: int, in_pIrp_1: int, in_pDevObj_2: int, in_pDrvObj_1: int, in_pIrpLink: int, in_PDevExt_7: int, in_vslice_dummy_var_469: int, in_vslice_dummy_var_470: int, in_vslice_dummy_var_471: int, in_vslice_dummy_var_472: int, in_vslice_dummy_var_473: int, in_vslice_dummy_var_474: int, in_vslice_dummy_var_475: int, in_vslice_dummy_var_476: int, in_vslice_dummy_var_477: int, in_vslice_dummy_var_478: int, in_vslice_dummy_var_479: int, in_vslice_dummy_var_480: int, in_vslice_dummy_var_481: int, in_vslice_dummy_var_482: int, in_vslice_dummy_var_483: int, in_vslice_dummy_var_484: int, in_vslice_dummy_var_485: int, in_vslice_dummy_var_486: int, in_vslice_dummy_var_487: int, in_vslice_dummy_var_488: int, in_vslice_dummy_var_489: int, in_vslice_dummy_var_490: int, in_vslice_dummy_var_491: int, in_vslice_dummy_var_492: int, in_vslice_dummy_var_493: int, in_vslice_dummy_var_494: int, in_vslice_dummy_var_495: int, in_vslice_dummy_var_496: int, in_vslice_dummy_var_497: int, in_vslice_dummy_var_498: int, in_vslice_dummy_var_499: int, in_vslice_dummy_var_500: int, in_vslice_dummy_var_501: int, in_vslice_dummy_var_502: int, in_vslice_dummy_var_503: int, in_vslice_dummy_var_504: int, in_vslice_dummy_var_505: int, in_vslice_dummy_var_506: int, in_vslice_dummy_var_507: int, in_vslice_dummy_var_508: int, in_vslice_dummy_var_509: int, in_vslice_dummy_var_510: int, in_vslice_dummy_var_511: int, in_vslice_dummy_var_512: int, in_vslice_dummy_var_513: int, in_vslice_dummy_var_514: int, in_vslice_dummy_var_515: int, in_vslice_dummy_var_516: int, in_vslice_dummy_var_517: int, in_vslice_dummy_var_518: int, in_vslice_dummy_var_519: int, in_vslice_dummy_var_520: int, in_vslice_dummy_var_521: int, in_vslice_dummy_var_522: int, in_vslice_dummy_var_523: int, in_vslice_dummy_var_524: int, in_vslice_dummy_var_525: int, in_vslice_dummy_var_526: int, in_vslice_dummy_var_527: int, in_vslice_dummy_var_528: int, in_vslice_dummy_var_529: int, in_vslice_dummy_var_530: int, in_vslice_dummy_var_531: int, in_vslice_dummy_var_532: int, in_vslice_dummy_var_533: int, in_vslice_dummy_var_534: int, in_vslice_dummy_var_535: int, in_vslice_dummy_var_536: int, in_vslice_dummy_var_537: int, in_vslice_dummy_var_538: int, in_vslice_dummy_var_539: int, in_vslice_dummy_var_540: int, in_vslice_dummy_var_541: int, in_vslice_dummy_var_542: int, in_vslice_dummy_var_543: int, in_vslice_dummy_var_544: int, in_vslice_dummy_var_545: int, in_vslice_dummy_var_546: int, in_vslice_dummy_var_547: int, in_vslice_dummy_var_548: int, in_vslice_dummy_var_549: int, in_vslice_dummy_var_550: int, in_vslice_dummy_var_551: int, in_vslice_dummy_var_552: int, in_vslice_dummy_var_553: int, in_vslice_dummy_var_554: int, in_vslice_dummy_var_555: int, in_vslice_dummy_var_556: int, in_vslice_dummy_var_557: int, in_vslice_dummy_var_558: int, in_vslice_dummy_var_559: int, in_vslice_dummy_var_560: int, in_vslice_dummy_var_561: int, in_vslice_dummy_var_562: int, in_vslice_dummy_var_563: int, in_vslice_dummy_var_564: int, in_vslice_dummy_var_565: int, in_vslice_dummy_var_566: int, in_vslice_dummy_var_567: int, in_vslice_dummy_var_568: int, in_vslice_dummy_var_569: int, in_vslice_dummy_var_570: int, in_vslice_dummy_var_571: int, in_vslice_dummy_var_572: int, in_vslice_dummy_var_573: int, in_vslice_dummy_var_574: int, in_vslice_dummy_var_575: int, in_vslice_dummy_var_576: int, in_vslice_dummy_var_577: int, in_vslice_dummy_var_578: int, in_vslice_dummy_var_579: int, in_vslice_dummy_var_580: int, in_vslice_dummy_var_581: int, in_vslice_dummy_var_582: int, in_vslice_dummy_var_583: int) returns (out_Tmp_815: int, out_Tmp_816: int, out_sdv_678: int, out_Tmp_817: int, out_oldIrql_5: int, out_pIrpStack_5: int, out_Tmp_819: int, out_pIrp_1: int, out_pDevObj_2: int, out_pDrvObj_1: int, out_pIrpLink: int, out_vslice_dummy_var_469: int, out_vslice_dummy_var_470: int, out_vslice_dummy_var_471: int, out_vslice_dummy_var_472: int, out_vslice_dummy_var_473: int, out_vslice_dummy_var_474: int, out_vslice_dummy_var_475: int, out_vslice_dummy_var_476: int, out_vslice_dummy_var_477: int, out_vslice_dummy_var_478: int, out_vslice_dummy_var_479: int, out_vslice_dummy_var_480: int, out_vslice_dummy_var_481: int, out_vslice_dummy_var_482: int, out_vslice_dummy_var_483: int, out_vslice_dummy_var_484: int, out_vslice_dummy_var_485: int, out_vslice_dummy_var_486: int, out_vslice_dummy_var_487: int, out_vslice_dummy_var_488: int, out_vslice_dummy_var_489: int, out_vslice_dummy_var_490: int, out_vslice_dummy_var_491: int, out_vslice_dummy_var_492: int, out_vslice_dummy_var_493: int, out_vslice_dummy_var_494: int, out_vslice_dummy_var_495: int, out_vslice_dummy_var_496: int, out_vslice_dummy_var_497: int, out_vslice_dummy_var_498: int, out_vslice_dummy_var_499: int, out_vslice_dummy_var_500: int, out_vslice_dummy_var_501: int, out_vslice_dummy_var_502: int, out_vslice_dummy_var_503: int, out_vslice_dummy_var_504: int, out_vslice_dummy_var_505: int, out_vslice_dummy_var_506: int, out_vslice_dummy_var_507: int, out_vslice_dummy_var_508: int, out_vslice_dummy_var_509: int, out_vslice_dummy_var_510: int, out_vslice_dummy_var_511: int, out_vslice_dummy_var_512: int, out_vslice_dummy_var_513: int, out_vslice_dummy_var_514: int, out_vslice_dummy_var_515: int, out_vslice_dummy_var_516: int, out_vslice_dummy_var_517: int, out_vslice_dummy_var_518: int, out_vslice_dummy_var_519: int, out_vslice_dummy_var_520: int, out_vslice_dummy_var_521: int, out_vslice_dummy_var_522: int, out_vslice_dummy_var_523: int, out_vslice_dummy_var_524: int, out_vslice_dummy_var_525: int, out_vslice_dummy_var_526: int, out_vslice_dummy_var_527: int, out_vslice_dummy_var_528: int, out_vslice_dummy_var_529: int, out_vslice_dummy_var_530: int, out_vslice_dummy_var_531: int, out_vslice_dummy_var_532: int, out_vslice_dummy_var_533: int, out_vslice_dummy_var_534: int, out_vslice_dummy_var_535: int, out_vslice_dummy_var_536: int, out_vslice_dummy_var_537: int, out_vslice_dummy_var_538: int, out_vslice_dummy_var_539: int, out_vslice_dummy_var_540: int, out_vslice_dummy_var_541: int, out_vslice_dummy_var_542: int, out_vslice_dummy_var_543: int, out_vslice_dummy_var_544: int, out_vslice_dummy_var_545: int, out_vslice_dummy_var_546: int, out_vslice_dummy_var_547: int, out_vslice_dummy_var_548: int, out_vslice_dummy_var_549: int, out_vslice_dummy_var_550: int, out_vslice_dummy_var_551: int, out_vslice_dummy_var_552: int, out_vslice_dummy_var_553: int, out_vslice_dummy_var_554: int, out_vslice_dummy_var_555: int, out_vslice_dummy_var_556: int, out_vslice_dummy_var_557: int, out_vslice_dummy_var_558: int, out_vslice_dummy_var_559: int, out_vslice_dummy_var_560: int, out_vslice_dummy_var_561: int, out_vslice_dummy_var_562: int, out_vslice_dummy_var_563: int, out_vslice_dummy_var_564: int, out_vslice_dummy_var_565: int, out_vslice_dummy_var_566: int, out_vslice_dummy_var_567: int, out_vslice_dummy_var_568: int, out_vslice_dummy_var_569: int, out_vslice_dummy_var_570: int, out_vslice_dummy_var_571: int, out_vslice_dummy_var_572: int, out_vslice_dummy_var_573: int, out_vslice_dummy_var_574: int, out_vslice_dummy_var_575: int, out_vslice_dummy_var_576: int, out_vslice_dummy_var_577: int, out_vslice_dummy_var_578: int, out_vslice_dummy_var_579: int, out_vslice_dummy_var_580: int, out_vslice_dummy_var_581: int, out_vslice_dummy_var_582: int, out_vslice_dummy_var_583: int);
  modifies alloc, locked, queuedWithoutMarking, stack_location, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} stack_location == old(stack_location);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_Tmp_815 == in_Tmp_815;
  free ensures {:va_keep} out_Tmp_816 == in_Tmp_816;
  free ensures {:va_keep} out_sdv_678 == in_sdv_678;
  free ensures {:va_keep} out_Tmp_817 == in_Tmp_817;
  free ensures {:va_keep} out_oldIrql_5 == in_oldIrql_5;
  free ensures {:va_keep} out_pIrpStack_5 == in_pIrpStack_5;
  free ensures {:va_keep} out_Tmp_819 == in_Tmp_819;
  free ensures {:va_keep} out_pIrp_1 == in_pIrp_1;
  free ensures {:va_keep} out_pDevObj_2 == in_pDevObj_2;
  free ensures {:va_keep} out_pDrvObj_1 == in_pDrvObj_1;
  free ensures {:va_keep} out_pIrpLink == in_pIrpLink;
  free ensures {:va_keep} out_vslice_dummy_var_469 == in_vslice_dummy_var_469;
  free ensures {:va_keep} out_vslice_dummy_var_470 == in_vslice_dummy_var_470;
  free ensures {:va_keep} out_vslice_dummy_var_471 == in_vslice_dummy_var_471;
  free ensures {:va_keep} out_vslice_dummy_var_472 == in_vslice_dummy_var_472;
  free ensures {:va_keep} out_vslice_dummy_var_473 == in_vslice_dummy_var_473;
  free ensures {:va_keep} out_vslice_dummy_var_474 == in_vslice_dummy_var_474;
  free ensures {:va_keep} out_vslice_dummy_var_475 == in_vslice_dummy_var_475;
  free ensures {:va_keep} out_vslice_dummy_var_476 == in_vslice_dummy_var_476;
  free ensures {:va_keep} out_vslice_dummy_var_477 == in_vslice_dummy_var_477;
  free ensures {:va_keep} out_vslice_dummy_var_478 == in_vslice_dummy_var_478;
  free ensures {:va_keep} out_vslice_dummy_var_479 == in_vslice_dummy_var_479;
  free ensures {:va_keep} out_vslice_dummy_var_480 == in_vslice_dummy_var_480;
  free ensures {:va_keep} out_vslice_dummy_var_481 == in_vslice_dummy_var_481;
  free ensures {:va_keep} out_vslice_dummy_var_482 == in_vslice_dummy_var_482;
  free ensures {:va_keep} out_vslice_dummy_var_483 == in_vslice_dummy_var_483;
  free ensures {:va_keep} out_vslice_dummy_var_484 == in_vslice_dummy_var_484;
  free ensures {:va_keep} out_vslice_dummy_var_485 == in_vslice_dummy_var_485;
  free ensures {:va_keep} out_vslice_dummy_var_486 == in_vslice_dummy_var_486;
  free ensures {:va_keep} out_vslice_dummy_var_487 == in_vslice_dummy_var_487;
  free ensures {:va_keep} out_vslice_dummy_var_488 == in_vslice_dummy_var_488;
  free ensures {:va_keep} out_vslice_dummy_var_489 == in_vslice_dummy_var_489;
  free ensures {:va_keep} out_vslice_dummy_var_490 == in_vslice_dummy_var_490;
  free ensures {:va_keep} out_vslice_dummy_var_491 == in_vslice_dummy_var_491;
  free ensures {:va_keep} out_vslice_dummy_var_492 == in_vslice_dummy_var_492;
  free ensures {:va_keep} out_vslice_dummy_var_493 == in_vslice_dummy_var_493;
  free ensures {:va_keep} out_vslice_dummy_var_494 == in_vslice_dummy_var_494;
  free ensures {:va_keep} out_vslice_dummy_var_495 == in_vslice_dummy_var_495;
  free ensures {:va_keep} out_vslice_dummy_var_496 == in_vslice_dummy_var_496;
  free ensures {:va_keep} out_vslice_dummy_var_497 == in_vslice_dummy_var_497;
  free ensures {:va_keep} out_vslice_dummy_var_498 == in_vslice_dummy_var_498;
  free ensures {:va_keep} out_vslice_dummy_var_499 == in_vslice_dummy_var_499;
  free ensures {:va_keep} out_vslice_dummy_var_500 == in_vslice_dummy_var_500;
  free ensures {:va_keep} out_vslice_dummy_var_501 == in_vslice_dummy_var_501;
  free ensures {:va_keep} out_vslice_dummy_var_502 == in_vslice_dummy_var_502;
  free ensures {:va_keep} out_vslice_dummy_var_503 == in_vslice_dummy_var_503;
  free ensures {:va_keep} out_vslice_dummy_var_504 == in_vslice_dummy_var_504;
  free ensures {:va_keep} out_vslice_dummy_var_505 == in_vslice_dummy_var_505;
  free ensures {:va_keep} out_vslice_dummy_var_506 == in_vslice_dummy_var_506;
  free ensures {:va_keep} out_vslice_dummy_var_507 == in_vslice_dummy_var_507;
  free ensures {:va_keep} out_vslice_dummy_var_508 == in_vslice_dummy_var_508;
  free ensures {:va_keep} out_vslice_dummy_var_509 == in_vslice_dummy_var_509;
  free ensures {:va_keep} out_vslice_dummy_var_510 == in_vslice_dummy_var_510;
  free ensures {:va_keep} out_vslice_dummy_var_511 == in_vslice_dummy_var_511;
  free ensures {:va_keep} out_vslice_dummy_var_512 == in_vslice_dummy_var_512;
  free ensures {:va_keep} out_vslice_dummy_var_513 == in_vslice_dummy_var_513;
  free ensures {:va_keep} out_vslice_dummy_var_514 == in_vslice_dummy_var_514;
  free ensures {:va_keep} out_vslice_dummy_var_515 == in_vslice_dummy_var_515;
  free ensures {:va_keep} out_vslice_dummy_var_516 == in_vslice_dummy_var_516;
  free ensures {:va_keep} out_vslice_dummy_var_517 == in_vslice_dummy_var_517;
  free ensures {:va_keep} out_vslice_dummy_var_518 == in_vslice_dummy_var_518;
  free ensures {:va_keep} out_vslice_dummy_var_519 == in_vslice_dummy_var_519;
  free ensures {:va_keep} out_vslice_dummy_var_520 == in_vslice_dummy_var_520;
  free ensures {:va_keep} out_vslice_dummy_var_521 == in_vslice_dummy_var_521;
  free ensures {:va_keep} out_vslice_dummy_var_522 == in_vslice_dummy_var_522;
  free ensures {:va_keep} out_vslice_dummy_var_523 == in_vslice_dummy_var_523;
  free ensures {:va_keep} out_vslice_dummy_var_524 == in_vslice_dummy_var_524;
  free ensures {:va_keep} out_vslice_dummy_var_525 == in_vslice_dummy_var_525;
  free ensures {:va_keep} out_vslice_dummy_var_526 == in_vslice_dummy_var_526;
  free ensures {:va_keep} out_vslice_dummy_var_527 == in_vslice_dummy_var_527;
  free ensures {:va_keep} out_vslice_dummy_var_528 == in_vslice_dummy_var_528;
  free ensures {:va_keep} out_vslice_dummy_var_529 == in_vslice_dummy_var_529;
  free ensures {:va_keep} out_vslice_dummy_var_530 == in_vslice_dummy_var_530;
  free ensures {:va_keep} out_vslice_dummy_var_531 == in_vslice_dummy_var_531;
  free ensures {:va_keep} out_vslice_dummy_var_532 == in_vslice_dummy_var_532;
  free ensures {:va_keep} out_vslice_dummy_var_533 == in_vslice_dummy_var_533;
  free ensures {:va_keep} out_vslice_dummy_var_534 == in_vslice_dummy_var_534;
  free ensures {:va_keep} out_vslice_dummy_var_535 == in_vslice_dummy_var_535;
  free ensures {:va_keep} out_vslice_dummy_var_536 == in_vslice_dummy_var_536;
  free ensures {:va_keep} out_vslice_dummy_var_537 == in_vslice_dummy_var_537;
  free ensures {:va_keep} out_vslice_dummy_var_538 == in_vslice_dummy_var_538;
  free ensures {:va_keep} out_vslice_dummy_var_539 == in_vslice_dummy_var_539;
  free ensures {:va_keep} out_vslice_dummy_var_540 == in_vslice_dummy_var_540;
  free ensures {:va_keep} out_vslice_dummy_var_541 == in_vslice_dummy_var_541;
  free ensures {:va_keep} out_vslice_dummy_var_542 == in_vslice_dummy_var_542;
  free ensures {:va_keep} out_vslice_dummy_var_543 == in_vslice_dummy_var_543;
  free ensures {:va_keep} out_vslice_dummy_var_544 == in_vslice_dummy_var_544;
  free ensures {:va_keep} out_vslice_dummy_var_545 == in_vslice_dummy_var_545;
  free ensures {:va_keep} out_vslice_dummy_var_546 == in_vslice_dummy_var_546;
  free ensures {:va_keep} out_vslice_dummy_var_547 == in_vslice_dummy_var_547;
  free ensures {:va_keep} out_vslice_dummy_var_548 == in_vslice_dummy_var_548;
  free ensures {:va_keep} out_vslice_dummy_var_549 == in_vslice_dummy_var_549;
  free ensures {:va_keep} out_vslice_dummy_var_550 == in_vslice_dummy_var_550;
  free ensures {:va_keep} out_vslice_dummy_var_551 == in_vslice_dummy_var_551;
  free ensures {:va_keep} out_vslice_dummy_var_552 == in_vslice_dummy_var_552;
  free ensures {:va_keep} out_vslice_dummy_var_553 == in_vslice_dummy_var_553;
  free ensures {:va_keep} out_vslice_dummy_var_554 == in_vslice_dummy_var_554;
  free ensures {:va_keep} out_vslice_dummy_var_555 == in_vslice_dummy_var_555;
  free ensures {:va_keep} out_vslice_dummy_var_556 == in_vslice_dummy_var_556;
  free ensures {:va_keep} out_vslice_dummy_var_557 == in_vslice_dummy_var_557;
  free ensures {:va_keep} out_vslice_dummy_var_558 == in_vslice_dummy_var_558;
  free ensures {:va_keep} out_vslice_dummy_var_559 == in_vslice_dummy_var_559;
  free ensures {:va_keep} out_vslice_dummy_var_560 == in_vslice_dummy_var_560;
  free ensures {:va_keep} out_vslice_dummy_var_561 == in_vslice_dummy_var_561;
  free ensures {:va_keep} out_vslice_dummy_var_562 == in_vslice_dummy_var_562;
  free ensures {:va_keep} out_vslice_dummy_var_563 == in_vslice_dummy_var_563;
  free ensures {:va_keep} out_vslice_dummy_var_564 == in_vslice_dummy_var_564;
  free ensures {:va_keep} out_vslice_dummy_var_565 == in_vslice_dummy_var_565;
  free ensures {:va_keep} out_vslice_dummy_var_566 == in_vslice_dummy_var_566;
  free ensures {:va_keep} out_vslice_dummy_var_567 == in_vslice_dummy_var_567;
  free ensures {:va_keep} out_vslice_dummy_var_568 == in_vslice_dummy_var_568;
  free ensures {:va_keep} out_vslice_dummy_var_569 == in_vslice_dummy_var_569;
  free ensures {:va_keep} out_vslice_dummy_var_570 == in_vslice_dummy_var_570;
  free ensures {:va_keep} out_vslice_dummy_var_571 == in_vslice_dummy_var_571;
  free ensures {:va_keep} out_vslice_dummy_var_572 == in_vslice_dummy_var_572;
  free ensures {:va_keep} out_vslice_dummy_var_573 == in_vslice_dummy_var_573;
  free ensures {:va_keep} out_vslice_dummy_var_574 == in_vslice_dummy_var_574;
  free ensures {:va_keep} out_vslice_dummy_var_575 == in_vslice_dummy_var_575;
  free ensures {:va_keep} out_vslice_dummy_var_576 == in_vslice_dummy_var_576;
  free ensures {:va_keep} out_vslice_dummy_var_577 == in_vslice_dummy_var_577;
  free ensures {:va_keep} out_vslice_dummy_var_578 == in_vslice_dummy_var_578;
  free ensures {:va_keep} out_vslice_dummy_var_579 == in_vslice_dummy_var_579;
  free ensures {:va_keep} out_vslice_dummy_var_580 == in_vslice_dummy_var_580;
  free ensures {:va_keep} out_vslice_dummy_var_581 == in_vslice_dummy_var_581;
  free ensures {:va_keep} out_vslice_dummy_var_582 == in_vslice_dummy_var_582;
  free ensures {:va_keep} out_vslice_dummy_var_583 == in_vslice_dummy_var_583;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzKillAllReadsOrWrites_loop_L8(in_currentLastIrp: int, in_cancelIrql: int, in_sdv_706: int, in_sdv_707: int, in_cancelRoutine_1: int, in_Tmp_844: int, in_DeviceObject_10: int, in_QueueToClean: int, in_vslice_dummy_var_602: int, in_vslice_dummy_var_603: int, in_vslice_dummy_var_604: int, in_vslice_dummy_var_605: int, in_vslice_dummy_var_606: int) returns (out_currentLastIrp: int, out_cancelIrql: int, out_sdv_706: int, out_sdv_707: int, out_cancelRoutine_1: int, out_Tmp_844: int, out_vslice_dummy_var_602: int, out_vslice_dummy_var_603: int, out_vslice_dummy_var_604: int, out_vslice_dummy_var_605: int, out_vslice_dummy_var_606: int)
{
  var vslice_dummy_var_252: int;

  entry:
    out_currentLastIrp, out_cancelIrql, out_sdv_706, out_sdv_707, out_cancelRoutine_1, out_Tmp_844, out_vslice_dummy_var_602, out_vslice_dummy_var_603, out_vslice_dummy_var_604, out_vslice_dummy_var_605, out_vslice_dummy_var_606 := in_currentLastIrp, in_cancelIrql, in_sdv_706, in_sdv_707, in_cancelRoutine_1, in_Tmp_844, in_vslice_dummy_var_602, in_vslice_dummy_var_603, in_vslice_dummy_var_604, in_vslice_dummy_var_605, in_vslice_dummy_var_606;
    goto L8, exit;

  exit:
    return;

  L8:
    call {:si_unique_call 3154} out_sdv_706 := sdv_IsListEmpty(0);
    goto anon47_Else;

  anon47_Else:
    assume {:partition} out_sdv_706 == 0;
    assume {:nonnull} in_QueueToClean != 0;
    assume in_QueueToClean > 0;
    havoc vslice_dummy_var_252;
    call {:si_unique_call 3168} out_sdv_707 := sdv_containing_record(vslice_dummy_var_252, 88);
    out_currentLastIrp := out_sdv_707;
    call {:si_unique_call 3169} out_vslice_dummy_var_602 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    havoc out_cancelRoutine_1;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon59_Then, anon59_Else;

  anon59_Else:
    goto anon60_Then, anon60_Else;

  anon60_Else:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    goto anon62_Then, anon62_Else;

  anon62_Else:
    goto anon63_Then, anon63_Else;

  anon63_Else:
    goto anon64_Then, anon64_Else;

  anon64_Else:
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant456;
    call {:si_unique_call 3157} CyzCancelCurrentRead(in_DeviceObject_10, out_currentLastIrp);
    goto L42;

  L42:
    call {:si_unique_call 3155} out_Tmp_844 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_844 != 0;
    assume out_Tmp_844 > 0;
    call {:si_unique_call 3156} IoAcquireCancelSpinLock(out_Tmp_844);
    assume {:nonnull} out_Tmp_844 != 0;
    assume out_Tmp_844 > 0;
    havoc out_cancelIrql;
    goto L42_dummy;

  L42_dummy:
    call {:si_unique_call 3170} {:si_old_unique_call 1} out_currentLastIrp, out_cancelIrql, out_sdv_706, out_sdv_707, out_cancelRoutine_1, out_Tmp_844, out_vslice_dummy_var_602, out_vslice_dummy_var_603, out_vslice_dummy_var_604, out_vslice_dummy_var_605, out_vslice_dummy_var_606 := CyzKillAllReadsOrWrites_loop_L8(out_currentLastIrp, out_cancelIrql, out_sdv_706, out_sdv_707, out_cancelRoutine_1, out_Tmp_844, in_DeviceObject_10, in_QueueToClean, out_vslice_dummy_var_602, out_vslice_dummy_var_603, out_vslice_dummy_var_604, out_vslice_dummy_var_605, out_vslice_dummy_var_606);
    return;

  anon66_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 3158} CyzCancelCurrentWrite(in_DeviceObject_10, out_currentLastIrp);
    goto L42;

  anon65_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant198;
    call {:si_unique_call 3159} CyzCancelCurrentXoff(in_DeviceObject_10, out_currentLastIrp);
    goto L42;

  anon64_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant312;
    call {:si_unique_call 3160} CyzCancelImmediate(in_DeviceObject_10, out_currentLastIrp);
    goto L42;

  anon63_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 3161} CyzCancelQueued(in_DeviceObject_10, out_currentLastIrp);
    goto L42;

  anon62_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant178;
    call {:si_unique_call 3162} CyzCancelWait(in_DeviceObject_10, out_currentLastIrp);
    goto L42;

  anon61_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 3163} CyzFilterCancelQueued(in_DeviceObject_10, out_currentLastIrp);
    goto L42;

  anon60_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant334;
    call {:si_unique_call 3164} out_vslice_dummy_var_606 := CyzInternalIoControl(in_DeviceObject_10, out_currentLastIrp);
    goto L42;

  anon59_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant338;
    call {:si_unique_call 3165} out_vslice_dummy_var_605 := CyzQueryInformationFile(in_DeviceObject_10, out_currentLastIrp);
    goto L42;

  anon58_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant339;
    call {:si_unique_call 3166} out_vslice_dummy_var_604 := CyzSetInformationFile(in_DeviceObject_10, out_currentLastIrp);
    goto L42;

  anon69_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant262;
    call {:si_unique_call 3167} out_vslice_dummy_var_603 := CyzSystemControlDispatch(in_DeviceObject_10, out_currentLastIrp);
    goto L42;
}



procedure {:LoopProcedure} CyzKillAllReadsOrWrites_loop_L8(in_currentLastIrp: int, in_cancelIrql: int, in_sdv_706: int, in_sdv_707: int, in_cancelRoutine_1: int, in_Tmp_844: int, in_DeviceObject_10: int, in_QueueToClean: int, in_vslice_dummy_var_602: int, in_vslice_dummy_var_603: int, in_vslice_dummy_var_604: int, in_vslice_dummy_var_605: int, in_vslice_dummy_var_606: int) returns (out_currentLastIrp: int, out_cancelIrql: int, out_sdv_706: int, out_sdv_707: int, out_cancelRoutine_1: int, out_Tmp_844: int, out_vslice_dummy_var_602: int, out_vslice_dummy_var_603: int, out_vslice_dummy_var_604: int, out_vslice_dummy_var_605: int, out_vslice_dummy_var_606: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, stack_location, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} stack_location == old(stack_location);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_currentLastIrp == in_currentLastIrp;
  free ensures {:va_keep} out_cancelIrql == in_cancelIrql;
  free ensures {:va_keep} out_sdv_706 == in_sdv_706;
  free ensures {:va_keep} out_sdv_707 == in_sdv_707;
  free ensures {:va_keep} out_cancelRoutine_1 == in_cancelRoutine_1;
  free ensures {:va_keep} out_Tmp_844 == in_Tmp_844;
  free ensures {:va_keep} out_vslice_dummy_var_602 == in_vslice_dummy_var_602;
  free ensures {:va_keep} out_vslice_dummy_var_603 == in_vslice_dummy_var_603;
  free ensures {:va_keep} out_vslice_dummy_var_604 == in_vslice_dummy_var_604;
  free ensures {:va_keep} out_vslice_dummy_var_605 == in_vslice_dummy_var_605;
  free ensures {:va_keep} out_vslice_dummy_var_606 == in_vslice_dummy_var_606;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzKillAllStalled_loop_L10(in_currentLastIrp_1: int, in_Tmp_864: int, in_cancelIrql_1: int, in_pDevExt_16: int, in_sdv_727: int, in_sdv_728: int, in_cancelRoutine_2: int, in_PDevObj_15: int, in_vslice_dummy_var_618: int, in_vslice_dummy_var_619: int, in_vslice_dummy_var_620: int, in_vslice_dummy_var_621: int, in_vslice_dummy_var_622: int) returns (out_currentLastIrp_1: int, out_Tmp_864: int, out_cancelIrql_1: int, out_sdv_727: int, out_sdv_728: int, out_cancelRoutine_2: int, out_vslice_dummy_var_618: int, out_vslice_dummy_var_619: int, out_vslice_dummy_var_620: int, out_vslice_dummy_var_621: int, out_vslice_dummy_var_622: int)
{
  var vslice_dummy_var_253: int;

  entry:
    out_currentLastIrp_1, out_Tmp_864, out_cancelIrql_1, out_sdv_727, out_sdv_728, out_cancelRoutine_2, out_vslice_dummy_var_618, out_vslice_dummy_var_619, out_vslice_dummy_var_620, out_vslice_dummy_var_621, out_vslice_dummy_var_622 := in_currentLastIrp_1, in_Tmp_864, in_cancelIrql_1, in_sdv_727, in_sdv_728, in_cancelRoutine_2, in_vslice_dummy_var_618, in_vslice_dummy_var_619, in_vslice_dummy_var_620, in_vslice_dummy_var_621, in_vslice_dummy_var_622;
    goto L10, exit;

  exit:
    return;

  L10:
    call {:si_unique_call 3171} out_sdv_727 := sdv_IsListEmpty(0);
    goto anon23_Else;

  anon23_Else:
    assume {:partition} out_sdv_727 == 0;
    assume {:nonnull} in_pDevExt_16 != 0;
    assume in_pDevExt_16 > 0;
    havoc vslice_dummy_var_253;
    call {:si_unique_call 3185} out_sdv_728 := sdv_containing_record(vslice_dummy_var_253, 88);
    out_currentLastIrp_1 := out_sdv_728;
    call {:si_unique_call 3186} out_vslice_dummy_var_618 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    havoc out_cancelRoutine_2;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant456;
    call {:si_unique_call 3174} CyzCancelCurrentRead(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  L32:
    call {:si_unique_call 3172} out_Tmp_864 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_864 != 0;
    assume out_Tmp_864 > 0;
    call {:si_unique_call 3173} IoAcquireCancelSpinLock(out_Tmp_864);
    assume {:nonnull} out_Tmp_864 != 0;
    assume out_Tmp_864 > 0;
    havoc out_cancelIrql_1;
    goto L32_dummy;

  L32_dummy:
    call {:si_unique_call 3187} {:si_old_unique_call 1} out_currentLastIrp_1, out_Tmp_864, out_cancelIrql_1, out_sdv_727, out_sdv_728, out_cancelRoutine_2, out_vslice_dummy_var_618, out_vslice_dummy_var_619, out_vslice_dummy_var_620, out_vslice_dummy_var_621, out_vslice_dummy_var_622 := CyzKillAllStalled_loop_L10(out_currentLastIrp_1, out_Tmp_864, out_cancelIrql_1, in_pDevExt_16, out_sdv_727, out_sdv_728, out_cancelRoutine_2, in_PDevObj_15, out_vslice_dummy_var_618, out_vslice_dummy_var_619, out_vslice_dummy_var_620, out_vslice_dummy_var_621, out_vslice_dummy_var_622);
    return;

  anon32_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant196;
    call {:si_unique_call 3175} CyzCancelCurrentWrite(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon31_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant198;
    call {:si_unique_call 3176} CyzCancelCurrentXoff(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon30_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant312;
    call {:si_unique_call 3177} CyzCancelImmediate(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon29_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant149;
    call {:si_unique_call 3178} CyzCancelQueued(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon28_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant178;
    call {:si_unique_call 3179} CyzCancelWait(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon27_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant151;
    call {:si_unique_call 3180} CyzFilterCancelQueued(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon26_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant334;
    call {:si_unique_call 3181} out_vslice_dummy_var_622 := CyzInternalIoControl(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon25_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant338;
    call {:si_unique_call 3182} out_vslice_dummy_var_621 := CyzQueryInformationFile(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon24_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant339;
    call {:si_unique_call 3183} out_vslice_dummy_var_620 := CyzSetInformationFile(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;

  anon33_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant262;
    call {:si_unique_call 3184} out_vslice_dummy_var_619 := CyzSystemControlDispatch(in_PDevObj_15, out_currentLastIrp_1);
    goto L32;
}



procedure {:LoopProcedure} CyzKillAllStalled_loop_L10(in_currentLastIrp_1: int, in_Tmp_864: int, in_cancelIrql_1: int, in_pDevExt_16: int, in_sdv_727: int, in_sdv_728: int, in_cancelRoutine_2: int, in_PDevObj_15: int, in_vslice_dummy_var_618: int, in_vslice_dummy_var_619: int, in_vslice_dummy_var_620: int, in_vslice_dummy_var_621: int, in_vslice_dummy_var_622: int) returns (out_currentLastIrp_1: int, out_Tmp_864: int, out_cancelIrql_1: int, out_sdv_727: int, out_sdv_728: int, out_cancelRoutine_2: int, out_vslice_dummy_var_618: int, out_vslice_dummy_var_619: int, out_vslice_dummy_var_620: int, out_vslice_dummy_var_621: int, out_vslice_dummy_var_622: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, stack_location, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(locked) == 1 ==> locked != 0;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queued) == 0 ==> queued != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 0 ==> queuedWithoutMarking != 1;
  free ensures {:va_keep} old(stack_location) == 0 ==> stack_location != 1;
  free ensures {:va_keep} old(stack_location) == 1 ==> stack_location != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> locked == old(locked);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queued == old(queued);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> stack_location == old(stack_location);
  free ensures {:va_keep} alloc == old(alloc);
  free ensures {:va_keep} queued == old(queued);
  free ensures {:va_keep} stack_location == old(stack_location);
  free ensures {:va_keep} locked == old(locked);
  free ensures {:va_keep} markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_currentLastIrp_1 == in_currentLastIrp_1;
  free ensures {:va_keep} out_Tmp_864 == in_Tmp_864;
  free ensures {:va_keep} out_cancelIrql_1 == in_cancelIrql_1;
  free ensures {:va_keep} out_sdv_727 == in_sdv_727;
  free ensures {:va_keep} out_sdv_728 == in_sdv_728;
  free ensures {:va_keep} out_cancelRoutine_2 == in_cancelRoutine_2;
  free ensures {:va_keep} out_vslice_dummy_var_618 == in_vslice_dummy_var_618;
  free ensures {:va_keep} out_vslice_dummy_var_619 == in_vslice_dummy_var_619;
  free ensures {:va_keep} out_vslice_dummy_var_620 == in_vslice_dummy_var_620;
  free ensures {:va_keep} out_vslice_dummy_var_621 == in_vslice_dummy_var_621;
  free ensures {:va_keep} out_vslice_dummy_var_622 == in_vslice_dummy_var_622;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzGetNextWrite_loop_L6(in_s_p_e_c_i_a_l_35: int, in_sdv_761: int, in_Irp_12: int, in_pollIrql_11: int, in_OldIrql_10: int, in_sdv_764: int, in_OldIrql_11: int, in_sdv_766: int, in_Tmp_908: int, in_s_p_e_c_i_a_l_36: int, in_sdv_768: int, in_sdv_769: int, in_sdv_770: int, in_s_p_e_c_i_a_l_37: int, in_delta: int, in_Xc_2: int, in_s_p_e_c_i_a_l_38: int, in_Tmp_909: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_4: int, in_CompleteCurrent_3: int, in_Extension_48: int, in_vslice_dummy_var_638: int, in_vslice_dummy_var_639: int, in_vslice_dummy_var_642: int) returns (out_s_p_e_c_i_a_l_35: int, out_sdv_761: int, out_Irp_12: int, out_pollIrql_11: int, out_OldIrql_10: int, out_sdv_764: int, out_OldIrql_11: int, out_sdv_766: int, out_Tmp_908: int, out_s_p_e_c_i_a_l_36: int, out_sdv_768: int, out_sdv_769: int, out_sdv_770: int, out_s_p_e_c_i_a_l_37: int, out_Xc_2: int, out_s_p_e_c_i_a_l_38: int, out_Tmp_909: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_638: int, out_vslice_dummy_var_639: int, out_vslice_dummy_var_642: int)
{
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;

  entry:
    out_s_p_e_c_i_a_l_35, out_sdv_761, out_Irp_12, out_pollIrql_11, out_OldIrql_10, out_sdv_764, out_OldIrql_11, out_sdv_766, out_Tmp_908, out_s_p_e_c_i_a_l_36, out_sdv_768, out_sdv_769, out_sdv_770, out_s_p_e_c_i_a_l_37, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_909, out_CompleteCurrent_3, out_vslice_dummy_var_638, out_vslice_dummy_var_639, out_vslice_dummy_var_642 := in_s_p_e_c_i_a_l_35, in_sdv_761, in_Irp_12, in_pollIrql_11, in_OldIrql_10, in_sdv_764, in_OldIrql_11, in_sdv_766, in_Tmp_908, in_s_p_e_c_i_a_l_36, in_sdv_768, in_sdv_769, in_sdv_770, in_s_p_e_c_i_a_l_37, in_Xc_2, in_s_p_e_c_i_a_l_38, in_Tmp_909, in_CompleteCurrent_3, in_vslice_dummy_var_638, in_vslice_dummy_var_639, in_vslice_dummy_var_642;
    goto L6, exit;

  exit:
    return;

  L6:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_254;
    call {:si_unique_call 3188} out_sdv_766 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_254);
    assume {:nonnull} out_sdv_766 != 0;
    assume out_sdv_766 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 3191} out_Tmp_909 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_909 != 0;
    assume out_Tmp_909 > 0;
    call {:si_unique_call 3192} IoAcquireCancelSpinLock(out_Tmp_909);
    assume {:nonnull} out_Tmp_909 != 0;
    assume out_Tmp_909 > 0;
    havoc out_OldIrql_11;
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_256;
    call {:si_unique_call 3193} out_sdv_770 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_256);
    assume {:nonnull} in_Extension_48 != 0;
    assume in_Extension_48 > 0;
    assume {:nonnull} out_sdv_770 != 0;
    assume out_sdv_770 > 0;
    call {:si_unique_call 3194} IoReleaseCancelSpinLock(out_OldIrql_11);
    goto L24;

  L24:
    call {:si_unique_call 3190} CyzGetNextIrp(in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_4, out_CompleteCurrent_3, in_Extension_48);
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    goto anon16_Then;

  anon16_Then:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    havoc vslice_dummy_var_255;
    call {:si_unique_call 3189} out_sdv_769 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_255);
    assume {:nonnull} out_sdv_769 != 0;
    assume out_sdv_769 > 0;
    goto anon17_Then;

  anon17_Then:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    havoc out_Tmp_908;
    assume {:nonnull} out_Tmp_908 != 0;
    assume out_Tmp_908 > 0;
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    call {:si_unique_call 3207} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_35, out_sdv_761, out_Irp_12, out_pollIrql_11, out_OldIrql_10, out_sdv_764, out_OldIrql_11, out_sdv_766, out_Tmp_908, out_s_p_e_c_i_a_l_36, out_sdv_768, out_sdv_769, out_sdv_770, out_s_p_e_c_i_a_l_37, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_909, out_CompleteCurrent_3, out_vslice_dummy_var_638, out_vslice_dummy_var_639, out_vslice_dummy_var_642 := CyzGetNextWrite_loop_L6(out_s_p_e_c_i_a_l_35, out_sdv_761, out_Irp_12, out_pollIrql_11, out_OldIrql_10, out_sdv_764, out_OldIrql_11, out_sdv_766, out_Tmp_908, out_s_p_e_c_i_a_l_36, out_sdv_768, out_sdv_769, out_sdv_770, out_s_p_e_c_i_a_l_37, in_delta, out_Xc_2, out_s_p_e_c_i_a_l_38, out_Tmp_909, in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_4, out_CompleteCurrent_3, in_Extension_48, out_vslice_dummy_var_638, out_vslice_dummy_var_639, out_vslice_dummy_var_642);
    return;

  anon15_Then:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_257;
    call {:si_unique_call 3196} out_sdv_768 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_257);
    assume {:nonnull} out_sdv_768 != 0;
    assume out_sdv_768 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 3205} out_Tmp_909 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_909 != 0;
    assume out_Tmp_909 > 0;
    call {:si_unique_call 3206} IoAcquireCancelSpinLock(out_Tmp_909);
    assume {:nonnull} out_Tmp_909 != 0;
    assume out_Tmp_909 > 0;
    havoc out_OldIrql_10;
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc out_Irp_12;
    assume {:nonnull} out_Irp_12 != 0;
    assume out_Irp_12 > 0;
    havoc out_Xc_2;
    assume {:nonnull} in_Extension_48 != 0;
    assume in_Extension_48 > 0;
    assume {:nonnull} out_Irp_12 != 0;
    assume out_Irp_12 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto L69;

  L69:
    call {:si_unique_call 3195} IoReleaseCancelSpinLock(out_OldIrql_10);
    goto L24;

  anon21_Then:
    assume {:nonnull} out_Irp_12 != 0;
    assume out_Irp_12 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:nonnull} out_Irp_12 != 0;
    assume out_Irp_12 > 0;
    goto L69;

  anon19_Then:
    call {:si_unique_call 3199} out_vslice_dummy_var_638 := sdv_IoSetCancelRoutine(out_Irp_12, li2bplFunctionConstant198);
    out_s_p_e_c_i_a_l_36 := 2;
    call {:si_unique_call 3200} out_sdv_764 := sdv_IoGetCurrentIrpStackLocation(out_Irp_12);
    assume {:nonnull} out_sdv_764 != 0;
    assume out_sdv_764 > 0;
    out_s_p_e_c_i_a_l_35 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_764)));
    assume {:nonnull} out_s_p_e_c_i_a_l_35 != 0;
    assume out_s_p_e_c_i_a_l_35 > 0;
    out_CompleteCurrent_3 := 0;
    assume {:nonnull} in_Extension_48 != 0;
    assume in_Extension_48 > 0;
    call {:si_unique_call 3201} out_Tmp_909 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_909 != 0;
    assume out_Tmp_909 > 0;
    call {:si_unique_call 3202} sdv_KeAcquireSpinLock(0, out_Tmp_909);
    assume {:nonnull} out_Tmp_909 != 0;
    assume out_Tmp_909 > 0;
    havoc out_pollIrql_11;
    call {:si_unique_call 3203} out_vslice_dummy_var_639 := CyzGiveXoffToIsr(in_Extension_48);
    call {:si_unique_call 3204} sdv_KeReleaseSpinLock(0, out_pollIrql_11);
    assume {:nonnull} out_Xc_2 != 0;
    assume out_Xc_2 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} out_Xc_2 != 0;
    assume out_Xc_2 > 0;
    assume {:nonnull} in_delta != 0;
    assume in_delta > 0;
    assume {:nonnull} in_Extension_48 != 0;
    assume in_Extension_48 > 0;
    call {:si_unique_call 3197} out_vslice_dummy_var_642 := CyzSetTimer(XoffCountTimer__CYZ_DEVICE_EXTENSION(in_Extension_48), in_delta, XoffCountTimeoutDpc__CYZ_DEVICE_EXTENSION(in_Extension_48), in_Extension_48);
    out_s_p_e_c_i_a_l_38 := 4;
    call {:si_unique_call 3198} out_sdv_761 := sdv_IoGetCurrentIrpStackLocation(out_Irp_12);
    assume {:nonnull} out_sdv_761 != 0;
    assume out_sdv_761 > 0;
    out_s_p_e_c_i_a_l_37 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_761)));
    assume {:nonnull} out_s_p_e_c_i_a_l_37 != 0;
    assume out_s_p_e_c_i_a_l_37 > 0;
    goto L69;

  anon20_Then:
    goto L69;

  anon18_Then:
    goto L24;
}



procedure {:LoopProcedure} CyzGetNextWrite_loop_L6(in_s_p_e_c_i_a_l_35: int, in_sdv_761: int, in_Irp_12: int, in_pollIrql_11: int, in_OldIrql_10: int, in_sdv_764: int, in_OldIrql_11: int, in_sdv_766: int, in_Tmp_908: int, in_s_p_e_c_i_a_l_36: int, in_sdv_768: int, in_sdv_769: int, in_sdv_770: int, in_s_p_e_c_i_a_l_37: int, in_delta: int, in_Xc_2: int, in_s_p_e_c_i_a_l_38: int, in_Tmp_909: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_4: int, in_CompleteCurrent_3: int, in_Extension_48: int, in_vslice_dummy_var_638: int, in_vslice_dummy_var_639: int, in_vslice_dummy_var_642: int) returns (out_s_p_e_c_i_a_l_35: int, out_sdv_761: int, out_Irp_12: int, out_pollIrql_11: int, out_OldIrql_10: int, out_sdv_764: int, out_OldIrql_11: int, out_sdv_766: int, out_Tmp_908: int, out_s_p_e_c_i_a_l_36: int, out_sdv_768: int, out_sdv_769: int, out_sdv_770: int, out_s_p_e_c_i_a_l_37: int, out_Xc_2: int, out_s_p_e_c_i_a_l_38: int, out_Tmp_909: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_638: int, out_vslice_dummy_var_639: int, out_vslice_dummy_var_642: int);
  modifies alloc, locked, queuedWithoutMarking;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_s_p_e_c_i_a_l_36 == 2 || out_s_p_e_c_i_a_l_36 == in_s_p_e_c_i_a_l_36;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_38 == 4 || out_s_p_e_c_i_a_l_38 == in_s_p_e_c_i_a_l_38;
  free ensures {:va_keep} out_CompleteCurrent_3 == 0 || out_CompleteCurrent_3 == in_CompleteCurrent_3;
  free ensures {:va_keep} out_vslice_dummy_var_639 == 0 || out_vslice_dummy_var_639 == in_vslice_dummy_var_639;
  free ensures {:va_keep} out_vslice_dummy_var_642 == 1 || out_vslice_dummy_var_642 == 0 || out_vslice_dummy_var_642 == in_vslice_dummy_var_642;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzStartMask_loop_L12(in_s_p_e_c_i_a_l_41: int, in_FirstStatus_1: int, in_Tmp_947: int, in_SetFirstStatus_1: int, in_Tmp_948: int, in_Tmp_949: int, in_Tmp_950: int, in_Tmp_951: int, in_Tmp_952: int, in_Tmp_953: int, in_Tmp_954: int, in_IrpSp_3: int, in_OldIrql_12: int, in_Tmp_955: int, in_NewIrp_5: int, in_s_p_e_c_i_a_l_42: int, in_Tmp_956: int, in_sdv_810: int, in_Tmp_957: int, in_Tmp_958: int, in_Tmp_959: int, in_Tmp_960: int, in_Tmp_961: int, in_Tmp_962: int, in_sdv_813: int, in_Tmp_963: int, in_pollIrql_13: int, in_Tmp_964: int, in_Extension_52: int, in_vslice_dummy_var_660: int, in_vslice_dummy_var_661: int, in_vslice_dummy_var_663: int, in_vslice_dummy_var_664: int, in_vslice_dummy_var_665: int, in_vslice_dummy_var_666: int, in_vslice_dummy_var_667: int, in_vslice_dummy_var_668: int, in_vslice_dummy_var_669: int, in_vslice_dummy_var_670: int, in_vslice_dummy_var_671: int, in_vslice_dummy_var_672: int, in_vslice_dummy_var_673: int, in_vslice_dummy_var_674: int, in_vslice_dummy_var_675: int, in_vslice_dummy_var_676: int) returns (out_s_p_e_c_i_a_l_41: int, out_FirstStatus_1: int, out_Tmp_947: int, out_SetFirstStatus_1: int, out_Tmp_948: int, out_Tmp_949: int, out_Tmp_950: int, out_Tmp_951: int, out_Tmp_952: int, out_Tmp_953: int, out_Tmp_954: int, out_IrpSp_3: int, out_OldIrql_12: int, out_Tmp_955: int, out_s_p_e_c_i_a_l_42: int, out_Tmp_956: int, out_sdv_810: int, out_Tmp_957: int, out_Tmp_958: int, out_Tmp_959: int, out_Tmp_960: int, out_Tmp_961: int, out_Tmp_962: int, out_sdv_813: int, out_Tmp_963: int, out_pollIrql_13: int, out_Tmp_964: int, out_vslice_dummy_var_660: int, out_vslice_dummy_var_661: int, out_vslice_dummy_var_663: int, out_vslice_dummy_var_664: int, out_vslice_dummy_var_665: int, out_vslice_dummy_var_666: int, out_vslice_dummy_var_667: int, out_vslice_dummy_var_668: int, out_vslice_dummy_var_669: int, out_vslice_dummy_var_670: int, out_vslice_dummy_var_671: int, out_vslice_dummy_var_672: int, out_vslice_dummy_var_673: int, out_vslice_dummy_var_674: int, out_vslice_dummy_var_675: int, out_vslice_dummy_var_676: int)
{
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;

  entry:
    out_s_p_e_c_i_a_l_41, out_FirstStatus_1, out_Tmp_947, out_SetFirstStatus_1, out_Tmp_948, out_Tmp_949, out_Tmp_950, out_Tmp_951, out_Tmp_952, out_Tmp_953, out_Tmp_954, out_IrpSp_3, out_OldIrql_12, out_Tmp_955, out_s_p_e_c_i_a_l_42, out_Tmp_956, out_sdv_810, out_Tmp_957, out_Tmp_958, out_Tmp_959, out_Tmp_960, out_Tmp_961, out_Tmp_962, out_sdv_813, out_Tmp_963, out_pollIrql_13, out_Tmp_964, out_vslice_dummy_var_660, out_vslice_dummy_var_661, out_vslice_dummy_var_663, out_vslice_dummy_var_664, out_vslice_dummy_var_665, out_vslice_dummy_var_666, out_vslice_dummy_var_667, out_vslice_dummy_var_668, out_vslice_dummy_var_669, out_vslice_dummy_var_670, out_vslice_dummy_var_671, out_vslice_dummy_var_672, out_vslice_dummy_var_673, out_vslice_dummy_var_674, out_vslice_dummy_var_675, out_vslice_dummy_var_676 := in_s_p_e_c_i_a_l_41, in_FirstStatus_1, in_Tmp_947, in_SetFirstStatus_1, in_Tmp_948, in_Tmp_949, in_Tmp_950, in_Tmp_951, in_Tmp_952, in_Tmp_953, in_Tmp_954, in_IrpSp_3, in_OldIrql_12, in_Tmp_955, in_s_p_e_c_i_a_l_42, in_Tmp_956, in_sdv_810, in_Tmp_957, in_Tmp_958, in_Tmp_959, in_Tmp_960, in_Tmp_961, in_Tmp_962, in_sdv_813, in_Tmp_963, in_pollIrql_13, in_Tmp_964, in_vslice_dummy_var_660, in_vslice_dummy_var_661, in_vslice_dummy_var_663, in_vslice_dummy_var_664, in_vslice_dummy_var_665, in_vslice_dummy_var_666, in_vslice_dummy_var_667, in_vslice_dummy_var_668, in_vslice_dummy_var_669, in_vslice_dummy_var_670, in_vslice_dummy_var_671, in_vslice_dummy_var_672, in_vslice_dummy_var_673, in_vslice_dummy_var_674, in_vslice_dummy_var_675, in_vslice_dummy_var_676;
    goto L12, exit;

  exit:
    return;

  L12:
    out_Tmp_960 := strConst__li2bpl223;
    call {:si_unique_call 3208} out_vslice_dummy_var_663 := CyzDbgPrintEx(7, out_Tmp_960);
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    havoc vslice_dummy_var_258;
    call {:si_unique_call 3209} out_IrpSp_3 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_258);
    assume {:nonnull} out_IrpSp_3 != 0;
    assume out_IrpSp_3 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    out_Tmp_949 := strConst__li2bpl224;
    call {:si_unique_call 3236} out_vslice_dummy_var_664 := CyzDbgPrintEx(7, out_Tmp_949);
    call {:si_unique_call 3237} out_Tmp_955 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_955 != 0;
    assume out_Tmp_955 > 0;
    call {:si_unique_call 3238} sdv_KeAcquireSpinLock(0, out_Tmp_955);
    assume {:nonnull} out_Tmp_955 != 0;
    assume out_Tmp_955 > 0;
    havoc out_pollIrql_13;
    call {:si_unique_call 3239} out_vslice_dummy_var_660 := CyzFinishOldWait(in_Extension_52);
    call {:si_unique_call 3240} sdv_KeReleaseSpinLock(0, out_pollIrql_13);
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    havoc out_Tmp_956;
    assume {:nonnull} out_Tmp_956 != 0;
    assume out_Tmp_956 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L38;

  L38:
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    call {:si_unique_call 3210} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_52), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_52), in_NewIrp_5, 1, in_Extension_52);
    out_Tmp_961 := strConst__li2bpl226;
    call {:si_unique_call 3211} out_vslice_dummy_var_665 := CyzDbgPrintEx(7, out_Tmp_961);
    goto L44;

  L44:
    assume {:nonnull} in_NewIrp_5 != 0;
    assume in_NewIrp_5 > 0;
    goto anon21_Then;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    call {:si_unique_call 3241} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_41, out_FirstStatus_1, out_Tmp_947, out_SetFirstStatus_1, out_Tmp_948, out_Tmp_949, out_Tmp_950, out_Tmp_951, out_Tmp_952, out_Tmp_953, out_Tmp_954, out_IrpSp_3, out_OldIrql_12, out_Tmp_955, out_s_p_e_c_i_a_l_42, out_Tmp_956, out_sdv_810, out_Tmp_957, out_Tmp_958, out_Tmp_959, out_Tmp_960, out_Tmp_961, out_Tmp_962, out_sdv_813, out_Tmp_963, out_pollIrql_13, out_Tmp_964, out_vslice_dummy_var_660, out_vslice_dummy_var_661, out_vslice_dummy_var_663, out_vslice_dummy_var_664, out_vslice_dummy_var_665, out_vslice_dummy_var_666, out_vslice_dummy_var_667, out_vslice_dummy_var_668, out_vslice_dummy_var_669, out_vslice_dummy_var_670, out_vslice_dummy_var_671, out_vslice_dummy_var_672, out_vslice_dummy_var_673, out_vslice_dummy_var_674, out_vslice_dummy_var_675, out_vslice_dummy_var_676 := CyzStartMask_loop_L12(out_s_p_e_c_i_a_l_41, out_FirstStatus_1, out_Tmp_947, out_SetFirstStatus_1, out_Tmp_948, out_Tmp_949, out_Tmp_950, out_Tmp_951, out_Tmp_952, out_Tmp_953, out_Tmp_954, out_IrpSp_3, out_OldIrql_12, out_Tmp_955, in_NewIrp_5, out_s_p_e_c_i_a_l_42, out_Tmp_956, out_sdv_810, out_Tmp_957, out_Tmp_958, out_Tmp_959, out_Tmp_960, out_Tmp_961, out_Tmp_962, out_sdv_813, out_Tmp_963, out_pollIrql_13, out_Tmp_964, in_Extension_52, out_vslice_dummy_var_660, out_vslice_dummy_var_661, out_vslice_dummy_var_663, out_vslice_dummy_var_664, out_vslice_dummy_var_665, out_vslice_dummy_var_666, out_vslice_dummy_var_667, out_vslice_dummy_var_668, out_vslice_dummy_var_669, out_vslice_dummy_var_670, out_vslice_dummy_var_671, out_vslice_dummy_var_672, out_vslice_dummy_var_673, out_vslice_dummy_var_674, out_vslice_dummy_var_675, out_vslice_dummy_var_676);
    return;

  anon24_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_947 := strConst__li2bpl225;
    call {:si_unique_call 3235} out_vslice_dummy_var_666 := CyzDbgPrintEx(7, out_Tmp_947);
    out_FirstStatus_1 := 0;
    out_SetFirstStatus_1 := 1;
    goto L38;

  anon19_Then:
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    call {:si_unique_call 3230} out_Tmp_955 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_955 != 0;
    assume out_Tmp_955 > 0;
    call {:si_unique_call 3231} IoAcquireCancelSpinLock(out_Tmp_955);
    assume {:nonnull} out_Tmp_955 != 0;
    assume out_Tmp_955 > 0;
    havoc out_OldIrql_12;
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    havoc out_Tmp_954;
    assume {:nonnull} out_Tmp_954 != 0;
    assume out_Tmp_954 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    out_Tmp_953 := strConst__li2bpl229;
    call {:si_unique_call 3233} out_vslice_dummy_var_670 := CyzDbgPrintEx(7, out_Tmp_953);
    call {:si_unique_call 3234} IoReleaseCancelSpinLock(out_OldIrql_12);
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    havoc out_Tmp_963;
    assume {:nonnull} out_Tmp_963 != 0;
    assume out_Tmp_963 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L71;

  L71:
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    call {:si_unique_call 3212} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_52), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_52), in_NewIrp_5, 1, in_Extension_52);
    out_Tmp_962 := strConst__li2bpl226;
    call {:si_unique_call 3213} out_vslice_dummy_var_671 := CyzDbgPrintEx(7, out_Tmp_962);
    goto L44;

  anon27_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_951 := strConst__li2bpl225;
    call {:si_unique_call 3232} out_vslice_dummy_var_672 := CyzDbgPrintEx(7, out_Tmp_951);
    out_FirstStatus_1 := -1073741536;
    out_SetFirstStatus_1 := 1;
    goto L71;

  anon26_Then:
    out_Tmp_959 := strConst__li2bpl228;
    call {:si_unique_call 3229} out_vslice_dummy_var_673 := CyzDbgPrintEx(7, out_Tmp_959);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L83;

  L83:
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    havoc vslice_dummy_var_259;
    call {:si_unique_call 3214} out_sdv_810 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_259);
    assume {:nonnull} out_sdv_810 != 0;
    assume out_sdv_810 > 0;
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    havoc vslice_dummy_var_260;
    call {:si_unique_call 3215} out_vslice_dummy_var_674 := sdv_IoSetCancelRoutine(vslice_dummy_var_260, li2bplFunctionConstant178);
    out_s_p_e_c_i_a_l_42 := 2;
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    havoc vslice_dummy_var_261;
    call {:si_unique_call 3216} out_sdv_813 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_261);
    assume {:nonnull} out_sdv_813 != 0;
    assume out_sdv_813 > 0;
    out_s_p_e_c_i_a_l_41 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_813)));
    assume {:nonnull} out_s_p_e_c_i_a_l_41 != 0;
    assume out_s_p_e_c_i_a_l_41 > 0;
    call {:si_unique_call 3217} out_Tmp_955 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_955 != 0;
    assume out_Tmp_955 > 0;
    call {:si_unique_call 3218} sdv_KeAcquireSpinLock(0, out_Tmp_955);
    assume {:nonnull} out_Tmp_955 != 0;
    assume out_Tmp_955 > 0;
    havoc out_pollIrql_13;
    call {:si_unique_call 3219} out_vslice_dummy_var_661 := CyzGiveWaitToIsr(in_Extension_52);
    call {:si_unique_call 3220} sdv_KeReleaseSpinLock(0, out_pollIrql_13);
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    call {:si_unique_call 3221} CyzGetNextIrpLocked(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_52), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_52), in_NewIrp_5, 0, in_Extension_52, out_OldIrql_12);
    out_Tmp_952 := strConst__li2bpl226;
    call {:si_unique_call 3222} out_vslice_dummy_var_675 := CyzDbgPrintEx(7, out_Tmp_952);
    goto L44;

  anon23_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_957 := strConst__li2bpl225;
    call {:si_unique_call 3227} out_vslice_dummy_var_676 := CyzDbgPrintEx(7, out_Tmp_957);
    out_FirstStatus_1 := 259;
    out_SetFirstStatus_1 := 1;
    call {:si_unique_call 3228} sdv_IoMarkIrpPending(0);
    goto L83;

  anon22_Then:
    goto L48;

  L48:
    out_Tmp_958 := strConst__li2bpl227;
    call {:si_unique_call 3226} out_vslice_dummy_var_667 := CyzDbgPrintEx(7, out_Tmp_958);
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    havoc out_Tmp_948;
    assume {:nonnull} out_Tmp_948 != 0;
    assume out_Tmp_948 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L125;

  L125:
    assume {:nonnull} in_Extension_52 != 0;
    assume in_Extension_52 > 0;
    call {:si_unique_call 3223} CyzGetNextIrp(CurrentMaskIrp__CYZ_DEVICE_EXTENSION(in_Extension_52), MaskQueue__CYZ_DEVICE_EXTENSION(in_Extension_52), in_NewIrp_5, 1, in_Extension_52);
    out_Tmp_964 := strConst__li2bpl226;
    call {:si_unique_call 3224} out_vslice_dummy_var_668 := CyzDbgPrintEx(7, out_Tmp_964);
    goto L44;

  anon25_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_950 := strConst__li2bpl225;
    call {:si_unique_call 3225} out_vslice_dummy_var_669 := CyzDbgPrintEx(7, out_Tmp_950);
    out_FirstStatus_1 := -1073741811;
    out_SetFirstStatus_1 := 1;
    goto L125;

  anon20_Then:
    goto L48;
}



procedure {:LoopProcedure} CyzStartMask_loop_L12(in_s_p_e_c_i_a_l_41: int, in_FirstStatus_1: int, in_Tmp_947: int, in_SetFirstStatus_1: int, in_Tmp_948: int, in_Tmp_949: int, in_Tmp_950: int, in_Tmp_951: int, in_Tmp_952: int, in_Tmp_953: int, in_Tmp_954: int, in_IrpSp_3: int, in_OldIrql_12: int, in_Tmp_955: int, in_NewIrp_5: int, in_s_p_e_c_i_a_l_42: int, in_Tmp_956: int, in_sdv_810: int, in_Tmp_957: int, in_Tmp_958: int, in_Tmp_959: int, in_Tmp_960: int, in_Tmp_961: int, in_Tmp_962: int, in_sdv_813: int, in_Tmp_963: int, in_pollIrql_13: int, in_Tmp_964: int, in_Extension_52: int, in_vslice_dummy_var_660: int, in_vslice_dummy_var_661: int, in_vslice_dummy_var_663: int, in_vslice_dummy_var_664: int, in_vslice_dummy_var_665: int, in_vslice_dummy_var_666: int, in_vslice_dummy_var_667: int, in_vslice_dummy_var_668: int, in_vslice_dummy_var_669: int, in_vslice_dummy_var_670: int, in_vslice_dummy_var_671: int, in_vslice_dummy_var_672: int, in_vslice_dummy_var_673: int, in_vslice_dummy_var_674: int, in_vslice_dummy_var_675: int, in_vslice_dummy_var_676: int) returns (out_s_p_e_c_i_a_l_41: int, out_FirstStatus_1: int, out_Tmp_947: int, out_SetFirstStatus_1: int, out_Tmp_948: int, out_Tmp_949: int, out_Tmp_950: int, out_Tmp_951: int, out_Tmp_952: int, out_Tmp_953: int, out_Tmp_954: int, out_IrpSp_3: int, out_OldIrql_12: int, out_Tmp_955: int, out_s_p_e_c_i_a_l_42: int, out_Tmp_956: int, out_sdv_810: int, out_Tmp_957: int, out_Tmp_958: int, out_Tmp_959: int, out_Tmp_960: int, out_Tmp_961: int, out_Tmp_962: int, out_sdv_813: int, out_Tmp_963: int, out_pollIrql_13: int, out_Tmp_964: int, out_vslice_dummy_var_660: int, out_vslice_dummy_var_661: int, out_vslice_dummy_var_663: int, out_vslice_dummy_var_664: int, out_vslice_dummy_var_665: int, out_vslice_dummy_var_666: int, out_vslice_dummy_var_667: int, out_vslice_dummy_var_668: int, out_vslice_dummy_var_669: int, out_vslice_dummy_var_670: int, out_vslice_dummy_var_671: int, out_vslice_dummy_var_672: int, out_vslice_dummy_var_673: int, out_vslice_dummy_var_674: int, out_vslice_dummy_var_675: int, out_vslice_dummy_var_676: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_FirstStatus_1 == 0 || out_FirstStatus_1 == -1073741536 || out_FirstStatus_1 == 259 || out_FirstStatus_1 == -1073741811 || out_FirstStatus_1 == in_FirstStatus_1;
  free ensures {:va_keep} out_SetFirstStatus_1 == 1 || out_SetFirstStatus_1 == in_SetFirstStatus_1;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_42 == 2 || out_s_p_e_c_i_a_l_42 == in_s_p_e_c_i_a_l_42;
  free ensures {:va_keep} out_vslice_dummy_var_660 == 0 || out_vslice_dummy_var_660 == in_vslice_dummy_var_660;
  free ensures {:va_keep} out_vslice_dummy_var_661 == 0 || out_vslice_dummy_var_661 == in_vslice_dummy_var_661;
  free ensures {:va_keep} out_vslice_dummy_var_663 == 0 || out_vslice_dummy_var_663 == in_vslice_dummy_var_663;
  free ensures {:va_keep} out_vslice_dummy_var_664 == 0 || out_vslice_dummy_var_664 == in_vslice_dummy_var_664;
  free ensures {:va_keep} out_vslice_dummy_var_665 == 0 || out_vslice_dummy_var_665 == in_vslice_dummy_var_665;
  free ensures {:va_keep} out_vslice_dummy_var_666 == 0 || out_vslice_dummy_var_666 == in_vslice_dummy_var_666;
  free ensures {:va_keep} out_vslice_dummy_var_667 == 0 || out_vslice_dummy_var_667 == in_vslice_dummy_var_667;
  free ensures {:va_keep} out_vslice_dummy_var_668 == 0 || out_vslice_dummy_var_668 == in_vslice_dummy_var_668;
  free ensures {:va_keep} out_vslice_dummy_var_669 == 0 || out_vslice_dummy_var_669 == in_vslice_dummy_var_669;
  free ensures {:va_keep} out_vslice_dummy_var_670 == 0 || out_vslice_dummy_var_670 == in_vslice_dummy_var_670;
  free ensures {:va_keep} out_vslice_dummy_var_671 == 0 || out_vslice_dummy_var_671 == in_vslice_dummy_var_671;
  free ensures {:va_keep} out_vslice_dummy_var_672 == 0 || out_vslice_dummy_var_672 == in_vslice_dummy_var_672;
  free ensures {:va_keep} out_vslice_dummy_var_673 == 0 || out_vslice_dummy_var_673 == in_vslice_dummy_var_673;
  free ensures {:va_keep} out_vslice_dummy_var_675 == 0 || out_vslice_dummy_var_675 == in_vslice_dummy_var_675;
  free ensures {:va_keep} out_vslice_dummy_var_676 == 0 || out_vslice_dummy_var_676 == in_vslice_dummy_var_676;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzStartRead_loop_L24(in_localStatus_1: int, in_Tmp_1282: int, in_totalTime: int, in_os2ssreturn: int, in_timeoutsForIrp: int, in_updateChar: int, in_setFirstStatus: int, in_Tmp_1284: int, in_useTotalTimer: int, in_newIrp_1: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_930: int, in_sdv_931: int, in_oldIrql_10: int, in_Tmp_1285: int, in_sdv_932: int, in_constantVal: int, in_controlIrql: int, in_Tmp_1286: int, in_Tmp_1288: int, in_returnWithWhatsPresent: int, in_Tmp_1289: int, in_Tmp_1290: int, in_pollIrql_14: int, in_useIntervalTimer: int, in_firstStatus: int, in_sdv_939: int, in_Extension_58: int, in_boogieTmp: int, in_vslice_dummy_var_740: int, in_vslice_dummy_var_741: int, in_vslice_dummy_var_742: int, in_vslice_dummy_var_745: int) returns (out_localStatus_1: int, out_Tmp_1282: int, out_os2ssreturn: int, out_setFirstStatus: int, out_Tmp_1284: int, out_useTotalTimer: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_930: int, out_sdv_931: int, out_oldIrql_10: int, out_Tmp_1285: int, out_sdv_932: int, out_constantVal: int, out_controlIrql: int, out_Tmp_1286: int, out_Tmp_1288: int, out_returnWithWhatsPresent: int, out_Tmp_1289: int, out_Tmp_1290: int, out_pollIrql_14: int, out_useIntervalTimer: int, out_firstStatus: int, out_sdv_939: int, out_boogieTmp: int, out_vslice_dummy_var_740: int, out_vslice_dummy_var_741: int, out_vslice_dummy_var_742: int, out_vslice_dummy_var_745: int)
{
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;

  entry:
    out_localStatus_1, out_Tmp_1282, out_os2ssreturn, out_setFirstStatus, out_Tmp_1284, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_930, out_sdv_931, out_oldIrql_10, out_Tmp_1285, out_sdv_932, out_constantVal, out_controlIrql, out_Tmp_1286, out_Tmp_1288, out_returnWithWhatsPresent, out_Tmp_1289, out_Tmp_1290, out_pollIrql_14, out_useIntervalTimer, out_firstStatus, out_sdv_939, out_boogieTmp, out_vslice_dummy_var_740, out_vslice_dummy_var_741, out_vslice_dummy_var_742, out_vslice_dummy_var_745 := in_localStatus_1, in_Tmp_1282, in_os2ssreturn, in_setFirstStatus, in_Tmp_1284, in_useTotalTimer, in_multiplierVal, in_crunchDownToOne, in_sdv_930, in_sdv_931, in_oldIrql_10, in_Tmp_1285, in_sdv_932, in_constantVal, in_controlIrql, in_Tmp_1286, in_Tmp_1288, in_returnWithWhatsPresent, in_Tmp_1289, in_Tmp_1290, in_pollIrql_14, in_useIntervalTimer, in_firstStatus, in_sdv_939, in_boogieTmp, in_vslice_dummy_var_740, in_vslice_dummy_var_741, in_vslice_dummy_var_742, in_vslice_dummy_var_745;
    goto L24, exit;

  exit:
    return;

  L24:
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    havoc vslice_dummy_var_262;
    call {:si_unique_call 3242} out_sdv_930 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_262);
    assume {:nonnull} out_sdv_930 != 0;
    assume out_sdv_930 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 3270} out_localStatus_1 := CyzResizeBuffer(in_Extension_58);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  L38:
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    call {:si_unique_call 3243} CyzGetNextIrp(CurrentReadIrp__CYZ_DEVICE_EXTENSION(in_Extension_58), ReadQueue__CYZ_DEVICE_EXTENSION(in_Extension_58), in_newIrp_1, 1, in_Extension_58);
    assume {:nonnull} in_newIrp_1 != 0;
    assume in_newIrp_1 > 0;
    goto anon61_Then;

  anon61_Then:
    goto anon61_Then_dummy;

  anon61_Then_dummy:
    call {:si_unique_call 3271} {:si_old_unique_call 1} out_localStatus_1, out_Tmp_1282, out_os2ssreturn, out_setFirstStatus, out_Tmp_1284, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_930, out_sdv_931, out_oldIrql_10, out_Tmp_1285, out_sdv_932, out_constantVal, out_controlIrql, out_Tmp_1286, out_Tmp_1288, out_returnWithWhatsPresent, out_Tmp_1289, out_Tmp_1290, out_pollIrql_14, out_useIntervalTimer, out_firstStatus, out_sdv_939, out_boogieTmp, out_vslice_dummy_var_740, out_vslice_dummy_var_741, out_vslice_dummy_var_742, out_vslice_dummy_var_745 := CyzStartRead_loop_L24(out_localStatus_1, out_Tmp_1282, in_totalTime, out_os2ssreturn, in_timeoutsForIrp, in_updateChar, out_setFirstStatus, out_Tmp_1284, out_useTotalTimer, in_newIrp_1, out_multiplierVal, out_crunchDownToOne, out_sdv_930, out_sdv_931, out_oldIrql_10, out_Tmp_1285, out_sdv_932, out_constantVal, out_controlIrql, out_Tmp_1286, out_Tmp_1288, out_returnWithWhatsPresent, out_Tmp_1289, out_Tmp_1290, out_pollIrql_14, out_useIntervalTimer, out_firstStatus, out_sdv_939, in_Extension_58, out_boogieTmp, out_vslice_dummy_var_740, out_vslice_dummy_var_741, out_vslice_dummy_var_742, out_vslice_dummy_var_745);
    return;

  anon60_Then:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := out_localStatus_1;
    out_setFirstStatus := 1;
    goto L38;

  anon59_Then:
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    havoc vslice_dummy_var_265;
    call {:si_unique_call 3257} out_sdv_932 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_265);
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    assume {:nonnull} out_sdv_932 != 0;
    assume out_sdv_932 > 0;
    out_useTotalTimer := 0;
    out_returnWithWhatsPresent := 0;
    out_os2ssreturn := 0;
    out_crunchDownToOne := 0;
    out_useIntervalTimer := 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    call {:si_unique_call 3258} out_vslice_dummy_var_745 := CyzCancelTimer(ReadRequestTotalTimer__CYZ_DEVICE_EXTENSION(in_Extension_58), in_Extension_58);
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    call {:si_unique_call 3259} out_vslice_dummy_var_740 := CyzCancelTimer(ReadRequestIntervalTimer__CYZ_DEVICE_EXTENSION(in_Extension_58), in_Extension_58);
    call {:si_unique_call 3260} out_Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    call {:si_unique_call 3261} sdv_KeAcquireSpinLock(0, out_Tmp_1289);
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    havoc out_controlIrql;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    call {:si_unique_call 3262} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    out_useIntervalTimer := 1;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    goto L67;

  L67:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L77;

  L77:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L84;

  L84:
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:partition} out_useTotalTimer != 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    assume {:nonnull} in_totalTime != 0;
    assume in_totalTime > 0;
    goto L85;

  L85:
    call {:si_unique_call 3254} out_Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    call {:si_unique_call 3255} sdv_KeAcquireSpinLock(0, out_Tmp_1289);
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    havoc out_controlIrql;
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    call {:si_unique_call 3256} out_boogieTmp := CyzGetCharsFromIntBuffer(in_Extension_58);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} out_returnWithWhatsPresent != 0;
    goto L95;

  L95:
    call {:si_unique_call 3265} out_Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    call {:si_unique_call 3266} sdv_KeAcquireSpinLock(0, out_Tmp_1289);
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    havoc out_pollIrql_14;
    call {:si_unique_call 3267} out_vslice_dummy_var_741 := CyzUpdateInterruptBuffer(in_updateChar);
    call {:si_unique_call 3268} sdv_KeReleaseSpinLock(0, out_pollIrql_14);
    call {:si_unique_call 3269} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    havoc out_Tmp_1290;
    assume {:nonnull} out_Tmp_1290 != 0;
    assume out_Tmp_1290 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L38;

  anon83_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  anon72_Then:
    assume {:partition} out_returnWithWhatsPresent == 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} out_os2ssreturn != 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    havoc out_Tmp_1285;
    assume {:nonnull} out_Tmp_1285 != 0;
    assume out_Tmp_1285 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L112;

  L112:
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    havoc vslice_dummy_var_264;
    call {:si_unique_call 3251} out_sdv_939 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_264);
    assume {:nonnull} out_sdv_939 != 0;
    assume out_sdv_939 > 0;
    call {:si_unique_call 3252} out_Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    call {:si_unique_call 3253} IoAcquireCancelSpinLock(out_Tmp_1289);
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    havoc out_oldIrql_10;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    havoc out_Tmp_1284;
    assume {:nonnull} out_Tmp_1284 != 0;
    assume out_Tmp_1284 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 3263} IoReleaseCancelSpinLock(out_oldIrql_10);
    call {:si_unique_call 3264} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    havoc out_Tmp_1288;
    assume {:nonnull} out_Tmp_1288 != 0;
    assume out_Tmp_1288 > 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    havoc out_Tmp_1282;
    assume {:nonnull} out_Tmp_1282 != 0;
    assume out_Tmp_1282 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := -1073741536;
    out_setFirstStatus := 1;
    goto L38;

  anon86_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  anon85_Then:
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} out_crunchDownToOne != 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    havoc vslice_dummy_var_263;
    call {:si_unique_call 3250} out_sdv_931 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_263);
    assume {:nonnull} out_sdv_931 != 0;
    assume out_sdv_931 > 0;
    goto L133;

  L133:
    call {:si_unique_call 3246} out_Tmp_1289 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    call {:si_unique_call 3247} sdv_KeAcquireSpinLock(0, out_Tmp_1289);
    assume {:nonnull} out_Tmp_1289 != 0;
    assume out_Tmp_1289 > 0;
    havoc out_pollIrql_14;
    call {:si_unique_call 3248} out_vslice_dummy_var_742 := CyzUpdateAndSwitchToUser(in_updateChar);
    call {:si_unique_call 3249} sdv_KeReleaseSpinLock(0, out_pollIrql_14);
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    goto anon76_Else;

  anon76_Else:
    call {:si_unique_call 3244} IoReleaseCancelSpinLock(out_oldIrql_10);
    call {:si_unique_call 3245} sdv_KeReleaseSpinLock(0, out_controlIrql);
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    havoc out_Tmp_1286;
    assume {:nonnull} out_Tmp_1286 != 0;
    assume out_Tmp_1286 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L38;

  anon87_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L38;

  anon75_Then:
    assume {:partition} out_crunchDownToOne == 0;
    goto L133;

  anon84_Then:
    goto L95;

  anon74_Then:
    assume {:partition} out_os2ssreturn == 0;
    goto L112;

  anon73_Then:
    goto L95;

  anon71_Then:
    assume {:partition} out_useTotalTimer == 0;
    goto L85;

  anon70_Then:
    goto L78;

  L78:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    out_crunchDownToOne := 1;
    out_multiplierVal := 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L84;

  anon80_Then:
    goto L84;

  anon69_Then:
    goto L84;

  anon68_Then:
    goto L78;

  anon66_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    out_returnWithWhatsPresent := 1;
    goto L84;

  anon67_Then:
    goto L77;

  anon63_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    goto L205;

  L205:
    out_useTotalTimer := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L84;

  anon65_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto L205;

  anon81_Then:
    goto L84;

  anon82_Then:
    assume {:nonnull} in_Extension_58 != 0;
    assume in_Extension_58 > 0;
    goto L67;

  anon64_Then:
    goto L67;

  anon62_Then:
    goto L67;
}



procedure {:LoopProcedure} CyzStartRead_loop_L24(in_localStatus_1: int, in_Tmp_1282: int, in_totalTime: int, in_os2ssreturn: int, in_timeoutsForIrp: int, in_updateChar: int, in_setFirstStatus: int, in_Tmp_1284: int, in_useTotalTimer: int, in_newIrp_1: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_930: int, in_sdv_931: int, in_oldIrql_10: int, in_Tmp_1285: int, in_sdv_932: int, in_constantVal: int, in_controlIrql: int, in_Tmp_1286: int, in_Tmp_1288: int, in_returnWithWhatsPresent: int, in_Tmp_1289: int, in_Tmp_1290: int, in_pollIrql_14: int, in_useIntervalTimer: int, in_firstStatus: int, in_sdv_939: int, in_Extension_58: int, in_boogieTmp: int, in_vslice_dummy_var_740: int, in_vslice_dummy_var_741: int, in_vslice_dummy_var_742: int, in_vslice_dummy_var_745: int) returns (out_localStatus_1: int, out_Tmp_1282: int, out_os2ssreturn: int, out_setFirstStatus: int, out_Tmp_1284: int, out_useTotalTimer: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_930: int, out_sdv_931: int, out_oldIrql_10: int, out_Tmp_1285: int, out_sdv_932: int, out_constantVal: int, out_controlIrql: int, out_Tmp_1286: int, out_Tmp_1288: int, out_returnWithWhatsPresent: int, out_Tmp_1289: int, out_Tmp_1290: int, out_pollIrql_14: int, out_useIntervalTimer: int, out_firstStatus: int, out_sdv_939: int, out_boogieTmp: int, out_vslice_dummy_var_740: int, out_vslice_dummy_var_741: int, out_vslice_dummy_var_742: int, out_vslice_dummy_var_745: int);
  modifies alloc, queuedWithoutMarking, locked;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_localStatus_1 == 0 || out_localStatus_1 == in_localStatus_1;
  free ensures {:va_keep} out_os2ssreturn == 0 || out_os2ssreturn == 1 || out_os2ssreturn == in_os2ssreturn;
  free ensures {:va_keep} out_setFirstStatus == 1 || out_setFirstStatus == in_setFirstStatus;
  free ensures {:va_keep} out_useTotalTimer == 0 || out_useTotalTimer == 1 || out_useTotalTimer == in_useTotalTimer;
  free ensures {:va_keep} out_crunchDownToOne == 0 || out_crunchDownToOne == 1 || out_crunchDownToOne == in_crunchDownToOne;
  free ensures {:va_keep} out_returnWithWhatsPresent == 1 || out_returnWithWhatsPresent == 0 || out_returnWithWhatsPresent == in_returnWithWhatsPresent;
  free ensures {:va_keep} out_useIntervalTimer == 1 || out_useIntervalTimer == 0 || out_useIntervalTimer == in_useIntervalTimer;
  free ensures {:va_keep} out_firstStatus == 0 || out_firstStatus == -1073741536 || out_firstStatus == in_firstStatus;
  free ensures {:va_keep} out_vslice_dummy_var_740 == 1 || out_vslice_dummy_var_740 == 0 || out_vslice_dummy_var_740 == in_vslice_dummy_var_740;
  free ensures {:va_keep} out_vslice_dummy_var_741 == 0 || out_vslice_dummy_var_741 == in_vslice_dummy_var_741;
  free ensures {:va_keep} out_vslice_dummy_var_742 == 0 || out_vslice_dummy_var_742 == in_vslice_dummy_var_742;
  free ensures {:va_keep} out_vslice_dummy_var_745 == 1 || out_vslice_dummy_var_745 == 0 || out_vslice_dummy_var_745 == in_vslice_dummy_var_745;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#0_loop_L183(in_Tmp_977: int, in_Tmp_997: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1027: int) returns (out_Tmp_977: int, out_Tmp_997: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_1027: int)
{

  entry:
    out_Tmp_977, out_Tmp_997, out_numOfBytes, out_tx_6, out_Tmp_1027 := in_Tmp_977, in_Tmp_997, in_numOfBytes, in_tx_6, in_Tmp_1027;
    goto L183, exit;

  exit:
    return;

  L183:
    out_Tmp_997 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon170_Else;

  anon170_Else:
    assume {:partition} out_Tmp_997 != 0;
    out_Tmp_977 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1027;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    goto anon170_Else_dummy;

  anon170_Else_dummy:
    call {:si_unique_call 3272} {:si_old_unique_call 1} out_Tmp_977, out_Tmp_997, out_numOfBytes, out_tx_6, out_Tmp_1027 := CyzTxStart#0_loop_L183(out_Tmp_977, out_Tmp_997, out_numOfBytes, in_Extension_54, out_tx_6, out_Tmp_1027);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L183(in_Tmp_977: int, in_Tmp_997: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1027: int) returns (out_Tmp_977: int, out_Tmp_997: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_1027: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#0_loop_L182(in_numOfLongs: int, in_Tmp_982: int, in_Tmp_993: int, in_Tmp_1004: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1026: int) returns (out_numOfLongs: int, out_Tmp_982: int, out_Tmp_993: int, out_Tmp_1004: int, out_tx_6: int, out_Tmp_1026: int)
{

  entry:
    out_numOfLongs, out_Tmp_982, out_Tmp_993, out_Tmp_1004, out_tx_6, out_Tmp_1026 := in_numOfLongs, in_Tmp_982, in_Tmp_993, in_Tmp_1004, in_tx_6, in_Tmp_1026;
    goto L182, exit;

  exit:
    return;

  L182:
    out_Tmp_993 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon169_Else;

  anon169_Else:
    assume {:partition} out_Tmp_993 != 0;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1026;
    assume {:nonnull} out_Tmp_1026 != 0;
    assume out_Tmp_1026 > 0;
    out_Tmp_1004 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_982;
    out_tx_6 := out_tx_6 + 4;
    goto anon169_Else_dummy;

  anon169_Else_dummy:
    call {:si_unique_call 3273} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_982, out_Tmp_993, out_Tmp_1004, out_tx_6, out_Tmp_1026 := CyzTxStart#0_loop_L182(out_numOfLongs, out_Tmp_982, out_Tmp_993, out_Tmp_1004, in_Extension_54, out_tx_6, out_Tmp_1026);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L182(in_numOfLongs: int, in_Tmp_982: int, in_Tmp_993: int, in_Tmp_1004: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1026: int) returns (out_numOfLongs: int, out_Tmp_982: int, out_Tmp_993: int, out_Tmp_1004: int, out_tx_6: int, out_Tmp_1026: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#0_loop_L171(in_Tmp_1001: int, in_Tmp_1009: int, in_Extension_54: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_1001: int, out_Tmp_1009: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_1001, out_Tmp_1009, out_tx_6, out_amount1 := in_Tmp_1001, in_Tmp_1009, in_tx_6, in_amount1;
    goto L171, exit;

  exit:
    return;

  L171:
    goto anon150_Else;

  anon150_Else:
    assume {:partition} out_amount1 != 0;
    goto anon151_Else;

  anon151_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_1001 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1009;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon151_Else_dummy;

  anon151_Else_dummy:
    call {:si_unique_call 3274} {:si_old_unique_call 1} out_Tmp_1001, out_Tmp_1009, out_tx_6, out_amount1 := CyzTxStart#0_loop_L171(out_Tmp_1001, out_Tmp_1009, in_Extension_54, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L171(in_Tmp_1001: int, in_Tmp_1009: int, in_Extension_54: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_1001: int, out_Tmp_1009: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#0_loop_L210(in_Tmp_974: int, in_Tmp_994: int, in_Tmp_1013: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int) returns (out_Tmp_974: int, out_Tmp_994: int, out_Tmp_1013: int, out_numOfBytes: int, out_tx_6: int)
{

  entry:
    out_Tmp_974, out_Tmp_994, out_Tmp_1013, out_numOfBytes, out_tx_6 := in_Tmp_974, in_Tmp_994, in_Tmp_1013, in_numOfBytes, in_tx_6;
    goto L210, exit;

  exit:
    return;

  L210:
    out_Tmp_974 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon172_Else;

  anon172_Else:
    assume {:partition} out_Tmp_974 != 0;
    out_Tmp_1013 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_994;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    goto anon172_Else_dummy;

  anon172_Else_dummy:
    call {:si_unique_call 3275} {:si_old_unique_call 1} out_Tmp_974, out_Tmp_994, out_Tmp_1013, out_numOfBytes, out_tx_6 := CyzTxStart#0_loop_L210(out_Tmp_974, out_Tmp_994, out_Tmp_1013, out_numOfBytes, in_Extension_54, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L210(in_Tmp_974: int, in_Tmp_994: int, in_Tmp_1013: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int) returns (out_Tmp_974: int, out_Tmp_994: int, out_Tmp_1013: int, out_numOfBytes: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#0_loop_L209(in_numOfLongs: int, in_Tmp_988: int, in_Tmp_1012: int, in_Extension_54: int, in_Tmp_1023: int, in_tx_6: int, in_Tmp_1034: int) returns (out_numOfLongs: int, out_Tmp_988: int, out_Tmp_1012: int, out_Tmp_1023: int, out_tx_6: int, out_Tmp_1034: int)
{

  entry:
    out_numOfLongs, out_Tmp_988, out_Tmp_1012, out_Tmp_1023, out_tx_6, out_Tmp_1034 := in_numOfLongs, in_Tmp_988, in_Tmp_1012, in_Tmp_1023, in_tx_6, in_Tmp_1034;
    goto L209, exit;

  exit:
    return;

  L209:
    out_Tmp_1012 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon171_Else;

  anon171_Else:
    assume {:partition} out_Tmp_1012 != 0;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_988;
    assume {:nonnull} out_Tmp_988 != 0;
    assume out_Tmp_988 > 0;
    out_Tmp_1023 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1034;
    out_tx_6 := out_tx_6 + 4;
    goto anon171_Else_dummy;

  anon171_Else_dummy:
    call {:si_unique_call 3276} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_988, out_Tmp_1012, out_Tmp_1023, out_tx_6, out_Tmp_1034 := CyzTxStart#0_loop_L209(out_numOfLongs, out_Tmp_988, out_Tmp_1012, in_Extension_54, out_Tmp_1023, out_tx_6, out_Tmp_1034);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L209(in_numOfLongs: int, in_Tmp_988: int, in_Tmp_1012: int, in_Extension_54: int, in_Tmp_1023: int, in_tx_6: int, in_Tmp_1034: int) returns (out_numOfLongs: int, out_Tmp_988: int, out_Tmp_1012: int, out_Tmp_1023: int, out_tx_6: int, out_Tmp_1034: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#0_loop_L254(in_Tmp_996: int, in_Tmp_1016: int, in_numOfBytes: int, in_Tmp_1017: int, in_Extension_54: int, in_tx_6: int) returns (out_Tmp_996: int, out_Tmp_1016: int, out_numOfBytes: int, out_Tmp_1017: int, out_tx_6: int)
{

  entry:
    out_Tmp_996, out_Tmp_1016, out_numOfBytes, out_Tmp_1017, out_tx_6 := in_Tmp_996, in_Tmp_1016, in_numOfBytes, in_Tmp_1017, in_tx_6;
    goto L254, exit;

  exit:
    return;

  L254:
    out_Tmp_1017 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon175_Else;

  anon175_Else:
    assume {:partition} out_Tmp_1017 != 0;
    out_Tmp_996 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1016;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    goto anon175_Else_dummy;

  anon175_Else_dummy:
    call {:si_unique_call 3277} {:si_old_unique_call 1} out_Tmp_996, out_Tmp_1016, out_numOfBytes, out_Tmp_1017, out_tx_6 := CyzTxStart#0_loop_L254(out_Tmp_996, out_Tmp_1016, out_numOfBytes, out_Tmp_1017, in_Extension_54, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L254(in_Tmp_996: int, in_Tmp_1016: int, in_numOfBytes: int, in_Tmp_1017: int, in_Extension_54: int, in_tx_6: int) returns (out_Tmp_996: int, out_Tmp_1016: int, out_numOfBytes: int, out_Tmp_1017: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#0_loop_L253(in_Tmp_976: int, in_numOfLongs: int, in_Tmp_980: int, in_Tmp_991: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1038: int) returns (out_Tmp_976: int, out_numOfLongs: int, out_Tmp_980: int, out_Tmp_991: int, out_tx_6: int, out_Tmp_1038: int)
{

  entry:
    out_Tmp_976, out_numOfLongs, out_Tmp_980, out_Tmp_991, out_tx_6, out_Tmp_1038 := in_Tmp_976, in_numOfLongs, in_Tmp_980, in_Tmp_991, in_tx_6, in_Tmp_1038;
    goto L253, exit;

  exit:
    return;

  L253:
    out_Tmp_980 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon174_Else;

  anon174_Else:
    assume {:partition} out_Tmp_980 != 0;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_991;
    assume {:nonnull} out_Tmp_991 != 0;
    assume out_Tmp_991 > 0;
    out_Tmp_976 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1038;
    out_tx_6 := out_tx_6 + 4;
    goto anon174_Else_dummy;

  anon174_Else_dummy:
    call {:si_unique_call 3278} {:si_old_unique_call 1} out_Tmp_976, out_numOfLongs, out_Tmp_980, out_Tmp_991, out_tx_6, out_Tmp_1038 := CyzTxStart#0_loop_L253(out_Tmp_976, out_numOfLongs, out_Tmp_980, out_Tmp_991, in_Extension_54, out_tx_6, out_Tmp_1038);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L253(in_Tmp_976: int, in_numOfLongs: int, in_Tmp_980: int, in_Tmp_991: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1038: int) returns (out_Tmp_976: int, out_numOfLongs: int, out_Tmp_980: int, out_Tmp_991: int, out_tx_6: int, out_Tmp_1038: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#0_loop_L242(in_Tmp_986: int, in_Extension_54: int, in_Tmp_1021: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_986: int, out_Tmp_1021: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_986, out_Tmp_1021, out_tx_6, out_amount1 := in_Tmp_986, in_Tmp_1021, in_tx_6, in_amount1;
    goto L242, exit;

  exit:
    return;

  L242:
    goto anon156_Else;

  anon156_Else:
    assume {:partition} out_amount1 != 0;
    goto anon157_Else;

  anon157_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_1021 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_986;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon157_Else_dummy;

  anon157_Else_dummy:
    call {:si_unique_call 3279} {:si_old_unique_call 1} out_Tmp_986, out_Tmp_1021, out_tx_6, out_amount1 := CyzTxStart#0_loop_L242(out_Tmp_986, in_Extension_54, out_Tmp_1021, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L242(in_Tmp_986: int, in_Extension_54: int, in_Tmp_1021: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_986: int, out_Tmp_1021: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#0_loop_L278(in_Tmp_1006: int, in_Tmp_1007: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1029: int) returns (out_Tmp_1006: int, out_Tmp_1007: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_1029: int)
{

  entry:
    out_Tmp_1006, out_Tmp_1007, out_numOfBytes, out_tx_6, out_Tmp_1029 := in_Tmp_1006, in_Tmp_1007, in_numOfBytes, in_tx_6, in_Tmp_1029;
    goto L278, exit;

  exit:
    return;

  L278:
    out_Tmp_1006 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon177_Else;

  anon177_Else:
    assume {:partition} out_Tmp_1006 != 0;
    out_Tmp_1029 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1007;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    goto anon177_Else_dummy;

  anon177_Else_dummy:
    call {:si_unique_call 3280} {:si_old_unique_call 1} out_Tmp_1006, out_Tmp_1007, out_numOfBytes, out_tx_6, out_Tmp_1029 := CyzTxStart#0_loop_L278(out_Tmp_1006, out_Tmp_1007, out_numOfBytes, in_Extension_54, out_tx_6, out_Tmp_1029);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L278(in_Tmp_1006: int, in_Tmp_1007: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1029: int) returns (out_Tmp_1006: int, out_Tmp_1007: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_1029: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#0_loop_L277(in_numOfLongs: int, in_Tmp_987: int, in_Tmp_1010: int, in_Tmp_1015: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1024: int) returns (out_numOfLongs: int, out_Tmp_987: int, out_Tmp_1010: int, out_Tmp_1015: int, out_tx_6: int, out_Tmp_1024: int)
{

  entry:
    out_numOfLongs, out_Tmp_987, out_Tmp_1010, out_Tmp_1015, out_tx_6, out_Tmp_1024 := in_numOfLongs, in_Tmp_987, in_Tmp_1010, in_Tmp_1015, in_tx_6, in_Tmp_1024;
    goto L277, exit;

  exit:
    return;

  L277:
    out_Tmp_1024 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon176_Else;

  anon176_Else:
    assume {:partition} out_Tmp_1024 != 0;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1010;
    assume {:nonnull} out_Tmp_1010 != 0;
    assume out_Tmp_1010 > 0;
    out_Tmp_987 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1015;
    out_tx_6 := out_tx_6 + 4;
    goto anon176_Else_dummy;

  anon176_Else_dummy:
    call {:si_unique_call 3281} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_987, out_Tmp_1010, out_Tmp_1015, out_tx_6, out_Tmp_1024 := CyzTxStart#0_loop_L277(out_numOfLongs, out_Tmp_987, out_Tmp_1010, out_Tmp_1015, in_Extension_54, out_tx_6, out_Tmp_1024);
    return;
}



procedure {:LoopProcedure} CyzTxStart#0_loop_L277(in_numOfLongs: int, in_Tmp_987: int, in_Tmp_1010: int, in_Tmp_1015: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1024: int) returns (out_numOfLongs: int, out_Tmp_987: int, out_Tmp_1010: int, out_Tmp_1015: int, out_tx_6: int, out_Tmp_1024: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#1_loop_L183(in_Tmp_977: int, in_Tmp_997: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1027: int) returns (out_Tmp_977: int, out_Tmp_997: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_1027: int)
{

  entry:
    out_Tmp_977, out_Tmp_997, out_numOfBytes, out_tx_6, out_Tmp_1027 := in_Tmp_977, in_Tmp_997, in_numOfBytes, in_tx_6, in_Tmp_1027;
    goto L183, exit;

  exit:
    return;

  L183:
    out_Tmp_997 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon170_Else;

  anon170_Else:
    assume {:partition} out_Tmp_997 != 0;
    out_Tmp_977 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1027;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    goto anon170_Else_dummy;

  anon170_Else_dummy:
    call {:si_unique_call 3282} {:si_old_unique_call 1} out_Tmp_977, out_Tmp_997, out_numOfBytes, out_tx_6, out_Tmp_1027 := CyzTxStart#1_loop_L183(out_Tmp_977, out_Tmp_997, out_numOfBytes, in_Extension_54, out_tx_6, out_Tmp_1027);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L183(in_Tmp_977: int, in_Tmp_997: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1027: int) returns (out_Tmp_977: int, out_Tmp_997: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_1027: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#1_loop_L182(in_numOfLongs: int, in_Tmp_982: int, in_Tmp_993: int, in_Tmp_1004: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1026: int) returns (out_numOfLongs: int, out_Tmp_982: int, out_Tmp_993: int, out_Tmp_1004: int, out_tx_6: int, out_Tmp_1026: int)
{

  entry:
    out_numOfLongs, out_Tmp_982, out_Tmp_993, out_Tmp_1004, out_tx_6, out_Tmp_1026 := in_numOfLongs, in_Tmp_982, in_Tmp_993, in_Tmp_1004, in_tx_6, in_Tmp_1026;
    goto L182, exit;

  exit:
    return;

  L182:
    out_Tmp_993 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon169_Else;

  anon169_Else:
    assume {:partition} out_Tmp_993 != 0;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1026;
    assume {:nonnull} out_Tmp_1026 != 0;
    assume out_Tmp_1026 > 0;
    out_Tmp_1004 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_982;
    out_tx_6 := out_tx_6 + 4;
    goto anon169_Else_dummy;

  anon169_Else_dummy:
    call {:si_unique_call 3283} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_982, out_Tmp_993, out_Tmp_1004, out_tx_6, out_Tmp_1026 := CyzTxStart#1_loop_L182(out_numOfLongs, out_Tmp_982, out_Tmp_993, out_Tmp_1004, in_Extension_54, out_tx_6, out_Tmp_1026);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L182(in_numOfLongs: int, in_Tmp_982: int, in_Tmp_993: int, in_Tmp_1004: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1026: int) returns (out_numOfLongs: int, out_Tmp_982: int, out_Tmp_993: int, out_Tmp_1004: int, out_tx_6: int, out_Tmp_1026: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#1_loop_L171(in_Tmp_1001: int, in_Tmp_1009: int, in_Extension_54: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_1001: int, out_Tmp_1009: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_1001, out_Tmp_1009, out_tx_6, out_amount1 := in_Tmp_1001, in_Tmp_1009, in_tx_6, in_amount1;
    goto L171, exit;

  exit:
    return;

  L171:
    goto anon150_Else;

  anon150_Else:
    assume {:partition} out_amount1 != 0;
    goto anon151_Else;

  anon151_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_1001 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1009;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon151_Else_dummy;

  anon151_Else_dummy:
    call {:si_unique_call 3284} {:si_old_unique_call 1} out_Tmp_1001, out_Tmp_1009, out_tx_6, out_amount1 := CyzTxStart#1_loop_L171(out_Tmp_1001, out_Tmp_1009, in_Extension_54, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L171(in_Tmp_1001: int, in_Tmp_1009: int, in_Extension_54: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_1001: int, out_Tmp_1009: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#1_loop_L210(in_Tmp_974: int, in_Tmp_994: int, in_Tmp_1013: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int) returns (out_Tmp_974: int, out_Tmp_994: int, out_Tmp_1013: int, out_numOfBytes: int, out_tx_6: int)
{

  entry:
    out_Tmp_974, out_Tmp_994, out_Tmp_1013, out_numOfBytes, out_tx_6 := in_Tmp_974, in_Tmp_994, in_Tmp_1013, in_numOfBytes, in_tx_6;
    goto L210, exit;

  exit:
    return;

  L210:
    out_Tmp_974 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon172_Else;

  anon172_Else:
    assume {:partition} out_Tmp_974 != 0;
    out_Tmp_1013 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_994;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    goto anon172_Else_dummy;

  anon172_Else_dummy:
    call {:si_unique_call 3285} {:si_old_unique_call 1} out_Tmp_974, out_Tmp_994, out_Tmp_1013, out_numOfBytes, out_tx_6 := CyzTxStart#1_loop_L210(out_Tmp_974, out_Tmp_994, out_Tmp_1013, out_numOfBytes, in_Extension_54, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L210(in_Tmp_974: int, in_Tmp_994: int, in_Tmp_1013: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int) returns (out_Tmp_974: int, out_Tmp_994: int, out_Tmp_1013: int, out_numOfBytes: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#1_loop_L209(in_numOfLongs: int, in_Tmp_988: int, in_Tmp_1012: int, in_Extension_54: int, in_Tmp_1023: int, in_tx_6: int, in_Tmp_1034: int) returns (out_numOfLongs: int, out_Tmp_988: int, out_Tmp_1012: int, out_Tmp_1023: int, out_tx_6: int, out_Tmp_1034: int)
{

  entry:
    out_numOfLongs, out_Tmp_988, out_Tmp_1012, out_Tmp_1023, out_tx_6, out_Tmp_1034 := in_numOfLongs, in_Tmp_988, in_Tmp_1012, in_Tmp_1023, in_tx_6, in_Tmp_1034;
    goto L209, exit;

  exit:
    return;

  L209:
    out_Tmp_1012 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon171_Else;

  anon171_Else:
    assume {:partition} out_Tmp_1012 != 0;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_988;
    assume {:nonnull} out_Tmp_988 != 0;
    assume out_Tmp_988 > 0;
    out_Tmp_1023 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1034;
    out_tx_6 := out_tx_6 + 4;
    goto anon171_Else_dummy;

  anon171_Else_dummy:
    call {:si_unique_call 3286} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_988, out_Tmp_1012, out_Tmp_1023, out_tx_6, out_Tmp_1034 := CyzTxStart#1_loop_L209(out_numOfLongs, out_Tmp_988, out_Tmp_1012, in_Extension_54, out_Tmp_1023, out_tx_6, out_Tmp_1034);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L209(in_numOfLongs: int, in_Tmp_988: int, in_Tmp_1012: int, in_Extension_54: int, in_Tmp_1023: int, in_tx_6: int, in_Tmp_1034: int) returns (out_numOfLongs: int, out_Tmp_988: int, out_Tmp_1012: int, out_Tmp_1023: int, out_tx_6: int, out_Tmp_1034: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#1_loop_L254(in_Tmp_996: int, in_Tmp_1016: int, in_numOfBytes: int, in_Tmp_1017: int, in_Extension_54: int, in_tx_6: int) returns (out_Tmp_996: int, out_Tmp_1016: int, out_numOfBytes: int, out_Tmp_1017: int, out_tx_6: int)
{

  entry:
    out_Tmp_996, out_Tmp_1016, out_numOfBytes, out_Tmp_1017, out_tx_6 := in_Tmp_996, in_Tmp_1016, in_numOfBytes, in_Tmp_1017, in_tx_6;
    goto L254, exit;

  exit:
    return;

  L254:
    out_Tmp_1017 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon175_Else;

  anon175_Else:
    assume {:partition} out_Tmp_1017 != 0;
    out_Tmp_996 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1016;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    goto anon175_Else_dummy;

  anon175_Else_dummy:
    call {:si_unique_call 3287} {:si_old_unique_call 1} out_Tmp_996, out_Tmp_1016, out_numOfBytes, out_Tmp_1017, out_tx_6 := CyzTxStart#1_loop_L254(out_Tmp_996, out_Tmp_1016, out_numOfBytes, out_Tmp_1017, in_Extension_54, out_tx_6);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L254(in_Tmp_996: int, in_Tmp_1016: int, in_numOfBytes: int, in_Tmp_1017: int, in_Extension_54: int, in_tx_6: int) returns (out_Tmp_996: int, out_Tmp_1016: int, out_numOfBytes: int, out_Tmp_1017: int, out_tx_6: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#1_loop_L253(in_Tmp_976: int, in_numOfLongs: int, in_Tmp_980: int, in_Tmp_991: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1038: int) returns (out_Tmp_976: int, out_numOfLongs: int, out_Tmp_980: int, out_Tmp_991: int, out_tx_6: int, out_Tmp_1038: int)
{

  entry:
    out_Tmp_976, out_numOfLongs, out_Tmp_980, out_Tmp_991, out_tx_6, out_Tmp_1038 := in_Tmp_976, in_numOfLongs, in_Tmp_980, in_Tmp_991, in_tx_6, in_Tmp_1038;
    goto L253, exit;

  exit:
    return;

  L253:
    out_Tmp_980 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon174_Else;

  anon174_Else:
    assume {:partition} out_Tmp_980 != 0;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_991;
    assume {:nonnull} out_Tmp_991 != 0;
    assume out_Tmp_991 > 0;
    out_Tmp_976 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1038;
    out_tx_6 := out_tx_6 + 4;
    goto anon174_Else_dummy;

  anon174_Else_dummy:
    call {:si_unique_call 3288} {:si_old_unique_call 1} out_Tmp_976, out_numOfLongs, out_Tmp_980, out_Tmp_991, out_tx_6, out_Tmp_1038 := CyzTxStart#1_loop_L253(out_Tmp_976, out_numOfLongs, out_Tmp_980, out_Tmp_991, in_Extension_54, out_tx_6, out_Tmp_1038);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L253(in_Tmp_976: int, in_numOfLongs: int, in_Tmp_980: int, in_Tmp_991: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1038: int) returns (out_Tmp_976: int, out_numOfLongs: int, out_Tmp_980: int, out_Tmp_991: int, out_tx_6: int, out_Tmp_1038: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#1_loop_L242(in_Tmp_986: int, in_Extension_54: int, in_Tmp_1021: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_986: int, out_Tmp_1021: int, out_tx_6: int, out_amount1: int)
{

  entry:
    out_Tmp_986, out_Tmp_1021, out_tx_6, out_amount1 := in_Tmp_986, in_Tmp_1021, in_tx_6, in_amount1;
    goto L242, exit;

  exit:
    return;

  L242:
    goto anon156_Else;

  anon156_Else:
    assume {:partition} out_amount1 != 0;
    goto anon157_Else;

  anon157_Else:
    assume {:partition} BAND(out_tx_6, 7) != 0;
    out_Tmp_1021 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_986;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_amount1 := out_amount1 - 1;
    goto anon157_Else_dummy;

  anon157_Else_dummy:
    call {:si_unique_call 3289} {:si_old_unique_call 1} out_Tmp_986, out_Tmp_1021, out_tx_6, out_amount1 := CyzTxStart#1_loop_L242(out_Tmp_986, in_Extension_54, out_Tmp_1021, out_tx_6, out_amount1);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L242(in_Tmp_986: int, in_Extension_54: int, in_Tmp_1021: int, in_tx_6: int, in_amount1: int) returns (out_Tmp_986: int, out_Tmp_1021: int, out_tx_6: int, out_amount1: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#1_loop_L278(in_Tmp_1006: int, in_Tmp_1007: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1029: int) returns (out_Tmp_1006: int, out_Tmp_1007: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_1029: int)
{

  entry:
    out_Tmp_1006, out_Tmp_1007, out_numOfBytes, out_tx_6, out_Tmp_1029 := in_Tmp_1006, in_Tmp_1007, in_numOfBytes, in_tx_6, in_Tmp_1029;
    goto L278, exit;

  exit:
    return;

  L278:
    out_Tmp_1006 := out_numOfBytes;
    out_numOfBytes := out_numOfBytes - 1;
    goto anon177_Else;

  anon177_Else:
    assume {:partition} out_Tmp_1006 != 0;
    out_Tmp_1029 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1007;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    out_tx_6 := out_tx_6 + 1;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    goto anon177_Else_dummy;

  anon177_Else_dummy:
    call {:si_unique_call 3290} {:si_old_unique_call 1} out_Tmp_1006, out_Tmp_1007, out_numOfBytes, out_tx_6, out_Tmp_1029 := CyzTxStart#1_loop_L278(out_Tmp_1006, out_Tmp_1007, out_numOfBytes, in_Extension_54, out_tx_6, out_Tmp_1029);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L278(in_Tmp_1006: int, in_Tmp_1007: int, in_numOfBytes: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1029: int) returns (out_Tmp_1006: int, out_Tmp_1007: int, out_numOfBytes: int, out_tx_6: int, out_Tmp_1029: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzTxStart#1_loop_L277(in_numOfLongs: int, in_Tmp_987: int, in_Tmp_1010: int, in_Tmp_1015: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1024: int) returns (out_numOfLongs: int, out_Tmp_987: int, out_Tmp_1010: int, out_Tmp_1015: int, out_tx_6: int, out_Tmp_1024: int)
{

  entry:
    out_numOfLongs, out_Tmp_987, out_Tmp_1010, out_Tmp_1015, out_tx_6, out_Tmp_1024 := in_numOfLongs, in_Tmp_987, in_Tmp_1010, in_Tmp_1015, in_tx_6, in_Tmp_1024;
    goto L277, exit;

  exit:
    return;

  L277:
    out_Tmp_1024 := out_numOfLongs;
    out_numOfLongs := out_numOfLongs - 1;
    goto anon176_Else;

  anon176_Else:
    assume {:partition} out_Tmp_1024 != 0;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1010;
    assume {:nonnull} out_Tmp_1010 != 0;
    assume out_Tmp_1010 > 0;
    out_Tmp_987 := out_tx_6;
    assume {:nonnull} in_Extension_54 != 0;
    assume in_Extension_54 > 0;
    havoc out_Tmp_1015;
    out_tx_6 := out_tx_6 + 4;
    goto anon176_Else_dummy;

  anon176_Else_dummy:
    call {:si_unique_call 3291} {:si_old_unique_call 1} out_numOfLongs, out_Tmp_987, out_Tmp_1010, out_Tmp_1015, out_tx_6, out_Tmp_1024 := CyzTxStart#1_loop_L277(out_numOfLongs, out_Tmp_987, out_Tmp_1010, out_Tmp_1015, in_Extension_54, out_tx_6, out_Tmp_1024);
    return;
}



procedure {:LoopProcedure} CyzTxStart#1_loop_L277(in_numOfLongs: int, in_Tmp_987: int, in_Tmp_1010: int, in_Tmp_1015: int, in_Extension_54: int, in_tx_6: int, in_Tmp_1024: int) returns (out_numOfLongs: int, out_Tmp_987: int, out_Tmp_1010: int, out_Tmp_1015: int, out_tx_6: int, out_Tmp_1024: int);
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzStartWrite#0_loop_L15(in_Tmp_874: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_876: int, in_sdv_742: int, in_OldIrql_8: int, in_NewIrp_3: int, in_sdv_745: int, in_Tmp_878: int, in_Timeouts_1: int, in_Tmp_880: int, in_Extension_40: int) returns (out_Tmp_874: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_876: int, out_sdv_742: int, out_OldIrql_8: int, out_sdv_745: int, out_Tmp_878: int, out_Tmp_880: int)
{
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;

  entry:
    out_Tmp_874, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_876, out_sdv_742, out_OldIrql_8, out_sdv_745, out_Tmp_878, out_Tmp_880 := in_Tmp_874, in_FirstStatus, in_SetFirstStatus, in_UseATimer_1, in_IrpSp_1, in_Tmp_876, in_sdv_742, in_OldIrql_8, in_sdv_745, in_Tmp_878, in_Tmp_880;
    goto L15, exit;

  exit:
    return;

  L15:
    call {:si_unique_call 3292} out_Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    call {:si_unique_call 3293} IoAcquireCancelSpinLock(out_Tmp_874);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    havoc out_OldIrql_8;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc vslice_dummy_var_267;
    call {:si_unique_call 3304} out_sdv_742 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_267);
    assume {:nonnull} out_sdv_742 != 0;
    assume out_sdv_742 > 0;
    goto anon22_Then;

  anon22_Then:
    call {:si_unique_call 3302} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;

  L41:
    out_UseATimer_1 := 0;
    call {:si_unique_call 3299} out_Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    call {:si_unique_call 3300} sdv_KeAcquireSpinLock(0, out_Tmp_874);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    havoc out_OldIrql_8;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 3301} sdv_KeReleaseSpinLock(0, out_OldIrql_8);
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L52;

  L52:
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc vslice_dummy_var_268;
    call {:si_unique_call 3305} out_IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_268);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    havoc out_Tmp_880;
    goto L60;

  L60:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc vslice_dummy_var_266;
    call {:si_unique_call 3296} out_sdv_745 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_266);
    assume {:nonnull} out_sdv_745 != 0;
    assume out_sdv_745 > 0;
    call {:si_unique_call 3297} out_Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    call {:si_unique_call 3298} IoAcquireCancelSpinLock(out_Tmp_874);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    havoc out_OldIrql_8;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc out_Tmp_876;
    assume {:nonnull} out_Tmp_876 != 0;
    assume out_Tmp_876 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 3295} IoReleaseCancelSpinLock(out_OldIrql_8);
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc out_Tmp_878;
    assume {:nonnull} out_Tmp_878 != 0;
    assume out_Tmp_878 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    call {:si_unique_call 3294} CyzGetNextWrite(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(in_Extension_40), WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_40), in_NewIrp_3, 1, in_Extension_40);
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon26_Then;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    call {:si_unique_call 3306} {:si_old_unique_call 1} out_Tmp_874, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_876, out_sdv_742, out_OldIrql_8, out_sdv_745, out_Tmp_878, out_Tmp_880 := CyzStartWrite#0_loop_L15(out_Tmp_874, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_876, out_sdv_742, out_OldIrql_8, in_NewIrp_3, out_sdv_745, out_Tmp_878, in_Timeouts_1, out_Tmp_880, in_Extension_40);
    return;

  anon29_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L76;

  anon27_Then:
    out_Tmp_880 := 1;
    goto L60;

  anon23_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L61;

  anon24_Then:
    goto L52;

  anon21_Then:
    call {:si_unique_call 3303} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;
}



procedure {:LoopProcedure} CyzStartWrite#0_loop_L15(in_Tmp_874: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_876: int, in_sdv_742: int, in_OldIrql_8: int, in_NewIrp_3: int, in_sdv_745: int, in_Tmp_878: int, in_Timeouts_1: int, in_Tmp_880: int, in_Extension_40: int) returns (out_Tmp_874: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_876: int, out_sdv_742: int, out_OldIrql_8: int, out_sdv_745: int, out_Tmp_878: int, out_Tmp_880: int);
  modifies alloc, locked, queuedWithoutMarking, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures {:va_keep} out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures {:va_keep} out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation CyzStartWrite#1_loop_L15(in_Tmp_874: int, in_s_p_e_c_i_a_l_21: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_876: int, in_sdv_742: int, in_OldIrql_8: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_23: int, in_sdv_744: int, in_sdv_745: int, in_Tmp_878: int, in_Tmp_879: int, in_Timeouts_1: int, in_Tmp_880: int, in_Extension_40: int) returns (out_Tmp_874: int, out_s_p_e_c_i_a_l_21: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_876: int, out_sdv_742: int, out_OldIrql_8: int, out_s_p_e_c_i_a_l_23: int, out_sdv_744: int, out_sdv_745: int, out_Tmp_878: int, out_Tmp_879: int, out_Tmp_880: int)
{
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;

  entry:
    out_Tmp_874, out_s_p_e_c_i_a_l_21, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_876, out_sdv_742, out_OldIrql_8, out_s_p_e_c_i_a_l_23, out_sdv_744, out_sdv_745, out_Tmp_878, out_Tmp_879, out_Tmp_880 := in_Tmp_874, in_s_p_e_c_i_a_l_21, in_FirstStatus, in_SetFirstStatus, in_UseATimer_1, in_IrpSp_1, in_Tmp_876, in_sdv_742, in_OldIrql_8, in_s_p_e_c_i_a_l_23, in_sdv_744, in_sdv_745, in_Tmp_878, in_Tmp_879, in_Tmp_880;
    goto L15, exit;

  exit:
    return;

  L15:
    call {:si_unique_call 3307} out_Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    call {:si_unique_call 3308} IoAcquireCancelSpinLock(out_Tmp_874);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    havoc out_OldIrql_8;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc vslice_dummy_var_271;
    call {:si_unique_call 3321} out_sdv_742 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_271);
    assume {:nonnull} out_sdv_742 != 0;
    assume out_sdv_742 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    out_s_p_e_c_i_a_l_23 := 16;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc vslice_dummy_var_270;
    call {:si_unique_call 3317} out_sdv_744 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_270);
    assume {:nonnull} out_sdv_744 != 0;
    assume out_sdv_744 > 0;
    out_s_p_e_c_i_a_l_21 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_744)));
    assume {:nonnull} out_s_p_e_c_i_a_l_21 != 0;
    assume out_s_p_e_c_i_a_l_21 > 0;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc out_Tmp_879;
    assume {:nonnull} out_Tmp_879 != 0;
    assume out_Tmp_879 > 0;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    call {:si_unique_call 3318} CyzTryToCompleteCurrent#0(in_Extension_40, li2bplFunctionConstant195, out_OldIrql_8, -1073741816, CurrentXoffIrp__CYZ_DEVICE_EXTENSION(in_Extension_40), 0, 0, XoffCountTimer__CYZ_DEVICE_EXTENSION(in_Extension_40), 0, 0, 16);
    goto L41;

  L41:
    out_UseATimer_1 := 0;
    call {:si_unique_call 3314} out_Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    call {:si_unique_call 3315} sdv_KeAcquireSpinLock(0, out_Tmp_874);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    havoc out_OldIrql_8;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 3316} sdv_KeReleaseSpinLock(0, out_OldIrql_8);
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L52;

  L52:
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc vslice_dummy_var_272;
    call {:si_unique_call 3322} out_IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_272);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    havoc out_Tmp_880;
    goto L60;

  L60:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L61;

  L61:
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc vslice_dummy_var_269;
    call {:si_unique_call 3311} out_sdv_745 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_269);
    assume {:nonnull} out_sdv_745 != 0;
    assume out_sdv_745 > 0;
    call {:si_unique_call 3312} out_Tmp_874 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    call {:si_unique_call 3313} IoAcquireCancelSpinLock(out_Tmp_874);
    assume {:nonnull} out_Tmp_874 != 0;
    assume out_Tmp_874 > 0;
    havoc out_OldIrql_8;
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc out_Tmp_876;
    assume {:nonnull} out_Tmp_876 != 0;
    assume out_Tmp_876 > 0;
    goto anon28_Else;

  anon28_Else:
    call {:si_unique_call 3310} IoReleaseCancelSpinLock(out_OldIrql_8);
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    havoc out_Tmp_878;
    assume {:nonnull} out_Tmp_878 != 0;
    assume out_Tmp_878 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L76;

  L76:
    assume {:nonnull} in_Extension_40 != 0;
    assume in_Extension_40 > 0;
    call {:si_unique_call 3309} CyzGetNextWrite(CurrentWriteIrp__CYZ_DEVICE_EXTENSION(in_Extension_40), WriteQueue__CYZ_DEVICE_EXTENSION(in_Extension_40), in_NewIrp_3, 1, in_Extension_40);
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon26_Then;

  anon26_Then:
    goto anon26_Then_dummy;

  anon26_Then_dummy:
    call {:si_unique_call 3323} {:si_old_unique_call 1} out_Tmp_874, out_s_p_e_c_i_a_l_21, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_876, out_sdv_742, out_OldIrql_8, out_s_p_e_c_i_a_l_23, out_sdv_744, out_sdv_745, out_Tmp_878, out_Tmp_879, out_Tmp_880 := CyzStartWrite#1_loop_L15(out_Tmp_874, out_s_p_e_c_i_a_l_21, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_876, out_sdv_742, out_OldIrql_8, in_NewIrp_3, out_s_p_e_c_i_a_l_23, out_sdv_744, out_sdv_745, out_Tmp_878, out_Tmp_879, in_Timeouts_1, out_Tmp_880, in_Extension_40);
    return;

  anon29_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L76;

  anon27_Then:
    out_Tmp_880 := 1;
    goto L60;

  anon23_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto L61;

  anon24_Then:
    goto L52;

  anon22_Then:
    call {:si_unique_call 3319} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;

  anon21_Then:
    call {:si_unique_call 3320} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L41;
}



procedure {:LoopProcedure} CyzStartWrite#1_loop_L15(in_Tmp_874: int, in_s_p_e_c_i_a_l_21: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_876: int, in_sdv_742: int, in_OldIrql_8: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_23: int, in_sdv_744: int, in_sdv_745: int, in_Tmp_878: int, in_Tmp_879: int, in_Timeouts_1: int, in_Tmp_880: int, in_Extension_40: int) returns (out_Tmp_874: int, out_s_p_e_c_i_a_l_21: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_876: int, out_sdv_742: int, out_OldIrql_8: int, out_s_p_e_c_i_a_l_23: int, out_sdv_744: int, out_sdv_745: int, out_Tmp_878: int, out_Tmp_879: int, out_Tmp_880: int);
  modifies alloc, locked, queuedWithoutMarking, markedPending, queued;
  free ensures {:va_keep} old(locked) == 0 ==> locked != 1;
  free ensures {:va_keep} old(markedPending) == 0 ==> markedPending != 1;
  free ensures {:va_keep} old(markedPending) == 1 ==> markedPending != 0;
  free ensures {:va_keep} old(queued) == 1 ==> queued != 0;
  free ensures {:va_keep} old(queuedWithoutMarking) == 1 ==> queuedWithoutMarking != 0;
  free ensures {:va_keep} old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> markedPending == old(markedPending);
  free ensures {:va_keep} queued == 1 || queued == old(queued);
  free ensures {:va_keep} locked == 0 || locked == old(locked);
  free ensures {:va_keep} markedPending == 1 || markedPending == old(markedPending);
  free ensures {:va_keep} queuedWithoutMarking == 1 || queuedWithoutMarking == old(queuedWithoutMarking);
  free ensures {:va_keep} out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures {:va_keep} out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures {:va_keep} out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures {:va_keep} out_s_p_e_c_i_a_l_23 == 16 || out_s_p_e_c_i_a_l_23 == in_s_p_e_c_i_a_l_23;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



procedure fakeMain() returns (Tmp_1173: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_S_0, stack_location, markedPending, queuedWithoutMarking, queued, locked, yogi_error;
  free ensures {:va_keep} old(yogi_error) == 0;
  free ensures {:va_keep} false || old(locked) == 0 || old(locked) == 1;
  free ensures {:va_keep} false || old(markedPending) == 0 || old(markedPending) == 1;
  free ensures {:va_keep} false || old(queued) == 1 || old(queued) == 0;
  free ensures {:va_keep} false || old(queuedWithoutMarking) == 1 || old(queuedWithoutMarking) == 0;
  free ensures {:va_keep} false || old(stack_location) == 0 || old(stack_location) == 1;
  free ensures {:va_keep} alloc >= old(alloc);
  free ensures {:va_keep} false || locked == 0 || locked == 1;
  free ensures {:va_keep} false || markedPending == 0 || markedPending == 1;
  free ensures {:va_keep} false || queued == 1 || queued == 0;
  free ensures {:va_keep} false || queuedWithoutMarking == 1 || queuedWithoutMarking == 0;
  free ensures {:va_keep} false || stack_location == 0 || stack_location == 1;



implementation {:entrypoint} fakeMain() returns (Tmp_1173: int, dup_assertVar: bool)
{

  start:
    call Tmp_1173, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


